unit.start("ld8ai ('LD A,I')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #0 af08d6f1-4bee-4557-9a48-072075db340b)");
unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #0 5be5c41b-5976-4581-b95e-e9d80bb0eb0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 fa748642-5b34-4fb5-a36e-ef43a7a715db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 2aa675a8-7185-402c-bc9f-132894f9b706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 16634242-846b-4745-942b-4b1f811f52fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 9be1f613-28c8-4a7e-84da-c60b98b3fdda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 3915dd6d-59b5-45a1-8df5-0da32bb404fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 2127f623-d258-4836-9ff7-eb9117bd8760)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1 05713d24-4067-4852-b580-c58e02482bc4)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1 9d89c701-2d2e-4203-a96a-e518d82f8ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 05bf7e84-25f5-4196-906a-353ebf8ee525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 5f28b61e-71c6-4219-9ee2-c660a54d6799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 5e91909d-c5b5-433b-846d-369179c74f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 fdd7ddf6-95b2-4aa6-8fb7-61cbd8df6a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 18f596e4-186c-403f-aa12-748032dfbe94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 1a7504f1-829a-4e4a-9a97-a611045a0b26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #2 169b7106-446a-4788-b85d-fd006977a761)");
unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #2 2ff54bfb-ff45-4be4-95f0-12986c028364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 e4cf00be-dd3b-4a3d-98ff-e8d4b008c0de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 294ee4dc-5a8b-41dc-8f0b-e7001b17c59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 31183c07-d764-45e1-813b-b88ae2e9c18a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 345626c1-dae1-454d-a993-85af8f7692b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 c0ae99a5-3f13-4016-ade8-9cf71077426f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 6b7d2dc6-a381-4b78-b394-ab1fea7c87bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #3 6c5d1bfc-f1ee-499c-9970-4c8da407dc2a)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #3 2c78e887-e9f2-442f-bda3-f7485b8175b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 253a002c-0ef4-43d4-ab73-a61e83c21e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 fc223ae7-de8a-4195-9661-b46dac0860da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 d185e45e-3dcb-44c3-9cfc-1775e54a5dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 28663f79-e1f1-4d46-b4be-26000b21fcfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 0cbd2586-5536-4043-94b3-decf9f9881c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 6be3e0da-ab19-47fc-8944-4136a5562f46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #4 8e24cb9c-611d-4714-ab46-ad0f83087422)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #4 41a59203-0a91-4a73-af52-0bad7aff2577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 b3386fd7-d0f0-40fe-a60f-705b55950a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 1a08a916-d975-4f88-b67e-6dd835ca6331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 5e861b3b-f827-425f-8a15-575012328ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 a2ee4fa3-9441-42a4-99e3-7dd933be007d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 3e06ee39-dd5e-436d-966e-b564e6480db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 165aa9e3-9454-4d46-9793-6074ecbf3a38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #5 6fce8b9b-d440-4582-8bfa-b0f3541a68cd)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #5 d41ec71f-976f-4fe2-a8e8-d231f12f0722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 4b62eb12-248d-4e53-8ea6-15225046dfbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 bb9440b4-5f8d-42a2-907b-316e040e53c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 3f6e5b86-d63c-40c7-b200-2709256e7c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 89681719-d16a-40a1-96b1-5969412a5473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 5e6d7d3f-3f54-49f1-8738-ae25544b199c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 f0f75ccb-681c-4d3c-8ab9-8a70ace02d43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #6 e8d382ff-5e59-4118-a7be-e4965c8db238)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #6 1652c2cc-c211-4165-8728-2ab7071e29c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 97f74600-467b-4058-a0f1-8466c8ff9430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 405f148e-ef9b-4a54-addd-e797975eb0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 5cab3640-84ca-44c0-85a4-13d9b015808a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 64b60c71-9a53-494b-b7f5-fe9b275fa11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 c16e14f3-8af3-4eaa-91c0-93dc411b568b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 538c47c2-1ef8-4992-9461-144f459cf490)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #7 419c2d02-01f2-4b87-afc2-8fa8f81c6498)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #7 cf840293-898c-4c72-bd20-da2125a2b46b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 b607bcaf-c7cc-4fd6-b538-c633d2495012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 b8363ba1-1168-48d8-9121-c973b7f9d508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 31b1ec19-dba9-4a5b-9f38-1377a6c87e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 ee81cdad-d1cd-4c00-b2fb-114ff82310e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 4a586430-045c-477a-9689-1b07e1f57f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 e17ce3fa-b4a5-4250-9cad-d4a233d22fc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #8 c7006319-26e5-49ab-b8f6-e192538736f8)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #8 8f1e702f-f3fd-4ee9-b0f3-72c995a7bbf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 676c8b6a-867b-4c75-8609-5f279312038e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 227b05eb-4bed-4e4d-8269-a9d3c9308486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 afc757f2-2a66-4e45-9b4d-b0b74da84a31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 4940734e-b26d-4944-8c20-e437b47316d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 8c29ab8b-d726-4326-9743-9fd959ddd90b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 680b1d60-8b9f-40dd-9745-64a3df23e806)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #9 c3bb95f5-8132-45fc-8896-2a07da86a07d)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #9 e85629c9-a4f7-4e1e-84d0-0367eba291e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 917aff8f-495b-4460-b4d5-1703d7fbf33d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 5d08a1ac-bb20-4bf7-ba7a-5f54de657f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 6a350852-7226-4379-a1ef-d8b72d616575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 a7fbb82e-7434-4d10-b9b6-430accace01d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 d81c0c84-d9e5-4346-9ad0-ec904bd168aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 d6e61016-6f1f-4cf6-868b-5a5b1c6fa716)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #10 f2deaf59-d757-4749-94d7-22d44eb4c514)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #10 97fd2142-01e4-4be1-be36-73c6eb201c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 55b21393-3d89-46c9-80a4-b335f4977a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 9d0f373a-9c91-49ef-ac2a-a551ffd71cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 9aeaba7b-3c98-47f3-bf4f-f70821515c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 9968bfaa-6263-4991-a586-7b9ebbf7fb04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 560b7490-198a-4539-b547-0ac928e94c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 1bff81a5-f7f3-41b7-9e68-fa898664250c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #11 8a0fdfbc-5063-4821-b3da-ad634d41fbd4)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #11 2bca1b48-ca14-4cf4-9cf8-f98f1be77993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 da489260-52ae-45fa-b777-3fbcb5cb93ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 cdc5b53e-a09b-4d00-898d-4c38bdef242d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 a3fa8eaf-3770-489e-bb39-0535c9dcec5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 53edf8ed-de53-4630-87d1-550a472280f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 39f2dac7-d541-4c2e-ad1b-b6c63db6525a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 3241a97d-cb64-4713-8195-0194d8218ff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #12 d6e8856d-1692-401e-bd95-d4c1738c9c3c)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #12 16386286-6975-4e5e-96a7-afe64b9244ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 d1a0033e-fb74-48b7-b71c-6bb11834ff59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 b8f5578e-3e15-44dc-a0a6-cbe5581bfbc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 a1b4ccc7-0094-4519-9007-9726b1eb3fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 f21cf5fe-11bb-4b93-8865-507db257b324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 09896b40-3459-43e7-accd-24a304590df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 baaad02f-079a-4897-93d5-3ef89999196a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #13 d0936730-048f-4191-98ba-17ca6dd10367)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #13 c39c1426-8a64-4fa4-ad0f-ee294c24eb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 c49e89ee-5a70-4e81-a890-e93c0718d235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 08253603-9e95-4298-991c-f27b99634ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 941a6413-e7a4-44c2-8bbe-9233e5934e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 57bce241-ef37-43f2-ad5d-11c8a4bf33af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 3d063c64-2b2b-4545-a281-2217dd7fcff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 a083a140-70d3-4382-9b34-27791c5ae30b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #14 9cce3d48-4e2a-4c97-9508-4fabe70eb932)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #14 39f7e122-a78b-4a1e-aef2-78c21c7c0df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 72467587-2eb1-4db3-adb1-465bae910d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 68fa74b6-30a9-4bd9-afbb-61685dfdec19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 a0e0b8a7-241b-410f-860e-0b9e2ed5a6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 6feee903-ffef-40fb-b981-ecb3ec5f6344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 8862e416-7b1f-4f1c-87b7-895ad54bb301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 8a400ba4-09fd-49cf-adb2-1e0228300c50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #15 b2ccbe21-024a-486b-b1b0-7ebe23a9d163)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #15 4ab76863-fdab-40c6-908b-bfd3bb34a88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 3a005052-faf5-4e49-9058-fe0ff37c0638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 af3d825f-eff9-4e12-a9db-e0a50bf82a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 2409bc8f-c424-4e6d-81cd-ac9c1bf5c52e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 f63e90ca-1a6a-46af-b4e8-f1301a699b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 6610cacc-0a95-4fc7-9799-93412f0bbb3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 68900b3b-c2eb-4a2c-b120-edd0b7e6cf2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #16 cc7c6918-7a05-41c7-95fd-a1cda2183500)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #16 7e271125-76d9-4dbe-bb2c-d78104457fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 546ba704-b50e-4ea1-a254-d5581a8e806c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 79ea8b07-3684-48b6-999e-80a4949b538f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 4c5f4324-6b10-43a6-bd1a-e28511e7d070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 36576de6-cacb-428a-99c9-73d41d031dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 78f948d7-403e-47d8-b99e-b70709ea61dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 0be8d79e-e1f3-4f10-9bf2-90d9e695bf6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #17 7be9d119-0ea8-45d4-9130-16343a820d56)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #17 7b15484a-39ba-4cef-9514-b36cd63772f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 391be8b6-bf22-4685-9f6a-4b237552e2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 50a92015-0ce1-439a-8680-8a9e8e6d06e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 1695eb75-28ae-4928-866c-f6ee4b177102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 2343c822-4883-421f-bfc4-afa6681471cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 59ff9192-4044-4f0b-8c39-92a59a60a958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 eea6f32c-41dc-4e7e-bf57-59bf2664ec86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #18 f5050385-c4ec-44d3-8675-ffa6fa00f477)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #18 1db740a7-f0f8-41b1-a136-ad5fb364500b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 7e99b402-5f91-4153-9918-b5a712803b26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 f3ca9c1f-22b2-4820-acb7-d37934b9e02c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 78e6ae4c-3623-422c-9f18-68f36f947519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 dbabeb8a-bb13-4347-a434-0607c1dd42b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 655d0b89-75c3-440b-bff8-4079b4fc1c2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 b8e89fd0-caa4-42e3-aed2-065dd1788194)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #19 c1d4ff8a-e719-4ecb-8737-7a015f769c18)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #19 ead37c81-26c8-4d12-a15b-e32b152ac3cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 8eb05135-0592-481e-9330-c5b7caa85a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 d873d821-9dbb-4e5d-b8c8-f59c7e116ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 0c6043d1-afe3-479d-9b65-24fd295c5ba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 5fcdf01c-aa86-48fe-8ae1-0018d636fab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 01689924-db2d-4053-a0fa-bd467559a81c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 53987c80-6477-4714-9921-dff096b7ddfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #20 7439a329-c801-4495-b245-06005fb94c08)");
unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #20 c0ecf5ff-cd1f-4d40-b86b-c50b2858db24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 05c8a9c8-0335-4e7f-b130-3c771dc87df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 f22cf2af-db0f-4494-81fe-638576b7f629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 957c075f-841a-425f-8804-5cb537835c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 b4d4c122-c7f9-45ca-b727-779612021e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 756fed4f-dd23-4b91-92dc-37b74e110347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 d841f152-7b02-4582-b9eb-81c7eccd736e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #21 6bfe3e8b-e8c5-4609-9fc8-478015a91486)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #21 1c36a78a-30f1-44e8-9988-fb896bc04add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 8a30e1ab-1d1c-49bf-9848-fad2620c14fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 bd38e039-89b6-4a26-9f85-e4dd51fdf641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 680ed57d-dc10-4575-9861-f4e1caca7d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 91740831-6e19-438b-a193-2a05c8d41882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 9ef7dd69-586c-4ab5-88e7-a62b03a26d89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 2a5d6d0a-da14-46da-95b4-17997e875640)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #22 3adabb00-c73c-459b-90c5-51e3da5310e0)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #22 72aba918-b4ba-4ac0-bf75-3b5f1a8f4516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 84e7a76a-f28a-4eaa-b9ff-a0e0f1f56c88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 efd02242-3be1-455a-9f9f-48a5ff89a0ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 9a258a41-afbc-4337-a805-01a7e13db98a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 612a096c-6385-45dc-a11c-776453dcf93a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 c17c0148-9720-4b8d-a845-4fe03c9e9e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 8a9ee099-9652-4f27-8ab8-06bd4df7db6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #23 46a7f414-be8d-49d2-86d2-850dd27afa09)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #23 b3a192df-af22-44b9-a70d-1a58ba151d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 8939ff3f-401f-4697-bd1d-0dd0829de839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 c33c5e72-b03f-4f49-8051-1de95a12037a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 fd3a9dce-8944-465e-972a-0bc1c39c63f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 bfc023ed-c883-44c4-a026-8f43599a5823)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 fdd71734-6f41-4dcc-98ae-0e729d534cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 95516c26-ee6a-4d61-a752-6afcd7ea8213)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #24 f1af85e5-e229-44f3-bef5-9efe499918f3)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #24 d95f17cf-c89f-4cf5-b009-eceaddaf3be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 825dc7f9-5f4e-4178-8616-8b6902d9e490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 b4d331a9-6ab9-4e37-aa68-e2d4fa35b839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 aaa00375-2fe7-48b1-90a6-88574f5bc377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 cccbaeaa-6d5e-4799-bdf5-1e882e09d800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 451e6bbe-bf1d-4a50-a3b7-ecc0ee95c651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 c977be38-5bcd-4c0c-ad54-3cbe86f70a2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #25 6599a7bb-ba48-4512-b37e-07838d205734)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #25 b3817016-1810-4cd3-93d7-f056bc17bdc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 d525bb1a-2d3e-46c4-a629-d627c6691444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 dab6629a-b295-4ede-9337-bbed20fe01ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 760c6f60-7c41-4b10-b6e6-b6bddb8975b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 3535ed50-158d-410f-9c12-6e64aaa7adb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 467048ab-1e45-4a50-aea9-e6501411f798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 9688f845-66d2-4a2e-87de-b6007425616a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #26 b20d8c66-3b27-442c-8b27-256c01d33d53)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #26 70b1f7f9-be74-4d7f-8c4d-8a12aea0d60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 a7ba7870-83a3-4be0-8e21-0b7c8de9ce02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 a4b0588a-6f6e-4da4-a794-820f9d2ed221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 0b37899e-7c68-467f-8fec-7e1fb88b919f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 ef12c360-76da-4c1e-9f6c-a5b8196c7806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 3a2ce6d1-b6f7-4dbc-98c1-78e39017b80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 5168f8e4-0f44-413e-b004-a3efd2504c80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #27 b8d4ac59-f3a8-4b62-b6b8-b38444a17285)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #27 7f68c369-133c-4e38-b19a-f5bf88108786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 708e9f14-9c4b-43bb-a0fa-d9597b32ab02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 c3d5c3e5-2b41-4e45-bc6e-3ac167c7d37e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 f6bdc8b1-9b6a-41df-937d-ed58fe236011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 8e6b4d47-dc69-4378-91cb-86e179ac30cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 1bca2d56-0424-480d-a0df-1a2930c7e22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 ce3146dc-bdcb-4aed-9cdc-29fdd3ce6ba4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #28 359b741e-f2e1-4b66-b3ba-0f4b430b2ba5)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #28 cd69440a-74fe-4635-a440-74ef2ee0d322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 4ddf7d40-e5fd-44b4-9c16-ed216ea8b943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 041a0dcd-8070-4b66-82d0-cc0a6cc54a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 6a48f8b4-263f-4c6e-b11f-21b25bd601f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 c6c34e7b-fc9b-4b12-9e40-50d37fecc323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 24df2445-c18e-44df-b459-c3353f55d4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 6f505f7d-8714-4186-8e01-58a28dba3631)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #29 f2d3afb5-2c80-455d-9f11-792db686b3ba)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #29 e8597c5c-77a7-4d33-9889-ec1b48cdbea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 e5c14413-1a0b-434f-9e7f-50b842b2d1c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 b6a23d39-c12c-408d-a983-96936795fb2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 45f79664-5ce6-4972-954a-1c9472f6e2de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 2a39e2ae-f46a-439e-94de-8107a6a95ffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 2520b276-7aeb-428c-9cf2-66327fbfaf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 a7d25c7d-7fbb-4d74-9130-46d60991f9e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #30 68ec86cf-0fe3-4860-87ec-08b70b83345b)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #30 a302df1a-d45f-4d72-9310-e3f1eb495cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 2bce5bfe-86b4-4d21-b097-5a817cd1d71f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 095f1c4b-831b-4c58-baa8-fa48382bbb38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 c90d6a56-8437-4c99-9c28-f992d05fdb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 b3322d10-7344-44b6-87eb-2a9a1b98c2c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 766a9bb1-187b-4dde-8b6c-f5483419dd0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 d6be77f6-c83f-40d1-b0c3-1609887230ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #31 e178df47-ce62-495e-be78-2e4a25b74720)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #31 bdf67bd2-5e95-41f0-bb12-28bcd5aff70c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 206e1e03-bb86-454e-a2fd-768985c9a8d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 07c7187b-acc0-48c8-9b99-fb031680c20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 e215e490-2b06-4aeb-a6ae-195bc01b0b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 af7157ac-a451-42a4-b2b6-1cdafb58c9fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 0d80bdc6-8e5a-47e5-bd42-8a8e9918197f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 1b84d319-99b4-4e1d-91b4-36e55197660d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #32 c0f2d6c1-71c1-4e87-b11f-edbc67b6e4f0)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #32 5d225e88-6f54-4dee-9e6d-a60c75bf13be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 9482e23b-6797-474b-a8de-6ed684a79e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 0a9a0ade-d47b-46a7-b253-135606f97f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 e49abee4-e016-4ba9-9d18-0f48fe418b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 35e3ae4a-3c8a-4726-94ea-1cf2cf93e449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 31df7c3b-c952-4670-93ae-3eafbbcbbeb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 13de3bc3-2277-4ffa-9e33-76acfb343297)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #33 d55b5153-f544-477b-96d1-d988075a3d89)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #33 30633e44-493b-4982-a22a-6a164c13a989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 cb3bff55-f8b9-423d-8046-6b72a52eb9b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 babbc4f2-ba00-448b-b4c7-3891e394a47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 e6d474e1-dd64-4f2f-83e1-661658b3507b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 2bd9a303-e3e3-40e2-9537-e6a0d6fc0e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 8b2bb411-a904-4c8b-88a1-57c8547af5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 2376ff7f-5108-4ad1-bf45-d457a286b6a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #34 1fbc5e30-9f1e-4e61-88ba-bce01d3c5df9)");
unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #34 6c7c0712-3bff-4490-9590-6e25e3481b3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 68116cb6-e517-45d9-8086-deeb97567adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 e9145e95-f6e4-47f9-9368-4b5a8f774032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 349702d9-4220-4a3e-aa70-96afe693e94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 431facda-8c43-4607-858d-34d386c13b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 c6c37a00-bec7-4a96-bdeb-ce2d6bd7bd64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 3b5d916c-471d-401d-9cc5-623e4b36c312)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #35 817e1040-432a-4436-bf12-dd21aad211e8)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #35 6483dbba-fdbc-4303-b317-d3b34ad5768f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 0d03284a-d287-40de-8b91-c3e682ac6454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 e0fa4bd8-33c0-4fb6-ba2a-da83165b74a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 fed561fb-74e8-46c2-a2ce-e8b78cdb67ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 ef8d65c5-dbf3-439a-9196-4eeb9915f029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 d76329ae-e224-4e22-b5f2-d26b6fb17b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 001a9c27-5b2f-45e7-aba9-36bb91f8b977)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #36 296ee30f-b0de-4b28-883c-04d9bf6a03e1)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #36 34f2f64e-599e-42c4-8920-b947f9633d80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 748da676-6138-4e22-b783-bae5a3b9f4f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 7d535e81-826f-40dd-b76d-e71554b91bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 1c78723f-774d-496a-b48a-a48004af4a46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 31ed0866-5b26-476a-8569-a3ee8ef163ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 995fadd1-fd7b-4c94-b1d4-610f0e7de2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 f3ea3e13-a9d1-4a37-bb4b-21bf5363d2f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #37 c73d92b0-bbc8-4814-a9d9-28b0614a7e44)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #37 ab48fa1b-a6e8-445d-b11e-c584658fe924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 a78d6d1f-e77d-4621-871e-33fbc811c021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 8409a232-f9c8-47c4-9b4b-bdc4513cc3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 afa0d543-ee65-4346-b03c-a50b2c71c4a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 1b1f3a90-9dd7-470c-8287-96348e3c1327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 8617b980-e08c-4367-bf54-e763614d3eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 6534cad2-8469-46bd-84ab-8c5e287345d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #38 6bd5228d-4ea6-43a2-8a17-a0c2bf9af611)");
unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #38 6e96a94a-eef4-4b10-8ec1-302cf2c7d32e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 cad11a39-80d4-4118-920b-ec8a9d55a53b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 8b3eb503-8121-4237-acaf-4366b4ed60ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 c1c47a41-70b3-4047-8f80-f27130e83fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 5b8ca6f7-ff52-468a-ab91-6c0e920344e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 a5d7effe-bf3a-4cbc-920b-6a85e1c18c94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 8c69ae15-efee-436a-9398-28527090aaa7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #39 4a6ad31c-1145-4c35-a40e-7db29970decd)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #39 97e9f239-23f6-4b19-90db-f9ce0e4fb3bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 7d75ea7c-8cb4-48a3-a267-97f9743e51c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 beff6bfb-f42f-43fe-a5cd-a1cebfd069f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 9f8d82f5-a606-4da7-b238-5c0734fa077b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 dc813e71-2bdf-4cac-a57c-9137b50e5e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 ede9cf85-f495-45ad-8062-0470e1d6875b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 055af609-ad91-48d3-9a1a-f61e879c8b34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #40 1d4efd8b-d9bd-48db-9fb0-83ef89cc8464)");
unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #40 c8d8273d-fa64-4307-a411-94e2928b84b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 32bbcb94-4c07-4805-8ce8-c4b068120a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 9685d69a-9d77-488d-a4e1-ecab09bca194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 df869a77-b71b-427d-adca-97a173a95af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 11eab29d-7038-429c-ad0c-b3b62f65b640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 3f383478-7dc5-4cff-9988-2d48d17566ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 e308aac2-8e25-4a5b-8c4e-f9ea7df24c7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #41 8362ba16-88ae-4571-8935-4bad1439aef3)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #41 fb034680-aa52-4601-ad1f-b074c730bd75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 17dda827-9a81-4a2e-88db-f233b646518c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 dc43e27e-0144-4a7d-b6fe-c53d3a749d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 aa8a5765-2519-4791-a647-e9874a5be27c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 455a9b22-5a4f-4629-85ab-ceddedfcfe06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 822f75e6-ba4b-4530-8fa8-8179c7e91861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 6d077704-addb-4e6d-8fb7-3187645a63e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #42 b86cab14-5095-4fad-a990-328c17e5256f)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #42 96d3606a-bba8-4279-901e-77a9a4f24fc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 b4c49b05-18e5-4130-8cdf-f728285dec79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 2315a6df-6863-40e2-a5d3-be26ce97eb6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 84120c9f-7a42-4d9e-81be-95e2f4a4c602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 d1c509d4-8383-437c-9bec-b8fd197e115d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 af8ec043-49e7-4594-934e-6e5640f645f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 41739b59-2a79-4886-9cf8-9029638ba56c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #43 73d7d59b-06bc-4e46-8488-76a8c1209adc)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #43 574fb1ef-4371-472e-b009-513650dd5178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 7c8e1871-5ac4-41ea-bbd3-4808c85a6f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 846196e8-3a81-49c5-b2a5-9feefcc10f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 7cb95e98-c5b3-49ea-87d6-f08669f80ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 6b02b57a-2267-4f71-91fb-851c39e49172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 3a6219ea-5f0f-422a-8350-5ea126e647b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 9fde82d2-9224-467e-9d98-ffd53a6a0743)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #44 589db402-6331-4bb0-8fe3-f8a3dc8c4f66)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #44 3212b79e-cdfa-48b7-bd73-0675a5594000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 666599cf-7d13-4bbb-a132-aa0609cea872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 b24a5d05-c3ee-4d95-a530-7f0b56cdd4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 f15c4e62-8b49-4924-b5b7-87dadf07327b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 44346740-7a9b-4d63-b497-d4a29de57257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 33a3d469-74a4-44c0-aa41-1aca93f0a219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 26a2fd33-c5b5-4e61-9a2a-1eeb032b639c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #45 e3bdde56-74fd-4989-a6f1-513ac3b82872)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #45 fb419331-2568-4705-beeb-ef6ff13c03bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 69887a8b-02a9-4b6d-aa60-11789367bb3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 c45fa84d-505f-4501-9aed-c7045b8c84df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 c107893e-b9b1-463d-aabf-b8c44af8fd2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 a2bb38bc-d5bd-482a-b199-8ded7c9e1a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 17b6614d-1d94-4fd8-87cc-38b2736c7b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 a398de90-7b57-41e9-adce-753924fa90ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #46 4322aef6-c3c2-44c6-8523-d0e13a7caef2)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #46 1d2c7e3c-1ea9-415d-80c1-37de703be013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 5ded86b0-c355-42a7-9454-72bbc6c6cdf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 149c72b8-ba55-47c8-94ef-fe24af47731a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 5444af7f-0846-4047-810e-b009296dbd8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 5900ff90-182f-4bea-aa8e-701bec7f5f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 9b4ac2da-0ded-41a5-946b-868b6c9fb6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 7667bc29-fb0d-404d-a2fa-27fb6769b546)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #47 2b6412bf-2da2-4b7d-b324-bbda33555a38)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #47 cf2b3b61-8f7a-4d06-96fa-f6a2f6b7d280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 75858e74-58bf-4c51-b856-b7e14552a50c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 e0f17daa-5919-4869-a913-b2ac43184ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 7580287d-215c-4157-8d02-65d8ab521886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 0100cfc2-1219-4b48-8cb4-bf11701e7470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 8347f90a-7cee-46d6-aa56-c9f5e6ba6725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 d9d09325-fa95-46b6-b1c9-70744d9669f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #48 03aaceac-4d5a-449f-bd56-27db3f6990e3)");
unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #48 ab3a6d4f-2fb5-4f34-8f00-7a10784032fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 64584161-8b58-4b01-9ee8-c5a5dc1a72e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 ad5acc8d-8c41-4306-b5fa-2d8774941c67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 9117a51c-9843-41ce-80ad-2b4bb1af0044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 40763174-389a-4de1-8775-eee24f66fbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 76d26637-6dda-4ee9-ba29-e2b51e39867e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 2cdd1ba5-fd16-45e8-96de-b0f28d3600e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #49 78e185a8-1f91-4f18-a0a2-729aaadc9602)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #49 a5cee501-dfcd-4cbd-818e-651a60201a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 9ef8e404-8143-4872-b1cb-b3280be89918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 05f3c67f-0be4-4e28-b478-7979b4dca392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 fb823ad9-310b-4976-b390-4ca76fd32549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 e06ac24d-10b5-466a-9584-59046f456fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 7f17becb-34f5-4e60-8bad-fde56266af75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 41caa0a6-b709-4bbd-b721-12344aa886ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #50 4bcd24dd-d255-40ff-937e-e40e9778f50e)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #50 82066ad7-83a9-42d9-a3e1-738ff3585aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 26a48518-3824-4d72-a705-d962b753473a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 c3e95502-de8c-4465-a1f2-6493320e3207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 717a53ec-2c07-4728-ae75-0649cf94cd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 36312597-61f4-4739-93bf-c708e08d6303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 9d7b8bf0-2da3-416b-aab8-d685e23bbe6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 e4d9368e-04f4-47d5-95dc-91c2c128ea60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #51 e1edb595-e2fe-4c48-9db7-8930415aa422)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #51 dfb38422-0525-4258-994c-101af350dc00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 d06c9749-f651-4d71-9e3a-735b0910d983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 fda43b5b-7f2b-432f-9486-1785f2631066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 e4344725-e8f7-4ade-a581-4bac80f17a4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 2bfac358-bbe9-4095-80ee-44a1f2a9bfbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 23704a34-ee70-471e-86f6-c52e6f0262a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 b9066ed8-dba6-437f-afc8-e8f51775075b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #52 7b6eb922-14b7-4f61-94dc-bb8fda772680)");
unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #52 4bc30843-c78b-4368-bd1d-2ce3ce4404ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 f7a01eec-0c2f-4954-9dbe-9fd57a61f627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 ca27c8f7-f5a4-49cb-9149-4e2b7ded25ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 a9255550-530d-4191-8cad-1171e8fd739e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 e059c8c6-a476-4ae6-98cf-a806b66e54bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 2de02099-bdf9-4043-a7eb-6a15989a1ef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 82cdfcac-3220-4c8a-ac73-0df480e12957)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #53 ef5d9c16-571e-4c29-90ea-dcbaf6c9e8b3)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #53 ad4446bd-edbf-4a04-956c-688d0d0682e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 61e43a9f-333b-4975-a410-4095463ff3c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 a935d127-2690-47a9-b460-e6b1f087870e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 eb8d3412-7a59-4ae0-93f1-263b2da07fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 af0cb944-bc54-4953-b5d6-1991da11296c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 b9a46ef3-edf0-4d9f-ba94-37ecad4503ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 d8d339b7-3ed3-4a2b-aab6-0abf08b08ee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #54 ef2b7ba2-de6e-42d9-8b09-d4f34a334237)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #54 49de7244-fcd9-4eb4-a0d7-a7beb3cbf645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 00fe99ae-c01a-46c2-9593-57d5d0c0a32c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 aa1542c2-dbe6-4e25-8ef4-9b407057278a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 1dcd4bcc-8d42-485f-91fd-b4e7dc81a1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 d004c557-afe8-4f49-9f0b-c43ea5e10355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 7db46d84-f248-4850-858d-7e1f51029295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 fa04d70d-e595-435c-b34b-9265cfcbe746)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #55 33f42e4b-e255-4398-af64-8be7c6ebe2ab)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #55 b5ab1eaa-c3d6-4031-ac01-9052e4ad3cbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 2cf80941-73c0-4934-8ad4-0b9fc435d36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 4d5a77b0-3004-400b-99a5-3596a4c26af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 17fc25b1-9971-496e-b8f8-5c7ded7afc86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 69995bad-5062-4cf4-9484-95f8fed4ea08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 b91e751c-71b9-42f6-845e-f632cfcb2322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 3a5e8a6a-1320-48e5-b41d-53e75150b317)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #56 44b0a5c2-52fa-4838-974d-0b36b7cf3bc3)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #56 eb1b5ded-fdb7-4325-9d2a-6eeeeecf3d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 5cee5be2-84b7-4c12-ab08-096680e1a831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 2c80fcb0-06a0-40be-9a83-392e09affff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 e0bbdd7b-53b1-4bed-9d49-4f47195d1566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 c8f598b8-547d-4efa-92b0-737eba803137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 9e384b40-f92f-436c-aa8b-fcc2d0ec755d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 0251bde6-10ae-4b8d-98ad-7733038ea8e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #57 6f07b783-df62-4c8c-a820-a53b3945ebe8)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #57 447ead4a-acd0-40f0-a6ab-3f16cbc099e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 2f20f717-53bd-4310-a118-a46dec27fc41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 68d7761f-2b1c-4490-ab79-0c45227227b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 85d6815c-56a4-48b9-b838-89824f93c97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 47d891f9-8ffc-4a81-be8b-43d65a4c99e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 ea3cba73-d021-430d-9aee-1480a075de7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 f9d92cd2-863b-4ca4-a2fa-17cfb7d6c994)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #58 8f37e94a-c6c3-458f-8fea-ed0e59807cf1)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #58 a4bc8546-9b1e-408a-9721-1c173e2a6af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 34018fea-26ed-48ee-a1de-fe5642150424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 bd6ebb82-bbfc-4317-8c5f-2fe5d9180d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 1d0cef62-4da8-433a-b4f7-6e33e6aa79b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 e2a9f0b0-6b20-43a2-8fd3-c5624cc04d4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 729c5a91-b46d-41b9-a843-26abfb6c1ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 9a94e0be-0022-4ad6-9a20-b662d1b25e9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #59 ed1ab42d-a2b6-4c81-b97b-302231b98f72)");
unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #59 4b3d9212-6fd0-45bc-9dfd-ee25ca651063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 cd93c1af-4b85-4710-9b08-55e5ec2e18e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 62e75e70-907c-4618-ae2c-63af1f753f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 5f8c9999-2fe8-44b2-a655-8163b363f1be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 94b90891-60c3-4af8-bfb0-d7550cedb50a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 33ed65c3-d8cb-4fb2-aa49-eb9affdec056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 16dc7616-0836-479a-bb2c-60b266611797)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #60 5116a13d-443a-4cc9-a5a8-4bf910d598ce)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #60 0c7e5fd7-cf92-461e-860c-d29dad9a4a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 d5bf0e93-795a-43ba-8f49-699a16dcbf00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 ce174dae-3df1-4254-bb9e-dc79f9a2f504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 cf77c85d-d380-4508-ac0d-a4beaead8883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 8e500925-0090-4620-8e8e-54536439adcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 81e762fb-b6e3-4cf7-a937-2ee69339616c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 aa8fcf95-f4be-4ddc-8bbd-a3ae6a12e3ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #61 8ed838ad-59c2-4b5c-9045-6c4f4a9f3611)");
unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #61 c73e9cd7-c70e-4645-b784-d85ab9e046d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 0a0269c6-676f-47c6-8017-5c66d326efd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 9166927a-8544-44e2-8d61-da02cba7d847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 50923752-b996-43d7-99b0-825cde61fb60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 3cdf0fba-d9bb-48a8-adca-ae5534da35a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 9a08af8a-ad80-41a6-81ee-b79327c3a0a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 f27b1a8d-70e7-4189-b8fb-883673e8c70f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #62 b3a03f01-36df-4232-b915-c6230de1d62e)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #62 bc515a5d-3483-40f4-a02b-0ed3631db8e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 705eb13b-4cff-4655-964a-2ae904b1094a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 8be0c044-2cce-4b31-b0f0-c48a753d37a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 0b9643e4-a431-4648-a7df-6ebb8232ea73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 10607ea2-ad3e-4d96-ac09-3fc7ad0c4627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 325195f0-fd4b-421d-994f-8475025bbbaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 903a8fc1-ee8e-4427-9b5e-cfae5990a583)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #63 da03941a-8d95-4ccc-9527-86a5c9e43450)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #63 15581df7-6fc7-456d-8692-989ef12f8cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 4b541e32-bcba-4892-a7d6-11d7608f3fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 1309857e-92a2-4a86-aaf4-fd89dfb80930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 29a141df-fc4c-4f9b-af70-c888b5ae4c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 f72a34ae-1e34-43a3-b400-87a72c93be08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 84b8916b-710b-4908-995d-2368b88a1790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 10fee02e-6420-4284-ad50-22abdc589e14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #64 2c0f68b2-ff84-4047-aa6b-8fdf9f9fc609)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #64 6d50be57-3014-4768-a7cb-370162041818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 6424c8c4-636f-45a1-97a3-a144d8e3c12a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 452ea9c4-326f-4c9b-828f-8a8cccba4bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 50f38b43-1449-4825-bcc0-deaeed52945a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 3f74e424-3bdc-48d9-8497-9f63d03e205d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 d7b63d1d-88d5-4aa5-b53f-2ebe000aac2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 3535ec88-c7f0-42cd-a5cc-a9243d78a0e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #65 011689b5-ebee-4327-a9da-4c55133a537c)");
unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #65 a36848ac-82c8-4864-97d7-eb0e5092f86e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 d626f715-00df-4a13-b7e3-10ebc697677b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 b97c66da-b1e4-46fb-bc97-8a3a8bec2cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 ae6faba5-dd16-4216-afd9-c8f483d6258e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 1945ead9-3344-4ff5-9798-f59809a04923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 feb3886a-f9ff-4e04-ad86-c06da123d6ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 19a4c18a-f847-4a9b-ab59-4093381d3578)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #66 9d00264a-1bcb-4958-92e2-bf90b1a1af0c)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #66 7aca7c55-1082-4845-86e7-ddb67ff4add6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 5facde62-a980-4dca-91e7-ffe12c436f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 9c39d29a-904a-4ed3-a1de-3205aa9c8973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 d164aa12-4629-40e1-ab19-0670d125439a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 9e8967d9-81f2-4f79-b3d3-f4ce4d9695a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 025c8493-dddf-454f-a1ff-c3047808b454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 ae92d7f7-d193-4fc5-ba1f-5672ae24356e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #67 a4e41092-a34d-4e63-9ad4-9b96d857f94b)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #67 2d38af7e-4277-4e42-994f-ba0b3eb3c44f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 990475f7-bafc-414a-85c2-e775d0788889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 f7ee3c81-d10d-4c84-be6e-d9caf17a6136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 4014ff42-bf47-4302-8b96-d046891e9fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 66d00fd7-b8d8-4e7e-8b4f-9c30f421525f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 ffdac981-9777-4d0a-8351-1d382992ddb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 86f478fa-2509-412c-aeae-80ceaa89aeb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #68 270d8f00-e5d5-4fd9-b83a-d90da32996e0)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #68 2ad8aa92-1cd0-4f31-b565-6aeffa21b191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 279737b3-055d-4544-999e-3e6fe5ca6d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 25f6e0c0-5e5d-476d-92af-6ae917d87a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 5a3dfb47-67f6-46d8-a74e-07b2f974e177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 5c172b8c-df41-4059-bed6-5863002a365a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 09ba1228-9460-42e9-8446-d40c40eb495e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 8c53fb6a-d2f8-45e6-8995-ff3502ecbf88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #69 6095735b-f7b8-458c-864c-b6017565f2e2)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #69 3a5bef45-a3ec-4edb-827a-f515c7ac35f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 580d9bf1-5fb8-42c7-9d88-6770cc4f03b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 8b41c3bf-8536-464e-9224-c38f5ab754ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 6dfb782d-3a50-4b92-8ce6-36ff59c8621f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 2e914007-4d9c-4536-8b77-6fde9719308a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 d2a527a2-c858-41d3-8b4c-2c2bf7918e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 f5ca4402-a4b7-4952-a14a-75f3ef9b716e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #70 6eae76c0-07e3-43f0-bcf6-cfd371ce83f1)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #70 38681f5c-06a4-4922-b91e-361c86c2250b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 3e0607a1-7554-4274-80a8-4c1d07e6249d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 834ce00a-e4a7-4f14-83a4-a74b3b724939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 15b77a5f-8ffd-4519-a665-2565cd889af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 1c9615c0-9ead-4607-ad5e-e7e5560e2b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 0a33b50d-2053-40f8-aac1-fdf89d8ef503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 424b0a2c-dfea-443d-b2b1-8f9e1d4f3656)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #71 1983ac65-d315-4e63-ac64-17c001616327)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #71 d2d3dd5c-cb6a-4ebf-9944-ac9cb7a3a7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 2ab2dc2f-9033-4456-b1a4-a5ee8ca31138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 caa041dc-9d1c-42f4-8bbd-93954b4699b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 aeae93ca-1ada-4a27-94b2-8b18fc2b95e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 acd69e10-79cc-4b00-9c77-dac43d8320fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 9351ffbe-aecd-40b9-acdc-ae9b89d86493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 00ce4d6c-223c-4766-a2df-6b4e17acd40f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #72 fcf46357-1d5e-4b9f-acfd-19b8fef8a526)");
unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #72 9abe8310-8ba0-423b-8589-2fc24ad3e6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 e651f457-35c9-4e21-9258-791f76f77fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 82e97771-8fa3-4a8d-8453-a459fe106579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 adc2dff8-3ad4-4826-9199-7508ec2b61c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 94337656-e693-4d26-a39c-9b1d00222304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 394ccde9-e7bb-40d2-8ae2-6dbfd78a5b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 e9eda137-7448-4c9a-ae24-54e914a7fa08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #73 772db2d2-2dd8-42ef-8008-7ec9cc906346)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #73 639649c5-b221-4b7a-9560-d192347ae4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 453a994a-89ec-475a-8f4a-f2d38adde265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 6db030c0-2776-4ad2-9d1f-42e8354b0c21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 706b2f2b-1d0d-4661-9c5b-7ad0242f8d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 4658fd86-cda4-4993-b6a0-8faba29fd2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 91d7f70a-6b20-4a44-ab5e-9a075b97d6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 7061857b-911f-4ad5-b946-61ca7ec93ae2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #74 6fee74d6-8694-4614-98d8-396c58a60282)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #74 12fae4f3-c9d8-4967-9c3a-1b029daf2d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 96e86f84-6dcb-458d-aa37-c6583c3042aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 029b19aa-610e-4a9d-b176-1afd7d4ef4de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 c5a80942-c6e4-4346-8349-8bce43e30e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 e0eb9608-319a-456e-9faf-7c0ec621ffcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 811be3e3-b7c5-4bf8-bebf-45dbefbd2482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 3fc5321b-bea7-4c93-afa5-edaaee3ffba2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #75 b3705e17-d4a0-4073-9899-49350abaa057)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #75 133991a4-f1b6-4730-ae07-50ae115efc22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 452944b0-5347-43b4-82be-6d56c3544819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 0e5c35a4-57c2-4854-9efe-3003ef18ef52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 85d80e57-9930-43c5-9208-90127c7b557c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 598acf40-1f0e-4c5c-bad2-3aaad2353450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 0527778a-3668-46fe-8a9e-a65c12ab047b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 90544466-d852-4729-a5d5-4bc35d9a9f76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #76 f74f12e7-00ac-4fea-946c-a0f66c4ac460)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #76 d89034d4-fef9-4b15-b332-f802b153f045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 4961ef58-c0a1-46e4-846d-32dc48d8e75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 a1d03322-b19e-49f0-8f8d-5c3204994b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 0c3fbbef-d330-437d-b01c-4071a6e86f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 21dab54f-5909-45b5-8c8d-29e9d346a10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 0c4aa18b-a5a0-4f59-ac5c-5f568fcf6d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 64cda967-f1dc-4880-8d95-0147bda01e10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #77 b59d09eb-3aad-4b57-b67e-94ebec6c1fb1)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #77 f5d3221e-f87a-44c1-a535-3ac196b5d7f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 551ff7a9-9dc3-497f-b91a-71de2b2c4ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 de8bf819-601d-4a98-b83c-3987924c52ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 37f084d1-dfe1-4d11-acc1-ea4a03ffa0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 cb12200b-f0d5-472c-bede-678a384c352b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 36ea8f7a-4eec-427c-992b-78953a79a459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 e36a9921-2ee1-486a-af8e-e326585709d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #78 3d389a62-8fdb-4b2b-bccd-fa1172d3efa5)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #78 962af877-b744-4333-bef1-a49ab26621e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 70dae77a-37e9-40b1-ae13-b8dc1bca12c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 f197d4a6-4a08-4ffb-b587-1187d7863036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 1625223c-813d-4cfe-a05a-6e91b688e2d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 ac4f7817-1ed2-4efe-b5df-4f998afb1cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 6d6249ec-9f0c-4883-86c0-3698067a8bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 9462df40-e457-4e6b-8c76-7c37e23489c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #79 ad7f290c-b374-4b42-b83b-dae85c4e900e)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #79 908e1558-db1b-4265-9d9b-3cfd5a79f439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 e2195855-1a5c-43f8-80b6-bb87d62d8e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 f35711d6-2545-4f7c-921b-f94f00245490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 5f54ea8e-7c31-476d-9750-31e840f4a0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 d4128d78-a13c-446c-84e4-1e37ed5e2718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 e3da1915-8681-4777-a264-1c689c6aea90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 e1e94d54-27ff-4be7-b73f-4f34545842ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #80 d4e983b1-94e3-4d70-bc30-0fcb7190ca51)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #80 6c1a108c-d11e-4fbe-9288-a91ac99303a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 8872cbb3-133e-411e-9f86-4e36a4dbbec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 557295cf-062b-4cd3-9cbc-cf30b8778eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 50f379fa-2c29-4f04-8f78-49fc64c6c29f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 f41a62a9-4b1e-47be-8f88-eea66eb29ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 23490863-d69b-4b39-8444-98fe003e103c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 c07be31c-8016-4c06-94a2-5c58dc4bbfd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #81 32ff3083-263a-46d3-96b5-a0933325d8b4)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #81 0c0a2abc-eeb6-4574-9b53-6750cb06606d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 b92d69b9-edfc-46ff-9671-0714620238e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 7e082db2-fb51-4255-b032-ee4d85cbda32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 e9e6e981-a260-4f9b-af25-568fd0c2f71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 c0f8c52c-ed60-497a-a217-2c03e96c5aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 60cd2f71-d9ad-4fd6-bf24-b4d336bcaada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 d5bcee6e-fa18-4ecb-848b-2689912d3e2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #82 6c3abbd6-9b4f-41b6-9d81-2e588ca27ec4)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #82 72a1e333-966d-480b-b84e-b00d43715b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 24011306-8df8-44ea-903d-c63a0cbade0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 dfc000e8-74ac-438b-adb6-ed49a4cc9df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 d9a14a32-6bde-440c-bf83-586f72809dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 019ec0ad-5891-40fc-b288-e871922590f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 b9bfda6b-744f-480d-92f8-a72add0480a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 ea14a440-d02d-4a09-8613-62d7df3bfcea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #83 b4f45944-0ae1-40ce-859c-bf1f7deaaed6)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #83 e7d61407-5c14-4e7e-97e0-aebae5a8c0cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 04e9b2af-06ca-4c47-8c4b-a4871ae53ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 551dd47b-5ef3-41ee-9168-8dca064c88d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 9debaac7-8a83-4fd4-8b3a-513ecac1493c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 b44e19ff-d527-4179-b445-c069176e186f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 7e3c62d2-d016-4d2a-b34f-46fa318ba47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 84de1224-4595-42ec-854a-382bfe608e34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #84 0d2df611-7191-4ff0-88e5-f2c819f049f4)");
unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #84 d2230ba8-03cf-4d12-8276-de07d0f93c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 eb4ba582-9623-4741-90d6-82b18687674a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 ea6ee180-ca6e-4c59-aca3-7ccae58a5aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 111d5a62-4f81-403d-a6ee-47799d1cf40e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 caffd13b-847f-4821-a833-66a73a468817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 d5f8a3d6-0609-401a-b9e7-ce42d095a467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 04aa28c3-b8b9-4d73-af7f-ae0a32712fb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #85 1d57d892-0997-4c6d-b574-ed9fd3907338)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #85 495fd535-9496-465b-b29f-04f628a6e1c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 1582744b-ffe5-4eaa-8080-4f55490e4cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 49c92f17-dfbe-4a28-85e9-35c9dbbf6b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 aa61ad1a-8295-4840-a7fd-e5903c90d6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 d5fd9352-0bc9-46d3-ad59-7caf59fe064f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 5152fcf0-a6c9-456d-8441-216babc55c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 fd17bcf3-997a-471a-9132-32d38771c00c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #86 7b79be6e-2af2-441a-adfd-c3be5924ecc3)");
unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #86 86eb9e3b-45b8-404e-9cce-d82e7dbdbda4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 6af63bd1-bab4-466d-8214-24634ddec8b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 6a4d8ab5-73e1-4ede-87c5-20035d73e2a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 53a3e44e-c21b-43bc-9087-93f9bdbf0105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 5be9e91c-f55f-4815-b0d5-93664987a550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 713e2bb5-e953-4567-84c0-64c03f5499b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 7ba55f66-3183-40f3-b2d4-e224cf798206)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #87 63f7234d-e2c0-4a28-b37d-22823a54981d)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #87 252881d6-38c1-4715-9e90-da9165b8627c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 4083b0ff-13ec-42b1-ac7d-4ebeb88bcdb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 b79b06e7-8e3f-4d9f-95dc-c4f223bdcabe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 bb08245e-abfc-4566-a2a0-044db684424d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 4011583b-12aa-4f91-a44a-6ef123d0adc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 8f75d829-de0f-4a73-89ef-db5aefa60ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 f16d5a06-1a3c-4a49-98aa-821764badde7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #88 dcea6a72-c890-4b37-978a-a4b2e1b23a9d)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #88 32559b6f-e75d-4ce8-a8c9-5d288ac37fbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 ad7e5022-9e94-453c-a35a-fb638c6b1543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 b4e08407-1741-4776-b9ef-b0c13ca43ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 42ef1226-a443-4faf-85b4-07d838680052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 4ec4eab2-bbc5-4e0e-ad38-cb59dbec2a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 60c9e429-2028-47ce-9bad-66c27751da6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 046fbc4f-72c5-4d1f-a1a1-75bee397095a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #89 2ae839ff-44dc-4a1a-b3b0-99aad868d6df)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #89 b2216796-fa75-4c9b-a621-3b3c5607bc85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 8e9a3ef9-3f87-4d5c-b5da-b498a72280e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 0cc044f6-ac68-45b8-b106-797a8e9aaaf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 e7ef1b7a-4c47-4dff-829d-83a72ac531cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 a66fef44-7434-4c3b-9d00-5a26de3f306f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 7aabfb2d-4b09-49a2-bb97-0b7d47db009f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 abbe98d0-36d0-43b8-981e-dd19252fe3a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #90 e7b3a29b-6cbb-4b21-a95a-530976d11c79)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #90 a7a40210-2ea6-4074-a660-84221c2401ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 b3835b17-d04d-4aee-9516-33802c69620d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 5008ecdd-0e61-4b09-bb8a-81ade320d66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 e4627202-c74f-4c4b-ad06-9f13494915c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 b85f1e97-c657-41c2-bc43-fac287e6aead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 beaa5b3f-6b32-4e72-83e0-138d075ebc6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 cbf4c440-96de-43f9-bd0b-90dc918db537)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #91 1b36aa17-7432-4891-8e23-5a5692b0ad19)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #91 e93126c6-69f9-458e-81d1-d71337e9f5c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 535d7a35-e1ce-46bf-a7fe-ce1632fd73db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 fc57017d-d0c5-48dc-afbf-1568a4ea3313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 6fe8ba8d-a2aa-44b6-bf5a-f7ff817915b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 8657cce3-58e6-4ade-8fe5-905bb286ce5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 c536876b-9443-4a32-a1e1-6649269bda45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 0d2a302a-62a9-491c-b37b-d4d3b3a0e706)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #92 cba7e631-a1a1-42ec-8d12-ad446efcea68)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #92 0e254ae8-142b-4e15-9114-953d92201e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 5864f974-7dcc-46a3-9062-dbb5b5471f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 84726b95-b802-442d-8706-2073ecf5545f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 83a041ea-cd6a-4248-b3f8-33ce709261bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 eae862c0-6c84-445d-80a0-a5cd75adefbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 7e0e3e92-f7f1-4624-b956-9e2e6b7fce9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 f7bfff50-3c64-440f-be47-5c35ad0ffdb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #93 d1483f3b-895c-4047-9fdd-d63c5bd41ee6)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #93 03465eb3-f380-4717-a173-0d997fa8615e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 a4f62270-c00a-47b5-8c7c-7b17a47b73ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 1a61ec6d-b7c4-457a-9261-fc43da1a90cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 a112ce87-d59f-4f83-b9dc-c3a131c00bee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 f7e69681-7d79-4519-805c-002645e98cdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 74c63986-c8c1-4e5d-bcbe-7e56fd980422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 44983759-0adb-4282-9386-ce1e60b0ab40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #94 014c6c09-2319-4ade-b70c-1a3f122bff88)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #94 c84166c4-a770-44fd-b7ae-061a94a4c75c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 8bd76756-7812-462d-95e7-49d27fb0bb12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 2407512c-a169-48c7-b80f-f84357fff772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 d73e66d7-20f5-4949-9980-8d425ecc0cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 2cbc64cc-ec28-4207-a5ce-c52169aa939b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 e010326c-ec9a-4121-8411-66cdd18c421e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 c5abc60f-e3ba-414d-bdae-7b1d49c42c1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #95 a4756c45-bb23-44b5-8093-2f9878ac5916)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #95 b98cf63b-a5b4-4d6f-b1c5-c58c9437698b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 7b3de6b2-1e81-4c1a-8f61-d528b0aec604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 261960d8-c6d1-46b9-a4a6-95146d2b4946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 1f5436a3-4749-4064-9263-6d1b329fc8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 653b7cf8-53d0-441b-bda9-189e44038df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 3e4bd4a6-d7ac-44cb-bcee-d6b72907e1d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 60db1fa9-1e93-4a1e-bfd1-7ac2a7146003)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #96 0cc4a6da-c901-402a-85e2-2d2f91795f55)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #96 dc311080-6852-4147-9ffb-5bcdb9518d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 35166e43-0020-4e09-8c90-c8348fab9202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 6075609c-5271-4667-8822-491da95f82aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 3d6db0e7-b0da-45bb-abd0-b811c72527f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 628766b1-ae57-45d6-9e82-14d592a48419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 80555dfd-fad7-4e72-85b7-3e33535e0aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 1b726004-7cae-4590-8928-ac47701907c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #97 89d78b42-74a5-473c-8ebc-ca0c04651869)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #97 3754efe3-631d-4de4-bd68-8fcb4a924920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 1405a1e7-36a8-4297-8a06-1fa631f3d2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 905c6edc-0a24-40bf-9819-e4283fa79738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 dcdfdfb9-2a8f-42d5-95f2-0a3a99ecc631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 c27a5b46-dfb2-4aaf-b72c-efebd2f65d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 c752d56b-1226-40c4-a22e-ce543618aa8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 c2834300-9e69-48ac-84d9-d77b85c280a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #98 3a4e7f50-c479-4e60-b732-f94491ace6b8)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #98 b83f803f-473f-486e-9596-c70df999a88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 7e6674cc-1aa7-4f8c-8562-2589844014bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 cb9bcfc5-0dd6-48a4-9ad1-3abdd9ad120f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 551b3592-3b68-4f48-8749-4b912dfc0491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 b63500db-fd92-4011-b308-5aad3f9de34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 1b64ad65-68a7-4b41-b414-7705411186d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 5ff28b7c-6d1b-4208-b69c-0f1fbceeff15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #99 6eae56a4-404f-4c1e-8567-826110834c2e)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #99 d555dd43-119e-4b84-b647-d280608ff457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 ac08f4ca-59f8-49da-84af-7f9620a55afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 0e851f33-fd61-4a0a-b4d4-3e0e94b21fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 80878f01-4e04-405a-a495-14bc14c0acfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 167f1b86-0a03-4710-b855-c5efc64079a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 de009c98-7a73-4737-83f1-4f5bb3b83b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 ad20ec7d-dc25-4af5-9c82-501dc2f97458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #100 4aa27f17-bab4-4eae-922f-06ca5fbfded7)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #100 70b9501f-2727-4f1f-814d-e04da2ec7e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 faecc515-58ae-4056-8225-6497de4e8119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 a3983df5-c157-4d33-8dae-17b98ae5e8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 03196d86-1105-4c71-9fea-7f6118633a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 060e53d9-db10-46dd-8cd5-e71971dcc8bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 3dde2b3b-5255-40c7-b149-44d828052daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 89b86b48-8a37-4829-ab05-ca628a9bf3cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #101 450d44f0-e327-4bb1-a662-2ac6c68b21cd)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #101 0993efbf-74bc-4034-93c4-352a61d5df38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 63121aa5-15d9-4c8c-b3ca-10d37cacf109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 05deec7c-5ce4-4e3c-9413-432c811b8902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 19d760bd-8915-4b2c-a19b-7ccb7be2f674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 25867403-56bc-4c81-b2d4-14059d52292d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 d3abb891-3412-4cff-9b35-0ff30139d03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 c1e04288-ce74-4d5c-a94a-d9f231ba0de0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #102 3a3413d5-e3d5-4f52-81c2-08b051f62583)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #102 d93342e9-a6b1-4768-a696-073e19e4c3b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 2a669ce4-6948-4e3d-bb17-dfc30d98060b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 341a0c76-74a9-4ee3-9a7b-882550aa6773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 c744bd79-5cdb-4fd8-862f-5eb238f2b03b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 b7480857-0d40-4a2f-b4b8-cf6057fba57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 958eaf2b-45ed-435e-96a7-2e0171ca5634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 9458976b-ef53-41ee-9456-dfb27b16b318)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #103 52b0e3fc-41fc-41af-8a68-0422c7f2dadc)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #103 17e37e1e-3eac-4912-97e6-99f9d6869a65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 63f3da67-b4c0-42cd-ab60-5330157cbb83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 314a7283-8b39-4cca-af2e-10e4b8ea06fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 c551e2bb-47d6-49d0-b38c-9672e06c2719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 21d2a4ae-ce62-4a40-8766-5d14010c3224)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 21e99555-f6e2-4476-936c-f305729c5fc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 430623ff-8c3a-4959-8967-48000a2c3b4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #104 367311ad-5304-48ad-954d-77752d022e1c)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #104 4c250d7d-312a-4996-99c7-207bf8a5ee5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 d7c8e50e-533b-4821-bb18-e1ba665b9150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 716065a1-ed43-4130-bb14-f054d91d0ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 6f9a6f4f-a711-4eea-8528-69dcffe9fc8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 85fa124c-8973-4971-bfad-3fa4a4660a71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 939ebace-5f7a-4f74-8ff1-32a514681200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 d387c69a-bdde-43aa-ad3c-6e0b17424847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #105 2b3acab7-2c23-482d-a258-6762efa293a5)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #105 a3d96883-e4a9-4802-9b6b-d81edbc0691e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 4dd87b45-3c50-4433-967d-2045d738e77c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 8fc43a3c-124d-4ef4-b26f-d02c085483bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 534d8595-a8d9-463b-b292-9117af627e13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 4d48cc9d-bfc2-4f30-ab50-b7649b0c0d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 c1407a15-c2b8-49f8-9b9a-3ccbc1dedbbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 0c53742f-b064-4ea8-9ca3-ee8a382ab317)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #106 91c511f7-a23d-4ff1-b3a1-86c0d07dddf1)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #106 2241ebaa-9a3f-4905-810a-d1d68cbc83bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 5e8d4351-8205-4e8b-bba1-404fa9af8007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 cf43497f-b180-459c-a2a3-9315ce330bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 a77b882d-264a-432a-afe5-9d67d8280850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 4c3ba2f6-0a49-43d6-9a45-7c8ccc0cf87b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 ca61b6ea-f6e8-47b0-b467-3aaee8d996d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 3d393641-ea49-4e4d-8d1b-1436b9a4c681)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #107 795542b1-3f5f-45e8-97c9-f392375f6b2a)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #107 ae240801-fee8-494c-b096-823000bc9f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 30476e5b-e7c3-470a-bd47-b38cdd29d9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 43658638-1fab-41d7-87e3-41d0eca031a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 ca398b36-77b8-418b-981a-ffb02f6d3092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 227b156f-839c-41a7-83f7-876176b061a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 0261194d-84ca-4232-92d5-372dc6da8e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 bc5f59ae-e34a-4e02-b1b8-b030f61198ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #108 37b87381-ed96-463a-b9f9-033512da6c9e)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #108 8d3adc70-0dc2-4bb3-8160-03b7e9e17175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 8fc72253-839e-4713-80c1-355dcb226b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 aa2fecf3-eb02-4844-b49f-bf537ed15599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 209e2840-b13f-4c82-825b-5b6512ca86fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 6049b1e7-8210-4706-85b9-1b751abc7cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 f4d0cd57-72e2-4cf0-8def-1e3a36c7e5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 be0ae520-da45-4340-b5cc-e07dc7299dee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #109 9d029ed5-8181-4859-9d16-90d20d2926eb)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #109 e27960f1-02be-4c3b-aa73-15fe00efd439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 a4494474-a2e4-4297-9d51-75e16f429d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 9938b607-48f7-4ed9-8087-c7554466f9ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 b70f8687-5892-4c4d-a725-93fe35fc53f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 be2ef655-3f7d-4d40-9af2-268a11263296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 70ab233c-c3da-4a18-9391-3faa5feb2de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 2352994e-bbec-4cc3-9e50-c11abb04561c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #110 7c231582-cc88-44ec-bb73-a2cd6fb46258)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #110 ed44d52b-c339-4929-9988-a06c7c68c28a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 aac005dd-71ff-4ebc-8b9b-668fb559622c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 29ee1ac3-a7c2-4054-81e1-f19a0dce8f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 656f3756-d2b8-4226-b2d8-bd7a6ae0b53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 36ccd87b-12b5-4fa2-8d4f-00d301baa58d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 d55330d9-3ddc-4bf1-ac0b-fb08861165f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 f907de5f-39e7-47be-8be8-e7b251fb5801)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #111 f70ff4e9-caf2-440d-a973-f634716d71ed)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #111 e5f93488-98c0-46ce-ae03-6c8bfcb47df2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 17daefca-5af4-48c8-8ac7-3e32660855a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 31c31925-af10-417b-90bb-83e418784595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 0554fa86-8e7f-45be-b253-f192f4fa9f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 44f827c2-02dc-4607-91f1-7aaaf051fecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 683d0288-9b0c-4ab0-bcd1-3d67f474b57f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 6abeb682-f41a-4457-83a2-a6e459226d8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #112 0ca059b9-6982-42fd-8010-d5c971c6ed03)");
unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #112 9a898bb9-649c-49ff-98d0-80003a7d0214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 eaa81306-84dc-4006-ab61-aaec18746b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 925de4e1-d774-4429-a076-9ee8c16f66c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 779a8e24-41eb-422e-995e-19032e841125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 fb9575e6-bb80-4917-920c-a080252bf910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 cab87faf-eea0-4b47-b29c-1a66ed091b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 aab8d1a4-34f1-41d4-bdbe-e5228446f0bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #113 0e1696b6-25b8-4770-8cf7-8debb34bc977)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #113 fc6cb603-39a1-49f6-860d-ba1183f6bc1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 2adf9146-bd45-4cc8-9817-8f761b50df9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 2473dccf-bc60-49d8-b250-abc15920feed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 962cf059-22f2-4e45-88aa-7795ce4b2584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 96a20fcc-2a19-41b3-82b0-229a7d3aaab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 965c6192-6e7a-4108-8673-2d8794a3820a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 8bacfef6-b21e-46c1-8659-4ab1da47690c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #114 c164f65e-251b-4cb7-9c2c-2179b6f734b0)");
unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #114 15031c6c-525e-4d12-855c-a17fc6323b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 7c0b3ede-5f45-4174-8404-8bd114887729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 5d885d89-72fc-40d9-9806-651240b5443f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 f95bd09a-60aa-45c1-aa7a-cf845f4692e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 8c4ead52-ae6b-4d34-90c2-9dadbe5fbce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 03ef0f92-e705-41db-9fb6-39dd999bf487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 0a49c49c-8060-4e06-b470-23910020accb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #115 69938514-130a-49b4-88d0-c1cf90ace201)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #115 d6ee8caa-dfc3-45f3-962b-098791a27a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 78b98d04-9815-42f2-8473-e3bf2a6173aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 762870a3-c298-4475-ba10-c53ba5984989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 a9407ef7-b87e-480d-8a15-9a9465245c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 d5e6fc99-1935-42ee-b74a-502cf8de948e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 4823ef14-6219-467c-aca5-0715a3f9394e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 08ee5fbb-739a-4bb4-8573-6e7fefbf22dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #116 aed6824e-a6c9-4df8-8891-c1fa9f609481)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #116 d8fa799c-8f85-4579-8e01-0285d49e6e64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 a2b8ca81-9931-462a-bf1d-e4f09db1c088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 b15fe2f3-03f4-4bd3-81d3-0ad6d5d32e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 f68b591c-f2ac-4b8c-b20a-7ef472e2a8d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 64d1f226-bd63-4ebe-9521-a97421bde179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 f08a0d36-8d64-481e-ace9-6ce76c47a1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 a483ee68-2dde-446d-b3f2-42d1d23940f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #117 6b3898f9-d9d6-4397-8131-7356c8796c89)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #117 66290356-6a9a-45ef-a062-e93715b748de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 424aa9e0-2e63-483e-b21c-4eb7ff6cc52a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 27dc1b1d-392d-40e0-8888-88eecd7603c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 b0567ea3-f5f5-4a0c-be8b-0a4bb44709f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 14e6c0d7-bdc0-4d04-932f-b569dc2d0cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 b1e0a51c-66d0-42d5-a315-522d7617e9bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 5dc90b2f-366f-427f-9efb-d0b04ab6e53c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #118 76f5ee74-59a6-4c30-8d58-30f5302c6e8f)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #118 23338827-07d8-4279-bdf0-e17ac195ffc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 8531be7a-d633-4ee3-8240-78b7f31e86ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 43d1bf13-f370-4734-911b-aacb90681b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 08a3b649-58eb-4a77-ae8a-0fb11f129bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 c6e4aea3-6b16-4e94-8d50-cfccf81d3e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 33386cc3-6b8e-4942-b4c6-d785aff266e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 4388886e-96a7-40bc-a7d3-2f4259b23eb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #119 1ed97866-9ba3-40f1-a4a1-fada220aaa82)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #119 516f75cf-b2cc-48f8-acae-1a2605f3043c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 e508f7ba-8ced-49a7-ad5b-371491ace2ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 b1a66a50-0a52-4a3f-90cc-500bb0950138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 c45105b0-8c72-4e4b-81ad-2af9fa019f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 adf8dec7-9ec5-40ef-ae9c-5fd916554e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 bbbae9b2-c0c0-4aaf-b5f2-69afe8ce5887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 6ed63918-2cc6-4463-ba1e-0fee929c2e03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #120 557e3628-881f-4444-be93-8918bc064982)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #120 3f12d557-bc5a-41db-ae97-a4c8c5b08207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 ce10420b-62ce-41c1-8ed2-2ec0adbe937d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 b1254265-e18e-4a40-8059-3fc47d55a42f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 5022d89b-4164-44a2-8d7b-6860bb5f07f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 4bf5dd76-5d25-4093-9f63-b43cf8743114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 0fff726d-b6c6-4e86-9495-5c2a0e386c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 7bddded0-d3ce-4f03-9648-6683a1e00fff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #121 11c62520-ec6a-4192-8eeb-b0aa5c8acda7)");
unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #121 0551e3ee-8ee6-4895-b726-4d86917a8866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 db563a3c-e654-4c8f-bc70-0548028f55e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 8cdf5b71-481e-47b2-90e5-755977ac76be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 5f70e938-0d36-4ac1-8f8a-98ba3fa7bb2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 ad99180c-7b2a-49f8-969c-45ddaa44df8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 5716294f-0d2d-4f7d-8bed-a18c218d0233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 f8c32e50-c539-4a90-ba7b-7da2ee0b4557)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #122 1d4800b3-8e87-4f46-af9b-ce873897ee4b)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #122 b8bde76a-2451-4131-9f13-4a6b58d0c168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 f58e3dce-0efd-441b-8ce8-99cadde27c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 1d120251-53be-4e37-8647-4a71fbcf70b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 32b10d2b-0f9a-4405-b87d-d4ac90a709e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 357bcffa-14f3-4232-ad72-7afd431d1df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 e4d698b2-e7be-4b6c-967d-e7f2a321e19f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 7c1e25c7-0ae3-4109-80f9-e22708b251b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #123 2f0f5588-f4e1-4205-ac4b-ed3c4fdb8347)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #123 f8d4c48a-c4eb-4aa0-973e-196fd9f9657f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 d144bc58-8ffb-4fbf-865c-cd5e6a868228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 7b711d16-cfc5-4f88-ad87-99f49881148c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 86497343-eec5-406e-963d-6f279e05474a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 9b8272e3-ce7f-4c30-a4a8-01a43fa635bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 802da291-7e25-4f41-a5d1-20936b0ae10e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 01f28c53-a3d1-4268-bb85-b018c35e60b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #124 6642b412-8ab1-4b93-b617-66a5c48e242f)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #124 4367bf50-abc2-46b3-89a7-ba94d0701dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 35ad4854-b4d4-4b2d-9faa-bc79d5da2bde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 d94ab2cb-f072-4957-ae0c-bad940dd868f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 63ce88ae-2c6e-47d1-898c-048ba2c8e1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 41fb22d1-6057-42f6-8404-4d81543072b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 b544ac34-bdcb-42ad-94c2-90fbfe0cc6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 1e502a24-4a93-4bbb-8492-b38583a96a9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #125 76a195cf-7800-4f4c-9dee-e59a8a303981)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #125 d98a71fc-a4c2-45b0-a893-5416b11093e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 67330c29-fd93-47bf-ba86-8863a70e53c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 37474e11-ecdf-4d55-995b-336a3d269ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 31f4c0ad-bf94-428a-a1e4-c6da9d77315d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 bd5b6a6f-1604-4429-82b9-5bd76a8676cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 15264bb5-f4c9-41c5-b01c-7fa90d956661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 388e9519-7099-4549-80e9-11ddcfc02e29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #126 4f10e37d-b528-4ff4-9f43-60a8ded7745c)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #126 96cacf4e-5970-4dfc-9d8a-7226ddab4d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 50fe84b1-70be-4ab4-ac11-3b07b981f46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 9652124a-e376-42a1-b886-5d2f6872fc70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 b68894b3-08ab-4483-b9d8-40eb2f04c19c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 13db94e9-57fd-4e6e-9b2f-324bee7f2498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 6caa52a1-29bd-4eb2-9fb4-12dc1fbce50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 e43e56fd-71fd-4a5e-a535-0f0be2aa013c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #127 d036f9e5-ebbf-4646-ab70-2ed329cfc1c7)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #127 cde309fe-8758-468b-81f1-a38cab38c0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 922a1697-db31-4b8e-8fd5-da6905702b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 7f0f9d38-d4e1-4504-806d-396bf834b643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 555e2366-44bc-4f2d-aa60-1f42cb2bcbfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 2883ebf7-a50b-45c6-848f-5813bc5951ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 8c66c6f9-67cb-4785-94fe-254a6029ce7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 3cde6407-c095-4a3c-a095-c8c7fe302e5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #128 e55c3dba-a1c1-4237-8e01-5110cc8aa990)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #128 4cbf0044-2301-4d38-bac6-f8e8f43f0e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 d8eb65da-f2d1-4d92-bb73-47f6e734e0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 e4da1da8-5bdc-4c0f-b80e-15ea7bb5169d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 d45ba0da-e9e1-4c15-9bb4-1a5b093c1302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 aa7297e9-cc45-40ac-a7ed-fb2bbe37430a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 da0990ef-6e5e-4a4b-bc26-0be0fb6e9461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 9bbfcb33-50e6-4430-b2bc-2759817967ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #129 f43acff0-b9ef-4024-94ba-8296c8ef3ea7)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #129 af3d654d-2992-4548-b310-820b978986dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 d4111013-115d-49c8-b3ab-95c39e7c3246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 e43b79b6-21ab-43d9-ae14-0f98ab03e9cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 9076403d-6f43-410e-b23e-87f42d3e5137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 d0db1002-7edc-4b01-8ee9-885d6c0a9f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 dd655654-8657-4683-aecd-aa2cd5a35392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 304c37cb-1bd1-47a7-b8bd-c3723f8c66b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #130 b3605c93-c080-484d-ab66-c7668e762615)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #130 8d02d3c7-2001-4ca0-81f7-7e441de28c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 74c19892-3509-4191-a60e-a52759f496f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 ad5e0bd3-a507-4337-a10e-de75fdbbe2ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 09f6b0d1-9300-462a-8d0a-131475864162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 c8b71301-b216-4136-ae7a-e93ede0d4417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 a97ce087-665d-4416-bd04-97aaada5e29b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 d5bc0be9-7f53-46bf-8380-fcc431bbfc8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #131 e431544b-c631-4385-a340-e98da658c745)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #131 c52808b5-8b1b-477f-99a7-cb1a2a84f262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 8af8cc26-b590-4d63-82b3-50a85ce7d2b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 6027e9b8-f208-4107-b1f2-d035461b2271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 0b7d64f0-6ccb-46cb-b166-c10184ef8986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 6814eb9e-c3ce-4553-9727-ab84652aa76a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 7ea4df46-5a6d-4fa9-8cd5-4b0315db4604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 1cd45eea-fbec-4976-a568-95bee243143c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #132 ef5d0649-dd4a-496a-bedc-8037ee5daffb)");
unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #132 3ad2bcd0-94f1-4b25-8842-a7be22dca724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 52fcfa6a-cd0d-409a-a46c-f41a10f6e1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 cc879552-e9a1-4538-8625-cd4cddf1b41b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 4b631824-44c2-4dbe-a6de-ca8108de6de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 ea1c38e8-2435-4fa0-8a53-aadb6024a8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 92bfd24b-b289-41bd-bfc6-8a6d0f405b8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 01b76e9c-730e-46fb-aa08-00f1e989db04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #133 609b886f-781a-48b2-ab28-f8adb051dfde)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #133 193baaf6-e4ca-4177-84b3-f51d1a1d990a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 30b98b32-5bed-4b69-927f-068adea6c77f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 0876ab8f-3585-4260-8010-1d99e33e41c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 fb78d72f-2ae2-4735-8649-57b3a7488cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 9ff5f784-6081-4dc0-9230-e15405f9e1d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 817692af-c548-4d39-93b1-d45c797b7c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 8998fc9c-7f8c-4904-a230-3ce3c7203f47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #134 64882064-1e71-4aa2-bf8a-e7bd6aebc972)");
unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #134 09cf7eb3-5ca7-448f-9b34-405f0cf00c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 d636a099-b541-4cdd-977d-1a193d7e5c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 6d743dfb-8eee-4414-a641-bda358c68893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 787a7b46-be3b-426b-a808-2f0c8d2f800a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 847ddf0d-ed2a-43b2-a1cc-e2911f72b3e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 4250e6b1-24a2-4f04-9b3f-afb6bbf353e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 f8f386e0-37d2-430d-9857-0b0b1e619ef4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #135 38085830-54b6-4390-aff2-59bb70294135)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #135 0867509e-7d17-492f-a170-e517fb50d146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 57c31107-fd4c-4db2-a7b6-54f959fadbbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 06ba7319-ba49-4496-8c69-0e20249fcbf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 9856fe02-35b8-4a3f-a364-eefb0474ece5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 b405f5ac-1637-4a22-a709-bbca0a3f4d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 da4d3b07-551a-4ef3-a6dc-ebcad5d72626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 c7193d84-2a8e-4dd2-aaa3-bf3ea580aac1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #136 28e4a154-be96-4dfe-8ee9-d4d2f2f4a6e0)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #136 d30e49e2-dccb-4f8f-bb98-6b7ddd84ebf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 a044bee8-6053-4339-9c36-d2bdba37ffa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 64cf5ed3-349b-42bf-81f2-a0e973b2ffc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 fc2fa398-d46b-41bf-bd2e-3799d77bfe96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 d65440c6-6d61-4715-a304-e14fc053f960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 2f37d402-e1c6-437b-9965-70f8006292cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 b21c13a9-291f-49cc-98d2-b81b491aa861)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #137 785e0bec-0622-439e-985f-26564052b5d7)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #137 b0a97e04-65b2-43e5-8edb-2ea6b7707bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 f572e633-b317-4ec8-8bbb-e8f9db7c0229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 fd7351a9-38c3-4e97-b370-fc6c664adc7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 c8a33059-ce12-49f5-b6b5-9ab8e6053833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 6180d00b-886d-406f-8cf2-608a69ccd445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 d3caaac6-eb2c-4574-a7ff-d4d61a2a102c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 75bb5a70-e5fd-4006-91fc-ea060c55febf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #138 f12f3e6c-8957-4d97-85d9-3c22a05f79ec)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #138 7eab2305-ed13-49a5-ad79-46275a4fd155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 31c00529-2828-4776-9687-a630f57dc98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 cc48a03e-b096-4faa-a5ed-17f81685df3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 bdf1b74f-0dcb-4205-881f-de85f223179d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 f441feed-778b-4eac-9b33-777419a5980b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 6631740b-9ae5-4bbf-84a5-fc082f4e05f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 f36c71a3-ddfe-4300-91d3-410b1783a2a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #139 647c4542-9c4b-4125-bcd6-339b1ac62a52)");
unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #139 20aa1168-7bfa-4c80-aae7-e01404eab9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 8d809e3c-89be-4c19-8f92-d55b879fca8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 70bfe930-efe5-475c-bb4f-0389e3eb5122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 6d268e7b-70d4-4c8a-8026-4e23cf4b581e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 f58f4934-fcae-4797-9905-6bbe76095b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 862d3f74-2c3a-4de4-9803-5ce561ba2339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 79aa851d-a17b-4261-a60b-a3f54a8f2ef9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #140 f78a189a-886b-472a-b400-e3a813fad4ce)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #140 33c22c6f-59cf-41e9-9e98-6bedb838d90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 308e13d1-ef64-45d7-9c91-241e9c78c665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 3263d2f3-3185-46ba-b481-24079cb02309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 159a2625-91d2-4f8b-af70-97f9635edf41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 aa6d7d61-5ad0-4d2d-94ec-6c767c9a5d36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 0db6449c-4198-4292-a355-7d133e09505a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 e1020c72-972b-4516-9c04-7870323bf72b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #141 24be05ea-3f42-459f-940a-f29aab1d1377)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #141 f1abd877-ba5b-431f-9980-93069263c10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 631a596a-b893-4144-9016-e73cd863fc68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 6a1f27d2-d095-42a7-8062-9614c321199b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 b1deb486-3c98-45fe-a24b-479bb8e11ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 e612ecfe-8ad4-49f2-b8a2-0b3dd7c1f5e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 1851c706-1645-4bbd-b4fa-dece4f92aa3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 5aa282b0-f6c0-4ceb-bc7a-b1e56df8cb78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #142 6b132f1a-10c0-48ec-93de-67a13023e0cc)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #142 b27210da-ab4f-44dc-b632-be25eda37325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 6761a76d-a6a4-4bd1-90bd-f0aeabdc8486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 e75f9734-5bf6-4193-9168-135469777ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 edc805ed-9076-4cdd-9eb0-6e79fe52a219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 a2b95303-19a5-4ba3-9080-03f45eb2bacd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 f5c30d3c-3714-4b25-9a4a-718dd7f4cbf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 6ee7015a-0d09-403d-893b-62b05985b6f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #143 cc01dfbf-70b0-460f-b45c-0b4da599ddf9)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #143 65025ac2-7be0-452a-b01f-11e8282e2f1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 09ad6d07-fd5f-4a7f-9746-1fad74d4ac47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 6c160e12-0041-4ef5-a238-7b7c0ccce241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 0e2cab85-aae2-412f-a86b-221ba0b1566e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 48ebfcf0-d601-464e-b9b9-0f342fd6f291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 b93a5299-8550-408a-9638-7fb0265641bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 f1aac7e0-e19c-42bf-bdd3-8d8f84c802f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #144 0546122d-5517-450d-a0da-8579a7352e97)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #144 2c669dfa-9cd8-4825-9b54-2072e369030d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 48395eb7-ce23-4684-9330-fe06513a97f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 f071ab76-664e-425b-a17c-14acc4ab7015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 962febea-1678-416d-a815-7c918b71fdcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 0658b97e-cb2b-4536-b797-9192791895e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 d5853f49-fdc1-4ff8-9ae8-fcd2ff92807f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 ef2ba671-519b-4baa-b6db-1c6012bef3f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #145 7a20013e-ec5e-41c0-ab69-e9781890ed7d)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #145 e4cc9982-ec59-4202-b015-32317cb44ec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 0dca117e-748a-49e0-803c-88844d881a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 5552fbf8-2158-412f-94f6-a2b9e7565fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 c111234b-faaa-4b57-acb5-bcf64ae4dc24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 521fef51-319b-4f43-bd2a-bac7eb5f9461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 61a2dc6c-c46b-4739-ab1f-59ab7923b9b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 2abd663b-26aa-41b1-b574-f3e6968474e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #146 59262001-d3d1-4a25-b1fb-614e4bc54c11)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #146 25e57862-7019-43ca-9ea6-6926dff8e77c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 db4420c0-e90e-4864-bb22-e51726a25084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 d53c17e0-6abf-40c7-9c4b-5b73587bbdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 0e03279a-c521-4ced-86cb-4fba48e7f3b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 58681433-bcb2-43a3-bc1c-f6e41ad108f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 72319c95-2236-413e-a156-378055fd0f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 bc91f587-9f27-465e-bb2c-47366df0fa5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #147 9d75bdbe-effd-428f-92ef-e4f5c9274ad3)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #147 3bd7d1d5-60e3-495d-aa4d-d683946f0f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 b7d72a35-a6d6-4c25-871e-73e0f35b5bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 7e2cf495-1b2b-4edb-af6b-3fbdaadac242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 5ee5fc7a-4239-42e6-81a5-7676d43355e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 e802ecd5-f19e-45c4-a0b2-9d86d76edffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 036294c5-6859-4ae8-b1b5-50c5feeb90e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 a76e56b6-06ec-4af9-8648-735336898008)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #148 5a912425-c2f1-4ba0-96f0-e0ca016f7388)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #148 d26144bf-1e9f-48c7-97c5-25ce0244d0f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 1a7e80b2-9a11-4a47-9c55-9b6d3e1eca38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 fa9f5250-69cc-4bff-b824-483aac4d8d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 8a8bac1f-967f-41cc-8dc5-691fc24492ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 f7b18c2d-fc85-42f1-9fd7-db95308ec507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 0e301de6-6d9c-42ac-bb9a-de37ff5728b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 86bb9b62-b90d-454f-8b8d-3b7140c8e4e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #149 c177f25e-d7b6-4510-a326-c346ca2de72c)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #149 ee7d871d-97df-440a-962b-43b49019a6f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 64c298e8-4558-46ce-b297-a05ee1c00f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 8d8dd6e5-94c5-4d31-a189-12923243604a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 fbef95d0-6a2d-4c42-b81d-4806bb2f7f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 775a4db8-74cb-4f74-945d-6704cfc9e849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 ddc6f069-ec07-462f-b85d-8b766397e237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 22d8d40b-7efb-4942-bd63-392582fb7c6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #150 2e488bc5-7c92-4f3d-9a7a-4c9dd112d74e)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #150 e353888a-3b7b-433f-aa1d-d0430da82257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 34e77d63-3bff-414d-84c9-2c0f80eb59b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 f7ab0bfd-e35e-4f5c-990d-3f25482f39ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 bd884fbd-8418-46af-9b89-bd3548181f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 94dad5ff-e940-45a5-95a6-093b63cd409f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 f67f0a78-f179-4ad0-ac1a-1d43ab524b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 155731bb-88e5-40c4-aab2-2c86340ff1d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #151 5e1a7261-271d-4f90-8c58-5a6d83e395c0)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #151 d10e8e8b-f2c9-4eb4-9ca1-12f59d9e9c25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 25bac2cf-3427-498f-907c-8284e5ccd3e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 3bc1b494-50bf-4212-9cb1-010e1ecfc2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 cadf1b40-2a70-4a58-a300-3494bc4078ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 b7618e43-7e09-453c-b2e8-8d23e4fae316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 72a27e9c-0534-44bc-b13d-92ccf51ba246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 dca1b5e3-e7af-46cc-afa8-841a50a7d254)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #152 9f85a148-7856-4a42-8d06-9b2aedd73088)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #152 b39a3888-c92b-472d-9eed-f140986e5a91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 35885b1e-ef70-4ca8-b86d-2efc4fcda8fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 58ce64a3-e66b-4edb-ba04-effada02c099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 85cfa853-1413-458e-864c-bb69a015ab40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 b966213d-e8cc-45c7-9391-4142b7e55712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 922afa98-8916-4b33-bec0-088a267893ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 517bf8d1-2d65-40f8-b3e8-101f8cafbf0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #153 2f8cd5b0-75ce-4fd7-8cbe-399bfea50b94)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #153 de81153f-3f7f-4c5e-92ff-448b3950fa02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 f7e1f8eb-9cbb-481f-9ab6-e9cfd60b66c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 2c3e3bcb-e8f3-4aff-9417-5f8d929cffcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 92aa43e7-6497-42b7-bdfd-f8105346bedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 b5f1dcaa-5ac9-48d8-984d-f819c2e3f90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 2140621a-c3d5-4590-a763-5b92094297c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 4513c5be-5c6e-4394-860f-6c98bfd5823d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #154 c994f0d3-4769-4a67-a505-ee84f4e8a7bb)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #154 e6e3380b-c797-41d3-ab8a-5544c80fc2fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 e33e5ecc-72ef-4034-afd3-a72300a84b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 43a815ff-7075-43f7-a9c5-d0bb57ae25d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 fc3de8b3-6d91-4e59-9555-6d1a396f8de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 b015ee5f-87dc-40c6-ac44-4dadd2b56fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 4cb7b609-8bd3-447b-ba4e-d828fcdb38a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 a6f4db2d-38ff-47f2-8904-b9145e76671d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #155 aca39e91-1d1c-439e-88d2-9c1fee32faad)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #155 63837a2d-a768-4e60-af31-c3d656af2106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 68971abd-08d6-447f-8d96-24274b19a77f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 3a0fca92-a892-4cec-b4dd-78013e1bb3a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 9933467d-2a18-4049-bdfd-1e5a06eca976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 645ecfd3-c7a8-4db8-a7cc-31dc0d5f01f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 5318d967-b263-4604-be05-562b5c4caeac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 88546379-49b4-43a3-b06f-3760d78afa82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #156 02160002-beac-44ef-ac03-e9c5949de994)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #156 324ab5b4-a56f-455f-842d-a32cc203a288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 39791326-6a7f-48a7-9fd3-5f46f2ac99d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 2f10b8a5-b78c-4784-bdd8-4c96fbbb8e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 14f1ed23-15cb-4cb4-99d8-d746bc55b5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 ee2dfdd3-730f-46f0-bacf-9f4fc630197a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 dbd78bd7-b8bb-4aae-af9e-783541660296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 b29550d1-b41d-4805-95a0-1ad47e28fcc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #157 a12ffffb-84dd-40db-8e0a-8bcd71e31ab7)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #157 7132ffd3-573c-4f3d-8089-970233122c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 8cd9d2bb-ca4f-45df-a03f-bad15411e7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 4f8c5ec0-152a-4b0a-b405-4907ad2ff501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 876cfa3d-9a91-4754-8188-599c56293a69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 6a0e41ad-cebe-4c47-8551-25b48e2b000f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 f664e1fc-cf2f-43a6-bbd2-3d0e4f394711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 080ca6b2-9c0a-403f-b91e-feb3ffe1bb17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #158 ffcf4b10-4690-47c2-8d3e-8c019f99f255)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #158 119a134a-3f8e-415a-90db-d512fe80dcde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 46895278-4fb0-40d1-9e6d-7fd2e016d04c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 6a7044c7-b503-4b5e-8b36-b2187e7a3a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 27f3aabb-cb8c-41d6-9e6b-2bbf928eec59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 419409b9-6266-4175-bb7e-dc9bf52e31e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 b4c93b6e-6c2a-4058-9590-add9f6fd717c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 7a5c487b-7dbd-47d8-90b1-bb56ef643df3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #159 f0cb0018-9a75-4c24-ba99-344fdad52fed)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #159 f465bc5c-7f33-42f9-a3b7-5f0894c5362a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 0a54cfda-ed94-42a2-bfd9-63d508809769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 65e3d1c5-b67a-4161-9977-20c202b04998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 f20bb3d5-cb93-4e02-b33c-cb421ccfc052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 b89d96c9-13fe-46fe-b1b5-6d6abf6acea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 ec501d35-4dce-444b-b404-c21d6c9108dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 bc94a763-e0f0-459d-89ef-e9d4906fbbc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #160 6b2c953e-a527-4eaa-bd41-de7b096bd212)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #160 af7c83c3-153a-49cb-8017-92007ca99421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 02720482-9b4e-4e35-9ebf-55211d6a8b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 a905a954-e46a-4a7a-b8dc-a39b9ac2e724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 0dd2053f-5deb-493d-977b-fc935f2ad300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 995cc48e-89bb-47d3-a7d8-d0bac7b1c90a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 b7606154-ba0b-42ea-b3b1-9101f56c8fd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 2dfded75-1a0f-48c9-a144-726a76763b7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #161 63c2d0ce-c2d7-4f93-b471-39d0c5159e38)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #161 7016bb23-b0af-4e0d-85ee-7a93a63fb997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 132ee19f-f56f-44d0-b84e-09f369eedf59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 c35ac30c-d678-4153-8ed6-2415f96114ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 cb311f58-6da1-443f-bd70-b073ebe48c04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 8882ffdf-dee6-4d3d-a662-3f24fff4b377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 aa50824a-a449-4f05-85f1-38c2e617020d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 e2aea418-ec81-484b-b736-016c29780286)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #162 22870c3f-278c-45c2-b76f-ea254ca32dac)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #162 9535248e-0385-437b-9a12-5f682c9a1d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 9cff3403-43bf-4cb5-bd2c-c1cefde1d56d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 3a401f4a-2a44-41bf-80c2-0c9ad30e9829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 3dd42214-4b7f-43e7-818e-a825b478fca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 10e3d727-ab92-4d06-a95b-0210af99f831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 18e9a743-d9ca-4031-a487-97be76e7ab31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 54898e47-0f4f-41e6-a224-b9e55232c713)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #163 380d5065-d21d-4ee2-b168-976997555c43)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #163 a50673ec-1a65-4c01-b774-da910e529a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 bc80f7a1-146c-4e5f-957a-5761403c1ebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 c669b708-c22b-4571-9035-bc55aecd1662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 e3f87338-8da6-4322-812f-2a9e8402cd7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 e7a8b685-a103-42a8-b1fb-004a4c249cc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 721cd09c-c4b5-472f-88d3-7d5138b7fd13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 e1a7b494-8b2a-42a8-9d56-d6cce1316ad2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #164 07505823-2c16-4048-8b4a-8d9386a3b115)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #164 cdf566f3-06d0-4d25-a2db-37915733f423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 6ae28c4d-a08e-4864-9eee-1f8a2b439ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 4ce877db-68f5-418f-834b-0bb0d3752fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 80c47e82-6989-4c75-bb25-38f31e02696e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 26ac3809-9e5f-4dbe-95b3-11eda82a238b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 d2fd7d48-b528-4895-a428-f9beb7d20067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 5f37bfd5-43c6-4f27-82b7-f5f2c374a099)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #165 bdbe8ab0-6ad2-4cbb-989f-bb796bc5afa8)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #165 db156ece-a97e-4db6-bc28-a59c974ff3a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 c8c20e01-d571-4ffa-9960-71c0069c2529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 54eb755d-16a2-4180-b266-b326697fcbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 1dc65ddd-aa17-4bcc-9bfd-f204b431040a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 c6119c10-478f-47c8-9832-3545a40b6006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 0e1f2cd6-5661-4d47-abb8-9afda0d7bd0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 3af0981c-190f-4c6b-b9f4-0750606db1c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #166 51a1cbe8-6b0b-4651-bc4f-d5f00c99c691)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #166 9a5183f5-ecac-4304-8243-ad729023d005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 aa1523e2-54f6-4a0f-af96-38bc3e124084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 5f8df436-70df-46b0-9b20-6b7586421d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 c13f9f33-bc11-4cff-ae84-cdb7f634a396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 a3a07705-4c45-414b-a500-3c16e9866304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 7b56e264-9043-484e-9868-5e9a00742158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 b47c7586-bf27-421d-832a-42740846bd57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #167 1e219445-b305-4063-bbd8-a9709618b238)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #167 d733616a-55bd-49d9-9cdd-9da7693fbc48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 c298f718-f777-472e-9e7b-3360605540d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 61c54932-1eff-4b59-99f3-d0969832ba1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 c2f55eb5-cbc7-45eb-a3c6-630d3092aa41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 3bc289f7-1d26-4427-8e03-1f5ebc85db23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 6d3888d6-c2fa-4495-9c3e-346fb9b6a021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 8a36045e-19da-4f2a-930d-c0c63c77fa62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #168 61ec75d5-d55a-4b8b-a783-6f804b3755b1)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #168 af41e271-297f-44a6-bf50-0b80c45ad0d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 5c5e3c18-6176-4413-8d45-71df7c58f7a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 f1c8faae-cf75-4e4a-8137-8252f1b5ac83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 b11fb8eb-cc49-406c-9c17-9d84366e3946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 c5a45e6d-6b4a-411f-ae0a-a2175db4bea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 30e27af9-108c-4e25-ae32-2fc8daa5f43d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 b3ebf228-fa4e-48cc-96b9-1e44950e6ed4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #169 e299190b-5575-4d0e-829d-248df659de9d)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #169 1fbc1ab7-cdc5-4552-9e4b-9ddcd3bab27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 2812bd3b-b8ce-4166-a969-5b0fcca024d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 248bc45e-280f-4f97-959e-6bf3019141f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 159779f3-726f-44a7-a950-d6b11dfcfe57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 7c341d29-ec44-43af-8cf2-904cfc56049e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 d4910e94-652b-476f-9bf3-3119523db066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 7e189893-b483-49b3-8eb9-c721f4324717)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #170 197a67f1-11a8-4d00-b8e8-514be745a6a9)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #170 847fca26-a97f-456a-8bb6-57a1dd9b4938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 550db178-77a5-4c3f-ae7b-ad3c30e8093c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 ce492f50-6599-4e3e-bd87-984a9301b2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 9646af3f-b4df-4450-ad57-2159f59b1798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 304abe2b-cfe0-42e3-90e7-9043c746ff83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 d304400c-7d5a-473d-9c3f-086a8df95318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 dbcecd05-f97c-4e04-8d26-c7dec7020e40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #171 53876f95-d2e3-4670-ab1e-ecbc7013678f)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #171 98b8921a-7262-44ef-8192-d179c25a3d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 3408bdbf-69f2-4332-b5ac-0fcf66db8f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 f8e2c5f0-fa9e-4591-923f-498b921f1515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 516abe7f-3b01-4d5b-863f-269b9500f45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 d0aca9c3-087a-4266-835e-d0c2ef74810f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 8ee95e37-ba6e-449c-b152-dfeef1d47d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 6779d574-9a0b-44bb-81ce-1c4390af1063)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #172 04605dfc-92e8-4191-a9f0-5790f6e54ee5)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #172 e2911756-62cb-4108-b9ac-11d6cbf69d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 4f80675c-46a5-42c7-a20b-0778a3e6657a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 5ab5e16b-58a8-4042-bf38-7ed8d3b9f908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 a554936e-a543-4d25-92ee-d1ca74580458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 3ac79658-eedf-4f35-b941-11a68ac92c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 72a06a59-e76f-4196-8fe0-86c9ffe123d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 911c9379-4b69-47f0-af51-2d27241087b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #173 1cde4c34-7fb8-4ed7-9ce8-801b3093e300)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #173 4069bfe7-a2fa-4dc6-b32c-08b89279423c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 5b883c78-3602-416b-97b7-ecd57c16bf48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 f482b05b-4738-4e00-a929-9882f0fd764d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 6880559d-89ad-451c-970b-6b0264b483be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 38e27aa4-3348-4748-97f1-85f0d9fdaaac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 629fded0-6200-4a92-bfe5-68188f68bf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 e7f29330-b28b-4b1a-af5c-e6fc7cb9e5da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #174 d5ff2ffd-8c90-4f8b-b37b-6ef7d2dcaec2)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #174 c961f87c-afc2-4d6c-a919-1cf03b580169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 bd0869de-8087-4bb5-aba9-a2e8f8a63b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 305d2f0c-a8a2-43f1-9b3b-3edcd3ad27b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 4a40216d-93cb-4ddf-b5b6-d8a0efc8ad28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 8fdcc3ba-929c-43ea-a23a-8f21c78352fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 c5626bb2-990a-4310-95ba-f54352fde156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 e88e90e1-f363-4530-b4bd-9b65a64612f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #175 78384c92-efb1-4237-bbf8-7ed7fd74a16d)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #175 4b73cc15-f19f-4285-b948-a7b3afc262e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 4775cd81-f68b-4288-a9fe-f1bc836a21d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 903e921d-7120-457c-a458-127f55297ce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 9012a9e0-9705-4acb-9bfb-e456b9837a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 5b2c5e60-ed78-4119-bb27-ef242b35e609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 1cce43e3-928a-4ea9-8568-cbcae54c6d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 924dd132-5ba4-4b09-b93e-755e26624e64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #176 d089fd8d-93fd-42e0-add3-18b30e278884)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #176 c5e18021-d010-4d70-acff-7fcf03fc0ba7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 0ef5caee-535c-4090-a3aa-f41dbbcaee7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 ee740c4e-a727-4dc3-bd88-4b8228a3264c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 470e5834-7f17-43ef-a967-9d637fe2a3a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 3db2e3b6-3062-488c-aa97-994df82c1075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 8c6e40c3-0b3f-45c4-a419-6f11df44ea08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 97f11d6c-558e-4080-926f-010bddfed95b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #177 37f4aea3-9c90-4e31-afb8-13e97a37c8a0)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #177 7e8e6e2c-308d-4183-8e5a-f352ec788781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 eb80a9ec-0f4f-4054-baa5-74d6c66b23da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 bff0a63d-27fb-4e45-b897-2fe78ff77da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 d880e382-fe52-4a04-9c23-9d21ad0b0e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 64f21656-bda8-4971-a2c9-a1cacde11c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 b1743d1b-9cee-4a8b-9ee1-23dbefb5bbe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 b907113d-723c-4ea5-a9ae-7ca59bc0c279)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #178 1905b272-5ed0-4c15-804d-445d465df3b3)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #178 7b4c17e2-46e2-4bc2-94a3-97b5c8570d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 3bc9f6f7-505b-434f-bb7a-d25a0d433299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 61b51e1d-2b0d-40b6-80b3-cfadae0f493d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 41d775b3-d8f6-4dcd-9a90-57e0d49ba194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 121bf7fe-4839-4781-b623-4cccc8bd0ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 31edf65a-5da4-43dc-9f3f-9dfce2c55e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 730aea62-b16c-4e01-be66-ee04fd93651d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #179 1fa9511a-eb91-451f-8c99-5e72af1c0264)");
unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #179 d52332fd-b9b9-46b8-877a-e6a9dacbb038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 493d09bd-8928-4e41-8a5c-b45f11f476bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 68ad605f-9483-4d97-abf0-0c4a17c03f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 ea4c79d5-5909-4103-b66d-af2308b9476e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 c6f6ab44-4d07-4ab9-bb92-f30442346ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 65f4caee-4951-447d-9a0a-026ebb263c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 ac66d1cb-590e-4db5-ae24-d99ab549e5c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #180 ae8fa9fd-c927-49d0-adb0-5c266c461066)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #180 66f55ef7-12db-4c0d-8e27-c79eb133ee45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 93a0f112-f66c-4aab-b28b-66bdb3787d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 80d5e952-53f4-484f-a906-266695a25f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 5784fd8a-37fe-4fa0-a7b8-95ccc21d69ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 52fd60ba-6b0f-4d1f-8ed8-6f1d170f0575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 bfa152dd-26b9-4c71-8f2f-e3852f7c61da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 839335c4-bcae-4d1b-93ed-658b8af2cd08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #181 03e6ee31-9ed1-4746-b8cb-568f3b6c6b21)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #181 3bf2bdce-ee0f-4f87-a5cd-30a5970b6dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 bda60139-fc29-4a70-b5c2-f96120da7328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 bafc796e-83ca-44d8-b95e-03a0fbf49d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 5f81d030-2bb4-4476-946a-fee1739cfa7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 c69e5b41-93bb-488c-943e-0ecfedbb82c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 693b32b7-af9c-46a7-a753-8c067adc6068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 8be38253-575f-4f32-9640-aa599406da2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #182 8021dae9-9846-4b36-bc84-c5ff95b863c9)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #182 6a0fca18-db56-4af2-8681-a84a25f11b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 57f6a778-1180-41d9-be42-e83fa6ddea71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 81745176-7ecc-453f-b798-3ddd21dc9e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 87af210b-10aa-4197-be5b-2449d51e12c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 b2ee965b-aba0-494b-b652-633da268aa9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 4aa41e04-e14e-45a0-b806-cd00e47b615f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 faf77c99-f3a6-4363-bdcc-703796182b3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #183 4f362999-85e0-4e54-a835-c2761acd7f15)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #183 cd9ab529-5085-4fb6-a328-26712c6d9104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 8b1cab5b-f7fa-42bf-9fb5-f157bae33777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 24e556b3-8b23-4b70-8252-d4f20fb1bad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 427a2280-f38b-4a99-b08c-8fd467a2a4db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 f2dc208f-3bb8-45b6-969d-f72c9e897d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 70c219ba-14f8-46d5-bd8e-1aa04afcbc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 ad6a0d7e-cfc0-4b87-87ba-451e89b53213)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #184 e546cd4d-ec25-4c00-a9d0-4d06111ed919)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #184 45d063b1-fca7-4526-bb8a-ed2eacae768f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 6246420f-c5f3-4b46-bd74-b7b48c414243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 8a98807f-c702-4bcd-8ea5-b2b1e516c3c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 6feb5cfc-8917-4d5b-8c0b-c1da60f11f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 be988789-4104-4b4b-85eb-0b436b6285f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 600ed3d5-9180-4d13-b735-6979188f7b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 eb5e3125-1074-4334-8bce-c5c1d78cd196)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #185 aa08ca26-9fd4-4c6f-affb-d0db8f51953f)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #185 0b0700dd-e92b-47aa-918e-a5a4001a473d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 301d629d-dd22-421f-a069-5e91f57c5b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 ce87fdb9-3e6e-4a9f-bbd7-6353bc0c78b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 4a3bf92c-276f-477d-8552-76e4f5c20a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 5c8e92b0-21eb-4730-a6b1-672fd7d491b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 d2be000e-4067-4e21-b997-c0dafcd6db3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 79557406-721b-4da9-be05-b90175aa759a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #186 1f544ec2-599d-48b8-88e3-d935996748b4)");
unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #186 776546e9-c515-42e7-bb4f-b65e94d3af64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 6ea51122-e542-4fce-b7bd-5e16813c66ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 a28c3014-e451-4ac2-933d-b23544c12067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 ac6cb8bc-15bb-448a-9d52-c3e5c05ff99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 80b746a2-4f6b-4481-8462-9d47d436d1aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 0c934674-c484-4381-b217-f7ed9cda31cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 395fc689-fdef-450f-a2f7-c6685b12f087)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #187 e5536d72-bbcd-4d7e-aaab-20dbc8cc8246)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #187 011d410c-d757-4879-a6d2-062b9050abde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 604668fd-7036-4d40-a932-5df9cac1dbb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 d52568c0-5d94-4cfe-9b0f-df74bc391ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 98c30464-1f50-42ef-bab2-feb447e875e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 27bd87d0-5b43-4ef2-ab18-db5d6b404ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 1c456367-32a9-42b7-926b-a53d190d2976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 17cef98c-09ce-4a1f-8b44-48c0bfcb327f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #188 e2742d64-1eef-4bd9-b865-1ee217c0e277)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #188 2a642124-956d-4f4f-a8ad-229afa5c6a21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 8aa17542-9aa0-42ea-8965-f127c82369cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 90c7eba3-b3d8-4d77-955c-8500e6ae9a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 c197e460-8942-43b9-b7a8-96ba86d2a504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 745bfacd-bd4a-4538-8b09-14b729b65129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 773702e7-613c-4079-95ba-d4dc2d58a747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 22f299df-e4e8-407e-9580-131dda91e0e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #189 d7852936-b2c7-459a-be02-75a15f08ebd4)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #189 53250abb-aa04-4e57-acdb-9b21f8af40d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 8aae4a71-4b52-4160-a1f5-9d84d0094e53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 54505f8c-4ca5-4653-91d7-c2850b6a539b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 4f1aecee-3c90-4522-9cf5-531c269b96f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 a7cc7f71-5499-463a-acdb-87b736645bcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 d721954e-7fae-4678-bb31-5ed785dbf4e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 2edc20f1-c448-454b-acc6-67e4182d6fc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #190 c3502e5e-c3ed-4129-8c89-2dcb00b55ce6)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #190 5eadccc5-3f9b-4856-87ba-9dd03d6a193d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 8e7d7a51-8a72-4264-bf9f-a5ad85bb542a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 4003010a-db5b-444a-9bfb-cc6d98918f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 9ec03744-0bd5-447c-8a2d-e5d227021f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 914ef773-e54b-49db-8b28-91f4079b847b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 6598baef-e58a-4c50-8b5a-be52980c145b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 7ca8c016-7527-459d-85fd-a5d3d1dc0535)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #191 4f8b373d-9d22-41d8-9877-4a54f3fbb46b)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #191 12a2c1f4-a228-49de-b8a6-cecc3994504a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 c1be5289-6f93-4df4-8c2e-d1b2cfd9f732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 93a4737c-951f-4a76-b5af-7db2a5d59094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 b78e3e33-5eb5-4ea5-9357-46fe44b88fae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 96b3ec62-12cf-4dca-98be-e6b892a44ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 d34644e9-397f-44a9-9098-723b2ca2c49a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 f1d07757-51fd-4a0e-9975-e8197933277d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #192 1a60adeb-866c-4429-ad80-864182b08325)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #192 6721df3f-b92c-45ad-b884-dd94eaed23ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 80c59af2-a584-44cf-9a68-995108ba0299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 6447e504-0c29-4fc6-89ae-d54890825e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 59672eea-4f42-4f88-9caf-5d4ef72a796c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 dfff5042-d73c-46f0-bb74-18bff7c5f533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 25ddca97-eee1-4307-9af3-3a03ab4b3957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 0083e31e-3e1e-4d04-a61a-fcc91e02c0bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #193 07527c4f-efbd-417f-81dd-52d471f61459)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #193 5acbcb05-4e70-4a60-b299-06cc8e8b4ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 130cc11c-c3b7-42c9-bee9-a0fb47da88e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 0a76b6d0-c708-4d91-933a-cad0f0149236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 11611674-d565-4cf8-83a4-8efa0c157f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 629db7cc-6523-4215-aca3-47463721a003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 3547e282-35b6-4556-8d3c-5dd2231e1481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 40e51341-e4e3-462c-9c9e-7d9503a48ec0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #194 20b1b78d-a9de-4d3a-9b6e-3d31e9743ce1)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #194 229cedfc-3fda-45e3-ba31-b1509eef4890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 b4677040-9e27-49e2-8eb9-9901443ba10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 fbc612f3-b430-4261-8c67-7ead728333fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 1f631d87-c5d1-423c-8874-8d9063c511bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 bd02e469-548a-4103-a169-6e381203f128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 b9521a9e-cdc9-47d4-8054-ad4103980283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 4a03711a-69d8-4efc-8761-49e761563d1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #195 b5a0447c-d0dd-4fb3-9f2b-b4d247c94f48)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #195 0ca527e5-cafb-4ce2-8b92-072fd6d57fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 8d866d2c-6ab3-4da2-b210-3d42917cfa0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 78ff6f7f-dcf2-4863-a7e6-3abef15fb291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 66178ff9-b2bd-44d4-b2ac-4ae2a30a19df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 c915915a-02d8-4d50-8656-6a09218f18a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 48f71940-28bb-4376-bbba-e3060bb29139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 c9250f49-ebf4-4709-8fc5-8040376970ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #196 a219f1ab-bd0a-4fa8-8afa-b4bb02d5163b)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #196 82d5e8e9-8c81-4709-8294-61110d40f744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 876b2c05-1a06-484a-9300-61a08ae3b88f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 243596fa-a444-49b2-a469-811ef7876a25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 6d4fe978-0e86-439f-8d94-ad3f270f4cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 fd4f4406-9a86-42cc-924c-7e10f4051bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 c6755a83-75f2-4af0-8866-9329fc810f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 835f309a-090a-4ff4-b5ae-76f99b76d49f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #197 388b317c-5dfe-4628-84a2-e3cd960620d3)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #197 4833e18b-a894-49f1-8957-501ab484108d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 0da1507f-667c-4931-9d90-77994c716874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 22d4e6be-c98e-4143-90e7-710927fa68f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 5906e240-ab33-4f05-886a-f1353d92166e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 986e0f0b-ab48-4893-b40e-6571d6b19ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 0e979e0c-e350-43ed-af58-6a8b95c62df5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 1600521d-08d4-4cc0-a270-b99ecafb9752)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #198 45a23643-579e-420a-8771-c909c0ea70ee)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #198 87ab1cc5-8001-4b84-b8e5-b4ef0c463837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 c30b96c7-1e01-4322-8ddd-8fbcc659fd65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 32a7d85a-1b1e-4b01-a4a8-800a50a60aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 79e58989-c351-49f7-a6a7-74efb872c9ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 e3984af5-29b2-46e8-a085-517bcd83d0b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 b4cc514a-0902-46c9-8a04-431687368791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 a42b0e87-127d-482a-9deb-32ac09bae5d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #199 ec5c43ec-61c7-4836-9b1d-f433f79bc98b)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #199 5ba3ada8-6116-45ca-8496-49d1e5e09cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 49de8f75-5149-4fc4-8d53-a4f398fad382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 efe23875-123a-405c-b29b-c42d190a639d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 2dddfe34-5958-40f2-b705-c40bd80dfe69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 047fc70f-f225-4522-aaea-ee437eec2bee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 6c49f5c3-d9a6-4ca3-acee-4c7773e7adc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 a0686cf0-b6b3-4a44-93f1-7c368da66276)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #200 d3a74006-5f16-444c-9cb6-c6560686f391)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #200 edbdf478-1256-4094-80a0-8df71613d9a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 9c99f826-3a96-414c-a124-1d98367c0cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 253773db-5f66-4d13-b181-25201ea475a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 3b2ef2fa-5dac-4f76-8aa4-7368f5c63d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 1922a134-db4f-41bf-8245-3009d61657ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 550844f2-12e6-413d-a130-8f6b34d91f61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 c7c4c620-7fed-42c2-8303-035b6eb761d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #201 292f9ffc-8a06-4dcc-be4e-d8c3ba8e6d9f)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #201 acf56999-9392-4cf4-88b3-add7e2ede2b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 99429d66-dc4b-44ab-8cc9-a6b03cfa51be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 25b90364-0c60-42bc-8f8a-c75ca671b571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 e261bbcf-c2b7-46f4-9585-d15e87323c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 1ffdafd9-a0b1-48ae-b6ce-881dae29818f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 f721eecb-8eb9-49d8-8eeb-bafc2f42d23c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 d08789ff-cf73-4510-bd54-b654532e433e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #202 ad2b192c-3360-410e-85e1-5404c371e5e4)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #202 2641e71b-4146-4251-9662-0d3a5eeaa885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 39f9c7e4-ef89-4c2a-9b83-259e07219b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 38fbad3a-c371-4165-936d-8e33a25fdb70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 77836a54-9639-43e4-a92f-829cf7d0973c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 4adceeda-e349-423a-8101-90105e1b17da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 c519794b-19fc-400c-9f5c-43cde80496c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 ed531b77-34bd-4d04-b956-ef6a73b3cb32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #203 554d3d53-eb0e-411b-a409-91af22744ced)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #203 f9900905-30e3-47c2-a151-2d6a120c0210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 b9cbcea2-a305-4f21-9390-ae02bb69ac3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 8425086f-2a01-49e1-b6de-48e7d711c756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 a127d6e9-3774-46c8-ba04-7eb1a2152fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 73c47109-74dc-43c3-a1dd-ed9928b6e960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 43512a3d-1242-4b06-b8ff-f18177e343be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 5df088db-e9a9-4683-8b4e-5c26efde8ee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #204 fbc65bdc-5e80-4de9-bd80-249edcf9d227)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #204 1e13bd95-2bea-4c69-a8a3-cb96dec23594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 d19c2640-1f94-40a7-9529-2e0a755ecf72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 fef84f9f-404e-48c5-83b4-5cc406744e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 4cb847b5-918c-43a1-8921-ae8b4064ab65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 154d53f5-8836-41aa-8279-99de28af318f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 60e7a10a-7c27-4d0d-80f4-8427781faadd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 77ad646d-ea3e-416d-beee-b81f0385eb76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #205 1c171aaf-4993-4fbd-bd79-8c36dc7d51ea)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #205 12067f2d-778d-4987-8392-fcf468ed5bb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 344a0eaa-8cdc-40bf-a6e9-64bc4d5bc7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 afbe4754-dda5-4e2f-b0c6-8b9a0acc259a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 8f9d8d21-73f4-4768-b10b-e9f3075d5b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 8374bf0d-0190-4e0d-b4a8-e5b89246088e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 f3f57d44-f02c-49cb-98e9-a2f03815753f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 daea8e2c-b9d5-4df6-9276-b6fd1624b69f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #206 88304443-fa72-4f1b-8066-473bc9c879cd)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #206 adb463b8-80fe-446b-92ab-b5f6a6940a93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 f38086a0-c4e2-417f-aad9-16323600c7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 2529a863-0237-447a-a6e0-9da60b9ac154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 8e9cad2f-54da-47e2-9f19-a61c699d1fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 4db56671-d3df-4083-b9a7-c8c36d144339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 1a8f31c5-35e9-4dcc-8f47-9cd4ac31ccba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 a53efab2-1f8a-4211-96b6-af7e28c782d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #207 8e5cf528-59c2-40be-95d7-be7b554af099)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #207 d1518fbd-145b-41ca-ad9f-f39229a4cfd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 1c31a7fb-06ac-4835-a37a-51a266929b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 b9ec752c-75bf-42f2-8538-0f5e053cbdca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 636bc787-ba6b-4e92-a27d-e8312f63613c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 f959bcbc-f0e5-45e8-81e2-917b2d9eb8b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 b6e743da-b820-42ac-9436-b154f5e981d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 3239bafb-2e8e-4a40-a282-5e1e75961f8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #208 5dbf5c5d-97a2-4489-9e1a-467f13e48dd2)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #208 45b501f4-1660-4164-8d73-927a3d30ad3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 ef3f9f1e-537e-474a-8085-dcfa47174801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 9672bf61-4aaf-4a36-bf0d-b4b0f4a0962d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 0cfe3589-9062-4a16-a45e-750d5979ef54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 cc1fdba1-6a5a-4d79-a40d-d5771e557f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 6504180e-6318-46bf-ad7f-77daf8fc701d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 400cea6b-812f-4b1c-a676-576b74ca3252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #209 b2d13670-2d1f-48fb-b9d2-c5cec15b310a)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #209 b120765f-53cd-43db-8aed-6b51b830ec12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 16cb8004-47c2-4104-bf80-dd94dc8e3be8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 d79eea2c-4f0b-4e04-93ce-a740fc62b5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 39a559ab-8437-49b3-9668-4eace6090ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 7af86344-48f8-44c6-870b-6951b898eea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 6d65c8c8-e791-49c8-93af-21eb692c5fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 9d91f95a-55dd-4638-bf37-bc57d519df8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #210 60666079-0323-40f2-b8c4-ec41f1993261)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #210 ae6527d3-7f40-445c-8cb2-3bcd52756a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 7fc245c9-f475-4d01-af72-64778fca8d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 3c73b31a-b489-49ef-8bb0-1c6dd5666abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 960e1dc2-e1ae-45f9-bad8-4acdbf0881d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 9a1cbc34-0dc6-4768-9934-a4295a3a1336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 566a9bd4-4da1-463d-9b75-64ac0e2acc71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 ae4422e9-e84a-440a-a13d-cd2af18a4f3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #211 21ad6929-5956-41ad-ab55-d72a8f34d9e1)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #211 76b6e063-fe2c-4032-a7e7-423ced98e706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 66d22db3-cb42-4cc6-b3d8-89e1b5ac89d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 b043fed0-1a98-497f-b3ef-525e8e198d36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 ab7c72b5-76e3-4d5e-9e8c-2755d6e3fdbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 62d07af3-d244-49db-81de-5e049ae36e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 a7cfbbb4-333d-4f42-a712-98dad8edc5ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 e5af8ddf-20a8-4b8f-b8ca-90779d9a9385)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #212 07e8a91e-9229-4666-903c-8ab001fadaa9)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #212 bf7506c5-fdc8-403b-a17d-06d34b8bc7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 44f3f78f-97f9-4739-9568-2d80c5f03aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 234a76db-2ab5-436c-91ec-e5db8959b9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 8fe083a7-f38e-4230-9e06-bc9a4f5fd430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 4fe03f92-68ec-4d4b-81f6-f5df296e713c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 7a1bc853-b6e5-4599-971e-b1670d1d2f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 af9ca065-c7f1-4eff-84ac-374c205c8d06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #213 7b8320d6-aef0-482a-92a5-aa6d12ee9727)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #213 3abacd24-de5f-4664-a96a-f7354a7a8032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 1b9726a3-a8f4-4ede-b4ed-7b53102d4a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 d4042f76-429c-4e9e-9938-ee1d25ae40fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 1c998b9f-1728-462e-bac8-5dc5dae37f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 f004081c-f831-43f1-926d-3849b0bd1576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 99a5ee54-9ce2-4e7f-93bc-bfe6d3f93639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 7f11811f-b27a-42cd-a8df-53b4fb3b1a03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #214 742af0e4-46c8-4fff-b9fe-9261b2a193f9)");
unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #214 d6ba552d-318a-48fd-b6c0-4b0cd8ae503f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 017a8b96-a8e3-48d6-b937-0b1042e218ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 e090abd6-4bbf-4465-b3f1-13c7d7ca3836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 c2e30988-a218-4fe7-8554-bd719ebf73af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 478398c0-3240-4f37-a043-2db7ca28f44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 18167a7d-a5bf-49c6-a9a3-f3e9b585563c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 cd8d3c91-46ab-49db-ab0b-b6c7270c0031)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #215 e0d0be1b-5290-49c2-ae6d-59da37100ebe)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #215 bc6f077f-d06c-431a-9a04-b4764cc2eeb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 050b3218-84e4-4875-9a06-186758d5c0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 7b3379dd-2a5b-4765-b3aa-16a767fcfacc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 2bcd191e-2ae6-44fd-bf66-adf9a8e8bd9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 1b0bfa69-a74d-4a81-aa5d-09cbedcc3fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 32661ef8-9b5c-4d48-9418-bf1880288e8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 924b1d5e-1325-4741-ad11-9c4d715b5e4b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #216 67362daa-f360-4f9e-91c8-d3c9236bf93f)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #216 87e82dab-cb0a-49ee-8acd-9892944c489a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 27bf027e-b1a8-483c-bdd2-7730cd4c708d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 69185501-c4c0-469d-abdf-baa560d10dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 4b319142-3a1f-416d-905f-56d285987de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 01646d8e-3654-475d-ab09-6d71eb3a7dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 15e2e551-4157-467c-8db9-4069bb3be523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 49789e29-9007-4058-bcd9-cb5de0c0cd5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #217 23bdc240-4191-4125-97f5-79efb10e858a)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #217 c112739e-0e6a-4cde-931f-d4cdcf5a615b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 a31ff582-7978-41d0-a46a-a9acebddde56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 f8980308-a2c3-4408-934d-0da58d2801ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 576b65d9-75da-4eec-aa62-a72012592f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 580e9897-bed4-4fd9-800f-967273c20caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 98beb51a-24e5-4c75-9b29-0f1c62f3d4c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 42d15570-9286-4b2c-96a3-da147fe19ac9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #218 a418823a-c990-4336-9afc-17d58f8a7d8a)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #218 fd03574c-9d39-4f2c-8190-7f68dcfa6b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 7d332034-3fb4-42d3-9f04-813ff4a51550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 3a210867-b5b3-42a2-8538-704f4318549f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 6870b842-1969-44a8-854c-3c3492b11ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 b14d931a-54d7-4020-82dd-14bb2e6d2697)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 92e4f890-4be3-45fe-9ab0-8deaae9a4d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 09d75850-09d5-411a-90b7-a0409849e34f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #219 a2dd6d37-af10-4c1b-84ef-875d7e582e8b)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #219 228a623d-892d-4500-942f-76e7f6f56da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 f388dc6c-bde6-43b5-8298-616629313d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 f4200db5-2816-4185-b03a-7090b8ab045d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 53dee4c1-c827-4a81-bd70-b7adef6493c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 0d9d311e-f9d6-4243-8e1c-b17f5cfdf03c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 10966371-8817-4404-991a-58c10902753f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 11a633a1-3b05-4ed8-8166-a5c0e671d716)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #220 5066e9f8-e011-4f7a-accf-ee2c011f73ac)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #220 09dd03ea-e521-423d-98ec-b9b2cceac215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 5d95f4f9-abd4-4479-95e5-7f2ab0f99d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 df695479-368d-4a49-861f-2f4207685be8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 d0d49e31-9a9c-4023-b52d-b883fff5e3d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 0ba116a4-db56-4bf1-a80a-6736a2733909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 dee8b3f0-e7f3-4728-8b29-a531f8ca0436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 7448c339-6187-4bd5-b858-10ac006dd9bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #221 62bbcb46-1dca-45f7-9963-9ff4b1cd1e24)");
unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #221 ee59abfb-6fb2-419a-b5f0-b4d413db11a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 54c5ddf3-1f2a-40b2-944e-c0bf433ada27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 f5321da7-6a4e-4812-a136-e5fe05b98a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 57cba389-4903-47ef-b60f-0da135f674d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 efc0438e-4dfe-4b92-822b-ede2ae30178b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 d4c71fc7-26a7-4fc9-8e1c-93af166653b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 d9b01d3e-8c6f-4e82-8ce4-8a5189d5bfe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #222 ca321c37-3142-4171-ab8c-ca8477ae9d52)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #222 8aea78d7-6f6e-44b2-b185-ca26afe4b49c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 ce591f04-9f4d-4bf9-98e8-24592686b7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 c8549f52-3c84-4139-89cb-87ee15a82a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 79b00199-4def-49ee-b1c6-3761c9978af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 3963b7b9-e4d0-40bd-9706-3a43316acab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 4da89131-4245-4107-ab02-0cccc959553d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 3257d06f-a43a-4e3e-b211-591274ad724b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #223 8ca9a26d-d01b-4b58-b181-d81b9e7393ab)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #223 c35c7ccf-c495-4643-966b-8a19aa415d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 f9326eaf-47fc-4426-acb4-27f7950f27d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 f98ee006-3447-48e9-9e33-c06c65f5cd06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 def49523-8d29-493b-ac81-b5b9da56a598)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 79998a94-fdfe-4c5e-a300-0783d97b9ba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 623148ba-3b2d-4417-8a0b-5262837ddb70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 2a4d8a53-aeaa-4879-b4bf-876ad2638da5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #224 794602a5-4c55-4a12-8283-f3e394bed304)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #224 48ab8051-9bf2-46be-9e08-2b749f2bd29e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 9b8b30de-045e-4def-abff-e9020c577f7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 6cd7f106-b13d-4588-a7c4-41ee7bebfa57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 eb6fdb72-85fa-49a2-b317-bf84b90c5fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 a11be74c-9f67-4eab-aa55-dca14c9e0b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 c9ed5ad2-430a-4387-987b-80978b6c5d1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 27aaf0df-0d71-48f5-80b1-0677e351f807)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #225 925968bf-0412-42a0-8ded-722e55ad46a1)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #225 1c362441-25e3-4f52-98f7-6a940efaaccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 b32af60f-d284-436e-8d07-b46e2feb7dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 c5f50492-503d-4bb2-83a2-d76adbd3d43c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 6ef36277-92a3-4a77-9148-e888f290a714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 13312ceb-a8ed-42f6-84d1-a55a4af1a1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 3f7b950f-ebf5-4f3f-acc4-c06d2fb7a9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 d434f712-b15c-47a0-a851-ece77f90fd8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #226 62d98904-87b9-4b1d-acfb-349bcaaf45a1)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #226 c500c2fd-ee20-462e-bd52-2f988ec16dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 bae412fb-bd46-4dce-84c0-f94888be626b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 0e192bdb-614f-4a31-86aa-53bbf1f9ee5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 44c9699a-a1af-413e-b40b-8b5e716ea94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 b4f8c623-d317-40de-8a85-68b5b7a28163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 e2e8559a-d78e-4079-a76b-0e899edb32fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 20e08299-398a-41b8-8a56-a06a27d913b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #227 c69394c8-ffd6-42ee-ba77-0f018a8f6111)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #227 a336645c-64b5-447c-8dbc-e7b6bb87f4ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 34fd0d18-4204-4398-8a72-53330589ea30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 09599980-dddd-42ac-ad8c-1689af5a01de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 0f91fc75-53b0-426f-8d0d-5f2e7457a636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 7c44bca6-7daa-4001-89d3-55933566ef8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 31b5dc7d-d0e7-44e4-976c-313223576b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 988a7a81-7f2e-4241-af6a-650f11bec43f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #228 3d4c5927-8590-4d3d-96e1-4ebacedf9bf2)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #228 6c36b32c-60d1-44fd-b929-f425595b8252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 d80919f9-192a-4129-8378-405e8abc2411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 d4f419bc-5e70-4661-b5e7-d057bf3353d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 2be15300-6e17-44ec-9fc7-67fa1300ebee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 1e8bba86-5e65-44d1-9c13-7dfd3dd7d2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 17d44fbe-ca6e-40f7-95ad-9ddbef444da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 42511662-58e2-4673-bc63-ceb63a956306)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #229 9d8f78d4-db0c-40d7-9f52-b17e25bffaed)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #229 7d745ea0-d1cf-4e6a-a0b1-2cee424d864f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 0b8aa760-3fe3-42cc-8053-04e2a8fef09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 899e21b0-86c0-4e09-891d-77d2e8a8c7f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 dcaa5e7c-16cf-495c-a865-926b5dad0aa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 f1936320-7d7e-4824-8c53-97ea484482f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 dc6aa4c9-853b-4e14-a6ec-05013ee88edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 48a3f8f6-d1fc-46fe-9f9f-e621e2b4c0b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #230 429d4b12-e0f8-45d7-96b6-1564b1d84c5b)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #230 d7715dfc-72f0-494f-83fc-cdd6ccc19da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 09f85f9b-a9b0-4fd3-911b-2c468d2d44fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 bba3c568-69f1-44b2-aeaa-4a2df280f10c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 0fa86187-ef35-4289-922d-51eb24c44148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 da6da242-6d74-4591-853e-8dd4f0f59890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 0cd0b5bd-b91c-42ad-834b-37e9f10c655f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 23968fcf-9f68-48f6-a623-5ed0334ee3b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #231 b35ba397-ec54-4bfc-86c7-965bf738e31c)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #231 0c47280b-f8bc-479f-afd2-52cfea85017e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 69e3065b-c5fc-4dae-b9d0-1af331c8a888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 1a271db9-5b2e-4d5c-843f-6bf7f90294d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 fb40e36f-f887-41eb-b1f4-e4b9892720d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 0e55eb63-263b-4400-9bdf-c7f3462f8097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 f9b3c35f-c9a7-4b63-be36-8d6fe88b4382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 1d787308-1cb8-479f-addb-25a794f7fd61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #232 8a029dac-630e-4ba3-85b8-c5e247f4e8d2)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #232 997662ca-ddfa-44f0-b045-9773cf01cc3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 e6c7af11-ee50-4ec3-96df-d90cdd1f59cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 4edeb4f1-4498-4436-b176-d493d9cb0c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 2fc8e8b8-4831-4dad-a8b0-55972f6384d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 c6291020-baba-43b6-800f-b2070ac421a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 ea11ff99-bc3a-4ee9-a16f-b2fc6ce6fe36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 963dac73-9e8b-4aec-9e3e-f23950bb21ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #233 0e8d5238-d390-49f9-ba97-65f1a4301a03)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #233 a8b246ad-de7c-4aa5-b31f-0f6a0f26f02d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 6512f90e-f378-473b-851d-e32fcc14f926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 279c0718-cd3e-48f5-ab87-02bc6565498a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 f787e56a-506b-4df2-9b09-e431bfc4260d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 c6900cf4-d593-408c-8e84-331e0d03020d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 c588688c-9d46-45a8-9b20-a9aae9835afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 b8161eaf-b592-429f-a559-26e7960d25e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #234 af38a723-a66c-46ed-b125-d24610a53e9d)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #234 6ca3c456-db97-4850-a25c-4a0668b852ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 95dcd197-ce9c-4267-ba10-0109bb392b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 0464a59f-bbc4-4a13-abc5-278d036a0edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 790e35e3-3d35-4293-ba0b-2585495e0dd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 98599332-30f5-4f15-bd04-4381b6e29227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 71d2fdd3-218a-4f1b-b2e8-c11225ac820b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 cd859882-6c3a-4d02-9358-afce7211c28a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #235 eb9db0d8-6dee-4e00-b391-4d4a9c5a8881)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #235 78b38e3e-985e-4f87-b0a2-6eb0b11b7b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 eb70d56a-0343-4cb3-8e58-d176fca835ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 553098b0-1ce5-4d01-925a-953d4f432ba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 cc8dbcfb-9a7d-44d3-b6b4-6c1eabe01197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 437fb26d-ddfa-470d-867c-3a93341d1978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 e46a4a8c-1152-46b0-8694-8f768a7b2548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 e763cc21-0c7d-47e0-9644-9e28cf385edb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #236 3707b824-3bf1-4bdc-bee1-884f896783b9)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #236 e2420f36-16d3-4bbd-922c-e625cc8689cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 38b563ab-b8a6-48f4-9df5-3562784b24d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 f393f6fe-a783-42d6-bfed-53c9633d333e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 3c4a8c03-415d-4b2f-9b90-e0a9d7446efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 4d135a45-87c2-4723-9903-a722d137d816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 d5dca913-1f29-4faf-9e47-97ef3240c38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 1c3b2110-912d-4a2e-872a-d7085d5a507d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #237 e398ecc7-5c9b-4c6a-b905-a1515dfbba57)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #237 81021e15-de4c-4b28-9b42-3f8316220b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 e680336a-a607-4896-9b2f-6fbeaf3d9f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 8b4a8415-46df-492e-ab4d-41734dc0a021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 e8af6237-7c0e-46c2-959d-01639efbd1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 2ec23ad2-1e65-4299-b89f-87fd37263300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 1d1cbb6b-953b-47f5-8684-ae5dcc9541b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 cbfdd60e-5722-4852-87b9-6ff6d61cd079)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #238 0cc1bab0-5118-486f-893a-8a1152698812)");
unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #238 e6131211-91fe-48fb-9178-a894aef5c06a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 169a8833-54e2-4c19-98a3-dc13f8f74f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 09bb1e0f-af8c-4113-b25c-85ebf4fea463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 be25e277-aebf-417e-81c3-379e089f7e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 63fe78ca-d763-44a0-b490-be72b6efcc17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 e231eaa8-fc43-4426-b39e-4078fdeeaf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 5723e6a4-af01-4923-9bc9-2b9a515749cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #239 6209eeab-0a50-4d13-9a20-f70d6fa965ed)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #239 0c0d8efd-c6f4-4a53-b511-1eb94ed31257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 9d496794-2c86-4682-8732-d53a6f22a784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 ed643b7b-a4e6-4a18-87bf-05bc367ea677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 fd530d8e-8173-4f08-a1ac-88007e417395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 09294ba4-4a43-4e99-9a9d-6e2ed83faabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 cb69c58f-93b3-43ba-a125-4d9cd4b8989d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 accbec86-d319-4887-af5e-c05013647a9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #240 51c3b05f-af96-429c-9b43-2b1c6b5c87af)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #240 22388657-2811-4390-892c-60b293892f59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 13589b22-ae79-422b-b66f-b6e2551fec62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 2a90b6a4-6ccf-438f-907b-df311da96c01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 b54f0057-7f78-426d-9078-dde6225e5371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 7ce7feb6-9958-4a32-97f0-b7d47bc66d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 27832cbd-f0bd-4dec-a8b9-4ee967b526f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 597298a1-7827-433f-a2a4-42e3f545bd07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #241 58f86fd5-451c-4bd1-9f4e-621afb9a90b8)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #241 95b1eb7c-9f17-479b-b169-31d3f7c8406f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 d2f2a921-914f-4701-bb2d-210172727025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 f2a2ba7a-11fb-4491-a05e-862874aea3a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 ac1c1d77-a5e6-4963-b5ad-f901f34ffff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 b3d09377-9fdd-482a-849a-0f7830fe1946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 fea3a429-aac2-4a69-b507-67e78522cdb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 71a2014f-29a4-4474-8ade-4a57d20df9a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #242 96843339-5e82-4095-a786-8548f38c8685)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #242 bbc71269-f4ae-4045-8060-e149b21f368b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 9bf7dd2e-f651-46d1-88a9-c7eb17cd62b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 c6340369-c3cf-4932-902d-10ee25f16de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 fa55d664-6f14-4038-8586-8477a071c6f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 d351414f-64b8-4f9b-baf3-885ae53f5d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 5716db71-6556-4c1b-830b-c3341d3e3c9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 95f676cd-3a6c-4590-8caf-423bf8428697)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #243 8ff753b8-826c-4ad6-957e-db2daf623376)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #243 e25687c7-e7a2-489d-8a69-2cec08235bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 28a4e6dd-b088-4046-a322-d52a036b1d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 8a82b1a6-74a1-4e14-bc5c-f9eee59ebab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 77fdf92b-7fb4-4de8-8c55-43bc91a75a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 12b26cd1-4be6-4966-906a-1f26909a0ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 67a38867-1b33-462f-8298-ca5dfc15c614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 d121cc31-17c2-440d-8e15-224e118043b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #244 bbb5dd2b-687a-44d6-9960-d4b2e679d648)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #244 faae048e-81f2-48d9-93ae-86bea9166325)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 beff50fa-fade-465e-bb8a-f8c82108fc93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 5ec0aec1-a417-424d-a62d-5911c49add45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 30db1181-9b54-4763-b6db-cdc66681f476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 a293d628-16d7-4be3-bec7-3213c8df16fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 0c0bf457-db55-404b-8e25-852275e00036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 38f6a563-c22d-4e09-a80d-6718aa578335)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #245 68da19f0-a862-44fc-9da6-727236c3705c)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #245 db5181f4-6f86-4bfa-91b7-3365e6c05555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 b37907af-9c2b-4a0a-9316-4863628c1039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 ce57ef8d-7a86-43a4-a7a5-3a6ec70e7277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 4b8dfdfb-82cd-46e3-a34d-829ab145f865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 627cf958-be36-49c6-8750-a2964fd296bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 f3cdb129-d1af-4ad4-9635-52f751cdb89e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 79ac307b-bf5c-4ced-866d-31249f78ec1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #246 44a8c3f8-7801-4df5-9a9f-432f41789c6c)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #246 83f63e83-4cea-4a44-a3e9-e76a3ad372a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 675c9dbf-155b-4324-85f6-b70fd7e0d21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 8a9bd4ac-0403-4ae0-abf0-bccf52c423ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 77abe67e-cfba-49b1-a72b-d7c4a54f114b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 d7cf6fd7-e399-441c-af2d-6cee35ed44c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 6579f773-2473-4eb2-9228-6bcb20061d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 65a0bdbb-574a-4774-a1cb-32f0c34f22e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #247 daa6c77c-9236-43bf-a934-2114d5314949)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #247 98f468d1-e33b-43e2-98db-6ed06a2e8276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 cc490257-e10a-4ced-ab56-7491c49fbcdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 8f763c20-ce97-4cf0-9359-05c2fa063970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 90a55008-af54-45ca-b1bc-26e81414e9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 ba9b7401-be80-43ef-943c-0fdff78cdd47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 1af043ed-5c01-48d2-81d3-8d188a8311d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 7a722813-b903-4e16-a148-4f7498a1f2fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #248 986da227-2be6-491b-af7a-0cc8c8dbe4a4)");
unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #248 afe070c2-ded6-44dc-8bb5-c119fc0e6f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 68b387c8-27e8-4b61-9aa7-4ad7aac37844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 6f658bbe-557f-4793-a8ab-bf65d5130664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 47dc6f5f-a448-4814-b2e0-40aca277688c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 6b375309-e124-42b5-b409-ea90322fff73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 84c59297-72d9-4bc9-9beb-d810810be97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 98f6118e-07db-419a-8736-93b6c792d25f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #249 b4a4f40f-a69b-412a-9b5a-929e2a14608c)");
unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #249 02ba6083-b7a5-4c4e-a8d6-58b1d81264de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 1c5b5ea3-d2f6-4811-8564-d6023b389a05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 230eef0c-c25b-4d49-8a39-9c73d0ca8dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 8b2ca16e-5f72-4c11-914a-62e1999d937e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 9702c98c-e48b-4827-95b5-005c4169b841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 a455fe1c-fa5e-45d5-b3e3-8a705c5ee894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 6efcdf84-0ab5-4445-b883-96d63816f018)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #250 b827755a-171c-4903-b70a-dd0d3596a4ca)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #250 add41da5-e1e9-41d1-adf1-d186b9d04791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 f573ad96-6510-4dba-918e-f46748fb60d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 15f3f69e-28be-4a2d-ab1a-89e9689acda9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 c748b02b-e7bc-4ec0-a444-8f14ecce5d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 0927dd10-18f2-45e8-b8b6-4c246fee1e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 2dc1d3eb-d0cc-4ac4-a128-5ed3fd0e7a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 82f5f23d-d590-4929-9029-9fe710cfa98e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #251 23e5ef98-1d66-419d-9068-d226729436ac)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #251 549e6bca-f796-40e1-9eea-34ebd7399ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 31526019-56b0-4a15-9f76-8b60c4467510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 660ec8d9-ce7e-43ab-a3dd-aa9586bc5d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 c8ee479e-2aa5-4722-9f46-3749f34ad734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 0093ed67-2e12-4f7e-b6eb-e472233194f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 cb2f82d5-bf35-4ad8-b870-f7e357221a2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 3484e617-cd4f-4fd5-bee5-f3a93fe9565a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #252 9d480813-6471-44bf-a08b-6a2fd90e59da)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #252 899f46b5-4585-4d17-8175-54ee68200c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 840385b1-8685-4efa-9a9c-7adc0ba54ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 825c4a58-8110-4d08-bd3c-339c01b4a6a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 e10dee02-13ed-45a1-975a-af5ee7757fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 919e8e7d-106e-451b-acef-58d65a760901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 ec046344-6fe6-4284-9219-4ac09fd3af6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 0ecf702c-c42f-4cb3-916c-af5bd4ee37d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #253 c86bb10b-a51b-4af1-8cd6-e27bb05d5f21)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #253 b38d9445-39df-4c49-9f38-b27330f2b6cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 8f341e3d-ef90-418b-b58e-0e12465a0ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 6149aa8a-6657-470e-845d-bea1cb013e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 3da76f99-625f-415d-842a-f9c86a94c451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 d06d3777-2ec6-4ad2-ab74-1a537e3ad834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 cf027e2c-a3f2-4098-a1bf-670226a6f521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 6eaa49f5-5305-4719-91db-04033fadebf8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #254 382ba442-04f5-40cd-bc3a-063dc6874dd6)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #254 cefd34c7-a50c-4625-9da4-646e2b9cad12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 a251d114-7d82-4986-aefb-87ae71b0b936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 5e4c4fee-c5b7-4552-93e4-ef51e0de85de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 a8ff4b0e-f571-47d3-80eb-70cf8525a06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 fca25399-936e-43d1-8498-cd5924b3ef28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 58ba98be-0f4d-4677-b18a-5b38ac7ca4c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 739c8c47-8999-40af-be89-7865ab34c764)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #255 3b583830-ab57-484e-818c-2887cfb2363d)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #255 c47c3b80-fafd-4555-8406-f874c1e351a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 34f2cc9a-de10-48e8-87af-e802174f74aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 c97db8ed-b091-4e38-b188-13694f4075d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 82d7aecb-0c51-46ec-918a-c93880c28c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 cd21f7af-137e-467a-a6ea-2659a6c486f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 b61ac210-8d4c-4c85-93bd-8aa139bfedc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 d40744ea-8f06-4bf1-93a5-2364ce931f6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #256 f27cf2be-e52c-4d63-9c9a-916eb364cab1)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #256 09ab0ce0-9b9e-4026-bdd4-948b9e959f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 3a25877e-59d5-44ae-99da-5f922f896526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 e0d1b9e7-617f-41b9-b095-51c83f5cd18f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 836926fd-b9dd-4500-9308-2aef7c3e2338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 bf58346a-b96e-4b3f-ba26-1aea0929f6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 3349194d-2d88-4302-b989-93b4f0050db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 e600d286-7785-45a0-8964-4778077f7f4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #257 199fdc55-d3cd-48d0-9765-3f28e0db92f6)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #257 86025e92-908f-462f-9285-69dad234cd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 84ee76d5-4b4b-47e9-b886-298e156c33c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 259831e5-6da8-4aa3-b0ed-c38d15c86a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 e5176a7b-9c3a-4f13-a360-524b1998d845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 168ffcb9-83f7-4e8f-a01c-637cfaf674cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 b4a485df-aadd-4168-a008-1b81cfe50c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 29e185a9-167a-4717-8864-dbe0c604a8ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #258 815ef55b-2aa7-4054-b8be-9c7029b579fe)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #258 630fa0b1-40f7-4be5-8487-8256bbae27aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 34dc5b82-25ac-49a4-8d61-1d4b96db130c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 87b0d3b9-8e3a-41c4-9fdd-d9e680b6aa36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 07a6ca00-6db8-4da0-8a7d-a1e4af18ad32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 85eaef52-75d7-4bbb-b33e-d61b5ac2cfc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 79743560-2ffd-4961-8c9b-90bf50b583ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 7e40023a-a0d6-44e6-a4e7-10cb76662d3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #259 669bdffa-9c3d-4dd5-a70b-61b2076154da)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #259 6b109c6e-28a5-4398-8025-361058eb858b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 03cb1976-5cc2-4db7-ba37-c9e0e889626b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 f83fe889-8909-4717-a237-f4ce5a28bd57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 cf3a721c-cac5-4bf9-929d-aa0b473e6cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 ba1d2a28-ea18-4e49-9247-559489285473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 3c714fbf-5151-4de9-8e9a-114e9283aa25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 20d23969-c7c9-4461-a2fd-0fc09f464676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #260 bad85182-c8e3-4913-a6e8-82cb3780a68c)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #260 df4655d8-696d-4278-9f17-18b48634dfe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 2a96f02e-606f-4abb-971b-c765bb96e49e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 40125969-0400-41fb-98fd-5067e04510ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 9dfd51bf-aeb8-45d6-a175-a90dd935154b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 48b517d5-c022-45d6-9957-961de40c6736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 e9658a8b-1a05-466f-b11a-ee861aed4946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 9218703c-f597-4eb5-a772-7eb2e6307013)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #261 7c68f914-82e3-415f-b6ce-3f626f24f3ca)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #261 1217484c-ba5e-421b-a77b-67b0d0c7c912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 9a136863-21d2-430d-9899-d15ef17faac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 6623f5c7-fbae-4e91-8d41-060d38f31dfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 43ec0945-8a3b-4322-b619-f63e5c8f0f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 0a21700c-0c54-4b61-8343-4ec60a388a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 88acfddd-af0b-4de4-b594-fd57f52df941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 943f48fc-7fb5-4e3f-8744-d058f9bf0cf3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #262 15c74884-6fef-41cc-885d-2e0682ecc39c)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #262 a2154360-d9a1-46cb-8149-16fbf020bd84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 c75043d0-0034-4e25-8206-2fa2c97742c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 25c944d5-5460-42a5-ba19-4da15224bafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 608bf951-86fa-4f55-ba61-c7d4499577b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 4ee44e70-19f6-4311-bd9d-ef8d548f67a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 3686edd2-2525-43fe-8b56-c42dc803f716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 95a7dc74-cfa2-4997-9fd3-ffae3fc9dad3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #263 3719c24c-b1f6-4811-8685-801dd75887a1)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #263 735df57f-2ea9-468c-a633-d185f45b618c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 32694386-0ab0-4a53-9ba4-08cfaf47c196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 776f7161-5f7e-457e-bc0f-6b688854ed89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 5d8e174e-0679-44a6-b45f-89d6bc5dfa1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 60b1f880-9c1c-4515-a53d-d0da69123226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 b2eb2e71-6091-4fd3-ae63-eb2fbfb828c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 9da32a24-d3ea-4e68-8b72-5e710caf3e22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #264 8211055c-bf9c-4422-b13f-820d83489590)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #264 6890b56f-a450-4c0f-a1b0-04a81169e3d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 719ccc67-bfb5-4c7f-9522-9ab8aa5efade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 21dceb64-5a7f-40ef-9a41-eaa3b01a47de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 733658f7-630a-40a0-8d55-f7e55882e454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 20572941-5da7-4c6b-8b49-9e62954bf663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 780be4e3-e878-44aa-a8ff-197e9789c195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 ecdd03ba-f871-4c41-b462-b48fd7b77f1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #265 9efd4abb-efae-41e9-90f5-daa1765de7e1)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #265 b660b3c3-e2ad-4b01-b8d7-fb6d8494bea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 f8470ebd-8a9d-4995-b0ca-907557550ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 04aeba18-d739-454c-b21e-2238c62d0209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 503593c4-a2b1-4b48-8f7b-73472b7705cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 1a321b47-db96-4801-9ef1-f2aecd70d1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 f5486d3d-30bc-4825-8c03-df671a402827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 0bd170b7-070c-4058-be70-7c75ba72a441)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #266 4b12ba1e-c334-4309-bcef-3a25a05fbf63)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #266 ac6cc755-1598-40e2-855b-447f681449d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 eeafdf12-bf4e-4652-be23-3a659743c153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 87865307-f7b9-47c9-94b7-d35c795c19ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 002c8fd9-7979-4e6a-ae28-f7bcf35da85f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 f0a5537f-9e93-4980-83a3-d693ad23f0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 7cca93ea-e803-4082-ba9f-f02051e96466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 3322940e-d1b0-4e92-80d0-17d08d31f46c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #267 fb2cce7c-cfbd-454c-975f-d011c36951e4)");
unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #267 07588c36-4b54-4fb4-a75a-47decbb7a49e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 2e61789b-d154-4666-b0fe-d15375b08c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 69d6e0c7-b560-4ad3-9ec1-599f43ecd8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 06354aef-cf8e-412c-ade3-dfea18af3996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 273d7c88-c1f8-4a47-b323-e38b588882a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 c7c22f75-47cf-4a3f-be24-462e978d06ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 d80b5b26-bef5-413e-9d3c-e0d7e5564cb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #268 d535ab98-09d8-4ce9-b687-f0dce2cf55f6)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #268 b2f9ca8c-6866-4f8e-82d7-1d4c750b94e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 9f6a4c68-a324-4b51-a329-51f13386f99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 fcaa1cd4-b9a9-44f6-97c9-67342e0cafc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 150febc1-9e2b-4f63-b617-59610cf1180b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 b08acde7-89f9-44cc-b031-ea1e2e2db50c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 5581d761-bb39-4f35-b284-7b37ce491efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 8527900b-b2ea-4b3b-88e0-cce8132d663a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #269 6a855d8c-21f3-47d6-afca-4a0aa05fac58)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #269 e07d68f0-6342-40c3-a8db-95aa00bf6bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 b56d1cdb-23dd-4fcc-a33b-81a1ffe2bad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 8e674e7f-793a-438b-abb6-ef92f91c5764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 3dfb9b34-8a11-4384-8924-29d26efa0ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 270cca14-e1d5-42e8-9fde-a9978d17b7f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 608070bc-9929-4deb-bcef-348a57405dd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 cb41169f-2cbb-4a29-9ef4-5c9f2e922695)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #270 f6633851-596a-4535-8a2b-70196752ca06)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #270 604a39c9-0059-4ffb-9f88-06e9f0e6346b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 f69a0937-6749-430b-87b2-a61946c9dbb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 439ab7d7-cc58-4362-ac1d-6c196bc2e66f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 6b748239-42a2-4016-b7a4-b7297b9b5ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 3f9c3d24-1474-4d21-8ab2-e0d2dfc0f928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 b9a4335d-8b8a-47e2-8ca5-a7fb7c2df355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 c4984153-4968-4740-9df3-2524b1be9823)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #271 256eea12-624f-46af-99a1-ea512f23eab0)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #271 50b794c3-4024-4c4c-bb55-9aee616aa46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 3a81a322-3e65-4715-8a22-cc9af4aa4a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 227c9d02-497f-483a-ad57-1475bc3312fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 6cf11498-8bc3-4f65-9431-afbac3e56a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 ffb0abca-079b-48ac-83e6-15b384f3c8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 cade1c82-3daf-4af2-8378-471761b0e605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 8805ccef-6a12-4db6-8109-d81a4b3ab862)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #272 8dc8e7e8-703f-4454-8a45-ab03c1964e49)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #272 fbc5e5c1-3764-4aeb-bd40-a13c9ed2703e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 56440a12-744e-49d1-9ec7-0a1b7de53a3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 184cdc50-e0a2-4ee4-8150-cebe593ca5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 18c3bdbf-11a3-4594-862c-0af600b78c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 883ff6c3-64f4-428a-91e8-7f61244adbeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 a380e04b-9441-4f0b-97eb-59c49383934d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 cf100bd2-3c27-4259-ad21-d3acd9c940de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #273 99eeadf6-5bfa-484a-8b7f-d3639d1bfd31)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #273 b17cd6d8-ef61-4e56-8d79-494affb0e82a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 b536b28d-212f-4a30-aa01-2ce18566f9ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 50c37797-1fd0-45c1-aea2-f6f9eba36014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 57c9a7e3-c0dd-4f9a-8e6e-f9954963415b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 11e66b06-d5d1-41d7-8442-7834d31e6ace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 27fe219d-a242-4c8f-9b3a-9f5572676374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 0dc7240c-35dc-42f8-bf18-299ecb98dd8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #274 27449859-69cd-45e4-ab56-de7aeb954b32)");
unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #274 ff965ba4-e83e-4b64-81a4-9c51b997f089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 da18a838-b4c0-4f50-ad25-f45cf52562d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 b6bcc9d9-a758-4ea6-9710-28ae23020435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 6b321e7a-8fd2-4467-980c-def5b8beb83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 a40aee90-2638-4355-887b-77f8230719e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 a0e01c8f-8081-46c7-aec8-af738077637b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 49f050e4-a921-49f0-91c5-d6aa273ffb58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #275 8372c1dc-d041-4eca-a6f7-170079c5756e)");
unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #275 d8614be6-3d39-406b-be0e-43db06dad382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 d8cdf4f0-bdc3-4554-b30e-b6ea64f3b97e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 1ec4a693-2271-454d-b9cf-7c17c6c38a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 9b79c1dd-87c0-4bb2-a1b0-c70319be7831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 80773302-9c2f-4d3d-afdf-3a1658da7cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 2abda40d-7fad-454e-a54b-554992e38404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 843033f5-9cf2-4747-b156-da294f9fb4e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #276 202c64e6-da8a-4955-9aad-454d3edf0191)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #276 f2ce770f-3c9b-4412-891e-ea0223b65a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 8cee9444-a675-4ff0-a9f9-201ec241e0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 edba16ef-fd84-44f7-a322-b8117a4c07f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 6853ff9f-4cb6-439a-836e-d5033762306d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 10992d13-0cc6-4218-8ee9-1ba9c92272c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 321cb4a5-608f-4fb2-ae17-374d7215294e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 14f95c46-a004-4ec8-b14b-48998a90dd15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #277 da044180-b81b-48bc-8db1-56bbcb16a200)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #277 1b0f5e24-f7bd-4a49-b6b4-9780d0a3aafc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 424adb05-7209-495d-a882-b3639506f1e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 f1d1d044-14d1-4937-b6c7-9624211db9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 1cf93885-07ac-4fd8-860b-47edace13a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 001f595d-19f6-474d-bd7e-deac18af4c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 10a7aa38-ee04-4d46-9fca-f5f1a784bb7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 cb2dd04c-2db0-49c1-ae9e-7cdc4cc8356c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #278 1a4590c5-5376-40c1-8e46-9221bd781e2b)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #278 cda654c8-48cb-48c2-a67a-2395493f99fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 7dd02a1c-673e-4769-a930-e71992d5343d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 4839918b-459f-4f76-a590-5ccfddda0931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 8ad15225-71d5-4fd2-a1f6-8bbbfe1f2a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 3f4299ee-cb09-499c-80ec-9050642263fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 648599a6-f6ba-4225-ab7b-2f1eec75b5fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 04f7c396-a2a7-4460-986d-1df0c21ca252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #279 e4736a51-3b61-45f1-a418-228c6833bd33)");
unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #279 5d1e1767-8f8e-420b-bece-01320bd3e238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 321e9444-dfec-4e1a-89a9-b84979061559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 5ff96e58-40e1-48b5-a87d-867540c52369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 16f94a38-f9c9-43fd-882f-0f446bedec91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 f771a473-898a-41ed-9124-55aae7679163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 04a60d5f-45af-4f83-9502-b2d3ccd795fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 30c58dfb-de10-48b7-a6bc-667798144753)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #280 9cf3d658-4a1f-4bda-a17f-46d6b4844941)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #280 0c5d253d-1a77-4220-ad31-2db3d36073c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 112703b4-25ef-4107-a0e7-a036a1ba1b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 006849bb-d140-4a4c-ab18-439628e261c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 bb4d3fec-57d0-4c50-be1c-3ffc706464c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 56a6636d-33b8-473e-aa2f-e5e90edcdcab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 33bdeddc-3e3f-488a-b8c3-aedfcf5f0a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 93798385-9cf5-463d-b252-a0fff2edbabf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #281 f08ee695-f8e6-4363-84fa-30fd9cd4f5ec)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #281 f733ece4-69ce-46ad-a989-67e9c9eae050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 b606ca08-b0ba-489d-a677-e053ea348610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 6a370a46-cb71-445f-add3-4adb4d6bc18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 7b3b4d98-bb24-4a23-badf-afcae1cac3b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 6979e7fd-2a1d-4f6b-9791-eb0f41ed89aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 70ffd13b-9b46-41b0-add2-ac0dd257a53e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 ab582ae9-ad98-4959-9b19-52e5e40d02a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #282 0d4c2da2-91c1-4864-825f-17d0d57026a1)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #282 86f7c328-c2ce-420d-bb5a-9e107b2a08e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 43445ca7-28c9-44bd-8398-219342d6811d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 59f740d3-d3f1-4653-b3ee-48ab882281ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 61c38fa1-db07-4b25-800e-f590bee614ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 e0fed4ed-81d3-4ba5-a060-8c38c68e6eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 3f8ba814-e2e4-4cff-88cb-137f021bb23d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 1be78593-0806-4fcf-b2a0-720654f5f6e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #283 052017be-4101-4395-ac7e-b9256b4646fc)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #283 bb92d589-d46e-43a1-a3a4-d644d1ca322e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 3274eb35-5e9e-40f5-8974-a541b5aa6d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 8042ecc2-e18b-4dcc-99ed-d2b528b74f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 64b3bb27-7ece-4066-8721-80a8ac5a7632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 cb3f5b78-84c8-4eed-be01-0b496286f91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 11056c58-21e2-472c-a277-aed617b0183d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 32d80a13-f7ce-41d4-b595-7bcdcdb7f6d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #284 e122f5f4-3c81-417a-b6aa-555cfd839987)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #284 7a52d513-a271-41b4-a454-325822824c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 f306aaa7-1453-48a6-b49b-0ebf379a89b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 d3504aff-c5ed-448e-a525-f971856cd105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 9ca70072-6301-46ac-afca-f19638faf5b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 c7ee36b2-b359-4219-8cf7-ade5efc75216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 e8ce2c7f-ea07-4e50-aa71-f28ea2ac456c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 8fb0f217-43c5-4363-a2e2-726352e1a711)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #285 e25dcae6-a235-4bb8-8237-2446bc7a9801)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #285 8bdf6baf-6244-45a0-914c-032bb85d190b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 068f76c0-34dd-4826-b4fa-7c0c4b4036f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 9ec99416-4463-4e6d-8416-367d875acb2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 a84e11c3-a4f6-4bfb-bbf5-00d7970f4a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 e170bfca-c78d-4efe-abb6-0007bcaadbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 fddad694-6e0c-4a1a-b44e-eefa1c629237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 f8abe93c-3473-412b-af39-18f685bb388e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #286 35c65150-873e-413f-afc0-430a8d84f434)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #286 e7d03654-fa34-48b4-b89b-b9b083888162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 3f752c5b-2a9e-4ae4-82ba-f8b81eb058e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 7fb7613f-a651-4fe3-8962-028894896335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 e1d0dc46-0e73-4147-88c3-b7d86bfdedce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 b5482b82-9a33-49ae-be1b-85536f9b2d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 845d9d17-5bad-49ac-97cb-5090de39f457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 54fde78f-b09f-4211-aa61-4cde3b72883f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #287 7484bac5-1894-40b9-97b1-f7bba903cae8)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #287 ec4a7faa-4680-4c41-9880-a0b0a5f7b884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 95b396fd-770e-44dc-ab98-323bf9af009b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 e1dfe794-7756-4d9c-8c29-db2064ac2e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 d975b1cc-012f-4d09-90be-0237337a907f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 984c8a1e-5895-4c85-a5e9-c30af75c477b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 b0f4bb1a-3884-4a19-8ab8-ddf8bf617a8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 2dba0c6a-702e-4571-9057-727e0eab2bb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #288 902f6c12-70e2-46ee-84c6-d4104c69aab2)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #288 14ad4754-a67e-4863-988d-b7fab7fa4e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 4532bc5b-d99a-42e4-be7f-2add8bf1a143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 75e3c029-81ec-4aff-b736-56b8e5ad5998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 0b01f679-3f12-4717-b9d0-133df37c055a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 ed55109c-33ff-4e85-ac2c-c49b815ace40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 504ebc30-ebe3-4f7e-ab6d-1ea592080063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 8a24b900-6ed5-45a6-ae24-2c32c1a24a51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #289 fadce089-014e-4b5c-9e14-66bbd641a348)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #289 23defc55-35a4-44b0-8db7-5dabde6f6f79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 511f77aa-bb36-4ad2-984a-d0fe4b431140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 690d7bb1-2e41-43dc-abfc-ae39a1472736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 781c6363-aa97-4331-83e1-88f4a746e318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 70546d67-3d35-4bfc-8f8d-d3cde4d2e38c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 adf3f47d-dce0-4a4c-8825-f8aa7a0d7175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 bcc30b78-7fd1-49fe-a9c4-af2127404d78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #290 c128598f-acbb-4a77-bea9-a340f948eaec)");
unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #290 196eb49c-9069-4a71-86ee-5dc459aece2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 864dd371-1caa-4e2c-a2ac-8f48116b1e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 545b1dad-75ba-43be-b444-87cddd734c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 3d235f4b-bb2e-4703-baa4-3a36d59c1403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 b925fac7-cc79-4725-977e-796a0ac9c617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 a0065bd7-b8b4-4247-84e9-db8d41fb845b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 8713f7fa-531e-4c10-b5ea-f482be52c87d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #291 cd7ae722-3d39-4c81-93df-3dc97a6a8af7)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #291 b53b628b-2c7c-443a-bb4a-bfce23363b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 9d8ddd15-7c49-4f7c-a973-d356d105a211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 7bf812bc-b2d3-40f1-b214-19c4628a9bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 be8917a7-2331-4c81-a505-eefb0ff56177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 ac950516-184c-4152-a096-0eb6c940bb8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 1e28002f-d820-4cad-b52a-45ddaebaf218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 8766ca4e-e4ee-41c7-95fa-1aa593496cc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #292 23fa5dd0-1255-401c-8a11-7adbc54a7e44)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #292 48a9c32c-9a37-4572-8aaf-8b9c12632c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 b10821c1-3f68-48ea-bff3-5f106262e288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 73d3c51e-1cf3-491d-af69-35401b56a7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 e47056cb-3b67-48bb-bf75-737bd63d8623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 60c23d10-c03e-467f-ac97-d04927cb14ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 130803c4-e071-4fc0-b408-3c9f9c9f6655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 17caedb6-31d2-4387-be54-882833d9692b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #293 cc811904-6b59-4e2b-83ab-5be0d2bef3e3)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #293 af47e256-930d-4d9f-b8f2-d3d21fc37cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 dbcb2f56-7fee-4e60-b59f-85d2a6a4805e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 7b5e56f8-27ae-4d10-8b39-e9e061964448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 b6c484dd-2334-425f-9572-a7f947bbbc99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 5cc737ce-7548-4063-ae7f-eab3057f5f9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 506d826f-0066-436d-96a9-4e3d662d8b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 c076839d-20a8-4be3-bcef-ca36bc24d407)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #294 1d2f30de-d7fb-4962-8876-26f4335c74af)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #294 79918e68-659d-47a7-a706-06eae5e639f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 bd47e0f5-10b7-4a49-a307-9fbfb663807b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 1d35970d-992d-44d2-ba83-acd890f424a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 e0b693e3-a055-4e76-80bf-a155e5372f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 89d76566-aad7-4c93-be88-6c838810cd0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 753cf3dd-96e5-418e-8d9c-8bb03732806f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 a6adcbe0-01b1-40f3-852f-d0fc372e326e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #295 0247b89d-12eb-48e2-a381-e6efcf2260fd)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #295 2718e5e9-c3b3-4695-a3cd-d17edefc0f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 27626398-7093-4d76-9568-296ac4de77be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 767ad6c8-ed26-4ab2-8194-db615e949376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 de3f6ea9-c0d4-440e-8612-07a375309936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 e254e12f-c22d-47ab-9839-d16a3d565500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 e60d9dc1-47e7-4ef7-96b9-f23823ea58fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 52628fc5-3bbf-4024-8896-455437b667c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #296 2b733a58-589f-43b3-9629-fdff308c2193)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #296 65fc6c10-1ee2-4457-ab73-bc1d8c26bf65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 353d5b23-2be8-401e-b5d6-5fb9ff4c8609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 03a18215-5a70-4600-aace-ca1d6c366623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 204d191d-2170-4cd1-9ff0-9f6fa91ddda2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 db527ff2-59aa-4ad6-88a4-abca221433b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 7e98e664-bdb2-43e9-9422-98f093d8861d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 96993063-1e5e-4392-b403-0f9bed8c7b4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #297 59191c87-216b-497b-a95a-2276123267e9)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #297 0eb9ce6f-6584-4da5-8e6c-7b1c6700f83e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 be5aedef-bcc5-4ccc-8e9f-749b7e81b18b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 72a49fda-7a66-408c-81c0-d8a42e1416d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 da4bfda5-0064-4f34-b4a1-f5981e2a661e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 9940d0f6-ea94-43c6-9f75-b168fa3e3e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 bcdb3338-b7ab-49d8-9db5-5893a5536d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 481f7535-895a-4e36-9f21-b54fffe5b891)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #298 ffaa9147-ca3e-4cb1-be8d-df2d907f4955)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #298 77b93d34-62b4-40c4-a388-7a68301188c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 057a24e6-0af8-41e1-b48a-f8f9e368f4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 58aaa4af-bb8f-47f5-9bda-1d243282318a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 cbe2f407-d0e8-4ac7-b996-a4e74836dd1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 46b63d08-7c28-4c95-8c5b-391bfadb822b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 dc13b066-d1ad-4cfa-a259-f80f43933d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 60131efd-c052-41e9-873a-ffa4ca6f1957)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #299 a6d3084c-8eab-4d30-8473-e39049955918)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #299 03b2aa81-b908-4bc4-849c-f82280d5d9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 4ba914b6-ba0f-49ce-a4ac-b1700ded1068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 288090ab-da08-4562-ab51-e033aebd10b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 63dd8d87-87eb-4e8e-a54a-f91528db993e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 e743190d-bf7a-4805-8627-18d13b86f4c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 93432d52-5db9-479f-9121-6488d90b9b7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 122ae35f-a416-44a3-b370-e407231edb47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #300 d64a2e00-9104-465d-81b1-046dc215f374)");
unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #300 865fb06d-9f11-4819-bc2c-bea3e1f1187f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 a4946808-7c45-4d59-9fad-4caed4cc2bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 cb41a09d-b118-4ce2-ac18-60e35ffbb4a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 eb9051a5-4c55-42c1-aa2c-d055130a02a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 3ec9c5a3-bcc9-4694-9db3-57fa3f83759d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 f6f8f0c9-9f96-4181-8c3e-5426280ea8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 b519bcbb-501e-47f9-bc54-5af6b710941d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #301 09f73a42-efd0-4841-aeef-98c0f0941bb7)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #301 3a0cdf5c-ddb7-4a64-a1ce-b4d19d6f56dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 06da7901-5d63-4834-8ae6-7e5373ea6a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 de49bcae-493b-4e74-bbc0-1119c75d48d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 7dadf3d5-74c1-412e-a040-a5b187be16bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 e1b9060c-e796-46f9-96a1-98cd8f5ce0d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 aa67ff47-c0da-41e2-b725-7211bf71fcb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 ddda5df5-99c1-4298-944d-b974c92abc6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #302 a9f19e74-d435-4449-b814-dd926ecc8e99)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #302 d2586fd9-99d1-4dcd-b1f1-870ff3680a61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 33506822-50ea-4c3c-ac7d-c75514a3bcad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 6da9da96-2e3a-4ec3-8999-d792f0134913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 b868e887-8a08-4109-8d83-b927da1dd28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 8be2dca4-41d5-49bd-b14f-1f4c30bee005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 f65db2e5-b499-4446-a664-4bf2e19e9207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 0862618b-f08a-4831-846f-1dd72621c5cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #303 bd3f037b-7c2f-4534-ac77-126ecdb4df05)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #303 8de92559-877d-4265-8775-57a4c8c12497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 2e978382-a944-48ef-afb5-cff19877c8e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 882b1e54-b92e-4188-b4ad-beb055830904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 df78f7af-b6e0-4981-b8f9-ae822e52104c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 56fba7fa-57ea-49cf-9454-5c096804b1f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 efc3c7c0-6422-44f4-b9b4-16d584940f6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 9e4fab4e-ff35-49b4-be1b-8e47141b4bdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #304 49ffa31e-0e7a-4262-8c23-85370ce66270)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #304 c6bc1684-a6f3-44b6-9cf1-ace3cf624143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 7b2e2629-6862-4085-a564-03f032974cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 291ea012-59bf-45fc-ade1-ec15819a5054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 907c1baf-66b4-4939-8e3c-4ddf03c90807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 d70bb4d7-96fc-4a77-81a0-99d1dcd91c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 2072c706-d492-423d-9d42-dea71741b67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 f5aa4dfc-9966-4894-9bb4-37731ba6e59c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #305 4f98ed8c-b3d3-437a-9171-6b234c00f2bc)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #305 6ff24365-d5df-478c-9a91-dd1b00cd1eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 a0a7d357-fd85-4b72-83db-500410aa533a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 967d4819-7dec-4238-9dea-d2a07a6d259c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 4b24a0d6-a700-45b7-b00b-d11d60af5e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 0e64a4ea-d6f3-412c-81c3-db80cf7ed2a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 c70c52d5-29a6-4795-9741-fc87fb52abda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 19752317-5230-41cd-bc65-3b8772798bec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #306 0791ab5f-1797-4df0-956f-4060365e0170)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #306 561f80e0-4887-4a97-bb3b-9561e84fe051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 de5bc640-8cf4-4601-8fa7-da42189c4f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 49600b97-3c50-4b26-914c-91bbb3144aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 74d7d948-2033-4b17-b11d-6a7f689dcc60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 e82f61d5-18aa-4014-b8b2-6a840617ea38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 80299e72-cdf4-41f1-9377-a5fb9cba05ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 e502177d-b568-4d73-9244-91cd21355443)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #307 6cca2372-a8bb-44d9-ad35-609feefe922a)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #307 83f16dd7-adbc-42e3-b098-e1efa5cdd897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 ef8fbb71-634a-4fb0-a861-e4680326dc85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 1292bdc5-7b28-4f1b-b793-8505714ec049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 a67fd2ab-2622-4ae9-8d4a-e1e2ecc01833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 0838d288-9653-400d-b053-b844da6d6033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 834b0916-4997-4c44-b767-aa419e89511b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 a1126334-10a7-4968-a09b-3ed1e3361108)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #308 60299c46-1029-4fb8-8901-7835edc53251)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #308 f8b2ac27-587f-403b-8daf-e4471fd4583c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 f8d0daaf-05ea-457c-a95d-e603be4202f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 bc6cf606-6b3b-4b4a-88fa-c1d058744714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 4059da82-cbf0-4bec-bffa-7fe50714ecc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 8b557121-4600-4c4c-9957-8c3aa780bb96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 f68182b1-c716-43a0-b410-318aeece4932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 d62f1e4d-b0b1-4d7b-8987-1ac565354b42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #309 4399bd8b-c480-4fd4-af78-a24fd4b65fd8)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #309 403ea464-d7b8-45ae-833f-243a1202f9c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 2362d40d-bde0-4192-98ac-0a8758edb0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 77749e11-89f3-44a0-8407-667309153a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 bf861d9a-6cb8-42ec-bec5-afb3453b330d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 89fe35e9-6b80-4e3c-8563-ee65856e742b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 5751d8c5-2e1b-40c3-841a-053c118815a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 94931d92-68fc-4e8b-b069-0e658bbeb6f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #310 e765f85b-9837-4d53-87aa-8b0442378998)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #310 1423f6a6-db16-4408-b1ba-3f421c3893a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 8d1876d2-88e4-489c-88bc-6ff09008d450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 de9a01d3-ca42-437b-98b0-e99d3f0dc13f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 422905f4-9049-4436-80ee-cc52f4f2d743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 8c540cef-cc26-453a-b336-b91288647e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 12e5130f-7998-4956-94c8-336bfd112296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 a37b71ce-0b61-4dfb-880e-81ec77a13339)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #311 a960649e-08c5-44ba-b5dc-5e29a9d14095)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #311 5b84c9e1-a2ab-44ae-a9df-0bdd0b3099f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 e0a0befc-e29f-412b-bb45-937d3cce17d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 67be9dfc-cf59-40b2-93c6-15d3aac9265d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 1110d9e0-8105-4072-a1d8-f8e9d2b16f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 72a718b6-b4f4-45ac-a253-75067a8d8d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 9f794185-390f-434f-bffe-60829f926f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 31da9f83-467f-4cca-a8b6-ba1f357d0077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #312 f6d3d18e-4465-437c-b3e6-6f5c85bc36db)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #312 bb03b0e2-c647-4d6f-826e-e401f549ebfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 15e06747-0f04-417a-afd1-578021033334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 ab788715-c571-4729-9a06-12a8e454fc14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 0631454f-0bfd-4d7f-939a-88b2fc38a692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 602d8f83-8397-441b-b68a-797ffa8eaf8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 f20a6387-2dd5-49eb-a008-74b3d9ebd972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 89cff2c3-5a39-49cf-90f0-8489b317fc3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #313 e6818c32-4369-44eb-93b7-628f0abc0076)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #313 fd12c8f1-3377-44e1-9bea-5199226327ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 d4461b7d-28b4-4d98-8096-07990df53457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 31d92819-ca23-4bcd-841d-4960645789b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 e19dbb33-d328-4119-8e3e-f6f57773e86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 030bdb62-ff1d-48f8-a2b0-90cef734c4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 3b3fe7de-ea8f-467f-8a9f-05bdc0c6762c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 0cb5d57d-9517-4302-949f-d47c3a89b035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #314 8a3ac86b-7b7e-48e0-9df5-b4fd3c06db04)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #314 8ce3201f-b45c-4b76-80b1-9486db474f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 d696d0bd-21d8-40b4-a402-745490866af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 40c0c153-9b9a-41fa-b06b-02d2e593c61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 f8e5cec3-907b-41d5-896f-c23e155d23c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 2a3de63f-c680-41a1-a785-c96e0ed07861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 7578a5df-1f85-4ee9-9cab-bfda2b87f727)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 5f1bfbd4-3337-48bc-ae50-212b7b5b0246)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #315 4f7af564-a476-4ce2-82ef-15701de48c80)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #315 8b72c116-9b7b-4ed7-b337-f3e2a1fc17cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 2baebd59-c669-415b-99e2-fc2df4113f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 d02d6714-9ce9-46d8-88c7-904ce2b3f0c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 6df2aeea-2d53-4a7b-95c3-bbfbb00be406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 b1850e00-c434-4434-b772-82a78a271319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 44a9f10b-66a1-47f8-9535-2e329ee51123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 4512c6e4-6240-4d4a-a549-51f6c831a661)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #316 8e3f75c0-bed1-4130-a358-2a33229ec069)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #316 81be1d7e-43de-4f02-aaaf-aa16dcc3f9d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 7f62245c-7f3d-4a6f-a8ed-245ace672b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 98a381c1-0517-44c4-a900-cf2897297020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 85157660-8052-4ceb-a621-b253b7322b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 76638169-4e50-4bdc-a0a9-6bab6f621055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 e95d02f6-f021-4275-924a-a6010a061e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 d8f8afaa-206c-4861-a443-b83437fa08c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #317 606b6e90-aa76-4775-afd8-41516b7da3dc)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #317 a7dca64f-537c-43b9-acd6-f121a0a915e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 91cbe185-ef1d-4f1e-8daf-f668111cf3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 63ddd850-5252-44c5-8cd1-01a352ff5906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 882288a5-731e-43fc-ac16-f6db131c16e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 9ab9d505-c371-4ff4-97fa-e79578041847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 1e5ba5bb-1b93-4b9e-bd67-339e75223eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 febbd8ff-8c8e-4983-b1f4-39f22bb56edf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #318 122d70b4-ff1b-46c7-8c77-1519eb68a03a)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #318 61e80cae-4fdd-41ee-bb2e-6267c8bb36aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 832d2a5f-8eae-4cdb-bcea-b008f8c8fa2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 a92d7eff-ece6-472a-809f-652cdf6510fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 28422235-5de3-42d0-884c-35bc78e56507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 82e63a4b-f801-4b69-86a6-2f93c20e05ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 c6acd709-aec9-4b1b-938d-7c3dadb97c5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 40cf9050-6537-462e-9a71-7103b014df62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #319 76b0915e-9177-48d6-8a8c-41d59b23e94b)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #319 33f546e5-76ee-4586-a1b0-d64a4f2f5545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 830080bd-913c-45f2-95ea-43fdea0ac3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 441d0b6e-0807-4f91-886d-70931c84b95f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 4bb6043e-a293-4209-ae7d-c5b91e837ddf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 063c69de-e9b1-4a6a-9394-fd1104e91405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 c93aeb94-90f7-42fd-852d-35c3cdaed380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 90644716-71a4-4fad-b0bf-ffa39d7f1513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #320 19f39b76-9195-4a8d-8893-cc874c6afe3a)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #320 e27ddefa-dcfb-4dc2-837b-7c640bc46140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 c9d07e98-ba39-4df6-8cbb-3a8de4d448bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 d5d828e1-4aa3-4e0c-b4e3-88482075cecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 0eea401e-81ba-4d6a-9937-8ec6d31cb86b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 11b0f2cc-3081-4bee-9573-60cfdaf85e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 f481e0df-a949-40da-95e3-6cb35b9fe4e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 89a871f1-680b-4061-a3ef-6aad9b844ac5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #321 0592ae8a-7cba-455f-8c45-2a6c7fa89c92)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #321 c6ffd2e6-9786-4ac2-a5be-0ac889f00b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 1cff63d7-356a-4e82-8674-bcc0a3f8d49c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 386e12c4-8589-47bd-9293-6fca9a9b7478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 1bc56d12-80cb-4fb0-8e9d-f04c63a406c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 9b42a73b-b2ad-48dc-ad04-d01a37134a1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 272bf914-8945-4236-8372-aa95e9b5b0d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 08d3c04e-9c36-4741-92b0-e84910a65f56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #322 e0bdb5fc-9b03-47a1-b633-1ee23ff4e742)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #322 6d01c7da-9217-4a68-af06-f30852d93c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 7be1c4a5-07e2-45a4-8830-a97f3a63611e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 c9d5bf73-baf9-4ab0-9832-62159e543673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 991559dd-eddd-46d4-9f6a-b60f1f110fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 8bf756f8-1520-4616-b4ff-2091f069b7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 2affc638-1493-47ce-ab2e-aaae83cde3b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 170e668e-36b6-4a95-bf3e-00650b3a70b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #323 321ad830-74e4-4007-8280-4637229fb1c0)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #323 509fb288-f8ec-4798-b8b4-84f9554899a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 6fe8894b-6871-4e78-97a1-90e0510c302e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 d203a49d-1366-44ac-987d-1d900118fa3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 a18017e7-160c-471f-9986-f352c442e686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 7b76d054-1ec8-45da-8b1d-8c8127b993ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 82f5e995-4b6f-4c16-b2dc-9e613f2ab8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 48d203fb-6756-4472-9ef1-5256cf688267)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #324 97894676-9289-41d5-b5f1-d3b5553053cb)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #324 16ad39fb-1228-4e28-b389-2b8e469a393c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 b7c85378-59f0-40e9-a048-cc51f5fefc29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 c2172f49-92a5-454a-b3fd-ab3e297df517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 18b7f3d4-4d4e-463b-92e0-2ca745f16e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 76df66a6-fd48-4a5f-9408-fe2f4262b2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 d3e9452f-3533-4bc8-a844-176d7069b439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 70785c44-381f-4be7-8066-1b4a2cb3d04d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #325 428100c9-a3c0-439d-be0a-471b30679e70)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #325 dcd4f689-f2df-4e3f-96f1-6ab8f3c31eaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 a6fe5f6e-f66e-4b3a-9920-e3030ede4a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 cd1b103f-43d7-43dc-a2ee-a415ef7c503f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 7507cc4f-3066-4854-b6e0-89c37a663164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 2b1f4f20-7ac7-4c78-b732-e205ba52c4ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 b6b50e37-00bb-45b5-81f7-5380a4c3cc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 3b5cfc53-7936-4386-8d26-19ec48780b4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #326 c1758188-58de-48ee-b7bd-b61e62dbd491)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #326 03ba0451-9739-4daa-b351-7c1c91981f7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 eb2dc20a-7b55-41c2-a41e-10e7245be240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 a3b21317-a251-4d18-915d-ff02ea5635aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 d6487b8a-2700-41ee-8b70-092b397384cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 1f9467ab-8b2f-49e1-99a1-a9a3a2e47d2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 496bb895-fbb9-4540-868d-36b82316e54c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 dc52de53-7bc6-4b4c-8543-2f744b6d2c7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #327 b6de41b9-6cdb-4d86-a897-95ed1c341f5b)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #327 f7647249-aacc-4094-861a-8bbcf46be478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 8d1bab15-a295-4310-8cbf-f8794b13e54d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 a06532ae-409e-4b4c-859f-c3d8464f4ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 970ee233-94af-4d9a-9177-5faaef9cdda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 930d6f9c-3e25-43e0-ad17-cbe7b942ca29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 cb025633-f62c-40ce-bece-cf585fbb9afa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 0cceaed4-a04b-4114-bfde-bcd3215273f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #328 fe8663c3-81c2-4fe5-8e7a-2e3b42e7c2c9)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #328 8fae0550-2eea-4b47-ae4e-7c91ead7c809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 5fc74a7b-e939-4561-abbd-00b516688a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 09116cac-3b22-41f5-a587-24661e7b5a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 ae7585fc-60ca-4b07-9db4-4174804280c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 9fcdf169-689d-41f8-8575-6c430ab86eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 7c4b8b9b-c4c1-4c62-8b00-cf1b092f64e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 7681db63-431f-4a06-92d5-817e92d97dd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #329 199c8a62-34dd-4be9-b79a-f29a6f19ff35)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #329 9d4ca785-7cc6-4f65-a827-4cb34660eee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 950321b3-d0c0-4194-ad8d-677fd3875e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 780756df-c502-4d4c-b87d-696f3dfb0281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 3c69cf8e-c692-406e-a3b6-ac6fbd857911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 156cf9b0-418c-4c32-a326-ae94e54211b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 8566f478-f1ab-4b70-a0dd-7e5015afca4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 3d0fb9c3-92c6-4231-a6ac-f58cc8d5760e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #330 1913a899-07af-43b1-b242-aa644c050639)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #330 b70f91df-2581-4755-ab98-574efdbefe2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 c44cf46c-50fe-4853-bd4d-8ac381da2c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 74e0cdeb-8aa4-4f18-9049-2248aacf4ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 e2847f87-35fd-4638-81b9-74c4c7736d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 bb6026dd-73b6-4330-afd6-b16d72af6b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 65d062a2-2958-43b6-b012-6bbb691b2db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 63801cab-dc76-4451-b73a-8d56998e01af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #331 80282e90-e0b1-47cc-9bb6-a02d0035d701)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #331 2d1a546a-b2a4-4927-bef5-f930b4f3e72f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 fdfa949b-697b-48d7-a601-d5f2a4e21672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 7b7edd7a-dedb-4f84-a3fe-f62a18b65947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 98111ad2-8188-42a6-85a4-e6ba48c612a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 3b2d4511-2cf8-4197-b069-5b32acb9e6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 76412775-aa29-4a31-bef1-a2fe9253d460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 76777020-30ee-4410-8c5e-b1679dd47bfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #332 b9834b81-8b0b-4fef-8ef4-0c747fe0216a)");
unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #332 4e76792f-cf3c-47a7-b276-bbeae863813a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 f3b0f745-112f-4c10-a20f-c15c65186ab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 00cc3010-b20b-4427-a7a6-6de98012370e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 619ad45c-3024-46b6-aac3-f251e8c0e7d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 b800a629-7ece-4260-9644-68cc898c4fb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 3b1f68a8-80b3-4613-a095-4f90d9786748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 066a92f0-c84d-4e0e-b2cb-5c56d7a3e906)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #333 ff5cde9f-1368-48c4-81c7-a876254722c0)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #333 3b148da0-d079-468e-a6b2-3b5287da231c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 3a8d58e4-7de8-4dc6-b8a0-e8d2732a0351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 14716ea2-0e24-4dfe-aa97-2d4f4eeb2ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 45cf10bf-171d-4adb-91a5-c49f12fb59e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 e0fad8e7-c130-43c8-8530-80858c2a7785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 21bcebd2-77a9-4b8e-a4ff-a79ed51783dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 523e62c0-654c-4323-9c7f-e2129eca4d59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #334 7a1830c2-0414-4f21-a84d-ebd00bcbd3b7)");
unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #334 2abc4d57-4023-4860-ac5a-1b1693bfd273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 8544cf75-f6f2-4459-9241-437f6084a6f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 60236c4b-fbb4-4311-b69f-ba26e58f82cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 a95d5fb9-0235-400c-a0e9-d9ae3bf48d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 4b3e8118-334a-44d9-8819-2cd32290df06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 8c4685ef-ec6a-4a2c-b1ea-25bebb2a7f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 ff1b2393-a3ef-4360-811a-1f624c3c16f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #335 e385cd77-c8c3-4210-928b-becf46e97949)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #335 ec62eb46-a13e-47f0-819f-ac381eb5ee08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 67341c4a-13a3-4fa4-84be-65f639bcf853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 cf55bec4-0933-49b3-89c3-32243e86324c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 a89ce3f8-c508-4047-9a35-5310e2c6701c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 abe98882-fecc-41b5-9b52-b8c61987c8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 5d9f0eb3-6cad-4962-ab38-5b3980e5cc47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 dd6ee5c9-3f8e-47cf-a100-12e81f5b268e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #336 361d7a8f-0903-4386-9154-f3d647345033)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #336 ef08d7a9-70e9-4324-8b99-f1f400fa4c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 93917699-a89c-4a19-83a0-1335015e4072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 de2e9e54-1fe5-4c07-89b4-5bfb30e04407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 ddb623ae-b78b-40f0-812f-85cc479218df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 99faa9a5-584c-4bc0-88a6-567f13bac5ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 f6e51514-f0d6-424b-ad29-31fb95b219da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 65147bdf-3654-413a-ab33-43e1e73cc8ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #337 3f401d6b-9b82-424a-8bca-133d49ee106e)");
unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #337 87cb838e-291d-44d5-bc47-5fb6973e0d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 4ec0afef-5a8a-4149-8d05-340107ea2d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 280fe529-4287-4ad5-9ef5-d5896e280c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 76011e29-c844-4818-8655-eda9611e61e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 6953abac-2a8a-4bea-8e66-60cb228f8ab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 708ad38e-e405-44a5-803f-6a4bbe45000e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 014814bf-a736-4821-8fed-50091737fb35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #338 a9e72033-7032-472e-92bd-680ae05f0165)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #338 a6be783b-f91a-4b6c-bdf7-d3ed55a3b761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 5c8126ae-6822-4901-968a-a375102e81c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 53c4f893-debb-47a7-ab08-cd4803ce74bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 a1070978-ad6a-4eee-808e-560dce885a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 73b237ff-459d-47a0-a7ce-0f6b2f9b315d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 c2244f4e-1135-4ff1-93b9-c4e572a43585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 8d711d99-9229-4e5c-bc4b-7b6468611da1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #339 e8dd8dad-2a92-4c26-820a-9c3f4ef0f064)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #339 1d64e387-7452-41d3-a3ee-1895470b40ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 59264955-0b24-477f-ad40-9bfc2a6600e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 c00e6ee9-6b17-4cc7-987a-33fb83cb67a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 4ad52549-17c9-403a-9b4a-468fb1293bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 95d0c1c1-efaf-4562-afaa-2029b2b67e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 392939e9-1a97-4c12-9d13-5e3967013e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 607c35a7-92b9-471f-a39d-0d90897497f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #340 01f2a5ad-08c6-4574-a6da-19eaf3fa173c)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #340 7a03afe6-4056-4834-9162-b533874f9a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 a364a318-7d7f-446e-a18e-c6d94fdcad13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 3e17e863-6894-455d-a215-b886e7477ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 b94560de-98b2-4f44-af0c-16c989a1b174)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 1027c1cd-bb57-4635-9d39-7850c3535986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 f03a3a80-6b2a-49a5-a392-1e2a29233b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 9c062e56-abee-446a-adc3-1fa754fb3ed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #341 cb7fc57f-6d33-4067-b947-db554c4dca56)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #341 4f0376e4-32db-4461-9e60-6f1280fdbdae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 ef0f6dd1-c234-459d-9c3f-5a82646c2947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 f5fc0285-9bdb-4c80-af03-bc13c2ba7e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 3c0057eb-dc2f-41d5-93c8-8d14cb122bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 3a5efd73-bbbd-4614-af7b-7ddb76d0b3f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 7a2ea26e-587a-4f3b-9fba-907433e380e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 f83c0c9c-d202-4a63-8b6b-405490eda631)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #342 817f5ead-6704-412e-abc9-b6b7021b391c)");
unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #342 e3c1a44b-1ba8-48d5-b367-5140e5979737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 1b78f9d6-67c1-4190-824b-19b99e8f5b73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 c9102b5d-8262-40e7-8946-7e3cfcbe44f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 251afa79-f2a1-495e-acbf-65ba53fc2ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 8bb91a1f-e948-43f9-87b9-ca48962a9eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 50465f7c-4576-4c3f-be93-2f1986a5a9f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 e4069863-a934-4d0d-a5d3-776f78191232)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #343 80f5d297-af2d-470b-85d4-09bf68e6fc66)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #343 ce8ab1a6-d689-4c0d-a153-0b4aec9c06f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 6b82b4a2-9dbe-4904-bde0-30c96dd4819c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 bf2efd0b-1db9-402e-85e3-dd20ff0823db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 a97171ae-04d5-4a3d-994a-426ac5708c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 d0c80f7f-c558-45cf-b072-2d0a96c35c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 a1deda96-2b19-482b-abb8-4da135a6d826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 fc6e4199-b424-41ba-a451-2f1572b3a08e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #344 d6b7ad80-5057-41a7-a8e7-7845c2458319)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #344 ea8550a6-88fb-4b5e-bfee-fed6c20d3419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 086c1f9e-4173-404a-adcb-58fdce735897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 75a126ba-35be-4145-90fa-d896af1211c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 d5001342-7e23-45b3-acad-cf77448c3d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 06f3c139-549b-45ad-9197-89d1c44f57f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 66febfc8-b665-4537-982c-748cb4fefe4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 a5c0069a-c937-43b6-9bc3-ae38a221ab63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #345 2514e7f8-cd2f-42ef-afdc-8218502e34d2)");
unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #345 27b1cbf8-d1fc-4d66-bdd4-0d63e31b81ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 c674b6a7-3de9-4c4d-b735-2b646feee168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 54924e47-2faf-416f-879e-41b5e7f168d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 0bdb8590-51a4-4a95-8f54-71c5b811f985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 e945fc7b-b9ac-491d-9ac3-ec9d6cce9879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 ec5a23ae-df98-45c6-bd96-b5d4eff9be01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 c308deb3-bdb4-4e79-b796-d00bcd507955)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #346 95a4b4d2-656c-4fc8-8f0f-310a1bf6236a)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #346 ef50a67f-0a41-430c-98b1-3a4c9ff64f42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 78af5ef6-f7be-4e77-8059-a2b1d0d34a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 b86db444-3d02-47b6-947b-068960c29c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 6c524473-9d38-46e0-9466-9118b9405543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 b9c70f10-3ab8-4d54-b8ef-4a4abd2ea75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 fe10fb96-3d6f-40fd-8904-ade2c1a21ce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 9045ed0b-2937-4fb1-ac8b-16af8a88ef3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #347 3021de52-0193-4731-bbe5-bdcfdab82aca)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #347 9dc1b22d-c05d-42e7-a0bc-09859f6d70d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 5b395479-9f33-4156-8ea4-c04c0517b696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 2f690baf-bcd5-4113-8e59-21ee7b2fda68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 c718c987-1cc4-4af5-9204-ba59fc6f1053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 10bc8568-19f0-4536-97cc-d61815ea510d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 07c1023a-acb5-43b8-905d-cfc947a56766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 463bd8a0-7426-477a-9c09-251f339ec6f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #348 07298c65-49f8-4ed0-86aa-e1e7302e9f61)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #348 0c1b97f8-368d-4252-92b4-c3f603b19f82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 73eda05b-d19d-44f3-b5b6-0ce538a1625e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 633862e7-e235-48dd-bb13-0a9a25a35ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 cd819e1f-32b1-4777-b90d-19a62b283e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 c8c621aa-eeb2-4d47-865b-a61c8566dd2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 b44c44fe-9ecc-43e5-b7f2-013baf5ab43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 a61375b6-bdb3-416f-b038-71f732e364c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #349 7d16649f-b44e-4e09-9832-870d8a6f8068)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #349 55dc241b-e1c7-4e77-82e0-afc30cfbe147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 a38af2bb-78d8-4957-bbf8-ac843b626092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 fbecfbbe-3af4-4b1a-8700-184f87b28491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 814bbe06-89b4-4d5d-b3eb-b7b8eddc0e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 6ab772b9-3cc9-4bb2-a2bf-cb1b97a0a41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 aabec1d0-f568-4c6d-98df-b6713bdfbe26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 5b940fc7-5e0a-4606-a846-51891bdd767f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #350 8601bd0a-f82b-4fb2-be04-3e20a233b744)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #350 b7f69af9-af3a-430f-bcae-383b2d4c18d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 a7e01a14-cf58-4f8f-9ed3-14d6ff680afa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 259395ee-eaf9-4b1b-901f-160943e1b476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 0033170b-d75f-4b6f-8340-59d794e4e1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 feee62d1-b902-44c7-81b7-2e7902ddb169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 2538c78c-e37f-4731-86bc-de0c0a0df101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 35948cae-f8b9-4266-b01c-8e5d427b6162)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #351 65c51678-c261-49bd-9800-c2b383d25429)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #351 d37c3024-5be9-4d13-99a5-aa5fd627172d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 36a3df31-963e-4872-a695-7cb7f7a8e155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 c0e3ae7e-0621-425d-8f34-a5e1d1abbc92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 a3acc89b-5dd2-4d6a-8608-9e5e595e9d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 f609f4d7-ea32-4418-b1ec-ca678dace19b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 b8ec0bde-7ce7-45ff-8642-bdd2e04843e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 00e33aa2-9c72-47ab-be7d-a729e1a7851c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #352 eb17d0c5-08bd-4941-b82f-22f0e9d0e259)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #352 4524c394-b8dc-491b-87b6-c012f6b2e72c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 afc20256-6c30-4b11-8afb-2333af943aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 9b869390-def7-4cd2-927c-3735f268527c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 6b80d65f-54f7-4dcc-97f7-a7b57add440a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 da949ccb-c811-48a8-a037-2932782fac55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 5c740e21-b612-4210-9a13-391b157d0ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 558c21e6-7f78-494d-9346-8a2fb39ea8e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #353 f7364942-c87d-4662-95b3-1272946b8567)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #353 9b6b20da-4810-43df-9c91-a831468f180a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 81979755-2a44-4bfc-998b-473c4c823f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 5b668f48-5cc8-47e5-ba1d-ec2f517d6f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 47ffef07-5c48-4d17-8814-c8e8697509f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 3182eb8a-585d-4c79-8390-a5e00e395417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 a71c3936-52e3-4b6e-80c0-6dd500dc2723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 9fd2b1b9-fa96-4f8b-8b44-5456c8d51c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #354 7000578d-63c4-4777-b3ca-d63cccfe7c71)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #354 ba7c550a-a660-4fff-88b2-b3322bffb112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 06cd0aef-e140-488a-884c-871eea4b93f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 5c8d147f-7b53-4747-b2ba-a86304355bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 92a6249b-7236-460f-89a2-d6598373197c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 ae1ef28d-2013-46e6-b0a4-e372fdc60ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 5685342e-c385-4b84-8efa-1231b10a8d0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 8a03fd42-95c2-45bd-a721-00d0993c2157)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #355 d25bc0b2-19f5-43a6-a4fe-7e744f1438a0)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #355 061df221-a1c2-4cbb-a444-3d328ce45a86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 35f39ffd-f617-457d-bd8c-0f22d9672e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 d14a2cab-94a4-44a0-ad2e-b0d0221fc824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 32dbb6a4-82d2-4d44-95ee-e34b0573b405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 c19bfd1b-94f2-4b16-99b3-75aabb1bbcf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 df0cb623-fa71-4630-a15b-f0158c3812d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 6a79333d-0f19-44f2-8e2a-e451861e46b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #356 9ee6a3aa-a28d-4359-b887-75ea899e8c34)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #356 516c7e06-3e07-463f-919b-4ab1953d7a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 c07bb64b-fa73-439f-beba-2fa558a626da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 d0b63a4a-19ee-4a32-ac92-b440b548d91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 27d5daef-b20c-48ab-9fac-ff9507d2dc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 c8c64f1e-d9d6-4e55-a9d2-8961163d8207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 c517c0b8-baf9-4809-8ff6-cf0e61e8a6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 f46a24a3-d180-4a92-99a7-1057b2d6a21c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #357 4acd4653-808c-48e2-8a2f-604e1d3aba0e)");
unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #357 11db1227-8603-43a8-bad5-b3f9f3025d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 969d5678-f565-4635-b6e2-f4c099ebe0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 1df0ee90-2549-4d86-a1fe-b3913f887f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 debb691e-262d-4d6f-9954-e441bb7f9dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 f3dfd858-044a-450e-abc7-d1064cd4ac81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 be6309eb-3238-47b1-a4af-42e4cf2bce1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 167ab1c6-2231-4d97-aaed-2aea0c364157)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #358 4d59c8b7-283b-4f5e-93a8-96ae88e7c3b1)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #358 4bd424fe-a7b7-482f-a2fc-c32239aff757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 16560ff7-fc54-4894-a3a1-63644029e51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 853f8ac7-c715-42b0-8b5e-9f582dbe3258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 99619946-8904-4808-8100-fe15ff81ccbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 c38e7ccf-a256-4b83-afe7-9fdbeb6b84de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 9e27cb9c-190d-454c-9077-68201f3d1947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 243d45ab-dd35-49ab-9713-cbbfd4f5debd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #359 0ad80035-08db-44fe-930f-da3c765d1660)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #359 f3879139-7fa3-46f1-822c-5c093a73740f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 3e276990-e46b-4ebc-9928-2b3945852d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 5447c215-dd24-4770-998d-76493070f348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 2f35a303-c7ab-4a84-a470-c0b7056db8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 06498cc0-1818-4f27-8296-68c32c5918e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 c20d13f7-0e03-42fb-bb38-458ef3026481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 ac74be58-be03-44b7-80cc-f7438d2459f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #360 ef952f84-e531-48eb-a605-f14e5917d8e1)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #360 6e9ba873-919d-4ff9-9569-92fb4fbe5198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 8da95c4a-057d-49d0-b965-83f625b0334c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 bfaca251-ece3-49ae-940e-947e14a57c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 2918cc14-22a8-4a61-9c6f-c7cbd224d2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 908237de-bb27-481b-bb56-9061824701af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 1a9a4084-a976-4134-8d72-3a1b13d77bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 854061f4-f9fe-4fdb-b3c6-a9913c97a06e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #361 ef59c6fe-0bc7-49d9-bfd0-83aac0bf098d)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #361 02ad1a5e-c6af-4d17-b5ea-0ea519d35c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 3457df78-285b-46c2-a1e2-e27558d03a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 646d4587-ab43-4c47-8c17-1f4b7c1ef14d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 ea915c0f-80c5-4862-8068-7a02ae721001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 c6e59567-3e6e-4d64-a330-cd75ac93fa00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 65ac9f21-8ada-465a-be55-50b4f81d07b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 fe767385-2363-4a90-9191-235ee87fef6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #362 567730ae-2f88-4db4-a18c-ae13df4d9afa)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #362 63d69cf3-13d6-4192-9b28-d9e7f7c7707f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 9e2c4d39-bb6f-40ff-afb2-d5752ee08d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 42076185-ef08-461b-a7b0-d9a745125b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 ad4168d7-e2f1-4131-bba1-2700f1568f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 c797cc6f-49a0-43e4-82b3-24670473d425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 028f7fee-311d-490b-b4bd-09da8943c1f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 f3e091b1-c3ba-47da-b08d-1308f0941a1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #363 868baa02-e7e0-4cb6-b205-7b9ca3e55864)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #363 79265daa-9a04-4018-8a0f-94498c0cfff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 3fec0ce6-2373-4e57-b79d-1b07fd2c6f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 a0b512e3-a812-4a05-b9ad-10e2cbb2a2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 930e63ee-22dd-460f-a62d-4b61afb3ef3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 a5fd0f6e-706f-4c63-a567-a77e9d6aa88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 4e6548ef-40a0-4242-a710-e81c57392fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 1c3685d2-3612-423f-a36b-f1b80c95bab1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #364 4c3a0398-2e05-43e2-9292-669a77cc8619)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #364 09ffbcb0-833d-436d-a84a-b593f95aabde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 a06c48db-81d3-4251-9bbe-96cc8074d46d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 e54f52e7-2747-4dd7-91b1-0351ad305a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 2172fc51-5e16-4852-b384-1ac915bc388e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 a794d658-738b-4fba-a4f5-431d164f289c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 f833177b-1176-4f10-9256-e980d8673eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 40385daa-ebdb-4331-95b5-3af82a8a9964)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #365 7deb967d-1041-4b7f-8383-7ee6e68751ba)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #365 eb951b0e-dc13-49ce-b740-353fecd841f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 aaef68c8-3d77-4569-b986-acd3257509d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 41cf074d-af8b-4194-8cda-873c03a6a09d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 1099bd36-88f5-482a-a189-4e29d66e170f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 0afb345e-00d3-4cdd-9310-2fc00c95247c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 357e2314-0922-4af8-acf6-a9e2b3d2a552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 b9f5b550-1a33-493e-97e2-796f8544c049)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #366 096f0b76-4b82-46fc-9207-04776098c5ec)");
unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #366 36c8e943-c5ae-4ab0-8b32-a1a6662e39b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 90e39655-8a82-472e-b0ad-64131442ed36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 9565ea44-1395-44bc-9626-b18ca735900e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 5bc01e4c-7eed-4b99-a319-3594e73e7f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 2f8003b4-64ba-494b-a8b9-cfa16c4b65a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 2e4482b4-c3a8-494c-ace9-ddd53e1ea1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 7b2bb9fd-48e3-4bc3-9de9-de6ab82584d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #367 8c7fc255-8842-44b1-8036-545a80241a8a)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #367 dff17195-cb15-457f-99a8-f07a26307f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 c0e2ffe8-d3bc-40d7-b32f-6d5cd87fe1d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 46bb29a5-4abc-4b9f-a9c5-82d0f9c1c16f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 dcba767c-a02a-4f7a-9c50-3eb4354f46f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 856e00f1-6903-43e1-87ac-6605bad015b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 42b47432-f664-4af9-be79-8be33cd4d6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 a2b57bce-2465-4ac4-93d8-06cae701971e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #368 a8a4b5d5-7f29-4e14-8db2-22e55f5a491f)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #368 57835dd1-9768-4cbe-8f1a-958246749805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 fb1afe39-30c6-42b5-a145-5a51704eac77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 7665c8a4-d6dc-46f6-8e6f-436ed6cdf60a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 80e46712-cc61-4a12-9b76-bcf91f06f2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 44f1ac5e-5c21-46b4-a36d-0cda69ca9e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 150ebb3f-9c89-47a4-8c35-b90631567a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 af53d604-893c-49eb-bcea-29e817b669e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #369 2f949388-6368-4eae-9430-e5185cc8fd3a)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #369 ab82de34-7eea-4d98-9b3e-8f803e10a701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 96918ec9-b1e1-4703-b9b7-76161abed5b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 e5e546fb-503f-4631-bc0b-5c60c2bbb8d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 a9503d04-efbb-4287-ba9e-0597f48c9373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 6406da44-b5dc-43cd-a8e8-fda49110acb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 87759892-8244-4894-a367-5c42b3821d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 ae3b788c-ba7c-40a7-aba0-7e1b34c23c3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #370 8354588d-84ac-4c0d-ac8d-66503de95460)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #370 33e24b62-0d72-48e0-8478-d5e5120c5086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 be342df3-6b69-4c6e-9164-269b270aebea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 7eeb1dc2-e04b-4b7d-a41a-03a70b685454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 43352080-9efc-4dc2-96ec-ab890dca89af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 14f46f66-893c-4603-b723-b82810556f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 bb4cc4c8-81f1-443b-a288-e1b056ced7a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 077a9187-c3f3-41e4-9b18-e19b31f42cb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #371 5c06b41f-ab58-485a-920a-4529064f7df4)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #371 94693cbf-0352-44fc-9b62-7a74c5f2174c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 84e8be75-c4e1-47bb-a4eb-78df4095bc4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 f2d8ba6d-a4d8-4a56-9ec8-7d7573cf41cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 a3c55bcd-ff0a-41c9-b866-25441cc6ea78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 dcce3547-a80a-4080-8e13-b1371df43602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 4871ef32-4885-453e-8793-efb2ae541618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 4d257e14-da98-4dc7-9c3a-54ffcad6a50d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #372 3e52733c-846b-4c17-8d5b-6d25382b45b2)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #372 f41615da-c1e1-4640-8c15-f41413aff04a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 bc9d8b36-db69-4cd7-9c1c-e3740fd9cdb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 0a01b3d4-2896-4291-bec9-1c4a48165a60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 eef8fb52-c435-42fb-b9ad-823fc288123e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 405043c5-133a-47ab-be2b-9fa10ac07c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 ef369109-6146-4959-bbb8-1dcf3c943d7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 57c0672a-dee6-48d7-9f6b-5a78be53462a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #373 5aa60317-ae36-4aa7-88ea-dab2d86a3187)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #373 09274611-1fc4-4773-917e-d4663b7b8496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 720466ea-d22e-476e-a983-8737925413c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 0cb2e9ec-fbbc-4112-97ca-81ab14ea1d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 894bd3e4-883a-4e61-a84e-1e45cbb9f9f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 0c3117e3-210b-486b-afae-550f9ed455ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 83991398-6033-410c-ae05-a3ed6a3b6f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 73edb5e0-ed88-45f8-ab88-3c90125d7e90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #374 37bf7aa4-522a-471f-a8ed-e96afe7d4fa2)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #374 f5396f16-75e8-4371-a89d-033394bb0e3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 ce1c1457-c8d6-43d0-8cab-951704f58fca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 ab6f819d-d92e-4d6b-9e8a-7ab5a983a514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 a50dd6d7-1492-4605-8847-ce15634aa6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 8e4984c7-971b-4758-9e20-e0de15578de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 971ac4a4-1740-4062-95c9-34f9c9890d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 4d93de70-7796-44a7-b64f-15af9f85ff9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #375 74c7729b-b02c-43b8-b392-3972369fb0f7)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #375 00994d23-5138-4cca-8189-680657c88c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 4cefc70f-a967-47bb-80fb-c3cb9a31a7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 eb3928ab-6c57-45f8-a9f1-6c2c8ea553fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 252b0fa0-dff5-4bbd-8b37-16d3e67b70df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 9e2ae7a5-07d2-42e1-92ce-7222a7cf42f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 2272df65-bd8c-4e89-a9f2-7d082d8d30b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 7e90e194-18d5-4d18-8b1c-9ce8d2e48160)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #376 f655e6b7-c418-4393-a754-33ae749470b6)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #376 0ff3319e-a96d-4c9f-b65d-13073f801766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 cc185ab1-f9ff-4a44-9f6a-ac91ddffaf74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 9a22f44f-c64d-49cd-b55f-2e1c446dd7b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 4cfde16f-14fa-425a-922d-08a91d58d826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 9bdc07c3-3162-4264-9477-eca3f1fab2d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 08869e96-19db-4f9d-9874-c3b97a260381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 2f088645-6eaf-4cd5-991d-f86ffe2520ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #377 0275aa34-3b45-441a-a7d2-224110886a7e)");
unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #377 61ec5db1-ca76-4fec-b893-a8c5ff46dcba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 930a995f-3a48-45bc-94b4-e91404e07249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 fe9d8c2f-306c-4499-8421-2a2038bc06eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 cc272366-e13f-4be0-bd11-5dfa7c0123ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 54d566d6-e269-444f-92d6-c14dc4314329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 baa17a75-006e-4029-a268-4947eb370890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 def8c13f-3470-4d82-a502-6f99ec274e21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #378 60d300d3-8ba9-4ad2-b9da-ea5699d37ebf)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #378 a810d6ed-f196-4b2e-8cb7-92c892469d94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 61f3ab5e-a9ee-4be8-8029-c3b5d17f0f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 d67fb91c-dc09-41a3-b004-619be501a97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 fbabf554-dedc-42bd-8d2c-591e3cbd3b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 f1f4941a-1cc7-4c8d-9304-5a3abde64a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 310086b0-efbf-49cb-8e60-3ca52ddcf49c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 d443956b-a120-4176-a7a8-173e46435036)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #379 c6832aa5-8fc4-4a51-b813-b119045abe5d)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #379 ce0f9e32-b6c8-4fd4-8200-e6d5c4563b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 95962a4a-b269-4375-83ad-8533a9f8ebd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 c2e5abce-aa80-4d73-b2a6-91facdba278a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 3f17933e-1d90-413f-923e-0ece60b507dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 6b120dd6-ce85-4f25-9f39-c43ce319f096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 4048164b-10af-4f31-b390-3727a7278ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 dd3f9dff-9f2d-435f-b2ed-68e586d50a8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #380 f5feb7c5-dea2-41d4-92af-43d1c456d399)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #380 79776275-a922-49e2-966e-03796ee73c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 e96e6cf6-40e1-4010-b674-7d18b061d528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 e9dea90d-3feb-49fa-9fd6-8b53e7e71f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 a67941b9-1f54-4c18-b70b-9d6bcbd19fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 1d3ac883-d2b7-4971-bacc-e783c6994687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 224327d1-63bc-4b62-a8ef-e48ea2f33c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 3b1012fb-fa61-453a-85c9-220078df5172)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #381 19fe41fe-56f9-431c-9aa5-6e86e29980a7)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #381 c8f63f97-ef22-4317-ac51-52f87ff4ba31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 2ac49e36-9bb5-4ecd-9a12-ed763b890df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 539199a9-f7bc-4d3a-ad7a-f7412ff477ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 edcbbd81-7f6f-4ae6-b4a7-a08b4b37595c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 d7f44180-0b23-4ae4-9efb-615b6809d344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 f5fe7ae7-6b89-4e52-95fb-7417aad64d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 9bac039e-1c09-492a-81e0-46ec6122c0b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #382 cedda54d-e6f6-4153-a43b-3768e55d8955)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #382 836fd3a9-1d1d-4382-b2a2-f48b0e7e9d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 2b05aba1-bb8f-458c-8e11-69c650292916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 ce4df72e-cd37-4e62-b6e6-8f82854e2a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 81373bd0-5863-4482-aee2-b447af7e6272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 f9ef082e-0244-4a22-9daf-75c14208485d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 a187a98c-b0a5-4caf-bb39-99139711a3b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 e6d0c23b-99f7-4709-9b07-465652fc5325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #383 5271639e-532e-4423-a6cd-bbca9052804b)");
unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #383 601e779e-e7dc-478d-a219-bec5a7080cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 b0835940-bc18-4831-8a11-41ee7f8ff6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 2ab9f76c-59ee-4b29-92e9-1c08d2c1a81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 ec4cae56-d47d-47ae-bc06-46c9e67c3446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 87362c36-bb98-4304-abb8-0848c16d3f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 d81e48f0-b198-47fb-a89e-9a6a613d7bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 310fc55b-5bb6-4c25-b89e-520b3ee20185)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #384 bca0889d-a553-4a13-8106-fc390b0fed51)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #384 7916292e-cf04-4183-be6d-a313491290da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 932fb2be-5e95-4e95-8b6f-fb76d4cbd362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 302e935b-4608-4bb8-b4f5-2c65347ab810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 ee4dadf2-a500-4887-b042-c8cc1be70bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 a30b0b6d-2184-4b82-a551-a53ea9017f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 d3ea3ac7-c102-4baa-a9b4-cd1f55d5988f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 dd68e18b-e3cf-4637-83f9-ffedb8b2a575)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #385 b090b652-cfa3-4c79-bb80-30cd1637161b)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #385 904de523-7523-44fe-ab2c-000f414b8faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 66428eef-3570-4866-9c51-2427ae17a31c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 3028c07c-2377-4335-8fbd-f0fd037f5335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 b2c0d12b-44a2-4ce7-9146-e47d3e7cb696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 804c95a9-dfa3-4e5c-bf01-a003e93d1b38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 a15459d5-0ac2-4f91-bc76-12e34a59ca9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 880b12f0-23f6-4389-87ad-a7dd3e8028a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #386 aa62f3ee-dc30-4c92-a01c-5587f453d8d8)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #386 2a155169-c84d-4787-ba0c-fad6ca3156f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 8e8b527f-3a99-4fda-8cc1-2b3ac08ca9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 25250571-5be8-483a-93ff-9a9f53504b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 6faa5b1a-2c4b-44c9-800f-41a40aeba096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 366962f6-54f4-4602-b25b-eca913aca9dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 4e92c978-ed55-4eaa-9c10-81aa64963ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 8b0f8480-29ae-4546-b4eb-58385081b1d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #387 fb78e12b-8b71-4561-8b88-c64c4fe7ba3a)");
unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #387 0d76c187-a665-40fd-b5a3-041006a863be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 f1de8e29-cbdc-4abc-855c-05e7ca7429a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 1c4ae01b-2fc0-4705-b51e-0b3ce91fb1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 8d7a77b7-9db5-46ae-8739-3a6ed9775e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 763894be-e2cb-4b4d-89a1-5b9d0c4cbcb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 09629144-7eba-4929-a7bb-2695c00f157b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 614efd8e-afd7-4e4d-a88e-1feebcd6f05a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #388 3adeb623-bad4-4328-ad4a-e4a1da0aff9b)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #388 88c6a6ff-3b77-4ee6-a017-9d04060c5a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 fa85567f-c43b-41a5-8317-c631c9f57a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 fcd6801c-4f31-4d13-9196-7f276ea1b8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 376ff8aa-b4c5-4a9c-8cc3-3c78f7a7d30e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 9c25c2c2-c3c6-4e01-a353-e7577e8ab063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 4affe22f-717f-4d78-8b8a-cd190e14cb6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 70dfdafe-d79b-4211-9cdf-e1b2d71810bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #389 27a847ee-ee76-40d0-8cfb-daf12d8d54b2)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #389 382d2c82-060d-4db3-82ad-ea1bd3e7b8b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 b7c8d1fc-237e-4d90-b8ce-9fa7c5c2b86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 a0dfd48a-4d61-490d-aed4-7a11e1e60996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 8a50beb2-c644-4655-a70b-7f08161aec7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 7834afa5-c6f6-4493-97b4-bb8a4c1e9876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 40d7bd29-18c5-4fe4-891a-a292565bbe07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 871eb0e6-6faa-4e90-8ed3-6ba95304380d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #390 aceb1638-9453-4c89-9819-853e8a4a0548)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #390 6d7876a3-345d-464d-8dea-25dd76c2ca5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 23ef945c-1b75-4609-b3fa-a376380dc999)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 a74d68c0-2d56-43a9-af66-801d4435c303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 808ed860-0209-4c1b-aa34-1341f6cadf03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 0da2af17-2331-405c-a5ac-8b55d775c191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 ffe3633a-5a86-498c-be5b-5fa5d254da60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 76ef440d-6fab-415b-9bad-23c74791cc35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #391 166fecb5-0d48-4659-a685-ce2bafdb4f70)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #391 069e6725-2fef-465e-bdee-b56d68d01324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 b94b52e0-4c00-45a5-a4ab-3a1dab4acdfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 796ea269-7a1d-462d-a245-174b10f6ca12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 d4f33eb6-5280-4f45-8f59-3afb69b5e0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 ca3e51c9-f5db-4ecb-83f8-d5fc720bf762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 f38f9242-5bb6-4a1e-8656-125b5a844552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 fad5413e-60f3-4d7a-9903-465a83edbed8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #392 89b95cc8-ef9a-46e1-ac01-fd27d94399fe)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #392 3ef70ae8-3f1a-429d-8edc-dce84641f536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 76434153-bf8d-47b2-b332-ab10fc354910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 a65d59d3-2ed6-4aed-909f-c30e48b607e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 1b21cf16-fc94-4ce4-8e53-afb9116ae0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 096e8545-173f-4eb3-8d3e-e33d16c8c329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 ebbad5de-4a16-465f-b3ab-da9cc61df33c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 445ea51a-0533-476b-956f-08f964d1b8ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #393 fdacf4a3-ce3a-4f67-b981-36dcdf0c3bc1)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #393 74d2b053-3423-48d8-b0f0-72930d6e75e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 4739505b-6ac7-43dc-923d-202dbbb62365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 94141c77-58fe-4806-a829-010a6675d298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 ae2882e4-f73d-4029-82a7-24e1f42a5a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 73c49a0e-019e-406e-82b5-5cafefc4ddd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 9d208465-dd24-49c4-a81e-5f43518ac26c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 e1a0ab03-cba5-4f31-b656-094e1edf4449)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #394 64dd4172-c4c7-4e02-bfd1-d983e8056aac)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #394 d8543e29-a80f-4bd2-b211-785c4757738d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 024f30a2-add5-48d1-b048-659906640863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 3eef5b02-eb03-4fb1-bbf1-2b7867403380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 ace3a582-e855-49cd-8434-00166c1d26fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 e93ba75c-93df-4173-99b4-47247aaf4d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 a3047763-c36f-49fa-816d-41b97a2bd7f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 ef85103a-4493-42d4-952f-856e5dd95bf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #395 39069e41-d393-430c-98ad-ff59f3d09fec)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #395 91bf64dd-b3a5-4b72-9cae-5c50e5afa368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 801bccba-41fd-4437-ad70-b79a363427e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 4a07fd5e-03e2-4f12-a50e-f86aa3fea56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 4510dd08-0173-454c-bb9a-806ca811b902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 05b0071f-e328-411f-8147-c7d673a65f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 bc9e884c-2501-4c25-911d-9cab5eb4b694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 8ced55b5-7f41-4826-a03f-32ea5ef1b2ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #396 d1a5b061-717f-4849-a167-44f9c2f1d664)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #396 826eead9-d0d7-4949-bd8d-fc7220c8df21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 b8482d18-52da-4e31-b9d0-2f4424c91e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 7541354f-a509-44a4-ada6-d1e688b14584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 4aad8542-3022-4956-96d3-b33e70f01ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 85f5486c-867d-47c6-b636-c261c60366d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 9cd3e426-0d17-4766-93a3-b07c46f1f59d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 49878412-b54b-413b-9384-1f6a3e509396)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #397 1f1934b4-a59f-4a42-8290-09d9c20d9e9e)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #397 1d1d3a7d-5496-4a1a-834c-64810c718e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 1b041511-086b-41cf-9f26-13f5f43eea6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 fca15952-065e-4bae-b869-4e15978f727a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 7ce3c801-0246-4b59-b5f1-cb1650f649b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 1da4df49-dd2c-4f3c-b7c2-65dbdbf3ade6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 78600853-4cd4-49b4-905c-48de6fa9d542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 d64a40e1-db20-468d-b4f0-c099cf299b7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #398 e61ab7dc-8e49-4a9f-b11b-2e7397edead6)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #398 b17d1cf5-b36b-4018-bbc2-4dc9d2013e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 29ba7d04-94cb-4229-80a7-45f04e9cb016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 7d441a6c-5fa7-4871-980f-c1060711d1c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 7e7e576b-94fa-40ed-8305-092a9101083a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 fb4a354c-2b72-41d9-b6b2-e091d73d2b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 26aae089-3b4d-418c-8016-b6023973b0f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 e44e5a44-4e72-4db1-afc9-f1e7be85009d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #399 ed7454af-5e97-4988-b557-95b7e02a7e9d)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #399 53920266-4587-4f61-bde2-31ff54d32805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 c2e87500-13cd-403a-a4d3-69299328f03f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 717f0e80-b07a-44a2-a9de-d93a49145b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 505e0e0d-c15d-426f-94d8-718146b33b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 ca122904-e3f6-49cc-9074-e47beec4ab31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 79525ec8-b564-4cce-a522-4f7a18b118bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 b017d6a5-c6ee-4b0d-b46b-238e12d6bb57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #400 e075957b-b8bf-4bad-b321-4ab148837a97)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #400 5d8b8a64-2f21-4e1c-bf9d-18edef25e2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 da1b846b-4c10-4d0f-8426-96990c5be79f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 d6ef2b42-0eab-49fc-adfa-b858e4f71b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 99a2b655-b50d-48db-88ee-3d43cfa28d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 e2e21d05-c2be-47fd-920f-17e3b05f4da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 5c181a69-87ce-4943-910a-17c5d87a67b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 fa764b23-d8aa-4079-b5bc-88d45c0a9bad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #401 d7add820-6750-4921-aabc-0046380d2943)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #401 8114b45c-58f2-426d-8582-f271c60d2e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 465d28bb-be3c-4c11-aebe-af1400412128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 fecd4911-2cb1-4bd6-bbdd-f70c60b72c88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 778771f7-afde-408d-83f0-6d0ac68f9ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 e3991915-e36d-4c34-829e-b12a77cecda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 ae34bce3-e237-4e62-bac7-693a993016a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 11a6f0ed-fa8a-4410-b6c9-585d1d10a824)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #402 18ad61b4-7fd5-40ec-8517-d41af54c7992)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #402 81ab0f26-1af5-40ed-911b-33f1638c7bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 2d76cc6d-69b8-4b92-93aa-c1c22db3ccdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 6ec367dd-8d28-43fc-8902-84f133b7d4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 7dae2c86-9c84-4df5-9833-dc2a9697ec11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 9a440d23-bb73-4ea7-abd7-94be74736f25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 49109217-33b7-4ad9-bdb0-dd798d687b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 7950be7a-3773-48b4-a9ba-1bd23d889d75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #403 f79e3c86-3d80-4dc9-8b44-2c2df195baa6)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #403 28cff46f-1b04-4216-bab9-bdb023a08374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 b8928df6-64a0-4b23-9ad6-03e641ed7501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 b5682bfa-216b-4572-abca-ee427a019077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 602ece6d-e52e-4243-b9da-883df6a5c24f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 b72207ca-728e-46c6-860b-e4bfeb78ede6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 899a208c-9d8f-40a3-b242-3411ed20812c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 264db5d8-29b4-4995-875c-deb902d62ebf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #404 5c86f53b-bb4f-454c-adb4-796b9140f808)");
unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #404 2ffeb0ca-f26c-4e01-9d78-40b82fe16cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 23e77e67-8e9c-428f-af53-2951c7afd612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 e96f5aba-7126-4b58-801d-1e7e4a8897cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 5fd511f3-d627-4800-88b0-59def64a9647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 cf998e52-eb8a-432a-b96b-2576bea44d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 675efdfb-18c2-466f-9c11-2c5b9a96ac47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 f8552000-e534-4943-9680-c5ed19e245fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #405 dc24867b-a184-4ff0-b721-6962ffa27500)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #405 34e41777-85ab-4971-ab67-ceb677939437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 8e167658-de57-4de5-bb12-80127557cec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 4f110925-8f9a-4676-bf44-34084be502f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 d521cde8-cc4c-4fc2-bbcc-06e00963341d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 bd05455a-43be-4f0e-ba59-4cfc6131ae96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 a6ffbaa8-e55b-4449-b958-072c8f637545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 8954db5f-4e79-46be-9dae-e1e35ceb8c87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #406 767f83ca-c9c3-4c7f-bc0b-22b7ff0d4325)");
unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #406 96938c88-97a8-437b-a8f9-c3900cadee66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 c7001ca4-0db6-4cc2-87a4-ae7974fb7d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 7b2be819-ecaf-4e6b-b33b-64a12a95e47b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 87e61ba8-8cd8-481e-97ac-20dd7871b345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 83ea967f-8804-4298-a784-32eef214a92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 afca8274-a33d-4c6d-850d-dafc57d49c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 f3abab44-1057-4d8d-86e1-d00485ae16c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #407 24f1f510-507f-467d-8d0a-b179f5f323d4)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #407 da4a3ed5-5344-4061-ac2e-df851e427c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 588a85ad-dfa4-40ac-a0f8-6722b246101c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 e9865ec7-fcb0-452b-809c-11bb31799051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 47fc3a1f-6e43-4c2d-ab13-47c71043aaf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 97589015-8b4c-476c-8f82-64c49d60593c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 d1b10139-f19a-44ca-b30b-2cead5663105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 17351e63-2c48-4a95-a156-d0da9c3407d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #408 93d8f3ae-40b5-4bc2-9e8f-533a5c93c8bf)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #408 4e56cc94-325a-4cd5-a72e-4fc935828a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 8528ea1e-5e09-451f-83a8-ba9e038e7c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 64967c79-02b4-49da-b31b-d4c3415d4c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 1bb64ea2-4062-4442-8a48-9eb79f5c5cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 2aef6eb3-69ac-484b-8cfa-0567facc96af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 ff1ea654-6610-4fe8-be63-bdf72d5e4b66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 ddccd18a-8735-450f-95d8-3a392050c53e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #409 e2956451-ff27-4934-b172-38ddc9b8229b)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #409 def4db36-56b5-471b-a4c9-0939d3ee9ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 a5037cc6-f074-438e-9875-b2fa5c1ae51b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 00487d5d-2487-49b3-b2b6-39f0cb419dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 2a2f7516-5405-478c-81ff-c51ef3c7dfad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 6408344e-be88-4974-81e0-66ae76b523f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 48faf81c-7922-4f99-b68e-919f1a431f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 2b112322-40e9-4470-befa-57599c71f4c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #410 999cb302-a649-4d08-949f-7c1e606c7dd6)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #410 09e46b19-759a-44d5-9f9a-ecc7f429c14e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 21751eae-de6a-445f-8a7d-6e1cd5e08841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 d1a65e80-419c-459e-bfaa-ffeb1c87b6b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 c140f904-e51c-474b-9976-181748836527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 778fd705-29fd-4a09-afe4-ef40d6274986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 aee90581-e469-438f-a511-df944684cb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 b4ae50aa-5657-4008-970d-f508c3672df9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #411 8ec4a35b-8ab0-405d-a11f-9049a065dd77)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #411 bcad178a-870f-45f0-ba66-841400871e3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 e7e5c50a-1abd-49a8-8731-752fffb56163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 739e7172-0625-4966-a019-104f8b83d95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 c740d29d-498a-41f9-9948-df6e8863f750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 08d9a280-b7ef-4279-8b9f-d0117e48c943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 8ccf9d11-08f0-420f-a427-8f80977d10c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 2b9586b1-da5d-4ce4-9007-7e811baa39f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #412 4a235a0b-16b2-41bc-b605-d5142537f791)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #412 2567888a-c30a-47e5-96ce-56a788c8b532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 096d948f-9670-4c00-ade8-d737ff4476dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 e9d01e9c-6a71-4e70-9e44-c199c491ed93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 6397321b-d27c-40d1-aed5-20bf2776d962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 a6da3fc1-dcc0-43ac-a2da-09ccfb262638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 eda3489d-a56a-4ac2-8793-12938e00d055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 885e0293-453c-4f10-a58b-b45646ae4e05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #413 1dd29a14-4c0c-4387-8b59-291c6d03d826)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #413 adaf5654-a1af-4db7-9130-7baf08c004b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 8505adb9-7afe-4370-b856-3f20f0fa415e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 8c3944b6-b36c-44a8-8508-c0cff41c8535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 5cc1b88f-ac2c-47fe-a880-8e5d1ffc8c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 25e9e9b0-01db-4e18-9f76-b80f76503185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 056edabb-3a18-47ad-a3ba-3f2e58171dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 d802f8d4-68a1-411b-a987-1e20d74de4c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #414 784d1252-c016-42d6-96a4-b7c360686700)");
unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #414 7ac0fc91-0d0e-4f12-aa91-459188f6c668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 fda7ef80-c869-4cf4-9686-61e22e3d137f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 e43ce39c-a70b-40af-99fe-33e9b486547e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 2326c1b8-fa63-4eef-ba5c-4ae294b57475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 477d9f15-6d92-446d-b133-cdb0a9cf7591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 9f3cd21c-b5af-4d7b-a11d-344ef91f2582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 19a465ec-8c56-42e9-b073-983882a9074a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #415 5f93d240-beb2-40e7-b380-ff9747b82ca2)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #415 49abb1e2-e843-40f5-ac0a-99034766f1de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 0c5bdd2d-ba61-4807-8fe6-05991e30f9a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 6993e465-8f6f-485f-b147-50f2c614c070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 5e6344fe-e97e-4026-bbfc-0698f67207b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 f57b4fb2-66ac-403d-9fe8-bdc70a468ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 d8c153f4-03b5-43ec-abda-a3a3caa2b830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 13680455-8c2c-4ac1-ad03-102a1833c258)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #416 53dab973-b2e1-4895-8460-17bd4977e4e7)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #416 739129a8-2bf0-47ba-b30a-fe788ce77525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 f0e8b30f-66e7-4045-b800-5053acd114c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 c5f4d794-26f8-433c-b9e7-41c1930362f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 d3711026-d744-408f-97df-e9c38e53194e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 9534a36d-84e3-4de2-a3a3-7e419cdc1212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 ae74fd7d-f4f0-4b6c-b9f5-f5d49133dc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 8d9a0c42-00b1-43b6-a077-0b71d23b7e70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #417 dfbe5917-2fc7-49fe-be6b-3fce2cf226e6)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #417 7b1e02f4-3684-44da-93bf-9df682b1eb75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 75297db2-f9d5-4316-a234-6419172fe451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 5fdcf3cb-bf9c-415a-b6cb-df4eedcbfb89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 8226238d-10da-4e55-a6c5-85c4973cfce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 4b79908e-60c1-4d74-a4a3-da87a30da6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 61efca40-6b05-4c8e-8161-b75c4024cd13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 99babbb4-7fa3-486a-81ed-ec2a029a5a1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #418 b467569e-bbb7-4882-b3f8-5b21af0953a7)");
unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #418 9a3398fe-faee-4b60-aa81-e1aa54e85fc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 59941887-8547-4cc4-b3cb-535b295f49f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 57a57dc2-b8ff-43f7-a4e9-62607effdc80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 505a4165-8823-49e6-8bea-59d5985a3353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 6eaa91f2-6093-467c-b33c-7602427855f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 94f8ad3b-626d-428e-a3e8-38e599692584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 6f98ecc7-a39a-4f97-91ed-a60cd39f19ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #419 3c7df4ef-ba4d-47b3-ad53-ee25986917c0)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #419 cb56b546-39c5-40d5-b7e7-d9a892b2fcb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 b592f82e-e76e-4f3f-a966-55ff7b622e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 f087cdfc-0ebb-4459-8ec9-02da9753190f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 b047f724-d998-43b9-9df0-90697270428e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 8e3a7168-f7a9-432a-8f90-48dbcdd954ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 3b4592fd-36ac-454c-864f-f370ca07adab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 ba57b336-e304-48c0-b039-1f07b7abd13a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #420 2b1ce2b7-9a06-49b2-ba25-ebe41ff22b55)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #420 263caa6a-c288-4fa8-8692-8932a5054ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 125734d3-b03f-4751-bcb7-67ccf604a3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 e420d84d-2aac-4c8b-8546-8bbac941dc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 b16d9065-cf1b-4250-9411-e66d6bf3cc6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 16d399f1-aba5-45c5-b163-ab6be36bb148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 d3db6520-22fe-49dc-b4c5-7dd50e05d10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 4969d8f4-8fd1-4051-bbdc-8714579862d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #421 58da94d6-f194-432b-9038-0fd82bd01a45)");
unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #421 b8e16a9e-f76a-401e-9926-3f8a71b7e464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 be7d0b81-ea71-426f-a1e8-3d78e4f8d524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 3c4e104b-b247-476a-b525-9f817f52692c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 a8b75c53-7206-4887-b45c-ec58248dc1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 3e78a0c7-b6a6-46cf-9bd9-8b0b1ec48071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 8474b730-74ad-4d29-a571-e2cbc5169280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 509ec199-37d6-4e24-ad73-a7dcff5c2e19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #422 65408b86-12a0-4161-a552-af6811f418ee)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #422 97655d73-66b9-4d14-ae1e-2eb9d0231c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 f670e081-4df7-4442-b4ed-8dc55091d3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 4e08f952-d465-4a0f-9b27-7e433b763f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 55cc6bb5-aa6a-4c68-b426-7dd8dfa0e542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 8d1fd0ae-ef81-4937-a7cf-4a002945e610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 d3a35d74-448d-45de-98dc-fb67598a0ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 85a60ae1-0544-4f58-9f61-80fc80f9bc7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #423 daa010c0-f2ee-4e46-8c01-f059e423e832)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #423 d1a53ca0-1099-43cc-99fe-e5285c165781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 805617ce-be0e-4435-80c5-87a73a0514dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 8d968654-5b3d-4909-a49c-49e03076c912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 4fa2e19e-08dc-4bbc-8a1f-0302a9597e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 e1d4b882-a48e-45a3-8e05-3a84a4cb4aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 6e329aa7-de6d-4035-a99d-e5a5c4b2064f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 07acb5a9-0bfb-4e1e-9975-b44271c74873)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #424 dd1b9db2-947a-4411-9b98-06b86e5bdb31)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #424 4f646dba-2f21-4e14-b971-c29b3ac66614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 e9fbd33a-686d-48f6-b52a-ff908ec6c0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 2d1be721-1402-4535-a213-76110ed1517c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 57bdca4c-e36b-4988-b61d-7b4a180527f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 0f0c1459-7d8b-453b-b8fa-ddd49a251ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 5d230eab-6f94-4725-9861-5ff4b158b732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 8ddf6948-6031-4e07-a9d6-7dcf8024ba2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #425 dcfc89a7-2acf-4fbd-bf60-28feae99f626)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #425 8f008665-a149-4b8f-8eba-c2edc765123e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 c7d88bce-dc8c-4a04-8d83-fdd54f69ec7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 a89feb5d-28b9-464d-88d0-c76d22c2692d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 9e2fb47e-2a74-474d-83bd-c65068aecd54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 1a7005f5-6a5f-4fe2-93a4-d1ce125dd0d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 e1f0f85f-399d-4e69-9c17-918f24ab6fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 db6297d9-964c-4935-b55d-9679904a9b2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #426 b1a6754e-b6d4-4f21-9dc1-9a1773825211)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #426 403571f8-a6f1-4015-baf0-f2023c065222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 8920e872-f0f2-446f-a66e-69079d4fffb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 f33466f5-13b9-494b-93b2-b77c4d9515bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 ddbd8a92-c2f1-4f58-ae81-f2c55512b587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 236b48e4-5fcc-422d-8296-b42a9a972aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 1c353d12-6782-4f0b-9a42-41f966b610f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 ad53746a-4cb8-477c-87a4-35a7359edae7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #427 17a387e0-bcf1-4be2-92a7-411848b96d7d)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #427 385d50b6-a8f5-48ea-ae2e-33bd1b6c0441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 cbc85d3e-fc50-4ada-9cfb-0cbc19f4957a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 ab47b9a5-d103-4ee7-8efb-0d33726894e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 0c4dc0c2-bd50-47ff-9a24-a9d3fdf69b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 79c3bde3-f6cb-4ebe-bb59-46e31d3485e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 7ae678f1-bb74-4d56-b5b2-2a1625c85dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 e58819cd-30b8-4e75-878d-a4f75382eab2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #428 d245fe3f-2d4b-478c-ae8c-c898563d55e0)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #428 88f7c5ed-d9fa-400f-a56d-b8736f089850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 9065879a-9b04-4026-91ce-0721be2c34c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 b6d8baf5-5377-495f-ab04-617c0798bcdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 92e50e4b-3a10-4cf5-aa38-6de7c18878e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 c4f7b300-d962-4136-8221-7625baa60b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 6cabb1db-4f92-45f1-9a5e-34618274fa5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 02d5c0f3-bf2c-42d3-a2c5-52c3b912a721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #429 7c6caf13-dc96-45ea-ae4c-29760fcaec5c)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #429 7588269c-138c-4df2-8a4c-90b02ad1e707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 7a54f02a-c01d-4594-81c8-e811a3563db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 0a2492fa-73f7-4be2-90d3-c15a82c8550a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 e4a1b925-b897-49eb-877c-76a5c5f1ac5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 1cb258dd-2cb8-48c8-ae2a-a4ae833f7f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 c9cc0321-13dc-4ad9-a3c7-7321315aaf2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 f2c31f7c-7f8f-4a8d-92f8-7777fdf437b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #430 2d05d6c9-d2e9-4ef5-a11d-46638158a344)");
unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #430 e7593dbf-2e7c-4194-8a0a-eca394b7dc85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 aafcaec7-174f-47b2-8d02-0f986a29d95b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 a725e0cd-d7f2-49dd-98a7-3f6886da1dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 6a5cf015-b8b9-4e22-a03b-72c3825744c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 c0cb08ab-c2f4-4c31-b71d-952a51166b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 946e02ac-fe9c-46c6-bd9e-0f8a564e14b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 553d4286-326d-4038-b035-b71cfa11b741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #431 156288da-b869-4e4f-9504-647695e86528)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #431 4202fd7a-aea0-49c5-b361-9ff97ad46297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 d3d1de03-8056-4a9e-82a0-9e4b6643052f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 f283c119-05f6-494d-a35a-1b7294e8d64e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 81e070dd-d137-4585-87f6-5c062ef85d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 e01ae78c-5994-4034-8df5-0dfb66e26613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 0774e962-47d9-4c04-a48e-13bc24dcb481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 26ee28a0-c348-40c4-828f-6839b5ef2458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #432 7ee3baf1-fba2-4c80-bbb9-daf0f58f8e6b)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #432 687adaa1-23c9-4bb0-9454-e06e12684e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 a99f7816-7606-4b25-a242-7d10ccd4817b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 501fbb30-dd8e-4058-bedf-bcb6d44075b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 1f5c7bac-253d-4aa2-a12a-91848168fbd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 16f6f31c-2728-44fb-bc2a-830640387ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 dcfadc06-53d4-46dc-abef-59e897465267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 6f12d8b6-9a99-4010-85a2-b8f29c664ce4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #433 1543dc83-5fef-451c-b91b-f59a5702331b)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #433 2b2e4f4a-ac4f-4b2b-b182-35a291af8238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 16d02157-6f83-4952-9751-199fd5cefb21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 8abe48a4-cd27-4d8c-ba3d-3e23974be8b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 29f0d77d-8ef3-4d3f-aa97-9484f79f7fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 d8ea6cd1-4c94-4d18-b5a0-c408e3ad678f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 4fabb1de-82b8-4053-9210-0b68e40d57cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 cfcd861e-3559-41cb-8952-11f2b5b1882c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #434 55cfb3a6-5758-47fd-ac8b-efca07270ab9)");
unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #434 3ef2e024-5a9b-4c0b-81df-e852a1181b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 c43e6974-44a0-4e04-abf6-6f13c22064bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 a60b0ebb-f706-40d7-9da8-b9cb4c2b73a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 2fdc4996-3f3f-4e83-9f00-a4f8a89a1604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 0275b5ea-c6b2-463b-9237-9d8a584129af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 bcac9d18-c076-43b5-a834-ba2a0b951569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 fe57a4ba-dfaa-48fa-8644-2b82191a098d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #435 2846cb9a-ce14-43a0-b83a-c8b397fec75d)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #435 e92bf6e8-b7a8-4785-b53b-01911c4142c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 b58f1900-64aa-437e-85b7-75e1e3d0716a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 997ac7f2-2d4d-4e3b-b9e9-50fca9b8bd5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 e17cff49-2165-41e2-8dd2-859fed5c6d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 fbd751df-329b-4946-8631-d85fc5a4e890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 36ebc700-913b-4bfa-a4c2-d723fc5d8069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 728070db-9def-4797-b0ca-1eb9ac1b00f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #436 f71338d4-8093-4e17-b617-0a5f706e56d0)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #436 f981e1b6-811f-444b-91d9-5b99b95458c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 eab0a58b-82a1-41b3-a923-521110b7f16f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 2d397b0f-e55b-4d84-883f-c33dffee205c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 8e9939d4-3c9d-4ac6-8e3c-4e456cf73ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 b524affc-9b72-4b4e-92b2-4953c7b32b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 839ee2e7-7bcc-4552-8146-dcf2ebde85c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 67e699d8-cc7d-4445-ae29-a3135d17072f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #437 51264d7f-1838-48d0-b9d6-01babe73ee5f)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #437 1c268cab-4239-4680-acb1-5b99d5f1b85d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 1a9f61e0-0700-4fce-919a-88bf91c28059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 e45ecf56-f9ec-45ea-8a74-eade17f46c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 dd8bbc5a-64ae-4781-be81-d7132b70ed21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 b2c8234c-b596-4753-87a6-67ef62be683d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 84494a2a-e09a-4d07-b81f-e30e964144dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 36f0d67e-6c06-4797-8073-4a7c20f87ed9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #438 898d0ce0-6f1e-49ca-a39d-2ba45ab690b1)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #438 32bd0c02-ac8c-4e26-8a63-0f564af28767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 56fbd151-1936-4195-b94f-0247bcffe65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 4fb2a3e5-5540-455f-888c-e8b3be87fe50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 cc5b14b5-bf86-449c-b015-0aaad8df8857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 d8a9bf80-82e5-4b67-a2e5-70f5bc89b854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 ca0dd4aa-abe6-4fe5-a92d-0728346e1cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 05be7240-d91a-43fa-9945-6befa1f9f389)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #439 93ac6294-bf94-4a94-ba88-ebcedd9933cb)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #439 8002f3d5-f7ed-43b6-a6a3-77a3b58aba0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 99607bcc-9634-4b20-8f82-5afcebd51ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 3c3f50db-3cb9-4dcf-bf45-34b9e15a5300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 b9366ef9-304d-4b23-b31e-fa949f543eb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 f43380e9-c44c-4717-81f9-75e690aac4df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 69ff116b-e8bc-4402-b47f-e217b3757723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 e86117ee-3c04-4a12-be69-ea360f6168c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #440 df3b0e3a-f85c-4363-b99b-3df42a6a166a)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #440 054ad08e-d0bf-4246-9bc0-38f7d638a7ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 f13cc229-e2b6-488c-a798-47f597eb9f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 923ec2cf-534f-415c-b192-32daed0bad0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 93e9fe23-4fe4-49f3-88a1-d540ffc16001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 7855b6b7-07d4-425f-81bc-f880ae1c4990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 b9d20920-c2f1-4848-be82-fcce4c705ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 41905e2b-44b5-4a1d-af16-793613115c3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #441 c917bbc8-ee90-492e-9d31-2aa6716653c4)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #441 c7e8c07f-0c3c-4601-b6f6-89d089fdd1d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 7ae3776b-af63-4d86-b8d2-1869d79b5b00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 9fcf5c88-5298-444b-a814-46dcbe9c8d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 61f3d60f-4305-413c-95c5-9ccfea428e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 52ba7350-68d0-47eb-bfe4-4f09cfb5fdf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 0d8d8aca-4cf5-409b-a4bc-0de2a386452d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 58db1a8b-ac01-4887-bdff-7419e71a9369)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #442 db6bc41e-f9f3-4de6-aa33-49fb6dd19e68)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #442 9826c2bd-5e85-48c2-aed2-0982d3c89de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 6d73c806-28b2-4dc6-9178-be686f0b43b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 194bbadd-3988-4e13-bd5e-75fcad22b5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 8059db23-1a74-4df0-a3b8-8fb66561999d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 0d41384f-bf32-4a33-b828-2494b36c60d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 04afdcda-94ae-4fda-b45a-52273b238d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 92677b42-9cb9-4b80-a1e7-c23e834d2809)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #443 a75868ea-dc4b-488f-83ba-690d0b0bee38)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #443 7c9f3029-9818-4cd9-b0ad-6212efdc28e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 37352f38-1493-4a6e-8bb5-9f41ab71ec2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 4a4654eb-082d-49d6-a3e8-54efeafeb660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 bd9942e0-5b4d-446a-a0f1-83e53bc6c0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 6d9e637a-c6b3-4485-bd88-d17a80beef92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 1b896169-9cf3-45b5-abf9-4eed0fc4f24c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 37fb5cec-267f-4606-9e77-5b21e26d0979)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #444 6ba871bd-424c-4b5d-9b66-a491794a8675)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #444 4cea664f-4da6-4bd5-9623-204cab6d7dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 cc090250-02db-4165-8f3c-3bdfea85f426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 fcb5d908-1e62-4fc8-a1a9-baace2688988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 2bae392e-c997-4806-8335-c5e1f4ed9832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 0ee83e04-004c-4035-9527-34c84c38f6c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 1fcd8510-0364-4a4f-b7f8-f2a44d79ad9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 d2fb462f-16ad-4523-9212-e5402d18700f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #445 369a74d9-5632-481c-ab11-c8ea80214295)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #445 0f2e8793-1a9b-4758-92cb-3ca33925e0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 2ad6e47c-e5a7-4046-bf50-1f1bfb32cb38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 859f7f11-858f-4d23-9753-1e31f1e37704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 967c6ca2-1ef0-4a07-8335-35ddbb012bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 5898ce46-d221-45b3-a09c-25d8e5fa12a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 dcdb0c68-a373-4a45-8751-061b5a627a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 959ff9e6-e6df-4d53-ada6-f787c58e44ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #446 5d17157d-1215-4391-9e20-9f7f9d4d864d)");
unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #446 75a4f00d-1aa9-4227-8878-ba662ea71999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 12b845f3-e7a5-4e22-bac0-fb46c12b196a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 4807da32-4ae0-4fff-ac22-e401958aea0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 c1012414-9539-468f-a04e-33ae98bbfd66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 745903b5-3e09-4035-93a3-fd18b685a8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 4e178da9-7404-49d6-9756-84bfc7ff7ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 171f05b7-a42b-45c4-9e4c-b426b72e7223)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #447 8af1bba8-9fb6-4e7a-9782-510a5f9d938f)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #447 d6a09890-732b-40f3-93f4-506847f818c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 418f7bd5-b181-4497-b541-a1341565c452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 946bc4f1-2f25-4c19-80d6-3b60fc97143f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 3aa914af-5258-4ddd-82dc-944a9de294fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 33004837-64f4-48b1-90a6-3f334e8e65a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 a5311a71-db99-4ec4-9e80-4ac91b676d7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 05a30ca8-b9c4-42b1-a5ba-c483504ab7bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #448 31eabce3-e0d3-4eda-8686-7a8baea4d489)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #448 2514d8f7-b53e-4ede-b1a8-6c3f6a84eb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 0af6426b-22e4-4cb2-a125-6033effe3d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 8ab1d148-d233-46f4-9cb4-536f0c50d86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 4099fc98-41d9-4df8-a31a-2123d2fe1974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 85ba1217-234f-49a2-9057-91dfdd80e9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 b9b74533-421a-4bde-80f1-663eaefd99e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 b61691cd-364e-41d6-be0c-5c5969ee58b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #449 86b84425-d977-4542-aa3f-4f177a358f52)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #449 019f1955-19a7-4928-a4da-f0663fb0cb02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 8d986f96-5c53-424d-a23f-be4e2e48c9ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 83188ed0-ffd0-4e58-b7da-b09bc940e9ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 5dc7230a-1127-46b3-8d91-8ad29bbbd911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 f4540102-4825-4759-948f-45faf9dcd93f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 c0b261ac-e8ad-43fa-9119-00d847dfa5f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 23ab7136-00f2-40e9-8cc1-76e03d6bb5d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #450 d695f300-252c-4f09-b221-6139b0a9ff99)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #450 5170518b-7af4-4216-a794-5ca90586bec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 23b9ef40-164f-4022-8a24-1a73043db232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 a18fd5c4-17fe-4c90-873b-33627092354d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 a523e123-a033-49dc-a851-69e0902a6fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 4421b997-180c-43be-9353-81241ffccd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 cffb84ae-3646-4fca-aac0-93a19c095030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 fc14b930-a024-4e07-8cd4-20710b593de3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #451 1d0a1692-8e83-4bb3-a6ad-46ffc2f29fe6)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #451 151d8cf2-bd4c-4796-93e5-8907c8f39af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 760d7e3e-90cc-4c18-8d04-8b368df5b52d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 c140c6c2-f6f7-40cf-9039-77dba10f20d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 990c6a90-6259-4f27-af94-fa303fc9f701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 01d429d0-9966-40c1-bdb5-44ebd9df9a14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 eeac88ef-9907-443b-ae8f-a91f2758642c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 62128acc-ed92-4d0f-b5b1-72952f16091d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #452 8304dafe-5103-4a3c-9e6b-32c7e5b03bfd)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #452 6031122f-9c89-487f-9a68-615c7808f4d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 5cc81536-b00e-41b9-b9f8-b14d8d3aadb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 568186a8-44e0-479f-b229-6e69954e2dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 e1bc8192-940a-4ed0-aad2-cb61e3ac3c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 ef60a5b6-eaf8-47ba-85df-fdc48a90be43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 368378f7-008f-4478-95ba-9da1e52b8a8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 f4d9bf75-9f91-4e52-888b-be4e1795b58d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #453 172b5faa-8ace-42c6-86fa-d076a4e39895)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #453 d6cca116-185b-4cec-857f-3fb851b21ef2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 b3c7c3c6-b784-4d5e-925f-aa354b521faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 83dc13e4-e52f-4f64-b32a-9fa2cab7fedf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 95f02a5d-18df-4d69-bf05-cb54568f41a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 f4656d10-3f71-49dd-9323-9f119aaa4a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 64c22c9f-5f02-4140-99b9-8ea80353a0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 0a5dc1bc-6661-4f1a-abdf-bf8f0d317a60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #454 466428e6-31b0-4f7c-876e-585580d2b7d0)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #454 47ac2e59-7caf-436e-bd43-ee0ccb7cf5cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 f62bbdd2-6d81-40f3-aac3-539d65876351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 a22c9995-6f70-4beb-b576-0518aa56d906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 c8cd213a-cb88-4779-a120-7387440d7505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 16dbe356-8d87-4d01-bad6-f51ce254c1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 0db9aa62-8f70-412f-897f-23be5df75ae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 60c3f27a-e3ce-48ce-94b3-0a82f502626f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #455 40354698-4585-4696-ad7c-48431f9fb4bd)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #455 2d4f657d-9ae5-4a1b-a5ce-447e643fae61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 9248f16f-a85f-41c6-95ef-645691168705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 c21d8266-e93c-4e46-a7c8-bce3dc48a660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 2e88ca3d-205f-4b5d-802a-ddb9956e26fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 20ac2392-101c-4eea-a953-b5ca0aff9d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 b95cb77a-fe23-44cd-ab64-21a1477e2bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 e0b106ca-e059-4915-b085-bd3ec7f1194a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #456 79b7ec2e-11d1-490f-8c9c-f591cd0fb583)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #456 87f92a1e-dce3-483b-b9b3-e815d840d9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 1dc435a1-ca14-480f-be30-6ff26ae0b97a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 f96bfc5d-cd7c-4811-9488-0e28c6e7411a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 aef76cb1-588e-4db9-aa4e-7f9138b37b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 69c39269-0f2e-476b-8b3c-69479dc22a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 5172ce5f-0739-41ab-b8ee-facfcb6ae431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 b2c59f34-0ef2-40f1-896c-e26a2404fca6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #457 6911c31c-6cb3-47d0-af00-63851bf10d38)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #457 f4d136b3-fa17-47bb-b5b8-8ac494324283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 33cb03ae-7d5b-49f2-9044-1aa2bc915544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 72934a09-5ee2-4222-aba6-8d6e31c2a2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 f032b0db-5e1b-4e23-bcc1-758474e02364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 66cfa9d2-eb6f-4446-a1e2-eef370bd45d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 248831a1-bd2c-4526-b7b4-d762181e287e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 a8faddf4-f23a-4d44-ac82-4d2405d1005e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #458 f14a4b2d-a272-4aa9-a479-7770c3a74862)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #458 eb83460a-3139-4d1d-9712-d47197151713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 22df6bdc-b5cc-4648-b685-3cd5e6d2db69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 c163e724-c5d3-4bb9-addf-d1922becfeab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 1c6b35d6-ece9-4a70-aa37-4171113eee3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 12736303-2afb-4842-a86a-2f8d8b5a714d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 98f9ee92-63d6-4d71-9fbc-73a4436af71c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 4dc2d4f6-42ae-4f1e-b94b-84cae07e58ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #459 86637cf1-5c61-4158-9bd3-c3094cbce6a6)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #459 01c630fb-f663-4a3f-9b7d-79f24f4b983c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 98ec30a5-aeea-4b83-a204-a7112d0d6411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 7739c8a3-c804-4762-b67d-0d5953c240c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 0cfe3215-8775-4d01-a68a-68bae57e9e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 afdf1d25-3072-4693-a217-2e7b92712842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 09e2d7fa-8ee1-4b6e-81be-d0531a2e0ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 cee49088-a285-47f7-b94f-f659f32f0066)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #460 7cfef888-ffeb-48bd-b053-ddfd0a3aa222)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #460 b1cca143-d271-4ffd-959d-b5fdf6b5b252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 e05aa378-69b4-4126-8e2d-76dbcc5f5006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 88d3719c-8c9a-48ef-aa76-cbb7cd4fb949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 5bf63978-f478-40de-b8ca-05965b355122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 1757d7b0-73a5-4a40-85ba-b9460571f533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 9f60abd5-fe3a-4845-9269-a06e08360564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 603ee963-6c2d-4de8-a31c-a21ce711bf65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #461 c343f8a5-54d8-4aec-8c3e-0391a58d7c28)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #461 0ff5fdb2-f22f-43f1-8191-4b76b75ccc0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 abffd22e-c436-4d50-be0c-cb6f1ce10415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 40934a5f-9926-462a-909a-194647f38d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 e362e769-10eb-426f-83d7-466f69ce390b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 17cf01bb-2ad2-49dd-921e-a58edd77b7c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 39967ec6-b882-49fe-a9fd-3b69547b6bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 86e25b3a-b3ca-44ab-8a00-5c236214ae64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #462 ac6d87e6-f8a3-49c5-83ba-0e1f86e855ba)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #462 a16b65f0-6dfd-48ca-9c83-27ba9bb6a6a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 1b57d9f2-4560-4b4b-8b82-3bb94902b1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 37513abf-e3cd-4de3-abf3-c90804d95606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 ae5a70ea-562b-4284-9e8b-e727b2e0aa2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 3ec5e156-1dfb-4a5c-8bde-5df0426da9c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 4e6dbbfb-762a-4bfa-82d9-ba22479cdca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 07865248-aadc-4972-9c7b-845351a4a31a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #463 77d528cb-eb7c-4d18-b64f-ebc468f2caad)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #463 e55f48cc-8acc-4d2e-98d2-d5ba311bd2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 56de4862-a735-48d4-bb67-73778e2bcedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 947fa5ba-84d3-4c0b-843a-ed52485e6bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 40159ac1-314e-44e7-b166-b122bd44b698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 5343602d-112c-4e6a-91b3-f2356916c7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 e83bff82-8971-4dbf-9c67-7d50e816560e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 50bc3bf9-d191-4eab-98a3-53b6be7daca8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #464 72a19702-15ef-41c6-a273-5abb3b27aa88)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #464 5460f098-25c3-4168-b586-341dbb17abd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 ac7fb226-6d74-4244-b607-af282b09bb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 6a82a609-2669-4d1c-aaae-6c36cc3a31fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 7a02fa3d-6f6f-4c22-9372-1dcd2bd0fc9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 b804b239-fba3-464c-9934-b2f79a0a79d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 8de12d1f-4354-44e8-a0b5-7d2d1d5ccb02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 3fc3d9bc-663f-4b99-b9e0-d4b6b1a3781d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #465 2aa59c9c-08f4-4f3e-8be9-764e81bec62c)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #465 61873275-42bb-4ffb-9c41-7e98408d9848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 7fcc72fd-82bf-4b96-901a-c5d2d4206721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 44e3e35e-91d1-4b2a-aee7-0e7b7006c364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 a7dbe742-d74b-4f8a-b584-3068523a922c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 03a5c9fe-3ab1-4304-b211-60f6fb57da7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 a2111471-000e-4a93-8615-6d5163a34700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 2ff1a351-3243-44de-9fa7-9a4dc99b3c6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #466 571e9791-756d-4f53-946d-daac42718f62)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #466 29b738d7-9c32-4382-88e8-f2674c2944a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 f909ed80-5736-41b0-bab4-a07635fb6044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 675e0039-97b9-4442-8ad7-dffad3947fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 0163639e-061f-4d0e-bbc6-14b7937b173c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 728c4605-79a5-47f2-947d-d23b701340ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 f5476751-1ed7-457a-a138-f0e3bd960aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 0562ebd4-fb8c-4fb6-b702-2c06ac43320c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #467 a1524e54-acbb-4e3d-b5dc-4ff6828bb128)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #467 f152754f-417e-479a-80b5-d202d3fc04be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 a4b5fbea-27e8-4730-a6c0-dd49562ddce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 b601d637-31c3-477f-a977-63297835c8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 5d467d07-d06c-472f-9d56-e96c20821591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 43cf042b-5dc9-4d33-ac18-0db712dd2f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 667ecf72-ceb7-43fc-936a-5b4210480296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 9d6538f4-42a7-46f3-a5fa-29a0d914f9d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #468 f322b9a5-49fd-40ea-ba8c-6df1d91359c8)");
unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #468 d2b989aa-99f2-48d7-83d0-982626033182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 a5e01856-d8f7-4469-afd5-c1ff281ef01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 e132f118-cd4f-4df5-bbae-99d212eb9d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 14499404-97c8-4aaf-96a2-c7dc792d78f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 84527d86-30cd-4aef-988b-87db34663ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 7712477e-0b0d-4d9c-b9a6-2d49f78ef427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 a6136da2-0d7f-4130-bb72-5f111e4d469c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #469 78b7073f-9d0f-4521-84c7-aca37baaf8a0)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #469 6943b1ad-3309-4e16-990e-dfd1da48506e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 55c1d33d-93bc-4f84-9471-f1b735e92027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 7f789459-cd60-4666-8105-21ed8efff5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 f2777136-7513-4249-85de-35813ea7a9d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 024d076a-db7a-49de-a7ea-4628f63e9e25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 1e14efe6-6bcc-4e6c-a35e-12a28ce3c495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 6aa19524-0496-44a6-9d18-75525af526f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #470 8d567355-ed90-4aaa-b51e-c40c6a5038c4)");
unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #470 1e1eb975-f812-4eba-85cb-83b358ee6135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 d0d0ad42-d75a-414b-85dc-127b429d0698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 7c3fcd50-5f2d-485a-b74e-029105864212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 545fffb4-1861-4724-96bd-945d4c460516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 c7498a3b-7ab5-4e78-816a-4ba068a8ef7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 4e63593a-48f7-4a18-974b-8bd201f5d4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 21c5a5ac-a429-4cea-83cb-e42aef079a07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #471 9e01cf94-a131-4701-a537-26c49ca4edd2)");
unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #471 35db12a7-ec2a-4690-bcfb-690480e0594e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 7fe4682d-61cf-438b-9f11-1b52bc4ba807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 ee11cc9c-92ea-4269-99bf-3b9db2f8e9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 4b1467bf-1f31-40c6-99a9-b7d21cf8e35b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 ceb27218-81f2-4b9c-b1b2-ada60487ffd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 196b2c62-7731-40ef-bd89-7ba7231e2585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 9ae67568-57e4-4b0d-a203-6a06410a253a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #472 51062492-68e9-4bff-b3a6-cb96784b9740)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #472 afbc91cf-6ec4-44a1-8cce-865a0ac92a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 308c916c-2462-425d-b16f-8fd106831899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 5ffbd185-bf67-4cf4-8646-fd1c6aaa74fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 b81dd8d5-473e-4888-9e45-f65c19e71799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 772ee951-ed8f-4e75-a7fd-2aa96b80d29a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 3fb53182-a59d-47bc-8aa1-30000623d1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 0a80ca4d-4ae2-4099-9d4a-9e87579a77d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #473 5bfeb3c4-c6f0-48ee-9a2c-9a27d48405d6)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #473 29cf6875-5712-493e-a204-fec1f6c236c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 0a72e59a-4550-4221-a4b5-dcff9593498c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 c291063e-3691-47f6-a032-1785634d0dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 bf3dab68-9833-4426-8879-b5b90edf123a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 5024dd5f-a5a1-40df-8dd9-aaf7c617e296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 757501b1-01e5-4085-a539-5237279a50e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 4c4273b2-fbea-4e6e-9c49-3611c98bd8a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #474 83651726-b36a-4f52-a0e1-b1b3cb4e16a7)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #474 9d56de10-cb96-4a78-93c3-59114e8cb79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 3a3452d8-d7cc-43b3-bb6d-49571ac73b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 808aea0d-e1fe-4cab-bc59-697baed770a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 a6f0081a-9a13-4d32-9885-2cd923f1ee14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 e7ed1e9b-db9b-4c3c-817a-b0d419abf8c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 f29daf26-a32b-457d-9a26-70ccbb83d22d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 7ee9f239-395e-4598-a32a-2699565891bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #475 3e814413-71e5-4e21-a5fb-32339fcd558d)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #475 8edeea32-0451-46cc-9325-a6032f876280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 92873e5f-57dd-43e6-96dd-cfe22e9bdd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 af9c6172-f20e-4973-829c-cd712b2621dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 cc0ad25d-e8bc-4bda-94c0-7a85d71695ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 a363dea7-be8e-410e-973e-40dc2d74049b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 2d9a8f47-8ed2-4514-b7e6-6ccc9b9b6539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 9d5b201a-4358-473f-bef3-3964489aae67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #476 8b66a9df-fbfb-4bea-9e14-4519574ec7d6)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #476 ab8e595e-f585-44a0-ae90-49784094e6a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 aa25d289-3c27-4c67-a6c6-baeaef1d66c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 f33717c0-04b9-426f-9c6e-48a5f0e24c62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 176c3dcc-47e4-4223-a473-a0e38bb1f952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 2071b415-e5e0-4ef3-858f-bd904905cc4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 0e444825-1edf-49c3-a224-4c829a33feda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 83070886-eb15-42b4-87cc-5e417ca51826)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #477 b69006d6-fdc3-4afe-9f63-99e00b92455f)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #477 e742122a-7a1b-4a04-8f8f-068464160435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 41ae95d4-1a6f-4181-9c8e-9e256a8613a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 cb889455-4980-4356-a905-bfe4c8d1057b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 cf36966c-a3b5-4eff-9e9e-289cd3293253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 cf81e9c8-f3c0-4d49-b359-903d275c3a93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 219b36b4-2f96-4f19-937d-533c9449d19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 44adc4c8-1084-4c6d-b50d-d7933f4a1f6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #478 23ed2bb2-2998-49c3-a6c9-aaf45806a43a)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #478 b1452336-a595-4ce5-8216-03bae1e62d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 58f149fc-04f3-4865-bd2b-dec44db441b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 97830845-9c69-4f25-816b-f6ef5da516b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 aa0b605b-32dc-4b4c-a5c8-f62498cde983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 6368918e-128a-4aff-a52d-f1433c606ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 9e128d22-168c-479a-afb3-aad5254f916c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 317bd4c5-ea11-416e-a07b-58f10e04a9bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #479 aaec3a27-15cc-4b24-adf9-2d303afe4b1f)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #479 95f13a29-234a-4b29-832a-d6ad0a184f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 552dc66e-5e7a-4c4d-827c-c546561d992a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 ac3fc38a-19bc-43e1-ba42-f35537bea9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 24033d3c-b2e6-4f92-9eb8-faff1caf6ffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 12ec3a24-0d66-47ee-8c61-16c16eec2fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 1aed7115-fef8-4c72-b05b-8fa773da4ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 89bc98d1-12b1-4ffe-8649-18f0632a74a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #480 7e009c28-bb9f-4a1c-a536-b4540fef5595)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #480 5c7524d9-0e69-4c83-9e84-7f3bd4a799c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 abb8063f-4802-4eb4-b912-04a8249bb9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 cb55b194-2d78-4ca0-861b-02887cae9ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 177dc7e9-4378-47a8-9786-19c521052d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 e363a315-06cb-48dd-ba14-272c3db3d08f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 1214e0aa-cfca-4123-af00-132a0f8bf6ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 cb636e73-5e9a-40e7-a4b3-d7fca9d75594)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #481 25c2d39e-0592-415a-a3a5-0a363e457401)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #481 ce54a851-6b4e-4533-9b1d-ad0b81dd68ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 2f54d938-1c29-4dbb-9f14-cb954650dcda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 50d9c55c-bcbf-41a7-830d-429dacf81023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 a36bd6bc-62fc-419b-b866-98613570de6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 b4a0e966-84c6-48b1-b363-8b2b3ace90a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 84d9833c-9868-4beb-b5e6-ea87e257c382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 1876cb2c-e996-469c-8055-b5576a825272)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #482 f38f8c79-191f-44ee-82fa-ef5329158821)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #482 b75a8289-7f13-443b-b039-ceb37d956f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 6908be84-2ba9-4a98-b910-6b0169787a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 82e790bd-1394-4711-ad53-91f0be68e555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 1c9dddc8-91f9-46bf-8709-fd91ef00f98c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 375c0216-0114-4c15-aeb0-e34d6d75b67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 845baaff-5e44-4139-b53b-6ed674a180d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 c64dce60-fd87-447f-91a7-b9fa8cb968a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #483 f69fc9df-5678-438b-8f0e-9a65c7feee90)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #483 faa4e0cf-199a-459c-8f65-2af2ffc0c4b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 01c0aa65-b838-41d2-b264-0d3de01a1c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 9faae9b0-0762-4895-b894-bec44cabb59a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 7ae2aac4-e33d-49a7-8023-27b760bc1d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 09a67c3e-bce8-4328-bb21-587c22545a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 d8e97faf-b64f-4ca3-944d-f7a47ad07a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 85190f80-0ff8-4dfe-ac66-c9c854c7f68f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #484 87ac6738-fae2-4d2b-97ca-ae25ccb3c69e)");
unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #484 8474ef16-3096-4ba1-b8c4-be4b973dc6a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 b0029bd4-ef2b-4b22-b304-4c09199fd4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 4fd9bea9-c90a-474b-bb78-c44e08f171c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 a019382e-3927-4fc1-b2b2-6235e2f1df0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 5d7daf7b-d0a8-4954-8dc9-0ffdfac43b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 cce62386-4ed4-4676-bed3-5150b466a135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 f80af758-ec16-45cf-8895-68523ebfd028)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #485 3d941502-a476-4787-bb04-27ed4cbb3bcc)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #485 c587b328-225f-47f1-9197-08918945d7bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 51ce8a5c-a76b-4516-bbbf-f0131872e353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 10852583-d255-4ebe-a08b-319cc5d51bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 91e9baae-0a19-410d-a378-71958ad2b42d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 eb1314d6-b5cc-46ae-91ea-f9b5e10b3538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 2a1a90f3-250d-4a35-9793-9703759a34bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 50846d5e-7c68-4f69-b9c8-59a5e2fafb03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #486 43e19910-6d47-4ac2-9a1f-a05ed12d5c7b)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #486 30e11cfc-446b-4008-95c1-f6d8b0af2fd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 19fb315a-cdff-486f-b189-c00a849e9b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 194492a3-b88e-45ee-adf3-be552ac1536d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 03e54af1-e9f4-4913-8c90-18546b4251b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 7b7963d0-f4f8-4889-870f-f6c28bd2392a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 564fcde3-f405-4e0d-8d47-ad1800761d9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 fbab7e27-221f-43b4-b764-0ee46753ead6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #487 d5dd2097-e21c-495c-9636-272569b3708d)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #487 f79430a1-fb29-4443-ae27-af6822eea68c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 a285640d-f3da-4df0-9ec2-1680fffa4087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 23a01a38-2329-4256-843f-da87e56ea71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 b8d4963c-e0ba-4447-b8af-90cad190feed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 56b39582-04c9-4c4f-85a8-d6d5dbc7eeeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 75e11947-5795-47d7-849f-1dc4de832786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 ecbcca83-faf4-4b79-89a2-7fcb6cdf62b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #488 8e241742-f052-489e-bbfc-78d9796c8a8b)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #488 60695008-6fda-4718-8781-a41612257f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 5c4e6776-9819-4bc1-8ee7-ecfc76364548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 46cddb2e-6b12-4ed8-816e-471884c4cf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 10a55018-35e0-4b5b-b890-5bb97e8b9dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 3d1abd79-a2ad-4555-9156-1378dc3f41ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 6bebe68d-a222-42d8-87b8-eecabdb724fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 8ccf9138-ac25-499c-a807-8e84cdcb5486)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #489 44f10a7f-26eb-4ea6-a7dc-15aee3fb9dd5)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #489 c0b5d1cf-83dd-407c-b3b9-5c36a214be5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 84a96faf-8986-4fa3-a9fd-53ad205c2d30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 2330d6db-b696-4840-8bff-ea7651d2ff4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 e9479149-9097-428d-a341-4b3735c7482b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 21b0d2e7-c705-438a-88f2-19f1d56c2dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 bf0131d2-7c19-42b5-b634-bc2e36ea5497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 c00a2c4e-4593-4b7f-befa-ea0eae682007)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #490 dfc46ab8-30a7-495e-85b8-c82eeb72c249)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #490 c4e879ee-7d8a-4f92-929e-f3c7df6c0283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 6bf2ebd4-5949-461d-b7bf-1db5eca12525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 a05a41ca-e55d-4462-8b56-35b30a1ceeca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 cc06bcf0-ba80-4f85-a4f2-b36317b980af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 7e1588bd-6e08-46c1-af7b-547954761e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 be70b63e-7f34-40db-b067-a4900ac78365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 9eb69725-8b1b-4440-8fac-5acf17417e1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #491 7b2e77d9-a255-4945-aaaa-210027c7ec29)");
unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #491 af257d47-a48b-489b-a13c-e47cd0371d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 143ed525-eba9-414b-ac6f-05430cba189b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 629b4d52-700d-440a-bb11-dee8352c35d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 aa18ff3b-409e-4577-b303-2112d7c540b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 965e615d-fe88-40b4-b658-7aa4e7a0ed3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 80d45d28-096f-48ee-bd7d-d7c88cbeb693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 888d2b71-9aea-4d21-bd2f-62a298746891)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #492 c20b7444-93a4-4e9f-b8a2-9fbeecc8a07b)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #492 25d83193-c0f0-4bf9-8d2d-7ac76c96ba19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 769ce8b6-6698-446a-a9bd-4c88bccb91e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 d2cf30cd-40b5-43ee-8bc3-1e150b777028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 0f81476b-91e9-4331-97d0-578401b4c659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 730316c0-a5e5-4475-a595-b847dfe535b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 5967210d-f7cf-4b0f-87fb-e747bbd65171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 c86aa2b9-2620-480f-94a8-ed85341e1eeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #493 c2b70241-621c-417b-a8b5-41d50d564ae8)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #493 dc0e9441-3272-43d0-b0d8-ef23868746c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 7b49df80-5324-456e-965b-bcbec31a59f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 33cc193e-43fe-4a65-865c-bd054564b210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 8767518a-83d9-48a9-873f-b158220949e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 7c8b97bd-9918-4306-a4f4-dc7aeeda49d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 1c4d7f8f-31f2-421e-9341-f7b0aec1f8c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 8e105af1-be6d-4cd0-9e09-e6687f6678fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #494 4a520a76-b4bb-4725-b91b-ebb696efce84)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #494 6ab7c35d-3e6c-4ee1-9395-6bdc78018016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 ff127e5b-1e2f-462b-95c2-7dbd889b0044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 7df61785-38b5-4e3d-a424-f5340d895531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 1b9f90cd-caea-4855-929b-d0df1382128c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 7400e390-c22d-4a0c-8690-1bffdec02a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 60ca67f0-a30c-41b4-9b1c-e67d10ae9f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 a930fac2-bf7e-4224-b1e5-65306be34ace)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #495 52feed2e-7199-44b1-8582-20f855eb0842)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #495 d980af9b-ec33-4537-96af-cae4c0930435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 b2253223-15de-4c85-94ca-ed367aade578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 4da7be93-fe9b-4e6e-89e4-907fcbe78e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 30dd2d92-ce13-43ae-becd-a1ec97338ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 1ff44215-105d-4f50-9d6c-25f48d8ba7d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 ac8dcf53-7145-49eb-b541-e4494f2d2056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 8c4595b8-be82-4c08-b65a-f3dd1a707dbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #496 6d209c0b-8441-4b53-93b9-49a179b8eec7)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #496 aa6dd10f-7360-48b9-aa95-a0a11baaba42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 f7d28921-d90c-49fe-b32a-5d8c20ae68c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 1486e30e-25c8-4783-8538-4a9b8d0e7c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 06e362a4-3a45-43da-a39d-d3530b2dbf12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 8facc0e8-a1bc-46d6-bdc7-a581f7f1861c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 2e5358f9-969b-4eac-8cdd-6dfa2c860a10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 43c9d907-64be-4fc3-ac37-9aee9e4f1eb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #497 09d1bbab-c7d4-4e04-8627-0238ad2324ef)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #497 1b81f017-870e-4699-8867-7497f582da89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 11e71e2c-9ea4-468d-bab1-2943b0933882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 cacbe52d-a14f-43a9-bfd9-4a8bc26da248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 6aaaec1f-8aec-4df8-87c5-92d19f4d4c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 e12da8a0-7e01-47a4-af21-a2894c38f92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 b0b811f6-0631-4f24-b107-283c4063f5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 a981f74c-9d2e-4452-88e6-3f0a04d28ea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #498 b116b07d-8bf7-47f8-a771-625dc2c9ecef)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #498 9164b4cf-dbe6-4428-aa05-8f1ab9307ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 a1106de9-50df-4a21-8891-9d65ae7f80ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 41551be7-af52-4f7a-97fb-67aec4841292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 8ff70ba2-24a0-4f72-99f6-62154712cbf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 5c184cbb-a903-4e82-9f8a-d9fe6f1b3d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 264aeeb7-0f50-482c-a080-6dcfe6c36449)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 ebd5c951-7b57-4a69-9d91-e64c35c9b41f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #499 43200b2a-ae9b-4736-acd4-3cc7f00f7c10)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #499 5b90b030-1252-43c8-a0e5-9b92b93d1aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 9e031812-429b-4922-9dd7-b924917e5605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 43a7b8ac-3f6d-4ecf-982c-3ea2a83eb938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 39560fef-dc44-4043-ad8b-19410bd56e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 ed62f814-6b88-4b63-9813-c02be9717b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 7dbc6e1e-cc6f-43a6-a354-3207ec7e63e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 97a58f59-d46a-4c26-82e1-d30cb5550e69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #500 e3d549cc-3493-4c55-84a0-90eec30960bb)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #500 83b180ca-3041-4d36-a8e7-5f3c2405bc92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 3077eebb-ba65-4b48-b0ed-dbd7dc776e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 d4f31a01-083c-409d-aa47-ae089616b7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 544e40a8-536e-4908-9373-9474051b5ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 2929a390-a416-4729-98ff-a4ee95d41f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 7be1efe2-4fda-4430-9799-ce0f8044c340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 2441e672-0795-48d4-9e42-0fd187d9208e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #501 de3d3b08-4885-47cd-ad38-992b60815e3d)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #501 7d9ba96f-8ff6-4531-83a1-5eff61d6ab49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 15c450b2-fd64-40e8-9e48-45304a479327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 880a4c20-26da-4cd3-a0f4-ba26c6bebfe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 91ff1388-43d2-43b2-be6d-c73c18f6e16c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 39d9069d-8086-4f0a-a026-bf473d979e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 85d69f34-f4cd-4a96-af11-05875efb141e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 4c3c432b-3fae-4a4d-ab9f-62a902b28b5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #502 b98a5b0f-a548-4c32-a262-f4f7958ddc4f)");
unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #502 c95b1ea8-d66b-4cbc-a78e-a5952c11cf10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 6a7b6ac8-51b2-490e-a355-e63c1270c74c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 08c37ee8-5b7f-4bb3-a722-a17b711d4d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 b56d7c9e-ffee-48e2-979b-6014d6b092d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 49b18ccd-de29-4d0d-848c-d78b9dbaf1ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 3c3cedaa-2616-420c-aaf0-50bcf21e5cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 5444c7ea-faf7-480d-a43f-e9549d2e6f50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #503 271ee20b-1e59-4951-9712-6d2e64ebc91e)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #503 6f5f0be2-1f3e-49cf-a641-579e8953a981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 62307d2d-828b-4f74-89f8-16957fa987db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 ac136e50-d2c9-43b4-9a59-a5599d315103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 af393f5d-9e18-4b4a-98f8-335bf7c6836f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 64a7d7ac-151e-4db7-b622-f126887dbc20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 c78c68eb-2c9d-490d-8795-1aa2bedbc310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 b61382a0-402e-458f-8e6b-3bc69cb843f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #504 8fb2c2cc-1522-4b31-86be-81144849463d)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #504 3774ce51-c39f-475d-b65a-58fbf9efcae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 1c15dc67-9333-43af-a7e0-127007c550aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 533fe6d1-fa39-4aea-b3b7-5c974f8d8994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 d96e6af3-8367-409e-a035-00b825e73576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 8a31716e-97ec-4f84-9900-814b4f4b7c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 01fd1237-4881-4775-b823-9ebdd44b28ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 c80e06eb-3414-4e99-a0bf-7b075e98d1c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #505 f771d345-0ea4-44fe-b354-f9eef9c0df36)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #505 755fd448-003c-498f-b7cd-b4381e216ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 798aac03-585b-49cc-ba93-a1e5dcf89fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 ebc7be25-9723-492c-b98a-f9af8a8fec98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 2c63980d-ddd1-40bb-a8e6-32e9c378f829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 17bf425c-b29e-451c-ae4f-3f3fc824b40c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 9fc0260d-5686-4cfa-859c-72a206026c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 62aec8c1-25a1-4405-b607-8b98728fc4bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #506 72db5933-d06c-4c26-bb5c-fc91d62e8ea1)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #506 a68b1458-8f26-4283-9a86-cc8d8cb61937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 5c906953-52c4-40fd-a4ab-2cc3a4a96140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 8c9c80a5-708e-4349-89a6-cefe30e53dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 bd5757e2-29b1-46a3-85c3-5b9ba01fc676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 f66738a4-3a20-498b-a717-3ee111f963aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 7edc3dd9-b09a-4d5b-bab0-bd173a785688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 62a1a887-47dd-4679-ae9a-cef9a8f52ceb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #507 de2580c1-d630-45c6-a011-1d83e5d39388)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #507 428c512c-f47a-4dd8-ba53-c07f6322e61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 97098ed8-479b-4217-8bf6-0fa896cefd69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 9c5d5a79-4875-4dfc-807e-ee0e91b22406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 27d9f2ad-d0e9-43d4-8459-e385b14a30ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 6a784843-3125-47d5-b01f-9e644d2d163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 2484c198-472a-42ed-9a7d-63bce59e3a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 41223ec4-65cb-438a-8db4-d9ef56be4ef4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #508 936cecfe-a26c-4868-97af-f7fc250de1e0)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #508 3102faeb-e5ad-4edb-971d-52e14059da01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 53784fca-ab5e-44ba-9f17-893a54ab6fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 3b7a30a2-30d0-44c0-946a-7263bda681e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 76e48dad-cc20-4610-bb8c-8942a815d29a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 0ef382b6-f89f-4d92-b8f2-ce07b0b8b5b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 dc56c642-ca46-4be9-8f3a-8e3b929ffa38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 f227cd03-7f32-46af-b856-734365f038d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #509 5d60cd4d-62ae-43df-88de-5bf0611c0f8d)");
unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #509 a9f9978e-661f-41b8-9f81-57077dcd8ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 6743f47f-777b-4bee-b349-ab370e624980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 2f092644-4ab3-4e9d-9481-076282583954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 ef3c5760-2c4e-4cf3-86bc-4c6518d6150d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 689d75ed-a368-4903-8c0f-c7cc7ce32b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 2ff51d59-27bc-49e1-bd8f-8ecdf3269a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 86495967-5cc8-40f7-af3e-ff60ca5a15a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #510 58043db5-fd21-4410-929d-6c268180735f)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #510 420b00b9-518f-4f1d-9245-26756d7126f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 7988c4fd-232d-4d41-9541-85117c5944cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 e6564ff0-c547-4cea-bfa6-ba40e361b332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 49ebef32-4874-42a4-b4c7-845298011d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 cce7813a-c666-4ec8-9ac6-094c67c68610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 9fc1094f-fa52-45ea-9879-c95e53d6a5b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 9b4441dc-781b-4dda-90f3-78c7b0d89732)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #511 790e0df7-0677-4580-9796-add9efd5a946)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #511 10efb560-6231-480b-bc7c-7c950aeeb8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 ff2659a9-b9a5-4382-8866-47e7109984f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 2ddc3a42-38ca-4297-90e9-bd09a9fba4e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 563ed1b2-f837-4f9a-8a50-636f245747d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 aa5db40f-b08d-4e84-9bcb-6aa7d2a79d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 20f4ae8c-a106-4149-b314-7ba7a26acb62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 5445417a-77d7-4540-9e89-b6ae9951c2c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #512 89fa59a2-4dd8-4338-a5fa-1bd20525dc44)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #512 375fab51-a61d-4d66-902c-72b4ae3ca5b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 6d4113ae-d2b6-4145-ab6a-8b2876093e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 e4e03774-99b8-4c43-b251-e938718d2309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 f2d81710-a793-4741-b426-6a60c12da9cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 b923e986-ff10-4ab4-952f-23d2da33e392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 918bc431-f8e8-49f7-9b0b-ea33e91fbab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 5b5692f9-d704-4333-952c-91701d7af94e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #513 bedd0017-7fe6-466b-8e09-d69d144f18b7)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #513 24e67668-9916-4207-87f0-f9f3926ac250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 5d0cc261-dfe1-48e7-a886-85b47146b219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 6d9bcba9-b0c4-489a-98b3-5e3390c6fff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 a5bb7aaa-b4e8-4551-9127-0c841617fac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 1838bb6f-efe1-4364-8a16-c2c4e13896f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 10676e5c-0c3a-484f-9266-6652e4d1227e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 c1721a22-fe42-40c5-b05b-6cd560c4af23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #514 a08015a0-d616-4376-83c4-61361702aa74)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #514 09bcd51a-964d-41bd-a712-d79f2688169d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 5d3483dc-533f-4d2e-bbac-666a9116a56e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 2d31b429-0dd7-4101-8a7a-d4286a56dbc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 5217e3fd-eb52-4ab2-b584-2af7487b074a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 7b28db46-5c37-4c17-9135-f29d84a5d7d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 b14ecb6a-1cbf-45b5-9c9f-b78eb8bd6d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 2630c8f7-edd8-4a9c-8509-a19a5f7203f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #515 f1f655d1-db49-40a5-bb3a-8d1c910581b1)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #515 1b9c1747-4987-4ef6-b402-cbbf78cf4c4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 d6d45098-7d9e-4b49-bf07-fa9db776f25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 47cbe4e3-b8d8-4562-a740-41c68ca96f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 923350ef-70f5-4a70-8820-33ae363b3be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 c07c9a9f-a0ca-4e6b-9d38-d49290181495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 b50e1f3c-99cd-41d1-850f-3d8b7eabbca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 614d4354-5668-4899-b86c-870efc25eb4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #516 11150f07-f711-456a-b0e0-3d76f83dc8f3)");
unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #516 e8c44caa-aaf5-40f0-aa75-66cadc399940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 5c9175d5-7b97-47fc-903c-aa9221755bcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 4b0ea34c-269c-4c5c-8912-271969fbd082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 118c837c-fbb0-4f51-a582-f4f0f97fc767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 565ae612-df7b-47dc-adc9-738c57a0860a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 25bbf3ce-3a94-4bfa-be6a-f1ebb42fd5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 b4b5e789-2eb8-4750-9b7c-34386b654866)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #517 299af911-6974-4ede-86ee-909388b07966)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #517 ba7b7f9a-92b2-4383-99f3-a5a7f09fe276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 4ed5066d-8304-480a-82e1-70f74be4a837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 bd12e4b8-9fc1-4688-9686-16b5b04dca6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 8c76d669-4fdb-4504-b9c5-3dd15e8d31ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 dfc12646-4ee7-400d-82dd-4cb6f666c9cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 ca488a7f-63c3-4ba3-a261-cb4312a74b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 45a4b61c-5c05-4e5e-a196-95a61a465712)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #518 e1994c90-abb4-4a51-9196-5895fa336438)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #518 a09d4a27-8798-4b3d-b57a-28e3b97a3404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 90f60aab-148b-4b95-ba0f-0554332bba32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 3968798c-3f13-4f49-9526-1c62301dc950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 7ded0114-1749-4ee0-b56f-04cae0307d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 8f23a5e5-19c8-4117-aa69-97556798f3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 9646b689-fa00-4600-8399-36a25ced40c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 409fafd3-f604-4290-a7e4-2caa0738e8ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #519 72fdd9ce-a054-4bfd-8ed1-408d7f3ada6e)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #519 dc03bd19-d230-4117-b065-b496f6e6b4c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 6f43ab07-8216-4c52-a8b2-452d933bd96d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 c37d11af-cf4b-48ea-9a58-5cdb5c5b7e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 e935b67a-78b0-42cd-9f3e-eb4ba1f3e12f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 92be2381-02f4-4fc8-a521-3693b5430d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 69013e9e-cc68-4e5c-bbb4-50a49fcd23f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 a03dcfa9-9658-4e2f-b461-af3e17041afc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #520 6021b878-56ae-4c01-9f09-0462c3c16fab)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #520 08e4b098-16e0-4898-97db-f9ed397cb12c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 42c7cf6b-569b-4ec3-92cf-df1a83a1d7ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 b10eebc5-4479-46eb-930b-a9bac43cf43b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 50303a6e-6399-4c6b-ba35-9d0b329df935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 abe2886d-b24d-4804-be46-f03ffc019f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 719f71c6-5977-4ec4-8e94-0acbe65d0cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 7e68e8e0-6931-4906-80dd-959759cf53e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #521 3afafa96-522d-4a12-b75b-bcfc10e736ec)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #521 b6ebf53b-9172-4302-8286-08307239b1eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 d93c019d-4bbf-48eb-8b59-ee3116a0c02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 e375c126-4fd0-4c7a-8d53-47124c20c1ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 b7a54243-ba1d-4222-a0b3-967035c0e865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 5ce9c2cf-4055-4400-a0d7-95666950e2af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 8f1f9984-2735-446f-858c-3d4ee53ceff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 b61e779f-fe2b-4c17-945e-b13a530bf07c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #522 c3a945e1-3a1d-4599-b64d-0c9f5a4c3079)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #522 db1b7e47-68c6-4dfa-a204-a80526ced3b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 acaff2b2-31a6-42ea-975e-e0290603507f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 19c96efa-25f7-4293-a2ad-f19e92fd3318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 487e7a81-b297-4cec-b992-0946078a9075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 2042e0d4-f3a5-4ace-bd23-dacc9dcf1385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 5a259c69-0265-4ad6-8cd0-46e56695de69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 98fa9c11-e68d-4acc-980b-e1851890870e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #523 86449c37-db7b-41da-85c2-5b88a7788dff)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #523 8bb3a99a-5c0d-484f-b971-bdc36d1ffa40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 c604bb2b-d91b-42f4-83f4-eb152bf5026a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 325d2d7f-380c-41b4-9694-9d0b94a00e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 df7ded19-ded4-4476-b147-0e6ace023ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 30928ed2-aaed-4d2a-83c7-1756243c4292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 7b43c621-dacf-4781-ad16-1113dd1f6f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 cdea5511-cc07-4968-8485-9b8ab921379a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #524 779741b9-1f57-4f38-ac90-8631cab35836)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #524 c7c1dcc0-cd13-4762-b2f0-1826fb2cfe1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 67e68a1f-5282-4aed-bcec-0123e1139a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 9084d3aa-8cac-4223-94ae-87a0eb2bb442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 e756c0e5-4214-48cd-aa10-8b58d085376a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 0f50f17b-8b97-4d49-83f7-7daed86154ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 8bce471e-03da-43ca-837e-d4d654a6df40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 811c102f-73b3-43e0-bb6c-d80b2992777e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #525 afbe3be4-5013-4947-9d49-725cf24fba9e)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #525 a0950ba9-6874-4017-9449-f748e7638703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 a9a88ebd-fd12-469e-86d5-c207909612ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 6bb40171-995f-4f70-826e-9e8452fd39d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 b1402ed8-a4fb-41d9-94bf-e74dc59ae798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 2f7f6946-607d-4d06-943a-4628c4eedbbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 4a36a082-60e2-4170-9976-69d63c9cbc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 5b66c381-b0f6-4bfa-bebe-3d73229a8690)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #526 5b90abe9-d4e2-4109-93dc-5348a32866fb)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #526 2bd07ed7-50f5-4516-8124-2440108eefe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 cf5c8357-8041-4645-98a1-96922d7c567d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 8f0dfee1-c6a0-492a-a73f-b424bea90094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 ce1ec201-d376-4de0-8b3f-3c2f63de3443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 ffd1c189-f96d-43fb-bf72-b12d018278c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 14e5a117-4f2f-409f-82da-b37bcdbcb12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 7d70ee46-354b-4dca-8806-44441f4ceb94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #527 a1a554b2-b7d8-4eda-ab31-3d8e58ec55f6)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #527 8a9be210-c69c-490c-bfa7-9f1d6aeb0685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 1c0727ee-e97d-4861-9913-c102c21530ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 ccb13e45-82ff-4a93-a570-31aee969f66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 2d14ee10-448b-489e-9755-74b8d071d38a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 0741154a-872f-4d18-967e-677554ad838b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 d5bbb04f-0f12-445b-a443-ea381e09bd4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 0e31aafe-a928-4c12-a54f-dc15ba045957)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #528 14853a20-5b05-44d7-b4d5-c8d85876fb82)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #528 1b9c2e0a-daaa-484e-91c9-a6a2150118f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 95ef7ae0-1061-4bf1-be72-50deba967164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 3897cd84-92a0-4aab-abd8-de1f570787bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 3502834b-ea7f-47bb-894a-453ac5eafe27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 d3c7fee1-c270-44ab-b1a5-d744c66966be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 b785f2fb-033a-4e61-83e0-00c27ab7a5a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 ef9fe44d-8b6b-46c2-b5a0-c562b2126496)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #529 80134d4e-2f8b-4126-ac8c-803611286f01)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #529 0a8e799d-9496-461a-b352-43c51b33b25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 351a95cd-d295-4cc0-856b-c400cea385e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 b903f000-e7bb-4fa9-a73e-ea06002882b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 995774da-f1a3-4edb-92b4-69d6101e1707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 78734636-111f-42fc-b086-bfcb99b3e052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 def3d3d7-aeb1-4672-b2e3-717e054857ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 7faff171-8cf3-42bc-bda7-e9885d0661b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #530 8071cf22-8fb5-4593-add0-086c7f8c002a)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #530 17995f42-eaff-4bbd-9185-29b3205ecbf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 94182de0-7834-485f-86f9-d7cb94720d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 a4d7062d-2a54-42ca-84cb-9f6be005fe6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 ef5138a8-1f1b-4e60-8e85-c4b5a611849f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 1ccfe9fe-0d0c-42ca-a5ab-e15278d26316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 6f6bb1ad-c07d-445d-a837-e3304964b02c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 9d63df14-a6da-43e5-9d60-c6b6839222c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #531 5d40010c-8868-45f4-b703-b8e457d49541)");
unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #531 cc9ac5d9-facc-4fa6-bd5c-bc8d859de84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 01929dbb-c45d-4c01-8a25-93705bd821ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 1a22b911-77cf-43c4-949e-c2a34e78e2b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 800dc5ca-f36c-41c6-889e-2cac8af0368e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 43dfb692-f6b5-42d4-bad2-84538c517053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 0cdbf5d5-2b34-4018-b1a9-eb866cd0cedf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 6149562b-7f31-4e2e-b287-e3361eec294d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #532 1cba1c07-859d-470c-a281-6d6e02fca743)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #532 3ebde611-32e1-49ae-8eeb-09e8d8975848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 cda73eaa-cafe-468c-87d8-fe9b98d6318e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 dc34a13c-88ea-4ff0-8332-556b3324212c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 fff5e9fa-a484-4e8c-9af4-12367c85f6a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 a7e48a40-c995-4350-a612-66e708535f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 b01ad2ac-6345-4206-90dc-c07b45793a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 767c5d61-4185-4204-90a6-7b26af99b6db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #533 f001becd-9aec-43c1-a781-a412e600df0b)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #533 e4b40bf3-2c56-42c3-b742-6e4364d6df31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 b604ce84-8a9d-4b89-b83a-854e3b104bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 659ae7c6-1f26-4e44-888d-8ef4959a3c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 a1b45bbc-4fbd-4b0b-a09c-d545490124e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 fed0b557-7764-4f8b-ac64-e26a10302fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 8408ba0b-798f-4b72-91ed-a9ab04433c0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 1bf13d8a-406f-4bd1-913d-834f8a8f74d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #534 7cef7387-9889-484d-abea-6c5b74a338a0)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #534 4af90c70-a559-4aab-b988-d955a404cf62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 e235c0b6-c0f9-482c-8d0a-e806fc55ed57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 979c50ca-05a4-4eb7-8722-8c4848ac894b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 9428d92e-adcd-442a-b94a-8295b5869334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 7dfca598-f043-4453-9f93-6f898278dfe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 db8642f1-d3bf-4f32-92e4-eebffbb38624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 16f87716-4bad-4902-8277-1b9bd885787d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #535 3596b541-0249-43aa-a363-b3f01dcab2ee)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #535 e38dc06b-9769-46cb-8f45-3fc39f070aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 22461be5-d2b3-4b1b-9003-b6b2ffb71433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 ee62dd89-5895-4d83-a858-d9abe5b1db04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 0371accc-fef3-455f-8a74-66ff9fad4098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 511290d3-395b-4aad-848b-08a6d76dfb10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 b3dd4835-77a1-4709-a827-16a1be0e10a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 5fd4b8a7-4658-4b72-bec3-4fba3b0b20bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #536 f64a1685-e1c9-4466-935f-76b557fbccb0)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #536 0d09e4b0-f080-479d-8e19-9a0870bc95aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 34e6c178-0378-4676-818a-2fc391da0d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 d7b92bc6-d2e1-4c3f-881b-3870e34fa683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 b20ac2c2-1aed-488e-8044-54681b78003d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 7c042010-4b41-4f3b-9151-91db5d3b6be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 c69b9836-b10f-4239-998b-04562c3ce621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 8ef123b3-bbd4-42dd-ba30-be29303209cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #537 6b21df49-ebc1-48d5-a08e-05aa4af0b9f3)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #537 16aa29e4-be2d-4872-85f1-6b2f354df100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 8f026ef4-e916-4b32-a709-408256fac450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 9cdb845f-2226-4be1-abbc-39c064003cc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 7d34b589-c8d6-466a-84ee-574930f40b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 30954493-9b56-4a28-a7e2-b3a5aa4f3d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 166311a7-a1a7-4782-a3dc-5d2bf31fb8c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 023862a7-3a4c-4f08-942a-cff6f9d7a187)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #538 f7a7b9cc-2bf4-49a6-bbbe-fa690b236502)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #538 6b020f6f-6e7f-4e40-a642-7e429a052136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 eae00c14-9a35-4e0e-9d91-22d93b937776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 b9fed477-d7ad-403b-921e-5c8562e5710f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 9cc5d00b-7072-4019-9620-8dbe11b21c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 f9f010b5-9dd7-4495-84c8-3bcce14ac5ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 d79f8e94-7f37-4937-8753-0a248f76aefa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 c3de3abf-e3b8-4cb1-98ee-4fffb06f7415)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #539 c7c480f5-068a-4212-8024-24b36e38dd12)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #539 3104309c-d246-4d63-8084-1e3da628eafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 54211244-e5f7-4b43-8474-0eab8503da8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 2f0e1533-5f35-40d5-a4ee-d3f369278f11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 4bf6feb2-e5b8-46a4-b1af-f93b9d84ee84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 586747a6-fa65-46b2-a188-9ecd62438324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 d5ba9a53-2dab-4ba6-af77-bef08f6f2d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 35231011-19a0-409b-bbd7-911aa20a3cdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #540 0085eda9-2a5b-41f4-8693-f298e2bed20b)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #540 851eeb30-9b1f-4cff-912d-2abb0ddea2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 b28a3d57-f740-499e-ba1b-c7efe1a519ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 d9e30d54-626d-44b6-ad19-580fb37bcca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 5e3277f8-7173-4ebf-83d8-458712729e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 6f2c2b58-3abf-4d7d-860d-a0fd96f82a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 8e563c93-8db7-480b-95fa-e0a08af81b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 7246f969-df92-4f6f-85bf-3d99f4031406)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #541 27370075-52f1-49cc-845c-fe2443cfb812)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #541 b07dff72-4994-46c2-bc1b-a2c8ff878f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 a0658571-c79a-4157-a27e-ff464c94c940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 8cc20162-2ea1-4c97-903c-0b8fcae353dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 0cbef3eb-7f91-45f8-989f-80d7f7d650dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 0d460f44-c209-46d6-9e89-b407c8cd7392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 e4966161-393a-4fb0-b97e-bfe6b61dc2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 d4a33e36-278f-44fc-8d4e-6bc884641308)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #542 25035f8c-38ff-4a78-a85e-ebaeb286b427)");
unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #542 8665e120-80f0-4509-8bcf-30103b5e0f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 cc2a79e4-20af-4183-af62-e08f960d70d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 401605d9-fba8-4dee-a1a4-fc71aea8d0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 f290bcc9-8650-40fa-8f66-6c3a441910ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 b8d314b3-deaa-405a-b5f8-a23ee07df64f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 740b1a77-5fea-4c39-bc69-84a48f643407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 675db670-195d-48a7-9b4d-a5381e189712)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #543 95b5673c-2b6b-44fc-ab8c-58a219a3b30b)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #543 ade1dc75-aed9-48cc-bfa9-335eb698da8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 c2c3e73a-6dbd-4e70-b303-1abfebc3b4f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 39b5e710-f4e5-4eea-ab5a-c2562df28975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 7cf4824d-51fe-4489-b9e4-a33445eda2cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 b02ed298-4ad1-4195-a4fb-4544b6f01755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 a2b04e56-8cdc-44b1-9e73-f345b6151d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 b0becf49-f189-452d-ad3c-a0956aaa1de9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #544 ad0e060b-b51b-4365-9016-6955536a90a6)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #544 54c06e35-b4d8-4f4b-afab-5475071c21d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 6523cdce-ddfc-403f-9448-2d5960da3677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 f7984097-6122-4bc3-af19-5e1ec06ca410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 76c7b8b4-c7e7-42d3-91e2-a248c9ef9909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 d74afa85-441d-49a1-ad27-0d97a7bf740c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 16270d97-d292-42db-a311-4f5ce7c6b773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 baad3f5b-a919-4d3d-b99d-2aa24d0a8198)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #545 4239cd69-8709-4775-b130-4d770ba12bb3)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #545 217c4228-b294-43f8-a556-fc87a869479c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 c51e1c7a-5554-4688-aa43-a8113b81405d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 0d463ce6-9b2a-46cd-924b-7db333f36413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 5d917e2f-ee0f-418c-9cd2-20a412c80fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 af7cc73a-b63a-4448-b326-bda431f8f0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 aa0a1492-3e86-402b-9685-1891fdd13e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 6cdf8c9f-1242-4b97-9c91-4db69cbdbc8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #546 1afd7ea8-5991-405d-8ed6-7fd67767702d)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #546 d2e9387c-ee53-49a9-b34f-45ccd20f9ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 de2dd66e-995b-4f96-9f80-85040f4840cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 4d16ff0e-765a-4a00-a2ac-dd9420c619de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 a171f321-57cd-4910-8242-85775b6d1aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 d71aa055-e151-415a-bc41-e95544084e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 2f9d2c02-ab39-4226-bbdf-d59ae160a713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 1eae45e8-1ae0-451c-83fa-abe362ee7612)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #547 02f2094a-8449-4627-8dac-1bb76a83a933)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #547 22b574be-6809-4ad0-bbad-c8ce5b603a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 54cc51ba-a48a-4989-b6de-a8cd4575802f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 adea6de1-4062-437d-8b17-b3002cf610e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 af397509-caa5-43fe-bf69-3e886118a8be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 43dd43a2-5cc6-4f7b-b195-703b7710cb92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 0e548cf7-36f9-4b02-b825-198651bd4151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 e86c86e3-e486-4437-8372-2b62d009822a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #548 06096484-c7ec-4ef2-a31f-1bd71354d2ea)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #548 a9c42ec8-25a0-4e11-a731-c4c221f5bd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 4838196a-13db-40b8-b23c-a4c79b8b4d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 1fd4a983-150d-4bdf-b534-64ce50fcd770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 486ec9ec-0d5d-4bc0-bbb5-ce93b74812c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 d183a39c-cc65-4192-9278-d205ad179227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 0713b4fc-552a-4209-baeb-e8c0931af960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 78c62121-7144-4de4-9f22-e9c41830fdaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #549 622e5bc1-d815-4781-90b1-01bfcd608596)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #549 528e016f-4260-4c8b-b59a-90dacd765b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 3e5fbafc-2527-44ef-b24f-5db8df1bdfb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 41d3c9a5-5b6e-4c92-a96d-abacb348b537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 c40dffa1-34a2-427f-874c-9a158928cef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 aba38bb4-0107-4765-a9c3-9364348ff8bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 ce5bbca0-cc7c-4506-b8af-0e28a779d529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 0ba357de-c31c-4cd3-b59e-e6e0fb2dfae5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #550 63965b24-a7a1-4cc5-8823-862be3928a18)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #550 ccc7919e-60b8-417b-bb68-cf298249b419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 00b4189c-f749-4444-848e-3ddbb2c4e439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 4a917b7b-7eae-4aa1-a4e3-1dca4aecf0bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 80e18144-32c2-4037-a6b6-57e809f07adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 2008484d-1f00-4ead-8d1e-05ada11b5fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 8b0ba89f-aeeb-4156-830e-440eae8de1af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 1cf89112-6325-4c2b-bf52-f74534ee4e89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #551 9486dcf5-487d-48c5-aaef-458954d3f452)");
unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #551 136ef393-9da9-43b7-baf2-d8c5719aafd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 0cca74ff-a240-46f0-8e70-45113a2dc354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 47d10706-88c7-49c9-94bc-236730da0ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 e58204d8-f8d2-4f31-9187-2d20769d852f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 7d0263d1-8aeb-48a7-879b-566ef185527b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 0d40c411-0577-4fb3-ba7b-ffcb890e559b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 1248d0df-a984-4882-b5bb-89851ce5e38b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #552 4869b3e1-71b9-4a98-85eb-3a1ed5db53eb)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #552 fe82be77-7c66-4e90-9da6-ae7e78aa38a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 fad659df-3567-40cb-bf7d-40ad8b16af6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 0bcd3bc5-4e9c-4b90-9dc7-c69754e3737f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 798e75bb-f48f-4d09-8ca7-6f4b70bc4138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 3b3a219c-2b6d-42e3-8432-475e44cf8807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 5ff3603d-78b2-446d-afff-9fe7cef2b907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 8e037362-5439-4eb7-aa6a-d39745f37ef7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #553 fe6692c5-acf3-43fa-8176-51fcd1e9d49d)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #553 a72c6773-0d77-4a68-b54c-d7f7e703dcba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 ea86162f-2569-4e77-9826-541b68191bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 daae24e4-a84e-46c5-908a-b2049c38a94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 e75a2a90-d2c5-4a4c-8446-438708daaeb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 6a1e87e5-0384-4fd0-9223-9b07d3be6a05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 7cb86808-a921-49e8-add7-1e51e3485234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 c757ecb8-fd19-4018-ad5b-cfa9ba35f2fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #554 c27f6e9a-f04f-40fb-80fd-af39b477a8dd)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #554 98780830-cb52-4e85-a38a-1cee352a1d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 afe060eb-573e-4367-ae69-e4118fffbf81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 874aed30-35d5-4db4-9947-c42317e43eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 50e5423a-aec4-4fda-9247-fb974d7065ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 bc33b15e-c3ff-4791-97b6-734141ea9ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 16793fe4-3af9-4bd3-88be-178bb24e425b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 b1b5d490-d5e3-488f-857f-6363230ad690)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #555 91832151-11d1-4f43-8d03-7c311476c01d)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #555 5d8dc0f8-4bb1-40a2-a860-759396f21bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 28041d38-1e97-4e48-b209-93796d5858ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 5af4adbc-d4a9-406b-aba5-5a6700a3cc4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 ced9f524-2e25-438c-bb3d-126c87a3bd29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 45200d0d-2cd1-4142-8ee6-93653083cbac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 894197d6-3da6-4c47-a563-c7fe21853e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 8bc91ef5-6f08-43ce-9f44-5d86fa44d04d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #556 2035340d-2ff8-4e73-a104-48d64e97792a)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #556 367d4e2f-049f-46c3-b5cf-737f21f33644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 91540d08-c584-4e2c-90ca-b88d5e23aee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 2ef85345-200c-4ac9-9b07-fe15e156787f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 a0babe9f-52f7-4b91-83db-f09dd7cd142a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 75c7a5c4-e045-43fe-9571-021318ccd34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 097f71f2-3d2b-40c7-93f4-9d042ab10320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 4aef72ba-5b3e-4df7-b3ab-e053fa4c29b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #557 47592d90-e517-4494-9b87-9969b35d2c80)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #557 e386a966-d2bd-42f4-b83e-16f07aea0494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 8990f759-43b4-4f43-a078-0885d7df806f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 eb933285-851b-4647-8831-8a6badb10ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 7ac43d34-9a25-4d28-af87-3f281772fb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 55797f40-8c0a-43ca-ac81-11f2f948cd4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 ed38d22e-a92f-4cd2-9f06-13fd1cfdc11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 5d0d9dff-d8fa-4442-93e7-59111f7c35f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #558 cc5c4227-e9bb-479f-87d0-4ee80783c46e)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #558 ec354c95-afa9-42a9-81a6-54b3246d7a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 61a31fa4-af4b-4008-8efd-efad904a5f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 5f3a81a9-9ff1-46f9-add1-7d534efa6f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 c5a27816-8181-45ff-a0f6-bddd7579f609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 7f1f55a2-1606-4f0c-bdd5-070d9de69624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 3007adcf-0119-4dad-b626-a620787d7293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 be58bf2a-4a60-4a89-9cb1-8f05bb73a07b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #559 5b36307c-a237-4eed-b75c-f889ff601c29)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #559 a305bbe6-222e-41a0-906b-3be71cce9578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 3de18aae-a8f5-41e0-89f3-22c3fdf24a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 a4989e83-366f-4a4b-b5e5-70594c1ca7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 dc5bb08d-0b19-4a93-8402-df87bcc2c714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 0b96894e-37af-4d93-b7ad-de2610a4c642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 5c1df75e-f79b-4ccd-ba6f-eeee7b37705e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 4bad0470-62a0-404b-8c42-3ecf35c5c5ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #560 0935b691-127f-456b-8bdc-fb3f2e286643)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #560 8579207a-f0f0-4def-9607-61780d3b58f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 e0f341af-7a67-4734-8316-84ef3a6b42b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 3dd34beb-c4b9-497c-b56a-3a11025606d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 cc160f4f-e790-4708-a963-62722e4d0518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 c9db1d4b-9b8b-482c-afba-43834c26e70e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 9b11bc27-0503-4060-90b7-13717110305f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 b4ddb1b6-f13b-46ff-88df-c7eb71855684)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #561 44f8cb35-86e5-4767-9c44-1ec613475978)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #561 c920b309-85af-492b-b173-08dbcb9436f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 a2fb94cc-1a45-458e-be54-c1f0fe85685b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 f1fd61f2-c1f7-44c5-a7a1-759551d4047c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 62e02497-d3ed-4b06-b323-4c1528ce946d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 9079b9ea-2291-43b3-98ba-b43933d8c412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 3cf87253-2e52-49fd-8589-6125f4d15a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 d4a99bab-4712-4d69-88a6-1ea963a4ac63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #562 5482b6e6-615b-4403-9be9-e793320cdb3f)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #562 7e42f156-c01b-4c21-a169-37d4f0b322e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 dd63591e-eec6-4307-848d-c9d78f50c02d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 60aceaa1-4e0a-49b6-ac85-a61248603cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 0b25088f-72ec-407b-ae73-5dbcd5732c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 5f168c08-ee36-4df8-829d-52fc3c5c1f22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 866571c9-707c-45f2-946d-2f5183378c87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 421bd97e-7d64-4eb0-867a-3b29973ab23b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #563 9f7f4970-4dfb-4544-8edf-b1b87c9a145f)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #563 b4ecdf6a-54e6-4274-9e7a-dc2fa745ffec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 b1066b76-667a-4156-a437-e111f419e959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 560e4520-e1ef-4114-9a82-462759dab98b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 c6381565-3862-4d79-9c9b-cb2eafbb16c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 26d24292-3e8a-497e-b311-b67eae81f514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 a2545206-cded-4dfb-8b3a-187393a65efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 19c80a48-4183-4834-860f-682a0c0377a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #564 06adf1cd-d206-4ddb-b4ef-1f4dffc372d7)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #564 b2f6b274-863c-45aa-bf74-f73e988c8e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 4ad0749c-cf3b-48f8-81f7-bf15f314fbc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 660a6e01-91d0-4c0e-ab2d-017a3afe979e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 811b90af-a6a0-43c0-aae0-5bfdf8cc57fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 4feb4d51-a5da-49e0-bce0-3390e77a549e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 6b4e49e2-3dbf-4fae-9d3e-2a02d474342f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 a0cc347d-5ce4-4760-b428-f26d20d1d614)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #565 8123493b-f733-46f5-8388-1d276288b828)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #565 15c4540c-eb2b-44e0-8b58-921e2d66b786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 8456d2b1-66a9-478c-a49c-3af6d2a59d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 7f4d1be7-e385-4182-98eb-0137a41be20b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 3be41377-afaf-4e1c-a173-60e4c3ee4f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 52443666-b8cf-49d1-86cb-ae7faf5f2a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 f9e3c1c8-8f92-41c5-bc1f-eccbddbe7937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 7a129b88-17e8-4703-afbb-1f1b4fbc0115)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #566 ad57917e-d4aa-44a2-9c7b-45901d0af975)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #566 ba1d83d1-6b21-4393-9b9a-52b69fc3156a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 07232d2d-f715-495a-a577-86f079e86559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 0a63886a-9dba-47fc-86cf-a76cdc740bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 a366bafc-1c6e-49bf-8f04-a0e39d74f9bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 b58a4096-9e30-4832-a065-eb48027f8fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 f923d8d9-6908-494d-b369-210708e3e36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 fd45b863-39eb-439f-8e24-712e09a7e233)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #567 946c7ea1-490b-4130-b0d3-f9e5a37fce49)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #567 dea6f395-18b4-4ed3-8ff4-4525d03796ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 e47b53f8-6c84-4ada-887e-dc06f9c1aaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 8f1246de-ddcc-478b-910e-d1ff2ceb2f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 55d2b4c2-3cb7-4f3d-89ce-41e507876b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 6836e7e7-983e-440e-8d00-253685c186f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 c1b73655-eece-46a7-9f07-8bbe97043a3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 a2f76874-5582-450c-97ff-f38042d4c221)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #568 17cfbc84-0b5c-4238-be54-f13b14457423)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #568 a1213db0-489c-4a02-b14d-787baec4dfb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 8d35c41c-a0c0-428f-91ff-704f12f11c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 4c1eea5f-012d-4169-a9cf-802da0f4165b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 ced86cb2-38eb-4c03-915f-5d8269a7220f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 4a3505a3-4912-4caf-af1d-1e880ca1a656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 9ebbe49a-ffa7-477a-b938-e0329a1e45ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 61e32af2-7c65-4826-9384-f32f34effe44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #569 47df0b8f-ad45-4ecc-bbe5-dad5f77d615d)");
unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #569 18f7b070-5b8a-4b62-ba2a-78dfa6c8db0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 9b760882-33ff-4ad3-9928-7679b0190c8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 0f136905-8651-4ca1-9512-6f076db52de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 a14ec34d-ba24-432b-b0f1-6d398f90695c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 c1c061ed-dd19-4551-bddc-73ee33b5a6e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 4ecd2113-b129-4fe1-94ca-de0c209d3a2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 ec8b232a-7535-4630-ad1e-bbc7ff05cd64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #570 fbe60517-bdc7-4664-aa17-74f5df062e9c)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #570 99edd231-f4d2-4a96-96bf-8c763b85b9e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 c06869a4-cffb-4d83-bfad-b1c6fc2e4d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 e9415391-c210-415e-8f61-fd4ef5829e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 b4634433-d444-4198-a9c8-556d11bc2b93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 42c4c923-2aa6-4199-988d-b2637c62df65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 2655e1c1-0104-4331-88b2-e88dac046585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 54913f3e-0140-4d02-83e7-8be5673850e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #571 0441be43-e826-40a9-b921-0262730174ce)");
unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #571 0f1acc03-8c48-4bbf-bd5c-5cc7c05668ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 d745e56d-2882-4cba-8284-f970b1ab80d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 391562bf-09d1-40bd-a90e-c0da3897c549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 5c654c12-ce3c-4638-adb4-18aa387652bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 94e7bd49-eb86-4ff1-8027-0699c7f59ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 7d4078f0-9fd5-4d02-a0aa-b67ad7f10662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 1f55802f-908d-4004-aee6-9c281e6103b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #572 a167c435-dd96-410c-b381-1f4210b5d962)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #572 ebe6c5fe-7f9e-4732-bf39-9e57e926163b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 56aad696-ae67-450a-bb87-acdfce2f58a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 c2664787-85b5-47b1-a157-b594fc8a1708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 63023a3a-1e41-4b65-a4e8-362346dc6bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 a2b5014e-e306-4892-9df5-bc85dfab1e2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 78ad4a38-298e-491c-a5e0-31cad2fe547e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 39899925-acf5-4961-bf8e-fbe141cdda43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #573 d3226140-5637-4b15-bc05-60110676ec4a)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #573 cefdceac-e285-41e0-a31b-26246a254031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 5aa45e2d-b898-4993-9cad-3f76872fa568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 92421b31-32c9-4b22-bd91-0724cb9be775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 9c292398-7c96-48c9-a511-4d5fe36652b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 628fcbdb-4071-4ad1-a84e-e3ac4be6b4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 8a3e8c43-53fd-41c7-8fa5-50cad39cc7cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 ccec9456-756f-42c6-937c-a315de388c57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #574 47ba4b03-2f89-4389-bfb4-a188f8956867)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #574 d6572096-d76a-457a-89e3-3ca8b364c15a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 0c045a8a-6c0e-49aa-9bd8-44ec23f992f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 273b9bb7-95d0-47fd-ad94-35a748ad0f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 141b45fc-58f7-42c3-88c5-c9c0f280a24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 fec420ba-a974-4e9a-93af-6eae8d1fd95e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 c2b0d080-a697-43dc-8d58-89faa8ea13d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 596f8368-d3f1-4759-88ff-43f7f056cc6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #575 72f60d1f-b928-4880-88aa-5a6365012b7a)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #575 3d55add0-01e0-413e-ae80-2d298e4bfb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 2fe8e74c-1e5d-44d0-8b88-3cf791f20abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 056d0a9c-4e97-40ba-9f63-d4265e9e29dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 af56bc89-f46e-475b-b93d-b5d90680ee9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 56bd9358-3b65-4626-a4ac-d5ac6f9b6350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 008d8b9b-04dc-43a7-83d6-4fef9ae1ef17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 a44c5207-03fe-4e15-9461-06344746c8a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #576 e40b438d-4c82-4627-94b1-344f904b931e)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #576 54cee494-3e71-4546-9608-0c9604aa9e1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 541bced4-df9f-4852-8865-7c51927e5bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 d4682c15-bcce-4148-a92f-30a498de8126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 614750dd-5a00-4dcd-8dc2-9bb3f02c63fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 8876a07a-9d30-49ef-9a8a-c5ebfb9109d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 a6d6a815-64ee-48a4-8c4a-fe1fd486e97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 c148aa69-97dd-43df-a949-db6c08adb87a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #577 7136df3d-b9b1-41dd-9253-484724a10a37)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #577 43b3081a-1687-432a-871b-a5cde369e92c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 70a821be-51ac-47d5-9ca8-5abf210286ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 40bd7efc-283c-4803-80df-17cce873ba2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 e0a883b9-d25d-41ed-b65b-a0b64120a8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 3a0b36ec-fe52-461f-8ba0-6a839035f0c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 7466fc24-0177-4f01-956b-2dfb9a00f022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 80928c7c-0db5-4ecf-a80e-2e17edd4f731)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #578 cc6f3d10-b3ba-4781-af19-1c01c02f4855)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #578 85a4a96d-e304-4a99-87e4-c91601495309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 04627dc3-18db-4ce7-9142-185237ed1019)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 bcbfe158-05ae-49db-9130-9ebdb3198de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 06f84ffb-e598-41d0-8caa-7364a9156f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 6d4c619f-e96d-49e6-aa00-00f18647f8a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 40f245d4-b4c7-496c-ad42-519608e0c71e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 16d64741-51c9-4d27-90b7-6afc10a22bc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #579 5b48aa49-7ead-4bd5-9339-08b3e7096c89)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #579 48485485-d59a-49cc-84db-d70c905766af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 dcd54ebd-5537-4ef1-801a-c76ecbc9316c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 27833f93-f94b-487b-911b-a6e3a2d89152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 0f0a3164-b138-42f0-b813-0033de0a31a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 0167fb3e-fa01-4515-8b48-ce74e4bcb9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 0af9732e-0ab0-4d2d-a9cd-ac23af2c92aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 04bca99a-a01c-4609-9f68-8b67cd2fbc05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #580 af4eb79e-183c-41f7-a008-a2b339b0a420)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #580 38c985aa-0cf4-4930-b408-3e65b40e0638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 9f9c671e-4097-4d6f-9352-d1d8f624a238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 7cf1e7e7-d8cc-4c9c-8cff-0976310d522b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 c8867b29-c7fd-4024-b89c-a40def347fdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 2b97101b-c4c3-4940-8cd8-47aa92212e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 9def8575-d577-49d0-bd02-9fc831f0d580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 bd4b0b72-fec7-428d-a095-c08294f7208e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #581 f02c9b6a-ce86-462c-9c8e-22e2abb91508)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #581 292819b1-d23a-4350-94c0-31be5e9c56ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 ac8e0855-182c-4734-aba0-2561c77e543a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 885468e4-c766-4249-834c-964b85945b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 42faac1b-e020-48bb-a544-e8e716443961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 2b71eac2-4a46-4d84-8ad4-8c5a28855e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 dea9d9d2-954d-4272-ba93-79e0c831748b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 fb48214a-d542-45e0-8f08-bc5a42806f6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #582 5f31943c-9adb-455b-90d1-c9b1f38985a9)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #582 796e28e9-48d8-4f44-a340-2ecbcd108e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 a49e03c0-e881-42c6-aeb0-58def17d20aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 71afbb20-3d4f-4a06-aa91-b6282f5d901d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 5b3567ed-d317-4d29-b560-e110fec97bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 a0cf3299-d8da-4689-8099-4fd16919f6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 27684cd8-3dc8-48f7-8010-16310ecd43f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 28086719-8937-428f-8ced-ee94a50d69aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #583 aa794d74-d5ce-4a92-bdee-cc0336e071b7)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #583 6e5b2c00-8769-47f7-9057-46586c6eb619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 007bc680-7994-4664-b828-0fa82d033e33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 fffd5477-398d-47e1-b780-3e02c20143cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 c9dd11df-6479-4235-9e8d-f781dc4a4227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 b1fa3636-5c5b-4cec-8d30-1c7c3cd8e0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 bd77c8eb-5624-4103-8142-39a11524ffc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 da45970d-221d-4e54-ace2-5b12e8e3a4c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #584 d4aa24a9-00d1-4885-b38a-ef351df42dc2)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #584 bfb5713c-0117-4d99-8ae2-4571b2d67c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 0e8315bb-d1fd-40d1-b3b3-0212046509b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 70d0a6a8-f574-4991-9b59-18f98a374113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 e32f1268-39c3-428b-8017-3e05d8affa51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 e1498de9-cb05-4e1a-b84e-4933223d49d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 95b6c877-6144-43ad-9e93-b4733c54717a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 05c54c09-abc4-42bc-a3e7-740b3c515018)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #585 b2459400-ea2f-4e52-b41f-48ee237d06b5)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #585 8c578a2e-90f3-488f-b72f-4a401f2868bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 0fb72ac8-3206-423d-9a93-b64ae009d97e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 ee003dd5-1761-43bd-8abe-dce11aa4fa1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 2a3cd248-9f64-4f68-ab51-cdb945c719f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 9e1d2cae-e301-4fca-a3be-1084abc9889b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 5a5ebf45-838e-4bff-91d7-411ea238d68f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 61d234b0-4f80-40f0-8ea6-db4940a79fed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #586 932869ff-bd47-40e3-97f6-30eaa5c96878)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #586 d767ff9b-be91-45d4-8be8-12e2535aeaa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 00a7b02c-c3c3-4ed1-95d6-1ec9f44ec102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 ac3ec8c4-b79b-4e47-bc53-056a5532d8c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 fee76d5a-376f-47a8-9829-bb420e80f199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 2a5ca934-0e8a-4686-aa0c-6edea02786ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 3ffee7ba-0ce3-4e09-bce0-3462f2c6a694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 8531c91a-b963-4fb9-b537-f0cf86a6c993)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #587 767103d0-13c4-4e3d-8b46-2370c335b7c2)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #587 d9b65230-e42a-428f-98b7-4dceb4855ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 3636cb27-723b-42ac-b2d2-5014ff1123f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 ff015457-5c17-4a4f-8718-afa9ba1b45f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 ad4aec40-24ee-4f91-b998-775e4ac564c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 f7d3df51-a5bd-4ee5-86b1-cfa3366fdd8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 ad939b58-6392-4662-a6e6-910a1924c1d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 1136c488-98b3-45a7-a6fb-e8ce81b74004)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #588 dca5a487-1d44-41f3-b922-5f496baba1a5)");
unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #588 1af2d832-b368-498a-998a-836287543a31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 90247ee1-2e68-458a-b9d6-3404160f4dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 2a731e87-71d2-4cab-9d56-5a99be1ef69f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 8195d87b-f520-408f-b41e-db4811d9b091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 e56bf633-7951-46c5-b6f4-d96acdacc022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 70e2347d-80e8-46a2-be9a-edffde29c805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 5baed8a5-8813-4e0e-a280-9f4e01a06560)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #589 b3ebfb81-4879-413a-953f-f8217f2109d6)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #589 2a8f63f7-c0e9-4862-ae51-59d48d9131d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 42afbc39-d8d1-4754-8905-b6d297bd56b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 789f7d46-81df-45a0-91d6-9c269690d1c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 01d6f133-158d-4fd1-a04a-ebc323439b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 ccc5e1c4-14bb-42bf-a628-bcd0536ccebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 f8b98890-cd90-4772-8316-5090b0e24e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 311ed5b9-3bbb-480e-880f-4daf440f1b21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #590 53cd2cb2-298c-4c03-9d55-5be9814312f9)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #590 506ae586-11e4-4913-928e-e0f62e9ecc3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 bc5fd5cd-e25f-4d94-a45d-f30b820afa27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 fa63e032-12f6-481a-867f-443c26225052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 5c2e025f-b8e2-4a99-acfe-4aa993e0a448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 39b4550f-34fe-4fb9-b1dc-702460c478c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 78868045-d2e0-46a1-9ac7-de983c83f48b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 d4cd553f-c368-4327-babd-6fd2fea19673)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #591 bb2ee255-7abe-4fad-9476-231cdddcae54)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #591 b0739d8f-b58e-4ac5-80f5-784ad66df1fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 b6b20ac8-564c-47c7-b76f-c70e8f5a2325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 d0556b35-b45a-422c-b850-2589748aa4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 23130dbd-7ba4-4af3-b7cf-250ff6b03e96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 a2585fa5-9cdf-4515-8030-a7cb231c8fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 6c447ebd-4ab5-47b1-aa11-e32fc59d78ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 cf6d35de-d2aa-4244-9320-3839669bc044)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #592 cbb92219-4b67-4e07-8997-e0dc2bb30398)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #592 074efa1f-c95a-44fb-acfe-c570296726d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 bfd4114e-d57d-4213-9073-a49fe43986f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 2101a1b1-df2d-4f86-968e-943cae681c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 2287821e-ab27-4cb2-ad85-e8ea8f3f899c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 8f792d1e-fd6f-4175-b317-7b13481ae705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 ecffa105-f415-4433-abb5-bf3a455fb531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 4246048b-62a9-4c35-97de-0bdac1afa65d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #593 8cef9641-a06e-439d-8b32-abee24b0a039)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #593 885565a3-9390-411a-97b3-fc98b7f0c5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 fa222972-52da-46dc-ad39-cd76c8322631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 f6dc3e98-ef9c-4196-8c65-acb3d2374c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 6a44ee50-ee02-497c-97a5-ff065ea08c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 9b410582-9748-438a-bad5-b7e848496144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 493ed9aa-1ce8-404f-9682-df79dbd1877b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 00b8eef2-d429-4f4a-9129-e0d489f4c2f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #594 d01ffcd5-21e0-4153-a3c9-bdcdc32740ab)");
unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #594 1b0cef44-d3e0-45c1-b589-9074a55ff3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 7bbda186-aac4-42a5-8b60-b4b8322cc217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 3cf7b341-91bb-45ba-abe0-5103dc354692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 b3492a1a-af2a-4010-b72d-4edf2d22d961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 bc1233af-3f95-4767-a898-e89dfec0db43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 6b4787fe-0785-4496-b8b2-de15ec2e0c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 c42a09af-1381-4bdc-abaf-b66880ff2d4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #595 34d3afd8-9acc-4597-912e-a1caf1363498)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #595 49ca0b43-a8bc-4ef2-b782-9b74df2fd918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 ceaf1bf6-fb6e-4d50-85dd-d06835cf7adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 7c4599fc-1943-4ca1-ba9a-73df131719ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 10a226b3-4fa6-48f7-847b-f461a14b1c34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 7b66bd74-b277-484a-9323-3ed6609e3add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 291945d3-3222-4e78-9029-b88261a471a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 c18db283-6b2f-45ea-8bdd-0ec22cc94b6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #596 39032751-451d-4f2e-adee-0fe5cb375032)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #596 6eda41f7-283d-4702-9327-2e1bf5b82241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 09a0e9b4-bcac-413a-8c78-72b0110f1fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 0055d4cc-c88b-4a82-ab98-6582f2d080b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 688982bf-495a-4589-a381-5787a2fcd68d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 9de3d8fb-d3b7-4bb4-bacc-40d822d7eb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 143bd51b-1f7b-48b4-a512-9ec63766e50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 a09ada2e-a0e2-4b7f-9b65-acd3e7d30e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #597 3382f605-10e8-4996-af7d-eb517c3224c0)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #597 03c6fd19-e8ad-4dc7-a47f-6bdc87cde966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 819fc878-c4e2-4fe1-b07a-20560c89b32f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 fc247a39-c3c6-42b4-acab-cbbf993292d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 8ccbd018-6108-458a-9295-fdf7c4aecc3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 1b28a6ac-bcc8-44e2-ab62-5fe1d36a8ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 4b662c50-ea0b-4556-839d-97512aadc03a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 58f0345e-62c4-4fe5-ad77-4dd92c2b8266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #598 25842bc7-ba63-461c-b89c-f40453a1f2de)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #598 52fb3d61-cc72-4a65-89a9-36fc4fdc95db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 fa432055-0626-4ce5-9c28-88f5827253da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 bcfc6451-0874-4dea-9b6e-64bce0101a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 fdfecedc-33de-4764-b157-6d9253c1d5af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 ac7804ed-b48f-49bd-b2cf-54fae5b76579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 4b1c71c9-b8a9-4cee-bdb4-23c07423de98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 481e2d61-9f10-4dfd-b9ba-2a4a58340c81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #599 72632747-2b50-4c96-95dd-b6106e8323a9)");
unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #599 b2a8ef56-176c-4ec9-b0e8-23e196567e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 bf789f98-53bb-4328-b523-1cbde5909024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 dea44108-4596-4ac3-8955-aec1a6c31043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 3d4c116f-345c-4a1b-8926-ed0db884cf6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 7499b117-b77e-40e0-8baf-1b79eb619e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 958c6e3f-611f-4ff2-9330-2628237c12ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 b7fa689b-cca0-41f0-b9ac-526f9cdf2b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #600 a5aca44f-baee-4d2c-bb94-210306e5b548)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #600 68f9e8e3-542a-4847-8fae-58a1e3c854f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 775ca563-dadf-464a-bca4-d1ab807617e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 664bb039-1387-411d-9c0a-f52cd224a8cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 e7b735a9-5888-4efc-8525-3b4b89503355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 d4acdaae-bd66-4a77-956d-d232047063f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 f5022105-ba46-4669-88e6-4c1aea5487a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 f77f02f1-9c0a-47b1-ad38-1b02cd2cf08f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #601 db4ec621-86c3-4f96-8aed-db156dce5b1d)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #601 04c8965b-d102-410d-ba19-802cbcc73987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 473bdbb1-acbc-4afe-afce-08c5099ab21e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 cc1c9d98-23ed-4928-bd54-c912adf3a2b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 b03619c1-0ad3-4af7-a89d-fc45b63961e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 817b0338-392e-4506-9a7d-a497f3afa120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 3868c74c-62c2-42a2-bd8a-ba220f753fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 93b57a51-8105-4636-94e5-4731b4d4414f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #602 b3d25f49-bcf6-4914-af09-1b852dba4405)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #602 2c8320c9-a1c9-4c15-ab62-70b070fd172d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 8debe6cb-9356-410d-94ca-b4604ba9742e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 14f695e3-f07a-459b-971b-1f952720e49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 475e65c6-ad67-4198-b19e-32d09b8527ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 9cf77ede-75e0-4b6b-8236-5853b590e6f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 711f1757-f93c-40aa-98e1-7d18b5c6dc60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 eb0d096d-c4a7-486b-87ff-46506cf10732)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #603 cc676028-4bff-4184-ace1-cfc4df0443a0)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #603 18f2ee62-28ec-4329-85e8-5ecf9db9d48d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 7ed9f4b3-b231-4cc2-98af-6433867c1368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 5b960964-79a7-4f25-b38b-70af41f04816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 efc45064-5889-4983-aad9-823ebbc86bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 2f504a00-06bb-4880-abc3-572d44d75fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 f32a87d9-26c6-4fbc-91dd-a82fde2d2b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 15736a61-70fb-4195-9f75-6496f6ff2fa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #604 473658b9-b23a-4478-beaa-790f1bb44d29)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #604 441bc737-46ac-4bf2-ba00-36290843d415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 63ebb4ae-7fc5-4897-b252-2a9d9ac35b5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 9f938692-ff74-4f3c-a786-090a757e92e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 d6b9aead-fac5-4bdb-8caf-543bf9b7e6a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 6d91c2c9-9c07-48ce-8176-c04a372c071f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 4995def2-64c2-47d7-9c01-052a78c0eceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 6b5a449b-688a-49cf-8be0-7308135aebc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #605 868b302e-e2f6-4091-a67a-5353f73dcabb)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #605 3962f0f8-a45f-4ea3-9783-0d0bf9e50287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 e10e6f76-fe4a-469f-b0c2-f53137e89316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 b296c052-7d41-43f7-a6e3-8a2254922ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 da7c60ee-c5db-4206-ae6a-996cc1f701ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 7424eedb-6dd0-4b1d-ab1e-f94f9b2c4e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 c93a8458-8498-4ed9-a2a2-697daa7d22b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 c9fc0051-dada-4938-90e2-5d6d88a01fa7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #606 6b88e091-c432-43d3-8d6a-756c738287a8)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #606 f7a910dd-9357-4521-b405-b80ab154aa42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 f6a06ced-e479-4f87-8683-5c462aad291e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 546a4c70-3428-4cb3-b4ff-7e91b48b95c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 8bd21d0d-62ba-4450-b043-acf154fc68fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 1b3b3d54-1c57-4073-b1d5-8f20db170c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 9fab31a5-020b-4441-9c76-00dc423c577f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 6ee30226-7fd7-4023-b04c-58dd55c7c501)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #607 6021733e-5864-4b1b-b2d6-7dbe9fcff849)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #607 86d4c796-460a-4213-b36d-8105fe31179e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 0a46940c-6f3d-4c8a-b33a-f8a5ded4c1c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 47a97af4-f571-4844-aacf-b5123fa8388e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 c6ee632a-89bf-4bc5-b695-62558cee3ed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 4bdf1280-b744-46b6-a279-750ef522196c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 14aa8dc1-5d3d-4d0a-bb60-c89d922a1c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 8eab1390-1327-4879-ab02-8d6ffeadf1e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #608 5baa5419-f8de-4350-9687-a724172410e1)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #608 b5bd13b2-fcc8-4640-bb15-b2e11f01b4d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 66912064-51ee-4d3b-80b3-3e4429d0326b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 a53c16d0-e754-405b-a925-3d0a10626eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 6a4a7a68-8270-4d6d-b337-6cd45bf9093c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 722621a6-66c2-4c22-9b3e-7cacfc0d69dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 df5bcfad-cb98-408f-88d9-cb747f589be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 7789d0d3-9a25-4c7d-ae75-9412631a21cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #609 50e1ee9a-276d-4577-9d69-b5c9283883cd)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #609 780d7856-8567-4a37-88e8-27e66523527d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 439cbaa7-10ef-48f4-84e1-ffdef362c928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 02cd6208-b1ba-41d7-ae44-4b47c295bf3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 97fc9925-44ef-43a9-abfb-df9f4c08c199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 87abbc4a-7d63-48b7-a42d-709e8780bd54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 ee8f9c7c-f4c1-4193-b9f4-3c6cc0dd34e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 552cfb30-000c-46ac-8bf8-248b4f358007)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #610 1dc6ea50-fabb-4de5-98bf-d7560bcbe0a3)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #610 2a9b95ef-154a-4471-9258-8c75bcaa5c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 2217a74b-1336-4b17-a1c5-87d149689492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 7b8b7cba-4472-40f8-b37d-fac5383d3ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 9baba62d-45b3-4cb9-9e14-724e750f9a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 82dede98-2337-43ee-91b3-94cf6ca416d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 9919ab01-76e7-4db2-a9be-5c999a7fa9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 13830828-3d5f-4d75-8010-68280ba320ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #611 af4ba1a2-e6b2-4755-9ed3-b408ba4fd273)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #611 b343a4b4-d288-47c9-b788-385301f84dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 f4e65a01-f416-4e78-9218-5e3904b3d8b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 403c2b83-298c-4b6f-ae1d-d965b6f0fc33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 2050e7f3-8e34-4085-b031-55e381fd552b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 fe7f0032-9a7c-4a9d-8667-973764de6f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 00dae913-8219-4936-980d-664970831fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 56f4473f-a541-490b-8783-42f0cba1dcbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #612 942b6d45-a7e0-44e2-b68d-a69e53560ae1)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #612 1199a33b-7c5d-432d-9c80-1725e2282684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 b27d3a31-e19f-46c9-9056-7f7e20716bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 be94963e-99d5-406e-8c93-780f851704e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 8364276c-ee77-4098-a7ce-b289f89eed09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 05f542a7-e85d-44a4-a340-2039ba45135b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 7d499e3e-851a-4edf-bf8a-f8edf13e65a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 ee4aea84-23f6-4aea-9f74-025a7dd59f43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #613 95039de1-0c18-41af-a0f7-49efa9bc193b)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #613 2c5a7a2a-b0af-4c6a-9a99-f677e61313ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 7963979d-7f80-410d-9a3b-6701ce1e2de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 2fe871eb-75f8-4c2d-9539-326d9abbe819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 969a7218-b7e9-4a82-bfd1-201e650a91f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 6696f2b1-3dc3-48fa-9a0d-2c26288f2ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 fc50b592-aca1-4f31-a157-ecf375cd6538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 da3a48d9-e74b-417c-a653-a0ec54670b74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #614 87ae0f2c-a4ad-4da4-b8b8-bb87047ce3da)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #614 c31543de-0798-48fb-906e-614c854109e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 43710944-2790-4c98-97ca-a370941e765f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 d65fbf9b-b70f-4cd7-9f33-42268217bd3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 5783a50a-c96b-44c3-8bd8-6a09d50fea5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 53066324-40f3-4bfb-a447-6d7d2116d4de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 ef110e6a-6bf1-4e46-b2ac-dce4b83d3297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 022b5c07-f435-472d-87e8-0220ac0ee009)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #615 bef60cfc-7061-483e-a0a0-6414ff497e69)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #615 f1abc60a-396e-4a51-be0e-ec942cb5d156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 a162b4d1-9d2b-48c1-865f-b745105de16b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 6476d46d-5214-44ef-b3df-d7b3ce703de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 959f6758-6fab-4d56-a93e-45f168c60eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 c24db6d6-ae43-449e-b11f-eed73faa9aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 0dbf0d15-c0cb-47b3-8da1-92eb0ff9b694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 5c64d213-8c12-4c51-a82d-cb6f8c458bdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #616 4901e998-4e4a-4eec-aaf1-b5a435937a32)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #616 c6dc2152-a0f4-429b-a375-999f72515fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 4bcb4934-9d5c-4c1d-bbcd-6cbd734e357a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 08765705-39c2-444b-ac31-2aa781a54ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 7868f3a2-cb9b-4e7e-9345-15ccc4eafc32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 38678ccc-f172-4677-acc3-1480f0841a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 aa372c2e-ebcc-42d3-a9c9-48ff6ffdc70a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 809ceba5-cabf-44f0-a08a-5bb5aa884d7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #617 e67440a3-6da1-47d8-8eff-857d494bdee0)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #617 c1225ee0-e473-4459-ad95-ea4bd1b0fd17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 24a3a3f8-18da-4baa-b586-d53341438c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 6704c5da-5d7d-491e-bfd7-435316f940a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 1b9eaf2f-400f-476e-a687-7d55b426d2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 9175d766-b582-4edf-8814-4707f51c38a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 0ed68bdc-f186-45ab-9f4a-22d30209e4ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 a3bac462-ea8a-436e-b901-1e4140890adb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #618 34c0ecb5-76d1-4381-8346-1cb7fcd09d75)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #618 4730c7e9-ee02-48a0-8617-9d7cfca4e992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 0a1cb7d9-b55e-46b8-964a-c707cf65f888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 3c12e554-f0f7-43ff-91b5-b45b961f7435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 63adf426-6ab4-403a-96d4-5d346099e5fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 57af18fe-ff4d-41fc-94d7-34e26a82c199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 064f13ca-0144-49f5-acf5-a01fcda41700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 3a0c3d1d-e46f-4bbc-86ba-279e57abe09b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #619 77152cb7-e6b2-4c2f-ae73-00f6500a5f91)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #619 241c396f-52c7-4a8a-a909-83339aa87995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 c4c1c5b0-affc-430e-bc4c-4d4a1c27d25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 b31c18fc-5d2a-4d85-80bd-db4d5dd23e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 f6691094-d6bd-4645-927e-38ee34dc07a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 8c2a98f4-4cf3-4030-9652-d8b547710b01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 e1e093da-a6af-4233-bf50-8c61be87d86c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 8e111bcf-e734-4219-b38f-4046111ef13f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #620 c6e706f2-8b0d-4afc-9679-317c9afeafb3)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #620 136cd80f-62ba-4cf6-9cd2-672c288d18d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 78e134d2-14d7-47e9-9d1e-d2a451b7abbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 9f080e84-7156-4854-8621-0c40d59df7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 ebbfad27-e0a7-4046-9f57-19e7cff191d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 11bb564c-fee1-45ef-8ed2-762df480c7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 d8611ba7-a6e2-4515-a13a-b79bc0905a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 897af09a-7a85-4aa9-8043-50d2cacbe9f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #621 9840f752-71ce-4a90-aaa4-3fe07ea2dd27)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #621 1712817f-8e9c-4126-9f7c-67197df712b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 51eb69e0-d626-48ed-8dbb-6dc815380e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 67421a1f-203f-4117-957d-67fd32e87308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 54688911-66aa-4ac3-ae99-4590ff20b001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 24ed0a24-b6c0-4fae-856a-8fd973ea6109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 61bdeff7-13de-490f-aaa4-93f8a9a50df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 01d73e68-90bf-47c0-9f96-dcd4f3833d86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #622 2a218e87-47ff-446f-a82f-feb86dc6bd5c)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #622 6662e523-9652-4ddd-85bd-d219ce475345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 89b3c629-a7f8-42e7-b7ee-f6e82ed66b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 3134479e-6650-4a46-ac7f-09d627a265a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 3e5c9603-fb6f-4bbf-bd78-064294e9ca9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 baa9063b-8e1f-417a-b7c3-758c6ebeb278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 af435b78-8b33-4b4c-835a-0904b8e27536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 1c402581-b4da-4b4b-b12f-67e1ddeb5ea1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #623 f2b46c1d-0179-41a0-92df-9412ef38ebb6)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #623 fa35cb6f-8a05-4f95-8c56-cb6279095ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 9ea01fbc-4dea-4741-a1e8-eea446b120a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 895740f7-b403-48d9-97ac-2037229582df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 2b7f5e74-2731-419f-afce-1c3309683f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 1d5bc445-05d5-4cb9-95e6-90fa32f74868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 6c59f9ab-0ed5-47db-bfff-c50b6836b993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 8e8ca47e-1e7f-4a0c-8803-5937777dd6d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #624 6ff3e379-357f-411c-a45d-26f8d818e64e)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #624 1dd93326-2c60-4fcf-b6ee-046ea33700b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 93995d6f-7c98-4778-b1b9-b060b26a7302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 6eda3314-85ec-4a48-a580-576726f35e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 f537d751-9063-4273-a45a-1032336ec35c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 64ae6ce5-332e-4430-8276-117ad47c5c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 2af98282-44d2-4f96-b59d-0e1c7d9907db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 eaa3b515-02a0-40d3-962b-4c3b06ee3bec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #625 6b2c0ca5-2c4e-41b3-9342-f67b650b6223)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #625 d7589622-d8c2-44fd-8d7b-f674d91054c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 21cbeb49-6ceb-4295-9868-e5bef8884cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 e3deffa8-d5d4-4bbc-89f2-c3245674034b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 6d39264d-1df5-441b-b50e-fa86386580c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 558e5d21-411f-4eb6-ba7a-9bdb38cb202d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 6a60af68-521b-43cb-8bc2-474c1d038f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 8480f782-d86d-45ae-982b-d5b5cb20e1c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #626 8ea1ac3f-7804-489a-9367-fb413bd0e1ba)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #626 d8f5282e-57f4-48ad-9a6f-bda4532dd215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 c2b4fd8a-53c9-4d24-8771-d7582a66b9fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 193c905f-918c-408b-9232-f28cbeefbd68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 83292336-287a-42ac-a4e2-1ba21da452a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 26376d75-1e2f-4cf4-a7ba-773fda456c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 0713f3ef-50b6-497f-bf25-8bc513ac371f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 76c37d44-3670-4e9e-9ada-1ae8a2982de0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #627 f450035c-56a0-47eb-b3ed-c04cde978937)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #627 45cd72a8-4249-4e36-84df-c4ae84f8805c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 91cff393-232e-4951-9963-5a5ecbcce617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 1baef066-2352-4d05-b292-fd21c5051d19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 73c3806c-b217-4a1e-ad4f-7d84cded77f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 458fc170-ac4f-4d57-ab29-5586a01cacfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 0a176b31-1744-4660-8920-ab98a036be03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 7e97826d-6c05-4fbf-8e5c-fbd1210954dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #628 88e841c4-ea94-49b5-b087-aa4201fbd57d)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #628 91df3dac-0c45-411e-80b7-da70390a5f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 79cb968c-b95b-4031-8e6e-4e6754c6d3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 39b0604b-882d-40f4-b591-aaa58e67aaec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 042c338d-be29-4a7b-bbbc-1baf7d5bcc19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 f83334e9-668c-4986-aa9b-f6915efe77d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 fe2a95f3-94ca-407e-a278-9ffcbcf5c496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 c45e649c-d636-46ea-83e2-41d1293ac1c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #629 e557e1cd-d85e-4833-ba69-37c2882792fe)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #629 32cf9b4c-f8be-4e86-b7a6-cdcac38191b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 9f8ee3ee-6b70-4d57-b113-d6c1e65b1e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 4dafd21b-a73e-40ed-a2c9-67ea634e7272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 6cdc2062-603d-4f49-a20f-36dcc52fa10a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 72254137-24c4-4697-ab9c-9e345825de8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 d1a7b9eb-809f-4b2f-943a-eb21a16bbe79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 b117bd50-3d7d-4487-af7b-21e63e9cd535)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #630 e8e3e3c9-8628-4801-9c34-cb3cd5550227)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #630 7e7969ec-440e-40bc-935e-328ce6bd4d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 bd720320-a2f6-4d4c-8875-9b2180c5eac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 b0fbe60f-977d-4f3a-abba-23c5efa7f751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 1403d1a2-345f-480d-ac48-f39c1b1c0c97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 8ae5755e-515a-43da-b20f-065e01afead1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 b5d012b9-cde0-4e5a-aba0-b4485da75b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 df7651db-8abe-439a-b2d7-e9a8588707ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #631 61ad524f-cf46-4284-933f-5eb65fcfd82b)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #631 cee1407a-2856-4cd5-8053-29977258c61f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 4c191102-f6ff-4adf-be22-398bec64d41d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 9c0d6e1b-5ed1-4195-bea4-2c9365d6ce27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 f0055102-95e8-41a1-817d-ff35243d8fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 2458b4a4-6571-4c31-bce1-5c33a10aeba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 57a0cbdb-a772-4f64-a551-5934a94f3565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 24ec0d69-af32-415b-be72-75b9ef365979)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #632 31981573-fedc-46fe-bce9-59ca8c8c5347)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #632 1bc7e820-c1a2-4106-a453-e0cb99dba625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 7b68b348-b255-48b6-be99-9d786e910fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 764b0e07-1c67-4d43-82c2-d6db15bf3d94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 b75ffc60-3346-4271-97ea-df78d56db945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 19f0653a-704f-4405-bcf5-3e30aa70282e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 9c4d97c7-e898-45e2-87f8-f181e4d08a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 b1a0a156-6511-45b9-9168-ac0254a64522)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #633 6286cdb1-22a2-464a-9bdf-18a07d9a4a84)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #633 a0824eef-cbf2-4f72-b0c3-586a67f8c987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 813076cf-e016-4dd1-9bf4-fafab2aebf0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 36cf3e66-247d-4331-a622-b4e8d6ef5a91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 deb41a0d-b23a-49f8-952a-ee8eecdf5ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 8ce465e4-8e48-436d-bda1-e072049fab0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 93e50c21-5c6b-4a17-bd98-c142d21f1fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 b54a653b-9ca9-4679-9abe-35b94c6f5bda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #634 a187acc5-197b-49f3-92c5-b0a2280bf0e6)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #634 045e3c0d-d15c-4680-87dd-e68e7ae87019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 6ea9270a-cbf1-453f-9bca-650dd35fb9c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 9e062376-53a7-419d-b23f-90693c0c40a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 c5d7b6ae-1a07-4d16-8938-23bfaec52a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 a5950a21-484a-4fbc-8edc-b3d33fc583c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 3c7996bf-0727-4d34-90e0-efab56274c86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 9e109602-12d7-4a82-b84a-98cd9ad68d4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #635 daf028db-c798-4be4-8dac-faf22d120182)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #635 544ab62d-c59d-47ca-9db7-aff4a0d1507f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 a9f4114c-1bb2-4a68-9c93-8cd27190c5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 e80cbc13-e4ca-48ba-84af-783adffa930e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 3a859046-9d5a-4d32-a78f-ee1c6470a2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 0a06b401-9fec-4543-b64a-a156c3bbcb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 267ef681-606e-4c45-96ff-99f156467870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 4ce3b07d-6629-467e-9325-ab55d07bd927)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #636 c5812265-dbd0-4612-a258-ad57793b66ab)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #636 18cc25a4-6bbe-4caf-b8e2-805cb175b4ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 cc03135a-8498-4aac-b6b7-b5c78275fa60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 73705217-1e19-456a-872b-75219c505cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 37de8421-8b82-4130-aba3-e8c4b0ac49a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 15e294e5-98ff-4349-b7ca-fb1d7fd29a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 795de12a-524d-409c-8412-eed618ebdb2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 b054b780-6a0c-42fe-9ae1-57ddcd0e3653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #637 1da87572-c085-4575-934d-fff728ed411f)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #637 55074804-49fb-4ed5-9434-14ca3b369d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 0c9bdea9-f9c8-4f5b-ae57-97ce4c2f0c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 121bb261-f529-4a95-a483-ed475720f492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 1fdbf44e-c8fb-47b7-bd53-e8fee007b50d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 bb0597f2-95e2-4800-b085-96d4b919ee47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 643eae36-dee2-498a-a28b-22d746fa4ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 801fbf30-0d41-4789-9a5b-5a1df26e64d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #638 e16b6800-1012-49b3-8497-b5d807e0c4fd)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #638 ae1068e4-f6ac-4b92-98e1-9e0b486955f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 1f06c59a-1653-45a5-85e7-308922d96a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 133b3b3e-c312-4646-bda5-f4fa6da7f0ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 8b2e5df8-f939-4a51-bcf1-afcb491b500a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 4fff4be5-908d-4d4e-8120-6c82a6920ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 0922fc51-e167-4775-af8a-3c96b0d7d4af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 29d6f0d0-7b1f-4f0b-a3b5-ff79204ba6e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #639 30029cb4-c594-4983-b901-5b78c087c860)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #639 bc1dfca4-7f9d-4d78-a82b-ac131ed5fc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 5958877c-1811-4877-9c6e-741bb7d21926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 a5f6f9e2-57eb-4492-94eb-5a6e457498b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 588a8638-ec6a-4f98-8e48-eef21066644a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 65276adb-c65a-4edb-9c55-31466471cf6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 321ba878-1d3c-41e1-9a8c-39783571f9e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 0a752f42-c324-4272-8f75-de4ae6d3e165)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #640 31c4728f-603f-472e-a77d-bbdab514f011)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #640 cd43a5b4-f01a-4e95-bbd0-342caf4f2980)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 6872880d-5e31-46e5-bc28-23f077b91bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 9a912ea0-590e-4931-8e48-11692f8b0d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 a84ee4c1-e532-471d-b6eb-f8952f4f02a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 b1f7bf84-c8a6-4df7-9769-5d5f383e1431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 c2f6dcf2-83e2-49cd-abdb-51542db267a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 72d81f47-2be6-46ee-ad1d-35fdbb311086)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #641 0b558546-7245-4be2-bccc-927f0c05395d)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #641 02f109ea-b005-4976-95e9-d39b0e7c37df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 300d79f2-ec27-4128-b0e8-f46ddd9cd000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 7aa42dd8-2cdb-4548-93fa-747110eb9e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 a65fceea-3b49-4bb2-ab41-0b417929fa38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 b938026b-5815-4f90-a58e-59036799d16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 f2994d73-9bc2-44cb-8b35-1f5233fd94cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 3161c449-1ee0-4eaa-ab47-dee372b967a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #642 9cd542f2-b10e-4888-b264-a74928f7d135)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #642 c3a4f58a-296d-47e7-91fa-0663d6313e90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 94145131-424b-4c96-a5f9-bc673042cab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 c511723e-28e9-4965-8053-3c704fcd3114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 a5172501-5579-4300-b784-f03de8f6ef36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 b0ac9846-7345-4f15-840f-955d47af251c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 73803539-4306-47d4-a7ff-bed436bcf6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 62e5149b-7188-47e7-bfab-c11b893cacaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #643 7746f6e0-8bbc-4024-a5e9-64b965200ccc)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #643 f9dcd0c8-04fc-4cbb-9a6a-ea9af232b9a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 e463ece8-7690-4550-9bb9-135c2a564dd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 af21ddc6-6616-4638-90e0-2df325576c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 873dc474-3a86-43f0-a96b-fe1a4ae9d3c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 6421d7bb-0cc9-440e-baf4-c8b399c65d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 1ba9f081-5957-493a-9f45-cb18919053ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 b22a6c69-5aff-4d0c-a48a-9c8f4fd49445)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #644 90abf76e-1ff0-4d17-91a1-9221451be2f7)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #644 a1db793a-0982-4d44-b584-34ad2962b1f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 46d36940-60ce-4592-8294-b6f892144e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 c523b579-b7a3-4b37-b1ec-f7dc1b3ee869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 8def74e9-e828-4198-9b27-69c3b8fec8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 7aa515a9-853e-4afb-9c34-4d8ece359801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 627470e6-30bf-4691-9306-d2535e02ae00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 f9ec69db-6e45-4e13-9ef2-29bb0a9488c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #645 4367dd34-c218-44a3-8d79-4dfdeaa2528b)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #645 bd50d4ae-7f8a-4864-89d2-07c636cf82c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 2ca09b0a-7c1f-4dc1-a859-bf6fb5db112c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 5e8ff0ac-3155-4244-b3ae-fa205bf2b1db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 1fea78a3-1efd-4835-b3b0-23a1bcc95d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 664c0c3a-2435-4003-a051-baf3a9d766c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 31f54e8e-ec9a-415c-b270-debd3355b4c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 34c21651-f948-4765-87fb-18ad70aadaa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #646 90c2efe9-5937-4787-9729-7b621d050433)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #646 e841c0a8-280f-444f-8fb1-3fd1d170b52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 23f78715-f156-4f9e-b2ab-9d576415fcfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 db99f9b2-29d3-4478-b520-cc7731c4c4ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 7d148ee9-f5da-45b8-a6f7-11aea1a0829e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 f8a55198-5a3b-4340-83d8-d6d8ea3d9af2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 fb7f8854-354e-463c-9c14-303fc1c92251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 18b86555-c435-4196-a9c2-9e0d7e52ee2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #647 9925d2c2-f50f-4b96-98ea-a7306a3fbf35)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #647 93870dc7-4f00-4f93-a9b6-146b89955d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 c9511648-42d2-4726-8541-7572131a3bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 bc3cea20-874b-4fb4-8bba-f6148cc0199f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 c8cf9ad6-0e83-4e74-952c-ebd94cc8e9b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 f78af95c-0719-4504-bef7-984e0065db77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 e6d478ca-37c1-4745-ac77-214e471cc134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 c3e25918-5f28-43ef-8baf-2197c8795147)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #648 0c0066a9-14bb-4479-a8f7-f73ef3e47491)");
unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #648 fc0ed3ae-cf82-4ba1-87e2-2ae19589efba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 e7b3b13c-b4a5-4a38-aa9c-25698e6eca22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 1e709caa-953d-4a60-a215-2efed298206d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 a260df44-c928-4dfb-9a74-001b14de421d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 dc86b026-10cd-4832-9eea-9ff331734b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 f95c8a0d-e52c-48b2-b32a-42a574185c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 bae16f4f-4c58-449c-b7e7-f09ad957d4b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #649 85f82194-fe59-41cb-af92-0394e8b2d7a1)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #649 d170f97c-ebdc-4387-8e46-11bea15b4ad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 4ee0f79f-2470-4c72-9307-646cb6e11c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 edeb535c-f5f5-430c-a2ed-eceb500e7d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 692834f3-3a3d-45c6-ba67-e8365d857485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 20385000-8212-498c-aed9-7dc7c75391fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 50951d10-de11-41a1-b5f7-f939bebab044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 a67b4e76-6882-4ef4-8c3d-9412941e0786)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #650 10dba70d-9543-47a0-b512-7c0313f95d03)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #650 cf84f287-33fb-416a-aeed-dc616f315d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 77db21f8-fc74-465f-8291-9f38a38174a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 2c194be8-2a53-4f80-bf90-e46a33412a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 f39a5f4f-85ad-4fba-a456-84f45737de00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 0d21b839-2c27-4b48-9495-8d15c4f3a076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 455875d8-1632-4725-88b3-e2568f681afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 3e7169ac-9166-4b07-b33a-b7ad5cbef448)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #651 0be866d7-ba39-469e-90c2-6e4bf794c372)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #651 82ceeef5-b66a-4951-87a7-d873a9ee7274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 aecc064c-7ccc-4776-8ff3-fc7b8ee02fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 8ed3edb2-43b6-4960-b10c-b822a52ef0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 444cf7bc-df9c-489d-ab52-f3d5ae2bf3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 38bf0cc9-4578-4d12-a4c0-85c5364b417e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 1ca7836f-5576-4352-bf8c-6da6139b79bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 200f6561-e594-4a0d-b0d2-e226f1432e95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #652 0eb0b232-bc04-40bd-af04-f9b92927553d)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #652 372161c7-3edd-4c77-a8a0-0bec731f5bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 f8c46995-e1e4-4d1c-b1ea-ec0951f479ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 f45e5dc4-be02-4a61-a3c3-8d2b3a807a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 744f927d-aa27-40f1-9dee-e97804c0ad75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 43a2e83e-65ef-467f-8d64-db4edbe3d17e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 c440ea27-e697-4904-a6f9-91d1d80c7124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 64869996-76e7-42fe-8937-846cea490b80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #653 15bc0791-6219-48db-a2c1-3a72710921e1)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #653 bd270025-8e55-46b4-bacb-8da1281b6a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 4664a307-d579-4824-b395-93b31f2abd85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 bfb7fbb3-9160-40fc-8cb9-657916a91dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 ac8c18a4-d957-41ce-9172-f79f3cda5014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 dd11ffb8-297e-4197-a924-e586f8297d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 6825674d-5f78-4874-bf8e-10307bf4bf6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 79b9bf87-3be2-45c0-9047-1f3700e509cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #654 041b2fac-6da1-406f-9d97-6936f64650a1)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #654 51d4e542-384a-48b3-9846-6fd2f0b541b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 15c15f2d-0645-4321-8b75-20c8e1e3fab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 9b95915f-f55e-4249-be35-5b1a3c71f3e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 ea1d0d10-36ae-4c71-bf98-af68abead272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 28979f1f-307f-4e30-a6c0-0cebe730103e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 402ef4e4-5087-49d0-b479-8e080ceb7d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 86d4c589-d7fa-4235-aa6f-a7d6eff631bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #655 5d97f17b-2fd2-433d-b6b0-1e046b0e718c)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #655 03cff4e4-6661-42b2-89ff-178a627b722c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 8db429a6-af66-47a4-8fd9-761c3d63ae6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 cbd195f4-ed0d-4ff5-b47a-7827658300ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 06a9be86-0e8b-40b5-bb43-695b8ecc61b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 dd758d88-d859-4f45-826e-e1d95138cc2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 f8e7b59d-5c18-413f-b1ce-29fbb029d6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 2d542a38-de55-4e59-bf59-9d7a74494503)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #656 47e5a516-d8b8-4420-9d55-d4705d0f9ed6)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #656 a3900a94-9638-4fec-8950-8c7643aa3486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 0959d3ba-d69c-490b-a53f-b54faa019707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 76522166-9b6b-4257-a849-138422d1d720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 11cfde6e-c483-4fb7-9b8b-32522ad954ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 301c34ae-0d9a-4501-8810-52afa1cdb7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 e0b490bd-08d1-4c44-9da2-255307525d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 92506249-91e0-470d-8a0a-3890699f2ae1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #657 b253250b-38a0-497c-a4be-463a5fdcf055)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #657 52e2eb06-558c-4b82-9fda-6a7c2e45d333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 a4faeebd-9029-4967-8e09-3f3a7740ac7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 71115c86-fbba-461a-bcb3-3b9d2752fa8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 06686d1c-f001-4f0e-ad39-85e588a01fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 98f5a2d9-1049-4521-b3a5-814dd19d96bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 7361373d-8d0a-44aa-9702-92d118bca4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 15c8fa4a-179d-46eb-a9ec-4e2a803f429d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #658 8cea8662-f0fe-4910-b733-8e9f9e0e91eb)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #658 e6ed96e3-c000-4e3b-9f9d-9da78ea19523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 558b71c6-5954-4d59-85dd-f33b9fa8023e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 2ad8553d-4cf7-4b09-b3c0-c725f3e9d86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 395adee0-b451-49a7-8d05-71341e040777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 89e137a7-fa46-4b0b-97e3-291c1dcdc88f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 2ec59f8d-e502-4cd6-a8ba-aeabe042c180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 4c21c809-d608-40d4-a016-fe8ce4752507)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #659 03bb3196-576e-472f-ac19-df119ff72eff)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #659 baefc9c0-0cd0-4344-89e2-dfdd909f0376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 aea6a2bf-b1d1-4878-b8d5-5085a56ea17c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 adaf3a62-1025-4816-a81b-28cb3936830a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 ada987e3-8948-40f6-aedb-f1e4a9105226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 aba72839-7c24-4c5d-9623-0627cf96cb9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 9831b70a-a4dc-452a-abd5-23578b894b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 72e514d4-4483-4fb9-baec-989245fc429d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #660 68490c61-6832-4887-aae2-56b7a50c1b7f)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #660 0da39f08-b0a0-4771-bc6d-02b1ece0f0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 112bc03f-bd53-43a7-9e70-290a9b3ae5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 24eb7136-e110-4d44-887b-d91262ff0735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 9b7b317e-be7c-42d7-993d-b687112b17bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 4a183011-8420-4e47-8e55-2473db438593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 4992c075-d984-40ac-8ec9-8ddfd6d280f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 cfa5baad-c8ff-4e59-94ec-e86634127e70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #661 cab5751d-31aa-4f2d-8406-9d0ab02b9895)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #661 b9aca7aa-adf3-49fd-82ca-7df3972a2fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 4a5b5ed3-b4fb-4777-bb26-102192997e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 9d765904-8f73-41fe-aa52-68231375a90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 47e84af1-50be-4956-89e3-a0a7e598d711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 c9722fae-bc2a-4009-9e65-c739d3fb9c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 906d8966-0b84-4ef6-8059-bd12e1890df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 e431e8bd-7d43-43b4-8b39-0630e3457a62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #662 bd91fa8e-5a32-41b4-ac5c-a1460d292037)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #662 ad7ed9bd-7333-4b6c-ad46-c74ec7ed2f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 56bcfe3a-9348-4d96-abcf-1fb6387e485c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 983a56d3-0699-43e6-8adc-cdc72c30d2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 ccf454ce-9914-45b3-8b1b-a848550fe791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 c7ed68b1-0a44-47c8-a379-0827d34fb3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 f7c28a1e-cb6a-41fd-b3a0-bb423c762f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 1a733440-1025-4d56-a83d-a85d6ebc92b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #663 15fe4ab2-c4e3-4b22-a406-04c7825f2e20)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #663 5d0fed8a-0907-47b0-ada4-b6e186e4d82a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 2277e1d0-5055-44db-a725-f466c9e3c440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 dbe3ce99-f87d-47d1-9600-ca06dcd025f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 74fcd5cb-59c6-431f-aaf1-77f357b547d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 8724f34a-018e-4d38-bdd8-648ff982a6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 851e91fa-fec9-4f92-8891-a509ffc189e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 985f384e-0b3a-4cae-bb0d-c334b1e10070)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #664 c1edc130-2e24-48f0-865e-648025d09ea7)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #664 976e0bff-ffca-450f-82ab-c99c11999376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 6510cd13-0f7a-43f4-8845-a99e757a876b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 b2a2d5e9-7f4c-4214-8709-b75e335f9c95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 1f343607-d609-4a9a-9f80-4c8d22a81d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 730fc424-ce57-42ff-9e10-7429b3f30e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 194322f1-7aa0-48e0-a16b-2eb77a648f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 ac682c69-7759-422b-943d-346142624f1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #665 5d93737a-28af-4834-b663-780ed4442132)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #665 ea839963-4761-41eb-9c91-740046b410e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 b2c17f8a-6169-4773-a5ea-2a5f75473896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 dead326c-56ad-4cd4-a66e-69119fa4fb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 8c6aa03c-b136-4483-9502-81a33b60dc43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 46672ceb-e3ec-4bc4-a53a-b0a5c864ee92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 f6e0a8f0-e65c-401d-b605-b490ef2dd725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 3e3fac73-87ad-4319-8f70-d03d8c026083)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #666 d57d5d9a-bee7-4474-b51a-b80c386b08f1)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #666 3f374355-b713-492e-b7d8-9560dd6ff457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 8b5a5f73-3b8a-490b-a57a-12bcd4418b1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 f721f3be-e325-4000-9e8b-aaac75faaf01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 8b471c1b-e667-4612-90e1-70b5048515e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 21aa8389-cffd-4fc1-b411-d9f0faf3070e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 32d664f1-1fc7-4bc0-ae9e-a47eda5705df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 e5180683-d21b-41e3-a149-a03aa9d90807)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #667 9fce2bae-d28e-40ef-8fda-a1061f5c80e6)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #667 fbc3dabe-e048-4cf2-adfe-51f879b0f02d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 f53db1b5-63bc-406c-9527-8c96a0ee28c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 a46e0a36-cb42-480b-9165-83cbaa872c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 9e51b90e-c285-41fb-bf21-80301a9dbed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 3cbe1035-deb4-42a4-9736-85b05b7abffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 2a50c92c-10b4-4025-84d9-da876119380b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 c02d67f8-767b-4123-bd23-8bd6bb3dd482)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #668 44f5d6ea-dc36-48e9-b689-6343cd604e8b)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #668 a74e6d74-14bd-4bce-ae94-4ac81db10ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 cd45f1f6-82be-4f10-b6b8-48ae423440a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 c4096584-360b-4990-9146-a166f7ffdfce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 e54f00e1-a716-45d3-bc15-8ed21f806822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 16757b3a-b9ce-4cf2-a16f-82aa7b0467c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 a5b1ba03-689c-4fdc-a5f6-9faee8ffa1be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 529b485e-661a-46a4-ac52-ed298967d4de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #669 901f676a-73cc-4bc1-9784-5411e098ed0d)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #669 dacbecde-14a0-4ca5-8840-7a217dacc4c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 7044d303-a014-432a-a5a4-a6bd4df0f234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 93f2e0a3-568c-4b8e-ad52-e128fe24a6d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 488ed600-35e1-4aad-8df5-2096ded19b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 9ffadb28-de53-481c-b233-1e6a87350a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 69ed6e96-a280-4e4f-8680-7542e4534d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 b3fd5fd5-4205-41bf-af6d-eda230c6d0b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #670 4f61950a-6c8a-4cb3-9440-b93ae460030a)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #670 47457412-36db-411e-b685-d368178849f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 1a9ea264-82b2-46b4-b186-5f77c4423788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 acc406d2-0504-45a6-abcc-19b124855f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 5b8636ad-03d9-4170-afad-6dcec73931e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 6090a690-1fed-4bd5-b10e-40052d632ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 95b611fb-1ed2-4854-bb24-3753a97f8456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 3cf78f3f-74f4-49e5-96f3-d818169fb9f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #671 413024f7-cfff-41f6-9400-3334f9bf55f1)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #671 ebd20752-925f-4399-bdb0-988f01c420fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 8f87274a-2ac9-4c10-a00b-d3884ccfb55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 9fbf74c6-4de9-40aa-91ed-ce65247217dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 eccd3501-f74e-4bfb-b8b5-9098c47e7968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 7a887c22-31e8-46d5-ae6e-c9019c0e73b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 fd7b64a7-4560-4fb2-9769-47645d3695ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 b860550b-ffc6-446e-9aca-6bdce6607397)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #672 c399feeb-0350-4a43-895a-20a1a54c16ce)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #672 98d52402-eed6-4cd8-94cb-234f04228d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 ce8bf43b-5115-4c25-8988-ec023f861362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 7495a6b5-2b06-4282-9e95-8035f62be023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 231105be-0f25-4499-a7a9-7e59951bb78d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 a2d78c2e-c6c9-437a-81ec-8d4c2079e030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 99653367-4960-4a1c-939d-a647f1440d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 492b76e0-bd7f-4012-8401-621122435d6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #673 99278acc-636a-48ff-a006-df4993fd99dc)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #673 0474a7aa-f398-49e9-9b7f-36cb994bbea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 b4f21e79-a73f-4f46-a765-4d36a806f6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 db340bdf-6a46-4ca2-9121-3d9d94b3dba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 07a75428-024b-41d6-b74d-4e9fe586dc6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 714d39cd-5211-443d-a309-2e0ca09f921a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 fe94a51b-ac95-4d69-a6c0-056a7d6ec164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 fae59464-a5d6-4e02-bb4d-3ebf2c8f720b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #674 67eccf9f-b075-471e-b084-70fe84eabf58)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #674 ee216bac-22c9-4fbe-bed9-ab178ee743d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 71bb3669-7d00-4997-9b97-618c6917caa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 e273afcc-b291-42e0-b566-8c1df3c19bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 7494fcbd-2b50-421a-88d5-9396141086e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 b5574e06-61b8-441f-a5f7-80848c10340b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 39392552-2af2-4ba2-a8a1-1806cb7d307d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 791d7664-c762-4ae8-9586-5c7231aede13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #675 ad246811-b4c7-4c24-9523-c41619592e78)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #675 e8eb79ef-b20d-473a-b7b9-14cca80f0f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 1df8d267-0656-4915-9bae-e309b346ea3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 a47b8c1b-b39b-47d8-a54a-e5d2759a3abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 70260be2-8437-4a01-8b6f-a28fa6db8f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 884a7ccb-d77c-4192-9e84-aa146af0378b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 f60e296b-045d-450b-92a7-b617dde67f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 ca2685e5-cfcd-4940-aaca-deb2e1de6ef7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #676 e90f43df-bb51-457c-94e6-57f809f7673c)");
unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #676 360d48f0-44ee-4b8c-9073-7748ffe50fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 99d70ddf-c542-479d-9f36-0ccb92de1f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 9ae630dc-8de7-49d4-8543-93e6c30a1d9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 8755ac16-1410-4d25-8e91-03772f420689)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 23ef645f-541d-427c-913f-9239af819e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 2932d1e5-2af7-4341-821a-1cb23f05a9dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 9780ccfa-0594-4b44-8b76-e3e52ff839e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #677 9f023cf3-2f16-4731-b86a-b411d799274e)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #677 8ece3f29-6bbc-443a-ac69-29b67f260e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 a2b1eccf-8088-4057-a493-e75e902fa6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 3939e11c-a3ec-4733-a512-f274554c0b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 ea8d05dc-aa35-4287-b631-b7125e3e1f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 61d3d59b-c0bb-4d15-811e-e491c582e669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 eaf9c925-216c-485c-a474-29c4f5a0d533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 52c00ab6-4d81-47cc-a311-8df357418c39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #678 9eda8375-783b-4354-bd6a-4131b3f40ef6)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #678 be18437a-f0d1-4ced-a202-e1507fb936a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 6964a3a4-3197-4f35-bddf-ad6f6a6f6f17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 bd5c9b70-e93a-447c-b39e-bdb7e67e7bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 d3fae684-ff46-44f7-bee1-36bfb2006dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 7fff49bc-1a95-4c8d-9a3a-619b21b374b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 a6520e92-9295-4944-8d83-9f78d60855b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 0b5b41ea-0ad2-4a42-8866-347071c16f2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #679 db983e45-ff6e-40c4-b0cb-311ebcd13544)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #679 c82720c6-5e35-4a23-b2b7-5178b9809b01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 dfab080a-1f89-46e4-9f66-1a720fec547a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 f497a1ae-95b4-41c9-80fc-5c423ca1c0dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 4dc3033a-7c56-4ef2-a170-8853d0521a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 c70b6753-544f-43cc-97f8-ff8118453210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 5aebcea3-a472-44ac-9bd8-88c33a437a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 8db7ceca-f232-42a8-93ce-82c245e49694)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #680 d1fb2f29-5718-44f8-99a2-311140447273)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #680 cd8dab58-8593-499e-88c0-67a400ce5e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 7001c7eb-abd4-42de-8b5c-327fa72fd0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 0f41f56a-2cce-4836-b7e9-971e96735d57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 64513b11-6970-4d72-b3b4-cfc38cfff410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 d02bd63b-de4e-4a05-8c50-ec6a99182468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 7f059c2a-4116-42f3-8d07-44b4333e9f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 959d72c3-6efe-413b-b499-01ac5b55df48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #681 a3256b0d-781e-4fa6-ac42-1159220b6216)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #681 ac6cff57-bd54-49a1-9990-21dfa188367b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 51eb52c1-3c06-4607-8aad-c8bcf8f3505f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 a935a000-b382-4199-9d5e-6de46346c297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 a25a42c8-4a00-4f47-9880-247419cdc2e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 2aaf0975-2bef-4e13-85a2-313bd1dc00c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 ee74bc13-1228-4c0b-99f4-179b95e51dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 4530bfc0-c140-40c7-962a-bd017c3ec37f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #682 4973c10c-2e3c-481f-b73a-50b1b43fe4b0)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #682 8fade746-a994-47f3-a6ad-dc2724ca3bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 34981c0f-e359-4fef-980f-a6f83de86b2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 4d073800-0f18-468b-bfec-dbdc38fe2882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 38361f2c-fa42-4049-8a64-16a0b9e181f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 624597a8-6f56-4e16-aa73-e3c9370c5597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 e5cc8dbb-35aa-4de3-b33c-a6c3be67bcc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 f8af0c33-d5cf-4f15-93ff-a283517acf96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #683 dfa79750-db84-477f-938e-567b92564a38)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #683 8ad8661b-6c2b-4f7d-95b4-b8b8dcb1fed3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 6d5655f1-0d5e-4969-9461-383383f8a036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 92a9b757-c29a-410a-a7c9-415e32da3718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 b7a5d500-e682-4827-9140-8b87153375ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 9a614b0f-346f-430f-81d9-15023bc97b14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 4a1bfe6b-85bb-4cf6-9f9e-9722925e9f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 910619a9-c790-4396-9963-c624247cd6b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #684 d3a682e6-dfb5-4da4-a328-08ce3f8252b0)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #684 c036ecf4-6774-4b3f-bbf2-312efd0f9ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 b7aad0da-be16-4bdb-a229-b6d0d0a1bafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 ede4acf0-bf06-4039-b816-5ff38af9a79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 892c5ab7-dfaa-4fc8-b0ec-76e425f99b83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 a0d206c4-5503-487f-9049-994e7e68cf10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 02fbfe7e-c64a-4d2f-8221-dbc023e5b1c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 c4a485a0-dd70-4407-b81a-83624d71a933)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #685 2faf62be-d28c-437c-84e6-931ab316d34b)");
unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #685 d6632be0-9da9-4fc6-8cd1-6b49aa906b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 2d0e0a9f-d7c1-4b80-81f4-6302816289c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 dd7de5a4-1ddf-4651-a07e-03dbfd8f331d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 18971f6d-5f34-4f7e-872d-fe5e49e2b0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 ab576867-ca55-463e-ae53-8b0bc69d92c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 f36492a1-1859-438c-9978-ccff050bbeeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 53cfcf8d-aa96-49f9-887f-1be491777a33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #686 a1f39319-8177-4a24-8d1f-132819c3214b)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #686 748be703-6906-4761-9bf2-59bd6405e891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 43dec3d8-1d32-4163-8d8c-746d3e2baf76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 c3de75be-5a1f-4382-b96a-f12b93c4f653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 097c555d-1c38-4053-9a38-f199b0d68d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 87943618-e0f8-4aa7-9172-b5f013e9cd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 001cface-1e95-4024-a250-9e842de78f7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 909e55f1-34d2-4037-981e-8cb9ee139d74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #687 fb42df49-1110-407d-8e81-60ddb92d31a1)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #687 37ed1b59-8ddb-46bd-80ef-a583436bbb66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 15a6605e-70c5-4cdf-870a-22ce175b0e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 8131dfb1-8f55-43c6-b7ec-4f0a4cae9499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 601da028-b1b5-4bc4-8ba4-dee59df498ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 57099819-7f1e-4cbc-8ccd-80cfae5910bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 0ff50e8c-527c-4add-a5ff-497629dd07c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 d57d5d77-01f1-4112-b736-971423479bf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #688 b95372e7-e972-4da6-a1f7-5eb48a81359c)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #688 0bb905c1-b628-48a9-aa40-ca544d096bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 4bf743be-4eaa-486f-9abf-8930ffb8dd1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 a38877ed-c462-4d41-82ab-eb59427c3bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 c54f7f91-aa83-40cf-ac76-1dd2f1d6bd85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 fce30a88-f91a-4531-a28c-f4cb95504537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 13b3bca8-fe77-4e4f-b876-4ef4ac4ad543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 0e07c171-d2f5-4e13-bd41-15cca8740770)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #689 98ddcf96-2750-4a90-bcb7-d16a34005671)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #689 cdcc74c2-a17c-4543-b759-e03792d3c8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 af81d664-24a4-44e9-8d39-83ca3fe91683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 6e9ceb20-5f7e-45f9-a1ea-63a29d1e725b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 a1c1e92f-d509-44c1-a16a-9c27a8139822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 657cb383-def2-44dd-b6db-ff81e83273a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 14575fb2-7d04-4c67-8fff-f104377aa725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 1e558ff9-78b0-4b29-a633-41a0966da12a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #690 82518899-d60b-45b7-b574-b00e9b4c0555)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #690 42f6c11b-5013-4553-8863-a7759d2b5369)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 2b34a5a8-3826-473c-8396-0fb99ed254ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 ffaf5d21-4658-4c3d-8a5b-fa80f694ff66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 6e2f4f67-b498-4cf7-b47e-a0fdae46ead7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 239d9573-6b4b-4975-80c3-739df110cc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 ad624b67-9aa4-43d0-b42d-71f4eb4f9088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 71eb1304-5e58-4423-ad48-14a05d1d0ea0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #691 03bedb46-e3d2-40d9-ae95-b8120fa41387)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #691 69228b68-682a-4118-8087-85dc69baed75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 b85bbfeb-d9ef-4da6-8ade-97abf98d1081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 ce77ac8d-1bb7-480f-9baa-243d19cfdbee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 7aef9b67-57f3-47dc-aa2b-e5c1ba1c7bd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 d6d7ad1e-9116-4bde-b7ec-8c3cd29c11e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 5943f5f2-3123-4953-9f03-918188d56bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 1293095e-baf1-47cd-b252-78cb6a65630e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #692 471b18f3-dbd9-4a84-9f07-eb0f154d383d)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #692 ec4bc094-a5c2-41c3-9a79-5ea51338d2f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 0056776a-c3d6-44c8-8648-d64f2ce116d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 3ec0cc02-5d68-492e-8dcc-3c9126109422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 8018ddeb-4798-4375-bae2-ff54e01b4f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 102bf28a-77ca-4b3c-82e2-f850f5dee029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 694a606f-a1bf-4c8b-94ac-42610db6bc9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 fc72f2ad-663c-4d77-ae39-dd58cb8b77e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #693 016a31c4-875f-46c5-8893-1e8142bb859e)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #693 3cf4880b-f770-4f7d-b0bd-c324db365fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 3641c0b6-d4b3-44fb-9fe0-a389291d311b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 e7698225-bea1-4e4c-af81-959387b8f6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 72c2ae03-3908-4d9a-a006-42867115721a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 d1095f6f-7245-41a9-b4be-83e4f6d49d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 49d7409a-6182-49db-a6a1-8dd9843832c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 ac0ac79b-2ad1-4ff1-b9f3-86d7063cdb3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #694 0d4c8612-7e68-4ab2-b760-c9fcad52dc99)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #694 e1d8e36e-a7c7-4e83-9e71-7a74b6bf10c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 6f18811d-76dd-4f42-8ee0-f2e94a1aa8e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 a766c6f8-6491-4ba7-b91a-d48ea54a8d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 90727c9b-274e-4a41-a927-322ff920db28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 a479fa35-1f1a-423e-b691-4561401af4b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 1103a609-a75f-4d9c-8b3d-d1d076d23d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 4e58b568-a57e-418a-9363-4752b3072cae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #695 8d17922d-7372-40cf-8c99-bf6a33de41c1)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #695 f1b9bfd9-8662-4c26-8aad-976c023ed6b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 6afd45df-ef71-409d-a5a3-c2be8121c3bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 8e4e57a7-ffcf-4c83-9635-9d7b38bf07bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 0efad1b3-cf11-4432-a5c1-63f73c2cc76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 e338c1dc-efc3-47a0-97e7-ba71a7a46f76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 3ca0c50b-1d11-461b-98e5-b7be6cdefcd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 11b9a119-5492-47f7-9a69-65e0c8f3a352)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #696 a95ba1ae-6e9a-4dce-9bf6-360fc80c8c0a)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #696 bb96a59a-d875-4beb-a3a2-3bc562f425f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 0ca2f9cd-dd38-4001-9787-f9d8a6fa6fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 b5a24eee-6c38-4493-bcc8-c09d9914b115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 9f284f4f-f62d-4e4c-88b2-4d1da9c9867d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 bd795fd8-4125-4dab-af4f-d9f5c485ed7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 5534fef0-0a9a-4cbf-93da-a37915224101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 55b27c66-2299-4cd4-b8c2-b8eeec1392ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #697 fcdf4712-ae2c-4500-9038-06fa200db397)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #697 8c511737-c0ee-4fa0-b4bd-2e0d10e41532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 c7e20104-57fd-41e2-b93f-1b59b4857636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 b388c3cd-8fbb-4cea-a57a-3166489ac260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 bf524a27-646d-4283-889b-04d3816d99a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 9a79dd22-11cb-4ad8-9360-d6849eebc2c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 ab4513a2-15ed-4d82-848b-04ffa75b3587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 e0de6dbe-9079-4bd2-996b-8fcd22d813e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #698 c0cce322-a810-4744-9a73-97b9195d564c)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #698 f7c9ca08-2d4a-4e32-8e25-a4da3783ac57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 e5585d7a-f27f-487d-9a03-34f68895d734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 95f17c18-20dc-4904-a247-878b20629bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 805112ad-adc6-4ccc-9fc5-13ee3b6498d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 992b072b-fc7d-4c75-ada5-0356f4409bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 dff346a0-58b7-432c-8247-37da247f6047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 00bedd82-8bea-4851-a56e-c81f88691082)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #699 ae2759ad-0e48-4c1d-835c-8b615d337a49)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #699 92fe3952-5047-4917-8989-3a11e499c411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 8657c2ba-6d51-41e5-ad05-181f046e7528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 b832c26d-8dde-4f04-8502-fd3d594fa32b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 60862382-b7db-47b3-9c0e-23754ab6c825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 8c29e849-9844-4702-b662-17dc189b6564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 b049f742-4505-4992-a48b-7cd3f59a2a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 60dc5c94-04f0-45a8-93b5-65c23017f994)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #700 62a14d30-d927-425f-b5fd-8ffc5b33b6ef)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #700 a42ba229-4a1b-4088-a954-af24d1aab517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 abc1279a-9119-40c3-9b66-0e1e639b8a91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 023f3f36-f739-4de3-ade5-c931e4b79cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 390631dc-9d32-467e-85db-28f075c2430f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 df9016e3-3a8b-4265-a34c-75a13c0d615c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 ec1b5ed6-e935-4e3f-8199-8d3a0e3421f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 bf1e8a8f-aa7f-4f95-b165-ff1d74c942c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #701 8f198918-acdd-4cfc-8af7-c0749379655b)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #701 5e208ded-33eb-4909-8932-f3893d23c58d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 f5afe301-18ce-4e26-970f-a2e3a8c5f663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 34bb3031-5f9b-4aff-8cf4-41278f64f46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 c2bf1233-1825-4dca-ac64-d8918da30fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 ef3e5ba2-c676-4139-a825-16abb81fbf1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 c268ad12-98d3-419f-8755-0cbe598b8c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 5f3b9e6b-5a21-4097-ae01-3575aa679e48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #702 92b7e7f5-50f2-4b66-8ff3-9e7d5093aeed)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #702 3ddee6af-baae-4e13-9959-e0246bd3bc26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 0b56cc25-16a0-4d01-8c2e-5707268f562e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 0d481df1-e0ea-4d71-8ba8-708ef237eab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 ab247bda-97ed-47ed-803b-90c0a729f790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 89639454-e299-4393-a81f-05df2c98879a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 f18f0178-685d-44e4-beb9-7b8906122012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 eac6293f-49c0-4ff0-881f-83ed8a3f888d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #703 83b3edee-62a9-40d0-a3e0-e5d71cd0f016)");
unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #703 80e9c7f1-b743-4ce4-a10f-847a87ef857a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 659bb31e-59f8-4be6-92b9-e952aed7811e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 911274aa-0e0b-4e25-889a-314e296faec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 cdc0be15-6f02-4f99-acaa-a65866d34259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 c9a900cb-0ce0-4f03-863a-8204ced7b31c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 7086f250-e60d-455a-aff8-cb67544aa368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 e7f6e572-ea32-4983-b21c-d8298d7d2614)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #704 a2b46483-1dc5-44b2-814d-bc13026da791)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #704 229223ca-caf0-49c2-a2c8-a1971c8183d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 0d39dce4-b46a-4529-85ce-73e398001605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 e6bfc602-5419-4605-aaaa-265b7fb8f1e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 400e98e6-62a7-4d3f-b13b-90b1140adef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 c09425da-7f3c-4f13-b13b-1f2c1359f029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 d91f31f3-5b35-4ac1-99d3-dcf90b856868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 ffe7be3d-5b3b-45cd-a59a-edf9ed37955f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #705 453de860-7193-433c-a61c-37e5afcfaa23)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #705 98f26803-e14f-49a0-9f55-7f681bbd688d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 76d37719-2c6d-4a71-bffa-634fdb964b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 cda3ff3d-d567-49e0-bcb1-cc78d06c0c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 6e64389a-a1f2-4704-bc24-e4da1da7b2f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 e0b66fb6-4980-4276-942f-cbcfd95d2088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 fa6c36b7-def6-4532-8b46-87c8e6aeb107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 be1d7771-5e08-458d-8e3c-1dff01854ea2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #706 c4a09318-f905-45db-91e2-3c489e14494a)");
unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #706 0903ddad-d29d-4a93-aec3-c139d388fc02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 989418a1-8cce-4b32-b6b5-2d8dd6448a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 0b9351da-16d6-4164-aaea-7f6db1f88361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 91116078-2e2a-49d1-9ce6-708024dab1e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 fcb34be3-193f-40d4-a745-410afb034ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 bb4b43a6-9394-467e-abd2-dc531ba115ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 21757b34-314c-4d4c-bb1f-83f9a7c78387)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #707 5180832f-d815-4b16-ae43-d16523b81c63)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #707 6e193ae8-1424-4a6e-8e67-faf2b4f6c4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 1d6f829a-aa53-49be-9afa-8087b5348cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 003ea2c8-380b-4f3a-aac5-577ceda8824d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 022f519e-58fd-4711-a161-c8e747cb7453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 f6f75648-940d-45eb-be13-5153c8358da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 eb8c32d1-5668-4916-b93b-889e5f514aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 c2aa72b5-3227-4ee4-a162-7049ea08eb13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #708 f4202592-94da-446d-99bf-d23cffe83e19)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #708 7105c151-f421-4bc6-a641-33087ea50b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 4dc6a95c-34ab-43f2-b44a-33ecc2323a2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 2d3897b6-a848-4d7a-9a29-438656eaeb8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 eb685466-2af8-4a45-ad96-97f55a8df929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 bebed827-ebf8-48df-b2cd-2d8a47045a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 0f4b1abb-ec2d-4eec-a3af-69688534e217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 20212a3d-6d06-47b6-abca-19a352aefbc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #709 57aa3e18-76ab-4735-8dad-5d7359a27d34)");
unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #709 d35c6764-e6e9-4a7e-8124-22b429076f1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 6802416f-119c-49ac-bb27-5098abcd2cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 5ee25803-aca2-44e1-9dba-4282b19398a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 59c56c74-a35d-4542-a13c-01995220b542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 ee8486c0-ef94-4e47-af23-1871d8cc9461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 e17a0c16-ce6b-4a7d-b5e3-610fae209731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 ab19a1cd-edc8-48c7-93f3-73be63f9d72c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #710 a417a004-42cc-4f90-8760-126b86c333c0)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #710 5eadd900-645f-47b8-9bbf-192c80fd2976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 fa9b8550-a2fb-49a0-8faf-8e50520475c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 59ea487c-0a80-4f42-bbd1-34341b864a8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 a5c403b3-82ba-414c-aad1-73136b044a15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 d32ce89f-6c49-40ce-86ff-7bd1670de8f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 94060d77-3b48-43f4-9da5-191995d88979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 0ee17091-fb5b-4fa1-a3a2-63b0722d7acf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #711 38f7218d-2597-4ca5-b318-613a98b996c3)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #711 4bb1b26e-757a-4814-8809-180ed47c831f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 0db488e8-1e2b-4b61-b547-30f14c030804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 85261288-9a69-4b29-af83-890504c5dd0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 f7d24911-772a-49bd-8b8c-aa39eae38b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 1b86f1c5-fd1e-4254-ae6c-278b33a49e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 ae0f86dc-3b29-4d7e-ab72-084aaf9327ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 786fdcf9-f2c2-4a5c-a8d3-a750c873f93b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #712 1b7e2e77-0137-4931-91d1-1ef8669672ec)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #712 53b2d6ca-5028-4792-b469-4e629f9496a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 41009986-0b45-4709-8048-f5fc71eb2f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 ffa66e2a-4098-43c9-8ed5-39981d52fe75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 c54b318b-0133-47b7-9f0b-6416ce39ef79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 6a497565-efa2-4af0-9169-467591c4352c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 2ab5f11d-6eab-474d-87b8-fbeff3e06154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 e277b689-42d0-4466-8781-c51c23992030)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #713 7264691b-c5f3-47c7-9f72-14a4a841dba6)");
unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #713 bf556296-f12b-4cf7-8e26-48a8016cf952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 e261a164-48ad-437f-823d-91592b6db62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 c8973b90-40c1-4e0d-a877-8024dfc60526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 e9e0d724-143f-45a8-a691-0196fe6d3533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 a30593ca-349a-4960-aaf8-beea018758e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 51019ce8-725e-4c0d-aaba-d0160cf47f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 3e8b9c64-52d5-4934-9564-67595434732c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #714 338b22eb-1030-48dd-95bd-9f4c73f05811)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #714 60cd74c8-3a02-46f7-8c84-05a7dc5c3805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 eff9f7f4-7f39-47a5-bd69-fff6e3d69ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 b11f40cb-2066-4fc3-882a-397e03a9cdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 dec4d4b0-3969-4562-9574-4f9dcbd3561d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 bab7de8a-4053-41ba-be96-3b6615ba09e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 74a65a72-6937-447c-81e3-badd3d3ffb94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 68b377d2-9356-4cb2-bebf-52583a832ffc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #715 9e63fcad-e26c-4165-bd79-3b481eee3726)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #715 8edffc9b-a452-4a99-84d1-d910b323bf15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 bdbc5370-823f-4afa-b6ec-85274c067f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 308591a4-ee11-4020-9754-2b0c3e3e508d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 429749b0-a34e-4afd-ad23-cc1d0893dc81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 081e3046-5f2c-4597-bae9-534fa14f17e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 e5531772-436b-4f2b-a3cd-8b5394394d81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 382c212e-e1c7-4cac-8945-3334fc94a66d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #716 2303ec78-eae9-47ff-9506-2296eacb0b06)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #716 7784c6bd-0e50-4d99-a53a-c23a4c9b4a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 e1be4cf3-b3a8-43ab-b724-f33fe2e6a5e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 5dd805d5-f60a-44ef-9573-aceaf3c83cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 4f7a6fbf-1066-4ac0-9dcf-79adc2d4581e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 ea684465-0eb2-4a1c-b777-e3666aaa54e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 ccfad915-f256-45c3-ab06-a8cf05025be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 4a519d9a-926d-433d-bd50-35abd36d1298)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #717 062415fb-50a1-480f-9e7c-fa24029afca5)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #717 d6a01d83-8e10-41f8-b7f6-1311a03925fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 db51518d-5814-4c29-889d-d8c7eaaf5427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 be2d6ec6-1dd8-4d94-aa9a-7018c7cd1b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 5290da99-b4b9-4835-ad90-4f58f38750e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 b0c2ac11-2b23-47fc-a073-d547aba14942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 171531e4-cad1-4924-91ba-44186e861690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 0df39f34-e04d-4498-a67e-123d54a67a79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #718 00a2c700-a423-483f-a077-97ea1f808c8a)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #718 33107747-400e-410e-9e8d-09a6326ffde7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 6de38064-b8a9-4bf7-a7aa-2a8d15ec8eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 6513f19c-2b2c-4672-930b-fa065b72e6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 e7ec2736-a8a9-4ff6-bd1b-8aaa151213cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 d51ecfe9-bb4a-4344-9d88-88444c564c25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 f3804ab3-1069-4b61-9275-8db91edb5abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 9cf558e2-d5ae-42ca-bc90-c491c5468d6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #719 cbe3ff83-ab32-46f2-914e-df9e8d4612af)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #719 c0a99627-7d7c-4b3a-803e-1fb2dc1609f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 3f2982e9-ee8b-4b27-aa6f-99728766dc42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 8f1134f6-8ae5-4869-bbe8-90a6f8f49636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 9029d790-12ea-48b8-86e5-b40c0fa115c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 210f5692-afce-4f1c-a391-f7f819cb1f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 1b80e9e9-02d6-4095-935a-388aa23e8052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 b7d04ae6-7716-470b-87d6-58c5f45711fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #720 e90e1932-cede-4f44-a379-285dfd101c1b)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #720 170960e7-74f5-4433-976c-bd3be56e2bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 3e37db26-1053-46b4-853f-05b20ef9357d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 552d8b97-8627-4a8b-8bdf-f86c83da0a2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 a7220e79-3665-45ff-859c-d6d90e703e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 393fcbab-f044-4d71-8ed3-5aa116486a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 482ac013-a1c9-416c-9dcc-cd8ece7373a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 5d2f2139-3413-42de-a16d-7d7289d9c95d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #721 6b17b85d-525e-4c89-a9e3-12777611d402)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #721 30dbd672-ce4e-41aa-8f3f-d744f87c9764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 cf2d5e02-c673-4bb0-ac69-dd37efe2f977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 8a42ed1e-ea56-433a-a054-bbc56ad99219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 7b2e4000-c06d-4af2-91b9-453d9d05cb81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 ca05332b-c760-4987-a306-ed21de1ee4c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 a5936a3c-8b51-429a-b0b9-0de50ac6e9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 1c36ac70-51cd-4021-a5c9-36351353d721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #722 255a3b43-73c8-4809-8471-ab0576cdef59)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #722 79ec85d9-1b74-44ed-9bce-4df8bbfe3fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 8e95dd0a-c632-4f10-89fc-cb910eb4ae09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 4d72e813-9ff7-4a79-9bd1-1c35afa4f446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 97882625-a2b8-474b-88b7-3fff42ebdb0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 ff88b71c-ef81-4ffb-9515-1e09bf132a64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 8a585b54-a9bd-489e-8824-9d671ff13c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 08371f2f-af68-4d7c-9cc4-dc2fe8deb144)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #723 7da29ce0-5ebe-4518-b51f-1e87e317b554)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #723 3197aaf3-07f5-4c88-9dde-ac66c5e99fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 71131573-f8a9-45aa-af14-3bc60aea183c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 2eb98802-f1de-4b2e-89a2-165c53255db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 2f7ddf6a-a763-45f4-8049-02c5f9c40923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 13b16a3c-969b-4798-aa44-1295906685bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 1cf70265-0dbf-48df-9821-dff1db59fb96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 e8ce4013-81a2-4257-b0d8-dccf857601ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #724 9b28dccd-49fe-4d77-aeae-708cc26457c1)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #724 f0e087e3-9e8c-421e-a0dd-0e5b32389b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 30b2720b-d63d-49ae-81af-b0aeaa9dbffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 30e0c908-4022-4e89-9d43-c69b62230901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 2402aee4-6944-4bbb-ab57-8d1bd2473b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 a3e2a741-6f29-49e1-abc1-ba330a5ac1d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 eb40fef4-2407-404b-a9bd-b9269f6fed9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 d6a6c3a7-95f1-4a74-a0be-fc1cdb714160)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #725 e3de0b23-9607-4ce1-ab3e-d6ca12569941)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #725 4e5aec7d-1647-4ee6-8f03-d01ad2834ba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 03bda7ea-608f-4595-a67f-ef31ef9fcc0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 22f72a3f-c0a6-4621-8ad5-18fac4401342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 690c5f1b-b5bd-4813-a4b3-1212bbebea76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 63268f59-6190-4d84-84c0-8b52457b9d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 f050a3c2-c6a1-498d-8fcb-003668582203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 9b060a7b-8101-4f47-af89-9b9f90c49535)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #726 ae1e4ad3-9588-49c8-8f0e-708b64dcc974)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #726 d0c0d70e-feed-4c6b-a03e-b8c79b1a50e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 fc8e106b-9dab-4911-8ee3-b0dd5a06e006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 9d783501-1633-4e5b-938d-0f4ca5f19ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 ed7ed13c-b39c-4790-b84d-2c0dbe988c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 18141dde-b519-455f-82f6-95a8d28d1407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 745959eb-48d1-4677-9d9c-3350d75b41a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 f245cd66-6247-42d7-a914-a258188f5d5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #727 04ef5956-5252-43b9-b022-a57ce04afc9d)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #727 d71e7bd7-eb0e-4b84-8dde-d8d312539676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 6ea1154e-ddcf-45c3-9cab-48d5556452f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 b676439e-8459-4231-9a43-64331739ad8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 09b1d487-137f-47d4-a793-59e2ee178d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 8c86d88a-2173-496f-a26c-39f4578cf55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 5b109359-5399-42bb-a587-23068f6bae2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 9760040b-10e9-4b09-ba9f-5230e5541fe8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #728 0535ad28-4f04-476d-adec-80e5a1e3f2ed)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #728 a201f401-c049-4de0-8835-69c8b8568acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 4522a6ea-150e-4d00-8bc0-6661cec618b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 d4c919ec-e15a-4e4d-801d-a53716442898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 482cf2f5-c090-4eee-a7f1-fb94006427d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 24152dc1-c071-44d1-a731-51f10c1c74af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 3bf71c05-2193-43ea-a8db-0c4a68327ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 ff969bb4-1b9f-4734-8ad5-5739b6f8aa74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #729 0e69dd70-4df0-456a-894c-fb7cb680f720)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #729 f59fed27-ed3a-4e09-b680-57a018844fc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 35d0882c-3168-467a-aef5-ab7bcbd4a8a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 cc2c6bd5-fef8-4a0d-b6a3-26e2ae1e87c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 85dd674e-1950-40f1-b884-44aea35f40e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 88b74d59-5cdf-446f-8901-53022bdad59a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 f012cb35-1e25-4aa2-aa37-319ca11fcdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 73e98cdf-37ae-4bf7-964b-4bedccfe8073)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #730 4065e860-6113-4671-a252-3026a52cd98b)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #730 65f332a9-3d5b-4d39-ab3e-7e15ec701465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 72786348-bf84-4b2d-9a93-7c52c1ac9c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 453666b4-aa1c-436f-af38-56bcaf7934f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 59d55648-c5a5-43e5-b092-59caef723770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 1a22b366-442f-491c-a216-4cf609b50ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 0cca3f10-7a72-4aba-9272-393bf89db32c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 812b1baf-152a-4cb6-b262-6dfa9e5c125a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #731 1dd4e965-04d7-4f9c-b9ad-7e1fbf9a7185)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #731 cec0b446-c1c4-4293-9040-686b7f458bd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 c0c47c0d-8835-4893-9596-6a8abac8c38c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 2475f09c-8844-4a94-9653-89a53553151c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 ab3fbfc4-8dbc-40bd-aa19-907b4625963d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 78e9b102-2e3b-4b5b-ad05-e7f13dd9e219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 bdd4750a-ce6b-4ba8-be01-5d132859e455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 f7017b8c-e5c8-4558-b461-23d1349bcd33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #732 e248a413-aac3-4796-b5cb-64cf36fe3dcf)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #732 e3f389b7-8510-4409-9631-bbdd041209f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 05a90d52-879b-4f4b-a283-c240a2c9f039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 6ce0f199-ba89-4495-8667-e25e2cba1abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 3c0704f8-7ff3-40bc-a2be-e2b5cb94b2d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 219d6319-b014-47a9-93ff-cd363697e5c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 ef31f5a3-e82f-4816-9e58-776e3b9c238f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 bec63592-e21e-4a75-968e-4a99eed4d668)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #733 b304fcd3-94ac-4a38-b5d6-003e5c6d395c)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #733 8ad1815b-784f-4159-b494-a132ee177425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 5b0ba0ca-e3f3-475c-bf33-15ba0b0ffc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 9730ab0f-16ed-4b09-8473-0123f854422a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 10909071-6d68-4707-9b7a-2cf8ca547efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 beed2aab-3b71-41e3-9757-57e7ea99e1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 62e980cc-a85d-43eb-a7a2-ebf5c7503163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 7a81a44b-d7d7-428c-928b-925c4ce6ea61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #734 52afbb0d-ae5e-4c2d-b361-36574580470b)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #734 0d7faf6b-5214-4a55-952c-46dc710c53cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 a2d59414-1a11-4633-ad01-26712c10c360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 58b287af-3944-412a-89e5-14ee101d287f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 d8686c98-7568-409c-81b5-0fd373d4e970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 c62fd2be-a5c5-4f53-b6a1-e3af10b9dc70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 f8dda1cc-6f8b-487e-8ab9-cd74883031ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 b2974c78-07e7-4158-a485-b586a1725e32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #735 3b216f67-c273-4590-8b2b-84fb98fafc07)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #735 ef199be3-c94c-4091-a678-9dcfdc0d555d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 7f77941d-9e4a-4c90-8997-b422ea8358ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 127985ae-e36d-4435-b542-2e30d5501104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 4592b2dd-bf6a-4385-a29f-0d1b5b601600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 bf9744ba-4685-4ecc-badb-1f11dd0e7fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 9dcbdba9-a8fe-4796-b6bc-82312ddc27fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 a5424525-a7dd-428c-bbea-d4bc0f1db1d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #736 91b247a2-de7f-4712-b972-cc4a4bf55790)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #736 79538c02-cda7-4201-8c12-20ea2261829a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 d9e89f2f-2be5-4cb6-8843-f877cacc5e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 10e5c16d-d1bb-4437-9b44-3b0de436fa4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 085d9584-c035-497c-bb97-99be4bb5dc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 bbbc7108-9443-4a2e-ab97-1cb1ef505502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 6cd63f75-f57f-444c-85c6-9cc0d70b9e9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 867a38a9-f1f0-4077-bf3e-0d4d70f032e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #737 bc055b1e-547f-4db1-8e26-d87808d9cdb2)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #737 399f51ec-6da8-4a05-b9bd-14dd985db4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 d2ee5955-6339-43cc-b34d-a73e30df19e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 f2cc282f-2bdb-4608-98cb-3d00ea9b0801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 de488dbb-e28b-4f09-93a2-b6ef40602ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 3dbf1b33-dc26-4598-992d-5b90d810f693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 3e0b9a8f-8438-4a2b-b0bb-104f92c5bad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 6f4881cd-cedc-40e5-ac5e-a81c398f2ff0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #738 7c14c4f9-aedf-45f6-ad1f-48969f4accef)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #738 4bdf5f38-c882-48e9-a063-a2ef6cbb2fee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 e595d34b-0cbf-47bb-b408-57e38c1dbdd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 89a40faa-0905-4d2f-8c03-b9ad68f72503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 857b4c13-5f42-43a9-802f-5b74a92d0e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 740cfd62-9f68-42cb-b9e5-e63b950ed1fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 b7e3a3c4-f0f5-42fd-b38b-b4f38cf03db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 e312c884-68c5-4f76-8e9c-ca6e3d90b6e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #739 831dd061-314b-4370-8ea5-0855e74ab7b2)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #739 6b09969c-faf7-40ab-9e10-5821f360cd07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 c19a264c-7065-466d-8bfc-0582fc24002c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 05397b54-39bc-4997-9af4-21e1e182711c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 dbbb69a6-f102-4db6-a6b3-0b033391c00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 236bad89-e682-4bd2-a372-37b4c774f20b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 795d6084-ef49-4ab9-a5c9-77817a1f8db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 7197872c-2a31-45c0-ad22-3fb02a2fb1af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #740 189ea349-8f11-4fc4-a771-a4140bd4b593)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #740 3e862313-e7ce-408a-b34c-d8e1b6134f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 94406c0d-fa5a-4cec-94e4-8566621751c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 82fbb570-aae0-4dec-92f4-56688a4379ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 c000e592-6541-4624-99d8-be264e6fe5ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 6f2d5372-26f8-4b94-bb07-7fde2890df4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 e0ba747a-c402-4ce9-b5f0-3b19bb5b9db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 0b1a41b1-2f9c-403d-ae48-796813b78e63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #741 b44358a3-a199-4faf-96b1-242fbc521ad2)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #741 92471769-5e9e-482b-ad92-3db5271bace3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 4c4fc8b3-1ac1-4f8e-829a-da2f0a5dda9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 26da20b3-0326-455f-afcf-1f33346d7ca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 6e2a44a4-53f7-4317-beed-804daf634500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 1280dac3-10aa-4c92-af4b-cc15023fe3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 c38ca624-8661-42c9-b687-ecfcdc1113e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 d2a9446a-97f9-4fc0-a002-41f2cc5c090d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #742 cc1c0af7-1836-4297-87ed-0458599e4ce6)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #742 17c6c22b-c160-4ac6-8b88-e95dff0e08ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 97aa4d38-d6d1-4aa9-b91a-83209c62c2a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 6ad17e76-8849-46dd-a9f9-8a7dd59289d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 6a24948b-06ef-4449-8044-6fab8b6b35a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 9fe302a4-fb76-49e2-9257-b98eb56d7219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 0d21b41a-ef1c-4dee-9a88-a595c7006c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 85381408-a085-4906-81dc-c5a4872c41a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #743 84790dc5-037f-4b44-9099-a84e45b6a4e5)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #743 7e056c8a-0727-4c8f-9298-a2ac4eb35d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 20cdb7c2-3fa0-4bc1-8838-06a2d19eed0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 82ffa1e6-352e-45a0-857c-e1c12214ba81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 b589ddf9-5f10-421d-9b2e-4989a2de6ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 e7be30e0-f893-474a-b54e-6116ad27634b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 29827811-a3fa-4ce1-81ab-ebf842140a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 6fd788a1-97c4-4945-9fa7-133e0de4efbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #744 a75f02a0-691c-4d08-b4a6-e2d251924fb9)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #744 2697f6b3-e3fb-40de-bdff-03222adc823c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 838f3723-6bc1-4b69-8e53-82232bd3e702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 1eed4d8f-8552-498c-b384-97d8d42daf30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 07f79e16-1d78-448d-b596-52a5f8311369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 20fc77a9-66bb-453d-8a19-6b9f53402744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 4c780edb-8a8c-47ef-9e6c-ee2272f81c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 94ef74d1-aa4f-46b0-a2fb-6f92350f8b88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #745 c9c92563-02e6-464f-9f38-d823b90984f9)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #745 ef99a255-49c9-4b97-b14a-97e96f25506a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 136d8f90-a796-4b06-bc6b-a44adc26d64f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 b29aca7d-bf05-401b-a9f7-372c6ccc61cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 a1737f1c-f3b0-47ae-9280-85deaad8c8b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 3b5abe72-ad25-4ff5-a843-97a4b8ca66ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 858d8ac3-f065-4c2d-b94f-e5d3e540b1cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 f842c6b4-e535-44c6-aeb7-6bf88c264bb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #746 6e364747-359d-41df-8d95-3d15f8fbe29d)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #746 190a9e4e-55e2-4e9b-af29-c5ff758d9aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 70cfae33-bf7f-4dd6-949b-3dea1168ad73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 7ed51647-e25e-4e49-aefd-c084e478abfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 9522fb73-d45b-423c-a0d0-2af53c278021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 842f61ca-db53-4a21-8940-ea703ec2ba83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 ffa329bb-ae08-49fc-88a1-ac57b2f8ee87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 ccca9787-0cbd-49e9-8d0f-a7b79ee60b7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #747 5b4282c0-cc68-4b97-8008-3efe0661d709)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #747 c73c648b-69d1-40fa-a414-9e7ae872423c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 c3835e07-d8ac-470a-a976-edf0360f3150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 8041174f-9ef8-4026-b369-0d637bf983e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 0e617fc3-a79b-4699-8f9a-036ec27f1aa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 e30368a4-91c9-434f-92ee-b233537e3801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 85e1a51e-2161-4321-a039-998ed6fb9d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 4294349a-3919-43d6-aeb1-9f61e1e0f28c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #748 4253b619-7abc-4065-8dfc-0f760b4f2936)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #748 0e902858-f414-4506-8495-cc45ecc694bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 54fe4c06-c1d7-4b30-ab65-7c1e7d40fb9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 130728b4-6334-4f44-9133-d14ad34f1e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 5f4ae522-6881-4f5c-8834-8c322c99ee53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 b27864bf-2090-43fb-a1ee-d5a060b6b3fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 4d7be694-e364-41ee-8b59-2687c73f84fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 be78765f-d68c-46ca-9866-f70aca3a09f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #749 b2487d44-e974-442f-b682-42bd79650179)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #749 60b34c08-e33e-4314-bacc-d88cd792aa30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 0efc0064-51c1-438d-a480-09eccb8eb76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 66315423-294c-4f21-9080-038015540371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 7b4036a7-c3ac-4d87-bd90-29e35f584768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 ce979c5f-c0f0-48f3-b481-61f280c00be5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 b23aa976-ac8b-48be-937c-662ea515dcf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 08110a7a-4cda-4a4d-a378-4e3a8243f829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #750 b07fe165-5395-439b-ac02-edf9590913f8)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #750 557ad7d1-d223-45fc-bb25-5185910f48ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 6d171a5e-3a24-4695-9709-4b83d32e4982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 2df6d3fc-0637-49e7-bcab-26afbbf9175f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 8d218401-baf9-42c3-b4d3-ab2d3fd8d24e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 494e6be7-035c-44b9-ad44-9e965079f24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 d789611c-e6c0-4192-b684-1ecc8bc5ba6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 9ef26785-634f-445e-9863-108e38380cdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #751 7fd2c5db-83a7-4e27-90c4-d6c3b461efd5)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #751 3ac71900-2283-413a-9020-a7b6a1e720af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 154686a8-bcec-4ba4-bc9f-c8f9b5360185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 7d732893-47f6-4597-9f5b-e96df2834490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 44cff338-407a-48ff-bcfd-d938bb1dc61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 404642e0-4fe9-4ede-b600-fb6b7e187a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 fa8cb47f-f078-4943-b303-746f4f1fd209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 ac950e31-3b77-47b2-bf65-ab5c1c6f5ae5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #752 cfde2a81-7936-4846-9d6f-82dc1e89a8a4)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #752 72ec44c0-a221-4eaf-bd98-1db08c70e15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 19718eff-d342-4749-a7d3-a35382e4bacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 f622d89a-5477-42c6-89e0-766e2c0491bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 14407eca-a09d-4484-b503-b9d5d258aa76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 1580e9f4-cf4f-47fb-9212-5bbbfff7e3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 5a6b67e6-2513-45ce-a07d-1ad68d42070a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 686f00c5-efe2-453c-be8c-8f9e5f8de31e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #753 470c358c-7500-4305-b3cc-d73f944ce365)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #753 ba7794c0-0c47-4ba0-a14e-c5d2d75b7dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 7a877ce3-9c53-41a8-b1f8-d95317ba14a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 ac6f52e3-2a5d-4b6c-8a1d-733328d8afa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 695d41b1-248c-44f4-b363-8b45ed2a2e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 52303796-a4a0-4e42-981c-226dafbd0c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 cd160530-8a25-4c09-8cb4-899ac93a7de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 9e965583-8ad5-46d8-b25f-d9684f6d7b80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #754 b986033b-0b87-425e-ae69-a22fbc8f0323)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #754 b0308e99-32ec-49d6-a634-b59903d27bdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 aea3c5cb-0356-4369-9f7c-5aca2e238828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 f34c700d-01ef-4232-97b2-ffb38cb4d484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 e1b7aeee-b3cc-4015-a0ed-33cc7f6f494f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 166cfd1a-cc4f-425e-bee4-003576b98dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 093257af-c51f-45f5-9ce6-af6b20c9d605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 b0954e4b-0511-42e0-ba2e-2935bed0079f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #755 3ff89cb8-ae6b-4ba6-8e29-df9002832ef0)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #755 d26bd387-495a-49c6-91d2-66d695640e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 9ffc17bb-c966-4cdf-8fa6-aa8b56db545f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 5910580b-396e-4c10-8c0b-ea192214712f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 5f53b3c9-b182-4864-9e5e-b883cd7733cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 9139c69f-9658-4988-87d4-04f19210bc8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 750f597e-51cb-42e1-aa3f-de559f64d941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 020366eb-d163-468d-988f-8cf5fb94123f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #756 263d1782-db3d-4e29-895c-caa0c3f6ef19)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #756 a87bdd97-5477-4f7d-b99b-a8156c4cda04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 83aa8df3-07e6-41c9-ad36-65940ab29b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 3807a817-86fd-4a94-8f34-a326742ed2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 3332d3c8-70d0-40cd-8578-3d7c75c9dcef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 5bf376d3-6836-4f22-a682-d00e3756bb56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 a0d7a3ef-265e-474f-bef8-a4cf8a631d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 64b8091a-fa9b-46f9-9634-57bbc155bc3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #757 df52f571-f088-47b2-8b80-b62f63142a4b)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #757 fe70f538-4f38-4d70-a120-e5b0a8b58285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 e4f3536e-fa2c-41b8-8045-2d8325edd164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 763e97e2-cc52-481d-a4a0-12cb59d82353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 bfdc0ca5-e5ac-44ac-9a88-e44c50f6b28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 f9f076f6-6311-4591-b1ce-7b8632d4bd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 220f5440-586e-4901-a5b0-a24ebf393836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 b334c60d-8be0-4da8-8571-752da81d5c4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #758 3b4dfd03-ceba-48a1-ab47-f777a139ca93)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #758 a5e68037-6047-4d75-a3bb-67ec50228fc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 f5cdbaa5-b8d2-4646-8ea6-44cf685473a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 c838074c-8ca1-4319-99f7-e8370fe276d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 edc9ce60-5dde-4aa3-804c-748943b103d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 3d1d7d4d-7789-47b5-8b5f-696016633bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 83eab7ce-c988-4691-8f2f-97e685f4a609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 bacc3df8-c5e0-4876-a02e-27c7e8236ec1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #759 8ef2c0a1-64d1-4e77-9f94-e1b3eb3fb051)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #759 0c5aee58-53c2-40c5-87fd-a52dcc82cea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 993f1eb9-90f8-404e-8890-d74331ae7b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 01fc9f1b-0a05-4dc7-a42d-1d02b3cbb430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 bf300303-6b2c-473d-80fb-214aecb562e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 d9f30082-7b57-4a9c-b5a3-7b1466beefb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 024041c7-2522-4589-818c-9c1c02908f9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 1641f228-9d79-4335-8e85-fd5ae02169df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #760 fb2bb833-3e47-495a-aba8-2a8afddbeeec)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #760 858d7577-1d06-4267-bdd1-92ac08076c82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 d016a761-69cc-48e2-b972-78be44906f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 b39c70de-6bec-4500-827f-64da62e63a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 7c39cfc3-3d97-4f1c-a36c-c9c604db0b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 bb87f65d-e5e3-465f-b2ac-06399584836d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 8c72c0b8-ee31-4dfc-aa51-b935c9f18f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 ef8f89a1-f4c8-43c2-a597-388ebdd1d795)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #761 9d9cc687-1a0d-475a-bf94-d9070bcf5d64)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #761 536ed1a4-a129-42c4-967f-ea3421ea4852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 94668af9-b046-474e-9166-2f9623adeb09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 f2fe8263-c1f7-4d45-a924-13beb3a6ed05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 a49e1b6e-b700-45a9-a84e-175637d000a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 3e832c58-aab8-4ffd-b2bf-736c559126b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 2f69febb-d8bc-453f-b2da-b8c43406cf53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 c2dcb4e9-755d-4b53-93ae-d12a013f9b20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #762 cbd322ef-8888-437e-a724-493c755dd8bd)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #762 82bb62d1-1cbc-413f-a7fe-9b9fa1566ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 aa0d14ec-78e1-41bd-934d-cd1014f02f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 51f8ff15-ed47-442f-8d1b-8cf7d469a863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 cef65e3a-b696-477d-b60c-2d68abe92bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 134ba6ed-7caa-402c-ac20-e27f5f964345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 c29f066b-1d59-4957-a03a-4f07dedfbb88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 8f5a04ab-308c-4ce5-96dc-0f8e004efcee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #763 df1d2a44-a8b4-4291-8065-c2e6d0b4e033)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #763 dff28070-356e-45e4-b9ba-437bb1808acc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 9537ab19-ea64-4d53-86da-d3f8ffa4babe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 12ebaf4e-fa6f-433d-8ff9-c9e6202c50e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 5cae97e3-39c7-4ea2-aef3-8d34ac92d22f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 b3731147-f621-4bc5-9573-37e9ac4fc2a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 d1b1835c-672e-4ead-a698-f9af4246d37e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 e169fde5-cbe0-49e5-ba51-6ac61457ddb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #764 d4429bd3-9b8e-4551-9939-70922f772c48)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #764 1ac37a8a-d741-4377-8508-200d2468cccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 86c39f4b-b909-4289-ab23-0f9a2bfe8d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 3d211a08-cd97-42b0-9017-f196c0061d4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 1d699679-32bf-4660-9490-2074d108f294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 148f9b79-4654-4472-a140-e2edc07b9784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 86ff0109-4807-4ecf-8a49-ca036dbaf8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 aa942049-b70a-4ceb-add7-5db1581e3e30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #765 5e13e8ca-7298-4151-a352-ff34fd467262)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #765 60bdda54-52c7-43cf-9e7a-4c1f32cd8f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 5f03672f-4ba6-47df-ac13-e618aa8fcbc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 c6c7e575-6b27-4f50-88fd-fa28123c20f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 c75469b2-0714-436d-a68c-4c2044507493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 3665868a-7e1d-4ba9-be31-0ebb68d8d581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 2243ef17-56a6-41cf-b1ba-188821025057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 e721abfc-41ef-4620-b06b-3426ca62a2b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #766 3e189606-9b47-49cf-afb4-2bbf9d2871ff)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #766 1a582709-53d9-4132-85d7-88eeea408a9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 da0d2656-bdfa-443d-89c8-f50254b6965e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 a9f90891-c2cc-43a3-9db6-1177f7306457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 64c6bcd5-dc44-4da8-8b66-932d1c8bebb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 864e13f2-6ca0-4c3d-8e4b-b3ac61f70b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 2f0dfb7a-7bd6-47af-a3f0-55bc5eea46ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 0d9e428c-f29f-465f-ac9b-21994784912f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #767 974a28c6-2b31-4e76-9318-085d2fca44d0)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #767 c9a3e098-f685-48da-a071-5b87910ea6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 065e10b5-3790-4154-bf96-a60b47f618fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 a99a1b46-e599-43a2-afe2-b900ebfac475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 a94939ec-549a-4c74-ac68-9a2ad2aa777e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 5bd5f7e6-d898-4c5c-9b55-6dbd7b054a93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 cf8744f5-2ec0-42d6-b4d9-aeaef6a02e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 5107f5b8-9333-4a69-b940-aa2f13b8ac00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #768 8dff8b69-5993-417d-a85c-1eff57ad0698)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #768 a5b9bde2-9dea-492b-aa6f-a4bd4dfdba31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 7862d6dd-9e86-4de1-ac96-fdd31a5ce156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 d0b05c31-2be0-43aa-ac28-96ad1c4e89a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 91d1bc08-ca47-41a7-80b5-9f1e829f51d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 e117af60-a890-4dd9-a57c-2b3cfa056f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 690c27b2-ccbf-4c44-a1e9-05778c8e588e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 fb48fc0e-371a-404e-a9d4-f263aeff3ee0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #769 7aedbceb-bff9-4921-a0c8-95b6f8098baf)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #769 02ebf90f-1bee-4709-aac6-770ee2aa47c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 f46ea109-df1d-4019-b4f6-003b78c95922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 c6be16e3-50bc-45be-8913-55ec0775933f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 5940d909-edfa-4813-a08c-da05d0c3341a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 359b1ce9-374c-4bc1-8c4f-c9b4fa5140ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 95a11f17-db93-479f-af4c-d6263253c737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 1af2be17-f864-4ef0-92bf-e86128c799eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #770 97d40c44-1f53-4006-a836-c9bad6313a2d)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #770 a5c37f22-58f6-4800-8291-6370c27f6ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 eef373af-9d4e-4dec-9731-4352f0437108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 1080eaf4-5fc1-4548-b9fa-6d3767614000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 6b3ad0f0-86c5-468b-adb4-8030cec6d1d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 346a70b1-4a22-475f-bbda-84a439c04bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 746989b9-c28a-4019-a05c-3c76cfeb66f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 278c5024-c748-4c45-9fb3-2846426557d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #771 3803f392-38df-4bf0-85a1-365f5ee36c7f)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #771 a6688a72-ae31-4d97-99e6-7ca23dd7a282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 f1fd57b9-1080-4c90-a6ea-a68fbceebcb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 9aad353a-3848-4a3b-abb6-d479232cfadb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 29c76c45-7efd-4b8e-bb75-d92c021bf953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 b2d7825f-cd07-44e0-beaf-17a1cd764574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 eaab2d64-6871-418f-a7f5-b8608b9bf26f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 f3f782cb-5926-4366-a156-f6648b384826)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #772 9e0a2a0b-d213-4a60-81ea-d88fdbed79ba)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #772 bbc674a7-d2cb-4c30-b0e0-95b112e77f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 7c5b9651-0ce2-4da8-b4a9-8d341de6872c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 4af4929d-3aeb-42f8-8e02-d9d285a08cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 01f1279f-323c-4ddb-8159-04e3d628dc11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 db339a2d-e53e-4087-9a42-2299ff82580a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 3602906d-0574-412c-908c-22d3f6f4703c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 1ae5dbee-2e3f-4597-a85d-497b025c356f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #773 a761ad33-603a-477c-b0b5-cf5cbd761653)");
unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #773 95d42391-1e46-445b-a579-0b62d78b6127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 a5641802-e97f-4d26-a582-f98ce815564a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 3c602028-e8b6-466e-9dab-372fc71ce607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 177ac2ea-2eab-4ad0-ab21-1fd15cd02d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 ebe98352-8c50-498f-824c-6368aa22f4d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 054bf411-0be0-4cc6-886a-060585191d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 2eaf7a23-133a-4cf7-8563-39c4a96c7749)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #774 0ddd2239-d7f0-45d3-826d-c082c41f124c)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #774 d861592e-4269-465e-ae72-b76d32c8cc40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 2ab2ec9b-ac9c-4adb-b0be-9e0bfcbde5fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 477fe176-2656-4892-aa21-af8ef92c6cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 a15a3c69-55d7-4c27-8086-2b2e3af1d09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 5609419f-fe39-4d03-b135-221761dd6564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 3fa5e3bc-8c8b-4a54-8714-a64618334e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 dec6903e-88b7-4138-8945-0976b27f208e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #775 94fd25b0-4a53-49c4-b8ff-4395b6f32979)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #775 74e1ec8b-ff8f-4f31-a12c-9f2608d5fdc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 9b703658-3c9e-430b-b85f-32151f204b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 90c81fe9-ac24-4be9-b158-3d726ba80ba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 78874d27-f653-4886-8c8a-cc67de869901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 2ffca280-20ef-4aa6-b88b-7273af61b1f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 691af467-a367-415f-9b77-0ca4f0d1b329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 8cd943fe-c6a1-43ec-8062-3ff52db0b7b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #776 bdb23344-bb10-4f04-ba3b-c9b5ceb89dbf)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #776 281e88ea-0b9b-40c5-989c-fefcad6c2e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 921fe0a1-191f-4e02-a65b-77c57a3cba06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 14ca1683-bf79-4123-9b22-7b6e7a40a01d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 4811fa35-a03e-4426-90e4-90a558c1f56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 6a0ca1fe-0695-4c06-834a-397742fc4dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 632496e4-a06b-4157-b84c-908d08a5004c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 b7f945f8-945f-4b4c-afb1-81ede73ec157)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #777 39976307-36cc-48a6-ba16-25ceeb03c460)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #777 40f43e0f-48cc-4281-b235-e5dfa5f48b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 42c7f512-2c86-439d-927a-55ec015be97c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 f833de7a-b18c-44b2-adcb-4040b04ea3e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 463fb533-683b-4df3-b947-5b4d03f00438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 43b2bc55-b603-471e-8b82-5938a59835c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 075856e6-428d-4dc9-b550-0e5cd4881807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 221f2861-41c7-4a80-9870-2de0e887b2bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #778 1e0d2991-517f-4a97-b723-2f1bea3de452)");
unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #778 9b8624e0-7746-43a7-8802-b18a05644f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 a428d9f7-4aa2-445f-92d7-7c2e0162de09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 ac0a4a67-d0c8-4a5a-a29e-5c6615c3122f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 124cb67c-6e97-4c4c-9658-b0c83413b017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 98fcfdb6-9603-4daf-87d7-20aa80873f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 4e11bc09-6ef1-4217-af2e-ac4438777733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 12dd3a12-e5c9-44a5-aaae-16899dc12afe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #779 0ab8ba36-19b2-49ea-97a7-ecee8a94561d)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #779 157fca1a-f747-4a2f-b64a-814aa927499a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 6fc877b4-804e-4823-89c5-650db3a5ddcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 7b7488e2-d8c4-4508-9cee-3f5f0d438e3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 7d664f15-2db7-45ab-b6e0-f17013595df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 7d305671-21c2-4521-8a2c-a4c0812d3aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 98d5177b-b6a0-42e7-b894-4bb02599e831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 b9df1610-75fd-4372-ab1a-744c65a929d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #780 97a59600-d6a1-4c5a-9207-862f2ee5b3ad)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #780 3ef93c80-15f5-484f-9ff1-b609562fa555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 25588b7d-1b02-41a4-8ff9-ac50b792b680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 9caf38ac-de8a-434d-8089-63dc163b9845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 f6ec0ca1-edc3-4bc8-9d31-c1ec0ca1dc5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 15e43f4f-a67b-4b29-9b7b-9fa813905f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 5129f7f4-f582-4167-acf0-b8d5a543de61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 ebda3750-489c-4118-bcb7-8028bbaf4e21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #781 d15c165b-a1c6-464a-9d66-23fb5e58f955)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #781 3c35cdf4-86ef-4315-a85a-e7c38fd72988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 3ce664c2-04ec-46eb-9453-b762cc302506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 eb733e73-59a4-4da0-92b9-870eaf3d4ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 dedf823f-9b7c-4f86-a4f7-2d4324b544c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 42e11055-367c-4fa9-8742-08c65e085bda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 caeb7e54-158f-425d-bddd-45c17ae5614e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 dc77a5cd-33a7-471a-81ac-bd6b7d8ba462)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #782 06fc1886-ec30-4969-bcf3-4d382c2217c9)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #782 5e854804-9d8a-47ac-b75f-93ff0b141f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 946c3906-ef86-4bb7-aa13-dc7db938ead9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 ec754da1-5746-4005-8596-69f3942b6a1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 baff63f2-f27b-46f3-b34b-370850fff437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 0629882d-1d11-40ad-be88-bcf85196e4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 5de067f4-32f7-4a38-a54f-631d40b4ed96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 5389c75d-6c46-4255-8d09-94f244ef5d18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #783 d1504912-a1d0-43b9-9a0b-f1707191cd63)");
unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #783 e671b4e1-0b5f-4f17-bdfb-d4f26fbb76da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 55c5fa03-394c-414b-8e8f-bbe5130ce2f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 98858165-3dc0-47ea-8b70-edbee1028b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 f6cf4df1-8a17-430b-b101-f5ac9232cef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 150b4840-6203-48c0-9154-0f50124e4339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 c613bff2-f516-459c-a369-a37a29d3251b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 25bde39d-0a27-465f-a484-b29d9ce3a6fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #784 7419c88f-fa9f-42ab-a65b-0da815665e9e)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #784 9358ef11-e0cf-4566-8dea-fa89d7e40a21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 b88fbf7a-9f16-4983-90d8-1e74a02f6774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 e1376198-2f66-4e0f-9134-fa47a7136020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 0e593dc3-6490-44be-a968-71cc075d4a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 a93b9641-7083-45ca-a7d4-92073f40f060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 e8b6f400-09b6-4351-bee5-b1c65ac4b185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 825703d6-fa7d-4565-8934-87416a8c201e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #785 3c03964b-dbdb-4307-856e-b7c136ede017)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #785 48d65b47-0eae-4c7d-a81e-f44ba19a96b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 5c980eff-5e12-414a-b56b-679580ebfe9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 9099cbc0-6ea4-46ff-94d0-221329862ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 012246e7-5303-499b-9ba9-2f0d5c00099a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 44bdfe46-0295-4d60-a0c9-ca8a376607b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 4d524511-4593-45be-a93b-6a19395b9d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 9327c2d3-1e37-4d33-a504-c587dbe94215)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #786 57791e2e-f74d-4dcd-a8d4-6378891183fc)");
unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #786 ad5ce08b-61da-4b19-a64b-220aecf90c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 12b72495-0404-4296-a659-6b923cef1302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 8cbd5a7b-c555-44a2-b39c-5346a4e1c785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 f208e500-1305-449a-b38c-1838a3241605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 6632b6ea-e438-4721-9a3e-4c61686a2554)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 fd1af7d7-f07c-4dc5-854f-550697a30833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 7ef9e746-2097-4145-bc30-ee2fbe2d68fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #787 f69fc57e-79c1-4fff-8906-56e40c7b8b66)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #787 bca5ec10-9919-4d58-be46-84f6cab51858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 af4de6e7-3647-4571-b0e5-7f9a093898b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 dab32737-1aae-452e-9da5-e0a9fac88acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 6d834fe4-e71e-43fc-ab6d-46265215bce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 5b31cd8c-74c2-4c50-9230-73ee6cb5a2c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 9e492b08-1c16-4f66-9091-faaa6e6d20c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 70e2fc0c-f04b-46a3-a64a-50a130e62c82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #788 967398c1-2ea7-4d9f-aa88-a9b193254b4a)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #788 618c6942-f648-46e8-96df-9f466d443019)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 d24d29c8-8078-4871-bae2-822b9a0598ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 ae384909-069f-429b-bae1-b110e80ea335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 83fa4e54-8a0f-417f-b0c6-9f2247833273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 69346ef0-a226-483f-8075-63be893ddeb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 cec06033-c865-4c6f-bec1-624d0fa3ff2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 a860146f-3a29-453e-9a40-cbfc5350dce5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #789 20ad2772-634e-4862-88ca-7abf217f0000)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #789 deacc3fd-c70c-401f-82e2-0d3d979ba1b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 2c4b0309-0398-4b23-b0f5-317521578491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 648fb0ae-cd45-4b46-ba99-bf23906f6b39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 b8c2c9bc-7016-4464-a13e-5028d23ca346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 95bef166-db29-4527-a125-206861590be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 5effdb8a-09b1-4530-9b37-7fff3220d245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 1e81c51a-10b8-4234-a506-224d6523150f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #790 c72bbca0-7e1a-4f34-a568-c52371b133ba)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #790 710e583a-8ce5-4516-8e42-7bff1118e533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 42cadd5f-e36e-4df2-bff8-84c52e91bff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 e4a0d411-6018-40d4-b1e2-3ffa541f3722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 63a69763-12b6-4fdb-aa3d-8121dff3ade8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 c2b750b5-34ea-42ab-9d27-fa8f85fdc676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 a1d32e4f-4d83-40bf-aeb7-db35fa2e71c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 dbb72d95-88ab-4f69-a666-640d660bbe7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #791 5aa34dc0-f40c-49c0-b622-727b59c34b47)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #791 29b2a044-fd43-46a7-bb3b-9fd6bd0c16bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 69398e17-ebb5-456c-be2e-f5337e92d908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 e9d16a92-c800-49b2-9159-7a0c5d9472fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 76ed8ad5-afa0-4ece-8c2a-b83522fd5334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 f28d4eba-c8f6-4aca-ae69-68b19f5ed67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 9114ad83-0155-4da2-b60f-604bc8fbe67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 d0342448-2cc8-4f0a-ac29-d96b0f9acfea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #792 5b93071c-dddf-4100-aa0d-698d81d75df1)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #792 5e439813-01ce-4e87-bf7c-65cf462b541a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 e4ce4395-2890-4ee3-81cd-f8212f18afe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 982d0571-9b1b-4a4d-b1f8-cd76148f6fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 5957b92e-9450-417c-bc3d-46bb767d1600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 9dda7f33-ea92-4fd0-a4f4-1eaa6555f725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 956d9ff5-e1cb-4045-8bf1-c3784ef123b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 26c0ffe3-7f91-42a2-a965-8b1718c1dd3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #793 e07f4363-52cb-46c6-bede-79409b8bf131)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #793 5781df27-a604-4a72-8c9f-0c8b377b1c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 d887bc83-32c9-4a1f-b11f-dc66f58bcc49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 ea299854-1830-4f13-8d84-59c0ed2d6469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 8c0defe9-96b5-4ab3-928b-f1b64deb099a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 1acd4e4d-995a-4519-92e5-074b9845c047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 d60bfeb0-5dee-4219-8ac5-c3c0c34bba5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 ce4120bd-3001-425e-87f3-c430e58e567d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #794 ead55596-a408-42d2-92ca-0ab7b97f2acf)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #794 3dc5f385-82a8-4632-9003-ace9d295f63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 b3847fff-673f-4050-8f62-22052f9476de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 7e070382-5402-4f9c-98ec-4ac56868b89f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 99d40f94-09c9-4f27-9c91-cbc4754205e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 c800997a-e181-461a-8900-91ebadcd3d34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 32425959-8bb1-4fa3-a552-d4f640d050bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 f12aa076-021f-4f49-beb8-df328041d385)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #795 b9fbc342-f9d7-4037-a146-e8ad620e5948)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #795 974ac223-123c-4f1a-b8c6-2a4785843d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 f7fe6d78-473b-497f-93d4-539afc81183d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 c6f94a28-b452-4ba4-b437-bde6fa961776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 c4594565-08c7-4bf7-a301-6c4349894a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 0f4b9bdc-492b-4d42-b44c-291db34d1a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 808fc706-fed5-4491-adb6-d0f957f39ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 d0056c7f-46fe-4ddc-a386-f89d846cf88e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #796 16ee2523-2ae6-40f0-8557-5a37633e8cbc)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #796 03b1f067-8e7a-42e8-8101-79216e2561bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 a452a9cb-42b4-4c7a-a6c0-f8d6488d5ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 dbeb54da-638b-4b55-89fc-960c51e30386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 e850097b-0898-408c-aace-491592723405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 6521ebf5-9731-40ed-a315-d29c3fa8b4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 987b7e3c-97bc-4054-9a53-53311436868a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 b9097c85-5ae2-4a40-bbe2-1c918a8b700a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #797 833905d6-9172-426b-88d1-f013201b5573)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #797 d1761e20-64e2-4049-ae39-e838bbe42d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 62b2af9b-c96f-41c7-8e70-d2a1c384ff19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 24a41668-ab23-4fa7-b74f-d65fd757adc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 e161d260-b93e-4be5-8e7d-432578845382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 dac5e9ea-f2a2-47b8-a284-ce683d0a46f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 3494a9a3-7093-4e22-8262-fcdc537ece90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 812ec9f6-6343-49b4-9a20-89e907ae65ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #798 87677652-d78c-486f-bc86-afcdb70b5415)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #798 a11aeb31-e136-436f-87d9-46e4a985fac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 485c6f16-5101-47f9-8097-b66c055ae023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 05ae0fcb-67d1-4500-9229-941317833006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 c79a8bf6-5dc6-4833-b929-6c30337633a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 fefa8e31-82d9-4298-9515-92b33aa270d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 68110e91-ecc1-4784-818e-a75f5ea4005e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 2bb6372e-7949-4d49-97cb-46930d5fd829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #799 a5f87175-5f8a-461b-bc24-2c48b8d9f299)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #799 f73a3124-d466-4dd4-b233-26910cc84644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 5afe3146-306c-47c3-b6cb-3e3f643e92bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 28ede83d-1423-4594-a379-77c2c65037e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 d6b5214f-3ff3-4e4f-be75-c2a35e622a8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 e3ea92fa-2bd4-41e8-a20f-03e634e23379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 fe945cbf-e4e8-44bf-a81f-66648a65cb4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 bff6d217-9f88-4bf7-9815-17148d78d5f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #800 b95907c5-7ace-4d32-8b5c-2e806eb92e39)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #800 418faf85-a314-44b4-add7-38a5dfb74491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 b057b219-92cf-4662-94db-a7a2c858b5bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 1c5c3ab6-825a-4ebf-9356-2de5f615ec05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 21abb897-a7d6-4b76-ad8a-ffb0e872776c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 cc1fbe28-737f-4779-b634-9acb6959cda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 adafa375-03d7-47e5-b117-71b6a99c70e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 5ab91f11-8f96-4604-a84d-68d3c8745535)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #801 5b2f714b-add9-4d73-b476-f0acb30fc45c)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #801 10e1da64-5ea1-4d5e-b51c-1404dc2f6227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 d309ea7c-1c32-4899-8185-3d1a52a9a6c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 9c4bc58d-facf-4eb1-b761-b01de337c00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 cc813b5b-6ca8-4a38-a591-adbfb5c8c13f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 7cb8f232-097d-4f19-b899-ecb2029fd120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 d94b888a-7740-4c64-8e53-dad3fb183c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 3251d64b-d220-4804-855e-821dc25f31f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #802 f1b94268-9843-43e0-a11d-1ec69f742dde)");
unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #802 ae1db077-d709-47ae-82c8-d71beacb1589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 378fab3c-db59-4d46-8626-fb9f1739a938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 3aa3c9a8-4313-4a4a-b2ca-3b3199579541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 6cd21c9b-1d6c-44ea-b4fb-3107b90955cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 299b50ec-c115-4777-880b-e9eda2ed0366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 91f3a587-aa93-42bc-b12c-935622475011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 2f0a9e80-1d7f-40a9-97aa-f24faced827a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #803 6a6ca269-252b-49df-8c1b-5af3bdd7f86b)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #803 4cca36eb-22a2-4851-9c9c-7a2cdcc62887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 2f3f611e-2035-4d02-9882-f18488e131df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 a27dd025-8711-4812-abbe-871c71532faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 c8812080-d0a6-4c6e-af91-9cc80dbc16f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 688f2a36-121b-4244-bcc3-eb17a0660e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 70138f72-fbb7-4fd9-85da-4381d8b74335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 0d1ee751-8dcc-4641-b38b-72c2a77be05d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #804 f526011c-f45a-4c46-b55a-5e93f0072064)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #804 5d098e28-5bc4-4463-91de-0563188e0631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 83b4752f-c07d-4c52-8cb4-fc8819a83a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 91ab03be-ac67-4cfc-a3ca-9a0846921491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 cd2a5d1d-f9d0-45d3-9cf8-36b891c22ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 8f285159-3c91-4416-bacb-d8bfc982ffa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 d09b790d-8e1b-4a95-84d1-92b723aeac5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 bc9b3de3-15b3-4044-800f-e303301df2d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #805 b1833e9f-58d7-4074-ae50-c27a1271f8c9)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #805 a41a909d-3e8d-4d37-b15d-3a0712298a4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 5176dfb9-9c22-4554-936f-6f3c324ce858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 9863a37d-d686-4486-9347-d0fee533c939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 8d271d2f-3c9d-487a-bb91-6f447f894d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 d3af2382-8b3e-4cc8-8c0a-476bf9708f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 87bb2edd-c8fc-4c94-8c2d-4b2b3dfc5c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 cd3f7a13-3461-4dc7-acc7-f2a33f1fbde0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #806 50d60cde-81e5-4dbb-98aa-31f3203f176d)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #806 5fdbf46f-147f-40d1-b1e4-3e7598de74ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 c2f25572-5968-43e8-87a0-2c433a48af1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 fd822304-cafa-4420-88a6-d901bab5f0c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 d04f9284-ef62-4f14-aacb-27fffa8d505d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 a2cfd818-7d1b-4052-892a-111e0819206a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 5008e53b-db24-4836-b776-0a1087d60e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 f71cf414-a770-401c-9942-7f93a4d73c06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #807 458f4c89-d885-4b6b-a2d5-fa0390d6a0d8)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #807 861ddd17-8f43-4c3a-9607-fa8d7795a484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 06e62ee7-1642-4e13-b22e-3a111eb56da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 33ddcfb2-9d04-403a-8d5b-7ca139075f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 47044aa9-dbc1-48c2-a4c8-5cbdeaa9c5f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 7a00e331-8eea-482f-99fd-6ebe4a787ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 e3237457-2c43-4371-960c-3bd333373912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 051acda1-a29b-45e7-a26e-f863debfb8e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #808 1b3c2619-3ea4-4e19-a137-1f4adac9f9ed)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #808 7c255ed9-dee0-4255-8e4a-42c4ba13735f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 bc6faaeb-30d0-476e-96ab-834d20be27ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 0878b3f5-501e-43d9-87b6-ed5a55e641d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 067f229d-cb36-4b0b-b91f-e60510479b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 002b14b3-0a37-42a5-9a12-05d24a090946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 94434bb7-23b3-4cd4-8272-a805827fb11f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 0abf8251-3f0d-4658-936c-ec0b24669d00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #809 20930faf-4a49-478f-8e51-2496a4e5c499)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #809 729e250a-20ce-47bb-9cfe-26c04975b17f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 3c335bd6-3242-4972-a032-e9bc3d24f7a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 fd4cfd07-1893-43a1-afbe-558938b36bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 601a9467-aed6-4998-a578-2f3e5c48d900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 4cf68611-11d2-40b5-b0bb-707189432107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 a6b04fee-0c13-4125-a5e3-4e30d89065b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 273ad19e-0217-4e3f-bc3b-751ac54a9127)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #810 689dd0ab-e137-47f4-a640-d6243f3c0cd9)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #810 7226aad6-f7d9-4280-baa0-e05ec98d6585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 8385a88c-5d93-47e5-aa00-35b8a906cbd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 e86856e9-b21a-46fa-b283-7e716bb7cbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 4b7f5de4-e711-46c3-b446-a818b6e9bdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 34ec6b13-b202-4036-872a-1741373427a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 87f06dc9-84c8-408c-bf4d-2b5476550802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 b0865e49-383d-49bf-b1cc-0aee5089954a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #811 9e9a332d-9603-4201-af52-73f18e77a7d3)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #811 3f0fb4b7-7e80-493f-87fd-945ddbce5574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 f721ef4b-9f21-4940-925a-e5abb16dcafe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 d9eb7461-b774-4e81-8cd4-ec2ffb45dff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 a6e96c30-1502-4aac-b2f8-36573ec63b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 af7a1fa8-681c-45db-88fa-40f3d6484c5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 4668e1f2-3e63-4800-9aa8-c71143667d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 9e4c312c-57ae-45bc-83d3-749fba7242be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #812 2ebd2cd2-6184-4904-a825-7339ffbbd2d7)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #812 92ebc4ea-d244-4a35-9d1a-647befec8470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 5a35dadf-a241-46a1-9b57-6ccdd2930264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 f3a7e386-5c5d-4cd5-a2ad-10bb02f9d12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 39be4c15-6da1-4078-878a-4206e13fb7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 948d1853-aaec-4f0c-a0be-6b4d79ded0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 f0a70a5c-c533-46a1-b43a-abe04834cac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 39fd13cc-0700-4176-b717-787d50029db7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #813 1637a939-04d4-489a-95f0-9489ff8bc44d)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #813 cdc7dab9-3f16-444a-acfe-2e1e713ce80a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 8b1cfa56-ddf5-4430-9c9d-42dc2fbee583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 8cb0a93d-749a-416e-af71-6db3859f22ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 c55f6873-9991-4a9f-8555-39c68a636e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 b2a3252c-7503-4d8e-bde4-7387f68d0812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 bd358cf9-d1cc-4110-ac90-9a1e30206ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 3a4a33e0-1059-40ba-ad6f-c4f76f350daf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #814 2fb50087-0642-42f3-8bb5-1ad35d3a89f5)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #814 3f6c3ad4-823d-4a79-a79b-3a81e9cbcf67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 0491e169-5610-47cd-a525-0c0f204602b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 d85d380f-86b0-4a7b-875e-e54cb1f51d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 2f9d0f7d-fe1e-48ce-9949-fbb39c01d1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 124b6e5f-757a-44c3-bfb6-2e8ac33e5220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 04cc0d8c-8eda-4bd3-ba5d-cb34d1eaca0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 d93ee6ee-e45f-4a72-99c4-71be14c95522)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #815 03d29ddf-dee5-4798-88ee-51d3ce744978)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #815 5d907309-2f00-42ca-b90b-d5ea9f16cca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 433c7830-5bd3-441f-9113-1d84cbbc1513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 0b2a5a2f-abaf-45f5-aa8e-54fdaab1da2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 1405f2c0-341e-4be5-9c29-f735f1def80b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 deeedc58-9fff-47bf-be34-5d56bf7f5d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 f5172d4a-31ae-4d14-ae33-bce30d7fa2cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 66400d5d-5220-4047-91da-639c04c56231)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #816 f180c769-a0ca-46f2-91a0-cb99255786d2)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #816 922f8621-bd67-4c93-b93a-c162d55a0968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 29fc2499-3775-480f-9111-4637d623414a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 e63ce03e-372c-40ad-a572-761e854f1542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 b46abd0c-1324-44af-a768-d2c0153b3592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 21289e43-6ec2-45b5-9875-25d0b23590fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 b8a318da-27f0-4f49-bb35-b742ea10ecfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 e073626f-743f-4fb2-a12f-25219ee7c5b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #817 867f13e7-d08e-4976-a192-590e6dcae055)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #817 c5103ff2-0d7a-4680-9ab5-9d088bf42f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 11d9683c-e259-4cbc-ab99-6251deebf85b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 0b04357e-3059-4b6b-b8a8-bff5bfd1d111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 644e3d53-2e25-43af-ac86-b83e7303e5c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 db3a9891-f97b-4d0e-9a56-014624a7f20e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 e3f3da0c-a00e-4376-8232-602b32284cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 3bbc7ed6-22a2-4d8c-b214-2d9bb284ebfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #818 12c6904d-bf7f-4da3-a386-0a98c989b707)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #818 28bc04da-5be4-4e32-a438-0bd6ac61b652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 44711f46-fa5e-44b9-b905-716c76b7c64c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 e0cb3fc5-d9e0-484b-b4c7-af35931038af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 63a0cb68-d7e5-4b4c-88a2-2f09c078ff06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 9425ea0a-adae-441d-86e9-7df152e14f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 bc173a10-8d29-483a-8323-a02c36195145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 6308b61c-57f5-467b-82ca-caf2f906ddaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #819 ddc78440-7f1b-4f48-b832-47b92391ba15)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #819 e02b61cb-64e9-4da5-bc40-535b6ca5b390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 86b0b203-3a8e-42df-b862-6b34889d3fec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 80bfc1d7-3820-49c5-bae2-24d5ace2a111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 0440286c-f361-43cd-a27c-863d0aee2142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 75dae430-f465-4733-b713-5a5844823d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 da200084-b00f-4130-a617-8fd96f307716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 23b1123d-18c7-4eb2-abb8-6fe66a3d235b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #820 3d06c756-869a-4365-8f75-3d2e2df0b3ca)");
unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #820 ad2fad4c-7988-4da9-a17a-7b1d1836816d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 f7ab8cb0-ec1f-4094-b4cb-074c71408282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 77ecf1df-d460-4ceb-a6b1-b2cdcecc3ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 bacbb72e-28be-4b03-8771-87aee387880d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 7633c679-4eae-4dd7-97a8-4ec785e28318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 9fb58e40-40da-450f-9a7b-84bfa14fa7be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 51f55103-66d2-4178-90c3-90bf20329004)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #821 8bd0aa51-c6b0-4fb0-bcf2-5c31efea7c47)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #821 208fed8c-e8d0-43db-a846-9b853c0363bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 9dddc9e0-8495-4651-9238-efa73b09fd98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 48832744-9c5d-4333-a8df-82be13d666b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 a49babe3-dcbb-4b49-8ef7-405f9ed3b9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 89453163-8dd3-4cb5-82fa-6f82d73b4a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 e8002a95-2257-4337-9be7-8e154628b766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 d42b117f-4bbe-4059-8545-dc473f59095c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #822 4b14a01b-d719-4ee6-a38f-51d85fe0568f)");
unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #822 5547ab0e-b68d-4a41-91e7-78730351edf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 1d419c6d-46aa-45fa-9b64-b2101aeb07b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 37718986-8b73-475b-9acf-b83b5825d4a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 3d7dd3ac-e9b1-4d72-8046-d0934da1a32d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 a6e6c338-1528-46df-868d-b73d2687cd46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 e3d0447e-931e-4cdb-b878-cf2e31638e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 6467b5ac-dc6f-436e-838f-3d720b5ebde2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #823 b9716cc2-a9bd-4972-b7ac-aa434297f5ed)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #823 eb3f0e20-5235-4679-b910-a1293ee8973a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 37ff7f79-b43c-4b5c-9b55-028d7e5f105d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 8227187e-3cca-4afb-82ed-0749acfabadf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 ce619b86-1734-4bbf-81ec-346d600075d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 6b64d5a6-c057-4d21-96a0-586271e9d0cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 c605fb42-9167-43bb-9cc5-65200b4a7edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 9e415093-129d-4a54-83e3-fecd54a504d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #824 de63877a-3ef2-49b5-b222-c9dad8cc0382)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #824 c03c05e6-1b8a-48ab-84a7-b7ba6103672b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 d76b089c-dc09-4275-8085-fe81b73b05b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 a2dc65aa-024b-40a4-bae9-334e3e867c70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 618f22a4-8a4d-448b-b7a9-2cec92f23a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 641729c1-0514-4f9d-bf49-1c8ec2efa23a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 6759784a-f779-4af8-aa77-4ea89faa9171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 26ef4838-9f4a-47a1-8c2f-57f503cc4052)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #825 bfbb94a3-ef79-461f-8b32-ea84a67b5da5)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #825 f36ccae4-4e03-4b48-aff8-e1cd85945a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 7adf3ce8-9e1a-4111-aa76-8b7a05db6bd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 daa556b1-1479-4691-b8b2-26109fd0df0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 0786c432-91b3-429f-9c75-f87b635771a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 8050333c-c317-4317-9f4b-bb31a9f7b4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 3fb3c36e-5fde-4087-9115-a9c3e86acd1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 4d8eebab-985b-4600-857c-a532fa6cedae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #826 f9c840ae-7d2f-4ad9-b484-f4ae31172980)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #826 991f7d39-6ab6-4afd-b4d1-41712cfd1ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 df071e20-2500-49d5-af5d-dee25f7f3da1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 03db6585-a0b4-4464-ac7a-646a1838a8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 51b77e11-c3e7-430a-b596-fb5320ca08ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 e1ba1b3b-7e6b-4473-a232-a21c95e164f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 795768e8-2715-4b02-b7e5-a377ef12cf3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 a137cc9e-536a-46bc-9889-2737367b73ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #827 f5fcc920-0941-4d68-a6c1-42577ce1d43d)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #827 0142a41c-518b-4db5-b0dd-51c47f045092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 b7a65e39-7471-4759-9c19-b4e25762b274)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 768ed72f-0f95-421c-99d3-811837b7bac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 3633d867-ba6c-40aa-901b-a1382eceb5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 cd6ad6a0-5136-4740-9cbb-e923e269f248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 ccc286a4-a61e-4852-b5fb-04db3c3a82f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 74c02a52-2b1f-4bb3-b0fa-5082e9975d16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #828 a092f865-2c90-40a7-b80e-265f85c7712e)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #828 77911a85-1d1a-4898-822c-0d8062b6fb1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 36f6a1cd-ef52-42d4-aca2-04f141b788a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 2f20219a-07a7-4d9f-9d26-dee69f3034cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 2d02ab27-d39c-483f-9f89-dddb1eafb8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 c99e8360-1809-4b92-8b0b-b0987d24fc2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 793e7990-ba6f-4d64-ae47-90c7c451c732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 371fa889-19bc-4587-8dea-18c8254ae24f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #829 1aedaae3-7f62-4929-a2bb-f2747ea5cd61)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #829 1aca56c3-ccf1-4d9f-b676-5b8e14916b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 1b2ffc01-d15b-4fe7-95d7-a23d74940c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 35b10752-78d1-42b0-a3a9-1632035d5b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 fd5dbee7-ab34-447b-b88e-62e1ac2239b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 997e2d1f-54d5-49d0-8e71-77198a1cc81b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 a45b92ac-fdbe-4223-860d-aba22ae1df15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 94261d89-511d-4599-ad87-a075a0af93b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #830 24882574-c962-4d2e-9080-ce5360eb2b88)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #830 7b7a7f1b-5e75-40df-bb3c-d2b74c6422d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 36d0e13a-3713-440e-bfe3-6402924e7f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 a0949617-b6da-4ac5-8a28-77cdbc46ce99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 a682d318-412a-424b-9b44-1499b160f7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 3fb7d4e6-b49c-46a7-b137-67ee0981ff58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 038d3afe-7f7e-4025-9cd6-acfe07cb6c0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 d21844d7-9023-4fb5-a5eb-0815cccf8d36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #831 6c559129-dddf-4f44-b5f2-ee87b5bae301)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #831 44078eff-1d81-4386-85f1-d50f364147b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 ee3880e2-1ac8-4ff6-a7be-baaa4c69bb36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 217de959-c636-4c15-a385-745d954d5b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 bf568df5-ea7b-49f2-9016-26bbcaa4aed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 28666590-53d0-492a-b4a4-94105cba8f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 4b4d803d-861f-49ea-8edb-d6cc97073673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 51d58e1c-2ce0-456e-b345-9433f32c69a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #832 80b905e3-cccf-4f5a-8957-001eec5bca6b)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #832 bb5223ff-5d3b-434e-aba1-2d1aa634e79d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 6db986ac-5379-4973-93f4-02be00cb8e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 ce0ebee5-2703-4061-8e72-e0745955b2a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 c482cf8f-3be6-4b69-9087-097d1b96967e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 51643975-ca23-4126-bdcc-4923a42c1bdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 82e1393c-870c-42f3-b162-88a39aadaa8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 b8de141e-2127-424a-8838-f3dfbca5d5d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #833 81faa85d-b20a-41f3-8cc1-5ad6501bf4f4)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #833 01ae7cf9-d766-4128-af45-f5b169492508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 05856021-f00a-4d69-a92b-72984cef2c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 0dbb28b6-6fb1-48ef-9fa2-54c1be5d318a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 78480064-516a-4592-aa05-b256f2e62087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 8185b9ca-a896-4f73-81e2-531c3f768483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 6a94d1a2-ce7c-4124-bfad-e424015acfcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 fa468b83-8755-4674-a289-1ce37b2dc76f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #834 cd579c62-f1fa-4736-bba8-3e9d7da23d05)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #834 dadd598d-60b9-4726-909d-92dc0c5abbfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 fd4b671f-6677-42ee-90e1-51971e30b75a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 bfc84022-0d73-4ab2-82d1-2225f5ee88ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 fe0aa85d-f2ab-46b7-9ef5-af8658638b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 42e3a18c-d7a5-4543-8265-d039ee59b2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 73e2bf7b-ce25-47eb-acb5-fcb351443505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 3deaf25a-60f0-4367-a178-ed70f99d8fa7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #835 6b493a25-3c57-42d4-a155-276ec2e04e8f)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #835 47dfa259-48aa-43a8-a7c4-d5416e472dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 2c8463f8-eeed-4389-9f4f-a0eec771868e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 2c339997-b0b8-4e33-9ff2-7d460cbe5321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 4190ac43-82f3-4fa6-9e84-c652d202f119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 37771f21-4f66-430c-8e14-ea1c72293a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 29cbb0bb-f5f9-47b7-a895-9bb859d3a529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 72c2c90d-e44c-4fb5-8860-7c50899c6dec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #836 bc0c282b-c9bc-40e4-a93b-17c16e2f6686)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #836 bef7c48b-542d-4513-832d-e091e5bbeec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 d9de4f7e-a99a-49fc-aa6a-773079e06d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 98ff4666-30f9-42c1-9544-60bf7ce18f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 263b3c08-816d-4f5b-81e1-45fd7cb4a29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 6feb0f53-b1b4-40da-9648-28637f982a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 f200e9d8-95ec-43ff-a73b-a016cbea7460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 b08030cb-c46b-4171-98ec-be32389af5d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #837 ca3c0313-a634-4112-adfc-6e0bc78a04a1)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #837 0840e508-d432-4533-a8bf-f5636b2dcde5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 952c16de-e589-43a5-bba6-667262078aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 0b6569b1-4a7d-4005-af31-72f90b6112c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 218b0163-9488-4aed-9e3e-a835c3d8a878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 a9dbabc6-5b96-4405-bfe4-2a0bb23f1291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 370bfa67-9c6a-49f9-a025-a7cf2f898be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 e80252dd-2347-47a0-95e4-6858e5c81590)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #838 4f864a28-6ac0-46e6-8fc0-6829c0a8a975)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #838 19bc5476-2878-4c76-a40b-d5c989d7b7f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 97ba9731-399d-46d3-8eb0-1846101a055c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 f8e63300-7855-4af2-9b74-7b7ee4060dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 394b9f99-de4c-41c9-a18a-bb82641f0cbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 cb944fda-ef67-4baa-bc38-d0c55071636b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 b6b294d4-97f4-417d-bff3-653bce5afecd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 6f14ff11-586d-4922-9e68-2953d47fa8a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #839 b4070609-b71c-4784-8aa8-4063a981f4ab)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #839 02e5d1b2-a4d8-4085-9ca8-133e6b558dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 b17aa7b9-d93e-4232-9bd6-d930846da13a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 af19e0a2-db87-4f2b-bc10-6951ddb65f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 4defeec4-912a-4b03-9611-46ab5d78b183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 afc7601d-0adf-452f-a7c6-a928b2cfb0e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 a2de346b-4bed-4e26-9d72-95f7a6645def)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 d3743232-4073-4862-8407-2a8f772dd3a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #840 a6352170-500d-4c3e-8088-001355a59a4c)");
unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #840 63d800a8-1027-419a-80c6-a1035a659b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 12c127a6-72cc-4660-8a52-e5ea254dc278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 dcd0fafb-5292-4bfc-a2ac-20ad3b03621a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 777bad7f-d425-4493-8eea-7ed3218a53a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 d2f83e4f-4cca-46b0-b33a-0cc105ae8f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 eb8da9d1-5781-4b71-bd0a-2be3ffad2692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 7bcb223e-627f-4225-a185-8fce3c62d04d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #841 0b3b6ab0-d2c4-40f3-b3c4-469fe4bc0672)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #841 6bcbd2ef-47db-4e22-b10f-4b8914005a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 b255edee-ddb0-4459-9056-cd7df0eae310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 9087ef3b-1a83-4087-a103-051ff58de0c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 d300447a-b26f-46df-8c97-632e4975f5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 ab576d6e-7906-4658-9f19-30d7a25e6061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 9ba12749-cdb3-4948-aa62-7461f349c54c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 1f857668-80bc-4055-80db-c8eebef6ee4b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #842 03f491cb-50bb-4c03-8264-b7e6b3cfd3fb)");
unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #842 8237fc4e-87ce-44a2-ba4e-7d7bf46d6e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 6114461d-a6d1-4bbc-9961-a3c09090131e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 fd64c4ca-52b9-40ca-83fb-f2c18ed68082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 7fa4a1bc-2b2e-4709-a282-ba7d8a85d351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 d6720757-e10b-42af-b59f-5d60a936d28a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 a1274f2f-e436-4f55-b15b-ec3269b1f55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 59b8bcf7-ec01-4914-b564-2856b9c11da0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #843 a80904d0-9810-4c7c-b5a7-5670ea3b5d05)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #843 7bd70899-9a08-41d0-b8c8-14f9d73691f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 9247596c-789c-4100-8515-ac8379987e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 79a4d57c-f861-4816-b343-f7bfffaf1491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 98eb00fd-3599-452e-a446-013b9bc8b4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 f94d36c8-c8be-4a01-a6ae-39d9f52923df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 76a5dc0d-d621-457c-8f5c-b8be053799ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 8edbed0b-2c7b-43fe-bb78-eba197e30b6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #844 a66b90e4-2144-42c9-87e9-fb278a0f01c6)");
unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #844 e4e88a1e-d40b-4ab2-89a4-735825778f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 80cd328b-cc4e-484a-8190-0554e0aaa40d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 b3e0b83a-b916-44d5-b917-a6321a9afaf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 d27ef2cb-6dfd-4fa7-b68b-44e71dfd01ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 622e05f9-e8cb-4158-82b4-bc7f742eeb0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 20b76366-ad77-4808-b585-ca7333af0309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 79b334c3-4644-4e3e-a447-028a0fd2ca2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #845 e3efa548-e88a-4b56-9cf2-9d1e5c2355a8)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #845 d8f341f8-e4ca-4b1f-8ba4-55a52110cbd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 a8547713-8009-4dd4-b971-11962f4c8f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 c4f18944-6ab0-4adf-8f6e-cb3570965bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 3f793803-4dec-4f99-853d-03fe3e9810d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 9801e2e1-4fc6-461f-9682-f3814cd3f479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 796ef737-81f3-4910-b785-458134288866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 b22f9707-b473-4ab1-bfa4-aa82bc0c9de3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #846 8da7f634-ba68-420b-8cdb-9bb7fa6fdc47)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #846 c490dedf-1429-4930-997b-49a0613456ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 96476c69-d8b2-4f18-b698-d8e0a8601585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 262c5971-c3c4-483a-ae70-53861e88c290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 116ab44c-be4b-47eb-a480-78176ad42271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 fe245c4e-d863-4f22-908d-de3956bb49f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 8959e3d4-70dc-4b2a-bb89-d1c8c43bc61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 2984a801-b975-4fdc-9c7e-82416a6fa969)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #847 ed93042a-def6-4a82-800d-553b742def30)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #847 65041535-251b-4745-91f7-18f77109bb1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 597250e1-883f-45be-9d49-1afc06fe08eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 c1703b4f-9690-4573-a762-ab9142270079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 59cd33cc-607e-44be-8cd6-c9186caf7e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 b61b1c04-7574-4f74-917a-26c305648679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 a03d51fe-1fb0-42e6-9d56-cc4a3870ecce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 852a9415-92bb-44d0-8865-32cd7b1b2fba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #848 663de6d1-d0a2-4b6c-ab95-ba64ffbb0e2e)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #848 ad806ee4-5793-4aab-a7e0-c0bcdeea5dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 5abb0f8f-7964-420a-aee1-1a4b902f031b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 32d068e5-5806-41fc-8278-fae49b7acdf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 440cd7d2-2a61-4e4c-b012-506df9831906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 1876ab9a-e975-4394-b529-5420baef73f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 5ec5dd32-4af9-4d9b-a327-92a4f33e9052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 bbfaba28-5f04-40e8-a9b5-1f3d7ea8930f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #849 bee2db6c-fc1c-491c-9b31-c383d4c4c626)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #849 0cb8e643-e3ce-4338-adf1-8fe34f20fe5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 f6c4f9f6-b3d7-49f5-8a16-71c5100706c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 a784e237-6e26-4581-9ad0-7779ed0bec73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 79de7c5e-897f-48c4-8021-eaab601b875d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 fb65f733-935f-42f9-b3da-7bad821e6555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 dd7224d3-d74c-48ed-a5fc-2b024fe4a108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 92cf6f08-6d78-43bf-b000-05b73091514d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #850 765ed640-3ca1-4a95-99c1-b9a55f233d32)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #850 7caea944-d6b4-460e-840b-e364290ae195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 35b4afff-d964-4a4c-9b6b-23dea82711b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 c2da545e-fcc2-47a6-ab40-5c7f4e2e8e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 c0ab7bfe-9840-4b43-8b60-6c5ba0463215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 9e9ec6b6-4cc6-4129-9fe6-2712395d6ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 3f85263b-3f4b-49e0-89dc-69cde1d7c957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 3ed78d43-2e43-4f2b-bea6-b06e8e0bb6f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #851 799a614a-49c8-4a3c-bbd1-cdc0c03a943c)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #851 5277b7c8-aee3-4e17-8460-62eb4edf4f90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 83a648b4-a55b-4d43-90c4-cff3533d59ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 7b47ceac-f26b-43ac-8b58-4cfbf13876ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 19690693-0b75-4884-8a73-f29438d7ffa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 94714005-2a0a-45d0-905e-0ba84a24b055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 3dcdc80e-f8f5-4547-8e53-b3faf6201826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 9652b858-3b33-4c59-a9e7-86e5c439a87b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #852 c225beee-df85-4b91-8128-d9dab7673093)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #852 7be39872-198a-4d9f-94d1-021d01e50d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 ce239a41-9c64-45b6-a126-3acaaab38426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 ed5c80e4-038a-44f6-92ed-0df129434b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 14a25ffc-8f8b-4db5-94da-b42427d4aa00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 7c54e5a4-9dee-47bd-82f8-3b1946e495d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 5e75c0f9-15e0-401d-9007-047a8596c860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 dd8e4477-77b8-4489-aa17-d8d52e2a390a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #853 55cad220-d6a3-49e7-9cb8-5565ca0590ac)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #853 43c49150-b42d-4547-acae-6bcc6ab890f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 65f6db2e-eb63-490f-8931-d0fccb849ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 97654af0-6b5e-4846-8a79-b7c28bfb6c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 c0e26c9d-11ef-4697-8b1d-2f9a41171863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 70bd62f6-05c9-4473-8909-4043cbf0c670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 93237fc8-873f-4f4e-a1e7-7944edfe4051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 f2330a34-f3da-4f89-91a2-2fe59a79bcc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #854 e1b7c3d5-8db9-4811-b06a-29ae419e32a7)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #854 18294226-58a9-406a-87e7-c5c690f15f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 36d5207f-d203-45dc-a1f2-91cb577bc83c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 778b237f-3dff-4519-8f7d-203d44b4933b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 0a89d309-0265-4dd7-8347-eb8f861f4480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 3a0d5779-8fbc-44cc-b6d5-0aa7b17cb906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 3df10175-e03b-4464-9576-14200236405b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 1e6a0b1c-2972-40ec-b46f-0bb7020d5c26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #855 6044caaa-4db0-4f6c-a62d-f94c5ad816e4)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #855 56a064e5-6f13-4129-ae8d-06169cb64612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 0f4635a8-c99e-496c-aefd-cfabdee719a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 8f1710e3-2478-49d9-8a03-090733a719dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 352551d7-3c4c-43c3-94ef-02f851b3b2f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 44cf5a81-c101-4f12-a2c2-32c012af8b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 f2e17888-31f0-41ab-968a-eff0c5fa2593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 bd68a3de-76f5-4aee-a4f5-2cfe91ca86fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #856 7780f6f0-623c-4311-bab2-53c078b91ab4)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #856 89335ec1-b51e-40bf-89b4-8686d675379e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 118e98fd-b933-4b05-85f7-7f4d8479f7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 043ea678-5f27-4f45-b7bc-48c064f2e7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 37884db8-db05-45d9-a947-3823504e3901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 69bf2a68-dac8-4f99-9dc8-736a611751fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 9f95cadc-6fea-41b3-bb29-7b9ae4110241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 f48b9c1d-a8fe-42b1-81a2-7994997146e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #857 43c9fa88-1f5a-4bd9-92f6-59d529ab7680)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #857 189f8fa0-4c32-43dd-9f86-c241363fc8f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 f65fbe53-412e-454e-b540-8560e1144631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 305e6122-cf99-40d5-94c3-5a556d84b02d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 f64b0ed0-1216-4b5f-b0d3-dd111cfea2c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 b268aab9-62fc-41ee-8678-712fa8d234a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 5610c704-7770-4a39-a72f-50da523f2a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 3557f469-a2d5-4209-9690-562c18ce1dd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #858 f0cec819-154f-4863-a313-5f4dc963191c)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #858 10d7523d-3f5a-4c06-9a3f-50f0d266b080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 fb51e0c5-cac6-4f4a-b4f7-0732fd77bc28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 c99aaaca-934d-48f2-80c4-336574db1da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 40c0b34f-5ee9-4a81-8922-60b1ef0f4866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 992f7595-087c-4df9-a32a-7cb35e18d1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 4ebe3c89-d12d-4a94-94e9-3d04c9d1b863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 21824a3e-817f-4dc1-acbb-41d2ed7e2117)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #859 8952d165-c1bd-4a7d-a719-c2d95b2f0fdc)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #859 77409db2-852d-4ef1-b222-7cc4be631b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 e356cfeb-7cc4-432e-bf7e-43fbb15f547b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 d29df303-ba41-419e-b459-6d3f6f9279b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 27804762-c029-462a-bd4a-17dab14994b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 15c5df39-f413-4921-97e0-70fd6e73e011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 75b87b16-ea4b-4f35-99d1-149fab02cbe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 d90bc1da-8805-4144-8e79-d99602aa0347)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #860 f3cb2676-626f-4d6c-bb87-74470982d499)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #860 31e8443a-614f-48d6-b69c-43cd6eaef2a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 bafca8de-7240-49e3-862d-08c449909e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 7aad071f-673b-4737-a117-c28b77ff6d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 39f48556-e367-4363-885c-599e153ce6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 12a566e1-8202-493e-887b-4d7b70ccb170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 0cbba1ef-3267-4f0a-8cbc-5d0ab5587cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 1dcd8168-ac38-4ea9-a80b-f734edc63457)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #861 0054915c-a606-4d7e-a8c8-6bb431050f7f)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #861 91638e3d-7b3b-4181-824e-6b393f1cf8be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 14627057-f521-4bdb-9b44-55853b5019f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 52de766c-ab91-4a7b-bcef-b9864f1e9258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 0a114b45-4119-42ca-85cf-e93cef7e23ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 faf69d00-e08d-4e09-b4a8-5529d0669d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 16afb378-bf00-4f5e-99d6-b6922f4ed122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 cce6835b-caea-43ec-8196-5143f966b338)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #862 fc7999f0-7955-41d9-a437-106b15426839)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #862 d9339afc-3627-4573-b782-71f67de5200d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 52df1d99-c5cd-4405-b851-db58333efe79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 1f603c64-fa44-417c-8401-fb6b663f6b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 9df7230a-1c61-487e-a348-c8250e902e1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 208ef229-00b0-458d-8e41-6ba68da0845a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 81804ac7-fcc0-4b2e-8f71-7e4001b976e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 c2d081df-8f16-4a51-823e-271eda93cfd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #863 cf11e8df-b164-4058-bded-d1cf0dcf9c3c)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #863 9108e483-d063-4b71-9579-9cdf909cbf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 17a5f6b2-bbf7-4ac5-a0c2-1b2e08ca906b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 1c105220-7b5b-4f2c-8623-746a6d8972c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 0b51268e-bce6-4406-a573-b8eebf21d60f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 bcf46719-2f0c-4c77-a6d5-92a96f756cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 6aa79278-6c26-4ef3-b65a-9077ba8e9212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 302ccbfe-0029-4bb2-83a7-e7486c76b6a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #864 07d98648-8137-4eae-b96b-7496f9a50789)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #864 26bc2615-8c1d-40d3-884b-1e1af3bb9d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 46366420-ae9a-433d-88e9-78a449dcf8d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 a8cccbc0-d4ed-4875-8465-1bfb87c3d21c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 a99fc1bf-ae67-460d-82a1-1eb7cce8803f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 fed1dd69-d4bc-41ee-a76d-64db8bf8c5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 b8c34f48-6718-4147-a256-4f52d6594c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 7e886b79-d927-4322-9033-4231c4ff179b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #865 b0375737-2728-4ae9-9625-2818ac735210)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #865 47a9f5c7-4df4-4748-a671-14a2693f3dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 016f5c41-0418-41c7-ab38-f55a22d81259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 bed5ab24-1139-4b93-a97d-c7ab1e9d17fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 b6e7be53-b424-4514-bbe9-e2d72dc5e419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 0174d785-fb38-4246-8d14-152bb0041c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 3d8e3729-bfbd-4802-af18-1f41d8dfc2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 132ef5df-a916-4a79-b824-09993fb5d95c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #866 e91a71ce-0c2c-4852-89ab-0cc656da6551)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #866 a37990e5-7b2d-41f3-a9c0-8f018be6e465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 88b35754-a411-4c51-9211-26b71d9b5bc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 6d8ebae2-06cf-433a-85b1-a05af3ba426a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 9d7bbac0-0a58-4695-bcfc-32c6086eb188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 bb79582c-60f5-4618-9afc-844a009d9347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 2fcda116-aceb-483f-8278-ba9a1046d78e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 9717320c-39b4-4247-8d6d-9247dd3cb0a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #867 7d029eb1-cf52-4ab6-a727-00deab03e71d)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #867 02a9f3dd-846d-44d8-a322-c8b80abc664b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 3222d6f3-7221-4c36-a134-8cc613a07c93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 3d645cd0-a82d-43bf-917d-20287d833ccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 7a57532f-47d1-4cd6-8d98-13e42441abf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 954bc7ad-d066-4866-9933-a5c3b6e0ff40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 6cc2ffde-8c5f-4bdf-b1e3-c817c8c71c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 f293754b-a84f-49da-83b6-4456cd9c9321)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #868 bdee88fd-ae63-4f65-b28a-85ee42dfbd9f)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #868 65d8d9b3-56c0-4a14-8a56-43475b56e1b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 77f1a7b0-1323-469a-964f-b271fe457836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 3e873f02-e744-4ee6-b64d-1b2e8cbf16ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 cc17d95f-6292-4782-affd-7fab793e3e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 a2b511f2-11af-46f5-9819-3a1ad71283a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 4ad622fb-c6cf-4af9-bf48-95e0db5d6870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 e0ed3160-95bc-443f-9cd1-c4dd73e4341f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #869 273e8dc4-9278-4f6f-be73-297c55310639)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #869 0aa1b302-d9e8-47cb-9f29-e0cbeeff83a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 418e46dc-b482-4eaa-aa2e-365f6ae6cc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 deb8612a-3c38-4e3b-bedc-326e8277b93d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 a75291d3-c856-4219-afa7-c965e658bde0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 1f4f8886-086d-4272-a014-b257f4c94f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 7585779c-c9c8-48bf-9bc8-70093d7751f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 0c457cef-5f18-4791-b194-75aeb12d4666)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #870 2a83d895-4c89-4bad-9ab2-92b7e15c8b5e)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #870 a6d0b3fa-9c9c-4b69-9776-034d780781a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 a73a3b71-eabe-433a-aea3-e66004e59a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 2df7d180-1db5-4257-8934-d7cf70ce3b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 866b6097-66b8-4fff-a650-a1dee2b93d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 790ae39e-ff24-4ec3-885a-8842e4ff7e4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 4cf289a5-8192-4fe9-b739-59d65defcc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 b3896daf-6c68-4d90-ad9c-6dd994211095)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #871 ea5c81b1-7a12-4c6d-b0ed-3be0cc352886)");
unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #871 3ec695e0-4100-4d71-adec-2e48519fa6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 b95c9936-35e7-4e12-a47c-247e4565e789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 da34bc46-8cb7-4398-a127-c8a500b93713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 96805a53-24a0-47e8-b396-51b73f43ff53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 d25f6ad2-2550-4afc-940e-8dcfa3f0a88b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 4a8cbdd4-aa68-4105-815a-adf59ea1a9de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 a36132b6-211f-4d5a-9a36-a23bbb2a832e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #872 5ad271b0-dc12-44e7-85e6-ca04c2bf4763)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #872 00905dae-14e1-4576-b4b2-981a5e8e3bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 59f741b8-791a-4220-baaa-bdd8d237f3dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 582fcf95-4df5-402f-ae35-99965bb25002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 0325c45f-5253-4f44-b1d5-e3324308812a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 9c8a0959-a28d-4eb1-8fcf-5c4d8581f234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 33169f5f-6ea8-43d2-88a4-20cb8775e373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 b8c1379f-8671-4b5a-84e2-c06089e4d69e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #873 28c2806f-f3aa-4e5f-91e1-a8e3bd616dd6)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #873 e3af5a0c-8bfc-4cc4-a00a-fb280c6c390a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 a663423a-270f-40a6-9843-699a03a6b5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 d6767344-fb4d-4e71-8e44-49d39385f2de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 41eb4e4c-43c4-4782-b47e-abcb72bddb0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 0379e41f-eac5-4eb9-b9f5-b9b5fe357845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 b4123bed-4e75-4373-9a42-31fed9ada622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 0963b3db-a361-4f2a-9957-d9e5535b88ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #874 6baa758e-71f1-48a9-a3a9-4c34e4c5b856)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #874 015e0ab2-ba44-483d-a192-e192eebb41cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 6a85677d-7132-438c-8f21-b7d03b51638e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 79e379e3-ae6c-4efe-a73a-0a9ad4dc40ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 f24118a8-8997-409b-aa9e-6fd601547730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 0eaaa2a0-38e8-4d4d-a7f5-6d178c05b186)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 1c73bd59-b367-41f3-8fa4-3880975d5582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 52614472-072a-4f83-9e19-654a07ea0313)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #875 cad92746-8f59-4466-9b04-8197dce945dc)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #875 d8bc2211-dedc-470a-89e7-aba05c8a914b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 999ef601-cf29-4e2f-acff-c23bff959d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 4f69f191-0478-4e1e-8f68-5c9f3c7ace58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 f696680f-1d64-4380-ad74-037116032424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 002b7aac-6751-4e12-8cf9-1bc005ba6357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 c63c2685-789b-46b4-abac-01451966bd78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 06f3cdf7-cbf2-4392-a018-a8b77f0909c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #876 24ef7e25-e708-4386-aa2c-34c125fea862)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #876 19704e90-396e-419d-b6fc-86531e8f83c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 d04e488b-f52b-4b9d-94a7-9d25b1472499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 8a3a7930-b941-4922-ad60-eb33eb6cef75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 b43ccae3-4615-4d9f-8c71-86a2d0e2da67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 4cf80dff-2680-4f4e-9481-9fa2b43cf858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 81f80eb6-3273-4891-bad4-fbd6f12474f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 27647f54-43ee-4612-b44e-c7b6a28f0302)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #877 c5597c2f-b317-405a-9e25-cd3389150fe2)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #877 5d35299c-b1f4-4b01-945b-5a92f4447eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 d24f0b04-2553-470a-9a19-50660d8f609c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 53ed7a6b-2a93-4adf-a315-6fc46c79b4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 d639d60a-74b8-4b0e-bb4c-e0be6b1c5768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 1839bfca-1b6b-4e33-9138-d42fe7bf5d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 d94c4a84-1196-40c6-973c-f8855e441146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 1d7503d4-f435-4164-9c6d-850b526db1c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #878 4e3cd187-17f2-418d-93e9-d3af92e4333f)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #878 f6249a8e-1900-4bc2-8d31-4ccc3df6c349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 6624694d-0ded-49e9-aee5-853058751de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 d16b0f14-b39d-4322-9fe0-66d5c52bd086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 d6a2b5a8-7cb8-4b67-9fe8-b8be37eca6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 23c98d95-c6d6-4a6c-bcb1-c5e98a47f1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 9d555a7a-9ac6-4f4e-8522-5342960878db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 64d6c7c4-2853-47de-87b6-511e07a175d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #879 f46687e6-527d-427c-b234-f7b223da7451)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #879 4e96a05e-49eb-4068-9ee5-ed552d35723b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 2b27cb22-bd23-488c-b4f7-97a9dbd139ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 93349d06-7475-4c1d-82a7-d8c7dbe4a48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 a4e2d0c3-5b81-49c6-b040-cca286520da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 6640ce3a-44f8-46fa-baf0-b710c975df89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 68f56b5d-cbc6-4ea5-b9a1-612d02142de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 561827c0-3e0e-448c-9a8f-ac2a034b229d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #880 dd4b148e-f5a9-442d-82da-b906a60662e3)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #880 8f9a660b-fd9f-44d3-97c0-36de0ab3344a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 e0c14642-9208-4d66-979c-d635b4017a3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 45b075d2-9a1d-45b7-b935-de34b783bf38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 c724236e-3856-4ac8-a712-e7db97cb96a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 825d5311-7b3d-4443-b328-9814d050340d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 6230df10-7b6b-4b88-95e7-208bd4e7ef08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 e7c9fa99-5bdd-4142-bb76-f2d4b7249b6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #881 1f9b285a-5ef9-40eb-b911-bde5baf71bbe)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #881 146e3180-d693-4e1b-9e37-0e70323ca874)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 43c5524e-e1ce-4233-a8e6-070b7f7d9c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 5ab2d690-a709-4e37-872a-0aa5c4f13909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 a51c6e79-2b2f-4fad-b366-1fe86b3c696b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 99a21896-08c5-4ae0-b15e-6bafeab2946f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 4c3d3cf8-7a15-448c-bfaa-916cb2fbd1b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 940c1418-deca-4fc4-9132-794892abe0ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #882 4eb446fc-feb2-4d8a-906c-45a6de70c09a)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #882 2445ed17-549e-4635-8484-15a027d4229d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 9571a642-ec03-4575-b493-ff76173cc17c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 ea18d07f-9bdf-4446-b886-99a52b9f335f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 4ccd619b-87d9-4358-b09b-1b29646dd432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 ef0d683c-cd69-4523-be98-f1422ac1a4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 4cfb4ede-4d6f-4868-bfb7-8ba06eb7447b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 836ec55e-abee-42ee-8fc2-e0e15a5b136e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #883 285a0792-164d-4368-8e81-4fc4082f38b9)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #883 eabd244b-d4d3-4106-85ac-8b9642aa075a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 85a3508e-3c45-40e9-a6c8-22d4ab48e291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 e2069299-a9a1-4397-8961-f90d09d3a7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 fbfa4cb5-42e4-438b-8fd4-5605042d11a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 db33c602-2d48-41c6-8b13-0d3e0c0f6688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 d3c337ba-9b02-4ae4-a07c-fc8da773927b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 7f6e3a86-b487-4913-a1a5-7d7f8cce964c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #884 5a89d590-dd72-431c-bedc-96b730e07894)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #884 17236420-558c-43fb-8dbf-7e318032a744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 0074e23f-b169-442d-ad9a-c408150e5d9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 2318bc1b-d439-4e00-84ab-3a03ccd0f6cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 8a39836f-9967-4290-bed5-d6413a69a727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 dc499089-9029-415a-b800-b344a9ffee9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 32a4da89-aa2d-4357-ac04-f2cfe5e661d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 1eb51f55-30b4-4839-bd39-cdf8b8e75a9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #885 6298f033-e463-488a-aaf4-aa228b367f42)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #885 4ef7897d-7afd-4b47-b161-c3b24cc4f9a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 0d4728e2-c328-4cfe-8cfd-f475efe96600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 28f3192e-8993-4534-a37b-eda4707eef8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 b5d0da72-b75b-4957-8c85-32a97cdc724a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 8ca4ef08-7800-4c44-aae5-fc6df5507430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 08303828-6902-4751-858c-88071e2dcd51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 8d324402-1a54-4f02-b03b-f943c8a2fdd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #886 09a7031d-1629-4a47-a139-b2628bf7fece)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #886 bb98c404-a721-49fe-9c46-d0034c1ec2ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 6b8e3d58-61af-4d9b-a301-b301fb4b483d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 be3120bd-4b07-459e-95f2-7cb8d4e0cd3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 7eef1ea6-4cff-4a79-a17a-0bac951871c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 6c4b8a98-c9fe-4219-9b3d-cd047d51df49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 20e9b1ea-88c7-450c-a351-18f6eeb05546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 ed83864d-7f18-4fb8-9351-d8e2f8c36db2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #887 756e69f1-ffd5-4247-9c02-1e55539058b1)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #887 b86f80ab-9f0b-42a2-b11e-ac71540fe25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 879ef6d8-d8c1-47b7-bd27-5ee2e9f097c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 6705e3e4-c809-4948-bc87-0a2cef2ab46c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 c72aee18-c5da-48d7-8b9b-fc796ceadd3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 a082676e-825a-4be0-b2c7-1b3fd14cb45c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 fa77d4a7-c45f-4230-99f1-adcd77da1f8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 56463e15-7429-4545-86c1-57ed51d57bab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #888 78f527a7-e8c9-4783-89f8-00cb3e74cc5e)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #888 c5a3e0b9-8f3d-4474-bd87-8cc397863211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 d6479c00-527e-4736-8963-9e144d26e73e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 9401252a-1202-4196-b86f-b14e55651601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 225de3f9-446c-423f-bfb3-15997e35a2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 f1a71f86-eb90-49d2-b5f3-cd0c00c110d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 a01ff804-a549-43f3-86ca-b91c4395120e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 38de86ff-2a5c-4230-9ff8-3a9333f01a99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #889 756d9d5e-d160-4c2e-a988-8ee4645d6ab5)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #889 b2479bfd-cac0-4594-b279-5967a4e6cb20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 a11c8daa-2f2f-4bf1-805d-53082cc97e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 1ea33a00-1dc5-4228-bd9f-811eaaf0e47c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 a7b67e12-024b-440a-a98e-0e006da8221d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 0dc6e159-dc28-47d8-9ce0-23117b5db05c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 d4ca8cc6-af1b-4e6c-a285-7de925348053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 6a0b6b89-5468-412c-a631-dc9684aaa655)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #890 415a70fd-cfe2-4ff4-b291-5a6e4e47e96f)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #890 66c3e803-f449-4d0e-be51-1f4c68a90c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 8b31a777-3d4f-47ab-830a-99721e594712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 8ccf8ffb-e3f7-417f-a288-665c96bf3391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 aedf45a1-7849-4865-a229-fe796d740eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 caa2188e-42e3-4fa1-bf95-5a40a00f201a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 f2c1a944-18ca-4e23-b260-5b12c4554d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 c571d2a4-0aa3-4a75-a115-5f43364c3387)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #891 b57da709-1b9f-40be-a3b4-25582a2411a1)");
unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #891 27dbcdc9-bc4a-42dd-b235-4cd055c61b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 8b0184b3-8690-48e4-8353-790c8d7536a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 84b19a46-43fc-4c49-a1dd-7cf0f3f92234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 fb93824b-76c0-4980-9c8f-a179f00b2a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 b83ed5f4-b744-437d-afd2-a9d7346f7d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 b3967990-8c0e-4520-83ff-384096eadcea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 c54c0027-ce3a-446d-a17f-5a4ebfda8210)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #892 7d3cec06-fb79-4fb9-93e0-3edda4e88e8c)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #892 7cdec7ab-506f-4ea8-8f34-dd501236dc97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 fa9103d2-f8ea-493c-a595-24f207bf8ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 6c2bead3-8401-49a6-bbee-c06898831bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 1aef07df-76e6-48e6-acbe-b3fdb8e01728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 b5394fa0-c739-4c28-b123-9d391d8cb185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 7fd2ce59-787c-4ae6-bd96-14e05405c778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 a2397a9b-b339-4b0f-a529-42722cd39f15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #893 e81d8c7e-3614-4473-aaab-c26cefb38af2)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #893 ef548515-bfef-43e4-bff7-82969687ef3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 d9a9adef-3273-4c7d-9608-7f0a5c5c7216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 d82b49cd-4ec2-44b7-8ed5-a2cedf1b0837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 0fe63ce8-2527-4068-bf6c-a22776a570d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 16376707-b7a6-4782-9c8c-9f2495cf0618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 8ef041a9-6f34-4b00-93ea-10b136cefab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 56e0a322-6afd-4008-a782-68885cf9fe29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #894 660f9443-43ac-4abf-ae69-b3ea563114d4)");
unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #894 8f58a9bd-702e-41c5-a426-3c1a02da2083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 8d802d6a-2e98-450f-ad27-f515382962d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 d3cb96f2-f713-490e-89e2-55d9fbd50923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 46849369-467f-4045-82d3-7dc3a1e5df4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 a54100b1-4b68-4f89-ba71-2a18e39570ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 6c7b181a-ede9-4e90-b217-e77b0792b882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 d855eb7f-fd9c-4b31-a5bd-53a84dd1a993)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #895 7f838d75-7221-4bcf-93b4-ffab61a9c6fa)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #895 2ca751aa-47c9-4ea6-9118-a5d0fbeb3512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 8a3c75d2-4e82-440a-8df3-f8119ef1449f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 64b568b3-6451-4a1e-b436-07c7981d4d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 1b18335e-5234-4ef5-ac81-f7f56e016afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 1bacec01-2c44-4d24-92ea-94c6d0ffd3c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 1a270ba0-52e6-4f26-9a4f-dfda3127367c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 000515e3-5826-4d66-a2c9-ac21da7ea999)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #896 87c78893-6fd5-4b44-bab2-31d0ee05305d)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #896 0a7e769a-a0f5-4d6a-8715-90a931973b36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 ea0a5b3f-4b30-4d9b-8263-15175b1fefb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 b0169a69-34d1-4bf2-9a96-120f74712e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 acfdd9c3-8fdd-4167-a744-676f3c7ac46b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 2573ae58-3f08-4c24-865e-1397bc157d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 d4668a72-ddbd-49c2-8417-1d501cebca14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 8480415b-37c9-44c7-bb74-e510e0256c40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #897 51af5298-63c1-48d9-973d-9afe7c3f5f36)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #897 72404961-238e-4a33-9755-86009458b10d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 7bf4bb4f-9411-4ce7-a647-4e3ff3a615fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 5a2082d8-12ab-4e3b-9d51-6478195ff771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 7fb6802c-b2c3-429a-8039-1965981c1751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 1ee4a19b-410a-4b0b-8fd9-ffe01bce67e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 a57b3517-100a-49be-9086-4dd17f47d2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 fc233edf-6655-4b9c-81ce-bcff08ffba74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #898 fb2a85ae-8c62-4fe0-98c3-ed15c35ab9c2)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #898 c6ba20bf-d1f3-479e-8fac-a26656d8f73b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 7cc66fc6-8cff-4aee-9d83-7dd8571adb5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 cd5d7bd0-610d-4950-bce5-6f83c91b7be6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 561a0094-394c-4c79-9bfc-dc3e27814d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 7f9d397b-885b-4c77-93a0-4aee8f1db70a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 0b94d92e-9f5f-4d5e-9e7d-4663fa0722ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 01b33868-6618-4372-b340-e36d0c71db5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #899 69dbc510-ddf1-43b2-89a9-65a65be827a3)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #899 c4a6995e-db8b-4733-8549-14bae664895a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 108db4b1-fa4c-44c3-925a-5702bc42f92e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 a408ae83-fec9-40cb-8aba-e2b2dfb17209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 8727a83a-7a05-4521-afe2-3fd03609cb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 4a5b2478-2d2e-40d7-a3cb-6144231c9048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 c702504c-55bb-4887-ac49-4385aeb9f763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 8587d773-dc1a-4739-92de-fba3098c501e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #900 d44c85ee-3759-4ada-aba1-a4525964f6c2)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #900 0ac36ff2-558c-4216-81c9-78734a6c8e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 cc0c7841-517e-4bfe-9244-71662853bd7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 932686de-e6fc-4c41-8fb4-2aa590a36198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 0bea74f2-ed55-4aa0-baab-5780abb63b01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 2ef75cad-029b-4c9f-bb40-40b447c4dc1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 7865c216-e02d-418f-aa6c-9aa213c3b059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 500adb91-d58c-4128-b28b-c42ff2774ab5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #901 28a5f7fd-a45c-4d40-9722-a696b2f96bc1)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #901 e822b8e4-2d97-40bd-b9ff-fc54b0fc272b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 8fcae71b-10d1-4ed0-a7ac-e7ef09ab08c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 0741347a-5028-425c-bfce-01948dba4aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 bb4c621e-d50f-4497-b96e-54b4381643fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 4ed4a89b-ebbe-4640-89ba-d502c4e4634f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 a8573f67-f6b6-44b7-8ea2-680b89b73e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 6c8dc2a7-b896-4a6d-9c45-c3695fadcfad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #902 f364e5e6-aaf0-4567-b843-06470a60be82)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #902 327d90a2-5148-4299-a6e8-db679fddf244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 967d9174-e0ba-412c-8e47-5c8f0c38160f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 ef071ea2-534d-452e-83c5-f8b2828cb93d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 2bd9206d-e910-46d6-a671-dd75c254d5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 b97f6bd1-147c-454a-87bc-2748fa5ef6af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 f8f15b0d-1227-4696-a5e5-1a52ca4d6ea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 e8c83892-6da7-4e54-91bb-929e5443d1a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #903 1157850a-0bb2-401d-a56d-f881406fc202)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #903 49c00c4e-37a6-46b8-bb6a-229cd2d93a10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 6663def2-4808-48c5-8f96-590670a3480e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 fd48b583-866c-4704-b36e-58e6583b1442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 6d469fbb-b36b-42ef-89a4-24b876fd74f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 2dbe82c9-5164-4711-ad84-98cca03c7444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 890d179b-a4b9-452d-b217-f7c279bb7b47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 de37c20b-bf5e-4e00-b2d2-feff0beebfc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #904 4e9dc486-38e9-482b-929e-62db064c624c)");
unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #904 b4f54af2-3b26-44a1-b613-0350824ff0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 006ac228-0cad-492d-8a6e-fe41304ee962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 def45db0-ac4b-43c7-8898-05cf42777d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 263564f1-d5e5-4987-81a5-a6abf41cc253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 d9b974a0-ee15-4ee3-9f85-2d6955993beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 cb44b2e8-7656-4d9b-8971-fde340060bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 36965991-d71b-4fb8-b63b-780a845f583d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #905 fc81356f-7ec3-421f-83df-0b3cf61bfb40)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #905 7af03166-16a6-470d-91eb-e53587203691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 2a7fece4-0936-490f-bc95-e6d4a8ababe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 6c3313be-409b-4e8c-b9d9-bb2c429453f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 4153d972-f255-4cd7-b282-f9a206f2c2df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 5fc1705b-e3f0-4adc-ab30-74122fdc5e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 f14f4b47-e93c-437e-aef5-286744ea1a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 3c114ac4-6a4a-4776-a625-263ebf04e3b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #906 1e09f950-5dab-4e98-92b3-21deffdc7cc9)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #906 5299655d-60a7-4785-84b1-deed0d2f0101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 743a2d15-ce1a-4a6c-8376-b51133cf8f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 d540bc16-67fc-4df3-b04f-f3482034fb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 d7fede9b-6286-4e2d-a101-81f6ca93affe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 ea7c122c-0842-42c0-8495-9a335b706440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 29267f2e-8047-4d78-9caf-0f720cd22f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 123179f7-5471-4282-8398-f6d113c1141a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #907 496818b4-7bfd-42b8-b5ec-353bb9226fc5)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #907 305e0b86-85db-41e1-82f0-f722ceae60b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 a5990326-8803-4c04-92c8-b94a0f7954c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 f970738c-8046-454f-8cc5-58ea334201bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 13ee8e30-df4b-4098-a0cf-72dbb81ff7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 6c800033-2c21-45b2-aee7-54923f12fcb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 84149bba-0dca-4a20-bbae-cc84124350e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 e25dad6f-60a8-42d4-b0cf-9a74a93bf9be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #908 62746bdf-6dcb-4dd0-9b57-384b77718926)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #908 283c3cb1-1ef6-4683-9dd1-5489d797d7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 2ee94374-bb68-4f0a-a393-e97f26b98986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 42106fde-47b3-4eec-b7dd-76c893d2817c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 5c1832fa-9798-419e-8fdb-181a7e1f1b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 3611a039-e6dd-437b-ba5d-691cb37b2e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 86bdc160-0e74-439d-ad34-f2b3ba02cefb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 0be1d81a-25a8-4e03-8559-d3a219815f30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #909 6e1dee4e-7e26-450e-827a-1f52d777f9fb)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #909 22f1b754-8ded-4455-bfbc-0ea01c2ee2c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 2a62c2a0-1ef9-444b-bec0-509c263b0d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 20c8fa64-ec7e-4a8c-8cf6-8109a1bc4b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 717b9af4-ec9e-46b5-8742-1c9acd6075a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 7b694368-3ba5-4525-ae00-b78fe84e0e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 f9f277a2-54c6-4b92-a14e-b7afc0070d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 dbb5b822-09a1-4491-8c49-45fa091a85cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #910 6757addb-a7b4-4642-ad83-50fcba2a0001)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #910 8ffe3a78-21e5-4071-9641-02096b5810c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 1261d925-38fa-4e1f-b972-75ffcfec155e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 34dc6d0c-4981-494c-b4e0-476365691ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 bdca3459-2fa5-4cfb-b257-a65d9a1cd549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 b0cdb060-3514-484d-a772-a46fd0f085ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 af1810d4-d51a-4a26-8f8a-5a2edadd336c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 f5a276a8-63a7-4564-8d57-1943281833b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #911 9921da8e-6a2a-4966-83a2-1785187f8d0e)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #911 b42486a5-bd8d-48bd-bbbc-e745c5b6c23c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 f4148968-efeb-4a77-920a-9b678637a616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 a60cdd7d-524d-4e1a-b982-c3defc3b7605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 b5a6d37e-32d6-41ba-8fc5-51636a5b5f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 53be213b-0ea5-4a14-a613-582b2849f221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 12e148cb-5ddb-4a91-866e-383c855666ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 7fd859b9-d1c0-489d-9176-f7072462a37a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #912 fc8eca2f-64a1-42fa-8b76-3fe0ced1b525)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #912 ce595473-6ef8-4dda-a433-05e8472862fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 c0e68f17-f853-4b1a-87d4-0a7aaac3ee94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 ed19ae31-cc59-4ec5-8f0c-0f3e0d848024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 df8900f4-e9ed-4bbe-abea-110c31d4c946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 118c14aa-acaa-4742-8e24-3a9977041aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 c2cc0ce6-ceff-4edf-849d-99b6abf4ff98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 bacc679e-52a6-4ec2-a4d7-0d2cb6fb50ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #913 dc17f574-12c4-48da-84bb-dee813c5d1ae)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #913 4bdcb493-17fa-48ef-abe5-3fd621ad675d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 ccb9d798-e314-4e9e-ad70-4168276f97fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 170557a0-5137-4850-ab71-c9cb2ec2dc64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 a9debb51-7a53-4442-8124-db5021464fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 80f800f5-3d42-41e6-b7a0-3400dd871494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 b972b8de-678c-4b97-95ba-301a3a7f5e42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 2f48255c-beb1-4652-9bf8-3c44ef9e1079)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #914 2422e1a9-e26f-4802-bea6-e1a609032528)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #914 d5610362-f832-44f2-88cd-2e8795d2e993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 16f4df0e-93d2-4246-9810-d7cfa77d6b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 f56c1036-4e01-45ff-acf5-4d9f4995648f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 3c3f8767-2804-4b6a-bf43-3283d010abd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 d5afcec4-73f4-4e03-b9ad-669e549a18a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 ac8705be-fa48-43eb-914d-52b1adb785fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 18e413d8-adeb-4c4b-a813-dcd1bb412e15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #915 b6fb7cde-1520-4305-8bf7-795550fa0203)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #915 ae410b80-9b51-4542-a0a6-e12e2052be9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 ade49edd-355e-418a-a307-e912578bfd35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 ba97eeec-6e2b-44ff-a6f1-5eb462b7b0ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 49ca27a7-cc26-48d9-b273-0ec82722b99e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 0ec2ffd5-eada-4ca6-96b7-03a6f824a5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 e73c2921-2d8e-4d24-a17a-88a8d4118971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 c928311e-1e1c-4b2c-b01c-366674652ee7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #916 1a6eabe3-b122-4fee-9ea2-de5811ac6e52)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #916 eac58306-489e-4659-a35f-140ef73a0806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 f3aad80f-0ac3-4a4a-bc6f-b75b7b4e9e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 f0b4ee3f-97f8-4eb7-8476-a7384b7d19ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 c3cbbaec-dfd9-41d6-bb9d-0008d1e39a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 22d019a3-43e0-4db3-9383-3709d5518ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 ea991b37-c66f-4342-82fa-c08ed0b46732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 7b77611c-1847-4cda-8c15-46596dd4448b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #917 d0775870-1348-477a-9b70-a62daf4456d6)");
unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #917 3619e0da-e0a6-4954-b787-5afb4a93a2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 4cfb05cb-9ff7-4a20-be9f-950bb8369fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 f67038de-983b-4eda-928d-b0315da36253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 f23087af-150c-40f5-b635-afad202ca426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 046042a6-ed9a-4476-9a9a-b9eeeadff540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 76df345a-4f23-46cc-85bf-7f1ad6a495d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 aa1f1e00-9c90-4593-b55a-2b137e903aa5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #918 8d25b9c7-0b42-45b0-aa79-cb410b02bb0b)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #918 2f0c4c44-7c7f-4fc5-8c99-6cf9438266cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 4536811e-af83-4fd3-b197-9f5198573db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 c9719d9d-4da9-49a2-b2b5-e1a42b89e2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 2280decd-5c3c-4c17-bfe6-9edb816649d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 00b7f961-b68b-4f62-b546-33cbe91c213b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 5bcce3aa-7e90-4951-90b5-cd1c81a4da0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 c1481b01-ecfa-4a6b-8c8a-08d1310945e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #919 41ec41cc-dad5-4857-a915-ba9245d1e453)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #919 14fcbc26-3531-4df1-892f-2ea06dcbfe5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 e56adf62-2f93-48c6-9fbb-1299b6ecbf1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 c12d6df2-859b-47e4-bea1-6208a8e402d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 c2e531e1-9844-4e85-8acc-b7a5bd9cf683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 394b7165-92dc-41e4-90df-d3f7086b4ce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 df3facc7-e18d-4977-a7e7-db6d5f8ef69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 f1af7d31-f25f-4ac5-a622-6480961ae1ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #920 6d26d3b8-e75a-4359-99f0-c8d3f265555d)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #920 472467dd-6cf7-49a2-b202-09ece6328f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 10f0c141-ba4b-460d-b79e-680fcb7f5d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 f4dd9b26-f1c9-419b-9ddd-dd4306fb2fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 50f2faff-acc9-4e6d-bf7a-875af4cc42a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 df2ef488-5ba3-46cd-b530-7efa323b0353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 bd3f7c86-7c1f-4b5a-a4f4-23d99d6946d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 dcdc77c4-ff9f-48a1-ac0e-eaeca57e8242)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #921 024ef0b3-227a-488b-8395-1136fb920bb1)");
unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #921 240e005e-e570-4e71-9a61-bdf591e6ebd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 5d23f0bc-12e6-4cb8-8b26-7a1cab47fba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 8a089c49-38d0-4226-890e-4bc335937aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 8fea9a3e-397b-4345-8c90-bf0779ed2ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 4973327e-4fac-4c78-b0c0-788cf52e29ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 6ca9a23d-f1c2-43c0-9ab9-49c2c505025b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 98711f3c-1e21-42f8-a671-7ccf4882be70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #922 cd2653c3-4b17-47f6-8e30-b872943b8fb9)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #922 00f737d1-93a1-41eb-95da-37a28b3bcd25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 ce7fd176-0b9f-4fea-b109-2f1b2a9892fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 e73323a2-c7ec-4c98-b567-34ae9b754b76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 aa748aa6-e234-4fab-b227-37fee4bf818d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 9b5a66ee-635c-4911-9250-171f585ee12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 eca45d31-3993-478a-bc06-ef80d9dde151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 3bcb7d9c-02ff-41dc-9f17-e64cc97d54eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #923 7892431b-8653-4308-aebf-2cedc9175215)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #923 7d1c9709-1c7f-4b37-9b48-cc77639afddf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 b8ec24ce-a097-4701-994f-eb2894f5fb96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 34e89954-3f31-46db-9337-6f3217f28bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 16b1b07f-b1f6-4ad2-97e3-7703b9c02c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 d54625b7-b1ba-449a-a5e4-320e1a653d61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 00cd4ef3-a5cb-4eae-89cb-bcb365e739fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 2dbba7e6-33f5-472a-a7e8-b67c72b8cc49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #924 dea0fb5e-bf0e-4804-a92a-cac4b3e160ae)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #924 d2934043-a930-414d-9ef3-55caf7db96ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 f3b19a88-939a-457f-a688-e5e8a07de110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 bb57bf22-70d5-488d-ab76-90688e90f83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 c5a48fc5-116c-448d-ae22-bb0c8c15266f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 83a8ec96-0674-4bef-83ea-6e7900bd318c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 501815e4-cb00-48ae-b211-7ef68f2af276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 8173934d-fe26-4cd4-b190-da63a7f5ce21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #925 d4ba1026-3c49-49f3-8560-c0ff5d6a5450)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #925 4be374bd-28cc-4d0f-a8cd-91953abf4389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 1ef25a5c-60a0-4505-995d-600bfed809cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 26eec37f-4ca7-4a20-99e2-003c02606137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 5a448343-16e3-4503-9f6d-775ebe3e19d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 ca20ddc2-4262-41ce-9716-fd924e81ddcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 88d2d318-e372-43b0-9698-a0622c45168e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 300f2e19-4e81-4cd8-8f8a-356a3c1c4727)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #926 5eb94919-f586-41f3-900a-0bff2e77d026)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #926 1d6133fd-509a-497b-b65c-15fbecd7fcaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 d42a8a4a-40f6-40f5-ac69-ef02d334ba31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 2fbe8709-bbd3-4130-b091-5f3a3f4370a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 4b3aff71-ecef-4349-8b91-c8177628b8a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 a76fc3e8-50fa-4baa-aa79-7ba4c90f4a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 3b5ff402-3c9d-48a4-b3fe-a4e0c0b49233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 1d5851dc-f7fe-4374-b3c0-714c9ea2834d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #927 a9f5ee7f-07b3-4da7-835b-cf8c51a98bbf)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #927 1c1445a8-1d47-43c2-9b07-0ab0808cb585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 a37ea68e-57ee-4806-a1dc-daf2fda4e5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 58a2a7b8-74f0-44b6-8f9b-aae1c5879acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 424d3dea-1d80-4c32-8ac3-7189ddc90699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 7129a992-3101-40d9-a3ff-a3ce9a8c2166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 25ecc187-f7d3-462a-8252-35596e166cfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 f3487dcd-e51d-4894-9720-ba21c36b24c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #928 99a1c0e9-5cdd-4348-b096-6e717c1e3d48)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #928 29d5ef77-5da3-4b74-9641-1410876a1503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 40d92a60-9638-4414-b985-0c6e5124dc7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 153ffdec-4733-4216-bc91-5024256a1ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 465521d7-32a9-47fe-8864-4e529b3ae7db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 729a4c72-be16-4ebe-a92f-b841fe8781cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 4edf0810-6771-4ed9-b8b4-a6cd500a72bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 495d760f-1752-4374-a1dd-f350ad519b60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #929 3e4374e5-763d-42d0-aca0-ef01a157a97c)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #929 d0261465-deaf-4b05-83ab-9085f5698dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 ea2bf535-4ce9-4b72-b714-ac4d6d8dea4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 cff2bd94-1077-41bf-b28e-67b3ccaf8eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 39b80d04-f683-43a8-af74-9563ce82934c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 88bd1d21-2c5c-47aa-8083-f142e582b558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 baf425d7-64a5-4b0c-997c-f8b5cba98f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 067a0ee7-08ca-4916-bbe0-e72e43d68264)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #930 d5358c76-21a4-4ef9-b814-d31b625b901d)");
unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #930 d16dcb60-34e5-41ef-8f81-bed9fb845784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 bb0c4878-bebe-4c31-81ac-6562e8221368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 26066705-ee86-4a3d-abb1-0283547c617d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 85f6e7c0-ed1d-4f22-b2ca-26cb4ae0cd6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 3c5a4b76-e631-4996-9053-0c9b4a90b5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 8cf908eb-b0a9-41a9-8af6-337f9fb393be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 64072ebb-b157-438b-a46c-a30619317660)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #931 7eb0b1cd-1b44-4da9-881b-fa03e5c0594f)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #931 8daa1254-0d5b-4a3c-a10a-12e8c45833e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 50423c0f-22c8-461d-98ce-6541a97ca32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 c61a0c1f-402a-4b2c-9c42-678e6bd66c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 9c46d122-94cd-4884-a5ae-813af99b926b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 cdc0fefe-8604-4266-ac9c-9cfa0c694ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 ce5367fe-85f6-46bc-ae9f-94cdbd23ac5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 c6bfa816-80c2-4507-ba44-aa2c91ccdc53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #932 5e60022e-44f8-4285-bab5-57d74d9618c7)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #932 d6dfd29f-4481-406d-a222-a9da8992361b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 54898845-54e5-46f0-9079-c72751872a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 8f8618c3-a14c-4c42-a9b8-bc14b8832b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 36288231-3e3b-48bb-a3fd-29834260e168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 e8baacc8-7011-466c-a9f1-38b29b05b55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 b95646b2-dc8b-4d8e-b0e3-416d95baf742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 a4b7bf6d-4284-4013-af41-2c37f41f56b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #933 9f575eb6-d0ca-474f-8ae3-87da9aadb3f6)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #933 151dea2f-829a-45a2-a4c4-7df93fb52ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 93ca505a-ad0c-42eb-b12b-7f78bd156679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 554c83fa-a1d9-4563-b795-82d13712e03c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 55da8772-7a96-4fac-88fa-23c0cc3f0735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 123991ee-89f0-466b-a064-a80e80b8701d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 0a12f89b-4748-4bb1-91e8-6f3fb9847ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 fcce2269-eed4-489a-bb9e-6bb332bfee0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #934 e0e19ab9-bbed-4f11-8bfe-2e2de0e02e06)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #934 58d248a6-4c2e-4235-ad2c-bc973230a0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 306508b3-79ad-4c19-bd0f-1e736982e47a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 551ee42b-4fb9-48cd-ab09-ecaaaf2bdec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 74861701-e505-4115-ab3d-beff986d363d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 b3862382-2767-4c3a-b49f-26cdf71a8bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 e7be3c17-286e-4a64-a9ad-09aefd7b42c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 5c3b3203-d98e-4829-964e-d89238bc6328)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #935 cc3ffcaa-8d8d-494d-b15a-a2884f9bcf81)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #935 cf16b30d-8414-4a28-a255-f826ccaeba8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 59cd6b3c-5afe-4552-b4ec-de35e0de8239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 68c374f9-b9be-44c0-9a8d-45fd1b8d8801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 c09404a9-6440-4fa7-9707-9756b8f6f290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 bbf6af65-9a23-4b73-8fe5-98725c4f69f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 bb4dc1fb-7ba6-491a-93e1-6db79273544c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 cfc2bb94-4646-47f8-94a9-4a7255769812)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #936 0df28540-fafa-41b3-bb16-ae96f485faa0)");
unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #936 99404b63-12c4-4e9e-b629-fc1cadbafcea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 eed9cae4-df61-4d88-80d2-806a2424a4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 4e655dc9-6796-48fe-9a5f-5d33102740dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 7aa3690b-e49d-466e-86ae-806848f33696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 da957155-ac16-40d9-a8b7-a586a2d7ef03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 e9443724-be9e-44cf-9798-cbb6a5093ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 405f4076-c49b-4259-a312-48332d37029d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #937 3a4e1cd9-b34a-4e95-91dc-13104df8296a)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #937 7e8c647a-dfe4-43cd-9649-340c70f9154e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 70f383da-faa1-4a3f-a9fb-fc4f55e74eaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 6b2b150d-558d-41b7-ac3c-1f36669bcf58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 3250090b-526a-465a-ac6b-d69c95c6f354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 474c0496-eda7-42a8-a085-5ba6fbdff814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 8a09094f-9768-4ba8-b613-0b5af351f09c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 7e61883f-c84c-498a-a16c-bac477194211)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #938 0c58c69b-08e7-43e2-b526-d96716ebb90b)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #938 57b28aff-32ae-4093-a405-c0f5e30a12f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 9a9bc364-f3a1-4ac6-9d93-c1d80877d13e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 b4f600a5-f644-4865-ac01-1abc642d13cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 3b5cb52e-3016-4eaa-9f38-2d02421a1cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 09375090-6c9a-4778-9251-4db58a889754)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 d9d46be6-0083-40f3-a810-d0161355798b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 21056662-4386-4461-8946-c6b476e38c37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #939 bcbce13f-2b0e-46e8-b7bf-a19bcc58ed39)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #939 906fbbd1-0dc4-4db3-a415-ba2886b80d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 ce62d537-bb7f-488b-a80d-bd318d0a26a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 b5cea277-8d59-46f2-8975-be5fd832269d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 34d700a0-f7b9-4cf9-b12c-f8c6a8543d77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 ab3df87e-ec5c-4dc5-bfe8-aa3043a4f6ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 97eb2f52-9d0e-4fad-80f6-fc303bb011a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 b4bd4d02-0d57-4ef8-9ead-0c7232901752)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #940 f67d25f8-c498-4337-8bc2-444e61745c59)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #940 63a7843f-2233-433e-9203-98367989fec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 ffdf3441-c98d-443d-aae5-5ec280b8a1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 102c631d-4ce1-4aee-b7d3-fe487ecb68f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 2e9301bb-8e68-4370-a7ac-c5ae7167ab9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 39e92ec7-3193-4eb2-ba96-9bb3d6dc5ed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 9acaafa5-ae9c-45ad-bb00-948efc65164a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 4e2bb3c3-c9c7-44ae-9804-953ad9b9dedb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #941 2ab1d999-d922-49f7-9bd0-b544ff9cd43e)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #941 db114a60-ebcd-4d2d-8917-8991c924a993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 feb8f19d-dc61-4c49-9cb7-3c41b0c1a2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 4973e2c6-0a04-4d10-926d-8fd9b5740176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 40881953-cb4f-4d79-b85e-b23e0cb26dec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 3cc94e36-c223-4f44-b7cd-3d0c1097ef8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 67cee148-0a2a-4f08-a81c-4e9bceea98bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 a43cd2dd-cb40-495e-b4f3-bce707cbdfc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #942 6a6db14e-cf22-4227-8f25-94e599dca945)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #942 6293416e-cbe1-4a5f-845e-c6c98acad88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 ed70d83e-bc29-4d3d-857e-b5ea3ff2a920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 30ab9699-8b7f-4d8f-aeaa-f99f4fab3fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 29cf1ae2-4e9a-4dca-8644-9ed747583694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 00bfb9b4-526e-46c6-b4f6-b78f61e71f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 593e3c37-ece0-4980-ac66-bd32e5e0c8a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 31ed2d9c-f8b3-4697-bd01-5c9653c50e06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #943 845c02cc-ac53-4549-bc77-0d8d01b74858)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #943 1d003dbc-c46d-4d1b-a545-c57c0f0ec378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 04dacd1c-85ec-4e27-8d68-31c727d2d679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 0c6bb723-519f-4de8-9d27-7647367d6f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 183d8671-f946-4d29-b459-7afb78ea9a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 7c31a87b-1647-45a6-8510-98befbdb5ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 be926fc6-0384-47e0-9736-1b67d426c80f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 77b4e66e-af19-4489-bad9-82f13c6a10b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #944 c9194fe9-296e-48ec-ae0d-f64da57887c3)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #944 94a54be8-75da-4596-84f4-fb0312259791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 fe7c65ca-d0c3-46cb-b58f-61d6e47b75d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 c970bca3-2ab6-4f3b-8e8e-28e186966fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 e38259fb-4d6c-4d93-a7c3-e0164cf44f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 b1b5081e-8ef5-4892-aac7-c6ee74081f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 54cccb4a-3024-432c-8a78-47f362eb1831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 262f641e-7383-4bd5-bca6-ce0c04ed9f2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #945 cb3e3674-9f8f-485e-820b-e5d81ee643ae)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #945 d8656f7f-f6b5-4ac5-89f7-49391a05ee5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 b34747b5-a345-42b0-94d1-747be3aa7d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 c1b7b066-b097-4735-8811-34c6321773f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 509a5b68-8622-4374-a5ab-6d94d9b54f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 c3c4a7a6-a747-42ff-b675-1b3419cb4a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 6e8aec2f-46f8-43b6-b2ab-696cc5a12229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 facc09b0-cad6-46a5-be41-e6c0ec4a6ac4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #946 991d3b36-0281-4305-a0db-d16c87633d3d)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #946 24acc746-d8e9-4841-a52e-aaabb3b41f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 af611a78-5bed-4fdf-928c-d0989b6cceea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 cc4c4d6c-6526-4114-9f50-8887d2289ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 34e8bef4-fbe5-46d2-a5fb-9e7ee45df683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 a4b98a2c-49f4-49da-b971-ffc2655cbb48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 afcdce3a-d4a2-416d-8a02-3d1829de403d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 6075a0bc-47af-4996-b6c4-844688f22991)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #947 39b5b98d-0352-40d3-9d07-938e17c61d8e)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #947 076621eb-f4da-4ec4-9a0b-7f9776fb128d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 ecf11b2f-2375-480d-b137-2d6118c7d299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 7422f871-5d1b-48af-8cc0-b0763e659193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 81ce33d1-223b-4af8-8e01-d2f5ab1d9065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 c1543b04-e5d0-4bba-9186-59c241290729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 5c500002-6d80-4763-8bb4-245dfd38f38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 48931971-d9c0-4981-be00-edf942f922c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #948 4bf46e5e-0e95-476b-a3eb-3055d7d3d004)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #948 e5bddd60-2a3f-47b9-8ade-626446dd0dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 c8b370fb-624e-47d4-89f0-1296663cbe8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 eeaf94d5-0d29-4c0f-860f-d4f908ff1e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 c06637b7-671c-4c9c-9eea-ee1af6bd5e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 d0fa7a28-52a9-4cdb-849b-b1890b8dd8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 74e8244d-36dd-4ab5-b411-b0c4e961ba21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 744e4932-b828-466c-94e2-58eb77906f52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #949 8942da5b-0ccd-4b0a-8237-40ac411909bf)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #949 079ff8d2-e6fa-4af3-8e3e-125745df8987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 7135f5f3-b441-4001-9525-813d89502b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 ae2e1793-30df-4437-849b-455eaf5c3449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 3ed7091e-9966-44e2-8e7e-74de8d8f10f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 ee0e03c0-89f1-4bc4-b8a6-1b4556204364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 0717758a-75e2-4b47-bdd6-efecffb39d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 75f9212f-4d8a-447d-a3af-bfc2f39c1b72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #950 7b1fba05-7b8b-4580-883d-3014dd9964bc)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #950 8e7f05b6-ab35-4f48-9b4e-939d67e0cd52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 d4f786df-c9af-4f9d-bed7-9232dc03b2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 55d634c9-50da-41b0-932a-98250e049911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 e22e1511-35b2-46df-96ca-a3c811d2230e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 e28cf7f2-43b5-4034-b339-4be401f3aa4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 670148b6-8014-4d0c-b64d-06496cf40596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 3cd683e8-0f36-4408-9d73-b1790a907459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #951 31490314-7480-416c-8a58-542a9f1b5eb6)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #951 89dc663f-a3cb-4113-b10f-f9d8b5e9eef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 17a82c09-36d9-4f6b-b686-a7c85fde11b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 749c4df1-7a25-4621-8889-7ddbbcf4241e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 ca40aefe-fa21-45e5-bc38-3134e3ec1aa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 ee4cad58-c9a0-4fa9-8ce3-28c38d094223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 e29b0524-680d-4460-a313-272a1272ff0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 385eae6e-528d-4daa-9c02-39531e7a2e9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #952 d6d63df6-2272-4afd-9215-a0f3fd5e1250)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #952 2407adf9-f2a1-4b1b-b86d-fd674f85a8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 a4bfaf20-26c6-495a-a051-6326cf823543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 b8de1222-0d2d-485e-ae08-2393f5381e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 34f93808-b158-424a-9d03-a96da7ee4247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 29b1b1e2-2a8d-451d-90cb-efecf480a1bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 e44da86b-716b-48b3-be0f-121e853d744d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 a05c6c2d-4ccc-4c79-bda2-0118a385a64a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #953 dc312c9a-1b9c-4ba5-8a61-72b51ffa4ed2)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #953 74019821-9827-4344-b056-d01084213092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 21f2c306-4496-47ff-a376-f4b9db706fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 a182bbab-a8a7-4b19-a317-8260487bb228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 e3429b8a-82a4-47e5-a72f-1f0519ee039a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 c62c3c02-7bd1-42fa-b8fa-53a9cde5e1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 a475fa39-734f-4446-8abe-0495da7578d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 d9319c4c-ecd7-4b09-9bde-3157a25847f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #954 94e490c6-a632-4186-a705-5cc934413be5)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #954 1bf694fc-e0d9-4507-89fc-6a39b4ffa170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 e16d626f-49ba-4a92-87c8-6ae8c7d85d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 ad6d82cf-a790-4d75-90ee-e82c1431927e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 f7897e41-1328-48d6-ae7b-638529a7fb93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 e5e6734b-eb2e-4160-b5dd-f3123d934d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 0690392c-5e3f-4e53-bf6a-128c037d4201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 7ddc2be1-278b-4fc2-89b5-1d80c4822e78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #955 240abd40-5eaa-44ae-ba0e-405e24af7cf3)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #955 32a8196e-5270-4ace-93a9-810cfa586ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 65216e13-7d8c-4e94-8d2b-4bc402f64812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 d7838e71-3e5a-40fd-89d6-844bf9d9dd25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 977023a5-a7ee-4829-a44a-18c4f8670818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 8f716d69-a2dc-4bf8-a345-924ef3f91896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 8a780bdd-0b07-44ea-9ef1-51adcc418b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 e46d55e7-6e0d-4d37-96a0-fd7f9ad81888)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #956 12a4ef84-05b7-41e9-b700-f155692f3715)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #956 d6b610c8-36e6-4e36-9c05-d564fe149a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 abff37e9-0a3d-4a63-82b8-db8d0677ade4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 89e97fae-1d3c-4bbd-ae09-729d19232972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 d0a18bfd-446f-4c85-bf21-bbb089e94321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 952b9aa1-223e-482f-bba4-9f9e3719ac1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 0c0097f9-baea-4440-83fd-94f3a1754725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 07216331-d2fb-4125-8390-4a7562087d10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #957 d0f740bb-5ebf-452d-96d9-9589e1505766)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #957 140c035e-e3c1-4a05-b95e-186b26b7785a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 861fcb57-55f1-4746-b523-baa93124bc48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 ac021436-05a6-4570-a4c4-3406d5fa6374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 71808ead-d448-4cef-b2ac-745f65f6ef5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 232181ba-567a-4e3b-a8af-71235f52ebe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 5b918e2b-a738-4332-82d4-b19ca03a0b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 26ee2544-4a2d-4f07-a49f-fe768ce8a4aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #958 aedafc00-ae0b-41ab-9654-111e2f19f498)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #958 9dc33e98-e5c9-4748-96ab-2dbf3225ed1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 98f6f5be-45a9-4f5c-97bc-0edb8eeae53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 74d79c3d-1c39-49e4-9345-d9f124358c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 0abffc23-1cb0-4ac4-841b-29b21e1f1e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 6ab74698-004c-49c8-8db8-ef6241487abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 ee325476-d4a0-4534-a88e-06d7c2bf02c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 45ac0df4-d5ac-43e2-aa37-0219c9bc24d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #959 c60fc7fb-822a-4123-812a-ca7bb94f3330)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #959 9d1418c5-2ff1-41fa-9729-c75ff43bbefe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 05a51018-4ebf-485a-b31d-0aa45e455055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 46c6ba5c-763b-4cca-8d70-ced4e88d737d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 f6492823-3cee-4d77-bced-fc4eafbf955d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 3af120f4-725d-434c-9b09-dbf2724aaf80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 dd07e501-ecf2-4055-a392-5927cee970d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 cbd70413-3d66-44a1-a30a-88772ae03cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #960 2c61ca8f-6b96-4f71-bd08-af6bd1ba9b9b)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #960 169cde92-9acb-4479-84be-c65902b3b6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 4e885bf5-dd1f-4d4f-8642-1140c1319c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 f069d182-5612-4f39-bc0d-dae1f3c66503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 f0f379f9-6fe2-46fc-b4f8-72be7e1b809d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 469603af-47bf-46f5-a75e-7024a164b260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 e0366dd8-9f84-49d0-9815-e34c6bb17582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 ad6c345e-b0e4-4090-ad7f-bf1a960a4411)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #961 1938d570-0181-4a7c-a00b-dd347045ae37)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #961 04c8b65d-7dbc-434a-847e-213bc66c38da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 d54e9f8b-5978-4401-b28a-d48ff36cfa44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 c72a84d7-d702-443c-95cb-c7a4a189fa6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 517b37cc-f4cd-4f9a-bed0-3e0f04e5916e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 0b2a0a6e-c5ad-4bf3-b934-0763b01aba1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 b471d850-1d5f-44d8-b254-040e6b0d4ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 826523e8-bcbb-4edb-aded-2fc87a78c480)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #962 59d5752c-9f51-433d-8f06-934e689b1ba9)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #962 11f15510-241d-42e1-8c3a-7b1e71d84d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 acf8b963-4a7d-480c-8746-6cceda216a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 d5f5094d-2e61-4755-8fbe-a103e733d318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 0d15354a-febd-41bb-b093-8158912ee60c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 e13df047-1182-47bb-94ba-f484d119c2eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 d05328aa-d2d2-4ddb-b6b4-f253ce9d57b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 53d51116-b217-4cbf-b719-5f10c00e0c39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #963 d87ddb72-1bf1-463e-a3ea-07bf546131a9)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #963 f6e3ed67-893c-44f6-b27f-d591ab8d4ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 de7f9e4f-f59a-4116-8a5a-3fb421a6cf50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 988042aa-c617-47f5-a90c-ba613d999a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 cfadcaad-4552-48a1-a4f4-041bde06b7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 358f9946-bfbe-4914-a994-61b1a15c961e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 c15f0324-c33b-4c99-a257-e4505f1563eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 e7fd19a5-1e12-4796-8adb-4224b4d3fd9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #964 f2ba5c9f-03bb-42c2-8fc7-fdb22cc1b720)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #964 a3394bb3-a8bb-4067-b494-27958c1e6d79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 b3faf2d0-6ac6-4983-bbd4-764d46b67178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 55cccbba-b5d0-4bf9-824d-3351efc04fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 596c12f2-bddc-4aa1-a85f-c5ff4476a3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 55bb04db-23e6-418d-8e6c-7d11ca473b01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 92508be1-0a9d-47e9-99e1-e06fb55561ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 217af251-a871-426f-be30-bf30d8d0233e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #965 f798c7a6-2bbc-42f1-92f6-1611c35d354e)");
unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #965 9414b1bb-1e13-4738-b37c-51fa14d1776f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 dbc09a49-9222-4b6d-9273-a32acdeddf06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 30a81c16-f97a-449c-8f98-c28d169ef43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 91e5e40f-b7c3-4d79-af1b-80890b59cd56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 16270c29-aace-48b4-81b4-9c3164dc5340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 9eb21090-2ba1-465a-9a3a-a29c7f2b8acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 94211e54-ad24-47e5-8068-0c2841063f40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #966 a02828da-9c09-466f-bbe2-a1816a6bf511)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #966 c6d171e8-d363-4f2d-92ce-1f36044aefd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 d3da501c-e6b5-489f-b2c6-e1c20c2b2775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 9a1fcd6d-0e36-4984-8122-97099da797fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 68d52307-f254-4b33-a0bd-81cbfed9496c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 2c0e2047-dd6c-4040-a29d-b7fae81631c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 78a41dee-8b47-46f2-a01e-3dfbb4a5efad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 a8513f0d-9322-43b3-9805-05ebaeb2c7fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #967 aadd53c2-672a-4a7b-827b-96f9d717b248)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #967 1a89f277-1d84-43ff-a90f-f3764857d5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 89a3ca72-82c6-4462-ba40-7132543d730c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 469b35b9-3361-46e4-8f69-a2e73331faf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 89fa6df2-ee25-4c66-a782-afc35fb42eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 0493dda0-f040-4076-85b6-adab6be9cdef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 e67ab6b8-86d8-443f-9064-372ed8b1233a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 76b35d76-6d10-4b59-86cb-d4a6b2d9a2a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #968 c8b23694-f376-4f48-9d9c-8c89752e5319)");
unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #968 7216916c-8eca-4667-990e-90bb9183209d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 f63e8491-653d-45d3-a790-921bcffdaafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 20f7f9a4-21c8-44cb-85e5-2ba719949cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 691a955a-bbd2-41b9-ab3c-584c9c9a272b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 a0f6be72-87ae-4dac-b9a0-5d5dce5d0d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 9aafa9ed-e96a-403b-9031-926cafacd60e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 74830ad6-3ea9-47d0-88be-d0a7636c1e92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #969 0f3c60db-d0e0-422f-9719-26b542cfaf1f)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #969 5d92303b-5bd3-4d22-828c-6c41405eb018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 4ae0563a-b409-4b33-b6fb-5ceeb3301998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 d8f9fa79-45f6-4187-b2d1-0fe319cc9c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 cdc123c8-6f8d-4ad0-a34d-a22fe67540a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 08c4f823-3f95-4d33-990f-ed5fea380726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 418c6b8c-ed31-47d6-88db-1b7a62b96e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 07eeff06-5b48-4d22-ba14-5de2f7638fc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #970 2606e420-dd52-49ea-b9c9-bfe30d19aa17)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #970 956fefe1-0038-418f-90e8-f30888681aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 bc9eb206-b140-4ea9-95ea-137df4ec2b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 3b4cbdc8-b130-4ee9-9ba3-7c3746696142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 f332aaeb-77b6-42b1-abaa-7c5b498b2b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 16da5609-e684-421a-820c-fabf5df33969)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 4f071b79-b56c-457c-ae41-faa5a9a3c682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 209dec2d-782f-439e-9750-cfc1106388b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #971 ba95893b-6021-4ebc-a281-c3843e1a7220)");
unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #971 b7f0db77-629f-4a62-bd02-62d8c7fc9145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 d393289d-4eb5-480c-8f04-ffea3fad143b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 023ca13e-a6de-45b0-9f7d-957e138bec5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 403b14e7-0992-4033-baa7-d8d7a9c516dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 41ed094d-e52a-47b3-847d-8c85e6b88c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 f64d3df7-75a8-4a1c-9e9d-7311a8482e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 d57a2b07-48fc-4726-b486-aa2c60f164da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #972 8d740a18-4dc1-4de5-8a9a-201b00c09a11)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #972 208831a1-9cd0-4e15-97df-5c3ce31c9c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 e4983847-56a6-4bc9-8d06-48aa255905d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 80d3ff1c-97ea-4f12-98cb-bb6e6b31e18b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 11c45d98-c6da-4681-8a4b-1a8ea7e2717e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 4c4d820d-3be8-4e97-a693-5efc4aec14e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 d4ed8aac-da51-4997-9ede-23457282e03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 a66947d5-a18a-4378-b1d9-7cd27f71fc6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #973 b9590da6-ed67-409d-8f08-fca41b6e8b20)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #973 852acfc4-8200-46e8-9973-6ede1beba88d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 02a8cd36-108e-4a49-afad-251dd4afb824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 fcc342d7-635c-4316-b997-eefab703afd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 3aefa0dd-7c11-40d6-a9e8-341e00d0dc34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 2315fc2f-1f78-40f0-8ea8-80b9faa6a14d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 fa98a0b8-a5a5-4a0b-a066-aa890fd5e476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 11fb07d9-4ced-4ff7-b2f0-16c78e9ca364)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #974 9990c9a2-a795-4d13-9ffd-0e97e95e46ff)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #974 510af243-0042-4b66-9e76-a148afde2be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 badfd583-746b-48a1-90d6-a598da8129a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 54d4c489-cac2-4a07-b7f5-abdf5276a3e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 9bb03614-8278-4352-a387-78003242ac59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 91d1c0d9-8135-4d0b-b22e-e340ffec2fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 c5e1f3a2-a59e-48d1-ad31-08e8699af447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 c1b7f735-dc0c-4831-bba3-1450184e685c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #975 01e014e0-f04e-46f6-bc89-969d9097f679)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #975 b753d8b4-0b32-474c-ae80-92df578a7401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 28bb7f5e-1314-43cc-be72-1f531c872964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 244e91c9-5698-461d-8d49-5a1d9b6ee158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 931578b7-75fd-42d4-8969-9e1db2d392ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 4c77a37f-8fa8-4b07-a17f-da754b958a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 52c7a5bb-1c07-4941-8cdf-f4d60dcaccc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 8353abd6-eca1-4a79-9387-e12b5436cd17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #976 4f754458-6159-42ee-b26e-44fafcfb7bbc)");
unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #976 131a349c-cfde-4874-a087-843d3d84aa75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 f4c47d5b-9f42-4395-8da0-7bbfc5b22d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 f6a8ef5f-c471-44cf-be97-ba9912d2b23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 82fc68c7-2d62-43d6-868e-cfc7bd00f278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 19eb0be5-4a96-4227-a64c-d29c65d82c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 b543206c-ed3c-4b7a-b77c-619569ed9541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 65f8cfca-85a2-4411-961d-c875e96c5aad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #977 0515c690-794f-4077-a77d-b39b30e9f9a5)");
unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #977 f876b1c4-b67c-4a46-bce1-240ef3f984da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 bc5698e5-36d9-452e-b041-fe8e00a939ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 3c37b652-7e72-41c7-b2ca-b7fdddc4c1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 3ea267d9-e1d7-44cf-af8d-5c14cf648e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 a67dfd70-378f-4f95-91c0-cd98999a8cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 50c7ed78-f14c-404e-bb48-af7d820563cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 d21c75b8-66e5-4d8f-880e-a30de69e7fa9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #978 9b1ff090-225d-4221-a1c1-f31485852d2a)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #978 36913d91-5bdb-44f2-b5bf-7ceeefdce289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 2f129908-c766-456e-aef9-4dfe4aee3335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 6f1e4800-8504-4bd3-b529-08a72ac07ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 fbb9fde4-e603-4d4a-93a5-2e6fba2332ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 f5ff1a60-e116-4197-8248-c5a804d71236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 0ffca274-29c3-44fd-883b-06521e822b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 2daa33a7-de9f-45c1-9be3-ee1c7b76c03e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #979 252db8c7-e15c-4f0f-88f3-00b09bd66c77)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #979 ded9409e-5344-45e2-84d3-ab262fa51e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 295e9726-82c7-4d25-b12c-96770914e87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 431df401-3b67-42ac-a645-466b41a54630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 ea531441-fb07-435d-91fa-303e5f9d1efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 836d25e7-f999-44f4-a077-e8aafc427de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 7937ee31-79f7-4d89-8f80-5e625362a93a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 830b732e-925c-46ef-838e-44861f137e2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #980 c49ad6b8-5a2d-4e47-8b19-af3ce1e3318e)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #980 595d0b7f-b72d-4db7-bdfb-9a7af3b9c0ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 a5ad1fa2-f071-45e2-a0e2-19b96a6a5fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 9a0fd33f-d48e-4850-add4-0b77e141350c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 3dbf14a5-9ee9-48bf-8930-630a60b7dbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 16900347-d842-4fe0-8d05-2c3328b4b464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 cb659fd7-6914-47a7-8dc9-c85e52b96fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 f411388b-78bc-4bb3-acbd-3addb8bad2a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #981 39efdb88-ad2c-4a63-8dbd-26f42f66bb73)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #981 99eb8025-7605-423a-b44e-8b8eb652c8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 b26c5744-355e-495e-b10a-3440020336d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 957645c8-c9fe-40f6-95ba-b81686b01fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 6cfe09ab-80ea-4563-ba6c-1b956dbfff8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 5b53934f-f10c-417e-8729-30d1010e7fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 f16a068a-ba29-4e6c-9ab5-679b46d290af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 201f6e31-d654-47ef-bc8d-4168175d5080)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #982 ed4e584c-31e2-4700-96ce-619539986c9e)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #982 99f5470b-86d1-4cd7-83e7-a4969efcf66b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 7f3a3b03-5576-49b8-9ed4-f467fb45bb6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 c007aa97-7572-4aa5-bb4e-30de0b8dfca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 a0dedbb8-d2a5-4f7d-bc3d-758640edd300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 21cd727a-35d4-4ba7-bb1c-ce3ce605ad71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 a99e1015-8ee0-45fd-8446-782266900779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 c6f0d72f-0758-4785-87ec-1d06cca42688)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #983 2a287c87-075e-40a9-b5f4-b29cb0af9891)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #983 097e9e7c-a507-4b4a-88c5-bcbf6a8e1548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 18063aa1-f86b-449e-844d-18244e602c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 43880182-eb92-498c-a2f3-114dd48bba12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 d525c81d-5a72-4167-b709-f7cb7be87d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 ec56b472-6a45-4c9a-b692-0331623423bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 15f8f46e-d5cb-4974-aebb-1b989e2f1327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 75651beb-4467-436a-82ed-d266ef4cefab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #984 d3b430e5-e4ee-4158-801d-4f16b3d30c18)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #984 e5128532-fda4-4333-a5fd-5cd06a1df96f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 98733812-e682-454b-a3f0-271557b05e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 3826290d-2bef-4820-8f42-3b882005749e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 58361cb0-817f-4b9b-9956-5083fd74d6da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 7ced1092-b656-4509-b169-97d119a9b8d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 44b3d2ce-01c5-4cc8-ae6e-1eed078a9c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 6ccd9e41-1fd8-41c2-b686-12d6c4cb178c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #985 50ab913f-a2e3-424d-9459-ec650a287fed)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #985 4dd16d99-7979-4991-8871-f8cd2287abd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 6801b3be-7c14-4cdb-b7f0-f66f2c7e9b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 177b1763-fbd2-4a30-8573-d873ae385210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 762bcbe8-782e-406c-b955-93ccc0adddb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 984684ca-18a3-402f-acc8-3f160d9407c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 932de9a1-9bdc-46c1-b13c-c110bc41ab56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 843e9bca-22a1-4082-8cc0-ac3122bec993)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #986 55b93d79-647f-4a54-a30e-bc3414b68f30)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #986 6be685b9-8a41-47c9-9d80-0606397a4361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 0f0007ea-8b96-4566-9b9a-51bdfcb5e952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 a5340a98-951e-4462-80bd-382054ddbd19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 b0d20c15-d836-478a-a044-f0aff99e3409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 4498dcf0-b855-44a8-a357-5e0031d44161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 96c36be3-a173-4657-ab83-42a02a342e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 402c556e-615b-49ff-adbf-3dd39eae31ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #987 102115a8-7cb5-41e0-a1da-900f488809e0)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #987 152cae6a-b8ff-40a3-9bef-92e2019c828d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 99326eac-22c3-4347-bfc1-98e78ee9ae0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 998c99af-119f-4cad-a10f-d63e103c2b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 8d131752-06e1-4d07-a6ce-5d4f854a6f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 8462ef93-b336-4a05-833c-609fd388bd71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 374334e8-2960-4efc-a3a1-da547e7202e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 41f9614e-bbf8-46f7-b68a-baf15b7a3231)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #988 92c69b00-5487-46e7-a583-137617b3d6fe)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #988 896f7988-2456-4ede-aae6-b35dda50e849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 2220c14b-42bc-48a4-994d-9d614e9ef140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 f0a4ceba-9ee9-4212-9182-cbfdfe35a6c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 eb1664b8-5677-419d-91cb-478ccf5ebfb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 04e3bcfa-f945-43d3-a5b7-0238dbc0f44a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 5ce065cd-b1a0-40a3-87c6-69634eb250ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 ee67c75e-4554-4095-9dae-c6bd534affbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #989 f15ba399-f8b4-4009-a14b-498cb69bb922)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #989 3cb10998-0780-4ca8-a22c-ebf5e4440ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 84737fbe-5b98-42e9-a3cb-afb9d23dae6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 24e4e15e-1044-4f18-8206-bb366cc2bd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 f75f0933-0850-414a-b979-47c929ab3cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 554d93a2-a318-4739-93aa-e35968e77bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 f15b3208-a290-4aa8-bf11-eaa12eb7073f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 e03f89af-a8df-4af3-bf7a-62eccaea49ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #990 fb3d7d40-174e-45d3-98f3-22e032988235)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #990 04aec227-2d99-4bd4-bd7a-e635367383e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 2c89bad3-04b6-42a5-87b0-355d94e64e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 19c3147e-9e57-4bfe-8d8d-da00358a032f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 fdb4c836-af1b-4465-8a44-b6b4cd7274be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 9334ce2b-08b7-4399-9392-ab01d5c02aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 3248b67b-4d70-4ec1-b4c9-20fbb46cafe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 ed7b21db-3d6a-457d-a415-1e93a19f7b6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #991 52275ca4-f805-4a23-a2ce-1f1e1ad38b97)");
unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #991 b21456a6-d679-438e-aa3f-a2f76f0c6210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 a5848edd-ccb1-4308-814a-865ff45f529b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 0609760d-f0ba-42cf-95ae-04d3cd032db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 6fc7fb28-2b52-428d-a508-cd6a310f810d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 49f6913b-a4c9-49a7-9506-9a792a754cbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 f6b9b6c2-9be7-43c4-8bb4-524022ea57ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 eed7857a-1927-4663-bfc1-094dbee05dee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #992 6856e7b4-b7a9-400a-a13d-e10a51b56df5)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #992 8d00da82-b111-4e94-85ec-5049a4f7b694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 9ca23de9-fda9-4e43-90b2-e02618248a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 1d598c79-2e7e-4cc8-aae6-eca247da5520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 285dffb2-f87b-4753-8bff-2d36f72fa8de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 b39a7521-7bdd-448f-80c7-5216c8df303f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 bcbce322-168e-4f59-b38b-1b0e728f62eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 e48cd054-7fae-4102-8b47-2fcf2e769f20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #993 43169dd7-a44b-471e-a55c-5346dcf7fdc5)");
unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #993 d3a0614a-c59f-436e-9480-3b4b81fafa00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 d108dc02-6182-4817-b9a8-b170e369f6b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 c28a959f-adcd-4cfb-bb93-e6feff30780e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 c775c2ff-69f7-4ff8-a235-4536b3e6fc57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 1449f1df-dc95-452f-9caa-36ced4601f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 4ba82c23-a5b3-4ddd-8a6a-b9a5513ee746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 c1191b20-f553-4ef2-8988-4478efbde50b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #994 b20ef81b-6eaf-4bf2-a1d0-16600cbba41f)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #994 443237c5-a4cd-48d0-bdc1-4618eed5e2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 6ce1264b-a7f7-41d5-b3b9-b375b101b93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 debc42b7-0594-4e93-a36f-4fe5db14c290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 c1b3faa3-b9b1-4c20-8991-7be242d32519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 bbce56d1-3605-4eae-8c2e-408c3e1181ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 df20a338-ce3e-4a4a-bfcd-5473484a0695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 58e24b68-a133-4952-aa46-d06f46910788)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #995 624379a2-1dc2-45b1-8602-a6a3ca71f160)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #995 ff736de5-a2b0-4be7-a67d-b105f6dd61b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 92456dfc-4627-4c2e-849e-4f2d96b1cb19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 ddc372ec-42c2-4350-a8c4-44a7baf652e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 1d44ea84-1553-4d38-983f-6f9c7341c05b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 0f6fd2bb-7777-4206-bedf-50473261da4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 a341f9d6-5c79-4bf4-ad27-8741f9a64489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 241d5ca9-6781-445b-bcad-8394ae2c2e25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #996 fd6b1d50-d6aa-4a14-a253-c581d68da179)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #996 d6fc4ad7-17f5-4d92-a7cd-850b56fd2103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 71672539-6045-47dc-b9d8-1daec15e145a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 23340216-20e4-4e57-8e28-c0e6716bb947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 2ab27bc6-0c07-4b09-be06-e592d070d9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 64597c63-1188-4c72-9758-7b65a4918ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 4165a95f-1fb7-42f2-b4d3-1d1bdd4ddd30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 7cd8baa6-dcd8-414a-a8f1-1ea5e7b7da22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #997 8e639257-da54-48ed-991f-41f960c1e632)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #997 d6653a59-36a5-4d8d-a49e-f8c13503c480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 c7eb9244-f25d-4198-8eab-afc41dceed28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 f063d953-2f04-41e7-8d5a-15eed41c911d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 608ceabb-1c45-46b0-9163-20f3b3bdacf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 81f30c14-81de-4632-a73e-fb7b08cebdb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 40bee242-d15d-4659-9fdd-474030266649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 f727bffc-7903-4b4d-9c55-73f13dcb8577)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #998 d9243c20-25af-44e7-8fb2-d4c9d3abd5c7)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #998 7e018d4c-5382-4a7d-94f7-cd0c6d8de261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 beb86a8f-839e-445f-a068-9d88b398bbc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 c5be7ed5-6718-4a32-89ab-8c497448b994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 0bb92f72-13d6-4316-987e-cddc4b9c43f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 48ae936b-5e2f-4a0c-895b-8dd270d0b670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 72da4eb9-227b-49c2-96fa-80c381f982fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 858e6d37-62bc-4fdc-bf96-0044fbdfb934)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #999 45a766aa-488f-4472-afc6-2a19d242f1d2)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #999 9124ecff-daff-4df2-bd8a-645c5ab68bed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 aa6b79bb-72a3-4416-8bda-d773960b8578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 dfd9f1fd-582e-46a7-bdca-052c55961054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 d309a87b-cf36-4ce1-9990-d2b016d9e26b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 a7cdb49a-8d5e-4341-9a98-0f70ceab577e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 f0d22c1b-4af1-41e8-84be-c1acbee58e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 075eb584-4963-41c5-a28e-55e439f65512)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1000 39017797-2ddd-4b64-a157-dbeca4116f31)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1000 4b98df62-0f9a-42ec-8987-722e1177b579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 26be9ad5-1aa6-4701-84f5-9e7e865f73a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 5042fe20-e5cc-4c76-b02c-925cd30ac5b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 25ad3551-0976-4d25-b2f4-deeebf3ab573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 93538f3b-3ec4-40ea-b7de-f073ce30b4c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 c7626f83-c7e9-494a-b25d-9d701ebbb975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 439984a5-f753-4d08-a0b9-219cc4f2359d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1001 bbbf2937-6abf-4d22-abf7-403d3a3891dc)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1001 988324e5-58ea-43cb-8573-46fbbf11fd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 53d4d616-6f17-4c53-a1be-c68a11b74389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 05467f46-3bad-4af6-bfec-1f9d862b314f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 fb075107-ca62-46fd-8afd-2b02fd351e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 2f8589d3-2ab4-45bb-91d8-c125d2398341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 7b800f74-8796-4be1-808d-cf2264afd220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 ba2d321a-5007-4f5c-ae3f-4ec82243464e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1002 61d54b79-06c3-4c94-812e-331f43467fd3)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1002 50b51e4b-0f71-4a66-bd02-2e1d985ae6fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 0012d346-f9ae-4ad7-97c4-fb938835c030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 52df0775-8d19-4cd7-af31-8dd40d3f0a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 3b656e71-56cb-4422-b93e-dbff1a4882f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 23b1409e-32aa-415a-a560-7de3a4e4fb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 218e88a6-9424-4eb2-8dcf-80b111f47e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 ca2f7c0d-2f5e-45b7-9ce2-ecf9fef6593d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1003 adf9bfe2-f54a-4228-a833-dc0c2376d33c)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1003 7b369ddf-7c4c-4fca-a74e-41133c946b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 1cb49c45-7aaa-4fc6-a6a9-0dbd429c8dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 31f9d16c-dd0d-43b4-ae4e-36628a77ba5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 472fcbc7-d074-49d3-abfb-0eb7c1a32d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 ab69f565-6200-45b7-8fba-ed734c6913f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 b1f378a9-e65f-4ef0-9e3c-ea5277cab83f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 5afd6507-31cc-4bfd-a96d-257a976f5626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1004 352bc5ea-b9fc-4a70-9779-11f36d3b6ab8)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1004 031925ee-fd56-44e1-a141-103252c48e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 eb166974-cd9a-41cf-a280-a57c7f1e14d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 8b9eebc1-654e-4aed-80c4-87bfcc8a1183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 2eb1448e-d0be-4f85-b8bc-56c71d640022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 458f0983-16d5-45ac-97e6-c26f58faab25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 f0a77505-16e7-4acb-aa5e-9becf942d943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 51d4a914-f0e7-4606-9a12-8eea4122ba09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1005 539c1144-f744-46e6-b072-206207863468)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1005 ecaf244d-402d-4dad-b462-22fa69220d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 7c8035fe-713a-4940-a58b-6fd0ffa8b8f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 80eec08d-f8d8-490a-bd89-7108c9eb2b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 f644911a-e094-4f6c-97f4-b4f8fe1125d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 799dde13-c6f9-4dbe-8b57-f9161954d42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 ae0e41b9-39aa-4fa8-a7a1-e974fb15a133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 b276270f-fb2c-4a89-b00d-09d3d4ecc881)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1006 7ef29b94-f057-4038-a739-1aeb0eb0bca6)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1006 68d67989-4473-4ada-a81c-807b9787301f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 a33cc44b-fbcf-4022-90d4-7045856dcc75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 a3b74241-9926-409c-bb4e-d9abb3d9adaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 1c51699c-99b0-4b34-a7ba-a1513a74c3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 32b71ffc-dfd0-4a7d-b36c-b02db50d6475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 e7781ea5-9310-4cbf-9398-9ca49c25aedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 ceab19ef-c780-454f-b064-b289980f9632)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1007 842d818f-9db0-461f-9631-7b844aa3d300)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1007 fa9d23fd-740f-4c1c-979f-719c7ddc2fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 41e380b9-c1d7-4b5d-a555-504254dde359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 6d34bc17-1446-4b44-92c3-07eda884bd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 35f1142e-2541-4c15-9e2c-26edd7438ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 985b30f0-2c46-4257-abb3-6ef13a258035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 2f53fdd7-9a39-4083-8513-9f11a5f6da6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 b4b6ad12-2c75-49fc-99f1-d359f090198d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1008 c1e22ae5-bfcd-4901-8e73-ecc7943aba10)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1008 4ef04e79-b7bd-42c9-a79f-77d7eceb7b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 c281edf0-df3d-41cb-b54b-a8773bd96405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 165c42a5-4c0d-42f7-b4b4-1dca31bbd320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 2ee2da35-8e7c-45a3-bb5e-e77489965599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 14c0ad66-b425-4046-aaa5-f450d746967a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 2a16a100-161b-4f5b-86e4-a5fc532aef4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 98dcd15a-13fe-4c9a-825f-6ade958e502f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1009 792cebf1-53f6-4546-adab-ace8d9088f7a)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1009 b74ba7f3-b0c5-4d55-8cdd-6228c3472108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 5dd7b2e0-e602-49b2-926c-022a5eb12098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 8372f731-2203-40ed-a685-0aa8e479e3de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 e043474d-4b9d-421d-a6b0-79e5a842bac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 2a29fcd1-6fd8-42e2-b100-8fe222c1c4a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 64f22a6b-8992-4cb6-8662-6b7687b4d8d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 e6ab02a1-f45a-4fcc-832f-3ad87c0cc6ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1010 793e18bb-f18d-4783-b02f-8cee7fc90447)");
unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1010 16b1886a-8a15-40e7-b6bd-c046205ed2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 5bd53e0c-9bb1-46d7-8783-a30fc095d1b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 ee8317c9-3863-410e-9dce-e8ab00a8b949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 cae73916-ab49-4124-803b-26d6143622af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 7e2c6296-15fb-4c15-84d3-02bd51e18247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 0ed1f13a-7c37-4134-95db-6087c8726f04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 20e6fa33-7ba6-4bab-ad8d-f4e76f023e60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1011 a5da1ec0-e386-434d-b648-4c7c32965d14)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1011 3e3c7752-81ae-48ae-b92d-48d601414d4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 104500fd-a4fc-457c-9cfe-c835ff573e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 9e63b09a-8958-4320-a4a6-0c1b4b6576a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 6d19d9fa-b1fd-4ffe-9eed-e475a54781c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 8900220e-357c-4e4b-af0b-8d201cb7db58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 90f9c858-c85c-428d-bf6b-1289470e7266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 23431ae4-4db8-4601-8d63-e86e83b6726b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1012 56201e82-f700-4a55-9ddf-60c6d7d90fe1)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1012 0ceea9d9-c560-429f-a676-567e690de4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 f15b35a9-69f5-420c-8f0a-0cd4beb1a594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 64a76099-f60e-4ac9-ab46-f1fc7a03e0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 d9d4a00e-c648-472b-9436-992a7521e5c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 f01c82ae-fde7-43a1-b29c-bfd286da9525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 fb74ee58-b7eb-4583-a5cc-a6b6e5c3e14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 3184a2d2-8524-445c-af4b-2d8efce1ef5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1013 b9674d19-7e33-48f9-8948-3088c70ee3b4)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1013 263ed77d-1610-4564-86c9-bb02427876ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 6bdb2a44-1108-486a-aa73-19782fe977f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 c7535a3c-9b85-4dfd-b00f-f67314ed4e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 9a2a3125-5a27-4035-b326-514db4c5b952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 ab79ed23-713b-4980-bc0c-af5e3e3b69d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 72db6d88-109a-49bd-94e3-a9498afdc7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 93c0f117-ce87-4a5b-85e6-c2b4a8fc7d77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1014 bc5a0ea9-4830-4f26-8aa3-7161460e90e4)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1014 77b30779-2a95-4e38-ad64-fe4303140fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 a8fcf824-f367-46c2-bf45-c443e97c8154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 56aad222-8b56-4ce3-a37f-e2967b58f8fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 8cfe0739-c25f-44d5-8683-4ad71750dbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 7007326a-53c9-47b7-9662-953b55a898a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 db3045bd-be9b-4651-8ea4-8c937a8c06c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 1dfe9096-d02a-4982-ba0c-d34d04357cc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1015 1c7539e7-0f63-43a5-a68e-9ab7fd25e552)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1015 c91eb228-3651-4209-ae37-406b3ad2577c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 40093671-1bf5-4d03-8b70-2ca4648d21a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 57f1968a-01f8-4b25-8d66-3f31d675cb36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 847e92e8-f4d0-4a9b-8bb5-2a8817ad81ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 6e122ea7-7f68-4e6f-bb6d-832a34d1a767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 da4fb5b8-97c9-4749-9c1f-3d183f721efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 03a4c3ea-42d5-4cb1-b15a-fe0d52ef3134)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1016 a06311ad-c595-4282-85f3-57c332effa11)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1016 42f75601-c39f-4455-8ea8-730cb1ba4859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 5599b623-a227-4c49-8d3e-4673fb324fe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 071bad4b-39cb-4582-bdfe-817ce67e60fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 08fd1a2a-5b38-4db2-9643-078a30387a78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 e970f24c-bcf7-4b06-9440-39e125f0bdeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 6ba43b1d-62b4-44a7-8c78-633b3ee8c10e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 87fd2316-09b0-43bb-87d6-87a66ea571fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1017 55b9b754-4484-4bd8-9204-b48290db2ec4)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1017 95648176-dc66-44fc-ac69-7e144c79825e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 4dfc6332-e402-4c7b-8396-d69f8d962b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 b5f6cfd8-f24f-4468-be15-0fdb6f728439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 2cc07331-306d-4edb-94fe-2c4f02f42d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 b0dece23-55aa-4a6d-a522-6056676da17d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 83bef500-3225-41eb-ad3f-2fa1bd720fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 45ba493a-d2e5-46e8-b25a-4604213f69d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1018 4ca1dc4a-b6f2-4c1b-b30f-80ae62568967)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1018 595694d3-99de-48b2-b92f-508c5d4e0537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 1cab90d4-69fd-4a2d-bfb4-7928f899215c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 6d2aa6cf-8b48-407e-9b61-f0e2e4a9d473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 13b9d979-208b-4907-93e6-c61d2a524bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 57862e0d-88c8-4107-8422-fdfb4f2763cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 c9dff5e5-1647-4c42-bc63-5c06a50b2692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 8325ef44-1ae4-4aba-8c61-694d71bcaf2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1019 2690cd20-e534-4873-9c9a-ccbf21c10541)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1019 008258c5-1a4f-4490-a5e3-2c85d385f9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 0998527d-addd-4f4b-9af6-1a4e109277dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 ee803410-f120-47e5-b021-6de4b2d75fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 e91cd1ab-f974-4465-bbbf-95c91d85d406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 a7634547-08f7-472e-a0d0-bf71162d80c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 fc0691f7-fe40-4e26-b9ab-b99087ee61d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 209ce384-7c57-452b-ba07-b4ab29947f3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1020 bf899d26-0c1a-4a63-892c-de3340c643e3)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1020 2f2e3e87-01db-42fa-92a6-b585d0dd7cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 28170d3c-dd3b-4e81-8db8-dc155b783771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 1bbfe11c-7598-4099-94df-17ebf0887145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 6f7eb8af-3305-45eb-96f5-811bc83d0f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 dcb1c56d-5a5c-4709-a337-0d68246e00ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 81ee40d1-8d26-4a2b-a7f1-441bf69dd77f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 1efcf39a-2afa-4968-a82b-f20b134a8fc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1021 191b2cfd-fdd5-4e03-8fa2-e0d5780c9cd5)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1021 ebd92698-090c-4499-bcdd-6c67752e23d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 46dd1773-97fc-4bf9-b4a6-6cf603baf73a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 59528eae-6b81-44ca-b5c4-f277786d7f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 5c7a4281-1b3c-4bf1-9276-f41ec8d876dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 dc339b3b-ed5d-4c01-8b1f-39c58189e089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 527521fe-7b42-4e75-84a0-db6268bafd5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 7e2c8491-4af3-4ee4-bf4c-ad8ea3e9a9cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1022 1b02c7b7-7138-4a1a-b137-1fee4c489ee2)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1022 5f12c06f-3e8f-494c-8c63-dbdab8dcceab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 7b33da7c-6648-470f-a600-c8cf3e18219f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 cab832ee-11b0-4767-9eaa-25b80b0c95cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 c843d103-981f-43b3-a4ff-63fc8ab8074e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 c77d45dd-2b68-4b0e-b2f4-d824f40b9223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 3af5eb1a-2ada-4fc2-a8f9-30f18ea2f175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 481d5a33-8160-44fe-a327-54e2fb0f01b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1023 358bce1e-0eb0-4742-a904-5b7a3ee38088)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_int_ctrl_i.q,
"I (Testcase #1023 2713aaab-5d66-4938-8b95-bff4ea33b50e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 8b26da30-108a-4861-8738-73e7cf7db25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 cd8821d0-1818-4425-9392-86bc5a369667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 871e8a92-14b1-4c61-bddf-1969accc7732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 82dd311e-d368-4454-b111-46f41b9cfafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 3d7ffc85-c30c-4a93-8588-86fb975ad577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 e2a22cfe-83e3-44e3-b370-4cc4333fb705)");

#(CLKPERIOD / 4);

unit.finish("ld8ai ('LD A,I')");
