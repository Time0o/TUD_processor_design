unit.start("ld16ddnn ('LD dd,nn')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA835;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFED6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h609E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'hF4BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #0 093240c6-6a0b-4906-9b03-7d51c6de51a4)");
unit.assert_eq16(16'hFED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #0 f3b5dd16-ae86-404d-82b8-86cc34bfb67c)");
unit.assert_eq16(16'h609E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #0 e172dbe5-fcdd-4749-81dc-236b92c85f2b)");
unit.assert_eq16(16'h6985, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 bfbd7f3c-31af-46d0-acf4-687a4ac707fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 88190d78-7207-4fd9-b6cb-47d9c3b58535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 becc9ed3-c12f-4430-b1e6-3f86d4373050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 defa476c-d0ad-404e-ac4d-29ee28e5bded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 fec677ab-2d3a-4d4a-9b89-75ca57e07c6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 fd911462-664d-48f7-8430-64619e79f74a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 bd237ea7-5103-4212-8b79-076b6f6b8f68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE8B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD1E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8F8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8563;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'hA710, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1 dead5caf-220e-40a7-a995-ba601919d1c5)");
unit.assert_eq16(16'hD1E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1 287da499-0be8-42c7-b919-b041ec0c9d47)");
unit.assert_eq16(16'h8F8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1 8c579ffd-c521-4a48-87c7-bf15e930cff4)");
unit.assert_eq16(16'h8563, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 8dd7751f-668b-409e-ade3-b6e01797c993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 b1880377-2878-4313-9d48-72cca58d30b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 5a98aa65-63e3-42ab-b070-ce189a7957c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 0f6836de-75b7-4bec-bb3e-c1242650b6ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 f7323cd6-861f-4de0-b398-59396dcfcb2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 4457fbc4-d166-47b0-9b3b-75280bbf1a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 7e814a8b-8944-4cfe-9a38-c55c551fb4f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF416;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h46FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7119;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'hF102, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #2 e39deda1-8b9e-40d4-8eea-2edcfb2d8e13)");
unit.assert_eq16(16'hF416, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #2 4e4f3e9e-62ba-4d15-9609-d26b4619d1dd)");
unit.assert_eq16(16'h46FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #2 f9db453a-55ee-489e-82b0-1ae34875c761)");
unit.assert_eq16(16'h7119, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 eb10e521-b556-4f56-9b94-fabef0073c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 ffa53576-fb4d-4db5-85ed-4b788bdb79ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 815da608-c160-49fc-8f65-30ff79381d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 04c244de-f86d-4a78-92ee-87c90f5f6bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 55a51393-d29d-4839-bad8-903a915c3415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 0b8ee0f8-936d-496d-b4ce-dbbf1751c38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 14bc2196-aaf0-455f-98c9-cfec6de8849b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF19C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h562A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h796E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #3 1ee48771-2f93-46a0-b6af-77fb6a783670)");
unit.assert_eq16(16'hF19C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #3 511a64cf-c417-4d1b-9eaf-48fe8f2e0598)");
unit.assert_eq16(16'h562A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #3 e75cd4bd-8887-415f-ae99-54a97d23daf7)");
unit.assert_eq16(16'h6C4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 f7e77f55-5f1b-4dd7-ac15-0eefbd0285e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 1c648f77-4746-48a3-b700-b96911928b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 0dfaf5f6-1be3-4638-bbc5-c2cf582ea80a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 b6eff099-2965-4680-8442-b3e7e6f8630a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 8acfc94c-d0fa-486c-b951-9c23abe91978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 1288418e-1a24-4ec5-815f-41a114200c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 63917737-43f1-460b-80a7-ac2e9965bf9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF605;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h12B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h44A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #4 b248e6fc-d4e5-4658-84d3-4c7aa1f993a6)");
unit.assert_eq16(16'hF605, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #4 4130365c-91ad-463b-addd-f6234294576c)");
unit.assert_eq16(16'h40A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #4 6bfa60bb-c6b8-43f5-b991-b0b344a714cb)");
unit.assert_eq16(16'h12B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 bd3e270e-868c-42b2-adb9-2f08e1329615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 9c44331c-3068-4334-8da2-c0ef599c4a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 c7936f09-ea7c-45ee-942a-a37cd264d4ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 1db850b9-a089-437c-a2bb-de7ac1b19ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 baf297ca-ddcc-4a36-a370-f3b3a3216eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 f0727d14-f817-4850-bf5e-830740e1cf10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 a5e6e3bb-79df-46bb-97d2-26d3331d480a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4638;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h76D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h7A0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #5 a5f69128-2164-4892-bb44-63f4bd4a0639)");
unit.assert_eq16(16'h4638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #5 1c5a6b22-ecaa-406d-bd54-9217e11a3c96)");
unit.assert_eq16(16'hBEB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #5 c80a3c39-5a2a-4c85-9228-8feaecd642bf)");
unit.assert_eq16(16'h76D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 9f0b0165-bcf7-465e-95a5-e608b4a1e69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 cf169953-2bd1-4b0a-8986-174ce743a3f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 fd950a40-0c32-4143-b4ee-92b6ae8ccafe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 c5dc0e20-1faa-43dc-90ec-0e5241b697a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 a1afba60-e103-4cde-b1c5-4dc255f9ee46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 591dd341-02b2-45b6-9675-7fd050f3ebc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 adc1d882-9dd3-4085-bec7-c0e33a79c8eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD64A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDD18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h1AC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #6 a38bc5d6-c5dd-4d33-97e8-dae6ebc78152)");
unit.assert_eq16(16'hDD18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #6 c3fdbf93-cba9-46ee-b6e5-af4e374e14f5)");
unit.assert_eq16(16'h6CF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #6 e938cff2-3b6e-4d39-b979-f8e246b33126)");
unit.assert_eq16(16'h7911, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 3b817a7c-3464-42e0-884e-6d5d4be94fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 3b124a5d-0168-4ff4-85e2-4955c335d735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 d3d4ab3e-a77e-4a42-96df-541c1a98b13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 7d43274e-e06e-4dda-8596-234d7f7f91b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 c5d4e21d-fa58-4606-bf69-c0178254d768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 9382ab9a-4f3c-48a9-bba8-72a5dd54af77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 60aca17e-1ef7-4870-acbc-babab530a8fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3EB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h546D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h2AED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #7 7010a754-be52-44e8-9543-c8b716b8bbc8)");
unit.assert_eq16(16'h3EB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #7 a802994b-15a1-4fc3-b590-edfe8d311a6e)");
unit.assert_eq16(16'h546D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #7 90565ee3-fc35-4200-8a50-d1873b4223c6)");
unit.assert_eq16(16'h5307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 74b79814-beef-4ffe-a69a-8aff58335a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 9e3dfaf2-07ff-4ee0-9ae5-121bf18f61b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 855cdfb5-a2b5-4746-b4a4-4001301affb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 ed929d53-2eaa-4acc-b068-5f0ff6530978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 dbd275c8-beb2-4caa-bccb-d51123f10123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 2150433c-e0be-49aa-b360-f44dcba49c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 3f50dd6f-1828-4290-b8ea-effcd5af2556)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h4383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #8 3263795a-a00e-4e65-bfd5-8677e0ca25dd)");
unit.assert_eq16(16'h52BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #8 1959e08a-6600-491d-9cd1-4a01c95f4227)");
unit.assert_eq16(16'hB7CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #8 ad3d6409-b7f4-4f32-97e4-48a6f330dda3)");
unit.assert_eq16(16'hA8DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 a675cd18-3db3-4ca0-8952-7fa147ba368b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 700768f1-9740-4f74-b407-d7445b321cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 36dea98f-527f-4fcd-b0fd-3ebc7521d34f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 a02f83dd-1a98-44ad-9e56-604124402526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 8e374da9-f035-4246-9537-0ede5be675bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 13ec6301-595b-4d55-ab7b-d43d9d279b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 391a663e-4825-4a61-a758-c947fd7336eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE205;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC76E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hED31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9CBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'hEB2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #9 1d6275b4-8ddf-4dcf-926a-0b2732b485d8)");
unit.assert_eq16(16'hC76E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #9 532a6ea6-9877-4202-a92b-ffc7eb70df03)");
unit.assert_eq16(16'hED31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #9 9beb509d-f119-4eed-b184-567f483d96ef)");
unit.assert_eq16(16'h9CBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 d738d467-5572-4e0d-8014-ab845c03bb03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 ac5d0300-8851-4092-8b81-52c34bc0e6f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 271c3c27-ffac-4f94-8a83-93ba23e898f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 25ae55c8-48e9-4775-aa84-d058b0f82f04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 698fd2fe-792a-4ffd-a531-c5139f222d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 1d636314-4e80-4a66-af04-99c2edf1cec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 2a11469a-3e2c-45d2-9c40-b271083b800d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB563;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE309;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h1B2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #10 da545ad7-4a66-41ed-9670-506aedd91868)");
unit.assert_eq16(16'hB563, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #10 d114174d-ed0a-4c14-b15e-62495c6cf779)");
unit.assert_eq16(16'h7D67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #10 73d644e1-50b1-4410-8e4f-f6db4dbe686d)");
unit.assert_eq16(16'hE309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 4e7971ad-1865-4b81-8ac6-8fa276899f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 bfc52961-d089-4031-b536-23db8530ee40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 0ae53b6e-c41e-4f79-bd30-bf7af928d932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 c4231f91-55c2-4f83-9267-cb5a7dc715d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 1fceef88-56d2-4943-aa18-b5858ff48fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 35120318-2339-4301-9253-2eed43bf8f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 12f709d7-578d-4e9c-89c0-89ccda533af0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5455;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7802;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h925E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h429E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'hD7D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #11 bdfa5c79-a0c6-4962-922f-fbd22939d4d0)");
unit.assert_eq16(16'h7802, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #11 6dccbf61-7098-4f31-961b-6e55a49cdfc9)");
unit.assert_eq16(16'h925E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #11 7387f3c2-8231-4e3d-a814-b6d43c30ba9d)");
unit.assert_eq16(16'h429E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 73d56157-f490-4c0e-8763-52d337849da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 f9bd1419-3049-487d-b5fd-d75202333f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 700e9737-1d4e-4249-b5d9-abf4adb5695c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 043ea4f9-3403-4a37-afe8-f71a3a48c8ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 030f20e1-bd0b-4f8a-a4a3-d87407266f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 081bda86-8cf6-4560-8dee-d347002f3373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 047d84f2-1f2b-48b3-b0a7-a3914faa460b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA3A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAFFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h135B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #12 740053c7-d4cb-472d-b889-1e422fdc0d02)");
unit.assert_eq16(16'hA3A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #12 8ce81ee7-3cd2-4f06-902a-c72b7277b12b)");
unit.assert_eq16(16'hAFFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #12 329bc1d1-fe93-43db-9343-41390fc0ae27)");
unit.assert_eq16(16'hBA32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 361cc0ca-d16e-4ee3-8940-12f1afe7150c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 52ae0824-d583-4cc1-9718-0e9aec3a1fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 95657f14-63af-4a71-b3b2-cc50bcedb2f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 2fb8331e-5281-4c6f-8381-57a00e5644a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 09b56520-ebee-4fe8-8b4a-702c4ce3f373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 e3528d14-2f0b-48ff-aa4b-7c18d6ffc7de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 d4453c3a-b27a-4796-b3bc-410250bff35c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9776;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'hC77E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #13 7ee0cef1-39aa-48e9-afd5-8098be19c8b1)");
unit.assert_eq16(16'hBE44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #13 2175079f-4088-41a0-8c88-0659972d9a42)");
unit.assert_eq16(16'h0CC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #13 53b17abe-2aa2-476b-96de-24fe3838b7cd)");
unit.assert_eq16(16'hEA44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 e412d375-8c6d-4631-ae05-db8ad087c7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 66e34c72-16d2-4631-b2db-9a084889b051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 ff811c20-eef3-47a5-9429-0ebc4a54d2a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 47d7327d-0ece-48db-86e5-32bb91880c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 2035af51-db1f-4112-bdff-11d4d960a33c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 605b43cc-d2e0-4e4d-a731-82d4903dc8b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 5ddba8e3-31d3-40d7-9802-63c1affc9d2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3146;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE6B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF706;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0209;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h5BE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #14 958fc267-7299-4984-8b95-6a55b0721563)");
unit.assert_eq16(16'hE6B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #14 f2f4f487-d9df-4ef2-9f57-0f9a8b4ca56c)");
unit.assert_eq16(16'hF706, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #14 9002f605-6e00-4dc6-a895-eb779c6ac469)");
unit.assert_eq16(16'h0209, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 d477754c-e398-481d-aa82-970022f8ac57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 ba3d1cd0-645d-4b72-b637-1863ffdae05e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 5bd04874-df0d-4747-83bf-97df3b9679f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 3bcef7ea-fb34-439d-b4fd-13436ddb2a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 f7442f19-5497-4647-a9ff-704589649162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 faa93e58-b694-41be-8403-c9d01df0a9b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 b75905d8-6690-493c-b701-b6b35013d01e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD239;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1481;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0688;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h5B82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #15 0a05f229-1579-46ba-bca0-e977b48713d9)");
unit.assert_eq16(16'h1481, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #15 e8d2bc7a-bc70-4254-8499-f57520b75241)");
unit.assert_eq16(16'hCC17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #15 c7a654c7-65d2-4421-ab9d-66eccb29a14c)");
unit.assert_eq16(16'h0688, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 3a84ca21-af4b-43d5-ac7a-27c1cda63300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 8ccd3388-7a6d-499a-91a4-7d704099504e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 7b8e8592-c026-4142-9050-2c8c0d19f5cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 5f42c090-5fe2-4bcd-8eeb-6d318be71e19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 f483284c-7992-454f-871c-8912c6336cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 84ed3592-1ccd-49f3-93d1-d55d2d8fa816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 4942320e-671e-436b-9fb9-5d71a3f0fb9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6DA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1422;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9620;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h6FFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #16 426686c2-e9d2-4a6d-9451-fd654b66c33e)");
unit.assert_eq16(16'h6DA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #16 6f9591f8-faaa-4c9b-8725-c14fbe9a9cc0)");
unit.assert_eq16(16'h1422, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #16 d6624968-35d3-4f85-b138-c7b87d9c23e3)");
unit.assert_eq16(16'h9620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 8bea64b4-d65e-499d-9320-e58c06841762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 686fc9ae-0880-4bda-871b-094e56aff964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 2337038b-1386-4123-9e12-91bbb6ef86ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 36433f76-6019-46d3-a699-27a9db1afe30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 322a8d8a-7c48-4890-b236-ecee111510e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 01e45180-ad7a-4674-aa28-df3a3c472f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 b35e0e0a-db30-44a4-a9fe-0cc38c322e35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h24F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5196;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h51B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #17 793cc9ea-f80a-4279-9ec1-35055647231e)");
unit.assert_eq16(16'h95C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #17 a7105fcf-415e-4a24-83ab-3ac284274cf0)");
unit.assert_eq16(16'h24F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #17 d4c9189e-41be-4414-b4d4-c3cad72c94d7)");
unit.assert_eq16(16'h5196, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 c27fb3f1-e9f5-482d-b6c6-2087306ee106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 e2055ab6-b44b-409e-b6d4-a3b3d9d751e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 5633ffe7-7f76-482f-9268-64e7c88c71b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 e32802ea-9f90-4c16-9eaf-57f3b2d067b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 e867117a-6cc7-4320-a069-34493c543729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 38f935fe-20bc-46a9-9878-bfd4fe12f0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 4f018a01-e4ca-40ee-a49f-820dcb5eb5f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2347;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE64E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h778F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #18 666a74ae-b90f-48a4-9e71-e19df753c529)");
unit.assert_eq16(16'h2347, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #18 2c420b34-460d-4118-a5c2-dfd74c6026e5)");
unit.assert_eq16(16'h0AE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #18 b1c28f9e-34a4-4e06-adc3-b9e848978b1c)");
unit.assert_eq16(16'hE64E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 ddf713cd-7ab3-4c65-9ce3-e195d4d3c123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 3e2d45f3-f2cd-4b8a-9add-0be258366f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 3309d200-06fa-4470-a13e-070f2e4f7bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 28241fdc-5dbe-4a32-839e-f19444e2389c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 aaf96e18-8f75-4525-9ca0-b927241fb670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 f065448a-76dd-4aec-ace5-20511aa657ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 475bb6ac-6bda-496f-8de0-f156ec77a458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h480D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDEBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF439;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB4BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h394E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #19 ab80a88d-8015-4dd0-aeb2-0da8723e8177)");
unit.assert_eq16(16'hDEBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #19 5cd6aca1-a401-4b84-8d2b-d9dddd63bfe1)");
unit.assert_eq16(16'hF439, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #19 f7807e32-c0c4-463e-b7da-42ef7880e1e0)");
unit.assert_eq16(16'hB4BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 e325e365-f6ac-46f5-9575-aea4d0c4c444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 5f96d4b4-48d8-4c5c-808a-878ddea3e1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 993620d9-dfa5-4b76-be93-e9a3e3bbb4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 0b22a4f3-5bc3-4329-8613-f75f713a823c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 23671cfe-4053-460c-a3dd-90e8b5062e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 7142f1da-39a0-4ef7-9350-e33e36789d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 858ef6e0-25b5-4142-a6aa-ac3a08616ba6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5190;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7228;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4189;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'hA00A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #20 17b0d775-9012-447b-a004-b631853cf6c8)");
unit.assert_eq16(16'h7228, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #20 9016bfdd-8f0a-4131-b9ba-a43f377e74cc)");
unit.assert_eq16(16'h4F6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #20 e09a7306-2a38-4f9f-8202-da0704b81173)");
unit.assert_eq16(16'h4189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 061e79d3-dc9d-4dd0-b978-e9b6a40637d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 2dbb86cc-2667-4698-99de-45136e5af976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 f5e11b7c-ee9f-466c-9f18-fb8c2981ff08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 b5f0f8fe-d5a7-4d6b-86fc-c6000665164d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 24ca869e-f5b3-4775-969d-a6206a4cfa09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 89adb16e-0453-40ca-a9ec-28282c270df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 d82cc197-c5bd-41c1-8bd4-fe61a63a44e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4945;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1B7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h5BE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #21 6d5baf52-eba7-4035-9a4f-345eab8e1b98)");
unit.assert_eq16(16'h14AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #21 817d05d5-93ef-4d99-be22-8b1c789924d3)");
unit.assert_eq16(16'h4945, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #21 422c39a2-7338-4fda-ac95-39f8073cf73a)");
unit.assert_eq16(16'h1B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 d3747494-8c4c-42b6-ae2c-3c3effa41ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 6dc343a0-5928-4412-b429-c253dabff126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 691950d7-edf6-421d-845d-57951891029a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 e239bba0-be8e-4bb0-9ecd-83894ff03ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 ba0238e3-a1b0-4dca-825e-3ab683ad471e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 146de52e-e373-4221-a112-76a6b42001ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 a4a7bdb5-227f-4920-bb90-42ae750d5384)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h95F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h78D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h24F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'hEF8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #22 fc8e1d0a-bea1-4363-afeb-3f4bcbf2e7e8)");
unit.assert_eq16(16'h78D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #22 ae61edbd-fc69-46ad-b99b-4e5c54594fd7)");
unit.assert_eq16(16'hDAFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #22 57b9cdd2-efdc-4508-8618-58488defb840)");
unit.assert_eq16(16'h24F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 75de4dc8-860c-4237-a7ff-c0ec59a79cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 394cd4c4-59fc-47a3-852e-867284dc9ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 ff748fe5-0f2b-441e-8d22-6ad3ae6b8349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 31200344-a294-4a35-ac1f-c3893c862110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 2620c537-32fa-46e9-8ae2-67afd7348131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 6113f50d-aca9-439a-8a81-288c97140f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 6873e73f-37ef-402c-8ed7-2dc305e80b2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h39B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD643;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h991D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #23 0273eefa-3e26-4624-a9b1-a232a02c6002)");
unit.assert_eq16(16'hD643, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #23 2c0dee12-fa54-4fbc-b853-1e5cfd37be6c)");
unit.assert_eq16(16'h56F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #23 d4c21f64-7065-4e33-abe8-a2a01f43e6d9)");
unit.assert_eq16(16'hDD0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 2021bda4-1d4c-4504-bd24-66eb330d2df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 9ec52a3b-a623-402c-af57-280e62f8e672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 e45fb783-64c2-4d47-bcdf-d81f947c9c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 0fd53e06-8440-477f-8781-8f54286e2055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 9b39a453-aa9b-4a9e-b6d9-fdf097dc5e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 ef2f7861-71a3-4420-a61c-002805c29bc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 2a5f6867-9317-4191-be01-ee9612008838)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC7A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDBBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h124F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'hF331, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #24 75150a88-b75d-4dc2-a2f3-215694a721d0)");
unit.assert_eq16(16'hA336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #24 99179f8e-82eb-4cb2-a463-56e4f4af4946)");
unit.assert_eq16(16'hDBBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #24 3097029d-9f4f-4412-b884-913e3679783e)");
unit.assert_eq16(16'h124F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 eacd5d6f-4048-48e1-a8de-18539540b86b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 5925ae01-ca46-417f-973e-2ec6cd0d042c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 6a41ed95-bfd2-45bb-90ee-b77366b31571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 fe722306-cb31-4439-a649-63261eeb9502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 869e2fa1-1d4a-491c-8253-908bf0f2f75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 ebce211b-4699-4822-8cdc-7220368b5b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 527476d4-9fcc-48a2-ba39-af830b1c090b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h985E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3999;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h7904, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #25 b199652e-5fb1-4cab-a5e1-475b1dac2b40)");
unit.assert_eq16(16'h4E18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #25 204ae10f-887c-4ba5-857e-62f0ac6e5e5b)");
unit.assert_eq16(16'h985E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #25 faa0e924-b4c2-44d3-a033-d891462c0f23)");
unit.assert_eq16(16'h3999, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 8eb7c4b8-a34b-4dd6-b084-c977a0fb166c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 e63364b1-866c-48c5-9a6b-826721a41a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 d8cb7be2-60d7-4224-83b0-94b6388f43f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 99371949-88c8-46ee-9095-177a49792e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 5a960ad4-b96d-4af0-af47-081ae037fe03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 b2d89337-881d-42c1-8930-32d0cedf222a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 fc85a460-4c62-4ed5-930e-0ef6587a9abb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC57E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB23C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBCE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h4DAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #26 c851f311-b2aa-4f3c-9091-ddaf2468b91e)");
unit.assert_eq16(16'hC57E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #26 924cecf6-876f-41d8-a3bb-188d645fa133)");
unit.assert_eq16(16'hB23C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #26 a39fb681-9d05-447c-9058-6774c1d863ba)");
unit.assert_eq16(16'hBCE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 ca2186bb-4fe4-4ad5-9d6c-2a296b1b8fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 0cd2bf1c-a778-402a-85b3-9bc9dfe3d3c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 293cf49e-6997-4a2a-b8fb-29d8b3b2aadd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 9bfdd85c-de15-4144-8d57-7071e6a0e88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 e0677c8b-0f35-4def-86c7-da8b00b6eb59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 fc81c954-3346-42ef-a890-2757f76ce95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 74f387c2-ff77-4c58-bfd1-875639e79fe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h40B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'hE5DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #27 e1fdc482-8f06-4140-bebd-245d74cd070c)");
unit.assert_eq16(16'h40B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #27 3c81a9ad-b475-4443-a111-2b3cb3e7ab76)");
unit.assert_eq16(16'h3F42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #27 aeac9bf8-ec9e-4927-9e95-2d26fca6c50b)");
unit.assert_eq16(16'h5815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 eb6990ef-6a47-428b-a090-8cf619b4efa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 6e8a3d75-b1e1-46f6-a6fe-713a104f266e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 d4394ede-26fd-4e04-83a7-414a83fb20cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 ec554065-4ca6-4583-9a2d-11d01e62de5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 665dfe2c-25b0-424c-9275-3539dcb43c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 fa9ac6c8-c61f-4e74-a90e-297f705e8740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 eed77ca6-0e37-4d0e-ae3a-b0b5f38a4dc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA6BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF53E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5681;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4219;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'hA128, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #28 42b3bf14-57b0-4c7f-962f-e8e93566465f)");
unit.assert_eq16(16'hF53E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #28 187cd941-85a4-420e-9cab-c0ee3d15ec48)");
unit.assert_eq16(16'h5681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #28 fbd39593-f0f6-4bfb-8699-a4d8d34951fe)");
unit.assert_eq16(16'h4219, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 160db7de-ca6c-4168-888e-eec4bebde064)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 6cdcce6e-2167-4aa3-a37e-b885bcb40935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 9b41724e-2f02-4e8f-aeea-06bdf39aabee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 f0e1f74e-fb3c-48ed-80ad-8c2c949efeea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 383dacd4-5c5b-4217-8de4-efb572c135dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 77874ce7-bd25-499d-927c-10496e61aa2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 c3dd17bf-beda-4343-a01c-8c2f1c2a708d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h37AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC020;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'hA639, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #29 946e83ea-e0f8-4b13-9eab-0aae4ed3206b)");
unit.assert_eq16(16'h37AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #29 290a327a-20b3-4556-b018-06368e9f713b)");
unit.assert_eq16(16'hC020, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #29 70227643-f697-4618-9af6-8454ad764951)");
unit.assert_eq16(16'h061D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 51628d2f-2982-496b-a092-1e7eae51dc7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 a189dc4f-1e26-48f8-814c-f6c3b342ecb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 680dc754-e8ad-40a7-98db-af556a7272b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 4c5df457-a69a-4ca5-b4d3-e94625f0eeaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 94de7039-792c-48f3-b2fd-ed288eae7a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 c0f1d299-e774-4675-9f01-0af1a887d5c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 4a54adba-4dc7-4e86-9c54-3304cc5ec441)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h217B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9BA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3777;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'hAB34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #30 8278861f-a4b3-4194-ae38-46c2a56569e0)");
unit.assert_eq16(16'h9BA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #30 597d909b-9ee0-4784-b411-58d268b25175)");
unit.assert_eq16(16'h3777, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #30 eab5bfc8-cc90-45d0-8b8f-9b9936dcdffc)");
unit.assert_eq16(16'h5C41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 46f9fcf2-59af-4b2c-be1b-ca69eea1f9eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 16533c34-8849-4cf0-a14e-d03ee55705df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 ffe008af-eace-4731-8f53-b0f09ecae034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 adb0c1ef-5390-484c-9b86-0192f32529c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 ddcf2c37-9976-4e45-85ba-fa2e6a116adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 7683abff-ff3f-4c68-b613-d8ecc36b39a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 3c76e7ea-973b-495a-8c4d-84b18182f045)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD16F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF949;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h57D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA202;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'hE06B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #31 2de4a30c-6066-4f3a-99fc-67985ae04def)");
unit.assert_eq16(16'hF949, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #31 ea5183b9-7203-458f-80d7-e714f7ebc738)");
unit.assert_eq16(16'h57D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #31 908e8600-6205-4232-b129-fdb54f51610f)");
unit.assert_eq16(16'hA202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 06970e27-1d33-4bbf-ba33-77600c4ba361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 d3dbde34-dc11-496f-b375-5e4d4d5f7f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 d11f9f30-5b88-4824-adc7-19f73640534a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 03a79362-e2f5-4467-a5f2-5d6c0c973692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 1933633e-bd65-4ca5-b1b2-f79623b57e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 e11b3205-8c9c-4d44-8ecf-e25dc4adc574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 5eacaf7c-c16a-4644-b722-100a2f06930e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h15F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD356;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'hFCD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #32 a552044d-4d29-4e97-8197-cfca85739452)");
unit.assert_eq16(16'hD356, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #32 42497293-d6d1-4d00-be9e-cdc2bed0bcec)");
unit.assert_eq16(16'hCC8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #32 79aaaded-ad35-400c-a2f4-501a9900f165)");
unit.assert_eq16(16'h3AED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 25cfb672-8841-4418-b732-cdd99c55c154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 10a220a1-49b1-4c33-892a-097faf815cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 f460a8b5-5b9a-48c4-8c9e-a9fef1d7ca2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 043709de-80ca-4e56-92bd-b531b80cc4f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 cb440074-6764-4fd9-910a-1e73c10b7289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 0e7bca92-1219-473c-95c7-8a587b256d0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 7dc5bc44-5b9b-436c-be22-be86a76483dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h575F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4103;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7AF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h331C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h0481, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #33 d2f253be-e6ad-4d3b-b2e0-313d14bf218a)");
unit.assert_eq16(16'h4103, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #33 111fe685-a48b-4c66-9144-fa99f9534a50)");
unit.assert_eq16(16'h7AF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #33 ba3c72f4-eb0c-4ba9-bcba-c4a06e28dc2e)");
unit.assert_eq16(16'h331C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 1fdf6e88-191c-4b77-8568-85a07231cb53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 6695feef-ef81-4b16-ba4b-0e3e3f4bd301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 8b3c8486-5032-4877-a45c-07b64339cc11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 889d1086-0b9c-40b5-a555-be5fa1ed8505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 bc899c8e-5037-435e-a633-cc6fcbdafe88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 494f2136-09a0-4964-b1d7-2e87db32c539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 390f4d35-dc34-484e-9ec6-b71c72fdd89a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD913;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA6FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h65FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'hE525, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #34 ce133fa5-364c-487c-9f56-df934a7a3a0c)");
unit.assert_eq16(16'hA6FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #34 0d78f879-ebb4-473c-acad-ec90ca22ea72)");
unit.assert_eq16(16'h65FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #34 905fe344-3d7f-484e-b4de-e38c698a4788)");
unit.assert_eq16(16'h1F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 954b1966-a2ff-49d6-b15f-d11950f154f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 51db235f-bf73-4b4c-865d-61868a8d9145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 840a2d1e-33de-4275-b527-692f6a9bc70f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 62194491-874e-4d3c-a9ba-b5a9c3e6d9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 5e8870a8-ae21-4abe-8bd6-9b32ecf48c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 0b81067d-0081-4f83-9a3d-44a027d92c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 b3dba245-7145-4134-ae33-76e3164a35e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFEAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4524;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'hA9E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #35 fadfdc3c-10ea-407a-a940-6a84cbb38a6b)");
unit.assert_eq16(16'h4524, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #35 a525d0c4-28bb-4f46-9e01-d6b49078ca15)");
unit.assert_eq16(16'h15B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #35 b74ded47-128f-4bc1-a4e0-b09dd0708d47)");
unit.assert_eq16(16'h0EE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 39b8fa1d-d079-417c-9e26-341513813558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 0cf7cb3b-32f7-4d41-bc48-2b3a03f377c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 01b38e87-bc51-4264-8caa-8b8cc6c4668e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 4086a0c9-6f4f-42b9-9439-0db06a13d842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 bb1db1a4-339f-42b5-b0fc-7dd2f47761aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 630cc165-22be-49c7-9b5b-5e97534c0dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 8e73e7f4-ebd8-4169-917a-23fb5e20f6d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA2F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1209;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'hA5E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #36 2e673824-fba1-4794-933f-32f94afd780d)");
unit.assert_eq16(16'hA2F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #36 d4d2ab83-66fa-4065-a0c6-4f802049222d)");
unit.assert_eq16(16'h1209, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #36 8a68afef-3ed5-480a-887a-e4d56186e96c)");
unit.assert_eq16(16'h4B06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 7eb4f25c-4ea3-466f-9eef-6f7aeadd32e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 abedc144-57af-4e6c-a19f-ecef08779f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 3525acef-8549-4484-ad30-bfa70a01ff2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 2b401233-39d7-4728-b8de-bcd209abf472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 51f972b0-680d-4339-80bd-09ee62ecb1a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 da4601e9-3909-4c2a-ba55-cd5902f62894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 9fa431ee-aec7-443f-98f8-099efd712d02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA673;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD278;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h619A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #37 0bf82ce2-1bdf-4661-8778-0e43c77ecd47)");
unit.assert_eq16(16'h8D11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #37 7f3c17c3-35d4-44dd-ab66-7545411dbf4c)");
unit.assert_eq16(16'hD278, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #37 0ca4296c-ce87-42ea-bf71-8269ac90d72d)");
unit.assert_eq16(16'h4E18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 031c4939-2b21-46e4-a0be-6959f08f09d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 01161337-4a46-414d-8dee-f5d261f67d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 39be74b8-5c4c-4cb9-97d1-346a63447123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 52a4da57-f074-4305-bfc1-8bf336d3772f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 a9a2f31d-30aa-4675-8a07-3cf3aa0f9821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 e268a234-90be-4f9f-b089-60f8c42f6e61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 11047921-7836-4c70-93b2-2563fd7bf0a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4238;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5845;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'hD875, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #38 ccf6ceaf-dd67-411a-925b-14ae59435be9)");
unit.assert_eq16(16'h4238, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #38 4628a4ee-a8ca-44ed-88db-2027882cf72e)");
unit.assert_eq16(16'h6895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #38 827a158f-12be-4411-bc40-220192ae0fb6)");
unit.assert_eq16(16'h5845, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 233ded50-e47e-4315-ad33-f9c0a2197b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 7c6248d0-9583-4372-a9c2-9cd34a539e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 fd96cc03-b10e-4956-a235-3c6b9f18ec32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 f82c6dcb-3582-4e08-8e5d-88114e3c38dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 346e41e9-9db7-4a9a-a1ad-9bd76c8e5cd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 f2390033-84eb-4a8f-b0ed-16f204b123cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 cb1b110d-9ce8-4f4a-bd45-d5d1af9b56d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE23D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5724;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB6AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h241C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #39 9de17415-b4e3-455a-a86f-5c6a5636fbe9)");
unit.assert_eq16(16'h5724, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #39 d8f220f6-36cc-4bdb-b905-c4ec485bed18)");
unit.assert_eq16(16'h52F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #39 f38e69e2-35d5-4685-ba87-9a2aa93f5c52)");
unit.assert_eq16(16'hB6AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 e128f9e2-dc7d-4ecf-ab0c-36872aabb206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 b44223ba-df4b-4bd2-b33c-02594442c2ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 cff87801-4758-4316-ad19-745d189681b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 bd3f504c-6ffb-4869-b945-7ba2b32d75fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 5f8f0b63-efe3-45ae-908d-55171ddbb550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 5d46a483-93f8-42c6-878a-47ad533be19c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 4057582d-ff14-453b-a38a-b76e6de15aa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF319;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'hAE90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #40 3d20b1c2-b28a-4980-a1f2-4e384cd8ac7c)");
unit.assert_eq16(16'hFF50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #40 a6ee8a11-4884-4e24-aa29-cc1c17d21dbb)");
unit.assert_eq16(16'h9684, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #40 d1781148-fac4-49b5-9bd1-3c4b7fcabd9c)");
unit.assert_eq16(16'h4DED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 3c9fe965-9838-483a-9dee-36d06505a255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 e381fd56-6682-4433-ab1e-e29ea3de2b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 1043a8a4-ae25-4c49-bb82-1870d24073f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 b1031abb-ae2d-420b-8ed2-724fccff6799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 fc1f8691-e7c7-4741-b254-72063e083269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 7cd75f5e-28ae-4b6f-970d-bc70e3597752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 e70de037-f7ef-4bdf-ad46-55d428a2f1f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC6C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h546E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'hCE2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #41 d198e5e5-b16c-44af-9df3-408a073c8217)");
unit.assert_eq16(16'hC6C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #41 2e277f79-4533-4920-9a51-2e1d8fb8780e)");
unit.assert_eq16(16'hE5F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #41 b0eb7ebd-e685-4f0b-beaa-c276ec15f036)");
unit.assert_eq16(16'h546E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 9ad93bb6-6899-4c65-ba09-87b24dca2ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 1f74714d-41bf-4e4f-9658-fec25e68b4bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 0d0edf1d-26a2-46bf-b7b1-192c67d61710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 73074d13-bfa1-47da-a2d2-43e5d1dfa7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 b72b50c4-0bb2-43f4-aec7-6e35418604df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 ccbc6711-5b9b-4359-b589-6101318e241e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 3e7f188c-6b96-47ea-a5b7-6359996dc3a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFDF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h0AF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #42 86786502-c009-4d42-9742-9c63c3991d2f)");
unit.assert_eq16(16'h5D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #42 7c7845ce-0d5e-460d-ae82-39c80dc6e27c)");
unit.assert_eq16(16'hBD6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #42 c1c21f41-49d7-416b-aff9-9f60e8987c5b)");
unit.assert_eq16(16'hFDF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 5f27b645-5f84-43a8-95b7-e0451b77f135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 2f9a66ea-5e08-47a8-a1b0-05420774964b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 e08fcb13-1d9e-4087-b6cd-73585419c931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 2fb0b236-8951-430c-8aa2-6b50da114b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 97d79e36-b602-4985-bf25-741093b5940f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 2622b7de-36b4-424c-83ab-a6dbc3cdc7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 568b991d-4f1c-4048-a7ba-a4cd5ca3426a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB87D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3788;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'hBD0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #43 cf4b93c6-2dd2-4259-ba26-95b85607a484)");
unit.assert_eq16(16'h4268, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #43 fcfe0e4f-2e07-41ab-9a86-8d32652569c0)");
unit.assert_eq16(16'h3788, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #43 4d32e5fc-44b5-45af-a55e-e9121ea5bc1f)");
unit.assert_eq16(16'h3597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 bdf0c850-697d-4dfb-88fa-e21e33d73339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 124945e4-4296-456b-8471-3048277e0c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 639a7b79-e38e-4fc5-a5cd-d4695a846657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 aa294e5a-3606-4f62-8774-26d2828d78c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 629957e4-2e06-46a6-9003-38c7832ce8ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 a69eff3a-ea3a-4f15-90e5-141b4c92b27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 f1a79601-8657-4a8b-b1ed-78edfa462e70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h251F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1224;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE739;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h3FC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #44 44387a5b-5779-434e-862a-96da20919ce3)");
unit.assert_eq16(16'h1224, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #44 eab694f0-2a65-4eb7-ae9f-90191c4390e5)");
unit.assert_eq16(16'hE739, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #44 f11f35a2-d2c2-41bf-8450-a2005d567e68)");
unit.assert_eq16(16'hE5C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 5e5274a6-0726-4115-b80a-c0573216da81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 1de77221-6bb4-4fcd-a483-ac29b2c1c92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 a32e802d-2585-4d59-b10d-8348d98bdad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 957bedd1-bac2-456e-8d92-93d37d957e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 30f8812a-b232-47ab-bdf4-a792bafb8136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 31808e0e-b8a4-4fb0-8475-f173c614f4f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 89cc4505-ca41-4e31-9858-1fd6bf4db80b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB3EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB022;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h2E7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #45 c8359273-afa7-4ad5-85c8-87ce2f53f8a5)");
unit.assert_eq16(16'hB3EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #45 c6edad60-d4d6-4206-9330-c49d15c159b1)");
unit.assert_eq16(16'hB022, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #45 108233a5-b4fa-49e9-ac88-4fe64832812e)");
unit.assert_eq16(16'h04EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 6b3b4db6-12cd-4098-9fcb-c8158a8974e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 6261ed5c-3db7-4aab-b8c2-cd680ea31ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 cbce9a45-272c-4e54-94d8-a5a9c54bb157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 e82c837c-84a7-4ec1-a31c-c054038977cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 21f28801-c70b-4f62-b6db-ac7c710a4cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 146b30be-5aeb-46f7-bf27-c2e586b4102d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 22023c16-d83a-4e10-981f-3d4859ea0ffd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4A38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h835E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h19A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #46 90ee8f74-b0ac-4d8f-bf78-568795b50fff)");
unit.assert_eq16(16'h835E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #46 03bef572-d0b1-49f0-a5be-d801924f0bc8)");
unit.assert_eq16(16'hB0C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #46 a18baed3-cb38-427e-81fe-bd604fc1a83a)");
unit.assert_eq16(16'h89A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 845eeafa-27d1-4977-be3f-42585940dddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 cdfdb70a-a639-4d3c-ac2c-a0ad7511ac5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 af4503a2-9f3f-43c8-92b3-21ae938eff06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 a2e3c7cb-9d1d-479e-8f16-669e72a0899f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 d1e5a4da-0990-4935-a829-930c7e8865c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 84866fbc-f4b3-4810-a567-0fa834d07ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 6a2cb6be-4903-4026-84aa-2fc451cd2b2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1169;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h9E62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #47 95052c19-b038-4759-a3a9-fee8e97fafb3)");
unit.assert_eq16(16'h6F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #47 8df22d4c-bd8c-4576-969c-859c8de40a4d)");
unit.assert_eq16(16'h1169, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #47 a88f3bab-919f-4fa6-91a4-a06911ea31b5)");
unit.assert_eq16(16'h8F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 a8d5d5bf-1c4c-4783-8391-d62b2cb2253b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 769ccb80-ab9c-46c9-b559-cc38af9e8590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 a1a069f8-c4dd-4c23-936d-941a9588e208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 0561fb3a-6067-4324-8ae0-d63634a880b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 2e432b8c-602f-4192-886e-0d3fc0d8fd99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 10b0b92d-8b1a-4822-a656-f277918403ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 c7c9d157-7687-45d1-9a74-d2052cd45a82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5015;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBFD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h421E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h67C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #48 256a1ac6-f1fa-4d4e-afe1-101aba3d6bed)");
unit.assert_eq16(16'hBFD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #48 a0b4f995-e90d-4803-afa8-b4414c02d5de)");
unit.assert_eq16(16'h1F84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #48 2348dacb-1ce3-4737-ae8a-524ed12aaad1)");
unit.assert_eq16(16'h421E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 9429c84f-a2c8-4adb-8772-a0c4bbddab61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 05519686-b8f1-47f9-bc2d-86d0742e0333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 e7cd9b1e-d703-4bed-91db-175afb67e035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 14a42388-21d8-4a1a-9973-ae08d3ae23c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 15a3deaf-545d-497f-928b-4aa9465a7af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 7b7c0c30-dccb-4d2b-ab13-a0a2932fe11b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 4b895794-57c7-48fa-92b0-783533ff444f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1682;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2484;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'hD08E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #49 55031ba7-53fe-49b9-b454-1a215b49d903)");
unit.assert_eq16(16'h1B17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #49 4859fb57-3d48-42d5-b331-4463fcea3153)");
unit.assert_eq16(16'h2484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #49 7cc9e173-855a-4181-a85e-a501bb0cfe2c)");
unit.assert_eq16(16'h19E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 2b4661ea-4456-4cf0-a45b-61b609a0e60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 ede3b47e-059a-4332-bd63-0dedc3194dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 830b81b5-b2fc-4d4b-b293-01d2937a386e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 993fbb0a-d889-4134-a6e8-03e9175485d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 d1a34ad6-0b85-439e-9ec3-54d7f4b5a561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 75377e6b-cbb6-43c9-b0d6-d354f8940666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 93803b35-bec7-4686-a81a-ab5166a82b1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB325;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8D3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h7E54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #50 5e99132c-5bb0-4f66-99b3-c9aa311e721a)");
unit.assert_eq16(16'hB325, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #50 55126a6d-4f5c-43d7-8053-47103385a521)");
unit.assert_eq16(16'h8D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #50 e2327704-7396-492f-a129-4befd7f255f3)");
unit.assert_eq16(16'hD4F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 a01733d5-1d0e-49ff-aff8-212b7929082d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 7fb370c6-8bac-4eaa-85e0-b6de02611311)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 7867faed-7b20-408c-8ab8-14cf041f3391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 f81643e4-869e-4270-9988-2bce1c185e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 b840e242-c853-4cd8-929a-4afd638adbac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 f52766fc-01a2-4630-959b-e9a3d166e706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 116f70bd-951d-4828-86de-de698379a453)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE32B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h33C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC7AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6CAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h870E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #51 b4d0efab-e431-419d-8a92-5dc50ae51c57)");
unit.assert_eq16(16'h33C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #51 1a5fa896-cbad-47ff-be6c-9b7e3d2fc03d)");
unit.assert_eq16(16'hC7AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #51 c3d48a88-9ce2-49f5-8161-d665b14c7877)");
unit.assert_eq16(16'h6CAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 659d6508-077d-4a9a-b1e2-8f1df8fde73a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 2518e6db-7d8b-489c-af25-d79315d82e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 4a2fa9f9-e226-44dc-b726-f1bc5a9fd8ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 6688bedd-7dc6-4f46-9189-622a333d7035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 eb69860c-71a9-49d3-b342-16958ce41ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 82234dde-baf7-4919-9d2e-0072927d9625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 eb97edbd-4d6d-4cf0-b40c-05d64d37e5b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1072;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4DB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h9C37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #52 73142d41-bbb3-4aa5-bd0f-5a110c70967b)");
unit.assert_eq16(16'h4DB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #52 41bf2d3d-ad2b-4db9-820d-a4f0d75fd7ae)");
unit.assert_eq16(16'h0EB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #52 0e6e69af-58e0-4f8e-ab1a-ae54fa3e8df4)");
unit.assert_eq16(16'hAB3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 52c86099-29ee-443a-8478-1a3538e8e55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 49ae5380-909f-41bb-84c6-6496d74ed901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 0117d253-1309-4690-be32-e1189f4831db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 91b60007-2a5f-4710-9de7-b2b2e5847709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 1171c410-5d72-450f-9a04-7a4c2ac6c876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 94a50164-fcc4-4a29-87b6-caba6e2b71a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 7138fea4-98b7-4f9b-a2ee-efc31e962542)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDE5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'hBFCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #53 c0976b9b-0dab-4f5a-8ee7-3a718840f456)");
unit.assert_eq16(16'hDE5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #53 08c9907f-9d32-44c2-8db2-2491e85c022a)");
unit.assert_eq16(16'h4E94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #53 d2c0521c-dc74-4840-9cf0-f8fc21b05413)");
unit.assert_eq16(16'hE4E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 b88e18ff-5bbe-40bf-a154-5a6813fbde13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 914069d6-55db-4abb-8f4a-1359531281a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 e8620ff5-1011-40ac-a70e-61dd19e950ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 ca344212-96db-49ab-8099-a9784936f537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 365b01c5-b7e4-48f5-a3a1-1ce198ce567f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 826fbde7-0aa0-47a2-8e87-94d24cbb50d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 ef44926d-c38a-4976-82ea-ef949fd77b08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h0376, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #54 b90382a6-dd5a-460a-ac2c-4f67e42c0aa0)");
unit.assert_eq16(16'hF9EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #54 2d7285e0-eb6f-4b4a-a316-2775677d779a)");
unit.assert_eq16(16'h1F33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #54 edd9ff2b-76aa-4366-b324-3d3fc2590464)");
unit.assert_eq16(16'h5D81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 fc375721-3ace-4934-a45f-64f0693c3a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 34dc9918-b4c8-4ce2-9dd6-3cb9886bced9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 ec7f697c-2eda-4515-a1ae-69d6c42c14b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 478c420d-fc03-4216-a769-b36d1f3c6d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 6ef44ade-1257-46e5-8f74-8eb05d9196fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 aa2d79c7-e63b-4e6d-ac1e-70131984b7e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 a9072b8e-3fa6-40b2-b3ef-70aed5235f37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h830B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDA6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h751A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h3D9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #55 7da58731-9c7c-4820-998c-81d630d02615)");
unit.assert_eq16(16'hDA6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #55 963cb415-ab26-4e2d-9636-1270f7b45a47)");
unit.assert_eq16(16'hF1EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #55 52db5f39-cf59-4230-ad6b-27fdccd17a56)");
unit.assert_eq16(16'h751A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 0dc363f4-566d-4c0d-b079-56d778f0bc16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 c5da00ed-053f-4a61-a601-cf2cf146cd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 967f5238-bc90-4369-bdb0-58c38c1e9361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 eb7b1635-744f-4ec7-b3a9-fedd269b0334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 d1ed0402-bf66-4ca6-8142-c853d6c51507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 4f5ef8b1-fd86-415a-b8ff-27d5312a9eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 1e8925b8-783a-45ce-9699-af783a1d2fd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1495;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'hC703, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #56 8fbae263-4ff5-4e4c-b553-7c81de3c60b1)");
unit.assert_eq16(16'h15E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #56 ffd2a9fa-b624-44c5-b0c2-d2701b0c83e3)");
unit.assert_eq16(16'h1495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #56 29ece440-871c-45dc-a662-3dd88e6e8ca1)");
unit.assert_eq16(16'h3E56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 45bbcfa8-5f0b-4049-8861-0d864ac7fef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 8b88b7af-9ae7-4cdc-936a-17bbf0920a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 14f95d4c-a958-4d75-bd9b-99c1e4164ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 c179e94e-a576-43c1-a72b-55ad7e502054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 2f0bc916-122a-405a-93ad-b4ca429905ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 4a1d60ad-7844-49d2-a8ef-3372c858c6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 074feed8-d96f-483f-bd03-dbc45c815bc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD777;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h419A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'h584E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #57 e0274238-f264-4363-a560-80258a2b0d25)");
unit.assert_eq16(16'hD777, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #57 ed90bd63-231c-458a-ad4f-75c16285bd3c)");
unit.assert_eq16(16'h419A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #57 7f0532c6-57a2-44a1-94b5-031bb499be35)");
unit.assert_eq16(16'h3E11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 46064db8-cf71-4602-8fd7-abdfa6ab9480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 124f9f9b-fc74-47d5-ae38-676436c655d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 32d52f5b-717d-4c4c-a660-f62ff61c01a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 8b134dba-a142-46f8-9467-6e378c2f70f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 648acabe-2903-4038-9fc9-dfadc9feac19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 a28a5ad8-5876-400a-bcd9-74ad773e69c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 2da537eb-e5dd-482f-a5db-3827d966b459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEBC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h175F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2ACB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h7446, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #58 76313a61-5465-4919-bf70-31fe3ed7b471)");
unit.assert_eq16(16'h175F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #58 4c75e807-0d4d-4fad-a2b2-57efc70fa607)");
unit.assert_eq16(16'hE5BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #58 403b74b8-792e-4fda-96a4-fe42eef7ae9e)");
unit.assert_eq16(16'h2ACB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 ca868332-96d9-4b08-acb7-206a0e1a8d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 c0ec4c2e-b153-44ab-abb3-30bf32cbf6c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 4d09d192-2aa6-473e-aa9f-0ec3d708260f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 c75b9d96-f39d-4267-9f3b-208ef2e7399e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 55927bea-e2a8-4f50-bd9c-463c9ee0600d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 e3522360-bd2c-4b61-a8fb-7b21418074f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 096f7b44-212a-41b5-9357-9d63352d37b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE397;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h9E76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #59 8d3af62b-2a76-446a-9ff4-fa8877e6f24a)");
unit.assert_eq16(16'hE397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #59 d601d6de-8f29-4ee4-a0bb-07484d51c8f3)");
unit.assert_eq16(16'hDC71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #59 c0848a78-92f9-46c1-ba69-163dc4b08292)");
unit.assert_eq16(16'h1792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 251f203e-f2ba-4641-860a-1736a077f9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 44fdad7e-01ff-4d69-a76e-b204128d0b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 2b785cad-36f6-43e4-99ae-a85ba94995a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 8773683b-86d6-4acc-9fd3-c3ef0a1181ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 2d172c1a-3436-4b55-aace-9f7813ccab0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 29965d5d-911a-4556-85f5-190b2d092802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 5d859fc3-2464-498b-942e-bb262b06542d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF14E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBCA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9EF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h6756, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #60 61c48634-a88b-45e3-9131-91c32926d0a0)");
unit.assert_eq16(16'hBCA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #60 106689a0-8a39-43f5-8151-2b34d0edaced)");
unit.assert_eq16(16'h73A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #60 801cbc0d-f984-48da-96f7-0176a0e1703a)");
unit.assert_eq16(16'h9EF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 7c22b3e7-f97e-49d3-a14d-95e7df2d8803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 a12a7899-4ace-4f0c-bab2-8cab30215d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 46826280-7c1f-47f2-9774-44e1ac6ca2a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 868f3b0c-9af5-4944-a1b0-a964f0ddb62d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 eff8963a-a3d1-4634-ab9a-eb75d5056ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 2cc8116f-4661-4f00-8358-7780049ca93f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 24b3b9de-2c78-4859-8f93-e49d1f62a3c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF727;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h874C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h7CF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #61 36a61ff9-0a0d-4eb4-bd26-eb13484a8ef3)");
unit.assert_eq16(16'hC4F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #61 453fcccb-2316-4bd3-9bd6-d140e9a85ef5)");
unit.assert_eq16(16'hF727, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #61 25de97d2-6537-47ec-8c12-5ea39fc98828)");
unit.assert_eq16(16'h874C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 bd53cde1-9832-47f6-8842-d7611436b83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 6ec45a3e-180e-4fcd-ad50-a842454f59eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 63f6a7de-76cb-4a9f-bc79-d9c1a6a63b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 59dd295b-400f-4eff-8c08-b95b1e4e45be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 ea6dfa10-575c-4338-a4ef-8259757065aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 9a050eaf-288e-4773-8f21-3c1d07e6272d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 a108db1e-29bc-4148-b368-167cebd4b7f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6585;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3641;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h60FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h1162, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #62 9aa0c3b2-8525-4314-bc96-0ba81fa8b77b)");
unit.assert_eq16(16'h3641, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #62 f9e96446-e971-49ec-9f44-068d70086673)");
unit.assert_eq16(16'h60FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #62 0aaafa96-41af-4adc-b216-80da0afadf61)");
unit.assert_eq16(16'hBC4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 d77b611e-ce7d-4459-9f56-520578d12e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 d57d5e68-0f3c-4fc0-8484-5b65e33559c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 703cad9e-6dbd-4543-8286-6a2744428ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 a957e3d8-04a8-405b-9256-d8dba859acc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 8b7f2b6e-2cc8-445f-94b4-2d46f682ef03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 069e431e-e8c0-4895-a420-91d91f5d16bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 45b35107-e61b-4a72-9b93-14c75b2a74e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE90A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h570A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8548;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'hA306, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #63 6e7489e0-44dd-40ca-8b99-430f07fab2ab)");
unit.assert_eq16(16'h570A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #63 2a1db707-25bb-418a-8d4a-3bfc3ad8d4b9)");
unit.assert_eq16(16'hB1C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #63 5f30d340-cb59-447c-817d-c0c334769e94)");
unit.assert_eq16(16'h8548, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 fdd7f71f-e217-4404-9067-375ecbeed470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 7561e30b-aad0-458d-866f-49f24133f251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 d6fc30e0-b167-4376-af03-784df7011d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 98b9d303-8789-4cab-adef-02be61be79de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 fc89a101-208c-49f6-b38d-7502bf0233fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 e0eda045-2ef8-4bbf-b9f9-bcca6d32a853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 5fa5cfbf-6f67-496f-b081-371bf3171e34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA214;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE859;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAE99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h4676, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #64 56706a38-1dd6-4ee3-a991-dd885be8e024)");
unit.assert_eq16(16'h64B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #64 18f33354-40e0-4800-991d-f18e0f18a0a7)");
unit.assert_eq16(16'hE859, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #64 48f202e2-5737-4af5-97af-1db5f927395f)");
unit.assert_eq16(16'hAE99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 7999da2c-57b7-4009-aedb-67c43814dcb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 79eb2998-6d75-48c5-89ce-677d10961da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 eda5aacd-b2eb-45c3-9247-78e6503a2a27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 9266eab4-3cd4-4ecd-b33b-d44e76f44b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 298947ae-afb5-4677-88ba-73c38c665355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 3af5069a-4550-4dd3-a485-8b9e0f541d6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 9cb804ca-143c-45d5-b216-958e0d30bdb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA078;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h401C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'hD7A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #65 62c377dc-6b90-410e-b346-ba1bca00cb55)");
unit.assert_eq16(16'hFF70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #65 a4669334-8503-4772-aa24-01a57370a2bf)");
unit.assert_eq16(16'h401C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #65 2a6502d1-0f18-41ef-b32d-4f59c85e737d)");
unit.assert_eq16(16'h8DCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 da4fa12c-88ce-4418-ae76-eb4e83f2f5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 f4c265bd-cb57-4393-b177-ce5780b93483)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 3e8ed260-1010-4bf0-9298-600ad157fb5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 6eb1ff0b-e1ab-4577-bfe4-e61045004a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 877abe2a-2212-4981-8b51-d364557ae53f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 cb1187e1-609e-4b43-9a03-cbdb3c58076d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 2a672090-8dec-4385-b99e-42fb0146326e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC5DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC23B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5950;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h7A79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #66 81535566-459f-49bd-a753-c967568c96da)");
unit.assert_eq16(16'hC23B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #66 f292d9c9-8077-4b2c-bd16-fa97063c8092)");
unit.assert_eq16(16'h5950, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #66 e04f8324-dc7d-4c5f-bb09-4e901a71277d)");
unit.assert_eq16(16'h2C9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 77f89f2b-e3ab-4203-ad50-d482de0973d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 adee7377-cfb4-4de0-9359-4a994f08a5bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 7285be95-40b9-446e-9c38-62e6f7312d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 903b1b80-92af-48e9-bff2-90be68cd02c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 c3a8c802-efa0-4cb4-9e24-dc5c76d7e5ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 4779636c-ef36-4674-adb7-2d48492f2e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 6b4ac7d9-2ce2-439c-916a-85e5d7100e8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8AC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA6CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDFE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'hB188, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #67 2280bad5-23ab-4306-a870-fe156c85b3f3)");
unit.assert_eq16(16'hA6CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #67 1c306eef-6377-4d32-82a7-8da5233d8292)");
unit.assert_eq16(16'hFCFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #67 b5c5cdbc-1731-469f-a1e7-9fea96a7f229)");
unit.assert_eq16(16'hDFE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 dfabbb0d-bd4b-480f-ae4f-5a053c565b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 ae621e2d-a8ca-4e58-b8ac-741b08144a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 abed0431-b78f-4adc-a318-078cd22a45a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 b3416257-f05b-415a-8d6f-cc64014dbac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 c8d6fa60-6b4f-4902-878e-67a2f186cb93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 b498538e-4aa1-454f-805c-7a1e58694925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 dc9efbac-d23d-4ef5-8501-a6056e071780)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF93D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA60C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h91B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'hFB6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #68 7f39c97a-f709-4154-8b24-99a47209f777)");
unit.assert_eq16(16'hA60C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #68 14b4239e-956f-4992-9c03-5569e07300b3)");
unit.assert_eq16(16'hF1DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #68 091c7a37-72ec-4971-8620-fe3cc1091cc5)");
unit.assert_eq16(16'h91B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 9687e732-c55a-49eb-867c-77e73c981871)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 213007b5-de4e-4423-a0eb-88f47b4f498d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 0b91fab3-6116-46c1-aff2-6248b3890c0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 0ee038ea-93ef-4838-9d80-782274e1a384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 b70fd329-f5ff-412a-ac9c-a81ebc83a028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 6b54659b-7424-47fb-9776-2c2f539df05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 0ebc0e95-e770-4615-9e2f-d64ac66adc6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE006;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h358B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4AF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h9E3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #69 aa494f5d-7dc6-4e06-89aa-4d1230e6682d)");
unit.assert_eq16(16'h7D01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #69 be4d0058-e901-4a60-a263-f06f94a46142)");
unit.assert_eq16(16'h358B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #69 57fd72b1-7879-418f-b286-6e56e436d835)");
unit.assert_eq16(16'h4AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 d7331f78-7eeb-4ddf-a998-cf0868fd76fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 dcbd9fbe-a6a4-4ad3-a1f4-7141c091ce86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 5f7c19a6-f8ae-4224-8e61-0c9e5cba2043)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 48927ee5-f5e7-411d-b5cd-c2c43e468549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 cd526f94-fff2-4be2-bfc1-1df397c4993b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 1e003bb0-384c-4e9c-91eb-ce49131eca7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 1cad3ea6-5ac9-4eb0-b5ac-930309d511d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE227;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0994;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'hE4C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #70 5d924ece-7551-419a-80e2-649152079913)");
unit.assert_eq16(16'h6C03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #70 ea4a4e94-061d-4a89-878c-5483ea306ae0)");
unit.assert_eq16(16'h58FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #70 b5316c02-4fda-4d1a-b4d1-66ff8dc68b42)");
unit.assert_eq16(16'h0994, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 ede10bdc-0209-453f-a74e-405abe5d9189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 29b879b9-f23d-43e7-9ef3-af2792575687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 85a13ea1-a5bb-4b40-b4b2-33e8335c793e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 f4badd22-7503-4783-ad49-6b11835d41df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 0b42e0ea-fb13-40f0-9363-2824577e58ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 3bc703b8-8c41-4963-8321-ce701dceccf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 428754d0-ea88-4799-9794-dc8ba7b444d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA310;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h792E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'hE512, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #71 586cc835-692b-446f-9def-80a163ff32e3)");
unit.assert_eq16(16'h792E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #71 d2ab3b9d-5a6e-463e-872a-072ac48e2234)");
unit.assert_eq16(16'h8E2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #71 619d3a6c-aca4-4448-83e8-c74f14a24490)");
unit.assert_eq16(16'hDE7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 8bb98eb2-f449-4799-a415-936652a90276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 b521448a-0958-49a3-99c5-d7ffa2aa9184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 6f47ef5c-2a8f-4625-9bff-95d8e9f8d488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 1c483f4a-7c41-464d-81f6-c1b3ee57aa70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 f86a2c3b-2057-493c-9af8-e104ba579423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 be6386d0-2faf-4a96-9cd8-a2488a9f1d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 f0feadf5-a3c7-4608-939d-9166718b8bfb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE4AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h16FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA68C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'hF942, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #72 9c22dbac-7ec7-483e-b50e-0aae66d0df23)");
unit.assert_eq16(16'h16FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #72 60feef13-1ea0-48f3-98ef-bdf3869c8432)");
unit.assert_eq16(16'hF069, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #72 1377fc49-763d-417b-8e45-9f5a1b99aa0a)");
unit.assert_eq16(16'hA68C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 0465f4e9-fc08-4368-8204-6ea2bcd626d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 c944c9a2-ea75-4807-ba3b-f261622f08b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 9efdaef8-26f2-4281-a9ff-7d61b9829b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 6bc0e9c3-22cf-42ef-a784-9296abcf7e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 bce5e70c-ce00-4ea2-a22e-f84c9314b576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 eb4ce99a-2b05-4d46-a7ac-ff7057860b9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 996cf92b-d820-453b-8b24-e08b4bdde665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h45DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h7533, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #73 eecb4463-b4f4-4c37-a1e2-08bfc5e209be)");
unit.assert_eq16(16'h1B2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #73 dcbdb334-2b39-462e-a260-5466e7888dfa)");
unit.assert_eq16(16'h45DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #73 ef0d8316-8d93-4ec1-be2c-dbdfc1b95a10)");
unit.assert_eq16(16'hF518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 a924ff13-bb83-463e-b4da-4b1fe682bcb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 ffc8b573-0e91-4323-9969-99930f283c8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 a558d7ca-7567-43a7-adee-e32a5f8e7aa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 db4c0ba1-53ee-4439-bf0b-adb3ae00203b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 ee4b1cee-ab5f-4765-9242-17b8cb5f2e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 b1bd3578-182a-4aa9-9066-b621219cbfec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 a63945cb-4cef-43b4-9874-dc584b2aa52f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h02F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC5FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h517C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #74 a948b339-857f-478b-ae53-e7fc5cca6025)");
unit.assert_eq16(16'h02F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #74 78e9b426-28e0-47ac-a92a-c857ae47f54c)");
unit.assert_eq16(16'hC5FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #74 05135be2-1751-4538-86eb-1a31605048e8)");
unit.assert_eq16(16'hFC6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 aeb9557c-1284-4be9-bc8f-560bf236159e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 087da135-4080-4951-a808-6e3478127bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 0c8011e0-3ba2-4cb8-b7b7-661cfa6871bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 b3609d4b-d573-4670-9ae2-7b892ea14cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 29d70dc1-0d4c-44fd-9fe2-3978c8bed0b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 09b13c5a-1abd-46db-9af4-9fe7de7b6f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 f5eeee43-acb3-42a5-9f4d-04b61f6ac2dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE423;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h0EFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #75 cc924a51-16f9-4b24-9662-4d49de01a60c)");
unit.assert_eq16(16'hE423, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #75 f851ff27-e341-42d8-986e-0d621f4e2e75)");
unit.assert_eq16(16'h4F25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #75 3a592c7f-6581-47e8-b434-0cd0dfb4fce1)");
unit.assert_eq16(16'hBD1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 87be8356-2075-49b3-851f-140eebbdcb7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 4ce591a6-2f14-404a-b47a-f6a14a50c708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 ffe36b40-e23e-45a4-be53-5d4eb59ed2b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 1211f7cb-1b91-439e-b73f-c2d624ffbed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 901a8fa8-65bb-4128-9af6-f101368ffbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 0af20c5e-6aa1-46ac-99ac-ee5d21ea7843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 b98469bf-f184-4abf-b1cf-2aa37dab94ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE78A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1FC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h8FD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #76 529d6b12-941e-4a31-a582-38f7f12656c6)");
unit.assert_eq16(16'h7D73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #76 d6352b1f-2971-43f0-82a3-83fd16056b2a)");
unit.assert_eq16(16'h1FC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #76 f42f307f-801e-43d3-944a-955e4d54d8c2)");
unit.assert_eq16(16'h9307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 546df90e-2d61-4aae-81b7-724a66812ab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 aecb9761-5729-48ff-8949-c5d213f2aab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 35e1a376-9dd6-4fba-a2be-36ab8e9d43a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 ee8d9c5b-212a-4c29-806f-b93448ada2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 7ee3048a-abeb-4bd9-b4ab-a4e69375125c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 4a2572aa-00da-4fa0-ad7f-91dccff0b7b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 d242eda6-1292-43ed-a092-41fae4477cef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2441;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h5C82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #77 6e741c50-2ef2-421e-8781-9577aafe97e3)");
unit.assert_eq16(16'h50D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #77 d964379e-8aae-472d-8b44-e8b67daa44e4)");
unit.assert_eq16(16'h0DE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #77 7a84802d-4256-442f-9b1a-fcb811efb1e8)");
unit.assert_eq16(16'hD3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 441fe203-dbcc-48e2-952b-64d238222ab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 d4eb3270-4400-44e8-824a-c9c83094cf96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 e45892e6-0785-498d-ab35-57f598762765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 0b7f96e6-b26c-418c-94da-3e577ffcb229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 ad1ee281-c1da-4d01-93c9-50ef444c334b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 6d773231-484e-4cf9-94a5-4424395b9e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 14d7553f-fdab-42fc-a427-4dc63d45a12e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h998F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h45D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'hFAE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #78 ea3403b4-ab9c-4fab-a11d-131c6021e1b1)");
unit.assert_eq16(16'h45D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #78 791662ca-434f-4ef7-abf7-275d3b5fcb3a)");
unit.assert_eq16(16'h52EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #78 d79d94fd-d427-4b43-8f42-1d5d492f785b)");
unit.assert_eq16(16'h85A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 ef649cba-2261-4cf3-84f9-62993f3ec8a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 5c759bcf-b591-4108-a291-23f619d1ca80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 3cdd589d-1775-495c-af31-f5f155486666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 5f8107ea-3591-455d-91b3-9cf1093e916d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 6d4790e2-dd5d-45b2-b6d8-0ac87f960957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 1da82445-eff9-4dfc-8c56-bf2523442c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 64f2b32d-06b8-416a-af7c-89b97e2118fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3CDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4587;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7666;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFEF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h1129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #79 12aab631-49c2-40bf-993c-9fa22dca0ce7)");
unit.assert_eq16(16'h4587, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #79 b5834338-d582-421c-b4ab-274575885399)");
unit.assert_eq16(16'h7666, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #79 19703322-f8d3-4b76-b654-1df0e049e919)");
unit.assert_eq16(16'hFEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 6d9328ef-5d38-48f6-9b17-611525be5b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 68cf9c9b-f905-4a3a-9861-733419722f2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 5a4dca3c-5483-4577-a25d-638ed9e3194f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 68c987d1-26a4-41a6-95a2-115a3467c78c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 9fd302b1-4fd4-4d10-9dff-e3bd99a9f235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 cf6154f3-2703-4815-a0f6-3193789018d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 9ae2d872-b338-4f53-bf4a-5761f395ef56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC61E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h35CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h940D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #80 0d0d8214-2c80-404c-ad5e-de8ba8aa6091)");
unit.assert_eq16(16'h35CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #80 9f03ecbd-ae53-4935-8ae4-db87d248e469)");
unit.assert_eq16(16'hC6FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #80 77b4390a-041e-4532-a959-1d62ced8ac41)");
unit.assert_eq16(16'h4C27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 69977354-4859-449d-9cf9-7e129ee3c9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 2591412b-1bb1-4316-b2e6-209e869f7e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 568064d9-1bc3-4b69-bf03-55d002e1b3ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 81837466-0a46-4ea8-b7cb-add758299de7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 88581c9e-0021-4f1b-94cf-dc4b24702274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 d5c988e8-ec8b-44f6-9075-f8f1a77d8da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 c2ce2caf-c6f4-43e6-9673-78de8016b289)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0063;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFB5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC85E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h93A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #81 dd780bd5-fdc6-4c0c-b774-c463f0bfeeee)");
unit.assert_eq16(16'hD2AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #81 d298929a-fb11-4272-a3c7-4013611925a2)");
unit.assert_eq16(16'hFB5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #81 de4897fd-00de-47bc-af9f-441575851704)");
unit.assert_eq16(16'hC85E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 8b2bd14f-9cad-4966-ad57-7b34c20223e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 b18948be-2205-4a1c-9544-1a72659e6ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 faab470c-aee7-4b9e-953d-cc166deb5636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 aa990e7b-8377-4510-9cb0-1d9eb7df3a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 e64df02d-5b10-448e-bd85-c9560a51e973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 bbd6a41a-9a96-416a-89ea-25f352fe34c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 f9bb99a5-b24d-406e-bde5-2265efafe683)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF240;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h1199, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #82 6b1c1ac0-de46-4a78-b5ea-7168239dd351)");
unit.assert_eq16(16'h0D7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #82 32e88d32-7f69-46a4-a141-f3ae59d7be7f)");
unit.assert_eq16(16'h4031, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #82 d3ea3a23-aeef-44a6-bddf-815559b07560)");
unit.assert_eq16(16'h9DCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 dc6d9a50-537b-4130-abe5-25f3ba34c367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 dc320f96-5a1d-4c7a-9d3c-964c5eae39e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 6f8d5f4d-fa6b-419a-bdac-a6c576f54587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 ea151da4-ea58-4c6e-aba4-02e6f70ccad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 e44fad14-38a2-4d1d-842f-fdb6142cb65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 0dfb1b17-282f-4fcd-a962-e2838710c2bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 ccfacd19-3917-4432-85bc-557e438ec064)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h082D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB08B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8618;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9582;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'hE9A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #83 b013aa11-c38e-4c91-b4ed-247f0b113561)");
unit.assert_eq16(16'hB08B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #83 2f6c14f0-4a99-4d12-88da-43fe85ccf287)");
unit.assert_eq16(16'h8618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #83 53d641b8-703e-4382-b77f-544c609deaec)");
unit.assert_eq16(16'h9582, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 2b5806dc-bbd5-41a7-930b-fdea52b4113f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 f8e61f13-1186-424b-836b-55a08a641d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 0f6ddc47-5e39-4d54-bf9c-6501adbaffff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 328f14c1-f4a3-433f-bb81-754b613eb0fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 d2fe172f-5f97-4262-aa69-352413247484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 e1246ae2-7520-4d4e-9b46-b67acb1c3163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 976b69ce-ba90-466b-af72-f488b5de297e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3832;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7AE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h65B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h5C09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #84 4471df46-8e4e-4e74-8a31-49458d4fb73a)");
unit.assert_eq16(16'h7AE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #84 3a653368-02af-4cbb-889c-96ebab4ef899)");
unit.assert_eq16(16'h65B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #84 dd252d50-c211-49ab-9187-96435064a813)");
unit.assert_eq16(16'h0CD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 ed571650-7e46-499f-9aad-08dab3be90fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 8b51d836-9e4c-4999-abb6-d506021d2c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 ffb42e97-9eb9-40f8-a312-757ba9dd4e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 2e329bbc-c9bd-4edb-8510-b5942bb48c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 ee58def7-b540-4c6f-9a93-a216e240083b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 4942386a-d1c8-41cc-a89c-cdb6b96ae241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 de6bf674-7fb8-443f-9168-c7f08807373d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDCA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC978;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6248;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'hEAE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #85 eb7572ec-13dc-4dae-bbe2-84b1cf5a6bee)");
unit.assert_eq16(16'hDCA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #85 994cf1b7-c508-4571-9dbb-b2b5be0e7515)");
unit.assert_eq16(16'hC978, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #85 2d97a11c-d9cb-45ca-bfc8-737288cf8f72)");
unit.assert_eq16(16'h6248, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 a508a02c-8b2c-4e47-b086-0fb4e6834a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 4442fdb9-5bae-46fb-bb98-1ca543213d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 f6619f77-fe1e-455a-8bfe-855cb2779c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 15cba847-f575-48f2-93af-57f7f9c267ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 8dca19f3-ccfb-4b50-8b4a-9e20503ddc68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 3aeeb571-2893-4b23-89a1-35b53b189ba7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 f3460dc1-973a-44d0-91b2-e8b21aa07977)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE2C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h05C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h29EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'hCA70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #86 d6489f1f-7df1-4cb7-a905-6813c64c0eca)");
unit.assert_eq16(16'h05C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #86 5883c944-ec0e-4de6-9805-af7a233717c9)");
unit.assert_eq16(16'h29EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #86 bc6dafc7-a3fe-4f0d-ace3-79c3e9047bd0)");
unit.assert_eq16(16'h2F36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 961e6abf-cd67-411e-a958-140e1aa52722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 fafa2dd6-342a-43b9-8c13-8f3c4cdcefd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 d84190c7-3742-425e-94ba-67b52bf46fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 5f106b43-4316-49c2-b6db-40dae3fa45b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 2929655c-0f02-432a-90af-8a836c2964ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 38f5a336-a605-480f-b62c-afffb9819706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 d273e5c5-8a3d-4a24-a51a-5932f2368103)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD8D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7719;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAE19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'hBE2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #87 f53bc680-a1bd-4184-a7a1-1110d1fcbcdd)");
unit.assert_eq16(16'hD8D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #87 b03366b9-a753-40db-bd72-5bc10b1829bd)");
unit.assert_eq16(16'h7719, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #87 d3daac36-b5d5-4e2f-91b3-b417847c52e5)");
unit.assert_eq16(16'hAE19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 fcb5880a-a439-464e-a39e-a8d6e8fafb51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 5589bab3-20b9-42b6-96e1-6bee65df5f56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 c0d65377-644c-4214-931f-14d185fa11a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 d4d09e38-ab2f-4a83-9b2b-f086e1e0b65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 387ad3be-be17-41ba-9140-9cf233edf36c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 f8890c36-bf70-49ca-903b-e2ea467059e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 4bd5eb05-5d78-4420-8bcd-7d4f37b2f07f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD972;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4FE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h83FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA588;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h7DBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #88 5e593def-5569-4527-bbb7-594de045e5c0)");
unit.assert_eq16(16'h4FE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #88 a4e4b758-0e9b-4b31-851c-0b62c944d356)");
unit.assert_eq16(16'h83FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #88 b5903f93-19e3-4f91-8c8b-429e44f02cfa)");
unit.assert_eq16(16'hA588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 86d949d7-158e-4142-85cb-af45d8400314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 74b753d2-aa60-48b9-b48c-804bc9408c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 bfab6855-b16f-4360-a749-9f6dcab23178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 2ada7415-aa64-4fbb-a31d-4e7b68f80dbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 e808a744-dabc-471b-91f6-97481220495e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 6f3cfd4d-5327-4c49-9876-6da4c1aa9ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 4a66c8d6-5ab2-4bb3-858d-fef56f0639cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB11E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9845;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h602D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h83CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #89 38515681-cb22-43f6-b1e3-0fed2acf74a0)");
unit.assert_eq16(16'h9845, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #89 5d7b34e2-d672-474c-9388-c2126907ed35)");
unit.assert_eq16(16'h602D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #89 f6276aa9-bf59-4fb1-8964-9ff7efb963b4)");
unit.assert_eq16(16'hFBDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 a3fd6a8b-48ea-45c9-a9cb-0e143291f976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 df5fd4ef-5e2b-4b8e-9881-399b932395ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 44fd2c05-e559-461d-ade9-c829036ac3b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 0ffdf04a-b764-4038-9100-68ba4a3640a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 34217bb1-14a8-48aa-8d8f-ccb07f8d113f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 17d6adb7-0c83-4628-a0ff-e49bed803d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 965cb008-a92f-4ba9-b63d-cfa2b6826f92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5C8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAD06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'h9405, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #90 755f5130-df58-44a2-9bee-36948043a6a5)");
unit.assert_eq16(16'hAD06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #90 9594e8cc-bae9-4724-be9d-e8b9ef284858)");
unit.assert_eq16(16'h5E81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #90 bcb3c7db-c2a7-4014-a439-8f46ca2ec91d)");
unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 1c46db2e-a87c-4066-a7a0-48fda07e0ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 ce12530d-a59e-4db6-8e7f-0f0e524545c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 4cb80578-04b5-4232-a92e-6ca11ef81720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 cf588574-7d37-4636-91da-52dd3756545b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 b1482b86-11c4-4ce5-8b1d-1324c0d414c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 7a4203f4-9106-40b5-b964-e32527949d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 d768c091-36ad-4c01-8826-5c52080d5c01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h572E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'hF4C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #91 eb45b06f-3a00-42b8-8086-bfdfd1ac3cfa)");
unit.assert_eq16(16'h572E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #91 9f4427ac-e707-4d9e-b646-71d6a66096db)");
unit.assert_eq16(16'h8E99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #91 e68dd730-bc81-48c5-81f7-d82684f17cdd)");
unit.assert_eq16(16'h1391, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 4de0f7e6-f72d-4412-8923-c96d9d7c4f22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 b97ee9aa-0454-482c-9d73-0a60d3da1097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 8272f651-0481-4a58-9688-728fcd0009e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 7b1b2b57-d878-419c-add1-d8fc39520986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 c1ed4d01-dede-44ef-98b5-84d029623ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 29d62eb3-6d08-4f50-b59f-754845a84dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 dbe069ac-d4bc-4779-9810-d6b4c4acf15e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA921;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4B3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'hC8DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #92 c299c1bd-568e-4681-a55d-4c8b74ef1dd2)");
unit.assert_eq16(16'h6F97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #92 3ef9ecdb-87b3-4e08-8afe-5a8ff9a9506d)");
unit.assert_eq16(16'h4B3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #92 b2d3f068-3c3c-4d5d-aadc-d597901d6545)");
unit.assert_eq16(16'h8C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 f21b1a19-9ea9-4bfe-b768-a9b33d270ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 29a8f8c2-b50f-41af-90d7-8f1a3af99826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 c2251ba0-6c51-4da0-99da-c1ef69eb10cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 859fdeb2-4b07-45e6-ab6f-f2399f5e9a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 123ade4e-ded3-4a59-a3a1-1d667f144fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 5e5f0037-3e59-4caf-9a5a-038a68c26fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 50bfdcbf-7a7f-42b8-bd18-c9eaaa207d33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h560C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB799;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h544C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #93 47cc6934-44af-4306-8fa3-47ebe85e2b7f)");
unit.assert_eq16(16'hCB08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #93 a793832f-1e1c-405e-90d0-c6fca0a3b3d6)");
unit.assert_eq16(16'hB799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #93 304d8c36-dcc9-455a-b40b-16480fce7cbe)");
unit.assert_eq16(16'h28BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 2899ce25-e595-4e27-b395-a975cd8cd6d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 1d280c66-8bd4-41d2-85a4-19921bb931c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 132dae92-0e39-4b4d-ba4a-5e01fbf0c66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 dadaad2b-3dbe-4422-b453-9ad2ad91b57f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 d7cad9f9-6f3f-44b0-ad0d-6d9fcba9cbe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 952a0b5f-2d0e-4fc9-9367-9b3165e6056d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 7c5e351b-97b0-4594-960c-65326066db0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC416;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h77CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h20B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #94 dd38f41c-6366-4286-a5e7-c84f66619f09)");
unit.assert_eq16(16'h7C29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #94 a3c9936c-28af-49df-a991-9ae4fdbbb063)");
unit.assert_eq16(16'h77CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #94 ca6c6841-afc9-4836-912c-862f8cde5405)");
unit.assert_eq16(16'hF1F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 27d02528-f315-4dab-9843-d485504bd3b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 c7f069b1-fff4-431c-bdb4-d14de9575dc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 5572e42a-2749-4a60-baf9-81cf00f2ff8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 431f64f2-3d6c-4255-90d4-ed9d810265c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 33ffa957-f6b8-4a15-a3f1-1020b8b96a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 03314842-cf05-41d1-aa89-fa2acd2ac561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 a728e3ce-1691-48e8-8329-cc348452f348)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD261;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2566;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6252;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h10DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #95 46f37f9c-114d-408f-97a2-26163dcda9d3)");
unit.assert_eq16(16'h2566, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #95 f6a8f0bb-e0c9-436a-83a5-db61adbf83cc)");
unit.assert_eq16(16'hCA1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #95 878f3c2e-186f-4766-bb83-122e893222cd)");
unit.assert_eq16(16'h6252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 410323ff-3223-46ba-9a10-6ccb5d7abb6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 61001bb1-9e9f-44ab-9b5d-d915a50d0495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 8df4b442-54b3-4a6b-9f3a-b9f10da7e57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 463f6138-63fe-4cd4-afc1-9a4eea9ca340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 0dddf2de-c14a-418d-826c-8916fd92f72c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 52a85aa3-cb52-42e3-9a7d-5c92887aa420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 2ccdb724-3b6b-4eec-b88c-581fbc0add5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0DE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9362;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h4204, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #96 a1635a97-b563-4dab-ade6-7b69f9682da2)");
unit.assert_eq16(16'h49D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #96 36b81683-2dd7-4de0-aeb6-f78c63402549)");
unit.assert_eq16(16'h9362, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #96 0d1db4a6-67b3-4074-84d1-76acf35ceb1b)");
unit.assert_eq16(16'hA7C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 c23618dc-2bc6-46b4-9c7a-c6fd388c8d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 7969530e-e1e3-48c4-84dc-c6d8d2a13890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 bf3d135e-59e8-42ab-8fd7-49d58b922d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 662908b8-1e20-46f5-a017-77ec1673276d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 b5e39941-f418-41b6-92eb-88a2e91885bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 0206c6e3-18fb-41dd-af94-8be2dff3ae98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 cca5654e-3b45-4ace-a851-5d3ac9db3cb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h50C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h554F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6DA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h4DC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #97 a0bf3624-3aa8-4615-b91c-765781e05bcb)");
unit.assert_eq16(16'hEBA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #97 9691d281-f281-441f-bfcf-248896857321)");
unit.assert_eq16(16'h554F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #97 10e7b8f4-6f45-4d96-b4ed-bedd5d2337e2)");
unit.assert_eq16(16'h6DA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 1d522454-0a6c-4496-8a93-16de7ab8106a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 128a9c9f-e4e2-4c0e-a0df-fdcec904a175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 1edf9809-1dfe-4650-b670-aaa4b53149fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 decf609b-e148-4d8c-a649-6f50d4c9fb29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 7bdc31e8-07d9-4777-be0a-199464bef86b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 d1a086e1-8e4e-4abb-b2b1-dd8a988d30f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 8679cfdc-43d1-4fcf-9810-b0f7deba30c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD0E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h10B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h1EDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #98 9bbc0759-0226-4d09-90c4-c83e8285aa89)");
unit.assert_eq16(16'hEB4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #98 f8083c6f-025e-4324-a354-25ccf1bba3d6)");
unit.assert_eq16(16'hD0E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #98 df46e6b7-390d-49ac-8c48-8ddaccf2bd77)");
unit.assert_eq16(16'h10B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 692c6aed-e0e6-4ce9-aa84-9dfa324cbf85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 08b38b1a-845b-47f3-bd9d-6bd824210c7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 ebcddbce-5f1f-4c3b-ac47-0cb32a2a2e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 44dd07cd-30c7-4dd9-b528-03ee78d0d640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 4f8eefc4-486e-4143-a277-e2f88060166b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 daf3a5dc-646e-4f7d-9622-600092546d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 b9d1af5e-d42e-4af7-9997-7653804d5bb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h601B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2AD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'hB344, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #99 1ba9399e-9011-4217-806a-0e4331f082e9)");
unit.assert_eq16(16'h50E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #99 de91fddc-151d-4446-8354-5ccafa3f9e5f)");
unit.assert_eq16(16'h6B67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #99 bb2a815c-ac0a-4c26-b268-d33fbd7caf03)");
unit.assert_eq16(16'h2AD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 c0d9eac1-da3c-4e0e-a7ee-9621abce4da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 11758cb9-c0ce-42ac-94ae-ac6670b72686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 90c75e3e-d253-4d4f-bc50-efbc243d3522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 14a33c02-6f4d-4d43-bfc0-fc1f476e84d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 6f2b92d3-6d7c-493b-9124-f8f62e5ae0b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 007aa85c-188c-49fa-b02d-0b2d83ecc93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 431d7f06-132c-4ee7-8446-8ca06d39c816)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE275;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE6DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h005F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #100 e51a136b-4289-442c-9fdc-855e4227ae85)");
unit.assert_eq16(16'h4C29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #100 b9a13b3e-bab3-4c2a-ab0a-40cf11376932)");
unit.assert_eq16(16'h5418, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #100 43660f8d-6ec5-4c1f-8b17-43f51ea46ba4)");
unit.assert_eq16(16'hE6DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 c46b1bb9-bf01-4642-84db-b16c017e5907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 ddea37ec-2d98-4a1d-bcb2-d34ee5bf99ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 1d14deb7-8f62-4ac8-a609-2b18b2e6507c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 fc5af1f8-3fd1-4ebc-9900-d45b244dac80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 45a52f18-09c6-4655-adec-71f5a171818b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 509d2dcc-ff9f-405e-bc7b-5638bf9abe8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 554d239e-ab72-4b83-b1d9-46b410aba04c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0728;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3670;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h776D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h62D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #101 756496b5-f3ba-4ba7-b1f1-26267a42a5f6)");
unit.assert_eq16(16'h3670, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #101 1117648e-34d2-4b4e-8f50-ef92d0b4815d)");
unit.assert_eq16(16'h776D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #101 6f9aa61c-09a4-4016-a6f0-3b836c6a8fc9)");
unit.assert_eq16(16'hEF1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 a5f5a32d-0668-41fc-b758-3c71deeeaf79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 a6222666-4e78-4cb5-ad68-20227b0c364d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 13a274f2-40fc-43c8-bc46-404e4fb08808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 3bf4701f-da81-42a7-bc59-2fc609eafddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 ed61519d-b099-4350-8ab5-75b0e852c515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 31c291f2-094c-4f0f-a465-ab09ccde1110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 a4a7b8dc-45e8-4d13-8c6f-55028b16273d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5899;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h34B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0937;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC189;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'hA6CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #102 474a9db2-9bd3-4609-9dc8-65dc0b272ef8)");
unit.assert_eq16(16'h34B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #102 970a4aa8-be85-44e8-91d8-9ff29daaabd2)");
unit.assert_eq16(16'h0937, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #102 120e085e-feb3-4e9d-a249-25a417a7dff4)");
unit.assert_eq16(16'hC189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 88f4939e-fb5c-4f52-9ba5-d8c1b5b09cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 3170141b-0456-44a0-9af4-9fc394f1a131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 22bfdfc0-f947-44b5-a5c0-c7bdc3603cb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 deb3d879-1227-4d12-9857-b1281f2ac34b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 a52358e9-af50-45a3-970c-cd23706cbc43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 5ba7023d-ae4c-4ca5-a9b2-c0f8162c1386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 5ce50780-5e5f-41ee-b786-a02063a82da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h42D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD1EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'hBB3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #103 d46ca25d-00a7-4f09-ae2a-7351833164c8)");
unit.assert_eq16(16'h42D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #103 c2e109c3-3a69-49fa-bfef-f47622473301)");
unit.assert_eq16(16'hD1EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #103 e8a67647-bf2d-4a1f-b5b7-b4c3e0108f4a)");
unit.assert_eq16(16'h9E72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 6f098771-a6ab-4385-8362-124aacaec7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 3d261b6e-b686-47f4-bd7a-1808355f2620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 877f416a-4aae-40f8-9128-da533e8489de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 09f853fc-fcef-4231-887d-04d8697b2210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 343efc13-8b08-4f52-92b5-251c342bdd61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 cf9f7a23-0678-4e1f-a970-2b794e78f6d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 7dcb5cd9-ec8c-4d1f-91a7-69a0d978b5d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6319;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h217D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9406;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'hAB66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #104 8982cae9-c80a-416f-b7d9-6b0ae81ddb7a)");
unit.assert_eq16(16'h217D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #104 1428f3e1-fc27-4845-ab2d-7bfa8d447888)");
unit.assert_eq16(16'h9406, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #104 ba32b436-f252-4c20-bbee-2a22802e0eb0)");
unit.assert_eq16(16'hBAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 704f8aac-55df-457a-ac96-83c25ac7ddc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 05f2fe41-37be-4149-9260-00f427f797a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 2736677a-e604-46f7-b332-e4d0795f59c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 b672f919-db04-405d-92cc-72c15509d7bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 789ae032-242a-4ca0-91cf-d8f27e927db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 64c48aad-f46c-45d9-937a-14fddd9a6b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 7de3a0a9-6018-4ca6-b2e9-9ef12788a715)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1735;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0131;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8173;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h54C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h5029, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #105 26226877-bbfd-46ca-9fd3-114e0129533b)");
unit.assert_eq16(16'h0131, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #105 8626a4ff-8dd5-4c73-a14d-4d6954c60137)");
unit.assert_eq16(16'h8173, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #105 554b685d-46f1-4adc-b6e5-9cf12b1734b1)");
unit.assert_eq16(16'h54C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 f20c8687-d398-45c1-b8f4-fd854ee76e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 9aee4fde-a319-4f0e-887a-0d7eb3ec1610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 cfdd37c5-1618-46c2-abb4-9866cadade1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 d44962ca-ca20-4c89-93ce-33d96339fc4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 55d0e43c-12a3-4d80-a519-942fa9c759e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 7e6197de-b774-4533-8742-dd590b4c5d11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 77063f11-84c2-4026-bb8a-9a907a4d889e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4CCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h17B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h93A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #106 c9518158-72bb-40ee-a982-caf49a838ccf)");
unit.assert_eq16(16'h04A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #106 f0a98f81-7bc7-4132-ae9d-568190534528)");
unit.assert_eq16(16'h7CF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #106 a498b9f3-1fb7-4a0e-8f2b-f5cb46151ec2)");
unit.assert_eq16(16'h17B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 093fcb52-e24f-4dda-836d-f5f0c000e7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 ce4698e0-c029-48d9-aa20-07e4a3625c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 5880f09e-cf9f-451f-8b71-65c591b493f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 97c1b514-ae78-4070-bd83-fe2d9ddc31e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 4d50a1ab-b5f4-4e2d-bd03-b34e5b28cde3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 a53a1bf7-5dfc-4e4a-93e4-1bf061a5abe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 8fb970fd-3725-4063-b58c-58f0f081a421)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2EC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h2A9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #107 f0b79888-ccd9-4251-b8a5-ed9da8e99c1c)");
unit.assert_eq16(16'h2EC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #107 2ee30b98-5535-4e41-8b15-6188e9b2d908)");
unit.assert_eq16(16'h92B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #107 773c3e47-5a84-4eb8-aaff-e99ca9812084)");
unit.assert_eq16(16'hA4D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 8b81b648-ee36-4954-a4a3-70f2a34fe57a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 e5464e30-2d49-45e0-900e-cf2ceb9459bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 6d095422-f1cb-4182-8af6-77a1014bc511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 2f016965-f715-40ff-82da-79f9f79836c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 d5258e0d-fe24-4b28-8892-6ad24ac864e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 1dadec21-1a1b-427e-a2a8-130f033c4fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 e68c0ced-3035-4403-8b0e-2eea929a21d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h23EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h212F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF377;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h54F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h9C32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #108 71768b02-9b14-404b-8b5b-1d048e564ad1)");
unit.assert_eq16(16'h212F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #108 80c78c42-7f1e-431d-8b55-cc4880018995)");
unit.assert_eq16(16'hF377, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #108 e27ded8b-1d83-4fb6-8c2f-ca5cca5a49db)");
unit.assert_eq16(16'h54F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 6c6b7ebe-ad9f-4092-9b25-bd187c0a837b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 1b55222e-d7a5-476d-8de0-83089568c039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 b7f4ecc6-6ff3-4c3e-bdec-83e7dd32705f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 b8afd4dd-31ff-4aae-9358-2dde1561978d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 6cc079d6-1186-4834-b3a1-98f7c34b16e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 181cdd50-5c06-458f-beff-3b4d9247cede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 8548d3a0-3df5-41cf-b38e-3926afc9aa30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB524;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD938;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h29BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'hCB54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #109 7e7bc466-63b0-406a-9602-f4ee90377943)");
unit.assert_eq16(16'hD938, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #109 d3a15a71-f64b-4d8e-91cc-8c28d7daa7dd)");
unit.assert_eq16(16'hBEED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #109 99af1bfe-8844-4534-8504-ee76e2637adf)");
unit.assert_eq16(16'h29BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 4604aa91-661e-4cb5-8768-9ffd4ecd93ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 df8a122f-2c6e-490e-8649-fde84cc405f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 c8b0a410-c316-4eaf-a455-2f0c7f0f2b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 8e39969d-2a36-4c92-afbd-6c79a2e5ac2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 82a5371e-d1f7-4436-bfbe-b2237b6ace1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 ac89a9f7-b836-43b2-9d64-b280c9af6b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 69d3d69d-3345-4e7a-8946-c99804c90021)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA607;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h9E87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #110 21c0c942-4fe7-4f97-932e-e82c38b84782)");
unit.assert_eq16(16'hEB09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #110 4ca07fcb-b127-44af-ab51-bbe8094243c5)");
unit.assert_eq16(16'hDD0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #110 a373f334-5395-4180-8034-96a7be18e878)");
unit.assert_eq16(16'h14A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 b058364b-1906-4ad3-af0c-26da6c063d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 d66a0018-a5e7-4a03-bbf9-be32728a9390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 256bb8b4-ec06-421b-92c3-fc5c1982dcbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 c2c1f411-3650-495c-a373-2bf34eb5c5d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 62883197-fbd8-4e97-a8d6-2dd0aa145f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 b5133fa3-6bf2-4c3f-8587-a6043f01eb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 ef502eae-dfb2-4022-9337-218233e0a5d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h75EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'hA574, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #111 224a9f6a-7fff-4820-ac52-353a1d01faae)");
unit.assert_eq16(16'h2A1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #111 363555fd-6c15-47d2-8dae-c7664e4b5cf8)");
unit.assert_eq16(16'hAE74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #111 f835e71a-ac9f-420a-b823-a19b570ad6d1)");
unit.assert_eq16(16'h75EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 9ebf8952-ef42-4b30-b773-322a3f29f99e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 b7070912-630b-4e13-9f9b-337c9b8678b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 9c61667b-66e7-4b37-81fd-9e533cd4f271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 28582380-736a-43e1-89fe-b7506288f5c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 8f84c74e-591d-49d9-a1bb-bdfdd1facf61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 65f99615-1495-46fc-992b-5f4bdc328242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 baf168c4-6845-4bb1-b1ac-343e834c9db2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5FBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h08F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD011;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8723;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'hEA3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #112 6442350e-5e68-4500-813b-a5275342d64e)");
unit.assert_eq16(16'h08F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #112 b7b06c03-02e1-498c-b0d7-a53c64fda051)");
unit.assert_eq16(16'hD011, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #112 66b9a9f6-7693-45cd-94ff-84abe4059b1e)");
unit.assert_eq16(16'h8723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 1aca4e52-1e87-4d92-9231-526dbd12e69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 b0ec6d0a-1d14-4542-9863-0f13c255ed33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 fabc9fb9-a562-4a7d-a9bd-76888c7953f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 d2722fad-13ab-4f2e-8142-bee368d21b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 823bece9-a79b-4471-b044-bfb4530cdcfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 eab084ce-4ddc-4917-8753-324bb41a7414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 e836126e-35d3-4916-aca3-782723533494)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEC39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'hB53C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #113 6aa5cbbc-024e-4fb9-abde-27cb9df5b80f)");
unit.assert_eq16(16'h84CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #113 465b9551-40cd-4b84-bf0e-5bd13bd21167)");
unit.assert_eq16(16'hEC39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #113 8842d4a7-7dfe-4ff1-b067-647e72b35aee)");
unit.assert_eq16(16'h48F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 c3d50607-427f-403f-8fa5-8ca950129997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 4dcdd2a8-d4dd-49e3-a9c0-18dfed796976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 d88326ee-1413-49c8-9f31-733a4f87f6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 c8939653-b46d-4ae7-bacb-291dd58e0545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 0cf89b47-2a6e-477a-b7bc-c3e285201a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 fdd3f804-0d87-4de5-985e-3597e98f61ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 44f296b8-7cbc-4002-b008-df4a4d61348b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h850F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA2CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h605D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF5DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'h1803, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #114 93b9cfd3-e206-47ec-a36e-48c003adcdcb)");
unit.assert_eq16(16'hA2CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #114 6cf6b8b8-2abe-4c2a-970d-784f44af1726)");
unit.assert_eq16(16'h605D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #114 707a53f1-9dc5-4d8c-b406-15ea95f51306)");
unit.assert_eq16(16'hF5DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 3eebe49b-17c3-4025-b6e9-9028d74e8e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 27b252e0-0a4a-44a0-8a51-96d2f8d09b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 c85835a6-4f3e-44f8-aa82-902d0de2c1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 22748a4f-03b8-4e18-9946-f5c444ba6c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 b307a8fa-485b-4c04-94a7-7f38b748464f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 f44433db-4158-4dd8-94cc-3087f25cdcb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 9a19f304-24c1-44fb-b449-c348d3cd926c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEB88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h09E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'hA6A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #115 b53d569e-850e-47cd-8b10-c1a18b99d9d8)");
unit.assert_eq16(16'h09E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #115 ea22ec92-b714-4327-9246-5078839da33d)");
unit.assert_eq16(16'hAA87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #115 10f05f8e-6cde-40bd-a25a-0cbb450d52ec)");
unit.assert_eq16(16'h9C6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 049cf451-baf1-4538-b8e7-212a60a8471e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 215941e7-95d5-4178-909b-2ea40fabd2f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 da393bd8-2ae2-45df-bc5d-46d077b6162e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 46a6673a-65c6-4727-baf0-d5cef284b955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 4ac0383b-28e5-45e2-b089-c31b649eddc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 10955737-3b32-41c2-94ff-d96a004b95f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 7ea526fd-eb38-45bb-a282-c2e5098269af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h167C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDAEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'hDFA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #116 74b5d43d-1a45-439c-810c-be028d07b901)");
unit.assert_eq16(16'h9C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #116 2217ff6c-c06a-4348-9c1e-d9cd9b59b408)");
unit.assert_eq16(16'h4636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #116 4f59170e-5876-478c-bfaa-b7e04a3c5397)");
unit.assert_eq16(16'hDAEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 59fd9dcc-b043-4d02-b29a-7eb97c8e3aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 40a2695a-8d7b-45cf-b329-5cc5a5ac0f83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 ccefd1d8-f815-4527-91bd-39ea78705fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 397e22de-d04b-473c-ba27-4eb8ff3bfc26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 f34e3548-a9fe-41d1-a263-0698706e8c1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 537b8c35-0797-4da5-a1c4-5bb246f9cbc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 f7a1b0be-51a8-4a4c-aeb1-dbfa31a7b1af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h478C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7EF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'hBF76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #117 e6f978fd-34f3-4144-8708-7cce7afb39c8)");
unit.assert_eq16(16'h9D2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #117 4dafb460-ded4-4128-8b8d-cbf68907e9c8)");
unit.assert_eq16(16'h478C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #117 9a51755f-c1a3-4f73-9405-d512e6e3f92d)");
unit.assert_eq16(16'h7EF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 4fb0d120-2b91-4e53-9d48-184281b5b1ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 e865fdc0-79d5-439b-b3da-65f59f8a39ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 d9586154-8bb1-4c71-8760-cd599e87c602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 f0b29cde-dd24-41f3-b3c7-32da6a8abafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 2d450609-aad7-4be7-b1f7-90489bc1ccf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 9234aa4f-8cf9-4fe3-9acd-76ce40c2f538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 395dd964-1f13-4153-b9ee-b37adee12cf6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h41AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA04F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5423;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h365F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'hCFFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #118 efad10f8-d5c0-4cb5-a498-33ccfd67e879)");
unit.assert_eq16(16'hA04F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #118 9bc396f2-1d91-4562-9b9d-194d99758b07)");
unit.assert_eq16(16'h5423, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #118 24cb4ee5-a8d2-4da8-8fb9-a27d194cc16d)");
unit.assert_eq16(16'h365F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 8d1d409a-7443-4d3e-9553-3aa799ba2e0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 f0c3dfc3-9569-4dc8-91fb-ac7975985825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 2a8b5c43-5a76-4f02-ba6d-fa1018d8e354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 6e2c9ef3-20b1-4aed-b01b-69d4836fcbc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 58e8ea5a-04a3-4b4c-ad97-080a5c9c22cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 dae5c35d-2858-4a3f-8b6d-8eea11b9dcdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 4adf390b-d135-4bef-a531-e9db87ae83d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h542D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #119 7c051e69-7be7-448a-9996-55e0959e1dae)");
unit.assert_eq16(16'h6D83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #119 bd2d789a-e851-406a-bf87-be2cb05b4046)");
unit.assert_eq16(16'hE895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #119 a12e496b-a233-4dff-9420-fa0f58ed8834)");
unit.assert_eq16(16'h4E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 4e9b19ee-e1a0-48a4-be50-abfacd8a6e67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 960b69b3-0f17-40c7-9687-9af5395c4e0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 8cfed6ea-666b-470e-910a-c3ef8d625355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 6fcab261-d5ed-401a-953d-6cc5ac708db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 927ebdae-59a7-4bdb-94e5-22c045178f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 fb966f6f-00f9-4771-a2ba-13673f9e0070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 3d146224-bf31-4794-a50b-3deff2f8ddbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF4AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4660;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB915;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h5D77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #120 881be8d6-0d53-4991-adf8-c90071efe2df)");
unit.assert_eq16(16'hF4AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #120 d3bf10bd-f68c-46d5-bf60-c7c32a79a260)");
unit.assert_eq16(16'h4660, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #120 e0ca379e-5f5a-4e31-879e-5af86dd7fb65)");
unit.assert_eq16(16'hB915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 e8fd78f8-d2ee-4132-a8f4-fca5ed37b7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 272f8957-213c-4810-bfa1-1af219aa0c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 af11247c-d36a-48d6-93e5-e34e013c394b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 aa1c6143-4364-4285-8f64-2d9f2b1b3642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 cfc38238-1a79-46ef-a379-abf4e58e1ba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 b689edc3-0417-4b5e-af5e-da9dca021249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 9b8b74c9-dae6-46bd-9846-ded4c3eda95e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0E3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD60B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'hDDDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #121 0494f0b6-91d8-4e00-a2ec-55eecfaf0cf6)");
unit.assert_eq16(16'h7F22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #121 e3ccfacb-041c-41c1-ae99-4aefb1047bf1)");
unit.assert_eq16(16'hD60B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #121 9ff88c1d-a936-4bab-a6fb-4c76f5fb1cc1)");
unit.assert_eq16(16'h7F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 4a7d7c50-3697-4a61-ba91-8d5c835e46be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 9ffe025b-b2ef-4c35-868d-d0c9e8e6dd0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 c9088ac9-e169-4621-a00c-c27974d96715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 da0795c2-b364-4108-ac25-87cc83fa36b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 22f81bdc-8d13-495a-b316-355e0b01db45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 d7a6c251-94d6-41ab-acef-507a0ccbf7c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 3b9ec2fa-b672-4d5a-82ab-94d4e6bbd22e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6331;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF7B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'hCAA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #122 ee246eee-a053-4fe1-8f82-6350798a51ec)");
unit.assert_eq16(16'h3C08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #122 69414b5b-e54c-49cd-a9fb-85858eb5abc8)");
unit.assert_eq16(16'hBC9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #122 c5f863f6-2413-4265-bc5a-cf28a853534a)");
unit.assert_eq16(16'hF7B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 cf9b0c67-b88a-4d3e-a40d-0a248730dbd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 dbee1e5a-81e0-499b-93ff-fb8ea18fd614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 306506be-831e-4afa-a643-ca957d6f72c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 fe192d5f-c50d-455a-9183-9a53696b10f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 dbe3e2c9-b369-498c-90e8-2364dafbbbfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 91e140ac-184b-4e93-a0d8-28dba5bd5540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 5522dcc7-a548-4837-a121-2fa13544c564)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7401;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC34B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8ED8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h97E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #123 494ded3e-de6a-4991-bc77-116bdd2e4859)");
unit.assert_eq16(16'hC34B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #123 90bc8fca-6cd8-491f-b286-7525cb28b5a9)");
unit.assert_eq16(16'hF895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #123 65ba1c40-9399-45cf-a9c5-df27b443952b)");
unit.assert_eq16(16'h8ED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 d35a15e7-0743-4568-a8a6-abbcc4eca944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 1d0ee7c0-792c-47ad-9148-3801142e1e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 5aee2f49-e3ad-49df-97b5-ff76b42f2354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 e829b146-68d7-4610-b257-fa899af65288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 1ee674a6-1e7c-491f-b2fe-d2b85bc722c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 cf7168bb-25e0-4a0d-9e31-388495d20df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 fc091cd9-026a-4788-96c2-074a040d68cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h188A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB393;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h9CCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #124 b4fec5f5-25bd-464c-ae79-4177acb845c9)");
unit.assert_eq16(16'hBD68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #124 aaead59c-b8e3-47a7-bc4a-75e3f7201a63)");
unit.assert_eq16(16'h188A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #124 44e7e5e3-37d0-41cc-b7f4-7f29d71e12c2)");
unit.assert_eq16(16'hB393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 24e9b835-7080-4781-b456-fa1441b3a208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 ea592e31-2211-4fed-a348-6a157ab9ffaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 afa63db1-4873-4d04-b7b1-9049a7b85a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 3098b072-09f9-4aa2-9072-4a2ac206d0b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 ef1e4cd0-8d5a-4621-a755-316d49a1a342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 7802123d-1acc-4a78-b64b-8e6211972b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 b4993b24-4f04-4e2b-8472-a579c2729536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2AE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6550;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h46BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6EB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h67B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #125 e9412669-e648-4b2a-88bd-c41bdd4e1b4b)");
unit.assert_eq16(16'h6550, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #125 b2c3b07a-71c5-401d-b572-3ae38cd85151)");
unit.assert_eq16(16'h46BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #125 a70f3e63-9249-4c45-9273-5dfc978076a3)");
unit.assert_eq16(16'h6EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 fd55963b-aa3a-48c7-8233-522f1914bda5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 5697e320-7895-4be0-930a-8ccdaa17bec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 089f8625-4d7b-4ebe-b800-8d7281d65614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 cadb07c0-01e5-4689-9a8f-e7df5eba6994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 5f84f397-5d3a-4291-adcc-1dff15f8a931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 df88f62f-eb11-4af0-9a57-2bb14a03dbea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 172fd8e7-0c74-4cdb-ac23-8568353eeaa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7FB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'hD636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #126 8b7397e0-5d86-4c16-985f-a96eea7c24f8)");
unit.assert_eq16(16'h7FB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #126 f3a8ae65-a5e8-4757-837d-905ff0990919)");
unit.assert_eq16(16'hDAD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #126 411729fb-07f0-4345-8154-3bfae40189f6)");
unit.assert_eq16(16'h0627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 cfb3ccb7-0cef-4376-b88c-e0f0a4838b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 c0b8baac-2b48-4a78-9015-e1c0b2f46942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 27a06563-4717-4e09-bd8d-ef6616fb2923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 e73e1dcd-983e-4906-ab44-0bec7eab1920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 6d3f8e7e-463c-4d14-b87e-f1ba09ce905c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 feff087c-74b3-4651-b721-ffb66fb60566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 d585dd01-2c45-4cae-a0db-cadc60450654)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF4F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h465F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #127 f3402e4e-8492-4683-9c1a-8867474b6d92)");
unit.assert_eq16(16'h04F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #127 d1971d3a-b50f-4e6c-8874-3e67df5f87b2)");
unit.assert_eq16(16'hFDD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #127 0f102b9e-191f-4191-8a04-9bffdc735cd2)");
unit.assert_eq16(16'h5E8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 e0534b64-201e-4081-917a-ad5942283915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 32551b0b-1338-4d88-8d41-31b30a72c312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 b583dfb2-4692-413f-86f5-93f2121d8df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 92dfe1c8-ca5c-45fc-bfc8-7ee7423d330b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 24e45676-bc87-4d26-889c-1faad826fccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 393c7aa9-2301-403c-a994-074c294e4099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 f7f730aa-9912-4817-b327-cf1dfe3d0b5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE05C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h236D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h60FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB80C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h4280, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #128 bbb3eec3-58a6-446f-a10d-e268e820001a)");
unit.assert_eq16(16'h236D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #128 8f1a9509-5de3-48cb-9cdc-02313319a50a)");
unit.assert_eq16(16'h60FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #128 058ecbff-b608-4427-8f2e-d0ff0b4fb589)");
unit.assert_eq16(16'hB80C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 37c6233a-b6ce-4908-9abf-0a56aa54f0a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 1249f65c-7460-44fd-850d-1e14389dd393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 945e2062-12d3-4799-ab5b-64e02d78fdec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 9e39555f-f91d-47df-9a9f-5ecd231d7880)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 0b447238-2092-44f3-b6a9-27ae2d938509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 1dafa170-fd15-4c6e-a428-0ddc0295d753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 e8d69c78-4661-4c21-9613-584dc47fbaf8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h52FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6515;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6159;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'hF9DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #129 b1cb907d-f8cd-444f-a02d-e6c5811894c8)");
unit.assert_eq16(16'h10EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #129 12b1db28-fb61-4ceb-8106-21da8b5a7d1f)");
unit.assert_eq16(16'h6515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #129 7de2bcf8-a3dd-4452-bc3d-99d79de89c9e)");
unit.assert_eq16(16'h6159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 81fd7e68-9b27-4dab-8ee3-a3f0e1dc65d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 12fac4d3-efc9-4c73-8d91-a895d054bab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 4e7aaae0-43fa-47b3-a9b2-f623d5d3d2d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 1ea62e06-2e47-4b98-b6d2-e45b0812af52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 e82c9e0c-1fe1-4dea-a692-3c825d15720f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 caa0d19c-121c-4ec1-85e9-91e0eeb655e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 c7316637-1c90-409f-a296-ecd5b208ba0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEDA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'hF391, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #130 5452f319-7c79-41f3-9316-d444b0f21457)");
unit.assert_eq16(16'hDB11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #130 927753ed-d30b-451b-805a-46538c8c06e3)");
unit.assert_eq16(16'h5C8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #130 585c3918-91a4-4fce-8a32-4cd65ddc3a7a)");
unit.assert_eq16(16'hAB15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 b619ba92-8348-4fd4-bb99-a2a8f0b7c180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 23f024b4-5bbe-43eb-b8d6-f158a9091210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 c41baaa4-57a2-4d9f-9ef8-fbfa891383e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 a8264f6d-29ea-493f-9f2d-e496e05508ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 13dabdd3-e284-46d3-bf30-b410564063c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 6ebf09f5-6165-4235-9996-44de2f4e9140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 bf6c8ab3-6758-4551-99a6-005c2f306bd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8951;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9001;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA693;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h1C4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #131 beb4f154-ba08-4eb2-9d4a-381bbc317b77)");
unit.assert_eq16(16'h9001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #131 1da448f2-814d-4953-8f3d-305573cc9c71)");
unit.assert_eq16(16'h5D07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #131 83fbbed1-6353-4e47-a4e5-736086ffdf9f)");
unit.assert_eq16(16'hA693, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 4a09bec3-e711-4fc5-b123-3ba10628f6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 13529522-0051-4e05-a9fb-760c3fc875a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 0954337e-b5d8-4417-9299-9b051b0d8883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 9585829c-3e9e-443f-a0ef-edb44bef621b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 0e3584dc-d2cc-46f2-9b81-901498586354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 f0e7f31a-2673-4a02-a66d-9ef157f9b1fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 7e7e6eab-3043-4f19-8cda-419cb91887b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4991;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCDB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h0FBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #132 ce72fe32-cde5-4268-9223-6f78b7780769)");
unit.assert_eq16(16'h4991, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #132 4e36f1b6-d31f-484f-ad10-184ebb9ba187)");
unit.assert_eq16(16'hCDB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #132 0ade0a2f-3a59-47e1-bd35-ccc3ed3d852a)");
unit.assert_eq16(16'h7C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 fa34f422-336b-415b-b6cd-3d3b034c355d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 46f1ff33-24df-4132-a351-f95e863b5489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 570f3a07-d79e-403c-ba6c-5ff7edb63cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 aa7dcee5-662b-4616-832c-ad1865c3fb48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 54671c22-2069-4ea7-9eba-54ecbd9c820e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 fc7a700a-26c2-4fad-acf7-0cf51a1a6cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 1c04c7d0-58ba-41e0-9f55-07798ce4aadb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF159;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA938;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF030;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h4266, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #133 17d6606f-bdf8-415b-9ea6-3205e3d429d4)");
unit.assert_eq16(16'hA938, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #133 ab9991f3-387b-42f5-96eb-10d8a54dc2e3)");
unit.assert_eq16(16'h3C5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #133 ac237f35-01f5-4d0c-a480-8e8cda5da2fe)");
unit.assert_eq16(16'hF030, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 f342763d-f565-4f41-8352-c62781a215ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 cb86e667-046a-497b-9f65-bb31fe1dd6a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 b3898b88-a126-4dfa-91a4-35e03737a198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 523ee283-eb56-40c9-ba38-4687033a5baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 7e801804-ddb0-4806-b111-6d9ddd761715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 6693f006-eaba-4055-b042-794ec078f386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 3bf3577e-0f1a-4827-bd99-4c262fbbf7fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2F23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2146;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4CCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h06E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #134 23f869f0-2f24-48ca-be20-d32cd7875895)");
unit.assert_eq16(16'h2F23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #134 74d1cd75-783f-4c4e-bbc6-618594b05086)");
unit.assert_eq16(16'h2146, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #134 b136b25e-1d42-458f-8263-c52f6af8d040)");
unit.assert_eq16(16'h4CCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 091665de-b727-4696-b440-6c0009a51743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 aabf1c92-b41f-4af1-881e-8209a6ed4dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 7887df38-957d-4728-bd52-d7799f24611f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 aef43e94-909a-49e9-9fbd-88d0df570cbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 4ec674a8-ebf5-439e-8d31-d723c961521f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 a38aecae-428e-4fcf-86e0-b452e28377ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 12058266-732b-4ef9-8d2f-516787a29071)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1891;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA7A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h1AA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #135 34682e38-69cc-4cd4-a91e-23c6a5cad538)");
unit.assert_eq16(16'h1891, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #135 ab0e961c-f6d9-4360-8415-7cf7cfa7043c)");
unit.assert_eq16(16'hA7A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #135 23b57c58-47d7-4bf3-a9c3-13682e59037f)");
unit.assert_eq16(16'hEF95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 fb4349f9-2c7b-4331-b782-69618764f126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 3562e844-3cde-48ca-a990-999df6e6b3aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 a65f8f94-28d5-440b-8064-4763b1f59c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 686c077c-b7ba-46b9-875f-e71967d843c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 301b0410-c138-4d88-a0cf-3e076d67009a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 82d6ae72-acde-46f2-bda5-211d7b2f049d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 902df15c-7c37-41dd-9ad8-a0996641ee0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1589;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA67C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h520B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h8BA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #136 f037d7b8-7c8e-40ba-84fa-bbadf85229a0)");
unit.assert_eq16(16'hA67C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #136 9066fe02-6b59-4f46-973d-73e63645c792)");
unit.assert_eq16(16'h520B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #136 4aa46a8a-1046-440c-9298-925a67d8730d)");
unit.assert_eq16(16'hCDA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 6a1fc140-e528-4817-8d47-912f98fed357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 46e12fb6-f4e4-489c-9ca1-8a4372e5872b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 2efef587-db2d-48ea-b24f-30a6a9300557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 0f0b107c-7585-497a-a0a0-8657cb471af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 941abaad-6557-4eff-a228-5ecad9b31b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 76742b75-c626-4b51-a24a-06917a0ddd61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 81d27cf3-4aa6-4fd1-b408-346c9ac64ada)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0743;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB3CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h22C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #137 55b2ef5b-d11b-4f03-bdb1-7d7c35bef655)");
unit.assert_eq16(16'h6D06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #137 44e5b9c2-7e0b-47cb-811d-56a20f8c07d2)");
unit.assert_eq16(16'hDC80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #137 82b62a16-884e-426f-838b-83d25d6ccb92)");
unit.assert_eq16(16'hB3CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 163bf607-8ac7-419f-8bfe-febfd81fbfac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 632e0a5d-b97b-4f2b-8b44-249ae520310f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 87b3bb5b-dad8-466d-9284-5fbe3450047d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 249ef92a-8593-4849-b653-55815143adf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 de3d71b3-b654-4243-86b1-4fd0d90703e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 2a78a28e-f86c-48b2-aebb-649348b0d3be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 7124a656-c4bc-420c-8aea-2df98b67b21f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h639E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8806;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h77B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #138 77caa348-49d0-4b28-978f-7816073ad08c)");
unit.assert_eq16(16'hED7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #138 5b107e46-2d60-4f32-a600-b014389382bd)");
unit.assert_eq16(16'h8806, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #138 c43525a1-d377-4c83-b251-a8d33c0e3ea2)");
unit.assert_eq16(16'h30F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 bb77f33d-1fed-40d1-8c2f-fc4898e00547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 8c55a2fb-b799-49aa-bc9c-3ced5218778e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 6196f5eb-9589-4fae-9a1d-eb6e8ca7a668)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 44928789-8547-4b1a-b01e-67f2c545ca24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 da9e6900-8865-4a87-8255-bd5609dabc10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 c3c8fe8d-c3aa-44e2-b77a-bd11f6b9f8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 edf71fcf-bb7d-4547-bae0-2fd0f22ffcce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h383C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'h369F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #139 136bfbd8-e403-4ed9-8ebd-002434e7e3ca)");
unit.assert_eq16(16'h71B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #139 1f5de3df-e2ba-4e27-b6be-1e554674e513)");
unit.assert_eq16(16'h383C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #139 5ff4d0fb-2fb5-48ca-9359-5c928a8d9337)");
unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 56962954-c12c-4447-8154-c5ae929aa632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 0b1426b6-9954-443a-8172-36277a9bcaa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 528d6201-01b8-4116-9889-68ae71c50454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 012ac50a-497d-4096-962c-518143d0d203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 a219198b-091e-4816-ae6f-c49176fc9af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 193ad9d2-b1c5-46a2-af0d-745b8a0f3e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 81bc57ca-054a-4b31-b034-29fd5fa9d22a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF544;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA82D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1685;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'hD06B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #140 4a6cd787-0e32-4e72-9cab-9c87e3eb09b2)");
unit.assert_eq16(16'h8C6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #140 9bb74bf6-02b6-4854-8e2e-7d1065806f10)");
unit.assert_eq16(16'hA82D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #140 1256da84-ac88-4254-999a-b6a570ea6fe2)");
unit.assert_eq16(16'h1685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 99cf7c04-8588-4f0f-905e-a9ed80fa2d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 85927ec4-1d05-40f9-9339-7b8d4f97a4f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 4ddd6910-3c67-4d3c-a657-c0806a7f4b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 9dec1f58-d231-4efd-a01d-486d35f48db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 8013df9f-37d6-4743-a7a7-46a038b7aa96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 609d7036-5c2c-4a34-b0cc-740d044639ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 1e221ca1-7569-481c-b1b4-504add792693)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE295;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2DD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h324D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h0F87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #141 e2abe5c9-0fb7-4543-8421-e6ac76674bac)");
unit.assert_eq16(16'h2DD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #141 7035e22e-27c2-4435-9c49-c1b542ec23b4)");
unit.assert_eq16(16'h4881, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #141 fc050f6c-f4d9-4a32-976f-906d18ed3dd7)");
unit.assert_eq16(16'h324D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 06545651-c44a-49e2-a509-5b85c41f1946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 3cd7a343-30fc-45f0-81e4-8300c616ce0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 0d0d2867-1c59-44c3-aca2-4fbf881a4047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 7e71e2e4-c899-4f22-82f9-ac3dbd6eccd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 89e5a593-1381-44b1-8af9-f91238d68ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 db44f5a8-fcec-4c30-aa37-d731911d2ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 051ae857-45bc-4fdd-9043-cd58cce3629c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0B1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0515;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'hCCA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #142 bfb5d283-d678-4799-a08a-d09bd43188a9)");
unit.assert_eq16(16'h0515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #142 0ab39916-0005-4f75-99bb-198e20355e18)");
unit.assert_eq16(16'hBB36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #142 0686adef-53d4-44a0-bd94-baca72f8b179)");
unit.assert_eq16(16'hA4B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 1e1921ed-f28c-4de6-ba42-5d46dd5dc8ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 07794349-53bb-467a-a7cb-e88c61f2961c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 ed2d0512-fa42-4a30-aa4b-77d3ae2980bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 1534de6c-c8fe-4ca1-ab4e-42180fe22790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 5146f081-e9f8-4436-8f47-4c34e959f0cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 a76badde-5bfd-4288-8cd8-bd291b422e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 5aebd240-8324-4925-ba5e-ad0f975a01c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h824A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h661A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h2A27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #143 a6302d5c-cc36-4be7-81b9-e8ab45b73421)");
unit.assert_eq16(16'h824A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #143 3db4d253-4947-4a2f-ad4e-495e775ccc2d)");
unit.assert_eq16(16'h661A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #143 c86fe8f1-42e5-4b8b-b883-c1049d5ff265)");
unit.assert_eq16(16'hEAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 a08b11ed-ed07-427d-9e10-ab78a6e860df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 772114db-b1cc-4de6-b43b-05523c6dd594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 02b8e373-6b3d-40c9-9490-e9de330db941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 059ad6be-ef11-4b60-879c-1f5550a3ce5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 d7e937b3-8ee3-4865-a996-84f6e481d357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 923abf2d-b08d-4314-a16c-f92db10c5f96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 23ce6cff-a272-41de-ae7a-fc069c9d3059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h98B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8AA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7230;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h0B13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #144 fd9cfdcc-f637-4202-9f19-f4054846c093)");
unit.assert_eq16(16'h8AA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #144 02499746-cfcd-4c24-bd64-3610b9c92590)");
unit.assert_eq16(16'h7230, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #144 21ab0ff8-73f7-4628-9ccd-7a3a92cf04d8)");
unit.assert_eq16(16'hE911, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 741ff8e8-42fe-49e7-b18d-a9d3286e9782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 b093aff5-06ce-4f66-8461-032c0867afa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 47ddeebc-a182-430c-90ec-063e263d81f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 ef20b3fe-a752-48d4-ae7a-58879448b623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 8a1fb201-db86-4038-a669-210e01e7d3b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 dd1b737a-c1bd-4090-bef6-bdd7ec47c6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 f2e7adc6-fc0f-4867-b132-97a41c35d57d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3263;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h2DDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #145 38ebf189-2881-428a-a800-c005809ad2ee)");
unit.assert_eq16(16'h3263, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #145 3f4a6784-8a87-414d-8193-716f5926571f)");
unit.assert_eq16(16'hAF94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #145 5b0aeb72-986c-4cc8-84ec-3b0adbdbe7d7)");
unit.assert_eq16(16'h041B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 83449816-32c6-43c8-b209-f3776102eb5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 4b3156e5-931a-47a6-ab93-1b19e6d7379c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 c9c4646c-b6ed-492c-9524-b1b3d69c637e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 bed20625-fe9e-4d55-8f9c-66aa9c87d0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 d776b9da-d5b7-4fb2-b80a-86f2c592b940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 06ee9fc0-5a58-407a-8697-f869df52e0d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 f089f48c-a904-4410-94d7-c3b717b86643)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h482D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h3168, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #146 7319bcfe-ebae-44b2-a3b5-74b0f031f703)");
unit.assert_eq16(16'hBB46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #146 aeeaade6-9b1c-49a2-a1f5-973e156e8c2e)");
unit.assert_eq16(16'h04BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #146 dc4f3018-1794-4b3d-8cce-f6239cfa09ba)");
unit.assert_eq16(16'h96B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 2ec13c2d-5fb7-4a72-9cb3-cd0eba57aaa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 c7146369-96c0-4adb-8ff5-8196f9ca5376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 eab72bad-e230-414e-bced-1d83988a88eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 71df9a9d-e149-4fb6-ad9c-41877cba1c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 f6965d95-7ee6-487d-81fb-5b4b9f806359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 9d3c09fd-8335-4b38-8814-22e29af9beaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 dccb1db0-a586-4227-817f-4acdd18fe7ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h01E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h0EB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #147 2cb122df-fb2a-4068-956a-5614e405b3df)");
unit.assert_eq16(16'h3D2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #147 04635bc4-bbe7-4db5-889e-deab3ecc6ed0)");
unit.assert_eq16(16'hBB5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #147 8b7a68b1-89d0-4c8a-8a00-05e1127711c8)");
unit.assert_eq16(16'h32CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 46a66451-f86e-41fa-9d6d-b2d15ee5270e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 21df5a83-cf18-47a0-a4d0-83b53bb925d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 aa1d3ca6-5195-4c8e-8cdf-d95a8d609c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 63e06b2d-302e-4ffc-acb6-02cf8ce9966d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 7da16f14-d630-4729-a668-608c2bacc7a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 7ce61388-e30e-450e-b297-60729c6310a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 047f4c63-b963-4e85-baad-2029630b56f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9D91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF9A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'hCE75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #148 d18d317e-0d39-42d2-bd3a-12b3afb05a4f)");
unit.assert_eq16(16'hE5CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #148 87bedeb0-1cc9-4c7d-a336-5dae2ddec58e)");
unit.assert_eq16(16'hF9A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #148 b9b9e36c-812e-40ae-99dd-5d31860a2cae)");
unit.assert_eq16(16'hFE62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 c0ab3257-0656-45fb-aab0-7d4c4f7b8ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 3779d397-5d96-4772-ba8d-78fb83a9c709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 d94bf50f-e6fa-42d9-afa3-7b6b085f73fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 e4f00651-f529-4b06-ac84-ba3d77f4ead5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 466e0322-587c-4c57-a3d4-898ca64b1309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 d43b2ef2-c1bd-4cb9-939f-26c4dc26130d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 a1c093de-7355-460e-bfd4-0d072d22e765)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD953;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA30F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h5C17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #149 d5c62791-c898-47ad-bd56-8ede98a5b174)");
unit.assert_eq16(16'h8F58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #149 754668ed-bd08-46bd-b023-98f566f945b5)");
unit.assert_eq16(16'h6858, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #149 4d8666ee-55c9-4b1b-83f7-28a8554e4c46)");
unit.assert_eq16(16'hA30F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 e1b9153e-2eeb-458d-bf54-8eec9257b01f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 dac35e89-8f48-4485-83ce-7ee64f23f97d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 9a1374ac-af6e-46db-830e-00b60f32dc91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 b5a3dbc4-cd90-4923-b2ca-d40eeacfee26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 e13fd911-cb2d-4f30-b010-9ca3eb2473e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 cebfaad5-2875-4b53-a59e-c5a2a0f083e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 c6d1fd6d-cb3c-4c0a-aff2-dc35e415e946)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3DCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8960;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h18DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'hD4C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #150 17f3dd0b-93c9-4b9b-bc23-3426f78432d2)");
unit.assert_eq16(16'h8960, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #150 2bf03b39-b6bf-4a4f-88e6-bf2e16de0f29)");
unit.assert_eq16(16'h18DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #150 6f413792-05b9-460b-8866-afe22f326e79)");
unit.assert_eq16(16'h6E81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 cc162164-76e0-45e8-be49-f6f36b4ee140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 7257366f-077c-4a90-a875-e67f617c5bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 0908418a-2162-4582-b9bc-4fdc9bd58e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 41a17a23-8ffa-43ec-9016-9bc1db828296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 e1d66f6d-db58-41bc-9e8c-66737043eade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 cd8df5e5-1cbf-4e34-b2c5-545d1711b162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 f9e8a502-f72a-4ec7-9e77-8ab9d2d451f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF1D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF67A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h993D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h8262, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #151 1b08cdde-bec3-4da1-9c90-b20f2563d01a)");
unit.assert_eq16(16'h4E0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #151 1e0db1f5-edfb-463b-a227-dcf45445edc5)");
unit.assert_eq16(16'hF67A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #151 235ebd17-4612-422b-b97c-199abb809479)");
unit.assert_eq16(16'h993D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 4c4ae94d-143e-49bc-b7b0-f3b31d767156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 6b7b2bdb-85d5-4066-a7ad-a28e55806c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 21038ae2-0155-4c38-a978-ff0b17354739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 b0862d92-bb71-4bb7-a189-4a6cb7879291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 eaf0240e-eacf-4710-9d9a-012b8ef6d35b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 d1289137-d89b-46e5-a18a-d3513dd97bed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 07bdaacc-a094-41a2-81d5-6d6e6def9261)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0FCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8EAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h0E40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #152 8953d8a4-2a7d-473d-b8e3-c10fd91cdaa7)");
unit.assert_eq16(16'h0FCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #152 64f5bef6-9fa0-4756-a2cf-3f55c69e380e)");
unit.assert_eq16(16'h8EAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #152 73af2d8b-229e-42c9-a95b-eb6ec513689f)");
unit.assert_eq16(16'h6D08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 cf21988b-8d13-4490-b2c6-06a24e4829db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 e0bdcad8-5f33-485e-afef-ae6425ce6430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 1eab3f93-24a4-4ebb-9887-31b39a4a0d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 955198e9-8e1a-4864-bf06-628f5adf2307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 83e45710-e842-4f20-9939-be315d1198c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 d9d5fead-404e-4b2a-9543-6c9d612a42ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 5e93a127-83e3-42c5-a7fb-49e561963e7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE176;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB246;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD942;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h517F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #153 8514d295-0033-490d-b11e-ba4cf30dca12)");
unit.assert_eq16(16'hACD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #153 11fc7d61-767a-416a-a787-43c87ae450e4)");
unit.assert_eq16(16'hB246, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #153 6217e933-d397-488a-ad4b-5cd50d04dced)");
unit.assert_eq16(16'hD942, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 8f1212b3-27f8-4cb4-81f1-2afeb27014e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 b343b08f-5d2f-4926-b843-6156cf558144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 964b9d00-fe82-4e46-8506-3fbf7475d735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 71bc7369-5b8d-466f-aa8e-11798db6384d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 ab7b62ed-951e-4f66-8e73-92d42e354221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 da9b632b-67da-4bd7-af64-e48d2ca07923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 f556afbf-9b31-46b4-ace5-77921911192b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hECF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h26DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8691;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF5C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h0A7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #154 393e2c55-eb72-4db7-9acd-6a24570f17f1)");
unit.assert_eq16(16'h26DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #154 0b135e0d-3f2f-4745-bee5-456b70995190)");
unit.assert_eq16(16'h8691, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #154 28315228-f385-4099-8188-433d6a82cfae)");
unit.assert_eq16(16'hF5C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 d8e89408-7754-40ba-94b2-8240380fedae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 9a133408-aa3b-4602-9483-6f4a6d1d6af0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 a3bad0ec-574a-4339-b6ab-8a124ad77215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 cdb92814-0082-4027-97b2-0ee3ac78de56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 ef8a7fbf-200f-4caa-ac7e-e266f1f2de98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 b8456ae0-6554-4662-b1ab-472d284babd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 3061d72f-3a86-4e6b-8c21-54b1b1c6c0be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE4EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h3ECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #155 170fcaba-efe7-4c8d-a12d-402e6efce88f)");
unit.assert_eq16(16'h3E60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #155 48c5c89b-0784-43d3-8e24-f7fb75003fe4)");
unit.assert_eq16(16'hE4EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #155 c44cfe17-7d21-4296-87ce-f5083f74ae6f)");
unit.assert_eq16(16'h4C29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 55395a42-35bc-4458-a16f-d29b24e66ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 c3f9c0d3-d26f-4956-9a5a-64c5ea1da022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 b05f3532-0c9f-4c7c-bfc7-0b4ace8e0758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 02c788d3-07db-499e-a0a4-65530d8c1db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 88863513-d172-46f9-afb8-ff7e40848027)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 52ce8497-4d8d-4076-9b8f-fde583dda250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 1e9d6916-a6e0-4447-9df7-b4e17c9f7bda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h7B6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #156 0173bb54-888c-4ab3-b3cc-f22325e68e4f)");
unit.assert_eq16(16'hD6EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #156 0c56e9cf-fab8-4c02-b97d-5cdef3e9b892)");
unit.assert_eq16(16'hBFE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #156 5c331b8d-041f-415c-891a-d199889d6f9e)");
unit.assert_eq16(16'hBAEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 7639f2eb-e23d-4c8d-8bdf-13243f5533e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 e501f0ed-6798-45c5-937a-50dc59c1b572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 ce2d0413-2f45-464b-84b2-9adc55390f90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 d21fe0b1-a0d7-4f22-b6f8-a35383f6ca97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 f9c09938-7067-49db-9d8e-b123aae3fd46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 d936efe4-e2a6-47d5-bfe4-182edef80544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 8e834f17-217a-44d6-bdc5-09ddcbddc0ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2245;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6DDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4CF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5599;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h7548, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #157 f0d10082-ab12-41d5-9c27-fd42cfa34e49)");
unit.assert_eq16(16'h6DDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #157 23bb3d48-4e6b-4345-8d26-731359b85b45)");
unit.assert_eq16(16'h4CF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #157 722ce54e-ab62-4979-9098-b952d0eaf98a)");
unit.assert_eq16(16'h5599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 b312ab9e-29c4-45f3-9406-1233bc8baa1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 600d3098-fc7d-4076-bc60-62a698620dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 68d61527-762b-4f19-8096-8351f7a35179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 c698dc88-c9ea-470a-aabd-5b03903775c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 54e5e67d-6234-4364-8d02-c464f1f2ec6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 b2df688c-26a1-4968-a760-9a28ef906dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 5c99e558-fd2d-4d38-8b5a-b83ffe8ed522)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC80F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'hD572, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #158 3f4190e0-6c52-46df-9172-0ccf4472e250)");
unit.assert_eq16(16'h7D1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #158 922426a8-062d-4608-9efe-f0d7db9d003f)");
unit.assert_eq16(16'hC80F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #158 4bd88cd2-0173-418a-96ce-f0679d898a71)");
unit.assert_eq16(16'h90C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 56a3a4a3-1ab7-4dce-b920-04b694984cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 c60f4c7c-e460-413f-ab04-0fb9305ba378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 c6470ec6-4bc1-4788-9378-88d6a5b886d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 bbc38baf-c5ef-4290-bf06-5bfc3c590336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 ad22ce8c-2ea8-4f89-ae91-4ea022b00d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 d6b05f13-4f66-477a-a03f-95d3c427da46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 26b1bf13-d201-4083-8b79-3a0ebf1ad417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFFC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h2265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #159 c867709e-abd8-41ac-b247-d48e489fe955)");
unit.assert_eq16(16'hFFC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #159 dff1fe67-0615-4da8-8339-1588219a4898)");
unit.assert_eq16(16'h0EC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #159 6b0d460e-4881-43bb-ad5c-7a123e7656c8)");
unit.assert_eq16(16'h2084, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 950900dd-e72b-4bea-87c6-277bcefc70bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 bc14056f-a55f-439d-9836-ae3361d75d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 4dbfa346-b74b-4faf-9dd7-4d4c6cfedb86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 c6c5e495-2e1a-4d53-b244-a06c34fcd3b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 10a9f82e-c757-4097-a45b-ab646a4633a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 df37dc94-2238-472f-872f-46c6031cc406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 98b568df-0efe-468c-bc3e-167e8d1a3d0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5A5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0AA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h62A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h904F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h22AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #160 57bb0fef-c442-4a0f-84ea-f003428fdd29)");
unit.assert_eq16(16'h0AA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #160 1ece8441-ea0d-46df-bf15-42f36b4d4e6a)");
unit.assert_eq16(16'h62A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #160 3a922d79-1829-426c-96bb-a1e056a77994)");
unit.assert_eq16(16'h904F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 b9a8caa8-4a76-4e36-91c2-dd4dce071137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 78ca91ad-7db9-4776-b8d2-d7be3e57bfe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 4b5f9fcd-bfbd-416d-9af0-9d61bf8e5443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 da42f970-5457-4b88-8122-f125c6b2b278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 5861ce92-f786-453e-b08a-9a1d908bfeaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 8463da68-44ba-43bf-9feb-f36f4b16db83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 c8d7e1a0-987a-4266-a577-0ca78195421f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5007;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7330;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA98C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'hCAF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #161 20a72824-8f2f-4749-9967-7785adc298fc)");
unit.assert_eq16(16'h5A50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #161 ae1f94cf-a943-403f-b57f-6cd30952e141)");
unit.assert_eq16(16'h7330, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #161 55caa9cd-1da2-4f77-86a8-1cce5281e4f8)");
unit.assert_eq16(16'hA98C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 ece66b25-385c-44a4-839b-e583554ec8ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 a429d33e-e2ec-4d6f-a493-401b1b9bab45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 07bdf659-a331-4a78-abc2-6d6e4845c813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 f3129ec9-cc79-4cfc-9c25-2bc49e14d34b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 f7596c05-2aa6-4276-9f7d-10722be8ef4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 0adf862a-df94-4e21-b788-c9bf29eb864e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 28b466d7-1ea2-4e6e-90e8-e60f95f41b97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0640;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB254;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'hBFC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #162 9ab8ec7f-74b5-4a57-9aaa-a8ea52c7e57a)");
unit.assert_eq16(16'h8E20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #162 3be6c37b-5fe4-4fcb-82f2-4e6ef9fa9a6a)");
unit.assert_eq16(16'h9454, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #162 3fe76390-158f-4a38-80cb-9366f6085a3e)");
unit.assert_eq16(16'hB254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 c42fb729-e9c9-44ec-8a56-5aca85c7b320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 9c15c1b9-6781-4a20-97d3-9549fb1ad396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 e3afba2e-e05a-443e-8152-7e819c84a24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 49cb7f24-ab61-44b2-90db-a55f40e493a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 275b6dd9-4c10-4733-8da1-34b902d53075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 1ed204e0-ca74-419a-8442-ad76fce38a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 29e7f67d-7d44-4374-8ee7-3424c6c2a8ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5818;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD927;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2797;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3851;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'hD0CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #163 4058f6f6-ef02-407e-952f-78e9811d7009)");
unit.assert_eq16(16'hD927, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #163 d0c87a52-1b5f-452d-856e-aee9e1430070)");
unit.assert_eq16(16'h2797, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #163 29f358da-3fde-4fb4-a3f3-28fb0ceed32a)");
unit.assert_eq16(16'h3851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 b94dc8bb-dcc3-4340-88bf-57ea23885791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 c7dd89e7-3dc2-4277-a9e9-b92a41301b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 90db7543-e539-4eb9-9967-d543c8ea36df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 b011c93e-738f-4273-8e55-81a797e25f96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 8e230d02-4531-43b5-8d5f-e41a78e9b415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 fbe30c41-b47b-4335-a9c7-ee131d83d0bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 955d767f-76c8-4b36-9f18-cdcbf9f8f9dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0BF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE68B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9D37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h4EA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #164 ab8623e3-2c0f-4d31-b63e-2e94e1face4b)");
unit.assert_eq16(16'hADEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #164 ff1e8dad-4cd9-49a2-bf69-effea561351a)");
unit.assert_eq16(16'hE68B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #164 e953d1eb-e343-496b-93bd-0260f6264165)");
unit.assert_eq16(16'h9D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 850ff966-36cb-4ddd-9a39-72fd22ff2962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 92e24738-5e10-4f82-a4c4-6908864ab9b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 be17f75a-798b-4f4a-9bbc-20e86adaf43e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 4426dc6c-44db-4712-839e-55653dfb950a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 c90250b8-fa19-41ea-bd93-4f95961f8d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 1e6318dc-4ef5-42b9-9744-3748bf763801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 a7794956-489b-401b-9be8-b0d0ab7610bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2965;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5FB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h9925, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #165 e6631562-edd2-4e59-856a-502b81e76f66)");
unit.assert_eq16(16'h5FB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #165 be8eb298-7f1f-4712-82f0-df26c90f71e2)");
unit.assert_eq16(16'h08BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #165 304c31a8-8c4b-4941-a271-1a90186e0fbe)");
unit.assert_eq16(16'h3FBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 012f377f-e438-4664-839a-9caea1897324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 8916194f-377f-4a1f-ad63-c31aac6cc092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 14f123d7-10a4-4502-80a3-a8a0390379b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 06de6fd8-eabf-4aae-a5ca-a96341bf6b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 0e7bfb87-a5b9-45db-8ea3-cbc9ef2c78ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 4d79b517-c30a-4251-aa53-0871521a81e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 e342db87-bdce-4755-b013-1968ea00305a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF6F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h274F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h878B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'hCDC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #166 f10a545b-907e-4347-9cf7-c336646546a0)");
unit.assert_eq16(16'h274F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #166 222fb78c-bab0-43bc-ae8b-08ef2d9a3be6)");
unit.assert_eq16(16'h878B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #166 7641dc1b-b7fa-4d1b-aad0-09a52c0a5221)");
unit.assert_eq16(16'h45BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 314c20e7-e6e9-4315-8622-e35a07b4c258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 71b5335d-24e6-4143-af2d-0c2eb979c283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 769a0e1e-a94c-4f10-afa5-82c6a980135a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 30049018-cda0-48ec-98a0-f8a9f144e5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 1d07a664-87e8-4448-badf-e61f88642753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 3813f9a7-88fb-4574-838f-5d70c48e10df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 55784f4c-82a7-408c-aa80-41c50c369a2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4562;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h6533, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #167 b17e7979-6513-4f58-abcb-6ea11ecdfa25)");
unit.assert_eq16(16'h4562, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #167 3a5450f0-988f-4012-8935-34f6c9c76eb2)");
unit.assert_eq16(16'h2A13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #167 453c35af-dd62-44df-aa1f-52eb34409875)");
unit.assert_eq16(16'h9A2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 71c620b4-cc5b-41fe-aa6b-d22b4e69f5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 6468f9a9-a85d-4317-aeaa-8d154e1c6863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 56c1bc86-d24d-4854-b37a-d4816bf8b606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 407daa18-8187-42d4-8b8f-5ac11051fe65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 0430230c-7545-4e6a-becc-bf9fee707481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 8280679b-f85e-4a72-85f2-1f06ba7bfb4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 799e948c-1c33-4288-9a73-5140d19b5656)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h08C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h94D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1CE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h89E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #168 0b62aa76-afad-4fde-b009-1ad03010f084)");
unit.assert_eq16(16'h94D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #168 febc9ec1-ca0c-409b-a6a4-d8a37628a711)");
unit.assert_eq16(16'hCB21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #168 ec562df7-9cbe-4765-9582-d5da02f3f26c)");
unit.assert_eq16(16'h1CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 3e399998-540e-46c9-a60a-325963513c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 68d210b6-cf7e-4158-a084-034a263dbff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 7af665cb-abfa-4756-86a2-a249963c638d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 b40f30f3-03c3-4fdb-b711-fd49bad2670f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 71a15fca-1952-40ad-82a6-28e298bf11e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 540fd733-b9a6-4af1-aedc-a429cae38d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 d3d49b55-16b7-45c0-9eea-43f668409730)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h330D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6E28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h71C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #169 babfbb87-8b15-4a16-929f-e48c30121073)");
unit.assert_eq16(16'h330D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #169 0d9f3b69-4978-4ca9-82be-fbd9171e3923)");
unit.assert_eq16(16'h6E28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #169 ee3c2908-944a-4dc2-97ee-17f3b3fbb59f)");
unit.assert_eq16(16'h6C21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 69e18c0a-bb0f-4743-a43f-27c6f2fde816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 a98c60a5-e768-44bf-ba7f-4e24d29144d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 3aa8df26-299e-4d0b-8304-7bf25c7c2ab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 1a6f13cd-8020-49b7-87a4-eb9641af8d8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 ba85b51e-2948-44fd-a38c-35a177e9547e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 689ac557-005b-40cf-aaf9-d4643452f170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 a4efc9c8-ef74-4fb1-a6f1-f601e88bb748)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3403;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3371;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3060;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h3947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #170 86ed2bb4-2044-4459-a0d7-4c519ce8ff8e)");
unit.assert_eq16(16'h3403, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #170 e3380e43-6c87-43e8-99d0-414143c6aaeb)");
unit.assert_eq16(16'h3371, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #170 dda9951d-b355-4097-bc0b-5c4f6c7e9799)");
unit.assert_eq16(16'h3060, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 f025f1dc-67e4-4113-948a-c113d4db30e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 6c814dfd-818d-4228-b273-f257f577e7b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 e13687e1-db7f-4928-8d46-1480d99816ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 803872c7-92f1-4468-8ea4-6f80b9b94545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 e3929105-107a-4bce-a383-f0589fa80edf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 f4e7117d-0f8f-4835-8ae1-dbe1c438b9ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 da528263-18ba-4290-ac12-7f04923a5abf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5479;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD58C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1397;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE09C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h2B15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #171 cd44a559-d531-41fc-9504-462165e3178b)");
unit.assert_eq16(16'hD58C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #171 bf730a8a-2b4e-41fd-b004-7bce1f2d346e)");
unit.assert_eq16(16'h1397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #171 34611802-a74e-4549-95ee-eeab70d86d1a)");
unit.assert_eq16(16'hE09C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 4ca04da8-7682-40d0-8c83-96f275c0fc4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 e1818ee0-0ef6-463a-a8e5-fd91cb4079cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 4f43824c-5f58-4cbb-bbf5-43c16768b062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 6b0a620b-57a2-41e0-90b7-6271e76eedab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 e9d0d4b3-15e6-4d1a-b9ee-0acc12be63fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 3dc72964-913c-4ede-a032-d84160d6d430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 6087505e-4824-4548-809a-2f9df5104418)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h668F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE68A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB8F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'hBBFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #172 64c8d3db-4b6a-4c8c-b95f-f09f0dd06667)");
unit.assert_eq16(16'h668F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #172 5fd88ec9-6213-4bfc-9d8c-be810b53149b)");
unit.assert_eq16(16'hE68A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #172 8bfdd907-bb36-49ba-92df-ae5739653ccf)");
unit.assert_eq16(16'hB8F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 ae092b84-6854-4049-9981-eeddca2f6b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 bca5250b-7d98-4198-b0ab-b526a60aae41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 7ba5d734-8bcd-40c9-8436-8f1331a1af30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 3cc2415c-773a-4423-9089-7994d08b503f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 f36ef6c3-1f70-416b-b8e5-bc5a9d744153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 254ac849-8862-43c9-9930-9bd66cf40686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 0dec4741-e16a-4b88-a8e1-9c681c6c5455)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h671C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h97B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF32B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA5D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h99D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #173 8d2a6de7-c702-4a03-8705-9058ad709e33)");
unit.assert_eq16(16'h97B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #173 7d4077b6-4af7-41e7-8c4e-be0787b7af01)");
unit.assert_eq16(16'hF32B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #173 5d4050aa-08c0-4b6a-b418-326e6bd41008)");
unit.assert_eq16(16'hA5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 7bcc4e60-b079-4825-8ce4-11977bc6cb35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 5bfa788f-5be4-46ce-8a5f-5087aba7fa29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 47755eb0-dc17-4047-9a66-dcfdfbca6409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 c7d91ad2-44f1-49d5-895f-62447a673236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 70b0d943-3b70-468e-a3c7-f0fb5e3540d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 b09723a2-95a8-461d-a403-6856e7178741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 a3c92ded-61f1-4886-8970-2752435174b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2780;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h87CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'hCCE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #174 c3bda1f3-058d-415b-9d6c-098f34062574)");
unit.assert_eq16(16'h2780, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #174 183b1a14-defc-41de-9ab3-8c9c19593e03)");
unit.assert_eq16(16'h87CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #174 a34f42d3-2623-4623-8f02-4f5447aa5e5d)");
unit.assert_eq16(16'h1D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 1c774878-c846-40be-b608-40089f527c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 d06c87bc-024d-46bc-8316-bc1a53841253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 18e42b46-0383-40da-8960-6bc540449ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 a142afc0-9d42-4746-acb5-66a8b838edc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 c05bdb76-aaea-47db-aa1f-9b719f1c8519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 485c4573-cab8-4c1f-bcf0-b34d61fcb860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 9535de44-daec-4880-b6cf-5533915b2a30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h90FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2321;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'hBCCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #175 2c60cb46-46be-480f-8dad-f35d887326bc)");
unit.assert_eq16(16'h90FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #175 55494cf7-2198-41cf-a0f7-d6ee63d19fcf)");
unit.assert_eq16(16'h7CD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #175 3b8b8e2f-9ad8-4307-9e0c-2993158b6d1f)");
unit.assert_eq16(16'h2321, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 7f4204a4-8cb9-44f1-9f3c-3d67727a902d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 36381f7a-52df-4156-8386-a39242f2c6f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 3fe191e6-a735-4355-96e6-3dea09d80215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 04b94172-7b9f-4b94-b49a-8b48d51c4c34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 dfaefe2d-f121-4e6f-a77f-dd01c8830442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 b77f3b91-232c-4e69-9d9e-55393a07cda6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 0eede6e8-a8b1-4c0c-9612-d8cbc78f911a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF192;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4715;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB677;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2ADA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'hD529, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #176 4335f1f8-93d5-47b7-891d-c4fc6a1ff1be)");
unit.assert_eq16(16'h4715, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #176 2d20cc29-d4e2-4be2-abff-2ca369461cb9)");
unit.assert_eq16(16'hB677, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #176 541834c6-73a0-4c5a-9a9d-97fd5e0d0f38)");
unit.assert_eq16(16'h2ADA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 3206e849-b1ba-44ac-8b31-9287baf63a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 f33e4ff1-d772-4d6e-b7f7-6c5b4a074644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 0b13c7aa-7414-4712-8cc0-dd51000f0e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 0e872b6e-3fc8-4e01-bc49-f58bcc8d63cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 7f7b87a4-9b0f-46ff-914c-ab25593881e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 909d44d1-9ddc-474d-aaab-aff69335f788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 eb5a5b77-d684-4cf9-af67-ea09368ce3b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'hA8D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #177 0e477e68-aa69-455e-b9cf-610a51fb8bdd)");
unit.assert_eq16(16'h5F2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #177 62e7ad1b-e970-416d-ba8e-ac60d92b2aa3)");
unit.assert_eq16(16'hA778, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #177 0a205be6-b2dc-4f64-8f08-33e1f6a3fc6d)");
unit.assert_eq16(16'h9F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 9c37f546-5df5-4d98-ba35-adcb02c6d527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 b7fe8b70-03bf-405d-a9ff-10f86fb84bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 1d3f1cad-2fb4-4cdd-9c40-1d7bbb4f2cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 1c4f9238-f0c7-4cf5-9e9d-95f477b070d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 49332dfe-abdc-4446-8dfb-32510ae4b935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 a1113b1c-61e7-4bfe-b4a8-ade980dc577d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 355d38f7-5aa6-42a0-a259-3b5ecf10296a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0396;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h9067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #178 19f70be9-e3bd-4657-9476-f92529bed0a2)");
unit.assert_eq16(16'h0396, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #178 a82410dc-ce66-43e9-9b95-e96a219c4fb4)");
unit.assert_eq16(16'hBEBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #178 c29ded55-2df0-4905-9eb8-a709612d424e)");
unit.assert_eq16(16'h0F0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 201f2cbf-c0ac-4921-b739-947f21f5dab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 77255329-661d-41e8-a4f4-585eabf40486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 64e3a1a2-07ee-4217-8240-68adb8c2c198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 79e48a0c-1d7a-4d8a-abff-dbaa5303643a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 75e923bf-f262-4075-a48c-739f5a502f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 d036035e-c53a-40c9-a4e6-268a5be0d6b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 a6a918d6-e44c-4e64-a643-5637343a2e85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC318;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9828;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7413;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD748;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h1D1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #179 b41d2d38-92fe-4d90-ba16-79405741a6d3)");
unit.assert_eq16(16'h9828, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #179 aecff87c-f42a-4374-9754-084f11440c0d)");
unit.assert_eq16(16'h7413, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #179 05148d64-982a-44b8-9fd6-7b0021a9e565)");
unit.assert_eq16(16'hD748, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 6392e0cf-0702-4ff1-a5b2-a7fa6c409017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 b8591a65-8344-4447-86fa-074215328a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 79c66213-b152-4274-9516-8ba80366a46e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 ef6f23e1-789a-4a47-8b8f-85b0d92a01a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 0adf0284-4598-47b5-8ea9-5f17d3b597ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 decb66a8-211b-4f67-a760-79dfa4484944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 27da8517-e3b6-472c-b94e-142bd029934a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC219;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h959E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #180 6acbbae4-25d4-4af7-858a-1603818f247f)");
unit.assert_eq16(16'hE1C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #180 3c31e25a-5a3a-4c83-af66-ac33b260de3a)");
unit.assert_eq16(16'h7F2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #180 c11ccb07-970c-47a4-bfc7-103c2068b9cd)");
unit.assert_eq16(16'hE4D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 ca731674-7345-4b8f-a75f-a7151b9ccf18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 eacfddb2-7477-4343-a4bf-83136eab8537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 91b73147-46de-4c9f-b073-dbb631c01a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 7ba36af1-1d51-4545-91c2-1795937e47e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 cabd4017-4c55-4ce7-a033-f58864268490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 0283847f-93d0-4c18-a2a6-5524e03b36b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 3e9ace25-f3b0-44f3-a96e-1cf44410fd71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h119A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1AAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE84F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h8481, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #181 6d040365-164a-49e7-a30f-7336c982c54f)");
unit.assert_eq16(16'h4A8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #181 1c58f8fd-32a5-440e-9176-a1912ebd52c1)");
unit.assert_eq16(16'h1AAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #181 43200133-b8a1-4c89-867b-f4c2e70d0ec4)");
unit.assert_eq16(16'hE84F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 38f5adb9-6a00-4924-adb7-3fcb21a80f55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 bc7694ff-631c-490d-b01d-e100afbb574b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 c382ea28-60a3-4815-a5a7-19d3f6f421fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 07199f17-c20b-4e58-badf-19957db11b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 03178bb4-913b-4385-b251-fcf8ca948138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 4f50ee42-bca9-4466-829b-8f4aa47778de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 d5f06bdd-ef35-446f-b53b-7dc685bcc0d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h259E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #182 5d93ceae-384f-4b39-a471-1f5ff06a1a15)");
unit.assert_eq16(16'h5B65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #182 64a3d731-30cb-40b7-b713-20d55e1a2464)");
unit.assert_eq16(16'h4E65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #182 e10f6fd3-2a90-4970-b3a7-80fb41fff83f)");
unit.assert_eq16(16'hAFA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 adb4fc2c-cab2-49b5-aa5d-59f0343970e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 a35364fc-936b-4e58-8553-93b5b0859941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 92b2355c-39e2-49b9-a188-908b6ce737f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 01a077af-77fa-4375-ac85-e44ea4e89d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 24d92eba-30f1-462c-a33a-b0c680de937c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 30569df1-fb05-443e-93d3-f58912cc3b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 be91de58-e2dc-4692-b16b-ad1d1385ae07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA32F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA0CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h645B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'hAA54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #183 557065f5-f000-4bb8-b9a4-533fdc4a8551)");
unit.assert_eq16(16'hA0CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #183 5ef546b2-277a-4e3e-b3ed-ed61bd82e1c0)");
unit.assert_eq16(16'hB7B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #183 a983bc08-7d15-4760-9a86-47a538701c58)");
unit.assert_eq16(16'h645B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 f3396afb-3222-4879-a0f0-c7a599244815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 c86c7021-8911-44f9-9a9b-743e5a3966e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 d79c64b7-fb29-48fd-b351-8ce89fa1fd80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 f6dc9634-c32b-4987-b009-6ab8e2391d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 0b62e168-b9a9-46a9-b28a-9c8fce90188b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 10b902c8-d188-4c3e-8945-22c92bca08b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 1d464496-65de-4bc8-829b-1a6162344860)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h56B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC289;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCF8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'hAC6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #184 fcff6510-7f0f-4630-bff9-bc4422141124)");
unit.assert_eq16(16'hC289, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #184 0c808269-0df6-4f6a-afad-d9408ea9fd2e)");
unit.assert_eq16(16'h4E88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #184 6e390224-46a5-4a39-98e4-d3dc5f4f8296)");
unit.assert_eq16(16'hCF8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 b88414f7-522b-4577-940c-6bbd04b4aeb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 66c4cf7e-6373-4cba-841e-734d2e9284ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 5fdbe073-4afd-4c30-b0be-7bbd039a0f00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 4880861a-610f-4199-beea-a42e3b145bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 e94a469b-94c7-4033-9fb4-c9b703533520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 a1f68e23-7f44-46b4-8363-f36239114004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 4ba5be25-9a43-46d7-a911-258e28ff0fc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h764A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9405;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5190;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h650D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #185 b60f5a7d-8406-4f3f-b19b-8da69266bc32)");
unit.assert_eq16(16'h764A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #185 05018654-7e95-4e40-9a86-5d3e00cc2d78)");
unit.assert_eq16(16'h9405, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #185 d72a1044-6fa8-41df-bef7-ad82809fbc67)");
unit.assert_eq16(16'h5190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 b5d08f26-ce98-4643-84fb-64eab2475264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 8df6efda-7e83-420c-8ad6-fc189a6c892c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 7a1fda88-9572-4151-9da4-86c38448977f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 d4063e5c-bfa3-4bd1-a0db-ec215a8309c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 33a58337-553b-4a8a-80e7-2807478170c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 e29d2d5c-c5ab-40ba-a859-8be1083a4d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 2739a9d1-c569-4a6e-aa49-221aaea2229d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0567;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2960;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h1AFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #186 1c179641-45d9-4755-94ac-13c89428c684)");
unit.assert_eq16(16'h0567, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #186 81c324d3-5c8c-4afa-b34f-d90b36bc1b66)");
unit.assert_eq16(16'h2960, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #186 b7b1820c-23bf-438a-8450-3ff086de6437)");
unit.assert_eq16(16'h2621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 41d5c77f-f5fb-4c44-863e-c3c53f39fc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 9db11407-b9a1-4ec6-88df-9671c5ffc33c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 0791a3a0-dab2-41a3-8525-814143ad1a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 6a4ced90-8eaf-4020-b35f-31452e05d8de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 0f4e94fe-16be-47b3-9796-c6990221b260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 c9615373-dc7f-468f-a2cc-71583bf847b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 c8c44bb4-ca36-472f-9d90-cfaaa367dc55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h70A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA987;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h919B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'h6F8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #187 7c1e4a92-4611-419d-8e91-5f7f5216901c)");
unit.assert_eq16(16'hA987, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #187 4ebf1b89-52d2-4f20-9c29-b8213ea1422a)");
unit.assert_eq16(16'h919B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #187 db0b5684-e186-4b54-a875-88db2e8a5065)");
unit.assert_eq16(16'h3E3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 7dc4397e-c177-4f24-89d9-6f2d870a738b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 5e8c5af8-822d-438e-9565-bf95cc5944fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 71415f49-09c1-48d1-a4d7-a1ed214e87a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 0661144d-ef47-4b7c-a9ec-418f1a1c95d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 59f44460-a67c-4719-b328-92fe7d069c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 6d001d8d-89de-48ec-966e-fd90f524a6ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 06921b64-2fac-45a6-b3db-b8aacf1346ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2048;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF0A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'hFC56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #188 faad94ea-f298-46dd-a4d1-7e8b60ded0f8)");
unit.assert_eq16(16'h9D66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #188 2897fe07-86ed-4d08-9888-e6c3a57b8222)");
unit.assert_eq16(16'h2048, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #188 14112487-51a7-406a-bd29-56d608cef35a)");
unit.assert_eq16(16'hF0A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 363dba3f-7475-4238-9b11-0bc1739dd1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 46a7635e-e8b5-456e-bbb8-9d6f3e7d3159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 800d52e2-6402-430c-bd38-c77c96346695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 5ee9a931-3137-4df2-9b98-68853b1fc110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 41f659e8-ba9c-4c9b-8de9-639002fa53f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 f0e8a5ae-164b-4e5d-bfad-2432413977f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 362b78c8-0548-45ee-a0cb-ff9cd867e7fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2192;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCAD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8DC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h7A1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #189 3b777487-45d5-4650-bff3-3cb8a12804b0)");
unit.assert_eq16(16'hCAD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #189 1b76dad9-a366-44c0-8394-7a8680ca96b8)");
unit.assert_eq16(16'h8DC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #189 91a67cd3-306b-4e0d-8eea-6967ed520351)");
unit.assert_eq16(16'h3A0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 e794fcec-9a9b-42e1-ad1d-81926d391f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 522088e3-c406-4387-a17c-fc6d05c68bb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 cfe495b6-45ec-4fef-a045-1c8eed391e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 e0de6d91-b618-4ce1-9b4b-806c88a12b5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 3092effb-1a13-442f-b9ec-f83a7c578e3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 a764b6eb-d628-4bfd-9e9e-46fe4e9edda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 7bbd11a3-f670-4c79-93cd-02529b53a321)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDBFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5FC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h0A0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #190 623a4da5-289c-4657-b83c-a4777e580fc1)");
unit.assert_eq16(16'hDBFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #190 af2ab316-68ce-4347-9b7a-e426d39aa418)");
unit.assert_eq16(16'hBC8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #190 3df071c5-dd75-4125-acd5-fda5e742f934)");
unit.assert_eq16(16'h5FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 8519df2a-d797-4eae-90fd-cb76f0c5c0eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 72dacdbe-c03b-49e8-8834-6e377ba25860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 cb7cc23a-8e96-4566-adf2-736f0e43d1ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 aa6c3c18-232d-4e70-b14a-ab8b24f5453c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 6000df17-0087-4c58-be69-f3384f37c356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 39b8fefa-8b6d-4cb8-967c-18fd7ff43fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 092a1479-70c4-451f-9565-976118f17c25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB2BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE7A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB750;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8A45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'hAA2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #191 d1be4161-2503-481f-a36a-5833179b715d)");
unit.assert_eq16(16'hE7A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #191 c0a48a42-ac3f-423e-8622-0cdccc05a85f)");
unit.assert_eq16(16'hB750, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #191 f86ba696-97d0-41a3-b20c-fe553c694dc3)");
unit.assert_eq16(16'h8A45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 970f75a3-be29-452d-bf78-72bf301fe5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 5d447631-f882-4539-8072-4589eda0bdb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 877589b2-497a-40d9-9bd4-4bbb5eb01fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 0f7868fc-8136-4dae-88c4-9eb60b21c6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 d4123d3a-006c-43e1-9e86-0b4272ff4127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 dbdc815e-6320-4ffe-b083-0e5b359d1f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 c1941a64-5ba2-4150-9f2e-5f2accf90851)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE000;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD448;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'hBAFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #192 7ab6d7a0-1279-475c-99b5-65a17a6319d8)");
unit.assert_eq16(16'hE000, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #192 3bd15bcb-e8fc-494e-9e66-7461f5723f1c)");
unit.assert_eq16(16'hD448, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #192 bba496e7-0ebf-41a7-a3df-f30a9171fe17)");
unit.assert_eq16(16'h4BD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 d09bebd7-230a-411e-88a8-b9bcb4488331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 7b1c01d3-3258-4861-a281-73ef54881a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 0fb5f8b3-6342-48ac-b2b1-89112b65af13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 ebf310f3-5511-4902-962e-147c60f075ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 624932d0-49e3-43e0-8be8-81d4dc2a6f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 af7c9509-0169-4fbd-84b7-e63d8b7854b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 d8c12053-0e9f-4b8b-a4cd-ae7309ed4259)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6D88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF68A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC80C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h1796, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #193 fd58813b-2ad8-431c-acf7-59dcc40f02a5)");
unit.assert_eq16(16'hF68A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #193 ecb3f729-8f4b-47e2-8c3e-3fe049e83501)");
unit.assert_eq16(16'hC80C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #193 c10cfded-52b3-4412-8e67-e6df084c432c)");
unit.assert_eq16(16'h4E29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 b0f3e506-a8aa-4dd5-be45-0c062b5eb0f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 00baa933-6a55-448e-81d3-b5b014032576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 b0597baa-a4f9-4463-bb32-1abb027148b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 c9a82d43-6e41-4582-8fca-db2595d85166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 4ebafb79-96ae-4c66-9907-9500594254e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 adc857d6-255f-45e1-8977-f66d103b0c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 5f1876ce-b054-44dc-9160-ae41dfaf00c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0361;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC97E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE4CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD631;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h55C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #194 f992b596-8fe7-4c1d-8e5d-0dd7f3bee7b2)");
unit.assert_eq16(16'hC97E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #194 0e63908f-c00b-4e18-9cb6-3440d4cab2b9)");
unit.assert_eq16(16'hE4CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #194 7eea7fc4-3666-417c-b58d-e84465af26e0)");
unit.assert_eq16(16'hD631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 4bcf1914-1a80-4976-bac3-098f78add530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 2961f9d9-10d9-4d0c-a243-9259925b74e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 d0cecb91-0491-4037-9b6a-664ae921d493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 1f7fc295-9a83-4fed-b8aa-907c6555be98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 7d39dd35-4682-45d1-9f94-ff025b6ca863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 35b8bb47-1f16-4704-a079-3aaed7791406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 0cda82e0-b46f-4180-ac50-b1ba3c84711c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h65DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCFD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBE30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h171A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #195 989f2be1-2be8-422b-b2c4-93c474c0265a)");
unit.assert_eq16(16'h65DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #195 baf9172a-8ee4-4bb7-a35b-c3dc937a0e35)");
unit.assert_eq16(16'hCFD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #195 4e7ff7f4-9f91-4f78-b2cb-459334dafbc7)");
unit.assert_eq16(16'hBE30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 64646c2b-4745-4f4b-b8ff-49bcd538bd32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 ef4529ee-f770-4616-84ce-d12e83eecae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 c84e8f09-0911-473e-9802-8d032b9e7bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 94222277-ddd0-4edf-a228-c9d6c98a384d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 748b2b58-df29-4684-afe3-051af252b004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 f1d98426-98bf-48ba-8153-1644f7503cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 51377729-7f02-4f01-8318-602b07fc3c2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE582;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8148;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h208C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h0646, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #196 18d535ed-03c8-4278-ae7c-f00f883a0df1)");
unit.assert_eq16(16'h2D37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #196 76e3045b-2bde-4223-8ecc-ef5f883f6252)");
unit.assert_eq16(16'h8148, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #196 5368f6eb-4ba0-4ce0-b10c-fac9ace83266)");
unit.assert_eq16(16'h208C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 948a0c45-d0ec-4ecd-b997-44f85149c4b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 20bcedad-733f-4fb7-a989-bb478749863c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 03abf778-11ed-46b7-9f20-4171f9c825d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 76ada59c-f68f-48d6-8e4b-88fcae8210e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 cfe1f59a-3bca-4fe6-b4c6-b02c47ba680f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 e02e786b-97be-4280-a8f7-3a81beca547a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 54ab618e-4abf-4b1e-9ee4-5fb0dfa87e75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h13EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6508;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h609E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h04F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #197 f27063dd-6725-4942-82f0-22cbfd344f12)");
unit.assert_eq16(16'h6508, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #197 f71bfbd4-3b77-4a1e-a6ab-27c605c8a3f1)");
unit.assert_eq16(16'h609E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #197 08c37f94-f930-4809-bf03-788fcfe8e992)");
unit.assert_eq16(16'h0B8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 02ac05f0-e6a2-4661-b6a5-b11ff837e54e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 59a78b4b-166b-4c27-b22c-f189b3274f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 60a315f3-187a-4719-9005-aa9d014aa55f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 492d4f45-f912-481b-b3e5-5815a2dba7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 5b469bfd-78fa-4b31-bf78-5fb0cf6c2741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 ea0df96e-a9c3-4aef-8d53-efc3299e267b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 9bf17719-9d89-4ea2-9d74-8cb0ec3214de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h468A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEEB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h2920, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #198 8c20c187-f715-4119-9c64-ecdd4904f6e4)");
unit.assert_eq16(16'hEEB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #198 263c5323-07be-4169-bcd0-8e40b938a33c)");
unit.assert_eq16(16'h7F3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #198 c42b899f-caa8-4ac1-97cb-90f940ad9cc7)");
unit.assert_eq16(16'h0E99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 112c8b51-471f-4448-9ba5-b0f7cf0056c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 4dd47059-0460-4083-934b-ca326b7092a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 615e7771-b93f-4764-8f72-f0e8fc4ef80b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 0ee02a93-dc9a-4686-9dbe-55b51bc44782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 133fe608-91cf-4ea6-8ad0-4ac5e5a72e4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 453277d3-463a-404c-bf67-f647c0fef106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 6b9d0e8a-85b4-4e4e-a2fb-3cfc708405ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h97DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7DFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h0A02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #199 d3fa5a13-a3b6-4c5f-8acc-20e7fbdadf93)");
unit.assert_eq16(16'h7F04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #199 27484719-1697-4517-a80a-25424d8761cc)");
unit.assert_eq16(16'h7DFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #199 1e33ed6b-478b-4bd6-a0db-28c9c4428768)");
unit.assert_eq16(16'h28AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 ee739814-54e3-40d2-8b9c-a489585cd5c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 f80d2f1d-41c6-4295-80b9-7c0f276443f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 4a866a66-441f-464e-bfcc-84a7b819047c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 da877048-1692-4889-a6a7-8816d6a834ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 8f4fdbbd-51e7-4629-a8f5-b601d2e8f11f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 814cbb85-b161-4c0d-bf05-cb0ea95a1a27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 9c9379da-c0ef-4497-a0f4-489be997fcea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5927;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h56CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'hA55C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #200 7b39dfd7-7597-4cf0-9dd0-cb498bf9ec5c)");
unit.assert_eq16(16'hADCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #200 d1cb01d6-e0a2-4b0f-81a0-467091dd3ab0)");
unit.assert_eq16(16'h6B66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #200 c96a1cc4-5e3b-44c2-b62d-47ed494c006d)");
unit.assert_eq16(16'h56CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 488fd548-4c40-492e-a6ba-d1ea50cdaf76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 1d7ecde4-56ef-4ece-a52e-80ff98724199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 faccce70-7940-4c43-bf39-06d5f3ae84b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 f0eb8154-0825-48a8-b2e7-b4f480b5b2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 89590a07-73c9-4c91-937e-793de737d939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 8165d905-8132-4233-b0f1-88b8ea6f8a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 dc75b025-25f7-4b85-9b8b-1358076f33e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1890;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB6A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h7542, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #201 6e9fc38e-cf16-4b32-9309-632a692ddb00)");
unit.assert_eq16(16'h0D98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #201 714771be-24af-42d6-bc32-1d3144f01eca)");
unit.assert_eq16(16'hF796, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #201 2bf0c0a1-e59c-4587-967d-be66ed556c47)");
unit.assert_eq16(16'hB6A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 8e4af901-2c54-405e-9757-8d8ca5805605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 08ef18fd-0a46-4647-be42-298e2607afc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 0e63009d-d217-4bf1-84fa-64189c3c1e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 ee6037f5-6258-4a83-b830-8b9ac8a037f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 fbefbfd9-e5d9-4d46-835c-c75b1454bc54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 b6a90dc7-f4e8-4551-8b50-e506acd26bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 0cdeae96-2056-461d-8f3a-c66e18b45c8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB853;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'hF7AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #202 153af0c2-eaab-44db-bfb6-efc844a25509)");
unit.assert_eq16(16'h5BFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #202 4cc18312-6abb-4a95-9ad0-aa275f9d28b5)");
unit.assert_eq16(16'h81BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #202 fd12d276-0cb1-49ff-b31d-c14d0d6aebeb)");
unit.assert_eq16(16'hB853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 90775063-2c1d-4881-9f7a-396e699857fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 c3cd66aa-2c40-4522-8915-20beac47733e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 f07e35c8-381f-4c07-9534-7a8ca34da1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 3bbf50b0-aba6-42bd-9aaf-f9f4f494a6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 dfc2d29a-b97e-45a7-89d1-675921100ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 55346110-f647-4133-bc11-46015bd8de01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 9db65207-3c5e-4997-85f2-a9e0e3faa5f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD1EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h068A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1FB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h23C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #203 41966e63-c07a-4c50-a615-3757f7d1451e)");
unit.assert_eq16(16'h2D98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #203 87970662-2dc2-4a97-a84e-a18d5d7e0f63)");
unit.assert_eq16(16'h068A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #203 1c8c0731-bbfa-4106-acf1-5706a1f940ba)");
unit.assert_eq16(16'h1FB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 7f5c5045-8cf7-4f61-824f-863dc83f10dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 a26e6802-8bdb-49cb-ad48-3c0836e71daa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 fdcb6ae9-ba27-4b54-a47c-d447cb46f7d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 ed312dd5-f404-4dba-9185-1bc5ca28daae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 d166d8f5-31f4-46de-8920-8c8fc5b3969a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 5dd005dd-2991-4680-9938-4cdc1c8d5195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 07d9321f-955a-45bb-9771-36f8157657cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h37EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h421B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h01F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #204 260b3d9c-f0d8-4972-902a-1674a7bdb165)");
unit.assert_eq16(16'h421B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #204 7698fdc5-1145-4ca3-aac9-1e2f88f4b803)");
unit.assert_eq16(16'h8BA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #204 ac35281d-09ae-40fe-bed3-53a4cf5bf2fe)");
unit.assert_eq16(16'hFF10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 1ab1d9d5-9d35-4eaa-bdd4-e7f611bc9b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 34cb340f-a80f-4b62-9d12-54517f317927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 965154aa-69d2-4fa1-b024-5b2d2dea026a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 0df979d6-6cf9-46a8-8870-fe96b3ec3d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 42894b6e-d43b-4538-814f-e7dae33468c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 d1acc85f-21d6-4cec-94c0-f125aac24ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 5a14db32-efc5-4c30-9330-0098773ae30a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8259;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB319;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9676;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h8EB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #205 897685a4-2643-4207-b31b-5ac121aee56c)");
unit.assert_eq16(16'hB319, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #205 a6cf0e1b-84b4-4231-999c-34ab259470b6)");
unit.assert_eq16(16'hAC6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #205 88ff84c9-5e98-41ba-885b-d8e82468d550)");
unit.assert_eq16(16'h9676, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 fc49c6cd-e264-474d-a183-58e918a706b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 2ef28d12-8046-4ba0-b20b-229d394ba4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 8bc486c8-f309-4b8b-a169-3656df533522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 b3fb15f4-fd2b-46ca-898e-7e97f1efbf62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 fe1f6b03-6e91-4bb9-9c84-cfa3d27f882f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 82f5b3d0-402c-4e79-8ead-68764b7bfdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 ee5b865b-a1f0-48ab-b2ab-51a97ca1d290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2405;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'hD068, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #206 a6f3bd1a-d729-4e4f-9491-503782d94c4d)");
unit.assert_eq16(16'h15FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #206 6881108b-1df9-4fe5-8757-ece0f7ed905e)");
unit.assert_eq16(16'h2405, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #206 eb730854-a97a-4330-84e1-cca5c8ead21c)");
unit.assert_eq16(16'h2F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 238c832c-a13c-400b-88e4-dd65a932cb27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 3fc33edd-41e5-422d-a353-afa99240fbbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 ec89a78e-d1af-486c-8eb2-a200620eba36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 88f70a69-80a5-41f6-a818-d180f765cd78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 3c0c5493-1353-471b-a27e-641b4bc5ff96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 66f8f8a6-242c-48e0-bbff-5f8048a6d0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 4a3826d9-f7a1-4568-b6b6-b3e1fcdd204f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE837;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'hF2DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #207 0a5d8d5c-6270-4654-ba9c-38987c035f9c)");
unit.assert_eq16(16'hBDB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #207 17825d1b-1d45-4367-8325-b7bddeb48b49)");
unit.assert_eq16(16'hE837, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #207 7563da93-ff99-492e-9575-232ce15c4c2e)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 21b3f807-0036-45b1-bc31-a0f3b654b620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 258cbdb4-802a-47e7-8a0a-ed0c01ed8626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 d5ac3d40-4b02-402a-bc72-db636bc40984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 2a988684-57ad-4670-b713-e1ce3f35c809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 5923397f-0e7b-43ce-a82a-f8e78dfa16d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 8a5ce881-f736-43ac-afc4-649072d1417e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 30015a87-f594-4cb4-87e9-975dd2a2da35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC962;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h65BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB6C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h9B1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #208 ad9163ad-6082-4cc1-a4af-da4e6273dfb3)");
unit.assert_eq16(16'h65BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #208 89ef4b24-940c-4013-bf3b-64deaa81bc19)");
unit.assert_eq16(16'hB6C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #208 0ed3036e-7243-4ed2-9f8c-78c982dd7422)");
unit.assert_eq16(16'h4B9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 1c785795-636b-4b95-a635-01d1554b347a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 b93f28aa-0a5d-4efc-b63e-800434ea61a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 d0e9c2c4-4baf-4dcb-8c53-648852b68902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 7e0bcb22-ff70-4578-b9a7-06da58fdaae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 0a72f9e0-7274-4492-9365-5d99f218ddc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 369eb1ab-7b19-4b9b-bd4f-c2cfb0ae6827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 0cc3f12a-4c90-4d51-8a2b-208ba2c370db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9D36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD0A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDED1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h96E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #209 496fde8c-9d3f-4e30-a1b2-4c5b7c384269)");
unit.assert_eq16(16'hD0A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #209 bc974204-dc91-4a6c-ab3b-40f55f636d3f)");
unit.assert_eq16(16'h81A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #209 8711f2fd-886e-4c8e-a9d0-a504e90bfcc5)");
unit.assert_eq16(16'hDED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 a4a8a23e-c6e6-4337-b212-069a859e5f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 ee96eb50-a539-4443-bf43-fbfed0df4437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 f4aa2e7d-cf13-428d-ac7f-9b5c5fd5956f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 1e91f9ae-04fb-47fe-a5ed-bb74d66a8791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 528df419-e0a3-4585-aa9d-72fca1dc586c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 78b13355-6345-42f1-bef0-ca1cbc1dbe44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 2391d350-2f1e-4119-9ab5-0bbeb5b12dd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h132F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE1B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'hF235, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #210 e4c3c67d-66c2-4d6b-90b2-538f709d594b)");
unit.assert_eq16(16'hEA3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #210 57b33d72-73e3-44bd-98c7-121d5c0c6587)");
unit.assert_eq16(16'hE1B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #210 e6a1ee5b-db23-4a4b-a03f-8349a9c6d725)");
unit.assert_eq16(16'h4B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 5db4a545-cc7c-491e-8964-862b9e6d22c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 20b708fb-a501-45d4-9a02-e8bcb4435eb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 0a50bdb5-65dd-43ab-8f8e-cf9f47e03c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 8312bb66-f651-456f-ba13-e9ef965f10bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 7c090245-7ac6-467a-9234-d97fc1acd158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 3fec4463-ba95-465c-ad03-f2f505625e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 82d95cb9-9fe9-469f-883d-19297eca5872)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7545;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1974;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'h3E94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #211 b1306267-d0f1-4362-86dc-d06df0932ad4)");
unit.assert_eq16(16'h4A53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #211 0be02bd8-bdb5-4314-a98e-befbdea86028)");
unit.assert_eq16(16'hA929, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #211 c332d77b-8fec-4f13-823c-9782db0339f2)");
unit.assert_eq16(16'h1974, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 59c514d9-0eba-4cba-81c5-f55b452180a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 f9076e36-fd21-4ddf-9016-9262ef0bc14b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 b831577c-5ecc-4505-a321-eb17694b1833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 65783bbd-2d21-4ca9-834f-bd4108f0ece3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 2f273989-4db6-44db-b34e-b7aa3b7d2032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 932b566a-a6d4-4d6f-84bc-ad6596294a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 bb9f1e1e-0df6-4024-a674-04daf73f8b7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h970B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC964;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'hBD35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #212 4df1e597-2402-4c70-ad23-6ef9abbce7b8)");
unit.assert_eq16(16'hBC15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #212 7ef441ee-212c-4635-98ca-8dbe3702d8cf)");
unit.assert_eq16(16'hC964, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #212 bb1ddea4-477f-4598-b0e2-063dfc230edd)");
unit.assert_eq16(16'h15BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 659002ff-9b00-43c2-9aac-16a4f9854673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 ac3ddba8-ad6e-4355-9b55-d5e68e2a027b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 8b6dffab-7398-4110-a7a0-68fd66a42825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 a5f1ec13-0679-46e3-b0e5-96f7b978b1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 affd510e-d888-4a3b-9c5a-00df1e0d9d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 63892350-8e30-4263-94e7-01c99fb83801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 4605dfa0-e0ca-44be-b28b-35b74ef97a89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFDAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h27A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4331;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'hD05D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #213 3e4705b2-01c3-4e94-8a30-c5840b61bb87)");
unit.assert_eq16(16'hFDAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #213 28a49193-0337-45f3-afbc-4f6cfbc0180d)");
unit.assert_eq16(16'h27A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #213 684e717b-89b7-4500-be80-094277299045)");
unit.assert_eq16(16'h4331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 21136db4-4ec7-4b8b-b796-15f2407e64a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 f285d309-1960-4869-a76f-692af55855a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 3edea3fe-6a00-4d42-94a2-1a7c8f9a2c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 cbc77985-2f6f-4ecd-b704-af5283ceb171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 b206cbde-95e0-403e-a12f-28b7f5a8f224)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 658c79c3-1484-40cf-9817-d06a17ce2cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 96f41398-d504-4835-9278-b5f8dd8b4cd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD06A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'hF03A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #214 9ef21e29-7d88-486d-9121-70c8d33646f9)");
unit.assert_eq16(16'hD06A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #214 0da42273-1543-4a64-b2ef-e9d2f7be8a4f)");
unit.assert_eq16(16'h3A83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #214 f5b1ec0c-09b3-4809-b768-24991c4d1f15)");
unit.assert_eq16(16'hB5CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 f21c7465-952e-4567-9896-41f63d48a154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 9f94d0c1-f4ae-456e-a294-e1be76203a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 4a84396c-e523-42f7-ba72-daf020e36e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 cfdee334-e31b-4975-bec5-5b108e3a012a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 610a9c47-6373-4633-95df-35653e9eb2c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 4c34b1c0-8a88-49aa-9121-48fc984621fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 7905feb3-85b7-4164-9ee4-641ca94245f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC23D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF873;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6794;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h367F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'hEC48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #215 a95396de-7121-4830-8009-57c7d97a56d2)");
unit.assert_eq16(16'hF873, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #215 6e0cf809-ca89-474c-a8bf-4009c759e0e5)");
unit.assert_eq16(16'h6794, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #215 968d779b-929a-43aa-8b05-635c0fa8588c)");
unit.assert_eq16(16'h367F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 71fbfe26-d108-4801-bba1-37fdd57f3dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 50611091-faa9-4533-9bb9-1acda120ec75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 045705fe-d169-4491-96d3-e2851ed4e903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 0d2c49e6-618a-4cb5-beb6-10098b4f9f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 3f2b8598-4250-4cd6-a39c-537d4ab6779e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 24172c45-a4f0-45b5-9200-25a858c82e9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 8a24fc08-74db-4993-890a-d6641a1636e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC56E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD20D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'hDC28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #216 fafd105b-a69c-4225-8f3d-d6d949ecc002)");
unit.assert_eq16(16'hEBE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #216 e5cd45ea-e2db-4de5-9fb3-790a1500c5e9)");
unit.assert_eq16(16'hD336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #216 805232ee-21cc-41b8-b07d-b5f221d1836c)");
unit.assert_eq16(16'hD20D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 b2dfdec0-934d-48bc-9b3b-adba381c3ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 d13798c1-aa9f-4543-ab26-31ccecac1c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 5728e4ca-7ea9-4b53-b4e3-23a93f5e92fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 6b9deed1-dd7c-41af-835a-98ccd9ead9b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 1b86b7a9-42be-4b47-ad87-a6b14e85c5d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 fef33544-8fda-4a1c-b8c4-1348a1fdd714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 15e48657-1283-4e9b-9e69-66e95f322c59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h924C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF692;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'hB504, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #217 e45569ad-bd8a-49d5-b793-b793bb72a6e0)");
unit.assert_eq16(16'h924C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #217 38a39a70-903a-4112-bc69-0e973e299f55)");
unit.assert_eq16(16'hF692, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #217 af87f8d5-a429-4c96-8a05-27262f5a4ff2)");
unit.assert_eq16(16'hA8AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 b560b677-54a9-4cc1-9663-f0f6884069fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 8f8b435e-9464-4ba0-a8eb-958c5a83b9c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 f11a38e2-d75a-4bba-8ff8-88803cd829d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 d3292eb3-0a5d-4674-9805-f0a066133a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 bdb01e89-d191-46b5-abe1-cf7b95ad1f29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 5770b464-c776-40db-a0fa-1b3a75616edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 97b367c5-3ed9-4a1d-9c57-be4b3e9181d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC160;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE776;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7739;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h993F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #218 86deecf1-c68b-487a-afee-513f2038391d)");
unit.assert_eq16(16'hC160, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #218 31b82799-48e9-4402-947f-95f3950a49bb)");
unit.assert_eq16(16'hE776, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #218 a484c205-bf3e-4a60-b1f3-c4208585a3c1)");
unit.assert_eq16(16'h7739, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 da758084-8e35-47eb-bb0c-dfaa616b6954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 072b944b-ccdf-4672-acaf-b42b4703559e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 c740a90c-ea2e-48ff-8904-5094271e96a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 310a7aaf-1e1b-4c24-9094-72f663a2aa56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 3e1d59bd-03e7-4baa-86f8-ad1800669dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 1483e880-9604-4b03-a559-4f79238864df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 f0f6d2d1-24b7-4a50-93b8-694f07a6109f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h026F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h2A78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #219 10a93f87-975a-4d59-a399-9fd5352e9d42)");
unit.assert_eq16(16'h69F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #219 ce23dd9d-7dfd-4fa1-b0aa-829c8af82656)");
unit.assert_eq16(16'h7A8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #219 c4943f5c-84c6-45b3-a2c5-900966a3c0c3)");
unit.assert_eq16(16'hFE3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 50d5ac40-b1da-4b5f-b12e-c4948169b530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 f7b38565-3571-4199-aade-db9d7fef0db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 01821512-60cc-4303-9c92-feecf391934a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 861f67f0-2531-4449-be9d-ccd6c4e84760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 be861f5e-21c7-48a7-845a-773d3655de55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 d1aab475-6415-4bbd-a376-59c77ba814c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 179db0c6-1f1b-4d33-9af7-235bee330aa0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h195A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h480E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h48FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'hDA8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #220 0f6ad4ac-e2d3-4227-b51c-572777224a97)");
unit.assert_eq16(16'h480E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #220 93eddccf-ebbd-40bf-833a-3be722a7b44f)");
unit.assert_eq16(16'h48FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #220 66d87a49-78f4-45f2-a8c1-aa0d1a840067)");
unit.assert_eq16(16'h9DD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 53c09b59-262d-4f98-aad4-1444a91209e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 5ba83b58-3f6c-4b4c-b5e7-4e081561a138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 2490f52d-d3e8-43d2-a7f4-ee6055a744f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 0ea3534d-9601-464f-8977-1bf6c0172cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 3c218b16-c34d-4f63-83e9-2fb8963f9926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 a4253f47-d030-4784-983a-accdb0fe6d50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 6db14c64-5809-4c6e-9586-1e9522315891)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6554;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h4F60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #221 ab520f1a-090d-48d3-8d44-150e80c2e7bd)");
unit.assert_eq16(16'h6554, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #221 77969a71-ba5a-46bb-9382-f9d7a6a511cc)");
unit.assert_eq16(16'hFFC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #221 01653b03-aa0d-4967-9954-7f45d3694771)");
unit.assert_eq16(16'h85FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 99c117ec-5218-4886-8dda-3e8d158bdb03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 d14d4edc-b4af-4f2f-b0b3-290db9d371e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 848bc8b6-59b4-4f95-8b40-c08947c2be7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 1f3a6b48-e419-4eb3-b903-3e56fd5df21d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 955bee6b-0106-4a46-98b9-cf5d4f3e92d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 52df0cbd-93db-4bf2-8056-351854157d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 b2dbf55a-db2f-4391-a700-4805f05368dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h787B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h910D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE27A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC380;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'hC094, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #222 33dc9bd4-ccae-4cad-b7cc-77e20e6f24c0)");
unit.assert_eq16(16'h910D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #222 c7891334-2546-4728-bb31-a5c662890f9c)");
unit.assert_eq16(16'hE27A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #222 ff4517b8-6bc3-4289-bc2c-e0c22f99bf09)");
unit.assert_eq16(16'hC380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 efd11f74-bfdd-472b-8a0c-aa8e3151a476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 8c208d5c-6007-4215-8044-1ea8d5b806a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 891048d4-f413-4f1b-a897-c8e712c8b389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 a390758b-5201-4aeb-8907-d0c751f642ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 cd15d5f4-ad91-489b-a4a2-81b3acf9f135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 e2140fe1-3922-48f9-83a7-b9006f6980dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 f8e65bef-a2d7-41c8-b3cb-c30e7be73604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h621A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'hEDB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #223 54beef57-5bf3-4228-bfe9-0188b372c62e)");
unit.assert_eq16(16'h9DD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #223 922ad5e4-d582-411d-9595-0ee14072e7c8)");
unit.assert_eq16(16'h9F1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #223 a1deea92-901e-4951-9a5e-e68c616e2c9e)");
unit.assert_eq16(16'h621A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 d6a378a8-f320-4845-968a-2e430a28c56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 729303bb-e145-4619-ae8a-2a75c3854d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 bcc05611-b90f-403b-8bb5-2ea28345147e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 56e2ea4a-78ec-412c-9ff2-1ca60bdc0b8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 91581df9-0f76-4263-bbfc-c89f143c8cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 5836f475-f345-4cb8-bcaf-ee8ab32ca773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 21577888-cfa2-4fb1-b1a3-46b72ebf00d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2F36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB7D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h3F7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #224 1cbd4d36-5693-45c7-ab92-963808511549)");
unit.assert_eq16(16'h2F36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #224 63549857-b435-4a73-98cd-9677241984f8)");
unit.assert_eq16(16'h0D26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #224 1da3232b-1434-4efa-8c34-1e64c12c9a0d)");
unit.assert_eq16(16'hB7D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 37922957-1d06-49b8-885a-22e87e7da2a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 1ae8436e-e743-45d8-885d-62319028a434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 b7adae15-f046-4ac1-9899-9e68d3401a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 a0e3f146-b019-4509-9538-1ba71e7f3c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 7fc3f879-20ed-4c69-8e20-26095f835f6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 324ea00a-75f8-419d-88b3-2c2aa1b3a4fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 c57a3ff3-0fc2-4861-a194-5158ecf0ef49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9096;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h422F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'hDC61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #225 db34ce6f-37d7-47bb-b529-8471177d141f)");
unit.assert_eq16(16'h9096, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #225 ea235892-0f12-4915-99b1-6a9629a9b87a)");
unit.assert_eq16(16'h0FB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #225 78a77689-5d8d-4aec-9e4b-e3a887832dc6)");
unit.assert_eq16(16'h422F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 6a1d5308-48d8-472e-a1eb-e3123eaa30a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 a6845237-ca32-4bc4-a689-387785d3a7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 5c6cfd35-525c-4bf2-bc3a-7b199dbe12b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 074ab654-3378-4f4f-92ed-3ab1755ba962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 31bf337f-53c6-4be2-9afa-fe0d30566791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 36aaeb52-c21c-4897-8741-765858ec48eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 1b56eff8-b9aa-43a4-9ab3-dc5339cd9d08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h850F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h741D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #226 e24193a9-8c5f-4377-a762-c1cedc8e8b40)");
unit.assert_eq16(16'h5D05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #226 41047650-0a0c-4257-8d24-9a03f0faf044)");
unit.assert_eq16(16'hB2D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #226 352060e3-e8f9-431c-8c53-b50fad222652)");
unit.assert_eq16(16'h42F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 c26579e6-c647-46d6-ada0-0d5aba2dbdf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 4e26c181-9956-4eea-b20d-cc17156b0c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 f7d443ce-a944-416d-bdb6-120dac0f6b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 89559dbc-4bf8-4c9d-9ae1-f4a532349fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 c749a39f-73b4-4a6c-804d-891515277e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 454e2b24-aef1-45cb-94ab-3c3771198b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 3b0c562e-b94b-4dbd-bce5-05df03ca13d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD17E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h250C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h2863, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #227 81ddf295-dbe0-424d-af7e-b6f35ed70fa2)");
unit.assert_eq16(16'hD17E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #227 94e08cdf-83c2-4379-a767-b1c0cdaba121)");
unit.assert_eq16(16'h250C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #227 ec8b1085-92fc-4ce5-9c25-aad17837c7f6)");
unit.assert_eq16(16'h49DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 f7190c54-771f-4bf4-aad1-6f164315c39c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 3867e2d5-e73d-49e8-9f84-f4f678021244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 5336b3ac-ed07-4f55-902e-0b144f4e9e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 dc09460e-e3b2-4798-9f40-06a20622c660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 5d798eef-dec7-49d4-83fb-415411c302e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 9841cd58-cc87-46cd-94d9-b38a336d75dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 a42d0c4a-364a-44d9-ac30-dc0be7f6ceb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA618;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB250;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h41E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'hF457, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #228 15187b23-2ff9-4c1f-92c0-2da142c32af7)");
unit.assert_eq16(16'hA618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #228 34272ea6-abdd-4b7b-ac52-01603520af26)");
unit.assert_eq16(16'hB250, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #228 95d3bf1c-47d9-4108-93fa-2ca690f9d81c)");
unit.assert_eq16(16'h41E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 f7abcc9b-c2bb-4d47-a42a-779a5a8c3460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 e3734e77-adfe-406c-b956-021595377b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 1a51ee5a-d00a-4915-a73e-58b44e4465a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 427b50e9-fa02-461c-821f-17a5a78062ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 415b8060-e45a-4df8-b538-1b55775cd7b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 195a3950-e826-46f1-9c59-1132cf46f431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 39eaa5c3-32ee-401b-ac1e-e03d912f564d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBAFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h89B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD6EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD633;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'hB4EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #229 3ca52944-f302-4209-a10c-a3857feb9a13)");
unit.assert_eq16(16'h89B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #229 0122a5fb-5751-41be-ba48-64c727b712b9)");
unit.assert_eq16(16'hD6EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #229 fb841734-a854-4aac-8a1d-147dffbfcc18)");
unit.assert_eq16(16'hD633, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 d66ffefd-a51f-4c59-9bc7-dcd897595d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 f181a744-2bf6-42ed-9a5c-0c75ebb74825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 405e8469-0857-4833-afaa-7f83a5941e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 ab671903-2bc2-45c7-9cdf-18155175b632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 79f14fb7-ec52-4bd9-8790-25587fc0c48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 59196ad1-3ac6-471a-9ebc-f74def074243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 d7d4dfbd-b82d-430a-b93c-3747a0cf11e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h824F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8BCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF157;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h0470, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #230 f70fec96-315c-4041-8cbb-af8750aa78da)");
unit.assert_eq16(16'h8BCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #230 7bebbf90-89aa-44f2-9bdb-044a5f3ad92e)");
unit.assert_eq16(16'hF157, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #230 4030de79-2eb6-4e06-b457-6f6eefb120d9)");
unit.assert_eq16(16'h5C53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 09f581ce-1a64-4910-b2bb-fcb27e12fc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 b62ae024-1777-4891-9ac8-6ffded169cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 2a481030-e3e4-4828-99a3-6e041b53ba61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 921aaac0-7537-4878-88c4-d27224d4d7b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 ab4ca17d-bce8-4153-995b-0a5f02511897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 d49ab77f-4c99-418e-96c7-57c627c0253b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 49204b89-852c-4e56-babb-22c7b15fa0d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD76A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h754B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #231 6dcad673-8df5-4ed8-bfe6-99b62fbc8dab)");
unit.assert_eq16(16'hACED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #231 e55456e8-a397-4b42-86f9-2927b77c8046)");
unit.assert_eq16(16'h2528, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #231 90ca0000-26f5-4312-a27b-a77c02467c58)");
unit.assert_eq16(16'hD76A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 ee6514ec-5921-4dc6-b2cd-595b0da0fdc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 474a0fe0-d036-44d8-b1d7-ab0a780f8cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 3283330d-6a0b-4f62-8316-742e2d457525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 3a102e45-9b05-40e0-9f71-107bec1745d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 b1af0552-0fe8-48ee-ac74-20afca28d197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 1fd42051-ad0d-4c07-a8a8-7477f1f66d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 53029ac4-33d4-4701-b6bf-d6a661981d57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'hF5B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #232 60541662-8860-412d-b60d-debded7078d8)");
unit.assert_eq16(16'hEB61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #232 5960a043-c5df-4cbc-a922-be4ab7765be6)");
unit.assert_eq16(16'hBF1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #232 e7413d28-6b6e-49a6-bf2c-d34cc0b93521)");
unit.assert_eq16(16'hBD47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 5d62d4cc-0713-4572-b572-13e275cb5666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 a0ce9c1a-bf93-4c88-8349-3e4483b2b7f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 18bf5249-de62-478a-a7aa-de66074ad012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 f9115ff7-30db-4ba6-ae85-dcc3627e2a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 d47dc83c-c854-4d73-97ba-2be74c2cfffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 ec8886fa-8ae6-44ab-a044-e4cb182ba468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 621d9fa7-65f3-46c4-a67d-3147b64fd6f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCED8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF2CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8967;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h5497, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #233 9a5e0302-5721-4243-aecc-adda8b88b526)");
unit.assert_eq16(16'hF2CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #233 68451e1e-ac33-4f43-8afa-25d4aee5a484)");
unit.assert_eq16(16'h8967, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #233 3226a192-3b9f-47a1-9676-ba163cb1b061)");
unit.assert_eq16(16'h7A98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 2cc02a0a-4cc3-4fa2-9c8f-fd4f9912020c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 81366428-9770-431e-9e3c-2b619e6aceca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 163ee198-2b4d-4024-98f3-d4c4890585d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 717f36a3-2548-4138-905b-dc88b5117122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 fd40e01c-73fa-4f62-a213-e659e4d201ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 70dd9ec7-58d2-4d46-9839-ff5291c3536c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 6dda28eb-f8da-43f6-9db4-2f6de552e1f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBEAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h48D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2775;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'hF3A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #234 dd9f8c84-6e2d-4fe8-b7b3-7ea97c8eb5c6)");
unit.assert_eq16(16'h48D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #234 8baf8270-f0d9-41cf-a257-5b3fd6f9eac4)");
unit.assert_eq16(16'h1C6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #234 7b031a6c-8e18-49d5-af99-1b06941239b3)");
unit.assert_eq16(16'h2775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 3e5f87c3-22c7-493b-a9a6-bfedc26b54fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 aa6443ab-a8e6-431c-8a3e-9b7547a536b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 bc541bb2-06c1-4057-a17a-c2df29ce1aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 1811ad69-b6e1-403c-9422-4bbaab462493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 cd00c8f1-3f61-4cf7-8715-b526e1776cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 6e65ab43-d059-45ad-941f-e6fed005b14e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 18feb321-e00a-4ec6-b4ee-749dd55a5442)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF44B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC884;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB7BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h40A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #235 2185321d-09da-470d-8694-b8b50bba5212)");
unit.assert_eq16(16'hC884, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #235 ea4ebdaf-cf2e-4cc1-9e59-a2b91baca948)");
unit.assert_eq16(16'hCA5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #235 24811f17-07e6-4ef3-b755-e7ec12d2f39e)");
unit.assert_eq16(16'hB7BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 f32fc28c-b9a4-4927-aa96-c3ee76358a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 f8637f3c-5e5e-48f7-8923-143f4b615d30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 7f41da11-2dcb-45b3-a857-504eaba2d9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 6b363ce6-04d0-4b8f-bf2a-254e85d4b7cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 3bfd5514-fa8d-48b6-a236-a717de21c41c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 e94e2af7-4da3-4f68-b3ec-22ab829790f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 0fa927c6-bc39-43f4-b12d-a68662ed0ae1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h338B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1043;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8FC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h53BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #236 7ee6a254-ee05-4604-b806-fb572c291831)");
unit.assert_eq16(16'h1043, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #236 42801b2b-f12b-4be0-9ad9-6a0dafadee36)");
unit.assert_eq16(16'hBD8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #236 c396b78f-8c81-4360-a3eb-bd574788e890)");
unit.assert_eq16(16'h8FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 5bb28582-40e7-4da2-9092-0642af206635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 51ac2149-a724-44b2-86c6-71b31373f601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 c049304e-d79e-4b70-89bf-ebd0f771748d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 4a52f32e-0015-4e20-ae48-c49b3ab4cc68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 b542ca0c-863c-49b7-9b3b-b4a8691562a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 07fc0748-2ce8-423c-8645-63134f772315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 4db2e19e-83bc-42ff-9ac2-fe02d2c7786d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h973E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA819;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'hFA42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #237 be727ccf-c94e-49ca-ac68-9ba179d104e0)");
unit.assert_eq16(16'hA819, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #237 12121b54-c8bf-4dab-8b5c-d7e8d8ec3d4c)");
unit.assert_eq16(16'h0FC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #237 d489edf3-7a47-44bf-9d2c-5c7d04a719c8)");
unit.assert_eq16(16'h6BA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 1a376c15-efa8-45ea-93d9-f98365d951ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 abe25f4d-13df-47e5-acc3-255d431b1bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 693d39ab-af40-40d7-bd3b-ed45bb78027f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 fa1470e0-6875-412c-a04f-1479c9dae337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 f3af6a24-bc7e-43ca-bc88-ad89cb8be657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 0fef2b42-91b3-46cf-a86b-d2fc0de0a5fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 e7b3c38b-b87e-4b37-8112-8763ef4969bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h87D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6419;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'hF96C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #238 155f5859-0cd1-4447-a4c3-05fe258cc911)");
unit.assert_eq16(16'h87D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #238 67d88dab-1555-44bd-899e-f594e95a5c42)");
unit.assert_eq16(16'h6419, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #238 7f706e17-acdb-41f6-ad62-3ea3dd818702)");
unit.assert_eq16(16'hC8A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 083dfda8-b8ba-4ef1-9d5f-68ca609eb331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 0419fbd6-7f36-48b9-9df2-ea4912a36b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 337dc9bb-b100-41ca-8314-1e2d5ea895c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 a839e9eb-3454-483b-9376-2eaa5a1bccb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 f6e4f428-1940-4504-ae8b-f09ff5e345f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 678fc38e-0815-4df4-8017-78495f7e1a3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 49e967f5-70af-4959-b77c-6563dd5da06d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2E01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h0BC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #239 8506dbcc-7ec8-4dfa-940c-42b6fd4eb5b7)");
unit.assert_eq16(16'h2E01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #239 4423799d-a82a-4309-b0b1-b920c8ee6f99)");
unit.assert_eq16(16'h6A39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #239 12671952-68ad-4703-83ae-d9d135a26f64)");
unit.assert_eq16(16'h42ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 34f62bfa-173b-480f-abed-665cbd23e7df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 e0c69a6c-adc6-498d-8f49-e632d7009a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 a523e1e3-2469-46bd-a4af-5b58e954b06b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 525e01dc-cb69-4a57-bcb0-29e27f226c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 4cf7ff6f-fbed-4669-b366-e92b788a6b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 bf9c7acf-f64a-4910-88db-060c726ad837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 79d0e91a-1e1e-47ae-8c8a-a938060c6862)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDBD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF86B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9234;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'hDC37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #240 91d1c39c-f202-4ab0-adbc-d3c0a536bced)");
unit.assert_eq16(16'hDBD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #240 6591a58d-2341-4e37-9d57-1dddd1292e03)");
unit.assert_eq16(16'hF86B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #240 93425bd7-6b2e-4f02-9bae-d2567d5f210b)");
unit.assert_eq16(16'h9234, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 90b7f336-3d83-411d-8b10-51009df9fc4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 21295c15-1bb7-4d97-9b9e-e6ea722d7f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 746f65c9-279a-4e23-89b5-123200c3dc55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 ce68ca93-cac9-406b-b093-3869382210bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 03efcd6d-bc99-41bf-9266-f781c4657150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 fd77e5c2-58ab-4dd5-8daf-6483e38f48d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 e81a7f47-45c0-48f6-bcd8-024aacd6f8ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h446C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3786;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9BD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'h490F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #241 eef4637e-30b9-4883-8b1e-f0b27ff40e11)");
unit.assert_eq16(16'h85D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #241 87510680-57fb-47dc-a191-48029dd3402e)");
unit.assert_eq16(16'h3786, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #241 7b2cef74-dd00-423e-b4c5-512a7dbb9ebf)");
unit.assert_eq16(16'h9BD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 0de495c2-93d1-4821-a269-25392c927a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 81d5de83-bc68-45e9-a221-6f5f7c25e4c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 f38c4ff1-fc45-4830-9413-48933cdefb62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 8c1703af-f38b-45d2-87ce-7f6419e509e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 4b95cf82-bc84-4bb3-84ef-e1e516a8f190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 3a93971f-c311-4b05-b872-1e9a6c8cd305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 fe021db0-b100-4f58-bb07-0678466e77a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC1FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5C02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA49D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'hC93C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #242 05d38e47-11dd-4dff-99cc-9aa0a0e72324)");
unit.assert_eq16(16'h5C02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #242 9354e449-a51e-4359-97ef-067c594ecbdc)");
unit.assert_eq16(16'hA49D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #242 093fa0fe-0f63-488c-9cea-55911c0693bd)");
unit.assert_eq16(16'h0B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 1765039a-6cad-446c-866f-eb2aa67ce21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 61d7425b-447b-41e8-b8d1-310c15ab65e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 b3f8120d-077a-40e5-8868-58befac2eb1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 5e15dc9b-1b8e-4679-bdfe-bf3047292fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 a833e7aa-61ec-4e72-95a4-5fe47ad22438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 73ee08d4-a221-4e82-a781-f824e922ba8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 eb0e1324-74fa-495c-9546-cfebf54bc7f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD92E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h53D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEBDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'hFBC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #243 5dcb9b7c-fb4f-4420-b179-f0b6bbae70c3)");
unit.assert_eq16(16'h53D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #243 2405ba86-42e2-4935-b405-395e00d4fb37)");
unit.assert_eq16(16'hEBDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #243 10f9567f-dd17-401c-8613-d6b70fba81dd)");
unit.assert_eq16(16'h00FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 38eba15c-e18d-490f-95ae-4d03d4652e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 73bb2ed0-177f-4194-b29d-513d8c242676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 bfec21e0-6292-4090-acc0-8609b3e8e26b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 07104acd-a836-4ae9-80e2-1bf06f936a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 c64975e0-01a5-4fae-8456-c61d1b867d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 f2c90c79-0b95-4dc6-a042-32664e179966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 c1cf5935-27ae-424f-8019-3c5e27727939)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2200;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC76B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h0FBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #244 fd31c87c-9a9a-415b-901d-a42bd4447eed)");
unit.assert_eq16(16'hC76B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #244 49590149-00da-4a92-a4d4-647d3650012b)");
unit.assert_eq16(16'h81D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #244 58c9b9b9-6492-4497-9f33-0ad9fa260d31)");
unit.assert_eq16(16'h57B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 c5397b2d-2450-4937-b86c-89f873cc7de1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 05e550e2-2247-4763-ba1d-d12c40a2e1e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 e576c66d-4012-497c-9a62-2f8f8ab48bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 9c31d79d-dadd-46ee-a0ae-971f5962bef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 1a603a31-46c0-44f6-8e85-6bbeaf458066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 dd414cb0-7953-4adf-a6f4-47b65ce7d757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 b8aee113-e044-4c07-9283-4009fc4223c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h156B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h911E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3063;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h3D3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #245 6c858491-762b-4108-8a80-130b3b844323)");
unit.assert_eq16(16'h911E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #245 3816e134-04f7-441f-902d-4b2122806c02)");
unit.assert_eq16(16'h3063, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #245 1bbfdf73-438d-4667-bc46-9cc86b4ab6ec)");
unit.assert_eq16(16'h68DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 145f340d-69f0-4d90-bf19-4bfc7cc9acd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 be5fa328-b098-41f7-9f9a-bd2c8ec0a524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 a380fe88-2903-4bd8-83a8-fe5b392941c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 93b59848-330f-471e-a0b7-5f5ce8f4890d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 7be0600c-297d-44ac-ae60-58fc0d5f9687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 0f1ff372-c1cc-4759-ac09-b2fa68e7661e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 027eeb07-f319-40c7-81cb-98be293f2b52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6732;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h791E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4A3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h6526, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #246 be5137bf-2357-4948-b351-d34f211f7833)");
unit.assert_eq16(16'h6732, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #246 712805fc-23de-4c6a-b61d-aa74ffcdfb15)");
unit.assert_eq16(16'h791E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #246 30fd3aec-6a96-4d29-b559-705bcf2e5d0e)");
unit.assert_eq16(16'h4A3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 0d279787-b868-41bb-90f4-ca1e5d81a5d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 dbc2a0ab-ae38-492f-b5da-27d8322a24c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 3b626ef7-ac6e-4883-891b-47dc86d431d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 20a2c81c-1482-4704-9c01-5cc84ff291b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 22d2dc5c-f13b-445f-bead-8a7bd1b81f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 9a28058e-97e9-4793-b281-658e5d446b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 514a3b48-d1c8-414f-b994-05989a9cc05d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h7AE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #247 34c7b478-b0bc-4465-8754-e7eda2bc251c)");
unit.assert_eq16(16'h69CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #247 11a6524f-4ced-4e69-9aac-ba3f3c28b8bf)");
unit.assert_eq16(16'h3A4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #247 cbf108d0-66d4-418b-8d40-7c0e3af7719a)");
unit.assert_eq16(16'hED15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 ef79b4ae-42be-469f-8922-8316fb251aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 cff06b75-226f-413a-a7ab-fcf1f63118f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 d5905415-7635-4536-93ee-ec9d5580b712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 8db5d577-a7cb-45fd-9bce-c449fdaa38b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 eb0a491d-7cef-4433-b26a-90051b31e2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 09f0fac0-8d69-44c2-9a15-7cb3eff84f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 ae6f181a-1b08-4039-a794-58b0000d7139)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE48C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9943;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA2C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h8B57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #248 933d504e-27cb-40d5-8e4a-a665ab0dd63a)");
unit.assert_eq16(16'h9943, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #248 f3e29dfe-5561-4616-9c60-880132292964)");
unit.assert_eq16(16'hD3AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #248 ea2de127-091b-401a-a0cb-652221eacbb9)");
unit.assert_eq16(16'hA2C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 2c7b7310-57e7-49cb-aca1-fc9e7de137a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 1fa4d3b2-20ca-4d8b-a47e-4b23e9d7b37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 9519f23c-85b8-457a-a8df-b9477af3c474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 7504c4e0-e3b8-435a-a893-68ca445a02bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 66ef0dcd-a80e-4d0b-8d11-9f9fe632048c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 838bb00c-d397-4b98-ae36-69eacfb96d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 c5987b0f-c281-496e-9370-e413df0bf780)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8076;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5AD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9EE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h77DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #249 d40c86ab-9e51-4935-b567-080cdfd7df81)");
unit.assert_eq16(16'h5AD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #249 a759a06f-a8ce-4b40-8059-440d50518cdd)");
unit.assert_eq16(16'h9EE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #249 999229c5-62dc-44f7-8eff-ae969b98f5df)");
unit.assert_eq16(16'h00FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 b627cf00-32d6-4a1b-a424-782650f59017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 26139ab1-e2aa-44ba-8601-e43d177f4241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 6427d245-19c6-49cd-98ed-07b99b63d846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 8c0d8137-35cc-4bac-9664-61ea7b76cd70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 ed0225f9-f3e5-4c5d-81ff-7a2ec6569c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 5c2bda55-3108-4c13-a90e-be751e280cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 c7a39811-9a53-4271-b37c-2806e185bce6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB11D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF3EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h5B5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #250 fc48536a-f4e6-4c4a-b8e1-b0612484f0cc)");
unit.assert_eq16(16'hF3EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #250 befd6297-e259-4b2b-bd9d-ffa70790aaf0)");
unit.assert_eq16(16'hFDB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #250 7108dba0-f66e-45e7-9f9b-f84093acefa8)");
unit.assert_eq16(16'h8B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 28a95aff-1ea4-4127-8638-e9d0ded722e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 2724f9e6-08d1-4e54-b14a-c68ada5580e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 194ea4d5-5d82-4afe-b604-7abadd7ff72e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 6b38691c-d6b1-4571-90b0-6e973e5ae4ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 9f7518ca-cb47-400e-b728-ecc311f785bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 e1d68ca0-0569-43d6-89ae-6697d9507d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 782ad54b-af13-4a2a-b8f5-f92d7c9719ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h474E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD5C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0066;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h46B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #251 63b6d4bf-0d48-40b6-9c72-5b899f47a068)");
unit.assert_eq16(16'h2A07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #251 c9c00346-adf9-4078-9f37-9fa37bea8ad5)");
unit.assert_eq16(16'hD5C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #251 56ecda5a-c473-4c8e-b806-41b9e76f2ec9)");
unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 4d9b1197-9787-450e-9294-7e618f500671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 2e9bcfe7-48f3-4378-8dae-0b74590cd01a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 957be4d8-69e9-42cb-b35a-a46dff835d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 e7e9c3e4-fbff-4c2f-b8d1-852b42e43840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 cb07369c-5130-4632-a0be-f94eb5195f1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 0cfa124e-8101-4ee8-bac0-63f29cbd32bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 a222c1c7-c386-49aa-b569-6efe01ac680d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF18C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h2E88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #252 7e5584de-eb5b-45f4-b0f6-90f1d4858e76)");
unit.assert_eq16(16'hAF1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #252 71759376-4611-4b66-9fc2-cd9477260bca)");
unit.assert_eq16(16'hBFF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #252 f1ee3fe4-87f4-4746-b926-7a6f320aadd4)");
unit.assert_eq16(16'h2C15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 1a233fff-e8b1-430c-b3e7-786294183e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 a0665904-d5d2-4ca2-914c-9f9197d495ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 23dd4d58-6eaf-4977-b3bc-229af4b44017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 db576fe7-4735-4460-a0be-554bcfef2389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 24518702-76a3-4b52-ae50-c1a84588798a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 0bc9f723-a81f-423e-9e84-6004759d3ada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 82e06ce0-ace3-4521-83c0-5d001d70f950)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h888A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6130;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'hB094, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #253 77426765-aac9-4f72-834c-360367b42448)");
unit.assert_eq16(16'h888A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #253 6f80ea58-f200-455a-a466-cf48a61bb10d)");
unit.assert_eq16(16'h0E17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #253 71070e75-a1a7-4135-b868-366f689cbba6)");
unit.assert_eq16(16'h6130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 8ffef4e8-579e-4a5f-a381-45d86d8a1e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 a2981da5-fdfe-4880-b8f0-1b2f1f90d59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 874dab48-7a71-4e90-9ada-d94d247cf933)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 defa6b6e-83c0-4fe4-b61e-5b6f12267724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 3b4875c1-f11e-4578-b8cf-7a967adf9fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 710e8483-c10f-4731-8000-aca50ce4195e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 475668c6-e8d1-45fa-9c96-a2126e2fb936)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2416;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE1EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h6E7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #254 01a76ab9-c338-454a-8934-43096ee98e6c)");
unit.assert_eq16(16'h7D58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #254 1742fa08-b9b6-4fdb-81cd-29b9922f91db)");
unit.assert_eq16(16'hF549, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #254 b346fd4f-5161-49ac-b93c-6f16f496819a)");
unit.assert_eq16(16'hE1EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 f45f922c-0198-4de7-8218-317c231d35ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 a2ee1456-a753-4d7f-be92-af393ee38441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 f59b25b4-0814-4ea7-845e-0ef8607b50b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 cd79bcaa-18da-4963-8ddc-78ba3c3a274d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 be941ec6-1247-4d69-90bd-a5fceee3fa8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 daebad81-f705-4468-a33d-a38a727c9f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 afec8f02-6909-4a4f-b18f-683f1f2a113c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h537B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD90B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1D6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h9D6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #255 f489433f-7c4b-4b05-8d39-2bd0d1f3d2a4)");
unit.assert_eq16(16'hD90B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #255 890ff732-669e-4e17-a969-ed3f99eecbc3)");
unit.assert_eq16(16'h1D6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #255 e5f9c5ca-13e5-46fb-86e1-30b868b04b20)");
unit.assert_eq16(16'h32E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 c8e738e8-5fc9-4daa-9353-6cb78b304a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 e032a238-8241-4e0f-8558-0e2c35426ec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 591c8b74-e2c8-4603-ac0a-4012d61c6bbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 7a18f891-6838-4179-a8d9-af3fd96149d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 faa69007-7cbb-42a0-bb28-2a679482ee33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 af7eff0c-2a98-47f3-a448-af014fae61ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 0b72f4d7-b541-4ab3-9674-b90fb8a41315)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3FC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h2BC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #256 523cccb7-73bb-42d6-92dd-c27e03c4d157)");
unit.assert_eq16(16'hDE80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #256 679764bd-f8a4-4550-9ba2-8df174839041)");
unit.assert_eq16(16'h3FC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #256 6872bee1-046e-419b-868c-e279d19262be)");
unit.assert_eq16(16'hBEE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 32b0c39c-1fd5-47ae-9f0a-c8ec3eb128a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 3df7d373-4f7e-4765-8e73-8c90d8f0be7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 cbe712b7-52a7-435b-9bc1-30f318c3b63a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 66bff118-0087-4746-aaba-a90f5b53fe3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 e4c39add-85c6-4aa7-82ae-86225f398592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 c5413296-030a-44b8-affe-4dda0229c385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 a2ceacec-8308-4842-8b1c-da8f3478055c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h37AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF787;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h37AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #257 2e317bfa-3473-45ca-a5e6-2931d7c48a14)");
unit.assert_eq16(16'hD405, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #257 2933f22b-1773-4c8d-a32e-ffcaf8017548)");
unit.assert_eq16(16'h2D1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #257 d8096734-71e4-4777-9582-2fa62b530600)");
unit.assert_eq16(16'hF787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 e913a053-dbc9-4652-a3dd-4a81284de9a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 21ece828-c7c8-49dd-856e-5fa3776116d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 c0611c52-95fb-40af-97a4-44cbb3038263)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 5d10ebf0-c05d-442e-9970-f10b5ba04bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 c0808551-d4fa-4055-9839-4c2de5ca7082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 07d4fe66-bfd9-4567-807e-61c61ae84b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 bc54e909-e6eb-4fb4-b3fe-621526f7679a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9809;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1936;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h028F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h9809, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #258 270d15cb-4626-4163-879b-492c1e70f186)");
unit.assert_eq16(16'hDCBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #258 1ab3c56c-f18c-4d9a-b434-40b5f375e021)");
unit.assert_eq16(16'h028F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #258 ff97fefc-cdf9-48b9-aeeb-8708d85b370b)");
unit.assert_eq16(16'h7C12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 91dbe639-f87d-49de-a4a2-6a281a05b8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 133ff496-41bb-4e3e-bdea-e3bc6d318c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 7f2c8871-e5d9-4b16-af58-4e8c6990780c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 5c74b715-f8bf-4c73-bfc7-06f63f336cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 6a8547ba-fbe2-4367-a88d-8fec64c200d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 57229933-9df0-41a2-b182-3b4f1df1f843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 0b5d3d25-c0ae-433e-b04f-5d9e4cf6d974)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8398;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF38E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCADA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h8398, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #259 629c2483-f47f-4963-89df-9801a093583f)");
unit.assert_eq16(16'h1BFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #259 71cc8060-99e3-41a9-9897-61c70baa016f)");
unit.assert_eq16(16'hF38E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #259 5f623775-4a92-471f-a3ad-8876970dabd7)");
unit.assert_eq16(16'hCADA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 61c4ff10-e93f-4f61-95da-ea07bb1a05ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 db00342c-2dd2-45a5-b6c8-830f05a76a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 a6bb7358-7c05-4c95-8bde-11dd11ef5628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 912a0a1c-ad8e-4ed0-8683-98eec2ef294e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 b8f55452-9044-402d-8fdc-6b8b1d4a4fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 9fc5382c-9e2b-40dc-9b11-63cbc578fb40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 fd2281fd-66bd-423e-a7d7-666a576b5587)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF382;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC48B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h69A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'h6FDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #260 77dab6d7-8288-4e7c-9657-87e915b4eb19)");
unit.assert_eq16(16'h86F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #260 4aee10d9-dbcb-4f50-8f20-26ba3a0e962e)");
unit.assert_eq16(16'hC48B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #260 9a621968-d679-4a7d-8ec0-ec3e2f318648)");
unit.assert_eq16(16'h69A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 21f4e4d7-6c8f-4621-8a59-b3839fb569f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 6790c272-9fc8-406f-a9c7-05610caf5773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 48cdd412-d1f6-4cd2-8579-0f4b0060f409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 37581aee-ebfa-49c0-a9ff-2bb2ddfb8220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 5e651c85-740e-4769-ba81-608e6ea4476f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 1d782efd-33cd-4f81-a306-c0a68109685a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 7a70c383-96e0-426b-a094-a6263957d59f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF383;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'hF383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #261 3ed8fb74-529b-4e9e-b15d-2d38b05f26f3)");
unit.assert_eq16(16'hFCB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #261 18e11a41-9d78-4932-9b20-2fc07b351dc7)");
unit.assert_eq16(16'h8A2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #261 636c73dc-398e-458b-b262-feb74187c2ee)");
unit.assert_eq16(16'hB5C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 d8843654-3681-4624-b346-4ea37bbdf14b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 95dca1dc-1dc3-48e4-9252-dc66e9271755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 6e614883-3890-4492-a5ec-3d9395a75073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 7b02007c-338a-4829-872e-373760d1f9dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 879c5d77-e373-4dd0-9501-48a9a67de055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 f1fb3825-817f-4193-9b6b-45a2aa04271e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 40e106f5-50cf-4772-8cb7-e77e2107b9dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC5CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8703;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB730;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h225E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'hC5CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #262 c8db1703-0974-4e30-a782-cbee8939800a)");
unit.assert_eq16(16'hD22E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #262 bab27bc3-1b7c-47af-bfc1-1e0a58e94496)");
unit.assert_eq16(16'hB730, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #262 bab3096a-876d-4541-bba7-d3a27d350506)");
unit.assert_eq16(16'h225E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 507b45f6-a84f-45c3-b108-b37655226fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 6014b6bd-e2a7-41a6-a64f-9f5ffed7eed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 7c933eca-b57f-4926-b202-5da3438a9260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 136293db-899c-4538-a1de-48f353166e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 c9db5f21-5ec3-4098-a53d-c5f82974e5cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 4b93340a-c051-484a-ad18-702ee51a0dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 e0c58f82-53e2-4d86-8a73-5c573bb67247)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1757;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA0F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE58C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h993C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h1757, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #263 9160f90e-7842-4ad4-8960-6ef61f05c8b0)");
unit.assert_eq16(16'h037A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #263 5abcfc9e-6281-42ad-8419-b32d24900df9)");
unit.assert_eq16(16'hE58C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #263 2e9f8876-e6e9-443d-8a3d-9ffe4d3b55a7)");
unit.assert_eq16(16'h993C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 55d672b9-4e75-4b5c-b534-83e391440690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 ee4b145e-e3f6-4c87-9ca1-a50417ea66a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 5ce93dff-6e55-4d24-a06b-421f46a30a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 735b20e5-d69c-4fcd-ba6b-f3b9cbc64d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 942e3dfd-543f-4de0-bf96-349f55915cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 b72edf82-502d-4eec-9d36-101a2edcc990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 27112404-48ed-49bb-ae2b-0a975aef54c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h5B7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #264 fd39c3f8-3098-47c7-9cf5-f4d42ab093a0)");
unit.assert_eq16(16'hF98B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #264 b4c10106-9cb4-417d-bcac-f39e1efdaed2)");
unit.assert_eq16(16'h6EA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #264 e6c8b5ea-a7df-4b99-a5bd-441f85bd87b4)");
unit.assert_eq16(16'hC1DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 ea2df153-75e8-4060-8772-80e8444f6325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 0e44853d-91cf-45c9-a589-05cf34278334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 0e59ea4a-a25a-4cab-a624-006e95e1ebe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 2ca1b334-e3fc-42c3-b8ca-c0a10c47aa31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 b22088f8-c8b9-479f-beab-50a17d837182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 3634e986-da2d-4473-98fc-0d3b66461f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 634a0140-13e3-436a-83de-a8171008a41b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4441;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9185;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9033;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h47F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h4441, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #265 18ab2c11-fb70-4ae3-afbf-8113166a4295)");
unit.assert_eq16(16'hA8C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #265 ad786f65-7e99-4d1f-a114-9b5785077dbf)");
unit.assert_eq16(16'h9033, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #265 54422da2-3094-4e06-b1db-b278484b52cc)");
unit.assert_eq16(16'h47F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 52a2f716-53ca-4bbd-bc8d-861e1013a414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 0443199b-2be6-4f49-ae2f-775506b6dc84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 ca7d9fc1-283b-44d9-a4f5-e0f57f51fcc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 e1ec16fd-c68f-4be0-bbfe-bf8ff7bf23aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 43c7b839-da94-477c-9111-a5541000c84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 1901a8db-58f5-4e5f-841a-b0e991d932c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 48e049f3-eaf9-40d7-9dfd-665459a77bce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h99C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF0F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC474;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h99C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #266 228656ad-e9ed-4922-a887-f47482228f51)");
unit.assert_eq16(16'hB5B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #266 e8b32296-6c81-4d5e-85d4-5b11e8f5eb6d)");
unit.assert_eq16(16'hF0F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #266 105c46ee-227b-44e5-b188-fde17edb032a)");
unit.assert_eq16(16'hC474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 06a8e61f-050e-47ae-8c18-e532b29cace5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 28a8e22d-ea09-4b70-8d3e-26c1cda6ad2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 3a1be619-ae8f-443c-b056-2e9089997f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 8ba2cc21-c718-45af-bbe2-f505d870c7a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 b55b9f32-3836-4117-9edc-8d667314d3b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 05902f46-af2f-48b2-87be-cf8bef587269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 63708eb7-c887-400f-9009-3f31b8eab5f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h94CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6460;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h94CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #267 1510edde-8147-48dc-98d3-5f65d27693e6)");
unit.assert_eq16(16'hBE74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #267 c7cbc11e-c289-454d-9db4-661084c7199e)");
unit.assert_eq16(16'h6460, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #267 8761d47c-ef55-43a3-bb0a-924c50c21ce6)");
unit.assert_eq16(16'hB5F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 b62859da-ad5e-49e2-93ba-a3bb13a8a962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 72d6cadb-6f1d-4e0a-8399-ed86945ce917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 1f28bbb3-f681-4564-8d16-b6c598504332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 348c91b1-30e8-4f56-90e4-6d234c308d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 25cb381c-514d-4470-9572-a4a92bc7c628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 883da420-c74c-4348-be0d-5dd8bd036bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 b85f26a7-0882-4a72-863d-dfc7d58cc4cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2890;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE821;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h27B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB92D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h2890, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #268 ae89798a-5b7a-4542-97c1-fd5b6f9dec0b)");
unit.assert_eq16(16'hD163, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #268 225339d5-9feb-477d-b43c-a2b5b1d32340)");
unit.assert_eq16(16'h27B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #268 6e70b2b3-bc7f-495b-a566-7c301fbf31e7)");
unit.assert_eq16(16'hB92D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 117d7e72-d9cc-4c12-98bc-0e45b41a671f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 6bf06b79-9c4e-4223-9d95-f223dd9367b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 826912de-cb2d-4533-8d63-c01af073384f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 e4592611-b3ef-450d-b02e-5b076c39093e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 a6914a61-394d-41fa-950f-10a54e3b5ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 6d2a56f8-bef5-49fb-be25-508be655c21c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 fde82b47-a5be-488b-ab3e-3f14202b2a81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6AFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFC92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'hAEC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #269 31395d51-1763-4ac4-b532-9af12c40227c)");
unit.assert_eq16(16'h6373, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #269 14a421c6-8543-436c-9be2-40bb37de84b4)");
unit.assert_eq16(16'hFC92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #269 2da13b70-03f7-4d98-95c7-42d9528c6587)");
unit.assert_eq16(16'hEF96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 f5b4222f-35ae-4cc7-a09e-539b7a14d7ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 aa48ee71-e7b3-4d47-aeb6-bf55439f1c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 2c5934fe-675a-423a-8003-3ea6eb32b98a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 f947a05d-5cf8-45af-bff6-6d7560e2086e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 0c510934-141e-42ec-825a-6f7fea6e0734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 aebfae7f-546c-4ab0-b7d0-5fe704442cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 4ae20e4f-0c9b-4268-8e0a-3750bb8970fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h44C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h151D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6949;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h44C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #270 129c5e7e-5d16-4b5e-bb3e-403ec1c03bfa)");
unit.assert_eq16(16'h930E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #270 884e5637-b307-4c50-b104-54c0a672329c)");
unit.assert_eq16(16'h151D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #270 68f85bc1-e718-410d-a7cf-6ad6d80826b1)");
unit.assert_eq16(16'h6949, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 21ce2a63-c3fc-4b4c-82f9-1e2bb58fda80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 e59ea597-e690-40f6-b49e-8a25be442e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 86779928-efec-425f-9d4b-943bc0edd28c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 7de02414-2f59-4c51-b249-045d13a43b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 de03fdd6-166b-4c68-8386-de3fd3b58a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 6fb542c0-2689-4214-ad8d-25b172e737c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 09ed1aa5-566e-43df-8e26-5ca22a2723ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h76B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA0DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3378;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h76B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #271 7b0a3d29-fbbc-451d-9c84-63452a3e663e)");
unit.assert_eq16(16'hA74F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #271 008fe7e3-1400-4bab-8f95-a9fe1f8d889d)");
unit.assert_eq16(16'h3378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #271 c2a497cd-1823-4609-a7dc-b27e90198742)");
unit.assert_eq16(16'hFCE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 60f2f09e-c4a7-456c-9b2c-b603bdaa9b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 648357cd-b2a0-483e-b6e2-97349d17c6f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 ff5ca6fd-f810-46e6-97d6-46c9073cc949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 1ae17816-5eec-4b4e-b837-bfbc177cd8b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 1362ee24-f0a4-4835-98ff-2bd226b2db4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 a20b490c-fd65-4016-89a6-ca6428c41679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 c0f3dd09-4636-43d6-a281-a7ee186d3d17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7396;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF29C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h755D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h7396, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #272 0f67d7c2-2bef-4f7d-9878-35706220eab8)");
unit.assert_eq16(16'h5997, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #272 dd65c67b-ff87-4934-bc90-8877a55ac734)");
unit.assert_eq16(16'h755D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #272 7561e6fc-5fb9-48ae-a036-d127cdbd1749)");
unit.assert_eq16(16'hA4BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 d08b0621-9eec-4e90-ba17-9ed1aef88b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 04fb38a1-1199-441b-ab79-ed73ef6266d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 79ce0377-5123-4b82-af29-083b46dbdba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 c39e6814-10c6-4e61-8272-7b737de28e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 9ce6edbe-d32a-4934-b33e-25390d5e9796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 8f3abf87-69f7-48d6-88a6-fae80f9afb9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 cd7fd17a-8cad-4467-a03b-93655dc785e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4696;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6BFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5EE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE1EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h4696, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #273 8725dff1-283d-44a5-8200-722b708c05fb)");
unit.assert_eq16(16'h6074, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #273 f0148fd9-7f74-46d5-8681-63975df645f3)");
unit.assert_eq16(16'h5EE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #273 74fffe10-8289-4773-a521-febcafc11b4a)");
unit.assert_eq16(16'hE1EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 642bf9de-6b34-4369-9f5b-8b7c4f5453d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 672b04d6-6b5c-47f4-ad81-40805188eeb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 ed68faa9-3082-4f8e-aa2a-a7b0b38fb16f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 cf128fdb-40be-4221-97b2-a736a201c6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 ae5c28df-7918-4a03-a42a-fe51faaef8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 057a82ce-303f-4c33-aae1-858e61e0fee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 ecc85e86-015d-4bda-9917-b56d193107d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5256;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6CEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0595;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h848E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h5256, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #274 c60b0614-354f-4ffc-b5a6-1a4f15596087)");
unit.assert_eq16(16'h7834, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #274 e597bffc-906a-486c-8227-0ebc9eec52b1)");
unit.assert_eq16(16'h0595, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #274 9e27e2f5-3d27-4010-becc-a739e4305373)");
unit.assert_eq16(16'h848E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 9efccf0d-198f-450b-ba49-65beb2618a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 a337a9f2-8934-4dd1-a69c-a1cce009d804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 beee8d79-9e5c-4cfa-8471-58a87de79e5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 3628f3f3-66c4-47ff-8e9a-e6a901b36406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 89ee1962-d46a-47ce-a5ba-df6fb03e66ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 ce7808e8-1cce-4d18-b056-9375e4c8dab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 97327457-3182-49a9-beea-1fa53d10d748)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDBF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3BD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4CB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h779C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'hDBF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #275 0324e011-d4dc-4f6b-8c86-1f1de6c1d952)");
unit.assert_eq16(16'h64A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #275 a9592fb0-2729-4651-97f2-56ad6ae64010)");
unit.assert_eq16(16'h4CB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #275 b66aeeed-d440-47d7-a0ff-780c36e89052)");
unit.assert_eq16(16'h779C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 cc7f75d6-f4bd-4e62-8f3d-9c21fd0f9116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 8d0a4a49-80bc-4975-9cea-71ede34241d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 505db7bd-a8c1-46e6-ba48-f0c2c969f211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 a5dffa8e-79c0-47ca-8fff-4d1fc875b36f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 8c3fcc46-8c6f-4de8-9292-e268b2ad7520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 75c1dcc1-3d37-4cda-81f2-e2404e083be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 67ea08d2-ef6c-4c5c-b3b6-f04f3ac47385)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h654B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h329B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3EB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5877;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h654B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #276 d6c5fda5-3ceb-4ed4-9509-217ef167a9a2)");
unit.assert_eq16(16'h9A32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #276 1ef36405-08f7-48d4-ae73-86db2d7bdf84)");
unit.assert_eq16(16'h3EB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #276 5c15ddd9-386c-46a2-a7c7-b92548be1e94)");
unit.assert_eq16(16'h5877, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 3169d672-af22-4244-997c-f64f85fb3e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 74a8168a-19a9-4de2-9732-6a52d0f2b2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 b14aba79-14ad-4be9-a877-534264b1131e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 8f0735c0-c080-46a6-9d50-0e79f05b979b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 eedc2acb-57ef-4666-b6da-05890dd9b67c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 3fb3e1c4-54be-4f87-a4c1-5255c264c957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 64370f81-f286-48d2-943e-59e235324bb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBFA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h2C5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #277 adc82831-8109-4894-a009-4d4f93e2663d)");
unit.assert_eq16(16'hA877, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #277 42a0852c-ca5d-4510-9d88-ce11ec3f8642)");
unit.assert_eq16(16'h0FFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #277 2327083c-9cb1-4006-8460-d8809a24494a)");
unit.assert_eq16(16'hFF04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 0c0688bc-557c-4012-838e-774690945884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 200a4164-bfb8-46af-8f87-2ebd2ca65cbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 5375269e-5b9a-4040-807b-a75222a77eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 1dffff1e-749b-479b-a634-5da68d416fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 576a133c-4955-424f-85d1-5a4b768f7f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 5c1704c6-0cdb-4f14-93b4-a3f77e7b4c88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 5e914df2-0a8e-4e7d-8568-a4e2c02ddede)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEDF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h79C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE860;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'hEDF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #278 b983f4df-d74f-454a-a895-664a1826014d)");
unit.assert_eq16(16'h20EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #278 253f1285-91c6-4913-8b06-0126cff6ebd6)");
unit.assert_eq16(16'h03E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #278 811eb088-4b66-4433-9521-6a6312f6f016)");
unit.assert_eq16(16'hE860, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 a673d80c-d356-458e-8469-89b71d7b29ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 7f8ac0a7-068e-4be5-a15f-d226374563d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 53291978-8182-49b6-93fc-a5f2ca8f8a32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 2973179e-73e4-4666-af76-0df8b51aa49a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 f2667d02-d751-495f-9c54-7ef336c9d706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 c2b7ea45-8d0f-403d-b2cb-9715038f16d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 56552a2c-9007-4985-89f0-2664974316e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h922C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7950;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h922C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #279 c93efc78-1388-48c0-a655-b28e4a147980)");
unit.assert_eq16(16'h9F0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #279 7964c3fe-b059-4d64-9ab1-cc404462a9a2)");
unit.assert_eq16(16'hE5BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #279 95a7a7e4-0ff1-400d-a653-01903019c51b)");
unit.assert_eq16(16'h2BE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 8209541a-8be7-445b-8bd8-645291389654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 e7d80680-b516-41d2-aaf4-c3aca4df8878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 1388317c-ce6c-40bd-8737-82e4caf8b670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 2152596e-479a-4cf6-b22c-ff85037abe82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 144bd4dd-b269-4875-a4da-60b5e00345f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 30a439d5-f05b-41df-be6a-c92ec30bbf1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 e27aceec-3100-49b7-8eff-1f8d8343367d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9B96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAA98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'hC0EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #280 877be1c8-2492-4800-bc9e-660f07b08928)");
unit.assert_eq16(16'h949A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #280 0f351faf-d8fe-4006-b0df-1fce9679117f)");
unit.assert_eq16(16'h9B96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #280 1b8cfb04-3e82-43d8-91d4-ff2177e47183)");
unit.assert_eq16(16'hAA98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 b8592eea-3d1f-4a05-8c07-5baff0ff7571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 fb4aa276-730f-4744-acc3-91fb01fff560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 2390da04-b037-450c-94c3-ef4a0464e129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 69fb9525-645f-402c-8b5c-98cb4999dbfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 5a0abd1c-36de-4b71-accc-d2603a5de713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 e16c7c45-3671-4766-9036-d658932bf309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 c2773e3d-bbe0-4e9c-90e7-a982ef5d266b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5624;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h01E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h18E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDB72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h5624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #281 61a57271-7de6-4c51-af94-cd7496d26b30)");
unit.assert_eq16(16'hC12F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #281 dc386f3d-0af9-4cea-9541-31df6efe3399)");
unit.assert_eq16(16'h18E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #281 57b8fb88-fbcd-40d2-b99c-9999d359543a)");
unit.assert_eq16(16'hDB72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 6618b883-d4d4-4fb7-8960-9d207fcb9076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 06029190-7a56-4eca-b93b-78b8eb60a7ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 f47151c2-2011-4b6a-ad3d-5e4666ae89a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 c8d56658-4789-4bba-93df-da7ec5c3e4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 3eeca6b8-9a05-4515-b69a-d9becd293451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 99c39095-0ebf-4998-94e5-6aa853b380a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 49a05ab1-98fc-4562-8c6a-5c715b9d1e11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h943F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9434;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF3C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDB97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h943F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #282 ed157ffc-5b3b-46d6-a808-550424944b95)");
unit.assert_eq16(16'h585D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #282 99ff9bd0-01c0-430d-b4f9-27df385f3a1e)");
unit.assert_eq16(16'hF3C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #282 ceaddfb0-3043-484e-b1c7-30e9295da4b0)");
unit.assert_eq16(16'hDB97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 56725f23-9704-4f58-8bf9-177c0c2a583f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 8fc30735-5b5c-4232-94e9-518d82783e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 816b0607-e57a-4b0f-bf43-ece511c25773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 5142be92-c7b2-4523-9224-1f6837dc3131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 4d8039f9-fa8c-47e6-8c69-32953d03f644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 69041b4a-ff44-420e-9245-51204b8135a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 f4d40248-2c0d-4fd0-9ab9-341298496e16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA3E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE631;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE2C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'hA3E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #283 6f997995-e43c-4c22-b5ad-e6afc5d4ed0f)");
unit.assert_eq16(16'h8639, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #283 4535b156-22d0-4f40-9e30-9fb1f6958b41)");
unit.assert_eq16(16'hE631, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #283 bb6e5977-71b5-4419-a791-ec3701bbc9d4)");
unit.assert_eq16(16'hE2C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 3dab66cb-7200-4d0a-a1eb-a2656d8d7eb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 8c5037c6-eeae-415c-a9be-4d96162ad83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 86840457-6d75-48cd-a2d0-668a79775b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 476b0616-524b-405b-bc06-83e903bace78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 f4eb5a84-9053-452c-a61f-c6b6e94313af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 682b3480-bbf4-4070-a044-87620977c70b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 29f19b5b-1beb-41e9-92fb-a7adc4c3c04c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA7CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'hA7CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #284 ab730a9a-773b-461f-84b4-6d2b58303b99)");
unit.assert_eq16(16'h7157, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #284 f6803143-0d86-4e58-9c67-855eab68144a)");
unit.assert_eq16(16'hE887, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #284 091a3847-9db3-4bad-a883-c4b49479280f)");
unit.assert_eq16(16'h48A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 af023cf3-a7a6-42de-bbdb-4cbb1300e042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 ee99b571-65bd-4ac0-b7f2-71ddb38f3e42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 a1b7009d-8bbd-49f3-9622-9e20c64de765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 6d9c0bc9-0e5b-4178-901d-ddf0a09386b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 949c7f25-d6e9-4984-9a26-b32ca3c83aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 76798e9c-9a50-4bbf-9c7f-4c601fd9b8cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 6220aa86-9439-4197-a729-820368abd2a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC692;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h070E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'hC692, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #285 dc39a603-a45f-43ba-85dd-f4d0e321db42)");
unit.assert_eq16(16'hE06F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #285 04b8d119-1ece-4a88-a06a-5fdbf8515f59)");
unit.assert_eq16(16'h070E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #285 8dfe3d75-05a7-4e49-b9ae-a575a19d8374)");
unit.assert_eq16(16'h07B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 b4c295b0-0250-4e96-a889-c6b2031985e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 3bc80ae3-fd2e-41a5-97f3-59f72e448938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 db996731-9ddb-4cbd-8725-b7d717467254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 0569c00a-0077-465e-a08f-aabfcd7081df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 65c398d7-fadb-4a9d-a976-b651f15bb96b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 46f41123-c32c-41c0-ab99-e639b247caee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 b46f9f51-c3d5-4e6c-893b-caa6597fcd25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0643;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9D71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h5F78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #286 fe50c304-2f10-4b9e-8fcb-2dcb32b7f4bb)");
unit.assert_eq16(16'h10CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #286 b4d15208-2b98-4cf3-807f-b3b8ab66d4c8)");
unit.assert_eq16(16'hB1EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #286 741b59f9-75b4-40de-be15-315ecd7aebbd)");
unit.assert_eq16(16'h9D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 692d8f6c-807b-4039-86c7-be73c31fff41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 434c3b1d-ff56-412a-8b3a-858d083d1bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 255d5f6c-625a-483e-afa0-c2fe43163ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 6030f8b2-245b-4d1b-8f80-9f8b3ec950d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 1c3b0ea8-eac9-442a-8070-ae8bfe8caf00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 b782b79c-16a8-4f8c-a45e-959a5207f576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 0e4a987c-625c-4697-87b2-af9d5f701cec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5563;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h72AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h5563, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #287 95db2a9c-1e96-4a74-9cc8-26e3f4d13e20)");
unit.assert_eq16(16'h2375, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #287 3d23b5a3-88df-4b5d-b5ef-c603f05379b4)");
unit.assert_eq16(16'h72AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #287 6dc673c1-d840-4bdd-b24a-185a9c5a8eb2)");
unit.assert_eq16(16'h8C9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 9b4c7f03-5d57-4303-988f-b86914f9877d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 e8d37ec5-64ba-4239-9abc-2880050a5292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 75f7a29a-fa89-434c-81f1-f048b7c76f35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 cfc58d4b-6e33-4f58-bd7a-a33e7cc51561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 098df7a0-70ae-40f4-8e2f-729fa3ae6b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 70252db4-dc31-474c-a517-c431c9a0b3eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 b58b979c-e01b-43b3-8c89-2cc3bc3212c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5656;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h88E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h599C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4454;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h5656, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #288 7bf20742-973d-4593-8ac4-d9454a270edd)");
unit.assert_eq16(16'hFF8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #288 36bf6703-da8c-4192-ba81-a52c49354cba)");
unit.assert_eq16(16'h599C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #288 02ed00c7-e637-4197-8f78-ebb9876dabff)");
unit.assert_eq16(16'h4454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 4f742de1-398a-46a8-aa7e-5405cc51f438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 2e7556f2-05ed-43ee-badd-a42c70d8a66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 20b353ee-4ebd-4bd6-984d-1e865926b30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 2349632e-8fb8-4764-9b91-de68e81d0fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 fe05e7d5-13ab-4731-ae4c-dd52afe360d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 a9f30d8b-66de-4dca-b738-dc09f30aaa4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 533fbe36-eb8b-4eff-b036-c2ad3eb2bf1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h430B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6824;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD5A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3775;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h430B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #289 ccbc0e4a-f7af-4de3-8ecf-eab43a309053)");
unit.assert_eq16(16'h33F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #289 92c7a034-a0e7-4c4a-af92-5effa288074d)");
unit.assert_eq16(16'hD5A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #289 3bda41a5-2981-4c52-9fed-94b355e77d28)");
unit.assert_eq16(16'h3775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 3737a64b-9cd6-4b51-893d-bc7b01c7bc80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 00fb4a92-b5cc-4ef0-bf60-cd45df3b6953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 6f0d2c6b-7fe5-4d9d-9b5a-999527f6cb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 4344f7fb-a688-46b3-a71e-af139466e99a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 ff8286da-1d4f-4b60-b878-427a2017d119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 7b17f08a-b299-4998-9eb2-914ccbffecee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 c64892a8-1e53-4254-80a1-e3904acfbd79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h995A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB502;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4492;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h995A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #290 deafa490-7653-430e-aa35-df87973f0b4c)");
unit.assert_eq16(16'hA4BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #290 846e9d90-27fc-4de3-a28f-6673aa688f38)");
unit.assert_eq16(16'h4492, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #290 3e540f36-79f8-43dd-9ec6-db210daddb28)");
unit.assert_eq16(16'h04D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 b4e32ff7-3acf-4307-8165-c83fdadeb769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 8511dcca-23bc-4187-8e78-4cfedac5fe92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 1095d88f-c92e-4ee7-b459-473540d25007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 1a6b3996-3c94-4ea8-9bca-bb3e4587a373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 19358d06-055a-40bf-8219-cdb415905c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 4afa84e8-ce49-41d2-8201-a2a725716131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 b090a7a3-30a5-4fe7-b3a2-298620f9b5b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h849F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE8B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h849F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #291 87bfbf62-44fb-483e-a497-d1612ec82a19)");
unit.assert_eq16(16'h7CC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #291 22c5103d-8494-40d2-bb61-bfa0881fe0fa)");
unit.assert_eq16(16'hE8B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #291 2e242117-4396-4564-acd0-90278be47bb7)");
unit.assert_eq16(16'h06F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 aa7bf93d-02f2-49cb-ba48-b26e99bb23dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 90e5cb60-19b6-420f-835e-ba087b4ad138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 cdae146c-2671-4317-9a2c-f89aa755c575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 638ef553-ce0c-4bb8-94f8-32be2ce9d3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 8b9e8caf-bc5a-40fd-93d3-38dd296d896d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 96fd982d-4bea-4a82-b576-b715e66442fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 b09af034-f3c9-4875-97da-326ed2c8a5b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2472;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4AD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h73A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #292 e5c29c2f-4524-4e98-943c-fcce2d8f8013)");
unit.assert_eq16(16'h6A40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #292 b048d1e5-56ec-456b-b4ac-e08bc9f637cb)");
unit.assert_eq16(16'h4AD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #292 1bef8abd-2dcc-4db5-b07c-ac17d7ad43f0)");
unit.assert_eq16(16'h53ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 64bea331-932b-44f5-bd11-3fd73afc39f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 8523cb24-439b-43d8-ac4e-10fb5b1300a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 f6656ee7-f60c-492d-b27e-a587ca5619bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 49609fcb-c916-4b65-b487-924312c67be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 a55e6aea-4b6f-49ff-8f42-ce5279137899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 53ed59b1-5b3c-4206-b814-347cd90dc3fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 0cd1eac4-f8dd-42ba-a146-71e996a6d0eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2B1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0179;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h9B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #293 afba0eb4-eb33-4987-9876-a9eb51bd0bd6)");
unit.assert_eq16(16'hDC50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #293 50d11235-72b0-4642-959b-eef406be8924)");
unit.assert_eq16(16'h0179, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #293 5d88f21f-4bc9-4962-abfe-2ed05afa7f1d)");
unit.assert_eq16(16'h4457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 0f40f969-a23a-4906-b027-4f574f5d7bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 3a7ec20e-c0af-4e56-8064-a78343430cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 f6b1ea10-c61c-4407-8e26-e6f5a8a17f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 43b593d3-aa98-4b6e-9f64-5390457fecb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 9c757f46-fddb-46a2-81ec-88e76cbb6766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 0a568a56-69ef-4248-ad0c-0b758c2423f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 e93217e1-16ea-4c1b-960b-51882264664f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8638;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF009;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h82AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h8638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #294 b493d3cf-5523-4fbc-9613-deb2f7c96b9c)");
unit.assert_eq16(16'h872C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #294 74c5c631-d7d5-408a-8ad9-3ba22ce7c718)");
unit.assert_eq16(16'hCE8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #294 4521e1ff-d0b8-46ee-80ee-5bd841874478)");
unit.assert_eq16(16'h82AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 ea9195f8-2abd-40de-ae25-1d4b92545980)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 eb6f9ce7-4b11-4c28-860f-7dbb88626a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 a9f4a92c-1fec-4f9c-9ea1-629710192680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 213d7882-89a3-425b-bc39-b1d255927686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 5b6d2221-a082-4a4f-841e-7458e9b6cd90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 83ce5581-6410-4b1a-b3e7-3dc11f431e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 fe063f3e-c2b3-48e5-a1dd-8c2e2e17dad5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFABF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h372D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD171;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h73CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #295 e5156520-3d3b-41ca-a509-a8190e1c1173)");
unit.assert_eq16(16'h2E1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #295 7bf0b6f9-bee3-4582-a6bf-4b5fc62fe0ed)");
unit.assert_eq16(16'h372D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #295 9925ae88-53a7-4a0b-8556-4ee66484ece5)");
unit.assert_eq16(16'hD171, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 88c238d1-cd14-43ee-9942-1a4860eb42ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 1a006825-fb7f-48ac-855a-b0f3850cb08a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 45b2e4d8-7c07-4f51-98e4-6bf37ad30fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 3e3c5ced-5115-4000-b0c9-ceb1fe808d94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 dd2a3819-9cbd-4344-88ad-1e2c75d65d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 b373d20f-123b-4d2a-9fc4-4588f89c9615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 b40a73e4-66b3-4e85-81f0-04d5f6cbe1c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6261;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF854;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h6261, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #296 2c1750ba-c522-4ce2-b590-8ff96ab051e9)");
unit.assert_eq16(16'hDEB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #296 2621300e-87b0-47c5-ba6c-859f12f9769c)");
unit.assert_eq16(16'hF854, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #296 48257498-5f19-4427-87e3-17b4d84c300b)");
unit.assert_eq16(16'h0BF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 c7142dbf-809a-45d2-b098-556d49199fb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 61dc835b-39a0-41cf-a4a5-85cbabbd33ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 c3259c62-6ab5-40a7-838c-71e37c1e54c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 df0c846a-69c0-4d78-b55f-9445321c6a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 8caaa874-c20b-45eb-854d-585c28d11e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 9c961001-8d67-4879-bb24-58dddaf3083e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 3a229088-ed57-4404-a582-4856211ada34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5FAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h742D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB3FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD650;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h5FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #297 7ae1bda1-86e4-4f98-a917-0a3aef349578)");
unit.assert_eq16(16'hA137, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #297 ede624cd-508b-4a9c-862d-ee3595518c8c)");
unit.assert_eq16(16'hB3FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #297 a91f47c7-ae81-48ec-9061-fcac041be389)");
unit.assert_eq16(16'hD650, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 98f8fcf5-f67d-422d-b8ed-ac093acaec8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 7fcb1c25-502e-44fc-ae18-03d8bf194f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 5cd2df3d-4241-46c2-b1bf-887b66c2bda9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 5f6284ba-d48a-4a77-9401-062cd678fc06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 712230e6-33bd-42ea-bcd9-671f8f8ae278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 49f41496-52ea-42b4-92e6-3151f7ec3591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 80868b9f-3c25-4b52-b2be-bb0de20ed152)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6680;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h6680, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #298 d05e3859-609a-40b9-be42-d434c0c1a29d)");
unit.assert_eq16(16'h861F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #298 f18920f5-27c0-4703-88df-e35fcdaae1ee)");
unit.assert_eq16(16'h88BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #298 511bb2fc-d638-45f2-b3db-eb506620e9fa)");
unit.assert_eq16(16'hBB23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 65d4ab52-6b9a-481c-bf60-f66931a5f648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 8c20d0d4-b293-4530-bda0-1b41773295fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 690736a2-5805-45ea-9663-f45720f36265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 cdf952ea-9516-4f43-a398-2880ad9bf714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 09da497f-3295-4fdb-b95b-cfa96a232f1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 e78cb29d-25d8-4524-a8d4-07a678713a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 35d86ad8-934c-4556-b058-2e4ceae38fdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8964;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB6BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2027;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h8964, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #299 6a250360-0a08-4e04-a1c7-b7518f8565b6)");
unit.assert_eq16(16'hE543, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #299 c31c2417-5f9b-46da-b9c6-91ebe85712d2)");
unit.assert_eq16(16'hFFA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #299 7fdc256f-b8f0-402b-9a76-12ca388aa19e)");
unit.assert_eq16(16'h2027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 c67f0e92-f413-4772-8cf8-d5f7e459002c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 990dbac9-4609-451c-af83-beea7e4927e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 c9b0ee44-06eb-476a-9217-dd036fbda8c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 b6d595ba-e4b0-4ecd-8d9d-9dca5ee3b428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 94c611e2-1fdc-479f-b392-ac46a235702b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 fd57d0b3-ceb5-4a85-b71b-737c885da513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 c94c3059-c619-410d-85fd-4ad8792ae913)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA197;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD69A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h73FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'hA197, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #300 6ef52607-a6b9-442e-8a28-e6f8be5fead9)");
unit.assert_eq16(16'hF8CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #300 4e0a5dd4-af56-4fde-bacd-4f23abeb903d)");
unit.assert_eq16(16'h7F91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #300 eb14290a-8115-4251-ad13-62cfc3ae8444)");
unit.assert_eq16(16'h73FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 e0f76334-7c75-4762-8544-6b5c93b3bc62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 8dd28cf5-87b6-4873-a432-a70d5462e85b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 21a948d4-496e-4d44-a630-b975697171a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 0f3cf147-452a-4098-9c06-ce66e58cee70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 6999bcf9-5893-40bb-b8b0-b983f31429bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 6a337ec1-e948-4bed-a426-faed2d803e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 4ca05cb6-b9c1-4a75-946e-074523433a1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA5EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE95D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h41AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'hA5EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #301 5010666e-dd32-4fa3-8a0e-29faf0176ebe)");
unit.assert_eq16(16'h159E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #301 84d53c3e-4143-4493-b7be-24fb42341a8c)");
unit.assert_eq16(16'hE95D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #301 1d293ffc-c6bc-4395-87b3-a183c5a97f4c)");
unit.assert_eq16(16'h41AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 987b284d-a664-4465-b267-6c2d809e2f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 b7f86cc6-c013-47fa-8d9e-3c4e2b263832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 026559ff-0662-48fe-bfdb-64bc57e1c741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 54beead5-6afb-4bc1-911e-1d8caf83e9d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 5b0f45b9-057b-4ac5-97bb-855aa013aa1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 972915a0-f80b-485c-99bb-03d500cf6c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 2413ce22-6752-4640-8f10-06f5c167b5ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC2B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h315A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE642;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'hC2B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #302 cc20219e-e03a-4a83-9c57-2e20a6b39635)");
unit.assert_eq16(16'h7F0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #302 136b663e-7a7d-4d79-b9d3-992eab06d94f)");
unit.assert_eq16(16'h315A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #302 2edf16a9-90d4-45ba-b723-36eb1918a56e)");
unit.assert_eq16(16'hE642, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 f0cf52b6-1a86-4479-bdd8-a410a1b7a447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 454c5469-17e4-4ff1-b384-470f2365a455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 bfdb011b-3b50-46c9-8250-355c619d1e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 22f90600-569b-4c93-8eee-5f3555afa183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 bb1a240c-cced-4c04-853c-fd8c3a8b69ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 34cc5983-358d-4ae4-9aea-72dd5b5ebb75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 a396b31e-b783-4d62-a768-e7cc1c93d5a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1212;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h29D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBACF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h1212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #303 c8219fe8-849a-4b45-a980-a1f800ea7cb5)");
unit.assert_eq16(16'hD9B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #303 ea30b36d-20b3-4dc4-b021-49504fb2c067)");
unit.assert_eq16(16'hBACF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #303 f9d8b576-d5b2-4920-bde9-bb2dad3105f8)");
unit.assert_eq16(16'h2FD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 c1d71d3e-3b93-46d6-b09a-aa9723cfcbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 ad75ab56-d834-4ec6-a5b0-7856e3472483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 b3a0d198-b9c2-4e8c-bc25-76558e895e53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 3d584ff3-ab2f-4ecc-a40f-8962987b25a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 6265c599-0180-44e5-bbc9-b997cf69b552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 0040f05a-d1f2-4bfe-9636-841cda74156e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 578e6d8d-42a5-4a69-9768-d89a6a59966e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8321;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA90A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h8B18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #304 0e3110e3-8670-4b51-8c27-42780f349d10)");
unit.assert_eq16(16'h0DC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #304 d93d9994-7880-4e14-a891-71625d1c566e)");
unit.assert_eq16(16'h8321, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #304 5db9e2f3-590f-42eb-8601-66c70937067d)");
unit.assert_eq16(16'hA90A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 cb47f858-8fcb-4086-a789-3f1172abde6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 911902d8-52f0-4e0c-a332-fb0a5a467fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 f4421137-ad90-470a-9265-bf54c875dae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 77026730-9d46-46c9-8020-5fee617ce3b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 de6d719b-7422-4d51-975d-3c85834d535d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 988d7e71-50ce-4cbf-9d74-5dbb910fdae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 30471deb-6226-441e-88f5-c816cc15240d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAD26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3882;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1102;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h4B82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #305 eddc20af-302d-46f3-923c-c00a27d6664d)");
unit.assert_eq16(16'hDED8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #305 4b25bd93-5a76-4632-bca9-0224995b5668)");
unit.assert_eq16(16'h3882, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #305 45eb287e-51e0-49db-a172-077f5ffad391)");
unit.assert_eq16(16'h1102, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 e0a1a8c3-151c-4054-92dd-2d77f8c78ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 b1cb48a4-4466-4532-8ec9-c2ccda26a6e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 ea25f9a0-d47f-432f-a4d0-b1d49faf1e66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 b143b7f2-3af1-45c8-9b39-ba7a567f0c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 09db1dab-697d-42fa-a090-9b51ba4b5004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 ca099e57-97cf-4abb-9336-1d65df0e0ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 3e04a858-444f-4ea6-8da9-d2476b5a2520)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h43CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3134;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h43CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #306 c7a5e911-ba18-43b0-89fb-aab9b8ddcfd1)");
unit.assert_eq16(16'hD4A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #306 8cdfcb8f-b2eb-4dad-b336-10c691d73a30)");
unit.assert_eq16(16'h3134, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #306 2c43753b-6b6a-459c-890f-6000c0aafea0)");
unit.assert_eq16(16'h20A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 9cbec0b2-b158-4ec5-96f2-63ae22f45f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 8b84bf44-6a9f-4170-9566-3abe3663a121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 300816fb-c90d-4ad9-bb43-1e52d2da4f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 8710f2bb-302c-40d8-b09b-95005778a597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 fe7a093e-1d3c-4cae-9cec-c9e98c2e23f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 0181adf3-19c6-4682-9ca9-327a5ee56bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 f21c5685-da71-4632-ae07-97a7520ce460)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3335;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h3335, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #307 4164beda-ad3d-4efb-b066-03d70878a7ef)");
unit.assert_eq16(16'hF380, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #307 a0f4b908-bcff-4f78-812f-48a975b8919d)");
unit.assert_eq16(16'hBC7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #307 49ab506e-48a8-483b-b925-97c7523f9bbd)");
unit.assert_eq16(16'h7CE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 6582c437-80d6-4a44-a74d-a125aa8e57fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 cabed5fd-8950-44f0-8f89-d7b0d7725c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 cbba2372-c6d6-47dd-b684-f801ce7bb9af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 a155c277-9362-4e62-bef8-a8ac7575019f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 32d638d1-7d64-42bc-ba2f-1f29758b1142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 ae85b034-1f8e-4972-ba45-a4bf0d06c302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 ec16564e-0fb7-42d8-81fd-9e91d5236b4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC06E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA918;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2CE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEDE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'hC06E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #308 08258bfe-f715-41af-8a8e-17dcb1dc04b8)");
unit.assert_eq16(16'hCAAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #308 0bc8a380-624d-4b51-8a26-3d2853a7c272)");
unit.assert_eq16(16'h2CE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #308 0c22ecb6-7937-423a-825b-7dbc182f125e)");
unit.assert_eq16(16'hEDE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 eef68c68-0887-4ba9-a2a5-b9365993e235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 ce6880ee-2241-4599-96ac-3bf3816f301b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 df55462d-65b3-410b-ab70-6b4455ce5dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 ebf8f2c4-9cfd-4575-b659-309f2b60660e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 e716f368-1575-4afa-845a-890df0bbdb21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 42a804ad-3608-4d65-b676-08b00e294349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 1bda26f1-36f4-4356-b5ee-54e27e9689a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6E0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h16A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #309 36d1a489-49a5-4736-8a21-18ccbff01bf5)");
unit.assert_eq16(16'h0065, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #309 10ddafe4-5694-4bd0-8046-a33aac0c3e1f)");
unit.assert_eq16(16'h0BD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #309 f32283a3-66c4-460d-a4e5-af8cc7e4a94f)");
unit.assert_eq16(16'h0D7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 34b5e4a4-10e1-4f2c-90bf-30dfbf9c1a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 aca95d42-ad9f-418a-bb52-ae2da81304db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 a2e76f85-80a2-47e0-b6af-7e23b7d7d7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 0fe5e08b-d203-42b4-98e4-76191a0400d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 32f56752-2510-4ae8-a982-d6dfe5d0d92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 bc78351c-4af5-4120-a541-4b65932a55f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 7f9f2585-7e3c-475a-a838-7a32a9cf90da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h574B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'hE9A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #310 62967cdc-34c6-4b1d-b4fd-d1341e9fa28d)");
unit.assert_eq16(16'h60BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #310 189b7720-6bbe-4315-894b-bac3175c64bf)");
unit.assert_eq16(16'h4206, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #310 8b18d177-bf83-4125-ae24-1818500bf33e)");
unit.assert_eq16(16'hAFA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 7442c75f-85d3-4896-93d5-4c0cd4022b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 3c670bb0-d9cf-4a48-8e0d-3b3f6a25ed67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 62c50ea2-18e7-41fa-bb1f-fe13c9f18fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 2a1e572e-1aa0-4cf3-8a00-b2f1f55763fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 ef117862-4e19-4a9b-afc7-9d066602101d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 515c7325-be0e-4c22-ba6d-f8757ad6131b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 3da9f5ed-3e3b-4eda-99a4-8a3b1535f6be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h92A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h92A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #311 a6d7f277-54d0-4645-ac8f-d039a7161070)");
unit.assert_eq16(16'h2126, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #311 0e3f28b2-b29a-4141-bd65-51bc4c0722ca)");
unit.assert_eq16(16'hECC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #311 c07a4ed0-2a42-4cba-a63e-bab8292ea45e)");
unit.assert_eq16(16'h9E58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 feec1a84-adc0-4450-b791-d41118cc057d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 9ed80b42-294b-42d5-8e59-a0c3ad07af91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 4ce71ef4-d0ee-4491-8b43-b0d7088b0f48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 0e48c30b-9ab4-4a91-817b-c8436d6ce28d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 e6c154fe-a33c-4371-ac4a-13a92c07c01f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 72a4b29a-315d-442b-874b-350322d88c23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 73c27988-02db-46b8-9dae-08d180f3e248)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h742D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h24E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h742D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #312 9cce332e-17ff-4eed-bffc-bed3935ebad6)");
unit.assert_eq16(16'h97C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #312 f40651e7-654c-439d-b73b-b3daf432c762)");
unit.assert_eq16(16'hAD57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #312 b0ac5ebc-39cf-4518-a650-fd05ec07facb)");
unit.assert_eq16(16'h24E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 e62d111d-e9ae-4cd8-8ff0-4f30bc7fe19a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 8afefcf5-ba47-4797-89a3-d3b456fca87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 6b0b65f3-d35a-485f-8e58-6bf3ce306d2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 a4a89bdb-b4ec-4992-ba85-8dc44957f534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 631a8ab0-6a83-452a-871b-e2de932ed744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 596688b5-e623-42e2-b44f-42431e76af6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 0806ecd6-db14-4178-8671-298ee11755c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFAFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF15E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h910D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'hFAFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #313 34d14ba0-adec-4c54-9437-1fea54049bc8)");
unit.assert_eq16(16'h7D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #313 df84a58e-396c-4d4b-970e-05c3e4cea7c8)");
unit.assert_eq16(16'hDB5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #313 ef0a39a2-fee6-46fd-a17e-635a10e4a151)");
unit.assert_eq16(16'h910D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 e3179149-3805-4880-bcda-0a192f8b2459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 5944821c-075f-434c-b78f-3c4be26466fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 e7659d6a-aa4b-4262-985c-b10b3108a99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 051b9a65-4289-4ad2-b78e-11a49690e749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 6c67ade1-3459-4a55-892f-6898c1f08b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 b7eb4d4f-ba2e-4491-955b-813f1d838b3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 6b06cffe-0a02-4aaa-950c-91003dd7d8f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h98EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4AB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h850E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD51B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h98EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #314 40068ae7-bd24-4eab-bb81-5d6371fdbe75)");
unit.assert_eq16(16'hA544, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #314 95bbc2eb-7ddb-49cf-91ad-9209894f1b3a)");
unit.assert_eq16(16'h850E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #314 a7dd6aa5-9800-4ed1-a6a0-861cf01e4b5e)");
unit.assert_eq16(16'hD51B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 fb39a750-7f5b-4a3e-8774-a57523a8fe5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 8ef58294-8604-448e-bb05-bda06135fac5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 3bff99b8-b062-466c-a943-ebfd82b5de07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 5abaf002-f349-4051-90ea-322b85456ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 7712eeaa-644e-4cbe-82d5-c38720df70cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 20a2ad6b-a2ac-4559-8b5e-5d8677564a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 da42ea2a-84f6-4a25-aba3-497dce404b2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2245;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD311;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4CAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h2245, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #315 38bd1880-4180-4c90-bd20-c47225009dd8)");
unit.assert_eq16(16'hFE58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #315 082af40c-1b29-48d0-81a6-90ba79cbc0fb)");
unit.assert_eq16(16'h4CAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #315 e9d4cdc9-62c9-418e-8145-853568c72d3f)");
unit.assert_eq16(16'h7AAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 1f89de36-54cf-4f75-b1b1-5854c8113a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 c0db052f-21b5-459f-b248-24249ce0afbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 a0b55c81-b769-4049-9ff8-03de5cf68457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 af353795-c618-47d1-8c61-58a2dd978c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 00271bb8-8d22-4005-b7af-83c6e98eedc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 f2bb5627-4616-43fd-99c4-8eca734c92f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 2b3d2ca7-139e-4b77-abbb-2c8724c9f758)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2ED5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'hFC8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #316 6939807a-8322-46c6-af42-10a99c17368f)");
unit.assert_eq16(16'h0336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #316 fe254159-f2e0-4c45-8b39-6f4355e54e15)");
unit.assert_eq16(16'h2ED5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #316 133e7395-b8f2-414f-98e5-35133eaf25d3)");
unit.assert_eq16(16'hAB6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 b787bf0f-3d5d-4182-8f6e-72fc34e13334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 2668b934-0ef6-4a60-ba8a-6ef7360e91d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 a69bd08b-518a-4ecc-b2f6-87510f1f8e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 3e74f879-c521-4c27-bba1-ea7b488e0828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 59e56f7a-5b15-4dd2-b652-5ed808cb809b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 98ab89c6-6352-4f4d-80ca-efc88829aaa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 e03dc751-09c6-4df4-8a85-0d0fb6e81e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8FF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h17E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h8FF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #317 f23e0523-91c5-44a7-b66b-759378dcb9e8)");
unit.assert_eq16(16'h5DBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #317 1a468e37-ae5b-48ec-b8c0-7a858ca2125d)");
unit.assert_eq16(16'h17E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #317 0273ffe5-4a97-45dd-8f41-d96e283d9766)");
unit.assert_eq16(16'h6BB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 be5c0a07-a108-44f6-b545-766de59fabe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 1f71b7f3-06da-454f-89d3-7dbfa1d07488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 a4cbb730-e68e-4436-824e-7076fc2db348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 9168168c-9d22-4b19-b313-340124f22935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 23bc7aaf-1a4b-401a-b176-7ac4b1a326d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 f7c84bc6-a0bd-4bbc-9540-cb8239e64ce0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 f39468b9-ad94-4e51-9ace-040a4d77d08f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF561;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h3B8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #318 aa463a63-f8a4-421a-bf63-1c9bff760c50)");
unit.assert_eq16(16'h1241, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #318 4109b074-2ec7-42ca-922f-8833414876c7)");
unit.assert_eq16(16'h3B63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #318 2631ab9b-02b6-47ce-82e2-0cdbf57dfe4d)");
unit.assert_eq16(16'h30AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 5f3fde60-02f5-498a-baff-04b6b19224d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 4b2a70ab-91ae-4688-a1af-7a6d35e5fb7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 55d10175-f4ab-42c2-85f6-9fc5ffdaa9cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 192e34aa-ec0a-49ae-9d50-0c1a9421e98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 0accae57-3169-462f-9b3f-182b744075c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 ef773389-8da5-4a7d-8dc3-d00fda8ee778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 eb5ec9fc-c407-4f15-9ec9-9257dd1e8f64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5BCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h703B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h5BCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #319 3128f4e6-039b-4366-81bf-560945e2e9a2)");
unit.assert_eq16(16'hD067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #319 cbee73c4-fafa-420a-97eb-4feaf68ce78f)");
unit.assert_eq16(16'h9F8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #319 b063d6d4-4a35-4fff-baf4-c57a26673adf)");
unit.assert_eq16(16'h703B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 c1918ab2-d6b2-4e29-91f1-6f1c8150ce1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 0922bf64-2381-4232-ab4e-817c9d40b8d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 6d032ee8-2ab9-43be-9f91-054e8faecafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 8e75beb1-6227-40af-9b42-dfe153ba873a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 e0a355e2-2e24-4979-9a49-303cff10dc6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 20bfecea-168c-4350-8574-5d885933f13c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 798c4626-c07e-42d0-92fb-bbe9ccc519b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h969E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE48F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8251;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h18B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #320 e3f473ea-af25-4522-b274-5ba6b4632ab9)");
unit.assert_eq16(16'hDF0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #320 733ca8bf-e98d-441e-91dc-19b0c2dded8b)");
unit.assert_eq16(16'hE48F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #320 d40fbf14-676b-4a4f-af1a-b4944a59dd58)");
unit.assert_eq16(16'h8251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 32ba49cb-e0d8-46d6-b4c2-725e764b85cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 572b15ee-a912-4e11-8d23-148d1b898515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 5faff71a-0251-462c-988a-0dabe219518d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 14141371-72a1-48c3-804b-2caf9ae32930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 6bff2bd3-d787-4668-b5bb-012605b2c4fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 5e233380-a996-4d36-b89f-edebc9c7bf47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 709f1d0e-e96d-411b-9e4b-c1cd31287677)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h439C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD9AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'hE3C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #321 a09cf071-35fa-491a-bdc6-350b97021bb0)");
unit.assert_eq16(16'h9C97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #321 9ae25a88-fbd0-43f1-a74e-989cfb8fa788)");
unit.assert_eq16(16'h439C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #321 072caba5-a5d8-4ded-996f-b5db6fc83d6c)");
unit.assert_eq16(16'hD9AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 e6b9d303-31cd-4aae-9566-cd3461698e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 f17d8ee1-f994-4e5e-9793-50e006afe073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 ce9588e8-b5ae-4ea8-b3d4-937b1156437e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 a2b90b57-34a6-43e2-916b-ab47c19a900e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 e50e938e-6167-4ee0-b257-0b3cffac52ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 b2b8d02a-b367-4027-9ab2-df85144d0a92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 51f98ee3-be9f-445a-a397-a78ea659cef4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1F76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD188;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h0F88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #322 9fa0f2bb-5221-47e8-b8ad-fe0103da534c)");
unit.assert_eq16(16'h139A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #322 25be4251-e748-45ad-951d-0d06337f81af)");
unit.assert_eq16(16'hD188, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #322 a54baf73-1fc0-4d97-83e1-60d73c086ee6)");
unit.assert_eq16(16'h1598, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 24ef26f1-1452-46da-9d5a-e4a95c1595e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 a688b8be-ae53-4914-a03e-7a2f01befd74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 a8aad353-b931-404c-a0d0-9c31be9ea3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 c9ecdadb-f65a-47bb-9d8f-199dec259813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 82fbe386-f28a-4946-a746-05a05c4bbb33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 2fcb9b4f-1884-4174-8131-79695442c628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 1303462d-5df2-4c76-a984-8be6f611eb66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hACF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA230;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF378;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h677B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'hACF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #323 dcae0d46-49ab-4942-a4ff-a5a8785ed187)");
unit.assert_eq16(16'h8CF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #323 4920bb60-448e-4b5c-8d46-4b2adef50d7c)");
unit.assert_eq16(16'hF378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #323 2972a4a7-a0f4-4fa3-bba3-7c6d97807d50)");
unit.assert_eq16(16'h677B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 ada5e68e-b631-4494-90c7-fe452e4c752f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 1f91cade-1795-4138-8daa-8c337a23d2e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 9ffcced2-017c-40c5-a967-2acb4927da23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 7aa6279f-3e0c-4eb3-8efd-b5712e1fe1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 74f6052c-8ce6-4d2a-90a1-19d5ed7345cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 43f625dd-09e7-4f9e-ab42-0adfaed60b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 c1eaaf0c-4465-453e-b8fc-e6ff31fea8f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6499;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h21EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h12D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h6499, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #324 05acc1da-a483-49e6-bcd1-ce7c25ae62fd)");
unit.assert_eq16(16'hA3C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #324 ac316e23-0022-42e4-8cda-522c7f97a22b)");
unit.assert_eq16(16'h12D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #324 fb7633e3-a1ee-4fe1-888c-67f71e2d32fe)");
unit.assert_eq16(16'h7DAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 cd0ea703-a2cd-4501-b3ad-400c5bf9d137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 f6c38340-44d4-40fc-87ea-6a835fc92298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 8b34d496-21b7-4a7d-9e77-76acb69642ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 9d94f9f0-68c1-4e4e-9e4b-c6bebcd30808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 50ce232a-a704-4200-acba-9e335cb6acba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 7bf120ba-b771-4d60-b7a1-6b0b512575c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 3d91109a-90e5-473d-87a1-02608bef0130)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h29CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h300F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5760;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h29CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #325 870ea201-cf0f-4282-bf3c-555b496cbf8a)");
unit.assert_eq16(16'hD278, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #325 155f1139-03ac-43a5-815e-c3cdbfa41808)");
unit.assert_eq16(16'h5760, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #325 e7983101-6c09-4531-83ae-ba32ed67878a)");
unit.assert_eq16(16'hD3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 413a369e-dcf7-430a-9f74-d5a2f0df360b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 ec264f5b-fef3-43de-acce-9473be3fad8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 2f5580e4-2ba6-425e-8964-3c95e44939d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 3929e922-ab31-4bb6-a24f-0e65ee194617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 4e81018b-afe5-4a15-a45c-c600bfdf8d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 93d55f0f-65f5-4002-b971-b1fd1f18ffe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 d2910795-1529-4a12-8eb3-6563081df272)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE865;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1DD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF048;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'hE865, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #326 6428b1f0-aa69-45bf-8a99-c2b6ead4b3d5)");
unit.assert_eq16(16'h03E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #326 c205b1e1-72b1-4c7a-8c9e-3a754491fb8e)");
unit.assert_eq16(16'h1DD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #326 8b794244-438a-41c8-bdf5-cc476f734af3)");
unit.assert_eq16(16'hF048, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 b38d5290-52f8-4134-95d8-39bc9cd9b5e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 e1c23921-2d64-46ec-b8f9-8fe3efdf19d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 7f61e9a7-1500-4fb7-b0b6-d028c2f92de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 9f77cf0b-cd13-4c87-89c0-f68c2e1b44ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 da26f7ce-6613-4f9e-8f81-2b962c74c609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 5b5f420a-5ea9-4b9b-b560-7ec48e1f6fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 830f137d-d5a5-4cc8-a4e9-b35a027f7cc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5213;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3CD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD39A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h5213, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #327 e54cb4df-c3c3-4469-8586-9a5802a00039)");
unit.assert_eq16(16'h4AF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #327 aa5dd749-0e0e-4a1d-8b74-37961314f9dd)");
unit.assert_eq16(16'hD39A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #327 f8f8be2f-4997-4445-b746-65fc591c61e0)");
unit.assert_eq16(16'h7E8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 0436ed7e-6d61-48a5-a7c7-0bb471e2a9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 4efc6220-339a-443b-a203-144aa1bd1a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 3c2a6c0a-87d7-4559-91a7-818ef173b088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 adb51bad-d8f3-458e-b2e9-fa44a0b5f1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 7e3d6a54-0131-48df-b831-eb21e814e615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 5117339e-4d34-42eb-a572-e1563ee14716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 85be9c42-0586-48da-a204-99dbb29da5a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE395;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2ADF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA565;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'hE395, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #328 5942a31c-8366-4e61-8552-0e4c55dc5dcf)");
unit.assert_eq16(16'hD822, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #328 391d4168-2016-4d6e-bd98-64be43089dff)");
unit.assert_eq16(16'hB2C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #328 04a2b36d-1b96-4479-87e8-c9383908ea11)");
unit.assert_eq16(16'hA565, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 d475128a-a8c1-40e5-a34c-fb3269c75373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 1d660b32-68b7-408e-838d-2f6cb3f7683c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 78f3a70e-795d-4a0a-9dee-63cea774afa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 cf250985-2600-4daa-bb22-d525de26a1ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 1ecc0bf3-e53a-4cc4-9767-9c0e58711393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 815dd901-c366-4a68-8358-6cfc7a7b2465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 45644a6d-aac0-4bfe-b962-5a6787ecd6e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h177D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7DAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h177D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #329 a8f9a087-2951-42a2-ad92-00e4e625aaa5)");
unit.assert_eq16(16'hADBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #329 65b280a5-045e-4641-bf17-2b059c35e0b6)");
unit.assert_eq16(16'h7D89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #329 48e694fb-738f-41c6-9c45-e2e0ba38d080)");
unit.assert_eq16(16'hDA8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 7846be36-69ad-49cb-af0b-b9fe48990b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 853eb1c2-7ed1-4f39-bba9-1e50df497c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 1e832e4f-1591-4f1d-a98c-98dd3e562950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 2b33343d-42c3-4105-ba48-7dfefde42166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 591fbb67-d6e8-4699-8ad5-8f94df6a0363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 5ae23ea3-715d-4e08-9164-59f7fbb65a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 fd33b1a5-8361-4c85-96d5-42032188e93e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2EFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6830;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h5F72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #330 323401c8-9b72-4fb4-9463-ffda49f6faf6)");
unit.assert_eq16(16'h812F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #330 ad25ce1e-541b-4f2e-922f-8ea705bfaab8)");
unit.assert_eq16(16'h2EFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #330 4bbff5de-d68c-42ab-b97f-912dda708640)");
unit.assert_eq16(16'h6830, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 444fd3f6-35c2-4d73-9393-5d8e42f56d39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 c7f17775-fc59-4434-96dd-e45e942d95c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 3ee0c055-662f-4025-8d25-e0701bb2097b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 692d789e-3da7-413d-bd37-f79991946718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 7fba62d3-e839-4e8c-9c6c-62612f6af030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 e1b4bd03-abf0-4612-a85d-5c2a44bf9eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 5f4c6109-dde3-479a-852b-db3bd8fda8d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD396;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC3DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'hD396, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #331 23eb0e83-6d6b-4b30-b454-107c4c7757ce)");
unit.assert_eq16(16'hCF6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #331 17f34deb-7ca2-4b2c-b060-80bea4777886)");
unit.assert_eq16(16'h4C39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #331 ce5856ec-bca8-44ae-9375-f0c88e8909ab)");
unit.assert_eq16(16'h9E56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 95072363-4ed7-4bbb-9c7b-4352a0c70075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 b7934ea1-1557-4c4f-98f0-a6d37895ee95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 05d92631-3d26-463e-b8ae-816903c3b6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 ae57b155-3e2c-4095-a7b3-3cdfcce913ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 4f4197a8-cae3-4205-a810-38f742c8a648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 004da145-dc4d-4aef-b1fa-68f253eaba88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 3e8b3e7e-b180-42de-9acd-d61ba2c19c63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE378;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'hE378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #332 ab7f022d-e5b1-41d5-a845-4f83d1618ddd)");
unit.assert_eq16(16'h299F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #332 2f8d722c-fa2e-4b0c-b6ab-70ffedd63dfd)");
unit.assert_eq16(16'h6AEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #332 515b6fb8-d935-413e-914a-dfa59e4d15f6)");
unit.assert_eq16(16'hBD72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 f84dc55b-b8ea-418b-8d91-c2f2c40555e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 dc6da12c-1eeb-4c85-ba32-a1c683a0e1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 3e1b86b9-07af-44bd-b977-6124514996e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 9c1f046d-1e57-4ec3-bf31-1d4880553673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 73ac12d6-abb1-443b-b33b-6242ec20b30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 8843616b-8a8a-4111-9bf7-8224fbd0648e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 1c929259-769a-4f77-b8dc-47ac2146d8c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA390;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2E9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'hA390, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #333 cbf3c505-c5dc-4558-81e2-e60da3ec9dc0)");
unit.assert_eq16(16'hBC62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #333 d599b879-d0dd-4af1-b237-44f3cd749440)");
unit.assert_eq16(16'h7C84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #333 e41d7aa7-35f5-4a42-bb9a-901be9b9c843)");
unit.assert_eq16(16'h1C35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 27edebb7-11a5-4644-ad85-04888e5aa637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 16bb6ba3-d633-4327-b868-b25e7f185ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 22afc215-f9e4-413d-9463-fac62f025993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 cbefb95d-6797-402a-8ea0-7e6ba5729ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 4f474fae-5491-4091-aa6b-f23d23220418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 8e858259-0cde-4d6f-bfd9-a673598c0093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 40fc3a52-75d8-440a-8425-dd42b0539087)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB273;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD865;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA2DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'hB273, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #334 8c39e438-de8e-4bca-8f53-379b79d84d89)");
unit.assert_eq16(16'hAA71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #334 708ba715-6589-4c57-a747-3b4c14f783b2)");
unit.assert_eq16(16'hA2DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #334 37eed7af-7e21-4dd0-a3aa-2d02c58ee07e)");
unit.assert_eq16(16'h3E90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 178009a6-8598-472f-ba71-cddac481c365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 23aa5f31-fb8b-4488-9772-44eb0f8e9d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 f3bd7738-831a-4218-a7c4-7ba233d274d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 6929c8ef-0024-40f5-a312-7ee24936c2f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 a1a5bf57-96eb-4d0e-9267-554f72d9d0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 1c5ec128-1038-405c-bb36-97d3402b33da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 f8d416c9-8a0d-4d95-83f8-7f36c6b8c50f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8989;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB2A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h6F66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #335 e90d4b09-f3a3-4350-8e58-934e7e6c896f)");
unit.assert_eq16(16'h8CEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #335 46276410-0d1e-4070-96a0-306ce4408e51)");
unit.assert_eq16(16'hAA70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #335 813494ec-352e-4a5b-a501-760ec7ac0c25)");
unit.assert_eq16(16'hB2A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 7f886f36-a9a8-41c0-bf40-828d83f9652e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 9d081b74-bbe3-476d-a828-c985136a1ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 b17bd8c9-d00f-4cd9-b096-9f8afe770003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 aacd494d-dcb8-4d87-8875-fb9821f9b961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 c0f9986d-bdab-4e1f-b08c-e1c608ff4607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 7b831f5f-ef6b-4d83-b1a0-11806b733022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 eccd7fda-3cb0-41f6-bcee-98a045984557)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2196;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB22A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'hC0D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #336 fe9dbf11-a92f-44c9-92e8-200057a0cb6d)");
unit.assert_eq16(16'h596D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #336 fd146df6-5ea7-482c-aded-93ba42e06ff1)");
unit.assert_eq16(16'hB22A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #336 a514cea6-69aa-414a-b2e0-fa76e422cfc0)");
unit.assert_eq16(16'hCE08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 60a0d971-be20-4da2-8895-dbb552380f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 abba5b90-6590-4252-95e2-364df5c0715f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 07bcfac6-40d1-4110-8cce-c1f1b096ab50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 a91f6f76-162d-4a5f-8fcd-7322fe28de3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 3e57688c-5e2f-477e-9e1b-a26acab403b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 5fb32aa6-599d-4eb9-9495-f6bd5db69ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 dfa91795-8bc5-409c-be16-e208185eedee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h69B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h05AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA447;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h69B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #337 78e7b09c-3f77-4a31-a84a-3cbb6cd9c5f0)");
unit.assert_eq16(16'hE3EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #337 468b31f6-8152-483e-80c6-ed5142c557a5)");
unit.assert_eq16(16'h5CD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #337 e4ea6c1e-eb6e-4749-a679-9b36372e9f55)");
unit.assert_eq16(16'hA447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 d2e3eecf-6345-4956-8992-ed0bbad43eb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 836fd4a3-4bbc-48a3-94a1-cce2dfd60c06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 0f573a47-1e12-48a0-8c6c-3514d4e25d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 e13ba05f-a6d4-4f15-95b0-63da2776b5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 33d3cb20-050f-43bd-a158-ffafd60d5eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 eb5a7b4d-d2dd-49ff-ae4a-90c959fb8bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 5400dd3a-6c73-4c51-9380-3b3545b77fed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7AE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h33B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #338 3588c55c-9690-4484-b5e5-7d47e06718da)");
unit.assert_eq16(16'h9CA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #338 fa7925f1-d1ff-43a3-b13e-206a946c03dd)");
unit.assert_eq16(16'h8E76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #338 5b5f04a3-f7d2-4ee8-afbc-478db2b4a051)");
unit.assert_eq16(16'h85B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 83e31857-d479-48cb-ba3c-a5f5b68a0a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 9b465910-ff06-4936-ad51-074ab7a6544c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 ee89aade-5d92-4506-959b-64c534780888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 18e02742-ab27-4cc4-b797-7faf07baa5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 6951cceb-51f0-4d45-bb7b-5263adcf309e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 403bb271-ac7a-45b9-ace4-87a3f32d81f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 5dbc80c9-a241-4bc4-9aee-761a5cc57a61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5999;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h818C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC772;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h9F7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #339 8ab5706c-d951-4ffc-a5c5-705def9c64a3)");
unit.assert_eq16(16'h66A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #339 75558540-6351-42f4-89ad-5abd38a21a01)");
unit.assert_eq16(16'h818C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #339 3369ee46-20f8-4fee-b324-b572beba03d9)");
unit.assert_eq16(16'hC772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 ba1c139c-dfe9-47d2-83ad-fb0d9a64a9aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 254e6778-62b9-4056-809f-d53faab3741a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 513dd6d6-dc6a-4f13-8a15-a7004da4b19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 21cbcca5-1391-46fe-9264-ea532efb0b79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 5673c453-dbfe-4698-bedb-a4c4db94ba92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 896f4ab5-9236-484d-86ed-6fc8fac3ad42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 c58390c4-ea47-422d-b224-b898de754085)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF319;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF864;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h1E52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #340 71a09fd6-2834-43c0-bf7f-d6ff2888a85f)");
unit.assert_eq16(16'hCDD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #340 d2262aaf-c2b5-430a-b713-efa77088a6bb)");
unit.assert_eq16(16'hF864, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #340 7800c100-52b0-42d4-8d60-0170ddc8b722)");
unit.assert_eq16(16'h9A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 cd307325-5fc9-49df-98f8-aac8864a0063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 cf621f6f-5d9c-4b54-a0a8-1bb84d18b0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 b5b4687e-7aa6-4fff-8f29-45c5445c8c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 7a472eb3-a713-4a11-8d39-8524cf2d4044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 c68d6977-c711-4043-8754-f92bca29d688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 949cebec-a4b0-491e-ab5c-e38e8066fe86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 6bc319ac-39b7-458a-8fdf-e74c515a40d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDDBD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB606;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7AF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h30CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #341 e3467b7b-fe61-4974-846b-1ce91a384f47)");
unit.assert_eq16(16'h645B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #341 c7080559-cec1-4b0e-b33a-ce9cf59b5a5a)");
unit.assert_eq16(16'hB606, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #341 550006ce-e643-4e42-bd3f-8eda23977205)");
unit.assert_eq16(16'h7AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 770497f9-8570-4e27-827b-00cdc9d142ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 714f8710-aaa9-497f-ab61-b96677ee89cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 a1624d42-5dcb-4724-abb7-40878ae643b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 44820673-671e-44fe-aaaf-f0c010813dc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 4891bb35-dab6-4845-9799-ce69581875c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 2ea461d8-b265-40f9-8f76-f74ca16e4e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 5c81d538-3a15-465a-b528-97ad219cdf59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD39B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h47F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5B2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h25CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'hD39B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #342 0ae13762-fe45-4925-8e2c-39ddcac5c729)");
unit.assert_eq16(16'h6E82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #342 9ce19276-4b98-4094-9240-0f334a06abee)");
unit.assert_eq16(16'h5B2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #342 c79eaaff-640c-4af5-a50d-e4673f8d7b6e)");
unit.assert_eq16(16'h25CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 98dbeca0-8f67-4aa9-93e2-7c25c2d96738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 e86eba84-a1cc-4e7a-b573-4d4ab77bca08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 0f8139a5-2d28-4f3a-82f3-b98bdc1621d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 472640c6-add5-453f-963f-2f9cec42b714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 baa9857a-c000-44d3-a048-45c73e51ee0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 9fc80247-2c6a-40f7-a65d-edbe73a7548a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 ac132172-1ad9-4a53-93b6-e7301b1b1456)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h58DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB4B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h243B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h58DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #343 9fc1bb6d-1ed9-484e-83ad-e9b72027f082)");
unit.assert_eq16(16'hC771, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #343 fe3b7d31-7067-4360-a360-71295f0022ed)");
unit.assert_eq16(16'hB4B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #343 73a59e50-2e06-481e-8ed8-781e9f23f280)");
unit.assert_eq16(16'h243B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 6e108e12-7c77-4f4f-b37b-18dc2da0e133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 3ec5c2fc-09bc-42ce-9344-ffa8c1f03d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 64e2f498-b713-4927-9d5b-64c733ddd2d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 a6ad42ad-ca00-4b39-b9bc-4910afabf5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 a9c44092-19b1-4c40-b86c-d3d0b036241c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 2a116c1d-7ce6-44ca-9a78-43fb93c81a26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 2ad48b3a-7203-4146-8295-d7d20a0e53b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9121;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9D33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'hAE5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #344 96bc92ae-194e-4f2d-85b6-984b378d3361)");
unit.assert_eq16(16'hD8E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #344 c0d707ce-7176-4869-bbc0-716f79a1309b)");
unit.assert_eq16(16'h9121, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #344 784ab1d9-8964-49c2-9d07-68a854c4c2a7)");
unit.assert_eq16(16'h9D33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 cb691800-144b-4a02-bcca-8f0f42955aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 35967372-e982-4fff-b895-fa9589bd7470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 8a807da1-e062-468c-9061-cef993c64348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 67829ee8-6ebf-42aa-893b-a6d5069d198b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 af85cd09-a19b-4bb6-9d24-f5744273cb5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 f9ba4e54-cfb6-40ea-9792-5ce4a0fd3539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 007a62a1-cf6d-452c-9143-25575f5cd382)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h13D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h703B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h16AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #345 67488f0a-545e-4230-90a6-b83b71a5a643)");
unit.assert_eq16(16'h1BD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #345 867b0be2-a255-4ea3-a8ac-4ec1669f1525)");
unit.assert_eq16(16'h703B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #345 f79095d9-6b15-4cca-8138-81457e066388)");
unit.assert_eq16(16'hF3A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 ef9b271e-39e9-4f4a-a532-79661f851a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 d1e68e14-4ff9-40d6-8ca4-048834415a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 9413c67d-133c-40bb-bf9d-877cd5772061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 c89486a0-c70c-4ec4-9c54-2fd1cc90d80b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 88c631c5-6c6c-48e9-a7d2-a88467ef7511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 8ae2f0c0-4718-4ef1-9240-d9bd6d3f1f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 915ec152-9b85-4be9-83db-ae6949945aea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h149C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3462;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0171;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBF29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h149C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #346 dea283fd-896b-48f7-a54b-5a5de2fef306)");
unit.assert_eq16(16'hE6EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #346 acb85248-654d-4ed6-9328-51b8807cd547)");
unit.assert_eq16(16'h0171, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #346 c553bd52-dafb-42bf-ab03-946d19e0334c)");
unit.assert_eq16(16'hBF29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 2a459cde-91bc-40e0-83f0-a5fc23d8d03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 2bc3c359-e47e-401a-9e3f-947e3dddb11b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 87c059a1-cee5-420f-912a-9eeaf3686b9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 724f3fc9-c913-49d4-b03e-05f808418f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 5d52a0fb-5bb6-43be-94bd-4ab7760dfc3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 9025211b-ce5f-4e81-9f46-193745e4eaf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 5191c733-ca3e-4308-989e-fcc0434831e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA225;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h723A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3186;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'hA225, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #347 aa1e38de-61d0-4ac9-bc59-52689be1697f)");
unit.assert_eq16(16'hFB3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #347 32a5a957-2e65-41cd-bab0-bb458ddaf4e5)");
unit.assert_eq16(16'h2DB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #347 0e4319e0-6132-4f49-83e4-164f750302ca)");
unit.assert_eq16(16'h3186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 d5697472-56b5-4c75-93ab-58cbe3bf4e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 d29035dc-41ce-4bc0-b012-1b3be7257c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 178df86b-598e-4215-b42b-1a5bd69fcee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 70849ddf-d390-434f-8ec2-251f088e3777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 abcfae1d-5474-45a7-8e7b-139595774cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 b9208748-d248-49ae-8bc0-37d0fb78345c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 978c0693-8ee8-4b80-8591-d000d090fefe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDFB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h829B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA551;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'hDFB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #348 999276b3-226f-4f92-84bc-2b1b0cc8ce77)");
unit.assert_eq16(16'h6315, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #348 b9cddf77-756a-461d-b52e-f3e0cdf4b6b6)");
unit.assert_eq16(16'h30A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #348 70bbde36-ae01-411b-9197-a52a9148ac66)");
unit.assert_eq16(16'hA551, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 bd533b97-aa31-422a-848c-4dad788858ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 6dc3b82c-bc8d-4ee5-8de9-3e58690e8971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 76a71314-fe67-4362-946e-dc0c30d06443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 23e26f81-e9e7-40ae-ac72-f522d993595c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 d7c6d6df-e712-4e1e-9a30-cafed7c88d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 88c7acda-9c10-4b39-af49-70c520d9cf96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 33692c90-b8d0-4251-8294-63955ddf9c0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'hFF02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #349 09bca529-0b9c-49a1-863f-c2a174bd9ccb)");
unit.assert_eq16(16'hD82C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #349 9eabc7cd-4957-4937-b0b7-6cd414de6fee)");
unit.assert_eq16(16'h0E06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #349 01eb940f-127a-45de-8786-16960827b7db)");
unit.assert_eq16(16'hDF9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 5831d971-0746-47c5-9536-69568a3adb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 4edd7fbb-6f92-428d-9d6a-25b2183af5df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 73401c25-6a23-4ebb-bca7-582f87c99a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 5ee577df-c0e7-412a-9303-56e510027711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 ae2c2c5c-54d4-48cd-83d7-7de8fcb99a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 a4ae1771-8f72-44bc-8992-416350134a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 663f6de7-a256-48d9-a132-a4681b55b95b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h08CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4017;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h29D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCEBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h08CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #350 1c886c4e-eb08-4bcd-821c-64b3ecc5b32c)");
unit.assert_eq16(16'h491D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #350 75587c8d-1aff-4efb-8fa6-a6f8a165e77c)");
unit.assert_eq16(16'h29D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #350 5d74f354-1998-4467-bfb2-d23cca18249b)");
unit.assert_eq16(16'hCEBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 d0b63987-3d00-420c-ba4a-6130d9ca0aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 b40f758f-6158-412b-9a52-509e43d4adb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 7d8ce5ff-3eb6-47ad-82a4-08173043ff46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 599a7501-a2db-4a82-936a-0b7916dc6f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 f368b3d8-6064-4eb5-a746-5799f9086978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 d2146f83-0941-423f-8917-44c0cc9e14a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 fd12c7d3-dc64-4871-86a5-56d410fa1966)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2E0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h2E0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #351 4d8d5a4e-2e56-4305-be43-f54a6f661a90)");
unit.assert_eq16(16'h0D1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #351 21d7ba40-57ac-43ee-8c7e-4a64e8c122f3)");
unit.assert_eq16(16'h2D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #351 7a363b2d-d460-4b31-9d7f-2bd7a0f6690e)");
unit.assert_eq16(16'h9F95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 9ad78de7-b24f-4fbe-b7d8-5f3169f7a9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 3a0faff9-29c9-4013-bcf9-d693a6ef2abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 9b02bc93-d90a-4b7d-be9a-7c1a289e45c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 7474995b-f6c5-472a-bf0b-86ca9b94e183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 790c1f25-0700-4d5e-b21f-707bc2d0a342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 7f6337b8-6f2f-4901-be33-6ac84bd59465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 6aa000c9-ebb9-4ef1-bf23-12602b6b3fc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9286;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h780D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h9286, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #352 3a811d8d-d35f-43f0-af96-4266ec8c05e9)");
unit.assert_eq16(16'h5BD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #352 251863ad-ffef-4d63-be49-039e89447f8c)");
unit.assert_eq16(16'hDA45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #352 325c21d1-2cb7-4903-9482-fd2ce7104432)");
unit.assert_eq16(16'hF1B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 7574fb70-fa95-4a37-9be9-c16403562436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 b21ce947-238f-4acc-8757-c9ef979222c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 28e4fed9-b2e6-48b6-a27c-4b49d4de4bb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 f13e13d1-dea5-4572-8361-897bb4797f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 bbdbcf2d-b50f-4463-97f6-24832851712b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 6d45626f-6d0e-474c-89e4-70ff4c5ecfc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 b5050519-8349-4688-a412-cf6eadc89caf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9419;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD24A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h16F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC7DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h9419, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #353 9eca7ac3-4751-48c1-b2ba-8fc412c01830)");
unit.assert_eq16(16'h1B2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #353 792e94c7-e75a-48c9-95c6-fdcccc1fec8f)");
unit.assert_eq16(16'h16F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #353 1034ba6c-d81d-4929-be70-203e99d5cc04)");
unit.assert_eq16(16'hC7DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 bed3a7ef-3bf6-4676-ba75-8569c303964c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 5a2b6692-05c9-41e1-8be5-20e29cb13468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 836afcaf-4ca4-4cf3-a9d2-780a47f2500c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 221e349b-bd9d-44ad-8f47-9e52428aee43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 49a2f100-75b4-4550-8896-a1d34457bfc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 d01f1bec-a2c8-4659-841b-8bbbfb1af0b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 7f96c108-f4ff-42cf-94e2-40541b067540)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF68B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h5345, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #354 0a3106e4-3574-48da-aa17-7bd5325f3622)");
unit.assert_eq16(16'h69AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #354 a643709b-7860-4b52-915b-fc0244d01b32)");
unit.assert_eq16(16'hFFBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #354 2c656171-95fb-4060-9d2b-ed63e2193478)");
unit.assert_eq16(16'hFFF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 b0801e0b-440c-4889-a364-db1bcfaf41c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 0646af3b-234e-4e73-8dac-9d2e3ad04d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 1cdb0570-23a5-4b82-b7b6-4f839faa6c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 cf04b939-adb8-45fe-99e9-e2dc9a4683f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 998e5f49-a9ef-4891-948c-baad2eaebfb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 d6c18c6a-b24e-4b0b-8482-66577b0b7ea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 27e84546-e6c5-4984-ad1e-6c87e66aafb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h44B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC518;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAAD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h44B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #355 5837a847-7c2c-4756-8856-580f219fd0ad)");
unit.assert_eq16(16'h5BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #355 06f52bb5-2df5-405e-95cb-6ab8ae1b8280)");
unit.assert_eq16(16'hAAD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #355 804fc0d9-4dac-4a9b-970c-381b49431c32)");
unit.assert_eq16(16'hA7A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 987b9307-650d-4be2-8350-8b67b49f49d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 f512eab6-fd51-4151-8735-654e930f741d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 c8a6044e-6aec-47af-832c-4c87cb2d337e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 673bead7-6f5d-4536-93f5-22da9b8cd525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 e4e66f3c-65bd-4153-8e0a-5acff377349b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 b875972d-006f-4ff5-bfe8-1a90b39127f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 ad0e6d1d-d143-4d77-a7f0-f96bb182c7bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4452;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC47F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE329;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA07B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h4452, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #356 8202e27a-769b-4a74-9352-7ab6482ec871)");
unit.assert_eq16(16'h75AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #356 41dbd1d2-1a86-4b1e-8cf6-b8b054173005)");
unit.assert_eq16(16'hE329, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #356 b9fae800-2f55-4267-aebc-bfc1381ae74c)");
unit.assert_eq16(16'hA07B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 ec6168ca-a17b-4182-8a21-5e282e325704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 cccfc85b-b17e-40f6-9cbf-131d3bb60541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 fca9d258-17ab-47e8-9290-b1d9d61e90a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 5aaf9d15-3275-4318-a559-7758b4ff235e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 84efb56c-d4d7-4c11-8c84-a3e2368bad69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 34bdf28a-6757-4585-ba7a-e3eadc7be88b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 f7cc4407-8a27-4011-9ca9-7061025ca317)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEB64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF288;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB901;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h12C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'hEB64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #357 387c30b5-0d48-4b3f-877c-95c77ce0b095)");
unit.assert_eq16(16'hF2C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #357 4ea17564-ab7b-439e-ad55-3abced8c359e)");
unit.assert_eq16(16'hB901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #357 4edf0751-8dea-4ba9-94cd-3697fe992570)");
unit.assert_eq16(16'h12C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 419c616a-846f-41f8-a7dc-92ebe43e154f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 a6fd51c8-3a98-494b-8eda-e6033c0b9bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 9cec524b-0605-44da-8f54-da22844706cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 66b5f3a8-7fbd-4beb-bcff-5405bde9b6e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 3792332f-d534-4391-8fc0-b013f9756b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 d334fa6e-37ac-421c-b432-6fe01c89087d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 d637f9e4-b891-4a64-85b4-1cca2850361c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h85AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hED8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC580;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h85AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #358 00516bb6-03f4-4204-bcb4-688301205ce6)");
unit.assert_eq16(16'hDC61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #358 69c62299-8f68-4c66-a1fd-c07dfea7b8df)");
unit.assert_eq16(16'hED8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #358 619b67e5-5fd2-4c2f-b94f-371a96781345)");
unit.assert_eq16(16'hC580, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 ab68b812-2b1e-4f63-966d-caed013d4c25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 b4a92f64-09b6-4166-be9f-7f887d01ddc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 5fbb6dbd-28f8-4288-ba2e-c89d72123d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 511bd12a-f86d-480d-b78d-2b712e08dc3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 d54cf587-b13d-4ced-a36c-a1050fb13591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 72de3f2f-dffc-44be-886e-a240dacef908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 da9ddfb8-a83e-49f3-871a-4e93d35414cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDCE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h696C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h96C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h771E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'hDCE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #359 074842e6-0adc-4712-813f-255bfa880cf6)");
unit.assert_eq16(16'h6F03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #359 3016d808-58c9-46c4-91d9-0fd0c17f0ad6)");
unit.assert_eq16(16'h96C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #359 63dda1e6-e3ca-4b3b-9c35-e7f4958e1f2e)");
unit.assert_eq16(16'h771E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 88911fbc-1df9-4f3e-aedc-5890b3433f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 2c32f2c9-f534-43a6-95b8-b8e04046f3dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 6cc15a56-25c2-4827-a18d-fe39c8c49022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 2d5d990a-95ae-499b-a630-a263b9e40a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 ccd9d5c5-e6c1-421b-9fd7-5b0251fa8bce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 bec1828c-4d36-4e49-bf5a-a0f46d910f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 3d29b2cb-d937-4732-a8fa-9d4a132f9853)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h79F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h285C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h43E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h2C69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #360 d3dfd1b0-40fa-45b4-9262-9656c707d6f7)");
unit.assert_eq16(16'hB0D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #360 e2c337e7-d13d-4123-b73d-ebde891554c0)");
unit.assert_eq16(16'h285C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #360 2d680633-e3b0-4223-8716-58169609439c)");
unit.assert_eq16(16'h43E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 20a5b5ce-ac9f-4583-a87b-71c856d42216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 35363b33-eea9-4649-9682-912e27ea1754)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 784a9047-2411-416d-a7ac-4c54a8d858bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 a4794a40-ca95-46d6-8990-ced64ea50923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 208a842b-bd50-495f-82a2-3c7607e98ab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 117a99a1-7aa9-44d1-944b-f5b1aee830d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 3c055392-29c6-4fd0-a128-870629b383fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC70F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3A6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2ABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'hC70F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #361 82e63d10-d932-4d69-ab8b-879e320ba1eb)");
unit.assert_eq16(16'hEFBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #361 4a0fa980-2441-434b-8a68-a78efadcfd48)");
unit.assert_eq16(16'h2ABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #361 840fb530-a091-4d0b-ba29-652ed35bb6bc)");
unit.assert_eq16(16'h1792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 55af6c10-9fe6-435f-95c2-48d0a68dd204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 4cde0d9b-b8ac-45ed-93a8-e7aaa32898a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 ecc72d31-7fc4-48ef-af17-f27b0ef85f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 d6c9997b-24c1-43cb-bb8f-b07c442308fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 59dfd962-72ce-4a1f-b2d3-a47d5938a6a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 49953a27-c769-48ad-8dbe-82078a600fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 f5239f43-825c-446a-a02c-613435da5141)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD034;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h509A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC92E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'hD034, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #362 a2702578-e324-4b78-959b-f14aa015b764)");
unit.assert_eq16(16'h904B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #362 dcf4b313-0bed-4371-842d-37ad18ab0551)");
unit.assert_eq16(16'hC92E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #362 7dc98a61-0dea-4775-98b3-7f63cf5db950)");
unit.assert_eq16(16'h72F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 d8edae23-d39d-4988-84ba-7d72e1aa6470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 eabcca1c-5716-4ab8-abb9-81a400c7f652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 d480a627-79a9-4679-aa45-1177c08463d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 24be64d5-6885-47f0-9123-dd8e479b9d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 242bb9b3-6f94-4633-9fc7-a13d4be31768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 aa611cde-b870-4eaf-b8c3-fafa2979b81c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 f9c7c2ae-3d29-420f-80c3-baf17a5f6b58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h072D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9541;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9097;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAE18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h072D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #363 81a3d2b3-f640-4e10-b52b-cc71e969f34b)");
unit.assert_eq16(16'h2921, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #363 d944039d-61cd-475e-9e8e-8759ffbd2de0)");
unit.assert_eq16(16'h9097, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #363 831467b7-5814-40f3-a625-76e85555db22)");
unit.assert_eq16(16'hAE18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 3d135b79-bb64-44a4-850b-9b45ee8b01fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 5b8db80a-527f-4970-b51c-cc5fcd99a184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 3ab8def3-0f0b-4ec8-a63d-066c70780a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 fb879750-4f22-4ed5-baaa-71182dc8397e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 c8034577-501c-47ae-ab26-399de0f223d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 b6a0ba98-7f69-4ebc-9013-6f6dc6731f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 d989b998-54ba-4088-8e77-b3515bcdb34d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h69A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC0F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE6F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h69A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #364 33a73e6b-852f-4bf1-b579-1d9a3bcc634a)");
unit.assert_eq16(16'h8805, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #364 e701da60-86b6-4148-ae9f-9808d2b21731)");
unit.assert_eq16(16'hBB4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #364 c5a25f64-fc27-48e5-8c58-2b4680b601e0)");
unit.assert_eq16(16'hE6F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 1a87aea5-54bb-4363-8200-41715ae0f8b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 e8ab2b3a-ef4b-4b87-84bd-c265790e82f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 1f8478a4-bb72-45cf-b1ff-e5be46159565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 a6f8ed2d-1b2a-493f-9849-a40899aa5d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 06197c05-21b0-4555-b472-a7835c8db24d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 2602fa60-a908-4563-bffe-49a2b2ad8850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 a0c0df4c-7a8e-4f9f-943a-b120b557df74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1C0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h1C0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #365 fef622b4-b002-48b0-8ca2-f184da1d3140)");
unit.assert_eq16(16'h69BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #365 e8b5b8c7-9387-4389-9325-3de931164fb3)");
unit.assert_eq16(16'hDB0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #365 0c3289de-cbd3-4581-b643-8408e084b4d2)");
unit.assert_eq16(16'h2C38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 92eb79c4-be77-4451-98ec-c49d263f7be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 38ce56f8-712e-4b00-aa65-4ff445381ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 a877d28d-5075-479a-b691-ade0085c49f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 d9fe2d87-0e08-4a19-aa99-6d35cfeaa1d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 0c095e9c-85a2-461c-bf63-930c8e33c522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 0ea90674-eedb-4200-a0c7-5630c6c18720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 ca43b825-2b03-4430-b37f-d0fde2eb9230)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA60C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA742;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h12E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #366 2c217da5-d2b2-42f8-8050-f5c8c0f2468a)");
unit.assert_eq16(16'h0771, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #366 85486768-f871-4b73-8508-c5fd164e1b52)");
unit.assert_eq16(16'hA742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #366 1a87af4e-b2f7-4b31-8780-39499fce0456)");
unit.assert_eq16(16'hD4BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 9191b474-d656-41c1-ab6c-110c3d38f6fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 a0cbc3cc-5ed7-499e-9deb-c4a92532e297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 b451ac66-a7c6-49eb-9cdf-87a53b5fbab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 ed1544b2-f22a-445e-9333-6a8dcd25c77a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 5054e483-a466-4a16-9360-1558aad88629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 e87906e2-03b9-426c-bafd-494208d30c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 59d764ab-b4a4-4942-bb0c-778ab7b8f290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC364;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h188E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'hC364, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #367 bd37e826-3dcf-4d3b-b500-8da8476b8b65)");
unit.assert_eq16(16'hBB48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #367 e00bf9b7-ae6d-453c-95da-2bc7fc2b1900)");
unit.assert_eq16(16'h5E22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #367 cb324ebe-966e-4153-84d0-422f987445dd)");
unit.assert_eq16(16'h188E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 43a99126-7271-4269-a08b-eae97bf62548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 5b715a91-23e6-4dc9-b673-918a612e553b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 dc32190a-d8fe-49e4-ba34-ac8e28d69fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 43674594-55f0-4501-87ef-436469310c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 b0f0d712-94cf-4e00-bfdf-172c1138b2da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 00e2e0f1-eaa5-4865-a491-698076ac7b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 5a272701-027d-4c64-b18e-3311269749ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h721A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6E70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5332;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h721A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #368 84755770-3122-4b8b-a106-eef658a4fe7d)");
unit.assert_eq16(16'hB6CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #368 e3a9241d-aea2-419a-b138-2fe4c95ab5c9)");
unit.assert_eq16(16'h5CA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #368 f61d0fa5-dee2-4221-a1ff-9e97d02c6892)");
unit.assert_eq16(16'h5332, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 b96711ee-d41e-479c-a14d-dbd2b0a0d70e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 338fad57-0fde-468d-95b8-196238b09020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 81ac8efa-07d4-49d4-81d5-806af4c3079a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 f4751924-2fdc-4078-93ab-cdec06e3aa1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 16d60d1c-3ec4-4df2-85c6-b8ca325be360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 26404785-c350-4457-8638-2f3323457795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 2f3a3805-0c26-4da2-be13-72f0692d9c90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h80F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7012;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h508D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h80F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #369 b3179c5f-eed8-4376-80fb-0f29b207a589)");
unit.assert_eq16(16'h2307, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #369 f3ae3678-23a8-4f35-a332-c4ae6e7412a4)");
unit.assert_eq16(16'h508D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #369 d8141b48-3268-4101-ace1-c80f96d71de1)");
unit.assert_eq16(16'hCDF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 ed3eb967-c301-486a-a40b-bd0cd306061d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 e291640d-901d-4615-ba6b-72169ae88f33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 22b949a1-318b-46d5-9c53-6000814aa289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 8752c605-dfd9-43ea-83ed-7b253f81dd3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 075a4d56-eb6f-4ab0-be3b-de19f54b1970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 aa6f21fc-4fbc-477b-9453-703212e0e287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 addd58e3-895f-4352-8587-75422591339d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6CD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h58A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2892;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCCB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h6CD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #370 3eac53fb-fe8a-48e7-b425-cfc0d3d6247c)");
unit.assert_eq16(16'h6BD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #370 79e7bcc7-a75a-4871-8bf4-50a2e0295345)");
unit.assert_eq16(16'h2892, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #370 c5d172bc-98a3-4346-b054-be36a1b541e5)");
unit.assert_eq16(16'hCCB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 64b6227b-1395-49cb-912b-8f71ee32883e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 a0dc8635-4030-4036-8159-876cdd2fcd42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 51049d23-587c-4d94-8659-adb14f9af3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 abc3b003-37e0-49e0-bbd8-afbbc7645a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 765d891a-9e97-452f-8606-b7e3bfe8325d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 efce94ad-ac0b-4ec7-9ec2-7a8d690083be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 f60b94c0-cbc7-4f32-bc8d-3224643ae19a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE53E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6878;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'hE53E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #371 5fe11913-adf8-431a-949d-4f33ac81bec2)");
unit.assert_eq16(16'hF336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #371 ecd0d1a0-d464-46e4-9494-740fff2929d9)");
unit.assert_eq16(16'h6878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #371 a7e5dbab-61c8-41ef-b2de-0cc7ca9b4ece)");
unit.assert_eq16(16'h6BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 27b66e6e-04c2-47af-9829-1c7939a4c376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 4da66dd9-c8ca-40ce-a9c8-ce6f01d3aeee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 f987efc0-9517-4df8-8f5f-af3fe766e710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 3fbc26bc-d370-4746-9e0a-e6fc101f9029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 421dbf57-73a7-4ca2-ae11-8fe975cacef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 b267d91e-2942-45cd-b4c9-cfed0ef05862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 2a194382-b100-42b6-9f1b-18473706d8bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1FF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0DCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB902;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h1FF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #372 6f955c02-27f5-4b3f-b1a5-c1169b353915)");
unit.assert_eq16(16'h6D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #372 e305142f-8d09-475f-b101-da23bbcc76e6)");
unit.assert_eq16(16'h73AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #372 afe82a72-37e3-4fd9-ab2d-189dada58378)");
unit.assert_eq16(16'hB902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 11493aec-f90e-4576-97d7-d0068409e15e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 f91a4210-617b-44df-a0a7-075b084c6046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 1ce02ce3-e725-4a7f-93b7-3f3179857d06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 cdeb3c72-a902-47fe-9a0e-366afa7e2c27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 c96e9581-0ed0-42ad-987c-49b5d6766d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 5e0f0de5-656b-4b05-abef-a84a2fd8080e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 07a5301f-483a-45cf-8ac7-bec270fe8622)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h957F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9369;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'hBF83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #373 25671135-508e-40c8-98db-bbe581b4b066)");
unit.assert_eq16(16'h0C2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #373 fcac4b06-f213-4b75-9097-4fc3373bef2e)");
unit.assert_eq16(16'h9369, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #373 aebb85de-53c9-4fea-8ef3-0163a8b6bd37)");
unit.assert_eq16(16'h3D2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 7f669da0-793f-4d55-9fd6-e69b86e41f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 0b72a234-1bb8-4ee2-bde6-525641a3eb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 5e69060e-03d6-4c6b-854d-1335e0d30e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 e2ce06af-170b-4532-a8ab-4f552fb58803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 54f041e3-067f-4451-9c37-c4c5de7c9593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 a4c5ab7d-0263-4f42-ae15-95f46ca4f113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 c51d4c54-261e-44bc-9ff0-1e136cda496a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCB91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h689D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD2DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'hCB91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #374 27110b8a-9664-4f86-9daf-19820e7b56b8)");
unit.assert_eq16(16'h0DD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #374 9e388fa2-25d2-423e-ad97-935738d672f3)");
unit.assert_eq16(16'hD2DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #374 472d1a9c-ad29-47e7-9eee-2d01d3882f40)");
unit.assert_eq16(16'h9DC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 5c59f627-11da-484a-a813-876c5ae6b15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 7bf7fa40-b8c8-47cf-bc24-6ad5da165262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 b89ec925-ad58-41fd-9230-08a94577b617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 d28f06fe-f7db-4288-926b-78532f3a5573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 3cd75e77-20c2-4778-801d-985db3f3b99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 d85c2c1d-c4c9-4b8c-9d48-5ccef10402b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 05ee02f8-44f1-4917-a021-7f2363a15e4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF50C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'hFFD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #375 695c70d3-99c8-4181-813d-e85d6d633ff7)");
unit.assert_eq16(16'hB171, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #375 69700023-77c1-4881-8c70-04c21ed25c73)");
unit.assert_eq16(16'hC6B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #375 8e65d528-6e08-4fd9-bc4f-e93b535dce8e)");
unit.assert_eq16(16'hF50C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 06286e4c-0c64-41fd-b2db-123e52c216c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 331d4188-dfdd-477d-ba76-91dd36e434ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 e1bfae4f-dd97-45e7-8df5-849f02c313f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 50b743ec-dce1-4ec5-a298-d105b532770b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 b978c827-0cff-4a8f-9984-cb93246da16b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 b5abf221-a67c-431f-961f-104a71e4b686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 56adf91f-9fec-42ea-a404-f4953365189d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h6E04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #376 7322c963-6dc3-4607-92c8-02a6c3fc788d)");
unit.assert_eq16(16'h3E08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #376 fef86b4a-95f5-4de5-92c7-090de51f7316)");
unit.assert_eq16(16'h5CDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #376 d9078ce5-2490-48e6-80a3-198c44103776)");
unit.assert_eq16(16'h97A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 60f44b4b-1ec6-4053-b91a-8c64041464fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 0275f838-2fa5-44da-b0d8-78bab892bbbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 d4099a80-3719-4a63-b732-6f44a8056735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 b5394a65-6d08-4bf6-906b-66b1dc54855e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 9e484b59-3302-4050-aa9c-1f3308c9fedf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 683e67ab-b338-48f6-8316-b6640ce2ee55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 251ece86-6061-4f23-b30b-8afd4707bd2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h20BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4826;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC976;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'h20BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #377 f3f2ed85-6216-4edc-995e-3607a7b94c7e)");
unit.assert_eq16(16'h2DF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #377 a581e7d5-2d78-4f48-aead-73c2ae86522c)");
unit.assert_eq16(16'hE6F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #377 396e22a2-bf29-4216-aa1b-be668bcb5fcf)");
unit.assert_eq16(16'hC976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 42731a95-cb5c-49f8-904b-17ea86c81b2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 e8e31a3f-cabf-4dad-85ff-3481d147fac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 db48a036-e2e7-488b-97fb-32b3ca90ff6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 88b9654c-e858-4783-84e7-f3513323b840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 2c02cee1-f2ae-43aa-9f3f-089ff7d5e486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 2bb72b45-bab8-4331-9a95-51efaf55916d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 50e9ed34-6e45-48d6-b3c5-97d8569f5d09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB6C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7599;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'hB6C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #378 b20b1139-1738-4a7e-af13-7acf31f17f3d)");
unit.assert_eq16(16'hAEDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #378 e3ad31a2-d882-4e71-9a91-225e50675fc0)");
unit.assert_eq16(16'h8FFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #378 811ec301-7048-4d52-a509-7eca79726980)");
unit.assert_eq16(16'h46A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 c6750653-a578-4807-a30d-4c3adfd29f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 23b1df86-cd90-43b5-86c4-e294ebc1e0d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 62414a76-0f79-46ae-8ab7-b57a093d6d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 d40ab5d4-003c-48a3-909d-5aa2080cc38b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 e160bfa4-4202-4ce5-b3a7-7df37f60ba94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 c96b76c5-39fd-4180-b0c8-5f68dfb877e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 379b9e63-a473-474b-9f64-a2222d1b538d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h15C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h684C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h15C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #379 5587ed9d-ecbd-467c-a7ec-98887bce6dac)");
unit.assert_eq16(16'hEC31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #379 af73dc95-0974-4b2c-9b92-567bf90abf39)");
unit.assert_eq16(16'h684C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #379 075120dc-0171-4c78-a226-45e517d466ca)");
unit.assert_eq16(16'h5E09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 527bb297-9e28-41e7-8b68-2dcc3283a102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 a6bbacb2-a738-4854-9874-abc3f0c851e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 720bb306-4d42-474a-84e2-8bb0a9786461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 397e2c5b-262b-429f-a020-09fbda32b406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 025f4247-5ae4-4dd1-a3e4-e31e77cd5a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 d08f887f-b0c4-485e-a74b-f4348500fc7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 4d850298-b168-48bd-b739-e83e1e1028ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA957;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'hA957, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #380 e17785ee-1580-4d46-9909-f95fbbf5b5eb)");
unit.assert_eq16(16'hB83C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #380 c0f1a9d1-33be-4414-986a-bd07bd3b57c6)");
unit.assert_eq16(16'h78FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #380 4fe94670-bd26-42d1-b2e3-dbe47cefd616)");
unit.assert_eq16(16'h32B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 997d7273-a76c-4134-95e4-16766d88323d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 6632d4f0-f631-40f8-bfc8-5c58347adc74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 a4bcb37c-3a78-4211-9877-fcbdfb0d364c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 82381867-22db-4a65-ba46-ebc0e8d68d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 8cd718ba-4ee3-4828-bb8d-17a8c9fb68f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 9cdcec75-9eed-4693-97ed-7b42c10386d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 87a8161d-e86b-4895-841a-a233b038c0ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE518;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD347;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h5D9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #381 fc24dfb3-79aa-40ae-bf9b-0ad0fc154888)");
unit.assert_eq16(16'h353C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #381 1f3e76df-a00b-48e4-ad05-c7ab89a46791)");
unit.assert_eq16(16'h1F8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #381 b3ae1905-3672-4df0-9737-3420c1ebffd2)");
unit.assert_eq16(16'hD347, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 d4f7b587-e9ed-407b-bc5a-59c701f7ec39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 379025f7-9015-44b3-8965-3c99a20b44bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 1ef1087f-7c02-49d1-bdf0-001069c8ef68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 cb286319-87cd-4f26-b2c3-71d190e455d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 240adc59-2da9-473e-873c-583915a9faee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 63b46625-7008-4b44-83ff-6935664750bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 f0c395a4-c6ea-4b4a-a9b9-386cbeb30a75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2602;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD290;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h638F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3798;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'h2602, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #382 f97172eb-1758-4065-928e-0bf0f4889072)");
unit.assert_eq16(16'h6597, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #382 0bfe0bdb-1388-4a08-acf1-a6f9f600331e)");
unit.assert_eq16(16'h638F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #382 69bf6990-f2c5-429d-9fb3-53acbb5c496c)");
unit.assert_eq16(16'h3798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 382b84e1-948d-42cc-a84f-8d07d699fba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 10c2aadc-99fb-406a-9efd-576eef738035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 1d8e8093-f897-4dc8-897e-87f887fccd24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 2e82765a-55ae-429b-891f-9a18cbdd05ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 c02769d4-5e95-47c1-96bd-2f91f8ad0b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 5f234b91-3553-4572-9627-ee368e6880ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 b1a148bc-0e1d-45ed-8ce9-b54c9fdf4fcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h59FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h982B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h27FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #383 a53f25c7-bd5c-4b8b-bb58-6bbc8c433356)");
unit.assert_eq16(16'h292B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #383 e74924fd-8531-41c8-b784-7804cc810d91)");
unit.assert_eq16(16'hEB15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #383 e5543382-912a-4e24-bad0-e0b229d0658b)");
unit.assert_eq16(16'h982B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 b0158df0-cc5d-4575-beae-7926c662491d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 93705579-4a28-4ba8-b483-8cb40ae36286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 f70cb031-ae17-4af2-81a4-c32cd0280c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 07abec2c-c0a6-48b5-b0b4-ddb68b631339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 c98e5691-3f7e-4adc-81dc-1277011a4dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 70f1414f-9675-420b-b0bf-f40b42f3972f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 afd09968-a389-45a3-bbde-901f2d515d81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2742;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h937A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h2742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #384 8265ee8d-e592-4b10-aacf-11b6a61eb4ad)");
unit.assert_eq16(16'h264C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #384 92b5cdb7-c4c9-486b-aac4-67ca08d3f787)");
unit.assert_eq16(16'h937A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #384 ecc78260-f253-426b-90b1-65d17e3ef760)");
unit.assert_eq16(16'h3D43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 7993e2b8-d2b9-497f-838a-c89c71c61099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 9ae33f60-98fe-41a6-bb5d-b196eae723dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 8d5cb35d-47f8-472a-9ea3-862195878988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 64835a43-1457-499f-9dc1-c70ea54c633d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 5a0c54f9-1aad-4b4a-80f8-8fdc07f4ca75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 8fc7ffd9-d8c9-4117-b0fc-f14d704fe160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 d0cf6536-56cf-42a1-b00b-e87550dca718)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7BDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h79FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1D25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h7BDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #385 b0fd9927-573e-4e12-beda-a1ed7da0b1b9)");
unit.assert_eq16(16'hF64C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #385 115a3792-2a7a-4595-84a4-ab7e1e53f17f)");
unit.assert_eq16(16'h1D25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #385 16b9673f-d214-4a47-b8de-37df9b986003)");
unit.assert_eq16(16'h9F41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 20fc9ba5-c024-455b-8e39-a7a98d69af18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 73903f39-a6f0-46a5-aa7e-bd00ef5e931f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 1b6570c4-fb65-4767-882a-2e227429a3c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 7120f6fe-f28a-4960-98f5-bd645288b0b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 754b4cfd-8239-456c-b6cd-c8f3993e8fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 02d7178b-b3f9-4656-aad7-6590cbca4591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 b5007612-2e24-44a6-a60a-ddf6168a8c15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6545;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h38F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h617E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h00A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #386 b1195f34-eff8-4e38-992e-5b13e00ee8cf)");
unit.assert_eq16(16'h3758, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #386 ddaf829d-34ae-428b-946d-a4cafea1f619)");
unit.assert_eq16(16'h38F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #386 2d694a27-29bb-4cc5-98f5-bd5d5525aee0)");
unit.assert_eq16(16'h617E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 1b2a33ee-2adb-4742-8b6c-6e087e2e6b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 6bed7afa-bd28-49ef-9e04-532e5cc39f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 0bdd35ec-0d42-4f18-89de-ae5ca1e630c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 f659d9d2-11de-429e-a13d-e92969e58a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 9e352ffc-56a7-4633-9b23-735d14152613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 f0c5c03a-105c-4203-8df0-3ad1dc8013e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 0b24c198-7bff-4be1-ac60-f1c5dec323a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC685;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h581F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC9A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'hC685, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #387 a91e1301-7045-4044-b889-5c8836215a6b)");
unit.assert_eq16(16'h705A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #387 c141b930-d12b-4cca-a668-bfb3e9d9ebdc)");
unit.assert_eq16(16'hC9A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #387 edca4965-ac94-464e-a90c-cda90e12618e)");
unit.assert_eq16(16'h6D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 6ed40b33-34d5-4581-a665-47fd7b7568fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 06b5c9f3-aa19-4890-9dcf-712a73c4c439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 cdddb5d3-2e6d-4c8d-b6af-5ddf5c7f9be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 47ea3f82-8b8b-4f3c-a390-0e759af5e325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 67e10046-41ed-4499-9e1a-19b7bb44a28d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 7786be5b-d0f4-4dd3-944f-5d57f7a48304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 f24727da-e275-4699-b998-d4a960b09dcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA96B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h922E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'hA96B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #388 873d0a64-6f01-4b12-949c-0932618ad7e4)");
unit.assert_eq16(16'hC908, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #388 707e8b15-3d68-4fe7-94e8-8b955c9f9151)");
unit.assert_eq16(16'hCABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #388 76054b3b-1f4f-4260-aabb-4a828246e96b)");
unit.assert_eq16(16'h922E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 8f386a2f-c19a-41b5-9c95-3888ba93c465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 0ab00690-7865-4a5c-96f3-ece67f387693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 0ab7c43a-2393-481c-a783-b94c51851448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 8517142a-23ad-472a-a9c7-06a01a8eeab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 9dc6e8c9-7aa1-4e69-90b6-4aeba5f8aff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 f4dca9f0-5280-412a-815c-55ca2762590c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 b8354d16-0295-463a-a4a5-0db1d85d3ab6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4FAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8736;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h387D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h4FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #389 d6f5af15-47f7-4cf2-b259-633120152f89)");
unit.assert_eq16(16'hB0C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #389 5dbfa418-7569-4644-b2fd-97532257167c)");
unit.assert_eq16(16'h8736, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #389 8ae12c43-3484-4bf9-8254-8b88e73c62dd)");
unit.assert_eq16(16'h387D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 fceb740e-ecac-4039-9e36-b9e4cced74cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 e4d0714d-4ca2-48b3-ac3b-89cc893dc656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 804891d5-2c82-479a-9a7d-a8010d04ba91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 961de3f4-7934-45f4-8b1f-d493f376c744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 e9e0acc6-ad71-4808-ae65-39b841576b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 0ccef382-6fec-4b8a-83b4-0bd8a7bd88fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 3093e462-7e90-454c-b7a6-c16f7824cbcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5AD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD26F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9D5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF74E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h5AD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #390 a00e1f16-7fd8-4e53-8ba3-cd117408cd4e)");
unit.assert_eq16(16'h0D53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #390 b9231fd7-95a6-4fed-bed5-fc725efd962d)");
unit.assert_eq16(16'h9D5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #390 9db996ec-c8db-4dcb-915a-52c91a0dbe32)");
unit.assert_eq16(16'hF74E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 e9f6d257-e984-45d6-9b68-83d83abaf128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 427d8ae1-2a9f-4f45-95e9-dfb902cf1b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 8971bb2e-ad58-4e6f-a533-e9c4205bb02e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 aac24880-5f4b-4d1c-9942-1dc295cacfbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 5469b746-6f9f-4f2b-bf59-7acde79e9935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 5957e8df-4d5b-4af6-b18d-ff003157e50e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 b9154d3f-035c-4cda-95e3-2da9cc27461c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3793;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2F92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA79D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3ECC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h3793, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #391 4f3324df-708a-400f-966e-d4f8dfd92153)");
unit.assert_eq16(16'h0245, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #391 42a6eace-a65f-4169-bb48-b7329f7dd5b1)");
unit.assert_eq16(16'hA79D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #391 bf6b732e-2bd1-4287-b963-185989ce82ee)");
unit.assert_eq16(16'h3ECC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 e6dd9e50-cadf-44db-9f2e-58fcc6afb680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 159ca3f3-7615-4fc5-9b95-4eee4a1d6cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 fd083ddd-c326-4e8f-964c-e51d06626227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 f1eb064a-d5e3-48e2-b6a1-6fe820ff0b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 ba2cb190-9f7b-4673-834f-0487f243bc95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 945f8949-a03c-4d8a-92b2-04dc26fdd7cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 ca84541f-3ef5-4651-8185-633c49aa7ef8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h92DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5A9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h81F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h9A6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #392 5e4f8f8f-ceaf-4a5f-bf83-83f9c5b179a0)");
unit.assert_eq16(16'h321A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #392 183d655f-c46c-4504-af92-c930ab45810f)");
unit.assert_eq16(16'h5A9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #392 99c6d625-9a8f-4cf6-89a9-5e83b1c9e540)");
unit.assert_eq16(16'h81F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 f1181f9d-32b3-4372-b950-24d0eca773fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 16e1ea03-3298-4864-934f-51dd88aab77b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 46dfa8c1-0b95-49c3-ae4b-d3b37443c2e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 9abb8ea6-5e72-43b4-acdb-418c9cecf86a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 ccfa8ef6-ff55-4e20-983f-af67c77c5d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 936e222a-dd69-4879-931c-168f0beb628c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 726e87fd-e2d2-464c-b986-b6473f2fb919)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1CE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD042;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'hAF57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #393 bdbc2bc7-1bff-4354-aee9-21d7c6c671d4)");
unit.assert_eq16(16'h384E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #393 0aab4b7f-28ae-40f6-9c66-b2c8d31c4587)");
unit.assert_eq16(16'h1CE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #393 5f1eefbf-e8d0-4624-8da8-0a9aac5210ce)");
unit.assert_eq16(16'hD042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 a4eda3cc-ed21-4ea3-b15f-d713ee3ec9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 c688b88f-faea-4f4c-b4e8-7c39c354c6ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 92488228-b79e-4528-99b4-8c2ba75e5f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 d7c7b111-d349-4583-9fb6-d2b9104e6d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 a3889854-b770-4da3-9933-e9a134c28caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 0e4b1279-575a-44d2-9de2-5293d3f6ee34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 d44f9183-e361-47aa-ae08-fc9d08a0ce8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h327C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5863;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h327C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #394 4fc7e692-477c-4d06-89fc-07cc0884dc29)");
unit.assert_eq16(16'hA2CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #394 9cec17b1-bb0e-4409-9727-9925d74d9788)");
unit.assert_eq16(16'h5863, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #394 b87c5c84-6491-41f7-8018-7948b9489d4b)");
unit.assert_eq16(16'h9A2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 eb0469a4-3d92-4e3c-95cd-c4f4192f6dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 111298cb-0d30-4f54-844a-23874b1aba65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 6c7b3ae0-2542-4425-b0a7-c5c3bdb72f52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 8e6bb02b-86e6-40bb-a980-cb0f68f286e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 d077089f-0f79-421f-8015-9d04472fef81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 4492d61a-395a-4fa3-98d5-127182242bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 2514b8ac-59b2-46d9-83be-c8ce2fe6173e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD429;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h474B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC29D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'hD429, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #395 9b263758-16ed-44b7-b9b3-ad38fb20b57d)");
unit.assert_eq16(16'hC0F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #395 14f22d68-6ad7-4830-9e33-f90c3a5bddec)");
unit.assert_eq16(16'h474B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #395 f38c3807-6b84-4f09-bbd3-54f65907e6ef)");
unit.assert_eq16(16'hC29D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 b4356ea5-89a5-40a8-b1b5-3f7db3f543c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 b1af0c5e-7249-4c25-a948-aadb243e7556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 4b54f764-3a08-436e-812a-f5aa5bcf13e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 9b55c4e0-024a-446d-8569-61dc921a2489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 38dcdd40-58ab-4108-8342-ed1cf744af78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 e305f2db-ca5e-44fd-872a-26923820b006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 6901394b-f89a-4021-994e-eaf66fea0719)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h16CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h24AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h2F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #396 df87aa43-e8ed-4c2b-bafa-0966a12afa8c)");
unit.assert_eq16(16'hE00E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #396 86b04d92-f568-4f33-ae1b-99a1e82742ed)");
unit.assert_eq16(16'h24AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #396 ba9d83e3-dfcf-4630-8b1d-e060d8e6534a)");
unit.assert_eq16(16'hFE90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 81dd172a-5a41-4370-928e-0a472162084e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 f0a34472-4143-4705-9543-2848d07e93de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 1db1dad1-5d46-4c32-811c-74ad3c944d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 8420cfe0-ec7d-49ba-af00-60a34ae3ffe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 8234adf4-1bca-4792-87fa-a1c20a7cadae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 2845bdd3-ed87-47b3-bb1d-48542472af1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 27180820-b205-46b8-a6b2-dcf4205759f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h929C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h929C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #397 6ce0665d-862a-44b6-bb2e-bf91f6c12a30)");
unit.assert_eq16(16'h9EDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #397 ef34cc7c-b64a-4962-9c74-45554e305687)");
unit.assert_eq16(16'hB090, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #397 096e2784-3245-49b5-bbd5-78a0fc29309f)");
unit.assert_eq16(16'h0C5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 41ba4e31-9fdf-4cf7-a699-40061aec59f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 0acf1fa3-edf4-4374-87b1-a1557b71f70c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 b6e154f5-d3e6-42b6-8016-63c67f8cc58b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 33d38a27-f75d-481f-b7e4-18db504c508e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 4f4b73a7-e1c6-4a86-a96b-2777fe2cc671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 c50e4ffa-ecd4-4b37-8966-88c53d481786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 ffb4c2e5-a9a9-4db0-aa22-35bebdfb41bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCAF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h81CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #398 42eaf6eb-6a70-465e-954e-7b403f797d79)");
unit.assert_eq16(16'h4FA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #398 56eb5abd-53b8-4495-bc41-69996fe0e34e)");
unit.assert_eq16(16'h6A47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #398 8894a177-8e3d-4292-8cf0-b89237eeb762)");
unit.assert_eq16(16'hCAF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 09a3ae55-bfa8-41aa-81ce-d7661a83a6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 4841204b-b979-404a-b59c-fd9290626055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 94da70f8-2061-4905-b6af-57722a250840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 5411806f-4ec5-4d8d-964c-573660fb4dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 a50ed66b-103d-45d9-95d9-9b974c47efde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 bf8b3a04-afb0-4d99-a265-dd7de3e7c00e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 3f851deb-ede9-441c-b87c-6b9f2c1337df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h61B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAFDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB08A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h61B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #399 638f85dc-775e-4f67-a0a5-ebdc3febd00b)");
unit.assert_eq16(16'hCF7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #399 b972d0f0-742a-434d-821d-cffa3c3e56d2)");
unit.assert_eq16(16'hAFDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #399 8f802ec9-9596-4086-b8e7-581496187317)");
unit.assert_eq16(16'hB08A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 ab3ca281-89bb-4a52-a28e-565e6cc09f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 89349198-6357-423b-9f80-208f3203f4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 378a9307-54ea-42ca-abd6-644e077dcbc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 d4026b9a-1c42-40a1-93ed-9dbf4e50e6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 9505389f-c880-4f8a-8195-8790a27ee211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 7e80495c-ade9-4bad-a923-e07d04c7f2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 aa0da95a-e281-43ff-b6eb-939f17c5c2ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD333;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9203;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h7F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #400 b531385c-4163-4904-9308-1bbba0411e37)");
unit.assert_eq16(16'h1B12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #400 385f7478-6afa-4aab-ab4b-5c4b46c8b6a0)");
unit.assert_eq16(16'h9203, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #400 e82768fe-091e-4be9-8c3e-1f28a4e4a611)");
unit.assert_eq16(16'hF857, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 c5009f8c-bdbe-4935-8a32-247f3330e86e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 1287c788-0d5c-40a6-a2af-7e0b81eb4a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 cb36af37-c12f-4e9e-9961-2388feadd749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 7a0786cd-c824-419c-a16f-5ad95ed17ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 d47e32af-d184-4ecc-98e3-0fab6e1794df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 3fa7652d-9af2-40d5-a573-f2fd31ca7937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 8559d29a-7ac5-4ad1-afeb-1fdb4f3341ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h44DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0773;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEDA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h44DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #401 ccd7ac0a-ef7c-4347-addf-47aa5419109b)");
unit.assert_eq16(16'hF803, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #401 696abee0-cd31-4e99-ba2c-279981da0ccd)");
unit.assert_eq16(16'h3C45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #401 ebf37e2b-c6a7-48a8-94c7-52b94737ae21)");
unit.assert_eq16(16'hEDA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 8e9a8f01-082c-437d-8b24-efc85161e46f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 46be5430-7c83-4090-b692-1aa389ae3483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 0be2075e-fb1d-4cf1-9793-326f03561d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 bd1c4cda-ebce-4d22-9c48-1694298125b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 1ef74f11-ef82-4264-b7ff-c91e90403c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 46a52665-578c-4ae1-aed1-a9b1648efaf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 fdc360da-2c4f-4194-94fa-70a549410cba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEFE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h29D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8580;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'hEFE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #402 fae91a90-8699-4b7a-8557-0c75e8f178c4)");
unit.assert_eq16(16'hC85E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #402 c2a5e942-44be-4ef6-aadf-7d9e62e0f15d)");
unit.assert_eq16(16'h8580, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #402 7d651a04-f3f2-4dc8-af42-9546bcd3f2b6)");
unit.assert_eq16(16'hFFFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 3f0fe03d-d780-4344-abbf-d268fc134d49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 8d4d30c7-8631-4123-9b01-e6f4acaede5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 d53e0665-798d-43ef-a63b-d34ac167139e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 a073daec-58d0-47c3-9cf5-c45f7e88010f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 189b6e15-064e-42bd-b6f8-8b8e9a192af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 b443cb3a-4957-4872-8bd9-8164fc55ebd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 1bfef0a0-db51-45a4-8d7d-cce8b70516b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h63C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4012;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h67B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #403 6f7ce943-a436-4dcb-bd10-c33c54cba5c7)");
unit.assert_eq16(16'h7F2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #403 26cccc40-3bd7-43a7-a39f-60a4eb9805c3)");
unit.assert_eq16(16'h5AB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #403 553e8dd0-d011-43b8-8989-d1256946003c)");
unit.assert_eq16(16'h4012, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 a7fadb6a-b136-481f-b4f3-622576641a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 b729ca8e-8287-4c89-b16b-71550d85beb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 9af1a236-5ca9-408a-9d81-ba01b35ddb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 612c4dd0-71dd-4cb9-92dc-1cc623d3bfde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 b1ccbd28-129d-48fe-9bdf-57369c24467c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 0c204fc6-6367-41e7-be21-5357a0081760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 065062fd-c507-413f-a937-d53b608533e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h495D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h661A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF8DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h584A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h495D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #404 0c6f9d8c-2019-4a43-865d-78b08156d6c8)");
unit.assert_eq16(16'hB037, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #404 a3adaef4-43fc-411d-935c-2e1b03ea15e7)");
unit.assert_eq16(16'hF8DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #404 a49ec47c-ea08-4b26-b6fc-511e908961b9)");
unit.assert_eq16(16'h584A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 2d791bad-ca2f-4274-b68a-ed5631576eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 ea48b977-1d07-458f-9b0e-e7a83d0746a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 a5cdb634-4c52-47dd-b234-583c5e08bb8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 007b916e-cfe6-4959-b8f9-2f04133b03a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 97ce5b38-89f3-4769-bf5f-99ab6002cc97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 a408622c-7985-4c17-afbb-f1fb076521a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 02d3b495-ed4c-44d1-bc31-6e0b3cfb7692)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAFB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB441;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h869F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'hAFB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #405 bdeeb9dd-4fa2-4465-ae17-e09d0d3c6a22)");
unit.assert_eq16(16'h7203, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #405 16536ecc-e475-4a62-98a7-285474627209)");
unit.assert_eq16(16'hB441, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #405 a7c8dd7e-bfdf-4f60-8bac-6e80c0a3356c)");
unit.assert_eq16(16'h869F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 7891484a-cbd6-4093-99d1-3beb7c217457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 3e41b7f9-ce2b-4cb7-ad0c-cb9b50c071d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 452621ef-c89d-42fb-b49d-2a12f7c36a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 b9228f37-3d6d-48a7-b4b2-b0abd1cf76eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 93785757-40e0-415a-978b-829b038272f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 fddad393-5313-43db-91a8-ee1302fd8e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 2f991d1a-0444-4a85-aa67-32ebaf6681a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD44B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h96D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA906;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2A35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'hD44B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #406 b009949b-39b5-4367-ad18-f550da9edd44)");
unit.assert_eq16(16'hC30D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #406 1cb5ac27-88fa-44c1-84f0-0ae0c5391c87)");
unit.assert_eq16(16'hA906, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #406 53d0ad0b-b1e9-447e-80f9-56a86aca7c5e)");
unit.assert_eq16(16'h2A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 e313c722-2aea-448a-91ca-eea5bc2cb78e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 69b246c8-cd46-4f6a-880f-afa139ab5f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 3a246020-0c9b-4873-b5d4-6ee38286e051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 4f5a190b-7571-479b-bd52-4075cec6db78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 892f7fa8-0a2f-4963-bfc2-6f9c38e2255c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 626ca0cc-9ef8-439b-b353-26478f30e456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 5eacf5f2-277b-4871-9588-d68597e03d30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCFE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3206;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'hCFE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #407 36217302-6d0d-4b37-b1e3-8b1d3fe6c511)");
unit.assert_eq16(16'h74D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #407 2c1d88ff-9eff-4780-8849-21a3beb4e65f)");
unit.assert_eq16(16'h8549, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #407 4a5b73ba-d80e-4d1e-8b6d-1f41669b773d)");
unit.assert_eq16(16'hDE41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 ada970e2-4137-41ac-a55e-631b590226ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 6b298777-db71-4a59-b520-351d91474f74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 6ee8f02f-4363-4ec1-a708-883041452952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 a631e0a2-db3b-4e70-8cb5-d6bbbb6c1df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 6206e061-31d4-42aa-a2db-5a9f17c5fd35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 b350e347-ab8d-4486-8401-981eb998ed59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 585edb70-96d6-4384-8003-d23b2fbc640e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6BC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'hEE01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #408 535aa85e-3613-4685-af0a-0df8e99a5834)");
unit.assert_eq16(16'h3846, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #408 5acadb50-3573-4b00-b4ad-f227fd13bad5)");
unit.assert_eq16(16'h6C50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #408 960163db-955b-476f-9549-11964288e2db)");
unit.assert_eq16(16'h6D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 a485817e-331e-486a-8335-ef2c55db0062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 9facc031-ce7b-4fdf-8c14-3e52a5159445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 ebb0c7df-e373-4637-8e34-0722660368a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 5c6a071a-c270-4ce9-b339-7f04913a565c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 7825b276-1f10-4136-9ecf-c68d307f8329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 8f7c8697-8efc-417d-8e5f-56a14898eee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 a6ec5083-32f0-4598-8a49-f8891111a865)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6383;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h262B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h3E8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #409 b9d187b9-4850-4fe0-9b9b-0dd55298596a)");
unit.assert_eq16(16'h5A19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #409 afb95543-a1f6-49d0-b3a4-75ef76bbda07)");
unit.assert_eq16(16'h6383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #409 947a4056-d2c9-4697-811e-b9660d421674)");
unit.assert_eq16(16'h262B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 e5448ff0-0a2b-4b13-8822-c5891d892de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 04cb8896-9187-4a8f-b594-81999e0efebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 799e9491-bd59-44c8-a7b3-a24cf73688e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 16a5efa3-9d60-41d9-b9c6-72134adaaa66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 05fc31f9-eba2-45b1-a8e7-f7ba36c5533d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 1aba859c-ea9a-443e-a961-47fb5c800f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 1478722b-feeb-4bdb-9f7e-4833fc1c5707)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE855;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6115;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB10A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'hE855, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #410 5cc76b11-334f-4aee-a512-58bb75a3a36f)");
unit.assert_eq16(16'h7EB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #410 6e0b4f2a-abb7-4de8-8fb8-2724d5732124)");
unit.assert_eq16(16'hB10A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #410 fe2c5da3-1857-40fa-821d-62978da206b6)");
unit.assert_eq16(16'h72C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 2b8cf2ad-50af-4cd4-a1a6-cd47a68d051b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 f56544e7-6748-4f16-af5d-00a3a21e964e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 78a8e28a-d92f-48c2-82b8-641e031e0869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 efdcc34d-3153-4dc4-9870-ab6a85df12dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 dd11093d-6a3d-4980-81cf-e9c99a26fe90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 d579038b-bd78-44b5-b24e-987893c7081e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 a6a05c2f-ee95-4fcc-bf19-3c23d592c064)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0ABD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h72DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h12C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #411 b97c773d-c0b8-41dc-bcde-5d361617b853)");
unit.assert_eq16(16'h9725, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #411 22a17546-35d7-4c53-a3fa-63be7c8f835b)");
unit.assert_eq16(16'h72DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #411 10eb0f6f-d8c1-4544-8d5d-3c0be232654f)");
unit.assert_eq16(16'hA7D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 4148419e-cdec-47b1-a50d-560029899a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 7ce4afaa-6c75-4f16-874d-61c9b9a0ddf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 d0e73644-cdcd-4e08-b013-11590b570f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 a7b67658-8cd6-4c23-b5a3-ef0df734f143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 fe5f4dbb-3470-47c7-8aa1-5045ae82d508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 2370da9d-d6ad-4513-b59d-113e08f333f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 79f8f1d8-766d-446c-a7d4-9b75b2cfc3e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3DF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0980;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h3DF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #412 243e4edf-1c44-49d4-9c09-914b81363a7b)");
unit.assert_eq16(16'h5273, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #412 6aca2cc4-62ea-4dc8-9291-01a4d5c0a4b5)");
unit.assert_eq16(16'h88F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #412 b8d092dc-a91d-4641-ad7c-4885414427e8)");
unit.assert_eq16(16'h9A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 66c30107-8516-45a3-8292-d36763a66c5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 f2bf538f-b979-43e5-9770-f0d5ef9f26de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 a9525a05-2db2-41c0-9db8-0c4392b7f56f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 9a8dfa0e-3307-4629-a421-134c33fe1169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 b70458dd-2437-4051-af24-60384896c828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 51c4719e-ea82-4a65-838f-6799a2b423e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 37630959-e5ac-44f4-94ad-90b422323ff2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h47EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE265;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h47EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #413 0024e403-8c61-4086-a710-2a9fa5ba6986)");
unit.assert_eq16(16'hE872, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #413 216aff87-121b-407a-b8f6-5555ee17559b)");
unit.assert_eq16(16'hE265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #413 723de0f7-85f0-4c57-84fb-139f52350ba2)");
unit.assert_eq16(16'h11D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 6a716a8b-06f4-4481-96ca-3fa53e118f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 9421791d-d2c7-4390-a4ce-0ac1fc6b48ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 98c09c5d-8416-4362-b89c-38942b0160eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 5ae24175-3bbe-438a-b461-26455eb75cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 357a8a49-ec2a-449c-963f-2d2b5c5bbd87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 893e0f4e-a9b7-4250-8742-c54310a36475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 c40f7b38-e528-4175-957b-054896268915)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCDB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h269B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2AEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'hDC0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #414 33b2e419-e0e1-49eb-b587-414a47ac4feb)");
unit.assert_eq16(16'hE160, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #414 68f03497-031b-40d1-b07d-e45c27a405b2)");
unit.assert_eq16(16'h269B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #414 c9dc76af-f26b-40e3-b499-7d1cd18fe762)");
unit.assert_eq16(16'h2AEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 561c39e2-2dab-4ad2-83c8-b591ea67eb66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 16652d3c-03c0-41df-a7cb-5d4a6e3f8391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 faea61e1-6ccb-4ed3-a0e7-86d81393734f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 7c9a1b7f-595d-4c74-88af-8d9ba76515c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 70173995-9333-4aa8-b2f6-6bdda392301e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 dc7b1696-f954-47b8-b9d6-03903d332e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 6c6f460f-6d86-474a-9b83-b7bd69aef7e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h364C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCCA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'h364C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #415 1d211b53-d440-4d75-92f4-c7c29230e5c7)");
unit.assert_eq16(16'hDF25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #415 424120e7-8972-4540-9533-b8992ef659e4)");
unit.assert_eq16(16'hCCA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #415 1e5b4873-c5ed-4806-9df9-f2441e4a0204)");
unit.assert_eq16(16'hB5A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 ead9ee08-99f4-43f1-b79a-225ae1acab28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 2c01f918-48b3-48ae-91ba-5938ac7a0cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 0b2c9f5e-c35f-4e30-9a30-d52f477bb5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 33a0ed98-6950-444c-9964-1543f8e927a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 2871d094-06cc-4a85-a3e9-634a0f286556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 c847f066-8af9-438e-938a-b8a75f428cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 df61728c-6319-4eef-9d66-adbf5e9921b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3226;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6054;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB805;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'h3226, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #416 d81b0569-7173-47ea-a7f2-737bed10cc7d)");
unit.assert_eq16(16'h73D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #416 e7b8c077-b3d0-4ddb-ae95-f09bd7c62eb0)");
unit.assert_eq16(16'hCC84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #416 24ede1fd-b155-4f7b-bfab-3e13d18a4eda)");
unit.assert_eq16(16'hB805, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 510b3eab-e260-41dd-b5ae-30e25e89169e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 6fd79af0-ad8f-4270-931b-717d43470ef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 60b55fe5-2695-4e58-8fe0-92393e996565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 36f8ade2-4d9b-4864-8ed6-bc780ef8032a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 20eecced-833c-4667-b317-4df7acee526e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 56f97644-fc00-4901-80bf-8693c82bef50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 dcb23b71-11d4-4d49-8f41-23542b4decba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2720;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2499;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5196;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'h2720, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #417 450ffe82-c405-49e4-9b28-99dc15ee94cb)");
unit.assert_eq16(16'h0544, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #417 4c2de984-d4c7-4e1d-8790-761c79d44af0)");
unit.assert_eq16(16'h2499, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #417 49d3ef1b-38af-4e57-8cb9-a62beb049b42)");
unit.assert_eq16(16'h5196, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 d05c8479-2471-43ef-a7a0-1f3908308acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 845dac6d-7df9-400f-9238-b85884f66a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 54f4b1bd-e818-4fd6-ad19-554ac4909a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 3e31c6b5-c5b8-4a12-a267-34df86f4a311)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 8af1a1f4-bbce-4e1c-a498-2ffdd2de2f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 46c6049e-c2f5-4685-acdd-51701230ed54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 6e63a4d4-d026-47f6-8134-5b7e99cbfafe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD332;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7DF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h5B86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #418 7a95ae1c-baa6-484b-ad59-ba6122469b46)");
unit.assert_eq16(16'h7B29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #418 1294b364-eea1-498e-862a-6e49a088e030)");
unit.assert_eq16(16'h7DF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #418 621efcd0-1b2d-4e7d-8c34-6434855866a6)");
unit.assert_eq16(16'hFF1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 b9c4b151-4014-4ed7-9979-55872006804d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 cdedae09-297f-409d-b9f1-d5ca9761576e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 d767df1f-0a5f-4c8f-8d60-0b038424d6a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 379cb41b-dbc7-4225-82d1-f699547d2a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 0d184e9c-4c2d-4f7e-9ac9-80439c3bdda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 804b17cf-32ae-4668-b67a-14947928f2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 7f23e4c8-0f7f-4a86-9877-a555ab994d7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2167;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6888;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'h2167, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #419 9bf6322e-63ce-42f6-ad27-c98e2c7c5bef)");
unit.assert_eq16(16'h0161, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #419 c70678fd-72fd-4c87-baed-4b92def1a85f)");
unit.assert_eq16(16'h9DA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #419 9ac59d34-e227-4ae3-8031-fc75b82b7d50)");
unit.assert_eq16(16'h6888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 13afb862-fa49-4aa7-950f-d455e2137f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 18c56c12-40b8-4634-adf8-b2e2661e9484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 43d17a97-4a69-462f-9bbd-76c4e6aab400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 e6161070-93a6-4cf9-a50f-0490c30642ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 d63d08b8-8c4a-4485-a2f6-62078f8927c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 2e98deea-02b1-46c5-85b6-80c396fd26cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 a9bc43c2-3547-413c-9f8f-3e283786ce13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA025;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8752;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'hA025, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #420 d54bb3f3-1dc7-467a-8114-4c11157efd7c)");
unit.assert_eq16(16'hC42E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #420 c680f8b4-883a-4c4e-8df8-72413b25c76a)");
unit.assert_eq16(16'h4D65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #420 9faa02b1-d719-4991-86e8-3bfe706d53e7)");
unit.assert_eq16(16'h8752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 ea1f5fec-20f6-46dc-97ea-4a92623f014c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 63f32db8-9393-4b28-877c-c520135512d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 dfbbdd61-fc0b-4c37-a195-a0f552906bd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 241b28b6-4916-449e-873a-406dcc8fa026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 e65a5905-cb3a-420e-9bab-efc58723a5c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 e9bd7956-1422-47b4-aca1-84264fcd1958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 286f599b-2fca-4724-a12b-444aef09684b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC68B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h89EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'hC68B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #421 c19fe9b0-5cf4-42a8-bef2-65a2481e29df)");
unit.assert_eq16(16'h1DA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #421 85e4f748-e8c2-4034-9b18-ce7d4353852b)");
unit.assert_eq16(16'h89EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #421 5949fdc9-2d2e-4ea1-9967-e0c5094d7c1f)");
unit.assert_eq16(16'h0F34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 cdd4cd9c-e905-4099-b2f9-c31ad0ff7233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 e46bb58f-2d27-4cce-b92b-b3112c19d55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 fb356ac9-8939-45a3-856c-2781d517bf9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 c12d3048-edc0-44ea-aeb3-2b1df98777ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 6f813df7-2d0a-49db-b6bc-84444725ab8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 88c99769-c682-4ce3-8147-153064143ab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 ce3c1292-c313-48c3-9615-bec516eb44fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAFD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA697;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7194;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF4FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'hAFD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #422 212956f9-3ff8-4728-9943-8d04e1fb784d)");
unit.assert_eq16(16'h9890, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #422 8d581f2b-73a9-43fc-a82f-19c9b80e45be)");
unit.assert_eq16(16'h7194, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #422 0929e5df-2f7e-4ca5-bffd-40b858b5d309)");
unit.assert_eq16(16'hF4FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 d27c3f41-b2dc-4e7d-8f41-cfb52088e5ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 75bd78f2-eb3a-4c00-bfc3-c676785abee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 030d99a5-0aae-46a2-a0d4-c43ab3eedbab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 0590fa90-3398-4f4e-8163-d9882014df6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 136b63ea-2411-4b74-904e-c4adba3ac402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 8242e939-378d-4730-8ca5-cb87d7fc5434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 d68e6243-cb3a-45e2-9ee1-cae7d8e6a422)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE777;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h492E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h47E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h9F87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #423 16f559e2-2d69-4fa4-8260-506177cf3283)");
unit.assert_eq16(16'h57EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #423 02bc1dfc-52d8-4b2d-8510-310f5314de40)");
unit.assert_eq16(16'h492E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #423 9cc11ee4-de96-4846-b7c9-c64a9ce0167c)");
unit.assert_eq16(16'h47E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 dd2c7d67-d030-4a82-b6c8-c3a8d0332fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 6829773f-7abc-48f3-b4b2-766b0e7cf857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 f1957f24-e124-4f4b-988a-4f8d7114158b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 00f8f0c9-593c-4a50-ae1b-8378e55e78a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 cc45d377-baa6-4b3a-a469-09c2439d9b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 d1cdc068-17fd-4409-a69e-e135f3ac5201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 350f6678-6814-4758-a018-238e4daf906f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8637;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5475;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h8637, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #424 123f0a48-db94-4f4c-8fae-fd55ca0dd518)");
unit.assert_eq16(16'h2038, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #424 e277ee12-4f60-4501-bf1d-7923fe2e4081)");
unit.assert_eq16(16'hE0AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #424 3d06e113-6bf4-40d4-b237-096d7d75d2f4)");
unit.assert_eq16(16'hED43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 5ed2c8c9-c4a4-449c-8489-1f87cc256f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 e1894937-6ada-464d-ba08-17af7618c3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 76a5bacb-086c-4cf9-a473-97c4f2149128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 5bb5f854-2ee4-4859-a9bd-b81972b15398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 ad8309c9-aa9e-423c-ae78-11453806ca5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 52f9e962-0229-419a-b2ee-2182b68e44e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 d4e1e5db-1601-4593-a4bf-5988b017ea7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5683;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC0FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0435;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC17A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h5683, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #425 be19ba8a-2684-4614-9ab6-80082fe79320)");
unit.assert_eq16(16'h10DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #425 7d2b1a63-774d-4d34-89a8-38a48ffd5af5)");
unit.assert_eq16(16'h0435, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #425 82bf08db-ea61-4653-b5eb-cf4d8845e3f0)");
unit.assert_eq16(16'hC17A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 a6c7b067-68bc-48ec-9fa9-267f2e0c057e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 22a6795c-bc30-40f6-a63f-1cb758625381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 4ee99a33-da2b-48b0-8815-fd0de924d513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 2d7cb6b1-16f9-46af-861e-85ac872b8e1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 fc563823-80ce-4ff2-886f-40a5354bc93c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 fd5c7fac-d422-48ba-9b1b-c34e63e77ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 768f0b8d-96c8-4723-a264-119256005965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF189;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h26A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'hF189, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #426 bad2d885-d758-422c-8351-34cf522fafd1)");
unit.assert_eq16(16'hE373, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #426 c27f6e68-f49c-44da-b612-9504220f944d)");
unit.assert_eq16(16'h6C57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #426 d5ae688f-79ff-4adb-abde-80b79b29f44a)");
unit.assert_eq16(16'h1D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 497735ab-218a-4ee3-a0cf-ffcae6ab1c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 6c92a06d-8aa1-4484-a21b-9f2faa1fe5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 bd45cfb5-7673-4594-b4de-475774867af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 09f754ec-25b4-4fcb-b0fe-e74d570427f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 d9aa8f0d-0246-424f-932f-0783bb8db961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 dfa557e9-f084-4bd0-bf86-ebf3b87f675b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 094804b5-da31-4c9a-b265-245ffb421ae4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4704;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0637;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC373;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h4704, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #427 6fc571fc-d4a0-4046-9f65-7969bccba611)");
unit.assert_eq16(16'h7198, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #427 74e61777-c01f-4464-8106-d8fe2d3bf039)");
unit.assert_eq16(16'hC373, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #427 f5ef3a43-8743-4d8e-9e0a-2c79517f36ea)");
unit.assert_eq16(16'hFC57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 8c9f3a41-e1bb-4ac3-94af-e18143a64c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 6d98256d-ba9c-4d48-a916-7bfaf56155ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 a2e222b1-b980-47dd-801f-dffdd44db7c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 105b4de2-d5da-4145-a1de-1f3892b80ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 afd896b2-3356-43c0-ba67-802c101afabe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 5d0f9938-c2ef-4377-8452-591731c978da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 ecbb4f73-a560-435c-83d2-9dd76925339a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3482;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6373;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3823;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'h3482, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #428 bb0b2831-c705-4b92-9c87-b310e2fb02b6)");
unit.assert_eq16(16'h0F56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #428 19e2d148-a552-4ed5-bad5-08fd753f57c4)");
unit.assert_eq16(16'h2A74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #428 19a6a2d2-1591-4629-b355-8ef90ba2c82c)");
unit.assert_eq16(16'h3823, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 557046b7-1f9b-49b7-8348-42fcc348d47f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 e159c1b9-5390-4a55-aabb-87b91170d22f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 2b3496d1-4482-40a6-b02c-a2557416e3f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 754f1cef-f6db-4751-8eef-396e8c979458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 3cc1d9b4-67d2-4bde-aa70-b33d84ff1627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 787d7404-c36e-4ef1-9000-4322aba20d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 d82ef11d-dbe0-4113-855b-8cf9887121e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1B84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h1B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #429 3dc20b3f-22c7-4c93-ae99-fe2d0a557081)");
unit.assert_eq16(16'h0869, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #429 843f07d2-0103-419e-82d2-d36d33a9f6b8)");
unit.assert_eq16(16'h06AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #429 b5985eae-85df-4eee-95a7-1e62f0eb73a6)");
unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 9263fc8c-2964-4a4c-b528-4830f08ad43b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 34c407ee-bf7e-4ba6-9b49-9feb1404a465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 39d34434-5e6e-46e5-9c34-ad2fc4ddef7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 de95156f-1b31-4161-b043-2dfa6792ce65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 d145fa1d-4ef6-48a1-833a-98c4a6afe07d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 507a18d7-2b40-47d0-ae60-3efb0fdb77b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 4c3546e4-08ab-47a1-80ce-5d7c028e005d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA621;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF9F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1262;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h1BD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #430 32b791d9-bc64-48ee-b399-704f4e05abe8)");
unit.assert_eq16(16'h9415, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #430 e5a0a757-ed3f-4baa-960c-7e1d305d7470)");
unit.assert_eq16(16'hF9F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #430 482d2214-ba4f-4242-a7d9-3a3de512a200)");
unit.assert_eq16(16'h1262, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 d75cc27c-f968-46f2-9d96-25827306552b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 80a28348-13e5-4485-ade5-1c7aa47e2fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 487d1d6d-baf2-4ef1-9831-21172c0b7259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 0b39f115-8ab2-40fb-984e-ec36dc057fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 903dd856-5480-4517-8fea-45ab7e4c43b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 be529e63-2a9e-4fbc-b14a-185121fabcd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 e372bf71-cc64-409c-8162-06bbc9d372e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h255E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9ADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE0AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h255E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #431 548137a8-6047-4179-818d-d948fb7c1956)");
unit.assert_eq16(16'hA6DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #431 976b906e-5e41-4265-9074-1cc5081f7346)");
unit.assert_eq16(16'h9ADE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #431 000cc28a-b5c7-415d-ae78-dee506a9de26)");
unit.assert_eq16(16'hE0AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 309e1078-5f57-4203-a87c-0afef6f5f16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 552f77a4-4b90-4c90-9b5f-12fd0212475f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 21f35b7b-f7c4-4d03-8e36-de5163df7670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 48d8f789-e092-485c-8ed3-0a8e4418d112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 64799457-0a60-4c5e-aaca-dd062c9c280c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 e5cdf21e-ffb9-4ae7-ba99-44ff066592ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 9a3ce5f5-c591-46eb-b269-754df91f5b2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h519F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1AB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB8FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h519F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #432 2bf88594-aa37-448d-a07f-ec66556a686f)");
unit.assert_eq16(16'h403F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #432 5ce565d3-ebb1-4618-afcf-c707a7d37cd6)");
unit.assert_eq16(16'hDC9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #432 dc6e4f47-01ac-4c48-89b7-f7a64c292fd2)");
unit.assert_eq16(16'hB8FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 98ca385d-5bd9-404f-820f-80fdb538ce70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 f2cb02a4-7361-440a-99a1-ec30c1bd3a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 3e750269-68ec-4760-bc11-bea0b34e7d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 aaeb68f1-9b79-436d-8b0b-6dad672c396d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 6013aab2-144c-437a-8fbc-81319fe93db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 5118e86f-704a-40f4-8c74-4c98faba0618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 209453c4-91d4-4579-a405-22fdb84ceaa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h90C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB47D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'hAF72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #433 cf591d13-523f-48f0-a82c-dce21c9b20a1)");
unit.assert_eq16(16'hFA99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #433 dd142b33-ea82-40e2-9577-25c2dc4c1639)");
unit.assert_eq16(16'h90C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #433 052b2e62-03d5-42de-b394-2a34889f9714)");
unit.assert_eq16(16'hB47D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 c579d234-77f2-4109-89bc-9ebd80a838fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 a829ad2d-dea1-4987-8516-4aacc8d8cb20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 0b523734-00de-428c-a214-65b416369bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 8f7aa8af-66a9-480b-9e6b-2156c946240d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 050f1d8a-912c-4fb8-8334-786c43ba0a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 dbf1f1d9-7839-4eb2-a460-e9792d5e4d73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 7194f427-a2ec-4124-931f-73a5ade62872)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5264;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3197;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3139;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3074;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h5264, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #434 718427b8-af37-4161-9b1d-3264a261e5d8)");
unit.assert_eq16(16'h48C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #434 14c9867c-6239-4745-9673-26d8b96fa156)");
unit.assert_eq16(16'h3139, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #434 ee79aab4-6470-4b38-9e02-f3061408a95e)");
unit.assert_eq16(16'h3074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 27b9cd2f-0314-41a2-80eb-1f4589b91219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 66066da2-1933-493b-8121-e469c0dd6da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 1dd06761-5003-4f23-a4b1-50cecfb7ed35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 ab86e0b0-5b05-4882-b146-70c71301b2b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 b42c6cf4-d6a7-4599-868b-750cce8d0130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 5af8d3c7-8c9d-473a-af35-246f2577f6d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 ef802fc7-7786-4794-bea1-34a399b1dbcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A67;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF72D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7935;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h9A67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #435 96636978-f43d-4ed8-b99b-b7b8f7253cb2)");
unit.assert_eq16(16'hBF83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #435 18ce5f23-af6c-484a-867b-6277aa75a130)");
unit.assert_eq16(16'h7A8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #435 98ec7d9b-b853-47a2-946c-bd59fc076f75)");
unit.assert_eq16(16'h7935, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 c4a055b6-631f-45e6-a9f7-d3c86c407965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 e664617f-fc7b-4e23-a6f0-6722a7d750df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 d2e4cd47-acc2-4730-9c9a-08be98db9a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 4d135190-3446-4ed9-ab24-c0b2981822bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 b5e79c78-3de0-4e9c-9226-2521465a6b8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 20a7c96a-e881-480d-975c-bc2865d858ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 32d9eed7-cdf4-403f-957b-20ca911820a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h55EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h55EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #436 feab1309-904a-4519-bc3e-2bbab131b37a)");
unit.assert_eq16(16'h0679, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #436 fb93ae52-5e60-4a27-8a80-1ab87f9a7cba)");
unit.assert_eq16(16'hDC38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #436 612fb2f8-d151-4ecd-a6bf-e59e385dc565)");
unit.assert_eq16(16'h23C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 2b51b829-4344-4200-9610-c6106f089827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 80b6f557-12e4-4991-b7d2-849b65e56138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 84fd7430-e303-48a8-b9e6-35f34eaab537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 7da5205b-5135-4fe5-a4b0-0208798f5102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 8f71f7e8-9ced-4916-891b-227ca8119eeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 82eefbcc-0254-40a3-9265-dfcded560f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 b7c63ae8-5319-4cef-ac89-13bea7e3170e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB2C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF10F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEAC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'hB2C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #437 786ccb3a-f47a-4818-8d3d-66cb8755eeab)");
unit.assert_eq16(16'h7F6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #437 51bb6a84-8c2c-47d3-86a4-cbc7ecca75ad)");
unit.assert_eq16(16'hEAC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #437 376971f5-2201-4aef-853d-5423b5e1a729)");
unit.assert_eq16(16'h5D44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 cd4811c3-e5f1-4b00-bd80-ef6d36e40d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 48dc226b-216f-4fa3-8e90-24abb244feff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 2414e213-d63f-447b-95b9-ba6da6aab95b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 e3986144-2c1d-4fc7-896f-9577636b466d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 3287045f-4b12-4180-962f-1d787e84471c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 f4389389-83fc-40e7-9476-436f0064568c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 0fb38d48-5f35-4bc8-bc9a-9c494fe4b4a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h19DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF9DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h03BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #438 564be2bc-5f64-45aa-8e37-0b5c0be20bc5)");
unit.assert_eq16(16'h3A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #438 1d1b3285-b7b9-4c0c-8dcd-89cd7541fd8d)");
unit.assert_eq16(16'h19DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #438 75fc8b09-38f0-4cb4-90ec-6e965dff281b)");
unit.assert_eq16(16'hF9DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 e7f1cd07-1a52-42fc-8f83-212b70b30869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 227376d9-5449-4177-b27b-8ae4c4abf09b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 24064988-3249-4526-b3c8-d790aaa0dfb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 fc06fd92-71ad-4ae2-97e6-f8e32860f2bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 c8daffbe-5fa9-40a7-aede-557440fa5941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 02065129-f27c-42eb-9e55-b53225041bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 e738dc5f-bdf8-43f7-b410-9124e8df3cdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB7EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h98C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h55B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'hB7EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #439 43dce687-27cc-4232-bdb7-cf4908a561a9)");
unit.assert_eq16(16'h7517, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #439 ce8bf43a-4459-420f-b060-4021eab66f50)");
unit.assert_eq16(16'h6CD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #439 aff1aaa0-9f36-453d-a101-674e02714658)");
unit.assert_eq16(16'h55B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 4d8b41cb-aaca-4c77-80bb-8def6982994f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 a69957a0-c423-4905-b927-d839f6d01f1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 139ced82-ae2d-4a09-81bf-6e73dd7ee858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 614dfc5b-e1c5-40a7-b43a-0bfe02358a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 d9d75a0e-1d51-456e-973a-740524098ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 3f458fe3-781a-4186-a1c0-3f837f0c0fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 19980a7e-d764-49ab-975d-ffc12a6e02f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9342;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h234A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC0B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h9342, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #440 36876474-8e8b-4e8e-be93-c5a400a2b645)");
unit.assert_eq16(16'h8B5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #440 2a3fadaa-bf26-42e1-8f16-73d20e78e81a)");
unit.assert_eq16(16'h234A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #440 22f21699-dda5-403d-9733-52e0dd1f68e9)");
unit.assert_eq16(16'hC0B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 ceb43e62-c807-40ba-ae3d-39dbfa0e99ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 a7c7241e-50b6-439b-9de1-39cc2247f9e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 ba1187d4-52c2-404e-b6b8-e1106f591598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 78a851f7-dd4f-4c57-b23d-b2ac400d656e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 5901e048-8ea7-442b-a831-1bd5b61ddef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 6355a125-65b7-4209-9d70-e496e1644308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 c73a4788-9913-48f5-ad04-1c71ec7aa698)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE2B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h42AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h385A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'hE2B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #441 e4ad8e19-3356-4d90-94a1-62e96e267630)");
unit.assert_eq16(16'hC9D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #441 a7f38f7b-2dc5-4781-a6a4-819d38589a79)");
unit.assert_eq16(16'h5E44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #441 7ef8248d-3a54-4d15-be4a-84630ae36912)");
unit.assert_eq16(16'h385A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 45a3da27-1137-43a2-a431-4346de5a6520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 dc189e6c-4354-46ab-aa27-94ccd87edfd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 5735ba8a-0923-4063-af9f-9f17e9574767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 b579827d-ccc7-4f31-a4ba-548644fde893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 fac25f24-64bd-49fe-af62-25bdfd397af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 f8324508-3831-4a80-8dfe-4f720bedcd90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 7e8d6ba4-6ab4-4d52-9532-9d8e57229a92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h19A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC854;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h36DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h19A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #442 0a123342-f9e9-4505-ad9d-1e52b13e7270)");
unit.assert_eq16(16'hB388, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #442 63221ea7-e095-4db4-9775-34b504893fed)");
unit.assert_eq16(16'hC854, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #442 622cda0c-58af-41fc-be92-9d5bf66587df)");
unit.assert_eq16(16'h36DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 53abcd23-fd32-46a9-b4c3-54059ae78e8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 b2f5fb9e-da30-4776-bd10-679d35170ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 5a1f0d27-bddf-4a51-9ffc-2900b5678d10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 5d60ae57-5d30-4666-80f1-266ce8d190da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 2fb9956f-9efb-42df-87df-9f8e1e69d317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 05186386-db92-40c8-b51b-a63cbc8fcbfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 78dab9d2-0838-4331-8ae5-b97912fa2377)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8460;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h8460, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #443 272c89dc-58a3-475a-9ede-8850b9cf21de)");
unit.assert_eq16(16'h7088, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #443 d81b7d63-0594-4c5e-a1ce-d8791e71b0ed)");
unit.assert_eq16(16'h7F4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #443 2c4b5746-777e-4f07-bfbb-4ea5f4454ab2)");
unit.assert_eq16(16'h1D5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 8710dfec-d37c-483a-8c52-b5a6f6ed43be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 ef4c0188-f113-4c5d-9477-e4fdb1286b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 3d916fad-9497-4a6d-a4bd-d262b08c43cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 b43a27a5-3be8-4caa-ad61-b5f08a7f057a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 af23cec7-bb43-4f9a-9fdc-8dfc380665a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 7aaccb13-4ee7-4e38-8107-ae0566f6b34c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 ca741bc9-551e-48aa-acaa-d06cd77126bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h860C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5460;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEFCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'h860C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #444 1ec5500e-249a-45f3-ab88-65d0a244c420)");
unit.assert_eq16(16'hFD52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #444 e6ac0457-581e-49f8-a8c2-7ddb3d6fae98)");
unit.assert_eq16(16'h5460, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #444 0e437577-592e-4589-b91c-19867d29d06f)");
unit.assert_eq16(16'hEFCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 2dec8b1a-f6ac-42b3-8d92-ee48711606be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 2bd4cd17-7a19-4618-9085-b04bb4ada640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 f8c00272-6e9c-4c50-b2fa-b982c9aab656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 fe6dd7d8-a282-449c-b52f-97285e40c6d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 b92c53a9-937b-41f2-b778-7f66d5bae917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 4524b49a-a312-4869-8247-ef7ef891997d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 5a3dd598-ba13-4d25-89e2-3860ac1784e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7AAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h7AAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #445 d6e7196a-cf52-4fb3-a58d-1afd996259b0)");
unit.assert_eq16(16'hCE33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #445 6e095563-fdc0-4a4a-ba9c-aedd6d3f3411)");
unit.assert_eq16(16'hF2A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #445 2f16250e-f517-4b0a-a528-7193dd2dd216)");
unit.assert_eq16(16'h6F36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 7d8c74d4-f284-4635-89fd-f645918d2d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 bad5d266-a53d-467b-8cd3-291b53bd0feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 eef09aa0-534b-4d35-9759-ee022b5d53d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 00d99acb-bf3c-4fb3-8e58-14ad6940688d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 43428ec3-f304-40f3-ae19-11487e35662d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 bd9f5f02-18a5-4dd9-a29a-9aa9dac4b621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 8843158a-4994-499a-b0b3-a32865c23ee5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h086E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF289;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h086E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #446 45cb35b2-b125-49b5-9fe7-e02702511c2a)");
unit.assert_eq16(16'hAF04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #446 f7933881-8e5b-4b49-987a-0678779afa45)");
unit.assert_eq16(16'hCD17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #446 fe18a422-5fb5-4621-8125-57503b68330e)");
unit.assert_eq16(16'h08EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 c6ba40ba-9c6c-4625-806e-3c67ffc00276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 379cc296-e9a7-4799-b37b-8c46283b2d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 aad6e311-377a-4498-a491-a40ab753023f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 6e2472ae-3eed-480c-afc4-3512c5e40813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 6aab8685-fc08-482f-93cd-1b491cc818cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 8476bfc5-3232-4489-979c-875331a41fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 e3bb8083-a102-446f-ac1c-dabe7435cd7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h78FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1813;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5801;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h4B76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #447 15d88f93-cf2a-4e78-b50f-58cc87595f78)");
unit.assert_eq16(16'h703E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #447 2352370f-3c88-40c8-b3ef-119dc794ed01)");
unit.assert_eq16(16'h1813, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #447 7e98e21a-f9d1-4908-8e7e-da7af59ed75f)");
unit.assert_eq16(16'h5801, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 bf9b9e5c-55fa-4904-872c-21f62d9356d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 4da937b7-8126-44de-b7ae-c3fcba333522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 43977afc-5972-4925-bce2-e04d52df8212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 e61e2271-570d-414b-964d-7e9bfdd63808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 c3254c03-3749-427b-ac85-4579a21c59e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 3cfdde14-a9af-40e4-9e5d-314ac9879105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 7dae6045-6639-4f80-950b-ac3151dc8539)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDD21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h173F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'hDD21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #448 19fc3399-432b-4963-a748-47312d6e18d6)");
unit.assert_eq16(16'h5213, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #448 7f374166-91a5-4274-9216-ce6e945bb7dd)");
unit.assert_eq16(16'h2B9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #448 bd80ce64-7fa1-484a-8a8b-22841d133c31)");
unit.assert_eq16(16'hBC17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 9106d333-aecd-4556-8259-8486850089d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 20bcf9b2-eec8-4a3c-9e90-a4439738682e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 b2b85fb1-dbef-4664-b20f-f37c238f43eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 99f73149-cef8-4ff5-8196-1fd41a0348a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 3ec2872a-c22c-4fde-99fe-99c702219590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 3b0deb33-f1d1-4435-b295-aeab4cc9cd2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 017ac452-bab5-4ea0-85ee-4b0c481a1296)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0DF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1DCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3872;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h0DF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #449 1f051464-76a9-462c-8ec6-bccfef2fa434)");
unit.assert_eq16(16'hC554, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #449 4dcab1d4-50c9-4830-9d09-c6a5ca4e55c6)");
unit.assert_eq16(16'h3872, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #449 9a750e78-3675-4345-8acd-9dcf0e0397e0)");
unit.assert_eq16(16'hA7E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 d3fa7308-9b00-48cd-b5d5-85124ee28e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 22cedeba-fa49-4b57-ba71-9b9347b6545e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 a07860cf-7267-4ea3-ac59-3a0a2514665e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 083d41dd-3aae-4d31-b837-dcd1d5a5c6d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 c50c9cd6-43cb-44bd-8974-38d1c0776585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 8f45808b-0c2d-4f87-8c77-da7e50053fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 68c96d3b-2a02-4478-9d52-ceaed4d9d5dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB107;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'hAE83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #450 e12b61fe-e26b-43aa-b655-a1ec60b7ee87)");
unit.assert_eq16(16'h78D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #450 6cc625ac-f467-4fc6-a097-05747a71443c)");
unit.assert_eq16(16'hDA1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #450 4917bc2d-2ba7-478d-a535-424647107929)");
unit.assert_eq16(16'h2BE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 305d31a9-ab65-46ac-b566-0855cc70d8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 fc181f18-a9ef-4fc1-8c44-e971df579ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 6e53e214-4193-4765-bfc6-d22c677e2846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 71824942-d4fa-4360-9582-1184cfb64ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 08ca2918-dc5b-4096-81a3-e68c1cdfba25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 d05131d8-0143-4096-bf84-9f2e850e153b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 97ea401d-be64-4045-b756-8bda2aa721c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE81D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h4B91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #451 4e5a310d-53a9-4dc1-8e33-2b0e83c49e75)");
unit.assert_eq16(16'h3765, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #451 a2140d87-84ba-4ab8-92c0-e5b97b1f92a8)");
unit.assert_eq16(16'h8E89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #451 6c5bbb4c-38ca-4e5b-a412-f71230d8c2bd)");
unit.assert_eq16(16'hA8C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 6616e306-4c18-4fc8-b772-3e6385d8997b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 dd039813-fa7e-442f-982c-f7c774994450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 fd6be9f5-a60f-4a92-a25d-197f354227e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 38e01a09-e0a3-4bb3-a8ab-bfb000123860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 44ed8e72-1b6d-4bb7-a48e-3cb42fc3c95e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 465a8249-69ca-49a3-8304-98ec20f8e117)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 dd0089d1-5aff-44e3-a7ca-e3be2d88d653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h083F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h73D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'hFB41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #452 7cd4f35a-b0fa-4fd6-a15b-96c98be7a24a)");
unit.assert_eq16(16'h5FEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #452 2fb1c38d-cbe4-460b-8bae-fccbc7d2f149)");
unit.assert_eq16(16'hF1A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #452 68dbcc44-b50c-4e15-bbc2-3cbb99a2f57e)");
unit.assert_eq16(16'h73D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 06c90ed1-2955-4c39-9a56-416de9782f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 b0d232cc-95f5-4bb6-aee9-e75801c5a790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 0ff5fe0a-93f5-466f-ae55-a11847546894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 6f123412-9429-40ce-ab65-b4db8d67d256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 088dcd3f-e61f-4885-b35b-cdcaecc7fe12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 b1afb554-a124-4280-86f8-9b8cadb0f2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 4db8ceae-b67b-46bd-9e28-e0e943005d8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8418;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC817;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFA1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h8418, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #453 0c842685-bef1-45c5-8dbe-3a13f1b1b831)");
unit.assert_eq16(16'hE4A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #453 0e91ad3a-9234-4f61-80a1-c1d37907a5ea)");
unit.assert_eq16(16'hC817, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #453 a717a8c8-9dd6-42d8-9e57-c42c175a8916)");
unit.assert_eq16(16'hFA1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 a365ce75-1963-4cf2-8bf3-569ba3f0c251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 a8ea47df-1054-474e-a463-246ce60c4670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 15de6513-e367-487b-99e3-b2ee1c7ea671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 45a56634-f764-4c09-a840-0247e6732847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 43509b06-b68c-4a2a-9ba6-210237ae5203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 891537ae-a0a9-4875-ba6d-b449efcca5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 1e43edb3-b49f-4d5a-a6dc-a0b4202d0514)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFAB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE37E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'hBB20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #454 c6406d1e-bc3d-4106-9c11-eb90bdd73cb8)");
unit.assert_eq16(16'hB24B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #454 ca625def-967c-4434-ba0f-627ec419c545)");
unit.assert_eq16(16'hE37E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #454 a071d7c2-195f-425b-8a57-fe8c2b84940f)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 9e853906-8161-467e-b987-de85705835b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 d7b2d776-1063-4894-95ab-93e2ac5bbf81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 29175bfd-5d9b-4e16-9510-eb05042be14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 d0eaba67-a2c4-4ff4-82ab-6e5d3b6f405a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 4098e89d-32a6-4f8b-8bc8-8af6c91b8e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 3487fdb9-03dd-4e99-a67d-4522a8bd2802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 88cd060f-d1ef-4c36-a201-d349613ee5f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9EF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h2DE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #455 285bf1a5-d7db-48f7-8d56-df7d2dc2e7ad)");
unit.assert_eq16(16'h0CB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #455 a6e324bc-ee11-41c1-a5b6-7b5c00164b8a)");
unit.assert_eq16(16'h8E42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #455 a2da9e9b-2b60-42b1-94bd-323cc527c570)");
unit.assert_eq16(16'h9EF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 b323ee97-7ff1-4512-abd2-ba0a22c61d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 61c90ff3-937f-4216-8b79-2182968b75a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 972eda98-3d9c-48a3-ac86-88c59a099748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 cf4dd29b-4f2b-434d-8980-0e313c332ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 f2930dd7-f128-47de-bcd0-fc255f9fd37a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 26d5574a-9ed8-4d40-95bb-ae07010196ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 2d06041e-c456-4de4-9743-0aefa85acc7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE29E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF492;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'hE29E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #456 da36e311-07bb-44c5-9930-ba6b4ecf2136)");
unit.assert_eq16(16'h8ED9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #456 3da421ea-c407-4bb2-93b4-f5f1e42bed32)");
unit.assert_eq16(16'hF1A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #456 fcd0ccc6-0894-48d7-aed2-d2c849f5f7a6)");
unit.assert_eq16(16'hF1DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 285457af-8d0c-4dc3-ad6b-3c0a811eae9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 997a5b50-5e32-4e1f-9791-ea6cf555609c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 f2ed8cbf-0e86-4284-9ec7-b9af2b60a04c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 df2d1918-9213-4b4c-9962-969bc30c5bd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 f431e086-80e3-4385-8c66-66ded3c29501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 25f96f11-755a-40ca-9928-fc55704daa87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 a6550e35-7851-4b99-afd5-177c644b250c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h713E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3035;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h47AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h713E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #457 170927c7-af78-4501-9e19-df31bd62fe32)");
unit.assert_eq16(16'hBBE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #457 5e9b9230-ab0b-408b-b8d5-d88f8dda3f5d)");
unit.assert_eq16(16'h6B0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #457 d412aeab-4dc9-48de-9dd7-d6c372055f1c)");
unit.assert_eq16(16'h47AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 00675a48-a558-4f46-bbee-5c0d8fffbc3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 ac1b18d6-6db3-4f0a-a3f5-ffaf506a32a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 7a636800-15c4-4262-93e0-3f4028c9c0f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 ab249fa6-d160-4805-9e11-81bf7df93f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 5d5553ce-b188-4eee-9d43-2e48483368e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 01901950-d518-4753-b1ba-1ba2c5cd969b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 eb4b8e39-b4b3-45fb-bb39-db29ba78ea18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0DAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1994;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h421F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h0DAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #458 dfeff2d1-b40d-4560-a9c1-81df42c79fbc)");
unit.assert_eq16(16'h09DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #458 8695826a-0ccd-47af-a249-26728a973e84)");
unit.assert_eq16(16'h1994, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #458 1088f8a7-b5bd-4af2-9e84-3557f88bb4ca)");
unit.assert_eq16(16'h421F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 50357c2c-7130-4a8c-868e-589bd151c32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 90c83b3d-2149-4b99-bc97-f55e0dcfe996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 87501079-b625-422f-89b1-17413489e730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 43754364-1c17-4c7b-b49a-f9a9ca5e50e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 2f6fe4b4-38d0-4cc9-8b20-ecb9a052d83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 277721a9-40db-4164-a2ce-05ddfb08dbc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 341c172d-e45f-461c-a8c1-40f470db46fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h7C17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #459 c9ad038c-af27-4f29-9389-5e466c5d86bd)");
unit.assert_eq16(16'h6681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #459 c8288c69-0f8c-4107-ba30-8b1a11d77759)");
unit.assert_eq16(16'h3AD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #459 129cc68a-749d-4936-bf26-9f3d4d8fc78a)");
unit.assert_eq16(16'h4D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 6e3d6a11-752e-47dc-ba44-c204a2c895f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 b4e27b88-c219-479f-b33f-0b1fe0a0f7bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 9f14441f-b026-4699-8bf7-f6edaccedc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 f7fee2a7-9cd5-4cef-aaad-e42ec4cea955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 d28fb43f-3524-409c-b3c6-6d8e2367272a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 e4cc46a7-464c-4b77-9146-c7c891f55581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 33e78435-a373-405a-aa68-6675322871f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB686;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2279;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6019;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'hB686, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #460 fe28e23e-7f43-4a01-b862-2dd05c454d42)");
unit.assert_eq16(16'h4FEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #460 6380df4c-cedf-4b0d-b15b-8d3568c6a104)");
unit.assert_eq16(16'h6019, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #460 07576716-3a10-4c08-997c-249a8c0352d3)");
unit.assert_eq16(16'h0E65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 f515bd32-302d-400e-8d2a-149638b6af0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 4249a230-ae91-4c64-bd3e-8304ffbaaa29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 4bb1deae-6797-48df-b803-257e36468d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 c7b58422-cd89-42f1-82a4-97fc0880aa57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 b420985b-e9a3-40ac-b5f9-01091e4e48fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 bfc51c3c-014e-4001-bf39-624c7f6637c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 beb7e0b3-2c94-44f8-8fed-4803eea0ca2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h36AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h9A1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #461 32d47f2a-aef7-4d96-8448-b8ed01b648df)");
unit.assert_eq16(16'h9CF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #461 d6cdad05-8645-41c9-9cc1-67b54b612d8e)");
unit.assert_eq16(16'hB7E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #461 5bf71993-0d48-4f8d-b6ac-f1429368ef58)");
unit.assert_eq16(16'h89C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 19bbddce-a44d-4ef4-9d35-ddb908b19656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 22256dca-7680-4b73-b35d-dbaabf2c950d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 d95fdfd6-1b3a-43ba-ba1f-2202e1405adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 2aa5a7c0-3f43-44fa-9eec-0720dbe153a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 765b2bd4-f4f3-4a47-989d-70384bf09e52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 c89735f7-37ff-4147-ae5d-b4097b5a5980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 2f9e7407-4d00-4868-a38a-bb9243d0ba52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5882;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9057;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h85F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h5882, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #462 38274cb5-f49a-4368-a6f0-a84a098864bf)");
unit.assert_eq16(16'h14FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #462 a9ce8cca-371c-4038-b8a5-5a850b423b5f)");
unit.assert_eq16(16'h85F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #462 d2ef4959-d319-48ad-bf5d-d089e82bf39f)");
unit.assert_eq16(16'hFCE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 a283e5fb-f7d5-4026-90ff-112c1cf80d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 619f747f-5777-4c41-856d-da01fa7c7257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 8608c0b8-86f9-49ab-affa-8cd5013d7e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 8557e5bf-5102-49a9-bbad-dd66dc53a9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 bcc607fc-8fdb-4f7b-b089-6c3a189baf77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 bd9ed08c-c0a9-4e44-aeba-1f0405589ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 d7b1457d-4aed-44b0-ac0a-f8776c4c7171)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h882E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB6AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h882E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #463 a17019b6-77f3-4b14-8fe6-8a1682c705b1)");
unit.assert_eq16(16'hAEFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #463 2feeb818-632b-4659-8f1c-531d75bbd62b)");
unit.assert_eq16(16'hBFDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #463 cffcec3e-d329-441e-ab2d-3c0e3fcf1ec0)");
unit.assert_eq16(16'h15FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 1369cec2-9259-4d22-a231-09e690ded035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 7dfd6655-edad-4ef1-bfec-44f83e59bbe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 21644593-a73a-4e3e-bc01-9f11711a6aee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 26a3ddc9-8066-4cea-8d84-b86aedc2baaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 a0e7bb33-49f8-4f1c-9072-6fdd016c52e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 17956b96-3de2-4c45-8c42-99ca5db0da56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 aa4b90fd-1bed-477a-a5d8-128d278393dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE4D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6240;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB291;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'hE4D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #464 1ec76483-704e-4ad9-b715-8f7dea73bb3c)");
unit.assert_eq16(16'hFF76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #464 57b57655-4606-4d2c-96b5-a884e34a0de2)");
unit.assert_eq16(16'hB291, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #464 45dd4241-ab1a-42d5-917c-72ebf7687daf)");
unit.assert_eq16(16'hFFAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 fcb10dfd-5b03-4443-9f3d-7e4dfebf18ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 fb47a113-a697-47fe-98de-db9416a8005f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 bf1d2ee0-b4ae-4961-a109-250e4002f104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 00687a89-9ce9-43b5-9c59-b60e0cd48607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 e123b347-bc5b-4dcc-83e2-d0722aea2ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 43e76bf2-f172-4a83-93fd-e4e8b97cb4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 fbeb6f63-fd97-4998-8d5e-309767e99371)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h07D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA178;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2577;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h07D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #465 53139b4e-f7a6-4a49-be83-135ee320be29)");
unit.assert_eq16(16'hCF02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #465 8667ca4f-8b22-4fa7-b446-be41826da8db)");
unit.assert_eq16(16'h2577, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #465 483b67ef-dbb5-4ae7-b2c2-a1cc6eb13d15)");
unit.assert_eq16(16'hF457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 87458c98-ade1-4012-b739-91158b9954ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 13ed8318-e624-4a8c-bf12-b6aa8e38f803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 00dfcac2-e989-44da-9c36-5378f8a34828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 9e7fc9cb-1d8a-4308-9124-4c8be32446f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 1f888a29-ae83-4ea3-8538-bcbc00975c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 9317361f-9f50-4501-a0d0-14a4fe40ab71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 b3bceb85-326a-4cdf-af77-9cdaa07d1bcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5675;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9BF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE451;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h5675, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #466 45568b6d-f60e-4f0f-9c12-c21783f56a01)");
unit.assert_eq16(16'h1ADC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #466 06c255e5-525d-42c4-ae22-47977659e7a9)");
unit.assert_eq16(16'hE451, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #466 e97b143d-ebb1-4b37-8f06-097d8314a36d)");
unit.assert_eq16(16'h3E70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 9de2fbee-2854-4854-8ac6-9d7132b2e8f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 df9b92a5-2582-4a6f-8eb6-8862e6f17252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 e70082c4-acd1-4c62-b56d-8cfcafc17cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 35085d1d-c58b-48bf-9090-02b6f7b8c5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 0501eed8-3735-49ff-8893-1d126217d02a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 30337584-c9d8-4014-8662-c24f3caf5acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 2564356d-0f4d-493b-919c-12b5f890f2ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5703;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9904;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3DBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h5703, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #467 c148f72c-cf75-45ea-91da-2e23cfe8b99c)");
unit.assert_eq16(16'h5C77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #467 b2c46643-d2c9-471d-8c1f-1449aeb178b8)");
unit.assert_eq16(16'h9904, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #467 8e3ecb7d-2637-4793-a0a7-6881b97f8e4b)");
unit.assert_eq16(16'h3DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 21748b9d-ea77-4376-bfba-1bac0227ced0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 e9de1469-3e94-4dc3-b932-717bd370f88e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 8b684864-ed6f-4e57-bbb2-659a276222ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 52b2ef33-3f9f-47b1-ab1e-fe269fb29318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 5dbf87bc-9088-4bee-997e-7041909c5a83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 d770d10a-1fae-440f-84e2-ad3bbb69027a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 bd7b4767-2bd6-4249-ae22-ce20ad0ff531)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h3A37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #468 d638351e-a9f3-4f22-8a9f-7856ac400e58)");
unit.assert_eq16(16'h02CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #468 9709818d-80fa-4308-8417-3bf02edead2a)");
unit.assert_eq16(16'h73D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #468 775486d9-e2e4-4504-9717-da8d354b8b45)");
unit.assert_eq16(16'h3D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 0c3d176b-0461-45f7-bccd-404286946f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 42a842bd-ffd7-4e3a-b4de-7e6adbbb3e3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 fc89b71c-3a92-447e-a803-811c1922a206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 4b4f44ff-0759-4700-a17a-df6518c0ab5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 f96e415b-b252-4f5e-a8d0-437d8f4f7011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 59abaca3-0547-408c-aac3-6927f93c77d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 7487660a-7de3-463e-a7d4-59674b81f9dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5947;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h391D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0835;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h04C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #469 96995d5e-09a9-4c99-ac66-35d3a105d7e0)");
unit.assert_eq16(16'h0E0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #469 62c03421-2914-4435-af76-9fc8c5163246)");
unit.assert_eq16(16'h391D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #469 38dc9bb3-0aab-4a4c-a43c-73f26c0294e4)");
unit.assert_eq16(16'h0835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 43a4f7ef-241c-4c99-9b34-b3a64747eec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 5830a029-ade6-42c0-8f06-107a3c7dd918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 87eaf544-e95f-4bb3-9ec4-09419722ac98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 a52603ea-5d3b-4ae6-86fe-8d98cde47677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 da7dae20-576e-4b3c-8181-d8d7b36c0910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 12583faf-cf23-4522-b529-fe37e5d29fd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 0d4fb200-d88d-46a7-b847-d7e3badfc592)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2736;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h17DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'hE9F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #470 511d6da9-dea2-4afd-9abf-f3ea00e9e321)");
unit.assert_eq16(16'h0CF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #470 8e31a22a-9a02-42ac-b35b-5ed71477ca0e)");
unit.assert_eq16(16'h17DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #470 4ff407cf-2aee-4b19-95a0-50aa1a86990d)");
unit.assert_eq16(16'h9481, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 da297493-eade-4705-a3eb-2bff5b769121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 48201e73-968b-48dc-af8d-b86b9a64861c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 016d41a3-f619-429b-bb32-44886fd347b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 afab23c8-ef56-4be3-9b39-5fe4867a4092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 270a3f9f-fe60-4ac5-9479-e17aad206c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 3ac14ae4-8ecf-4c13-8077-201ef6c758b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 436480e4-416f-4b4c-bb43-b91ad5716bb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF84E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h925D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'hF84E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #471 3594fc93-31f6-4ad8-a24b-833b645630eb)");
unit.assert_eq16(16'h7CB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #471 2e50cc44-f2e1-4ecd-963b-3c2338818a38)");
unit.assert_eq16(16'h925D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #471 46ee4954-bad9-43c7-b5d6-21178b98ecdd)");
unit.assert_eq16(16'hAF34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 38ea6a48-e405-4dba-8221-381a306d71e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 3f06e2bc-6ae9-4d54-bdf2-815990c8b402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 a1b9488d-1b97-453b-8cee-26bf13329690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 08b37ea8-2182-41f1-8346-26ddb42756d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 4a21327d-5441-4fae-867c-085ab24a8cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 88b6ee0f-9221-4e6e-96ef-9c470ed89098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 1083a214-104a-4c43-85e5-ec58a2800e1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1648;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'hA268, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #472 17dfa5dc-cd1f-4cbc-8ea0-a17ec9747527)");
unit.assert_eq16(16'h3878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #472 372f947b-87c3-4e70-9d01-a26df58501da)");
unit.assert_eq16(16'h1648, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #472 aaf2cc39-884b-44ee-81c0-9e6333047cce)");
unit.assert_eq16(16'h4BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 473b925d-bde7-4d3c-a058-55691b4ee6f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 ed166b9c-d093-434f-acd1-4fabc6e91daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 51c77ead-5686-4778-9e47-a79d9906aca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 e6a10413-0663-47b0-bf66-17d1ac1a0684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 b48c4686-f3b4-4e87-b734-87af7f1e870a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 f4518d41-64c3-4da7-aef0-83bd3bc764b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 a1e9c7a5-19d3-4d63-b0af-621390536f03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h43C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDFB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h9F60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #473 57e127e0-2c66-4356-959e-1737c4e9db70)");
unit.assert_eq16(16'hD92B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #473 79fe016a-4f2c-4d6e-b7f7-de0380737e52)");
unit.assert_eq16(16'h43C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #473 5375b9f3-5c52-4d6c-af7f-203837c2dae2)");
unit.assert_eq16(16'hDFB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 c24d2a17-ae25-41e6-a799-0f12e05af2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 6953e0ca-bf26-4ffa-a5f1-f58c60cc7e70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 91c115f2-bff0-4554-a242-f0d0b6b37c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 97500aac-c70c-4fdf-b2c0-7645c5c4d3c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 7da7000c-6e97-4c2d-aa25-ec12c523af07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 9bc3cd25-ae56-44c3-ba14-8d55a37475f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 52ecd534-e20f-4089-ae48-055ab061cd58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC4BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1DF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hACD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'hC4BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #474 4e1bfb89-ca2b-4254-8faf-6492003666d6)");
unit.assert_eq16(16'h7FB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #474 2baf97b8-a79f-4f88-a240-7b8670c5dd23)");
unit.assert_eq16(16'h1DF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #474 b17fd424-5e62-46ed-812d-6bd93fff8135)");
unit.assert_eq16(16'hACD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 b10df4e5-2782-46b2-a355-7338032ce9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 424675c9-8de4-401a-9ab1-3e035de164d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 f5ee6961-1ef6-4360-a1b1-a92efb39154b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 8c84d1fc-ba13-4fce-ae12-2ddf85d6b959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 03c79125-9e6c-4f25-a4a2-a8a6d789a3ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 edc8bdae-8e7b-45f4-b90d-14b58adf18b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 c5e33c70-efda-4593-83ac-cf2e49a2a9ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h283C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6BC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1225;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h283C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #475 936965d1-7032-4ded-a6c5-28860ae8b569)");
unit.assert_eq16(16'h8BBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #475 bfee81c1-d362-47c1-a459-bcff05eca4e1)");
unit.assert_eq16(16'h1225, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #475 d876a224-dc4b-4965-985b-c8b973392e34)");
unit.assert_eq16(16'h4B17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 7516c981-5b0a-4d3c-90e7-caeb38aa96f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 60d1c478-eeb3-462a-990b-d006ab82b44a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 5dfe8e76-1067-45a6-8852-2cc8ef57645a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 d5135d40-66b3-4a9d-b83d-dd082b177386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 2fae47df-8f65-4daa-bf4b-8b80a7135985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 4432b6eb-e37e-49e8-8705-0550ae4267e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 f408ef6d-07f1-4945-bf02-d65f08ac7337)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7B9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h85FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD523;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h7B9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #476 52a68d47-03d1-47bd-9978-229f1c45d58f)");
unit.assert_eq16(16'hED38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #476 4d1cc0cd-358c-41af-bf2c-f57e379f4618)");
unit.assert_eq16(16'h85FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #476 61b64e5e-8b0f-4a70-a0f6-202433d9c998)");
unit.assert_eq16(16'hD523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 0ca1f737-9fe6-419d-9f37-3f6e69e45724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 5c46f97a-3e59-43dd-8488-ad1869c4fbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 39c7b95b-5761-4b47-868b-698f1de6e010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 d7a73ddd-bea9-4c65-b033-0d217034b077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 aa4457c5-a443-4640-add5-8978846b2f9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 506db272-37c0-48c4-b7bf-712ac4be0481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 181159fc-38fa-4d98-a95f-4d23a230094c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7CFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3FDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4FA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h7CFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #477 d9b1d69b-274a-4ff4-a7aa-1eaf4cee3c8a)");
unit.assert_eq16(16'hDF68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #477 47164b7c-31c7-46b1-a256-79936dc2db5a)");
unit.assert_eq16(16'h3A01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #477 283c82b8-0fab-4b76-a7ef-2f456721d832)");
unit.assert_eq16(16'h4FA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 09f66f29-af7e-4c3f-87ce-69cf2f142713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 6e9ac920-70cd-49a0-9e35-6ae85e66e115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 c2036475-262b-4a64-a5f2-1f375527037c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 b8e8ce52-aeb4-4eef-982d-2e3ffce430df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 5d91ab8e-a579-44e9-953e-d2c5bd4b2628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 17a78821-aaeb-4b1f-906b-0e5c14d41bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 65a4cf03-9f55-4762-99b3-9dd00e75b068)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h275F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h847B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h931D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h275F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #478 f2d547c0-1204-4c6e-96f9-1a0c7e2ed1a7)");
unit.assert_eq16(16'hF73A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #478 ceb07240-028d-44ca-87f8-d36690626545)");
unit.assert_eq16(16'h931D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #478 07f0d14f-5990-494d-91c1-bdbf6670eb23)");
unit.assert_eq16(16'h9D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 4a9d1b76-51e7-4868-b65f-7b4ed2db043f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 997c8cc1-295d-42a4-8c34-ebcd91bd7301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 e52c3423-513b-4d20-b891-d06d6ccd47b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 087c4a7d-b881-4968-9e80-3a09edab1595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 23370913-1e25-4bcc-b77b-126da41b2709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 1a9ea54c-fe40-4c58-94fb-150d23821710)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 e62aded6-7571-460a-96cf-67d792187ebb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6645;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h6645, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #479 79624668-773a-428b-b918-de0f6ab30bbc)");
unit.assert_eq16(16'hC914, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #479 0b588724-3b7d-40d5-b612-4241dbd59f31)");
unit.assert_eq16(16'hCA19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #479 3f449a99-cfcd-44ae-bdf8-78c32cc06543)");
unit.assert_eq16(16'hEBFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 cb0a0781-4544-4161-84c9-64ae53db2ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 9ef76a1c-a7a8-49e6-8022-6341aeb9187a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 5814ba93-f525-47fd-92b7-867732469548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 d519af23-e73a-4ee9-9776-c8b75be4e11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 46a07e1c-13a7-4c03-97f3-a6b3c868eb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 29787fba-6a4d-414f-a7ee-f30048cb1e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 08a74583-4675-45a0-9664-cee89ee71f48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFEB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h57CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h12B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'hFEB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #480 8ebefeda-e290-4f93-921d-18242f11bea7)");
unit.assert_eq16(16'hBC43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #480 f5130969-6b8b-415c-82be-fc5a0b754292)");
unit.assert_eq16(16'h12B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #480 d4518f7e-6299-4924-bf79-cbca329e3fa3)");
unit.assert_eq16(16'h46FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 e7c0807a-5e87-4e00-b65e-1ffbc39114d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 8290f905-ec0b-4959-8b49-dd4895bbe528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 90ef7fda-cb17-4902-b650-7c9fffe4b757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 ceaf1957-0df9-40bd-bc5d-4557fad883a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 90b15a5b-f2fe-4f75-ae87-a74ee52d412f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 eb7b0b9a-7e32-412a-9dfe-9771c01c5db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 5b30f550-d4d6-4d0f-bf5f-2d0b4b2d5da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h4AA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #481 5ac0f809-e73f-4544-8712-08f116881ec2)");
unit.assert_eq16(16'h7281, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #481 59d75673-ca59-417c-b3b9-4264939632da)");
unit.assert_eq16(16'h6AA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #481 22fcc019-fbc5-4702-8a07-eada653c8be9)");
unit.assert_eq16(16'h07D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 6d8cc2a9-6b7c-4f10-81b5-85e9ff3a762c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 71193b91-b86c-4572-8abd-b511bbc811bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 fc5ee900-3b81-4085-94ac-6b9402b4dd58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 c4a83725-5317-4f36-a22a-f66850350c7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 59fad1a6-bee8-4634-abdf-d445c5e80609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 6d38407c-5abc-4e53-b9d5-f64ebe869b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 4fbaf898-65b5-4abc-b8ce-57148bc916b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h97F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2147;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB670;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h79AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h97F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #482 388f432e-7487-4834-9d8e-9d1096cd7ab5)");
unit.assert_eq16(16'h0DA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #482 0af8cc9e-abf9-4d31-aa58-60bd6aa7aaac)");
unit.assert_eq16(16'hB670, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #482 72e41549-f05c-42c9-af88-a47cd06adb20)");
unit.assert_eq16(16'h79AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 1e78d6f4-2a7c-4067-bf45-c01fce5feacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 aaadee10-cc93-4ece-b2a4-0837b1b4952d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 1683e358-2d20-4863-aebf-f266b222c7f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 3ad38142-aee6-424f-ae89-60ae63ea6442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 4f230a07-7a88-405f-aefd-8051139f845e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 13cd8d3b-6585-4354-946d-80aabdf173dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 a183f49c-c6e8-481d-bccb-bf3112baeeff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7001;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h151E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4497;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h7001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #483 6fcfc0b9-962e-48cd-8570-e288b41678db)");
unit.assert_eq16(16'hAC90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #483 3af7bb12-d233-4dc8-b95d-d0ae76af2828)");
unit.assert_eq16(16'h4497, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #483 3c29d1a8-2fd1-456d-8693-bc0534850b11)");
unit.assert_eq16(16'h2050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 bdf72bd2-583f-4662-9241-195daff8ce58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 9747897b-38eb-4c88-9c57-3afb886bc89f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 dfa7fddd-09cf-4c43-a59b-a2f9714022d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 aabafc8b-26b3-4bb4-8eda-19d5ab44b00c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 0368585e-d059-467e-bf84-2880a0b23c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 bfef95a8-d2b5-46ea-b155-480df408140d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 a1efb187-f5ae-45ea-93ff-290c15870c71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD24C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h216B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'hBD08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #484 22359627-46b5-4a19-a1a2-276e5d3f9414)");
unit.assert_eq16(16'h48B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #484 4b9d7ccd-bfeb-44fd-abd8-9c524864d1cc)");
unit.assert_eq16(16'hACE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #484 f07eb1d8-af0d-4755-9aaf-358a79c3d0b1)");
unit.assert_eq16(16'h216B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 fa0feab8-f114-4b46-926b-64861987ae19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 b569a8d5-ddd9-4ba6-8ef4-3b8dd8863e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 d5cfbe58-2cdc-40cf-bab9-0e35d72eef04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 4928ab8f-e8d0-4e51-a0de-e9af2121fe00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 3a2062d1-fc92-46df-81b0-b10b520804c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 cb86a1bc-36e5-4033-9536-ef08390ba66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 0360cae6-639f-4b0c-85b2-b31a701e2f05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAAF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD7FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h8B59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #485 82de8879-c8b4-43f8-aea2-c1b153dc99c6)");
unit.assert_eq16(16'h9422, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #485 6b49feb1-ceb5-4cdc-a3f8-c17e1b04e2ea)");
unit.assert_eq16(16'hAAF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #485 b1391085-a65d-4afe-b903-9f23f78e9141)");
unit.assert_eq16(16'hD7FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 c5b2f14b-0ed5-4987-9a75-66daba4472c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 74e45da8-4ab2-4971-b50d-3d176eece694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 15fcadf9-c3ba-4b79-91c8-92d1cd2420f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 1b347c34-98fc-4fcd-bdaf-1a02ba203a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 0f134e58-75e1-4cb0-b892-070b5ed348a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 e096943d-67a1-4ad7-a42f-34c05780df6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 84515a15-1062-4f2d-877c-115563b285d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'hFC87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #486 adb53e6e-fd31-4460-b42d-94fa1d5cb40d)");
unit.assert_eq16(16'h728A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #486 6c36b548-dab7-4afe-91b3-0a66dbcae4fa)");
unit.assert_eq16(16'h0BEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #486 319c947c-9b38-424f-8b51-fa70416dbded)");
unit.assert_eq16(16'h1A8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 fd6600ae-7812-41a3-bd3b-a0396c6dd244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 76804baf-fad9-4a89-b22b-f1ddacc568b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 c7440a03-0982-465c-95cc-75cd93538d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 6e849e24-c7c9-49d2-8cf7-c83c14f9ba56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 57f21cb1-2d1c-4455-8e3c-30064704957a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 bf7eeea4-94bf-4f27-81f0-8c62ad0f4afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 2a08e1eb-9bff-4443-aff6-3fde1ab9b395)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF808;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h933A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h154D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'hF808, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #487 82959def-aaec-476f-864e-b5aa50f31281)");
unit.assert_eq16(16'h2C20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #487 e865e3dc-61b8-4ed0-b1e5-d98efe2fd43a)");
unit.assert_eq16(16'h933A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #487 3c2b3cb1-a53b-439c-ac5e-19325d7b189b)");
unit.assert_eq16(16'h154D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 a0939aca-1542-4af1-8beb-99b453028510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 3590c49d-08d2-4a18-9ed4-3ce3d72bb096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 453df4ea-390d-40b0-b2aa-a37406fe866e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 738d8a89-18bf-411d-a208-9694fecdd447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 8c519ac7-b65f-473d-867c-f402a108b129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 e5eb04b7-da4e-4b24-be08-8a0205b6b521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 747b8fc2-ace8-417a-808c-ec7808a63a17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6324;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE639;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h6324, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #488 f66ee24b-d873-4e63-bd43-5f1e2a3d7ef7)");
unit.assert_eq16(16'h0DD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #488 52447f0f-dd5e-4773-a7bc-a3ec112b75f2)");
unit.assert_eq16(16'h0DC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #488 fdd1fb47-840e-43a2-931c-8309799a7eda)");
unit.assert_eq16(16'h14A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 222715ee-92ce-4fc0-a830-4eeccd791822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 b79b14e4-7305-42a0-bf26-dd4bd70954c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 bcfd05ec-c7ec-49c8-99df-0147d3d21ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 6d19751d-a45d-4421-abfd-88a8dde82f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 c0c3bdc8-ebba-4f5c-98eb-17ce96db6d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 e1e61a9a-b5ac-48c1-bec7-d133b6a5aa02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 b9dead40-9303-4295-8c4b-4b2aab0ed84a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF579;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h307E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9881;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'hF579, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #489 633bc661-6d24-4524-8949-62fffbdadff9)");
unit.assert_eq16(16'h8E36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #489 9373e7b0-dc3c-4dca-8917-fd347278c0d8)");
unit.assert_eq16(16'h307E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #489 470ce95b-07f3-4bd3-bb2d-64634c1778b9)");
unit.assert_eq16(16'h9881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 5a2fa831-64e2-4f97-a8ec-9cbc5d86dc77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 0b76641e-b739-4823-909c-877b6c76dc67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 c5b4d8d9-5394-4d7a-b6f8-f7d27f13d0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 c0e7ab9a-16a0-4e61-9b97-e048ea54741a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 eeffd248-00da-4d6e-87e2-edb25382e573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 9f5a766a-1e68-45df-ab36-5ffed1d9a2e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 dee1810c-40c4-4832-a80c-bbbb794300fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE85E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0345;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'hBF8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #490 4b5c9250-ebb5-4534-a8c0-0b3b3dd9609e)");
unit.assert_eq16(16'hA81B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #490 91e91eb8-17bf-45da-874f-3ef486146f47)");
unit.assert_eq16(16'h0345, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #490 aee9e4b3-e502-4eef-984c-74716b2d9b53)");
unit.assert_eq16(16'h7C8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 20862e7f-404a-4339-a72a-2fbb7ad71f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 9b8eec2d-88b8-4846-9db5-0804a8cf3641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 3131a4f4-5683-4995-a195-c4908f937446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 8a9d2cf3-2a98-4075-b76d-4d9dd5c16d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 872b6184-b909-4fd3-b2af-92a860a0d014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 49dce8c5-61e9-4163-b936-33787dac9f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 ff103e72-59f4-43a5-901a-9cc3a15d82f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB9A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h8E58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #491 e3596ee9-77e2-48ea-920d-02f6a8188ad4)");
unit.assert_eq16(16'h199A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #491 c68a5263-6540-452f-936c-1acf4e44111d)");
unit.assert_eq16(16'hB9A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #491 7d4f08b8-72c4-4b0d-b445-3d979e854a64)");
unit.assert_eq16(16'h1A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 3d7adaa0-edb8-4acf-aa23-b40e70c559bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 14741a09-372f-43e1-9ac4-77b4876662c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 7d380586-4097-4f93-a8b6-855ac66b26c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 43822807-ecfb-45b9-87c7-09c6d3704340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 54d6a721-ac73-49f2-87bb-65a2d34d71a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 749ab137-9357-4789-a60b-3d9fc017b756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 8a2b07b9-576b-499f-88a1-bddb0144f542)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC781;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'hC781, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #492 098eac39-5027-4376-abdb-07d29b00d2c5)");
unit.assert_eq16(16'h5E25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #492 a9153e0e-7129-45d9-89b7-1279b8068164)");
unit.assert_eq16(16'h1B84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #492 3e8667ce-8ff0-47a2-809a-6d0450891a83)");
unit.assert_eq16(16'h0945, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 66a388d6-b0fe-4779-bb5e-f1bac0ba7f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 160b2ab5-a808-4404-a6e1-3e3fac191eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 3c48d720-f088-4fa0-a3ea-642ad726c075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 93fb809e-a7b4-4dea-b79d-9b9760c30ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 014b702a-bedc-41b1-a4b7-94a3bcf3fdd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 d2b061fd-6b15-44d6-8350-7d429b023669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 5690dc0b-d1d3-43cb-ae35-a5c03bc2b325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h255B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4A75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h7FD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #493 6fdbbb52-25f4-43ce-aa6c-cc29de409888)");
unit.assert_eq16(16'h4A89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #493 98078c07-47e5-4636-abe7-c4054ac899dc)");
unit.assert_eq16(16'h9F30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #493 e98c6dee-8cff-4581-9d7d-ee258ea8524d)");
unit.assert_eq16(16'h4A75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 31836e58-02e1-4c84-b78b-42a22df497dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 5689e91f-92fb-4752-aaa5-db83b1484d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 20a5ef18-f128-4ea2-91e7-8e291edac837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 8381d906-c50e-414c-ac34-632317665157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 98e40085-158b-4b20-9262-040b793951c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 9da128dc-56d2-43b0-91f0-e7aa7d933ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 dad9271d-535b-467f-bdf2-1c39c37c0d96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD15A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6B93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'hEC94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #494 f5df31b7-47cd-4d92-b5ad-7c126daee75b)");
unit.assert_eq16(16'h6D24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #494 038848d3-fe11-4cf9-8aed-60f05f738f67)");
unit.assert_eq16(16'hAD69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #494 f2054ff8-4462-447b-9d49-a2b813f014a2)");
unit.assert_eq16(16'h6B93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 ac10811f-4188-4a72-81b6-de809af764e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 ef63f567-df5f-4a28-b18c-cad59b1027f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 12b46059-677f-417f-b71b-2d2641e98f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 64e4643f-90cb-42db-8463-8a23a8debfc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 051d8ce2-dba9-47cd-ac2b-0652539311b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 3964b848-818b-4450-afc9-9c210d66b7f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 e2738b88-217b-4f2f-b60a-3d8e8b10ffda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h71A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2232;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h71A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #495 25bdeea4-d891-48fc-879d-fda907c7adcb)");
unit.assert_eq16(16'h4727, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #495 577bf0e0-a98f-466b-be2d-c8f19efb9396)");
unit.assert_eq16(16'h2232, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #495 74c51d15-5609-4dfb-b495-d9c74ef07a2b)");
unit.assert_eq16(16'h8DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 2f94bf5f-ebc4-4180-8b88-ef3312142504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 f4c9aaed-2c86-482a-a857-73ed1d00c3c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 2b0c232c-9274-44c3-b5a1-055282c6f6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 45345bd3-83e6-4121-b40a-c50f09f23147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 1f842865-2ad6-490c-a5ac-b90222b3dd58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 09d39037-569b-42c1-82c5-eec164028816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 c0d8258b-415a-44a1-a657-2c5a850e65d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1596;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7592;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h1596, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #496 b0cb2fee-e197-46af-ae6e-620598ced910)");
unit.assert_eq16(16'hE628, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #496 856c8287-3182-4608-99ae-d2fc1913a928)");
unit.assert_eq16(16'h61CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #496 ab4071fb-6216-4a04-b55b-5a6a8b333d8c)");
unit.assert_eq16(16'h61A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 0ef49bda-b104-4ce6-b1aa-8ec113ca69fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 bfc1bd8e-ba0e-48bd-876c-70110be5d27e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 523ffb05-711d-403a-8abe-d0dd91588253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 c1d1e7ca-6d11-4554-999a-d0e99596db37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 48bd8eda-8a34-4e46-b354-13bb0ada7a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 b08f727d-f8b4-41d3-ad82-9790371a855e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 e73e16b4-d0d0-4414-a7f0-83bd7e926bb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFDEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3426;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h8B1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #497 553fb8b2-161b-4240-9b3f-8b286b842b57)");
unit.assert_eq16(16'hDFD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #497 0efe1f4b-d6f2-478e-a7bd-66cefea11326)");
unit.assert_eq16(16'h2C77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #497 0cf3e4f0-5803-4e8b-922a-9661e4c2ff94)");
unit.assert_eq16(16'h3426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 33a825be-1037-4467-9c27-a3b8cc34b9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 e2bcd1e4-1760-4f14-b413-1caebb01fef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 00296041-229c-45b7-b9ec-d42175b3f57e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 34e76bec-d6bb-4cdd-ada8-48abece58fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 b10a6b6a-1b6d-4674-b786-07f83d8367ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 f7fac7e4-df8e-4d7c-9410-56dfad51b82a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 3a314d3b-7d8f-4747-9db6-3efd541ce75a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h772C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h337B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h88CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h35E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #498 a574cb47-f787-443d-a4de-f2ea22690a69)");
unit.assert_eq16(16'h8846, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #498 6b47279b-fba8-4e12-808a-b4dab16c3482)");
unit.assert_eq16(16'h337B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #498 92da4e09-0ad9-45af-923c-9314cae2dd28)");
unit.assert_eq16(16'h88CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 77ef3742-e55c-481c-bbfe-1bf7fc2a9a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 8d7bf744-26c5-4c20-8739-f5d6737b6a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 1c845dd0-3640-4170-8fe3-a56b989fe01e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 2344e094-19f1-4833-94cc-3739c246fcee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 f7fbd984-1aee-4486-bed6-68dd01bdabda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 87cd1a9d-844d-4c6d-bb58-96ceeb02d377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 202f9b23-445e-47ff-9cd0-1d5fb804aded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h974B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h7C2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #499 ea3ed3d2-1fb9-439f-9349-7cedfd08973b)");
unit.assert_eq16(16'hCC58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #499 c14f5411-fb85-4fa7-899f-f135b7ba458b)");
unit.assert_eq16(16'h02B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #499 7ec1d0dd-f4ae-4f09-b00c-531c64a5eb0b)");
unit.assert_eq16(16'h974B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 1b4b1ae4-3b93-4cea-8da9-d0c93ad132cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 6de54faf-4637-43fb-ac37-2e1224262bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 5011e6ad-c5ab-4190-afac-97697933a6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 727b31ba-0e4f-4f85-9477-ff58ec75b2ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 00a1ac6a-72ac-4a4d-824a-6f8fba497618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 b985a2f1-8ceb-44cb-917f-85754368ae45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 9595dc2a-233c-4bd7-bc46-31d981070cbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7219;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h305E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC86D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h7219, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #500 32798acc-dbd1-4b8f-baea-865206f8d309)");
unit.assert_eq16(16'h2283, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #500 bcde5f0f-2fcf-48fc-8985-9c19c478bd3a)");
unit.assert_eq16(16'h5D41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #500 d327ca4f-7b7c-4b8e-897b-a850668ca4af)");
unit.assert_eq16(16'hC86D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 90763fb3-db39-4d28-8a86-4493e5e617a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 0bcc7732-2d10-460e-a04b-783257ce2645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 9b291dec-8bd0-47a6-8716-89236295188e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 a326d242-2d60-4198-93f0-7f16c9284a8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 8d108bd6-e829-4e97-bfc5-8020992cce47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 9d5d5dbe-8172-4288-9a6a-d766f04f8808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 1ed08548-218e-475b-b046-46caaf676258)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC024;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3FD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h328A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC62E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'hC024, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #501 04fbaae9-b556-42f1-8a4c-a8dc8c86f362)");
unit.assert_eq16(16'hE821, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #501 ca174612-26d8-45e1-ac6a-4a4e912b12c1)");
unit.assert_eq16(16'h328A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #501 6de33a0f-e5d7-4b18-b679-def0de950de1)");
unit.assert_eq16(16'hC62E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 9e77b8af-7c8e-46d0-951a-019738af01fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 07c3ab5c-d9c6-461f-b3ad-ebb1abab6ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 d3e3437c-a4b3-42b7-817a-f352d5434dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 01990d1a-5923-4b19-acb3-d5502fbf7916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 61654b42-2817-4721-9d33-a847f9e488c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 8902e122-6b9b-49cf-b4f6-e5bf2728859c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 4cf13664-035b-440f-ba92-aaae6593b0d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h34B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6846;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h34B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #502 b2098e2b-ef5f-456c-8311-c89ff9429bad)");
unit.assert_eq16(16'h0E55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #502 bf8e8622-e6ec-4092-b151-70fa7ff10c96)");
unit.assert_eq16(16'h6846, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #502 9e7eb37c-5db7-4206-a577-f4077d41071f)");
unit.assert_eq16(16'h06C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 1f11139e-de82-4c3e-b5de-e0fba853ece7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 bb464d71-c315-4126-810e-23d339bcefd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 574bab5d-89b8-4765-a306-12aee329e184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 99afed28-3805-4f15-88f0-6af403fb5b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 bc5b456a-912d-4b86-ae31-e518464a2b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 ef6a79de-4df6-4330-8ed3-347a8f4750e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 a37c4c42-55e5-4747-99d1-a06280eed6ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hED5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8423;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h3D94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #503 c755198e-6ab4-477b-b4ef-788d6c13b587)");
unit.assert_eq16(16'hBD45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #503 becf0499-37ac-42e7-98c6-e469bf4b372b)");
unit.assert_eq16(16'hED5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #503 d1e48374-737f-4dad-9ef9-4ed8a210a694)");
unit.assert_eq16(16'h8423, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 6b9b6406-f875-49fd-8041-02012b1d36b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 aecc3416-fe2b-4314-a9cb-e05900c97eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 f1ceb939-224f-40f1-80ae-b2ff90de3e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 72062c0e-4e20-4b10-9f35-89d2b38a1a2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 56efbe20-83d5-49c3-adff-4dee79029fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 eba7ec08-fc3f-4f79-aaf6-ddce07500566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 b91b87f0-d03c-4cfe-ba8f-e7c07fa9b701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6CF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF638;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7463;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h6CF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #504 ea3a5963-da57-48d7-b89d-2209e8bc4780)");
unit.assert_eq16(16'h3D49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #504 9b6c0584-18aa-474c-83c1-cdb56b781dac)");
unit.assert_eq16(16'h7463, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #504 4ec1f4cb-33c0-4015-a9e1-172450ece650)");
unit.assert_eq16(16'hD4A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 dc04c87a-7ac0-4500-9d10-8758b6826fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 95e8fb53-ff74-44e1-8a6f-ebe284e919d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 78a0e37c-44e1-4aee-ace0-40f7f03007e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 1a1f0752-3822-4e02-ab2b-d2059590c592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 8cea3997-0c6a-48c3-8c88-25532f5a6dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 3b9c151a-bb20-4df7-97e0-4d851f52fffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 3bba0337-0ea7-444a-9279-d6d7be082d1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4104;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB6A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h4104, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #505 9f75e53a-2e5d-4f45-adb6-a478f4c04c33)");
unit.assert_eq16(16'h8F04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #505 3f4bfa74-8662-4f70-b29a-97b3b1bcbdeb)");
unit.assert_eq16(16'h9DAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #505 ca649eba-2c18-42dc-9aeb-5858b600b8b6)");
unit.assert_eq16(16'hB6A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 467dce88-b86a-48f4-94f9-4445770f523f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 a54fae0c-d6fc-426c-996e-ac7666f0f001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 3d18dbb5-264e-4a1d-81cd-94d123771e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 e80ec2a8-d8ba-4854-acb0-60dde479cad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 5c03b63f-839d-4f1d-91d5-6fa1dba261ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 de31d7b9-fd7a-4ea6-882f-7789c5f0df9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 8c5cc780-d06c-4202-bfa1-64e66e95f13e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB4FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'hB4FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #506 d2b02ff9-f7ae-4986-9a8f-8c6d13b68ae4)");
unit.assert_eq16(16'hEE7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #506 70f8bb4f-268e-459f-b01b-4340ab8b73ce)");
unit.assert_eq16(16'h3359, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #506 55558f6c-2db0-498b-8ff6-d5c756784cd8)");
unit.assert_eq16(16'h3406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 74851e82-046d-43a7-b510-1dbdd444f8d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 adcef7d0-c329-44dc-bb12-f14ba903084f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 8ae8f46b-28fd-43fb-9cf9-56c075b93197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 3485d555-4703-4c43-9103-f8d9139cb44e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 183c012d-60aa-4e8a-9c2b-012164e41d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 20d89540-d316-425a-ad28-edbf936933f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 d789958a-8636-4cf0-95cb-afdf3b0564c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A3B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD107;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h242C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h1A3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #507 f2c0407a-e5dc-4637-9151-c8b1fce0642e)");
unit.assert_eq16(16'h0714, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #507 c16bea1b-0d68-4672-b8f0-a726d732e7d0)");
unit.assert_eq16(16'h3C44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #507 3b6cca4b-8a4f-43f1-b9eb-29f337213a37)");
unit.assert_eq16(16'h242C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 b58cb357-edd4-46a5-b79a-1a46e5d90891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 6189efeb-84d7-40a1-9afb-908c9593dd56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 f87a3be8-da6b-4d1e-afef-61e373b9b8dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 c1dcfd33-1e19-4507-96ae-d2d2fb152557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 6f34b8dc-6500-458c-8a46-c89abbc1cc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 fdec4b01-c554-4d1b-b065-72954d84d37d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 15ae61d9-ee4a-47ae-9159-ebc0c49c5f2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h985F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8200;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF121;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h985F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #508 48f9c795-49dc-49bf-ae37-47a058aa61dd)");
unit.assert_eq16(16'h1266, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #508 127efb8b-e050-45c2-9957-b37d9a9bb535)");
unit.assert_eq16(16'hF121, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #508 d17fd9c1-978b-470a-9132-e70786b00250)");
unit.assert_eq16(16'h1A56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 47cf5887-8105-4522-8915-7678db5e2388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 2d31fbc2-334f-4f73-9ad9-316433ef78d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 25ea93f6-8780-4755-b13a-44b5e37ff26f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 ab609c91-a775-452e-96a5-ac8eb58feee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 43fb8bbc-1aa2-498e-aafb-5b8bfaf070ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 b38d1f4d-6e90-49a1-bccd-219f05de7ffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 2cdcdf87-d294-4444-be3c-384e57cd21b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h24E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF20D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h24E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #509 763f0840-b569-4d1f-8dc9-2b57edec32fe)");
unit.assert_eq16(16'hEE6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #509 ffa32b8d-e7f6-4ca6-a412-7417de1a6093)");
unit.assert_eq16(16'h7E6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #509 38faff1f-85e6-431f-8e39-35dfa25e14b3)");
unit.assert_eq16(16'hF20D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 4cacb181-1bf8-4ecf-a5ed-da6601ddda12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 fe904275-d776-4cd5-82a9-4b51d88566e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 b00d97a6-dfda-4623-95cf-cef5bc799063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 314a66fd-030a-4bba-ac1e-530988c81c9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 04e114dd-6c73-4639-b51d-b4fa09720c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 87c22134-2c57-4c33-a525-2ed02b63edbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 e8e8c7fc-0be2-4888-ad3d-aaeb9d0cc4b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3787;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6105;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h3787, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #510 0b08ea97-74e1-4a78-986f-6ae2bd24f2e4)");
unit.assert_eq16(16'h07C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #510 610076fb-7a0c-47e8-b4c3-9930d609dd2e)");
unit.assert_eq16(16'h4C12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #510 a5b26918-d945-4a16-9699-d9484e5f1dd6)");
unit.assert_eq16(16'h6105, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 5b2b0caf-57c3-4ef2-89ef-83b90774c448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 76c12627-2346-4073-b3ba-5488775fc373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 56df73a9-91d7-498e-9c86-87e66281212e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 2a3d9e2d-5ea2-40f3-bf6a-19ffdf6aad41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 15bb8b94-be90-4e6a-9997-eba9c2ffb1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 93b427d2-d99a-43d8-8185-1f21b7cff94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 7383eb9b-c7d2-406e-a722-3e8e12232c53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5AD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h5AD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #511 6cf391b4-7359-4843-ae82-8ceb14420eaa)");
unit.assert_eq16(16'hE1B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #511 c1bbe0a3-8ffc-424c-85c4-d227685cac80)");
unit.assert_eq16(16'h6CB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #511 854c5390-de6f-4547-8bee-d81a0872e9cb)");
unit.assert_eq16(16'h68B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 496f1379-3bbf-441e-b1d4-5d7301adff43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 a6baf2d3-1c66-4aee-a993-2c96ae5596fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 241ed9a9-b388-4f98-b7e0-af84e866c451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 70208edd-3381-43d6-8a8a-c769fbbeb150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 389e5a26-527e-4e9e-b73d-4e95f9d57eb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 805b27eb-dbb6-4796-b33d-df25e620e5d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 4186f8b2-3f0c-40d4-a676-08788f05d2b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA384;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2ECA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6015;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'hA384, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #512 a469b9a0-583a-465b-8829-1a21bc5418d9)");
unit.assert_eq16(16'h2ECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #512 8635ee4c-09d8-46e8-abe4-a8ba231ff586)");
unit.assert_eq16(16'h8B69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #512 a03451d1-9d01-4b29-8928-28dc60643733)");
unit.assert_eq16(16'h6015, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 78c36997-4ce2-4ba8-9a18-fffe5dc8054d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 4ccae526-d758-4686-9a30-187072b5d05e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 54809cf3-36f0-4672-a242-667662097f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 bf767809-c6a2-43f8-9ab5-458f8fbf1284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 7b10eeb9-c9f3-49de-bd62-489bd72da83e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 e4914113-57f2-4771-9a9d-30371fa8fec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 1951d7ea-839f-4243-be3e-d198077996b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3EF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h1DFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #513 e1bff9ab-9e21-40b1-8d86-efcb84fa447c)");
unit.assert_eq16(16'h3EF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #513 740261a6-fc1c-444e-a67f-9a5462eac021)");
unit.assert_eq16(16'h97CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #513 f5e3c555-883c-48a8-b160-58e4d20866fe)");
unit.assert_eq16(16'h2E5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 64b5f63a-0bcf-4464-b6cd-e00e8eea5fc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 aead68fe-5966-46e1-8d43-675c5ad3ac54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 4d3548ac-57cd-4c16-9e6e-0e7dacb08c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 0ed657a0-596f-434e-a2e8-5bd75ed20ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 b47a850e-5f43-4c62-9abc-c666381f37a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 0956a6e7-161e-49cd-babe-420fa5880def)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 65cb6bc8-d628-4c9d-996b-4ee291cd08b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB894;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h569E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA822;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'hB894, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #514 cb280797-b6b0-4b10-bfa5-9ab80a5a3a72)");
unit.assert_eq16(16'h569E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #514 46f034c2-94c8-4d35-bdfc-539e64c995c4)");
unit.assert_eq16(16'hCA12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #514 40e4902f-2e13-4b92-a5d6-0261d9e8d58a)");
unit.assert_eq16(16'hFF57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 fc6a7270-4724-4000-a26d-90968493ec3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 39bc078c-cbe0-44d5-9265-540212a9b492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 93df13d9-20e8-4565-bbbc-fa170b051f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 b293bcbf-aa71-4589-a62c-43f7541541c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 faefd299-a1e8-4bce-8dd6-9032eb7b057c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 5fbe0cd9-715b-4add-9df8-fa8082aa1eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 2a1f3d8e-57cf-49ef-9ccb-647f0ca873f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0912;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h5B43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #515 b5d08daf-ef76-4534-86fa-76c767620e7d)");
unit.assert_eq16(16'h4A47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #515 be85fea3-6213-4883-92a1-05b1f9224e66)");
unit.assert_eq16(16'hC901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #515 55667b26-b1cc-4316-a13d-32c96d12d5ea)");
unit.assert_eq16(16'h2FB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 b9484676-aec9-4567-9075-6cb5d13cd919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 454fd64e-dfb2-46e7-9e82-b49141f71eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 1708b219-0034-4d2a-8390-3ed18232b560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 2074c36c-b855-4958-93bd-3e366ec8b6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 b7dc150b-8d49-41f3-b293-fc9aa9c46618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 c11948c0-6848-4fc5-a74b-316520627aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 fed9bee0-6c0e-4849-94e1-232ac98db1b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC46C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h50E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2DB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h65B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #516 d2b379aa-a959-4b66-aae1-c0e4c06397c3)");
unit.assert_eq16(16'hC46C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #516 510ff246-c5db-4a80-8ae2-870b5c4f2261)");
unit.assert_eq16(16'hEB12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #516 895b8f7a-66e8-4c42-950f-c31c544ea6a6)");
unit.assert_eq16(16'h2DB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 5d14bf47-c6e1-4001-833d-3f71ff038ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 ca3922db-e3ea-4313-ba9e-d2fe00cad63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 efde28cc-e5a6-46a1-a0e5-620fd87009af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 c832f00c-aa94-425e-8207-697e56a07c0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 f8adf533-7e07-4759-89ee-52a0603f15a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 bfd2f1b5-0a95-489a-a94f-c389b2816912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 92b7adda-f172-4b8f-887d-dc23759d3407)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3DBC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE483;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h9FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #517 371d908e-2d13-42f9-b2f1-132def3f8c25)");
unit.assert_eq16(16'h3DBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #517 94ba075f-6d1b-487d-94c3-4d6072029c1f)");
unit.assert_eq16(16'hFE68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #517 6519989f-61d1-4dbc-9d06-ec6c8f7b38a0)");
unit.assert_eq16(16'h9A84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 b59cc882-4234-46d6-b1b3-95b2ee2246dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 25b4a57e-50b1-4c90-9d27-100e2a4445aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 f826f1ab-c4e0-4686-88ff-73eb0b59d4a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 ad2a64ae-eece-477f-ad3d-888de493a0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 526cf4d9-f936-4b70-b065-aff8f4ecd4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 b6c297e4-caf6-45fa-9a19-125f8364ed02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 e3539d08-f9de-42bf-a0d8-5ddcc6d7ecfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4901;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC243;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2542;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h4901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #518 39d6c87d-013e-42ba-a8a6-99da135a8fa0)");
unit.assert_eq16(16'hC243, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #518 f8643fe0-990b-41e3-b3f7-473dd5fdeec6)");
unit.assert_eq16(16'h473B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #518 238847a7-a45b-433d-9ab3-12b1edb27fdb)");
unit.assert_eq16(16'h2542, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 fe17ce66-ee4f-4d17-8971-f453f698ab1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 10795b4a-5068-439a-a82b-de2cf99808db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 6293c855-76ac-4df0-bf48-27dc56a2181c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 5d9a8ad5-6d30-4b81-9aa2-d7ecbac0e5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 9e3dcf37-39ba-4ff3-bc58-6216ff186808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 07d44a14-81ea-4619-8e5c-f8cdc2db0866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 3f990319-d0cc-4894-8f96-e7cf28ff28ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC06C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD165;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA6CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6DF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'hC06C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #519 178daabb-0afd-4b1d-8831-3efdaba3b126)");
unit.assert_eq16(16'hD165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #519 fa6413b4-189c-4e1d-b760-6578b4dd7eef)");
unit.assert_eq16(16'h361E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #519 eea8a490-3fcc-48ab-b15a-df3016274d56)");
unit.assert_eq16(16'h6DF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 bc6e7ef3-64cb-477a-9043-9d6b448b9da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 ecea1a99-fdd2-4ea2-8bef-ff5da2d06ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 996815e7-2ac5-47c4-86a9-fcdd69b2092f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 6486ecb8-5b61-43ca-abaf-46421690e834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 1a716eae-d056-419b-93d3-9ec79fdea290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 fbfbd858-e764-499c-94fb-4c7eb1e3fd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 f197497d-4b21-4ecc-bef8-4aa13550bd5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD5DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8310;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h2DF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #520 65c4dbcd-a30a-4e84-9e3d-a186f3260701)");
unit.assert_eq16(16'h0F06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #520 55edd327-c434-4767-a264-da7c18b1fc0b)");
unit.assert_eq16(16'hC14D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #520 46ffc018-8fd7-41aa-9edb-a6f14049a866)");
unit.assert_eq16(16'h8310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 a27d67ea-edb2-415f-af77-2ac82c8e22d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 fd56f7fc-9f4a-41ba-878d-405e26db918d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 f7a8fd98-6740-46da-9390-1303fcef15f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 6229cccc-00c0-4a2c-8a75-5b508730bf9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 acce37ae-6a6a-45d0-86e5-080fa4f164d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 2a33fd7e-d65b-40d2-b77a-f77e27de0d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 8f623384-b4cf-4eda-b250-a4808d9feb0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3C79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8418;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h3C79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #521 0372cd83-6ca6-4302-b998-69b78d88474b)");
unit.assert_eq16(16'h8418, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #521 2a6f34c5-9da6-453a-aaf8-6024e2a148b0)");
unit.assert_eq16(16'h41EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #521 dc513f15-4940-45f1-8b7e-9f53d81ba215)");
unit.assert_eq16(16'h45F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 d737dffd-da11-4c03-bce5-34837d6a67fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 8041e847-51e2-4015-b733-6fe85e762893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 6a7097f9-aeae-4f86-8191-8f4c91b85ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 677b4eb1-a864-43e0-a377-2abe7ea1f80a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 8a96be29-f55b-4114-bc3b-1c8c9d44f25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 620b8985-9dcc-46c1-a6ac-39754a8ee46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 0da00ed6-9ea9-4f11-b6ec-4fbbc99c28db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4619;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA788;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h9B65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #522 b11013db-e5d1-4792-8659-b5651079d173)");
unit.assert_eq16(16'h4619, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #522 c3df71d7-7e2c-43e6-9553-adaf3d37d00c)");
unit.assert_eq16(16'h4F6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #522 19f41ce3-0248-4109-b7b1-b6fa64cf95eb)");
unit.assert_eq16(16'hA788, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 7ae8f441-ba75-4627-8e3e-52a76a2dd607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 98778227-027f-4bd9-ae0d-38096d960c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 843aed50-a37b-4d94-9296-eea24f3ea888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 270cdf45-9a0b-4ced-9d54-977f9b8ea1a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 b598b37a-70ba-44e3-8385-6cffafce0473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 def0b867-1a12-42d3-95cd-87252fe2830f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 66c8b79d-bfac-4601-b2a8-30030a2769fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDBC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC7C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEB9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'hBDBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #523 2687c979-9ad4-4f08-a897-08445b0bd79e)");
unit.assert_eq16(16'hD4B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #523 e7cc32fd-07be-47e1-9fd4-eb0232eb6156)");
unit.assert_eq16(16'hDDAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #523 a7028511-0e26-4646-81b1-df3b45cb86d2)");
unit.assert_eq16(16'hEB9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 14270f4d-325c-4053-8b59-834d89459fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 874becc3-4e5a-4b32-bb0b-ab31020e6c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 59d57f90-8282-4766-90be-477bc5ad82cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 c36cdcd3-ee70-4a4a-8bb9-bcfce769f994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 4da2eaf6-8e5a-4b7c-b57f-67709f0b6621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 fcc60a0e-fb3e-4e63-8997-d91528de33ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 64c041a3-56c4-48c9-aa19-11c18bb2e789)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h238B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h17C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h238B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #524 7b57cb8e-2e2a-4688-a53d-7759cb179aaf)");
unit.assert_eq16(16'h17C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #524 d44c22a6-aaa4-48ea-8885-8e3dfe6c81a6)");
unit.assert_eq16(16'h477E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #524 f5831f08-923a-4244-82b7-4f8047c31fbe)");
unit.assert_eq16(16'h4D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 e82f6e7e-7aba-49b4-a067-e5a3041cfd50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 3fbf535b-9b4f-4714-8703-2edc86438d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 acb485f4-30a8-4f73-888b-b77b78f4b367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 0b9531cb-b856-4021-a248-a49f9b203675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 6da5eb79-cbd8-4249-958d-e8e4779516e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 dbd6bf7b-a8ee-4fa9-8d6d-f9cb3a937c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 526816ce-e372-4856-ac9e-f1cb08e9af11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD662;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3779;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h33F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'hD662, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #525 e1dbfbc0-5562-4aed-bef6-9cc436863896)");
unit.assert_eq16(16'h3779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #525 9571ba65-18df-498c-a9e6-3c6947d9a5d1)");
unit.assert_eq16(16'h5B7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #525 77247d7e-e221-4126-9ed9-d4f4d234ba2b)");
unit.assert_eq16(16'h33F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 ca7fa889-f8e4-4459-acab-453f7fd5dc50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 850fdecd-8190-4acb-bad7-2272523df3a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 8f4ddd54-b237-4805-b002-5bbdc8d23317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 167105e2-d8da-4610-9dc4-74047ba3bedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 ffdb7ce5-b5a7-43a7-913c-856da7175ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 e060a3b7-e3d4-4f2a-8962-fb3ea81c5cd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 58092946-6586-4d5b-8da7-0c9075045e9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB9BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5483;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'hB9BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #526 a9946b21-f1e3-452b-a0a3-07fe4fc05e34)");
unit.assert_eq16(16'h5B66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #526 d625cc93-fed1-408f-ae8d-eaf9eb5cc473)");
unit.assert_eq16(16'hE27A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #526 9e5fef58-39aa-4394-b71e-a44243b05138)");
unit.assert_eq16(16'hDF29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 a5530c90-74b3-45cb-bdb5-051dcce71abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 9d10ae98-ce90-44c2-8bc4-8ae448a0b624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 31660c27-e0a4-4d53-970b-a7ef8dfb58f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 faebc1ba-40ff-4874-b523-16c790f24e34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 dd11a9fc-283b-452c-931b-1f2e4c220f40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 5a554a6c-7e71-42f2-b292-6c0ab1fadf9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 144c35d6-7f95-46e9-a770-539bc4ae3a82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h158A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h76A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h179A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h158A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #527 02c370b1-19ba-468f-823d-0b9f097aafed)");
unit.assert_eq16(16'h76A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #527 9f1778c1-8a0d-43ea-89e8-26e1ed276267)");
unit.assert_eq16(16'h4A44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #527 1ea1084f-6ce1-44bd-9063-5eb70e135731)");
unit.assert_eq16(16'h179A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 3e577b8b-b82c-406d-bd39-1804cca297cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 27d36bfb-83bb-461a-8e5d-bbcbd9f49b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 98035841-1bf0-4557-9e5d-c4be23fe5058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 1deb6b67-a6c2-4259-8af3-27870f68dc1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 9cbb9b6b-53d0-4a94-b2f6-3653a9a346b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 c86dbdaa-0765-4508-b985-d1dde385ba7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 4d20df59-f2d8-46db-ba2d-ba3ad71ed37e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA195;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'hABAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #528 d3d2058e-0b10-48ba-86c9-8faf4fb9de26)");
unit.assert_eq16(16'hA195, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #528 84ed7c5d-258a-4d01-abd6-9b80489f453c)");
unit.assert_eq16(16'h9B63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #528 0b4e0946-37a5-46f0-bd50-8b095fce8996)");
unit.assert_eq16(16'hDCAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 8f1625ea-acc7-4074-95a7-0afbc501deb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 679efb73-3e5b-474b-ba79-5156bdb994de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 f02657bf-8127-429d-863f-cd19dc8436d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 ced4d659-a694-4b92-b056-7ebe454544e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 97e577ac-ac08-48c5-8cc0-18c4793ddc58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 05c6f191-97ff-4bb1-9a29-13d61d54f275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 a1f4a00b-7619-41d8-8ddc-eaa318844cf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1D35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCD90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h1D35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #529 fc45bda3-c8be-4442-8cdb-c875a75b7d90)");
unit.assert_eq16(16'hCD90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #529 a4124df7-f93d-4bf4-8057-8a758ee6a011)");
unit.assert_eq16(16'h005E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #529 a409f20e-6b7e-4e62-a433-fef403378a0e)");
unit.assert_eq16(16'h4C0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 6ebb1b49-2d0c-4d6c-a93d-3ed845b8af39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 090b2b3a-8c64-427a-8c11-1815f12a0de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 0e5b84e3-e8dd-45da-b645-f210410cdeb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 ee0caf2c-7284-456d-a1aa-2ec023fe23bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 94eb8eb3-9cdc-4c4f-8648-ba6cbc02dcce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 6f887a66-04e4-408a-844d-43dd22e549c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 f98857ea-d5c4-4e49-ab73-aadec938a6f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE63D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4ED6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h71B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h365F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'hE63D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #530 9833a4bb-5e58-4dad-a2d6-d37b680671bc)");
unit.assert_eq16(16'h4ED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #530 2e6864ca-b50d-4127-be1f-cdd42dca4e48)");
unit.assert_eq16(16'h5FD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #530 2448a4be-4e16-48e4-8e1a-6bf9b4d94e61)");
unit.assert_eq16(16'h365F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 a86b728c-2ce7-40ad-968d-8ea269b1e9cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 05f83f03-48bc-4f5a-8ca0-dfdd1b552852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 ede547b2-9608-4848-b583-23914b732b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 d48d5813-4621-4397-a983-59a23502bf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 a78ab078-b0c7-4e28-93dc-d1e6d2fdefd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 e23851bb-65e5-42e8-ae45-3880e5ff65da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 52391fcd-2db4-4ce4-b10c-a4073e57118b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD30A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4033;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE8E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'hD30A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #531 7094c9ed-371a-4273-80e0-3e5b2f62659a)");
unit.assert_eq16(16'h4033, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #531 39dca22d-667f-422b-96a0-056c125b410e)");
unit.assert_eq16(16'h576B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #531 e9e0106f-6600-4151-a305-6a64fd3bfea3)");
unit.assert_eq16(16'hE8E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 7a419c85-728d-44bd-933c-81ffee14e4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 af495110-ac74-478a-b3bc-104295f64ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 e62c199a-675e-4f11-8fbf-dd68b218c086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 d51c2ec9-f003-4c8a-9efa-efb72a5a2b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 1e9cb7d3-6d17-4b31-a7f5-865e89e94fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 7aaa1199-e284-44e5-a301-8534339d77c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 5cb9d629-b3de-45d4-a5ef-e03c451b21e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC725;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'h9FB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #532 faa63793-729d-4cf3-844a-0cac11d24dac)");
unit.assert_eq16(16'hA7FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #532 548d7f82-3cae-4325-a732-136c4078efff)");
unit.assert_eq16(16'hBE7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #532 665d410b-c69a-4872-b9f1-452f0142dc91)");
unit.assert_eq16(16'hC725, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 c2685607-9029-4e5b-a3cc-2a604ad10d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 bf12c46f-42f0-4dfa-a28f-15e185e554db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 6022aff6-b280-436f-aa00-5bf73294e976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 a702ea3f-4b41-49dc-8840-7f415b2ed4e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 eaba523c-32e1-4c9e-b9c3-b32d4209c1ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 3fac288d-2e43-47ac-b757-7781380e2872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 3459fb2c-d7ae-48c9-b423-6d3fec777a0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB5AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC7A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC7FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'hB5AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #533 153ef6fd-086d-4a88-9888-3b742cc2ce74)");
unit.assert_eq16(16'hC7A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #533 69358815-28ff-4f4a-9248-665689e9d0f6)");
unit.assert_eq16(16'h94B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #533 169a4391-af31-4a0d-b26b-5ab74173733f)");
unit.assert_eq16(16'hC7FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 8eb0fd2b-dfc6-4ad3-8cde-be61195db154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 946b46fa-3923-424b-9c07-03fba96c5c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 b1a7f82d-f1b7-4f1c-b00e-f0e21300a017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 8f19300c-5f17-41ea-a332-fd6a0b300fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 9857d61c-45bc-415f-a5cb-4f45bfc35f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 5fb79be6-300e-4d0f-ad14-7b1c7793cf3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 78b6c0b1-3dda-4edc-b32c-116b12816ebb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h86A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF699;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h86A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #534 50deac1b-be41-4161-bb8d-7fd24a8fbb5a)");
unit.assert_eq16(16'hF699, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #534 5afecae2-ea30-4366-8dee-d3c7dd3f42e4)");
unit.assert_eq16(16'hB110, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #534 6085e5c8-3a59-4fe9-9c6e-c7eaae0a6ec6)");
unit.assert_eq16(16'hCB6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 1384d38a-c8d9-462b-8bf0-ec8f803befdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 a99286c5-e484-4ad7-bbf0-6276aa2ac718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 5016204c-2479-4ef0-909d-1428d1b78c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 ab8a17c9-b683-4a85-8102-74e21f8c1f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 dc695503-bed8-481d-a7a7-9b4ffb74b1a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 b14e2c5a-9926-4e9e-9466-9fda5d54bc6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 f7c23507-4606-459e-9585-a09e3c7c9511)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE2BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h5B50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #535 ca5093d2-7060-4398-bd4c-7262b970e77a)");
unit.assert_eq16(16'h8C6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #535 dfe4ceb9-5a4c-4f56-be88-a58066e4463e)");
unit.assert_eq16(16'h6A09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #535 a90e6383-7dbb-44c4-a485-fc64b8ea32a3)");
unit.assert_eq16(16'hE2BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 444b42de-af57-4574-8a06-2fb20f260101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 b0656ab7-4077-4f94-bc21-3e0c04c31f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 88355dd2-8cc8-459c-93e4-66b80640dec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 265a9b37-d310-4ac4-a0eb-24f22de1a124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 27068d1f-dea0-46e0-9ea2-8c6c0519679e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 e9d8deed-7ac0-4581-990e-d63f47beff20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 b12c538b-e6ba-476d-98e4-92c6ef53c2bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA007;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF0DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0747;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6831;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'hA007, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #536 2fda9ff7-ee9d-4bc1-9202-41c472a43a80)");
unit.assert_eq16(16'hF0DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #536 3f7b63ed-9c05-45b6-8df7-d1c91cdb55f5)");
unit.assert_eq16(16'hAB36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #536 0ed9a036-523a-468d-8c06-044fc1d55002)");
unit.assert_eq16(16'h6831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 71b3d4e1-87e8-4967-8e28-9b4ddadc32b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 8c213fbb-1500-4eb4-ba6a-a2a19abe9913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 5b34a85e-dee2-4fcf-ada7-2af865d2f1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 7e3f7523-5822-444b-a068-0a72dbb4086d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 3d06c4a7-3f1b-4663-abb2-cb4b12cb56f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 34b09876-2b66-41d1-baae-2590b73ad9c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 daec7481-3bb7-4fb0-a47c-cf7bda0a91d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFBA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'hFBA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #537 2471eede-98a1-45b9-825c-fe291be89774)");
unit.assert_eq16(16'h30C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #537 822fb12f-1f5e-43c2-9088-0a015726e6f2)");
unit.assert_eq16(16'hECEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #537 39209e31-79a3-427b-a85d-d08ed4c5f005)");
unit.assert_eq16(16'h7E98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 b92f5bed-7929-43b2-9826-bad25a520de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 986fd4b9-ee1a-4f04-84b4-9cbd58964dd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 0a12a7ef-8a7d-42b5-b95a-30c37dcc075f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 d0349c2c-93c6-4923-8449-9c5dc62bb224)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 066c56e4-59d7-4777-8963-c566cd0f7579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 0596bfef-2dfe-49ca-ad81-989f98998d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 8c8a01a1-dbd4-49be-a9ed-d7baead61be8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7582;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC051;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h03F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #538 443e7bc3-7484-40a0-9a29-5905c22cbf65)");
unit.assert_eq16(16'h7582, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #538 ecf6ed61-cb1e-4597-bf8f-f84d3a6cafaf)");
unit.assert_eq16(16'hF1FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #538 2cb7db24-726b-490a-bea1-643ed2d6ac78)");
unit.assert_eq16(16'h3A05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 c4dc3285-2a85-4b13-a271-7cb571f3ca0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 e2f896c5-224e-42bd-a431-5253ee3d8893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 1ee7acae-1829-456a-9db5-ad72768c73f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 6ba08229-5b96-49e7-b4e5-3d4eae13d0be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 e21eb9fe-8487-4a6a-a942-57becef8664a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 c3814cdd-f675-4204-8433-40e352110973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 fddfd75e-e938-4b15-8228-18016f4b31b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h29B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h221E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h29B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #539 b2429be8-ebbd-4840-8fc9-f256618a3f23)");
unit.assert_eq16(16'hED4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #539 7032d2a7-c8c5-4258-875e-578a784930bd)");
unit.assert_eq16(16'hBA10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #539 ccdad5ef-432e-4ea4-bb91-8810742e7351)");
unit.assert_eq16(16'h221E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 75f0f27f-5acf-44b2-b89d-af6702d56067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 c1758081-e844-4aaa-b807-a4f7f7f7956e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 f8029f67-015a-4e6f-a921-d4a45be131e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 d49ba985-40b6-44a7-a63a-2ab6e603505d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 721e2f24-9b5a-41bf-b99d-7c8b7d2a9418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 9997dab5-2138-4d95-8c89-772229c3850b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 cfdac3ad-691d-4b60-bddb-f804015e1dfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h75CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC81F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB450;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h5EF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #540 46a7bc6f-b0a4-4b38-ba94-05abe4010285)");
unit.assert_eq16(16'h75CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #540 5da77224-4e21-48e2-b955-afb9a153c2b5)");
unit.assert_eq16(16'h3E14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #540 ef6e8d46-655b-42f8-9d33-584233ba454d)");
unit.assert_eq16(16'hB450, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 cf36a18a-2479-4e86-9c98-5cec33512500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 82f9c34a-9ec8-4724-9e52-816f5a2d0227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 57493c7a-e04c-4635-84a0-690b96594d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 4bff93ea-9537-4a8b-a4ab-e1111e7ae9c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 747ce73b-fa0a-4de5-bbe8-42e44395f434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 159c26c2-6814-495a-b39a-7eacfc9bd25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 24f6242f-5109-4e3a-9ed3-6197af71c8bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9AD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'hAAC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #541 06116ea3-5173-45ec-a54c-19327ee2891f)");
unit.assert_eq16(16'h9AD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #541 ac2d6397-e514-4434-8b3e-18f916dd5f5a)");
unit.assert_eq16(16'hF5DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #541 90563a10-9db8-4bfc-8eba-ccf670556882)");
unit.assert_eq16(16'h027A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 7cc528eb-3b71-4d24-9fc7-826909696b73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 0f5102d4-5e8d-4978-bdfc-f600b7780ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 257aebba-8723-4c70-8532-2494d84147f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 007c0412-d547-4bd3-8190-e8bed7279130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 4b82a141-4473-4640-8872-e686feaacf72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 e32e61c3-046a-4272-b45a-793ce94c1a83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 6f0bd602-de33-4183-ab10-58979ccf4b9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h509F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAEFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ED7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF64E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h509F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #542 78c087b0-88bf-45be-bcc3-c59f9101080e)");
unit.assert_eq16(16'hAEFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #542 984b3205-1118-4c12-8d7c-b612901f7c8c)");
unit.assert_eq16(16'h5972, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #542 9a57f38f-142f-4d61-a66d-4889d8dfc3ed)");
unit.assert_eq16(16'hF64E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 094fe3a7-286d-4008-b5a9-3c7462b15721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 cf0c0f58-d670-4022-a910-3b26ee2a24af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 4ec448a5-022e-4330-bbcc-3f7873a63ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 a5b6983b-0c8c-414a-9fec-880907eda217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 c11048f8-6704-4655-baa7-b3c427559528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 0a90b972-adc2-460c-89fe-606b18052067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 6b09f70a-55df-40c6-b94b-a1d7d8648051)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6856;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE67F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE695;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h7E49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #543 f5f34767-ea68-4c9a-8867-c69bd5354f36)");
unit.assert_eq16(16'h6856, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #543 6d9b0249-1b4a-4bbb-b447-a09fa3c489fb)");
unit.assert_eq16(16'h1B05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #543 777ba45c-676c-4338-821b-e7bcc2322012)");
unit.assert_eq16(16'hE695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 47ffe81e-0435-4f4f-b590-fc5384a781a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 a1bb42b6-e138-4c06-97af-0b483aa4075b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 a04a9585-0102-403e-b648-41a26b5bc468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 a2d40f27-b8a8-456a-bf28-35733c1f010e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 c03128eb-b424-42ff-9431-c4bf7c85c6f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 89cb36b5-a2c0-486f-a446-1d80a9aabbb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 9aacfca9-4d53-4816-97b1-459b6f79c9f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h44B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'hFB18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #544 fb2ad5db-b8c7-4a96-9a98-2aeba50eeed7)");
unit.assert_eq16(16'h0B6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #544 53641d85-f667-4b30-ba27-66aa6900f088)");
unit.assert_eq16(16'h9EBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #544 1bf9addb-6cc5-439b-804d-ddcefd74338d)");
unit.assert_eq16(16'hDE08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 2e62efdb-6522-4e72-8a2e-772f8411228b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 825640ab-2000-4092-af83-10671a2b3e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 d857c235-16b0-41e6-b6a1-2c36f2d1bac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 87d3b0c6-398b-4511-943a-594d9e1e5e4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 ce38ec1b-05bf-4fd5-983b-bfa667de0d92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 35a38e67-a1c9-483e-af1c-25376b297c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 851f8226-b8af-4cb9-8378-b997c362bf0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h59A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAAAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9773;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCA03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h59A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #545 96a982be-e9b3-46d7-b56b-793a142000b4)");
unit.assert_eq16(16'hAAAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #545 113d3870-bdcc-4cd0-bf55-f79dc179ad01)");
unit.assert_eq16(16'hC496, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #545 148cd3b3-54e2-4e8c-b874-c81e5df4e31b)");
unit.assert_eq16(16'hCA03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 4378bef5-668a-44bf-b579-9c11ffd874c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 6a0b5bd0-2982-4cd7-9d52-df6b62264fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 328969d0-456c-4a61-b5ac-3a21df618b28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 800098b9-a91e-4cd2-8161-35c5916ea48e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 48a4949f-ccf0-45d3-b981-3dcc38481dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 999ce46f-7a05-4206-9b5f-4219fec3b44d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 ecc08fc6-0dc3-4e5a-aae8-2d1bc0c55d29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD92F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFBD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCA5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h0F90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #546 d8e11fda-8728-46a2-8b8b-7c79978ad7dd)");
unit.assert_eq16(16'hD92F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #546 a161d0da-7102-4591-b92c-680362a7e5ac)");
unit.assert_eq16(16'h52C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #546 1225c120-bd1d-4cec-8921-6b034c969056)");
unit.assert_eq16(16'hCA5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 fb098aa4-0a14-4050-95c5-8ebeeeb16449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 ab16d8a5-9417-45b6-8410-0966f08df66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 3254a0bd-281c-435f-a92b-53b094b2203c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 39f8b8d2-9dcd-496b-8c4d-02650736bdad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 dec2ae22-d729-4ed4-b94d-346933f8bfa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 e3585bae-db18-42d8-9283-e8a392f7e196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 05edcfb1-8ac5-4c53-bed1-bb8d3abcdca2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD885;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFC86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7445;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'hD885, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #547 af0cda11-0a50-4753-bd19-4f9c136b0e37)");
unit.assert_eq16(16'hFC86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #547 42ec9490-d5ef-4422-93d3-fbaf5261d62d)");
unit.assert_eq16(16'h29C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #547 620a37a4-e7ba-45a1-9685-f1b98e053d86)");
unit.assert_eq16(16'hBB9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 513c2a09-5de4-459d-a309-33c6367b18e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 5c9fbb49-8474-4a61-8703-14718f1a2f39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 7d89cfaf-4bbd-459c-ae19-693d67470f46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 e54caeef-c244-4e6c-ae51-da0a37c74976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 4c09e91a-ed1e-4cc2-8962-be6fc3b7f905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 aabc09b3-521a-4a5f-9e8f-be3ae17d831c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 d6a1c9ac-10ba-401c-ada1-1c43a7167547)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2176;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2225;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2CF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h2176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #548 c1a7d901-d5f7-4190-9531-f40cd1f42be0)");
unit.assert_eq16(16'h2225, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #548 588ec740-9534-4707-941a-d3af07936dda)");
unit.assert_eq16(16'hED15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #548 7229d258-fece-4fd2-93fd-5b8a6a7b3a63)");
unit.assert_eq16(16'h2CF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 69c20e62-c181-4015-97d7-0aea58c008cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 f55f9579-690e-430e-b1bc-2ca3e73fba75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 2e33735c-d1d7-43c9-bb17-b59702b4c259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 51f257ab-fcd3-4d4d-a1ab-727ae50d82b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 ce6107b0-bc5a-4be2-8a22-a3cb7cc1f2b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 43aeae58-b39a-4b16-8fc8-302a20e90629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 b42679c1-1846-4b5c-9bb9-353c9e149448)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5823;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF87E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h31B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'h5823, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #549 640d9742-2e30-4d19-bb6f-6e2a57825632)");
unit.assert_eq16(16'hF87E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #549 6e99d7cd-9f26-4809-88de-d9ef89137f63)");
unit.assert_eq16(16'h5610, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #549 a8b8f0d2-ef5b-4d05-961a-f0cf239a4f1c)");
unit.assert_eq16(16'h31B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 5f8b3309-5c19-4a61-a1f5-b61b0441bf6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 bc765237-08a7-4b0a-b020-2e8eb3534451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 b3f02497-cbee-4284-b956-23044d603e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 d8b8c4ee-3ff0-4cc5-97a7-a8f6dbe76c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 d9bb3271-ea2b-4b24-9a3a-491f54cd0fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 17d6379c-4e21-4095-9e64-f168311f94df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 88b302f9-5ee3-4d83-9a6c-a383fa93fb09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD5D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h9CA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #550 525fbdd7-b0dd-4ee6-84b6-1c8a44916895)");
unit.assert_eq16(16'hD5D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #550 ab53722f-ac97-4e69-a0c0-410b48de2283)");
unit.assert_eq16(16'h3002, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #550 0af3e9ff-b430-40f5-b148-6c031363dace)");
unit.assert_eq16(16'hA8D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 09b27352-5646-4050-bba0-77315cbb4ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 b72f3df6-83d2-4cfe-b1b5-f1365f6d601e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 a8b1c1f7-9f16-458f-b0e0-cbe6376e7c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 2771f2c8-9300-45b5-961b-257f43eb2c07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 70295ec3-98d0-464b-8575-6b63016fd20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 a5fcaad7-2286-4afc-9158-109df1538e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 0913852a-dd87-416c-98ca-25d3dec1cb0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h102A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h831A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h102A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #551 f4d69bb5-a8aa-4ca7-8bd0-11e1ec180bcb)");
unit.assert_eq16(16'h831A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #551 32b55b85-43ee-4947-9dae-e5466768a7d1)");
unit.assert_eq16(16'h5BF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #551 fa41c4b0-2e00-4508-9735-ec6e6adb5fc3)");
unit.assert_eq16(16'hFFDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 02403347-c7c3-48a3-b06f-037bb7e8673e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 48f3af7a-8fca-4d15-8f72-40f301086c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 ef1f9762-be18-4257-81ff-65e8e5335678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 72bd1818-763b-4a44-8e0b-7326ecb9171e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 1c42a1e6-62db-4e38-8556-42d882134bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 8de9ceb0-1e90-4d7d-9ed8-0cc5662d9e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 d6d23835-6433-44ee-8bf6-839c8ae0b305)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DBD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4EA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE899;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h876B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h4DBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #552 10241694-e417-439c-9ea9-4456b4f4d447)");
unit.assert_eq16(16'h4EA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #552 9bc1976f-9c4a-42a7-9104-85eea36eaa20)");
unit.assert_eq16(16'hD675, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #552 9e0abb9f-2f87-4601-872d-74992df438c7)");
unit.assert_eq16(16'h876B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 1751fbe8-cb97-4f18-848c-868b07947c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 df74ff5c-dc9f-4019-aef8-a0b00d25c35c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 5cc69a56-5047-4483-b4d6-d6c66ada5465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 6f878ba3-e124-4821-9af0-f0b7372bb5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 8fc2e3fe-3715-43c7-990e-c8277bab3211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 6fae7da0-9d56-4d57-b592-a9016477ce31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 8e4eee7f-e695-4607-9ecb-cccf6931677c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h462B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4309;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCCD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h123E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h462B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #553 a0cc17ac-2482-48cd-9d79-80a73c8e2ce5)");
unit.assert_eq16(16'h4309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #553 a77fd92b-593e-48d1-a78d-38f673f208fe)");
unit.assert_eq16(16'h2537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #553 c26aea1e-01fd-4365-8162-27166e323bdd)");
unit.assert_eq16(16'h123E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 2906579a-368a-4d35-99bf-d8097a0544a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 110dade9-a21b-4f7c-a692-8ac3f07aae60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 bb67aeae-5fcf-487c-9b30-bc38a94078f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 dad43ded-3ba3-4abf-a487-a4a370003973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 1716cb25-d032-46ae-894c-9b355eb73421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 2c27ea60-36df-4c28-8591-46340ece91f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 027baa7e-1052-4261-ae95-eb24a0cf4bf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h59A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h155E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h59A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #554 3c1a7eef-ee59-4fab-9d71-7d99b4e3a942)");
unit.assert_eq16(16'h155E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #554 a26a20eb-6384-404b-bdf0-32dc8f6073cf)");
unit.assert_eq16(16'hC74D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #554 68634834-25ac-4c63-afcd-17214bca0773)");
unit.assert_eq16(16'h5C45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 0cc95c68-1b97-4a56-aed8-b5858a4a0fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 38051171-ccf3-49a5-8a2c-5e61b60d5869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 d3caebe0-736c-4191-9c57-d242b4e98ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 d21f4aab-9445-4863-a95f-4f48b948410d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 3d7dac26-3889-450c-96f4-febe97d80022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 041566cd-709f-4cae-92a8-7970e8cf37e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 50eec56b-0aa2-4a15-afac-82d60cc9c70e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA68D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h570A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'hA68D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #555 e6b8aa16-b928-4dbf-b8e4-42265533e3ca)");
unit.assert_eq16(16'h4F55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #555 63d3376d-14d7-49cd-ae18-9391bc521de0)");
unit.assert_eq16(16'hF583, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #555 b30e8513-b949-4f1f-8bd5-31dc87c19b58)");
unit.assert_eq16(16'h570A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 2d974eac-a17a-46cd-8e26-94a8ca9db0c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 d4e985fa-fed0-4513-a254-f2721595e166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 dd6d23a2-4f66-40a1-a78f-37a0431c2ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 dfabfd25-0cea-4f4f-a750-0cc4813e666c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 a839d8ef-f72a-41f1-939d-30c48a56cdcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 14260fb6-2ee2-4398-84da-af69eb39f362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 c2a39c32-4be9-4afa-98ed-8f141af801d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC598;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2355;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC999;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'hC598, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #556 ea3952c2-f805-4704-916c-6297831aae80)");
unit.assert_eq16(16'h2355, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #556 d0847ac0-0975-4206-a571-58d619d9f1d9)");
unit.assert_eq16(16'hED2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #556 10d62853-b25d-461b-87f8-bb0dfa8f77de)");
unit.assert_eq16(16'hC999, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 37d3971b-5d0a-4b08-8a86-952340494a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 f2774e7c-8de8-4949-82bb-45800516b8b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 577ab668-17ec-4bae-9a90-316eb3188ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 db308f43-3773-49a5-80ca-a2eb8f12ac15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 923e4f97-a7e8-44ff-b5a0-89467cd7c938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 971e5345-c2e9-43e8-af6e-9af83d1d6489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 e5cfedde-51c4-4e4b-8c0e-110ee0512f6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF5AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCF95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'hCC07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #557 77d90128-7c3e-4f8d-833c-4a63c5bca021)");
unit.assert_eq16(16'hF5AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #557 452c7f4e-b6b2-4768-a842-66e026f41992)");
unit.assert_eq16(16'h8C00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #557 988335f3-e6f8-4d71-9a07-2e5a84ede168)");
unit.assert_eq16(16'h7255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 55bfc352-27a1-41f3-8eb3-257223f4b572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 cd698b6c-e504-411c-a049-abe4128de5bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 e98b347d-3c5a-4b03-9b02-eafa9082553c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 603215c4-3103-4f2c-9bf7-1f26337f36b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 f1cff793-163b-493a-968d-6731775a5e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 3aeda014-858b-4874-beec-225b5ff36e2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 eee1c337-1f0a-4d71-bf3c-7a160f359ebb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0EE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA2AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h136A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0EE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #558 777eefe0-a6cb-4b63-b165-cdd679b9e9af)");
unit.assert_eq16(16'hA2AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #558 76b01832-0fe5-40d7-8e54-f2a6d913fbb9)");
unit.assert_eq16(16'hEB2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #558 0233efd7-06e2-467a-a556-57244716803c)");
unit.assert_eq16(16'h136A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 3eef20c3-d3a3-4bff-80b1-fe444bad19c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 e1cf06ef-1ff4-430b-b724-8a48bb12f2c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 5ec4bb74-c4c1-4cd8-aade-6c487ab49705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 716fdee1-752b-4ac7-8e4e-fdc80f81315c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 0c931e7c-1e28-4cc6-9ac7-d623c4b034a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 94cb16fc-f6a4-4867-94d1-3f01a168c6ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 d9d0ef0c-fed9-4b0d-977a-259592e4bbbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9773;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA0B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4165;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB381;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h9773, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #559 90d41baf-8152-4511-a70b-878c1947952d)");
unit.assert_eq16(16'hA0B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #559 24961424-0cd1-4c5c-88ff-8d8fbcb22ffd)");
unit.assert_eq16(16'hDD86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #559 6cb122dc-bc33-4fea-a08f-a3bbff30004a)");
unit.assert_eq16(16'hB381, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 bb38dfdc-194c-4026-affb-981a33e2342a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 c81704e8-7140-4239-bfdf-5c556e7144ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 4c48b3dc-f537-491c-ba57-af9f1bb3133f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 9613b76c-4954-4936-8504-6839958c874a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 17252093-e2b7-4e6d-835c-124360c33ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 118a3861-686b-4403-8180-4a1ec0bf6ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 425e68a4-7091-4b9f-b9b6-09bf29302bd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h59F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8EF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCD9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h59F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #560 fd4159a6-c3e6-49b3-b1ca-0505eb3a1d11)");
unit.assert_eq16(16'h8EF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #560 3f78fe93-63f7-423b-9bc9-52ee75a9f9aa)");
unit.assert_eq16(16'h019A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #560 000b79d9-1870-4177-beea-dba47a259b6e)");
unit.assert_eq16(16'hCD9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 8e17eaa3-1ba4-4d8b-bbfd-930274587db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 b54cc958-a3fd-4703-b687-0679fcf62d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 efc2b122-808d-43cf-a72d-689fa4a9ad03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 a27737ac-ba5d-4124-bec2-1935a34139f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 da2bd5d6-0939-45d9-a771-e4ad4e3c609b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 2b38e404-e91f-480c-b300-398a09ded98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 0d26ea42-f097-4f47-bc84-6b122a4738f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1736;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h394E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCDCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h95C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h1736, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #561 6ec476b7-af0e-4189-b536-42c07efb3482)");
unit.assert_eq16(16'h394E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #561 dd46e743-60f8-4b96-8248-cd3de4c1e8aa)");
unit.assert_eq16(16'hD9E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #561 e2b0ed09-f2d9-4f5b-8b17-1e882b4a20bf)");
unit.assert_eq16(16'h95C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 cb0ea619-e9d1-4d31-a45f-b23bdbe43f3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 75529398-c3f2-404e-94ad-91d401e2b28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 426e46b2-7a59-4076-b268-61d2da67f140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 2513b10e-9798-4dd9-8bdb-7820db4b0805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 ca4168e9-0c08-4276-a136-267bcb3c72b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 065c438a-c2a9-425e-99cc-1e2b726a2d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 cf0838bc-d18c-4856-a959-411ec8b486c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9637;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE099;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h57F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h9637, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #562 cb9f2ef1-b3ff-401f-9bc4-c18fc317132a)");
unit.assert_eq16(16'hE099, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #562 240742ae-fa8f-48eb-bee6-f233e36278b0)");
unit.assert_eq16(16'hE537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #562 13009eb8-65bf-4bd9-9712-6c9912a622d9)");
unit.assert_eq16(16'hA6E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 af9d785c-b536-470f-a3fd-4ba732cb816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 754b6c33-661c-45c9-832e-5667f2b6cbc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 452d72b9-39e8-4202-b634-d980847fb7af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 c0f43ea4-4659-4249-9dd0-8e7eed6842ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 8e9d3a81-19ab-4137-a593-5b9ee354aa81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 bd487662-08d4-44ca-81f6-97effea03d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 81872e45-90a5-42a6-bed3-5ab4543f8036)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEF99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF77A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEBF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9654;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'hEF99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #563 71e80006-27bc-4bbb-9d57-351817ec7c38)");
unit.assert_eq16(16'hF77A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #563 20b27612-80e2-4d1e-9fe4-09fa10ff5699)");
unit.assert_eq16(16'hAD6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #563 cacd65fc-2f61-4a61-b143-6c6e9013065a)");
unit.assert_eq16(16'h9654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 575fdc2c-efee-4d58-b28a-8612de47c260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 d2844f61-ea24-4429-bc97-439aed11c2ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 7f7560c9-157d-4996-87fc-416330f7eb87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 b8667246-237d-4484-b1af-4fcdf221ec16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 07adc562-b664-42cd-84ea-5ee77bba2600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 7fd042be-687f-4057-a468-d186ebf56e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 08b1d129-39ab-423b-953a-079a90d1e5f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBFFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1FE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h9B42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #564 63b9f0a9-7557-4ff6-aaa8-3fd78eedea51)");
unit.assert_eq16(16'hBFFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #564 06847521-b565-45be-aed5-5002bb7036cd)");
unit.assert_eq16(16'h54C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #564 3b2db727-1c75-47c6-80a7-1d637252e2f2)");
unit.assert_eq16(16'h48AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 d1f97893-6219-4513-9cee-f15cb2576f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 42cfd818-d238-4be9-a5a9-7e066cf09b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 3cf7a046-6f7c-4e10-b9fc-c2588e0c4462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 91a2fdc8-5b20-4dad-ab0e-e456a039db9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 9c395280-da8b-48a6-9b44-1ba87f5146fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 4dc4655b-6413-4141-be90-88a7458a7c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 4dfa8e24-2aed-48df-a5dd-c0b61a7e42f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8DDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDDC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'hBF66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #565 43baaeac-9776-4a01-92d6-6b21702a0c1e)");
unit.assert_eq16(16'h8DDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #565 aa2045e9-cdb8-46cc-aa6b-483d8afd21e4)");
unit.assert_eq16(16'h94B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #565 220b0661-cc50-45f7-980a-0d6e364118ba)");
unit.assert_eq16(16'h13CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 f323fc85-f621-41f0-938b-5bec5ae57aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 099d6970-c7ad-4083-8ce3-e19674278da5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 3d09bdce-e259-4322-ba1e-484c065fa905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 acb4b8ad-ba17-4b6d-a49e-a16b9c56b655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 b0e9c04c-c5ff-4fb8-af6b-780610eda557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 d0db2322-52d7-481c-895d-65b598a57955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 778143ff-0576-4e30-924c-02926eee9d35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE2FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7678;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1345;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'hBA06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #566 b008dcd6-3da5-4de4-aba0-8eb5e163fa05)");
unit.assert_eq16(16'hE2FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #566 a9e52b5c-33ac-458e-b470-b27f9cf038d2)");
unit.assert_eq16(16'hA092, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #566 51a6cf03-19e8-453b-84cf-3183d24573ce)");
unit.assert_eq16(16'h1345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 cd1b9098-37c9-41df-b793-d4eeb5cc33e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 c5ab4735-654d-4b95-b880-d5a517c93f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 82dd6b75-be23-4b7c-8143-1ddd1708dba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 71762140-04dc-4e6c-9af1-c26116575696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 88d5b2cb-997d-4cb0-b7b4-efc32a9590c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 d1de90e4-d1fe-4e45-b0b6-3f2425d0a667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 2a01647a-6660-4514-b40d-2bc1ad5fbc73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA258;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4013;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE4F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'hA258, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #567 9f5026e3-8fcd-48aa-86b5-08d86790f6be)");
unit.assert_eq16(16'h4013, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #567 75a8daa4-ebd5-4ef0-b1ff-0ba38af5ae04)");
unit.assert_eq16(16'h17F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #567 3b354877-4a69-4c6d-b9d1-2456a6e76ba5)");
unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 d09bd044-d8fa-4a31-aed1-ea62a22ca880)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 f98a4799-e943-43ce-ae68-18ea06cdf79c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 7373e396-9fb5-4e17-868b-9df53171ce77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 2d97b15f-24ee-4d99-b9ac-29a3db36bea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 e9ae05c3-0ef4-429c-93e1-d4b2dc858bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 3b26b7cf-bc13-4343-b7bf-0223fd38e549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 3b10c023-104c-4503-ad66-63bf66152f1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h11C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h97CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8328;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h11C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #568 acca6a10-6a9c-4b95-93e8-dd89a7de0358)");
unit.assert_eq16(16'h97CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #568 92595a2b-c67b-4d0e-8254-6ce7fac8079f)");
unit.assert_eq16(16'hB05D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #568 4af765e6-36c9-411d-8648-654e7ed73ca4)");
unit.assert_eq16(16'hD440, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 1e3c9f80-ecc2-47d7-9fc5-38fe60027726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 27705432-b5ec-41b9-9a38-085063b451ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 a0fcfab9-20ef-462b-92de-feddb95c0d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 997fed70-3171-49c7-bcd5-eef948bf41a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 4fd0be4d-374f-433f-9a47-e349f9d9510d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 bcbbfc88-4f9b-4c2e-9dad-29b9612b16d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 30090c07-e9e5-4536-bff0-f94d6735fdab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB728;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCA4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3883;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA272;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'hB728, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #569 7f3eda45-4d37-430d-b34e-0aa50eb89802)");
unit.assert_eq16(16'hCA4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #569 0770f727-3ff1-40dd-aaab-4c2f4c15bb45)");
unit.assert_eq16(16'h90F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #569 3766c106-4e02-46b1-a5a6-39d7d14cfaab)");
unit.assert_eq16(16'hA272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 dcc9a66b-3b51-4fd3-908d-6a7a686f7a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 aba38ade-74c7-4353-904d-e9005d2e24cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 490df417-992b-43d6-9944-0ff62b4825a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 0a62cad1-d78a-49f2-b927-b14a0e2c8f9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 f15b874f-c545-4e7e-8934-9573abc6371a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 8e87329d-304d-4ec7-8891-26a527050173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 ef68ef2e-3195-40a4-b832-246b8406d8e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFCA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1085;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'hFCA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #570 b7f4cdf5-9215-48ec-8a43-e2f2fe26a156)");
unit.assert_eq16(16'h1085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #570 94663ccc-a83d-46db-802d-0a8dfd452b31)");
unit.assert_eq16(16'hA8F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #570 cd08d0eb-6827-4ba9-a3b8-4ebb1f66c5a8)");
unit.assert_eq16(16'h8DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 ab4cd30a-b428-45ce-a0c9-963ade9b499e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 91489e48-b49a-4d03-8523-82bc239e8214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 069e0ac2-6e20-46d0-9065-5c6cfe897ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 7cb5a3d8-4c63-4540-939e-f840134c463f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 1e310f89-4abd-4b02-ab12-4cc8374e9e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 789b32b3-de08-4883-a574-e6eac41c203e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 68f6fe5d-79e4-4d07-ad4f-1917809e8ff8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2455;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1354;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h18CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h2455, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #571 42145626-9599-481e-b947-ba70db0b0f0b)");
unit.assert_eq16(16'h85F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #571 6a2fb959-654c-47b7-8862-134b92cceed4)");
unit.assert_eq16(16'hE737, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #571 79386741-7bf1-4896-8826-3a2921992f64)");
unit.assert_eq16(16'h18CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 71d129c3-4b05-4971-a33f-f3e6e4f0ce8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 1cf3c0df-17e4-434f-b289-d2ced120456c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 5d641c6b-2c82-406f-a464-73a0cf1b2d5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 e38d62b3-a575-4b05-8280-dd95516ab0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 2c721d5e-906e-4928-8e45-46e131046c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 0655e5df-aa85-4134-84d8-d38ac9cdfcd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 6ae801b2-98d0-421e-aac1-0aaff01e6d18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC7CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEFFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE19F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'hE3E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #572 205553cd-be38-4874-b61b-291321647c2e)");
unit.assert_eq16(16'hC7CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #572 5bdad3ab-675b-486e-b678-77f19a719dcf)");
unit.assert_eq16(16'h618F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #572 2eb61e7e-abab-4b7f-8007-aaef1022480d)");
unit.assert_eq16(16'hE19F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 e19d1def-d1f7-4e2f-b724-d6e521335bed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 616b77e5-2ac0-4f6b-be2c-8ddc4d85e0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 729d417e-6955-434c-87e0-11390f74fc5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 1fe20e51-f92f-4612-a474-c92e72585dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 e7ec4a8a-42de-42ae-8e16-e93b4c3923f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 bb4cb666-e4d1-446c-90d0-327c63ffb858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 be472450-1be3-4aad-9ba6-8cab5ec471d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF437;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDFA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBDDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA2E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'hF437, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #573 ea473e58-65dd-40f3-8475-f7ea5f5795f6)");
unit.assert_eq16(16'hDFA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #573 8f7084fb-f28c-425a-a425-e8daae0b7913)");
unit.assert_eq16(16'h9A8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #573 3dca5c74-abe2-4e1e-9234-6cb775297b88)");
unit.assert_eq16(16'hA2E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 f5ab902f-60db-4cd9-a5da-ba32b90baada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 1a6595aa-9409-4fa8-849f-d38c2877dbef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 95214cc6-9fe7-4bf4-bbd8-f136b93bb1d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 153f2b86-6f79-48f6-b652-df3184d1810c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 1425414b-5e98-4c5e-846f-7823bee8053d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 957b631c-e1ce-47eb-9c15-81207ba22610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 c11c715e-db2f-4f0a-a26e-492b2616abdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h700E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB059;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE011;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3771;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h700E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #574 355730b1-f097-4737-a7bd-ddc340320863)");
unit.assert_eq16(16'hB059, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #574 7bd669cb-3f31-4639-8483-f47b16f446f2)");
unit.assert_eq16(16'h941C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #574 6034378e-3162-4183-b67d-61e554df2f69)");
unit.assert_eq16(16'h3771, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 1ca0eabc-eaf7-4561-b298-eb304a092e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 77e3f3b0-33b6-4806-82a2-617d1e866aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 7c59a1da-79d5-4b6b-88aa-8430467b6a15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 761570ef-ce3a-4cdf-bd09-742f458531ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 55cb6276-e46f-43fb-861a-8ab6e517933e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 e14d5c0f-ae66-4326-9ff4-0f3be45ca6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 17cf3352-3b6d-4e4c-8232-d1e7b8476202)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE9E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEE9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h33DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #575 9acea13f-380d-4a87-8982-3f63a0a7ccb2)");
unit.assert_eq16(16'hD2E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #575 53ec63a2-4b46-4a4b-9dd8-a7b3fb041650)");
unit.assert_eq16(16'h3D92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #575 f2298ea2-a3e9-4030-8bcd-263a27767c7b)");
unit.assert_eq16(16'hEE9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 016c3002-b7d6-49e5-aeb3-9fdc7f2d8113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 2055cb0d-d85d-4c7c-8226-69ebe4b22ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 96bb4626-005f-4f64-960d-4ed45a64b91b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 62453f32-09bd-4547-ac4c-cccc40697d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 1b885c8d-3f13-408b-a4d8-7c37b39eaa3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 ea9fc605-2c1c-48dc-aca5-ac2ce8e9ee60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 99f52ddf-e414-4786-9f9a-0eff9b5f414e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4461;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h981E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4DBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBBF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h4461, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #576 dc4dce88-5ecb-4892-b532-a0723d4ca5d3)");
unit.assert_eq16(16'h981E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #576 dc581652-3dff-46f6-96e8-1d7db4cf4655)");
unit.assert_eq16(16'h6841, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #576 ea4efc9b-45c7-4fb8-adb8-2c4d65f6ed2d)");
unit.assert_eq16(16'hBBF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 743c2c06-494d-42bd-b797-7a57af58952f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 e6cdedd3-9932-49f3-9ce0-4b255b2ca628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 6a7a49cc-6094-4395-af5c-d78441f30d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 ef760c3f-e854-44ce-af9d-3cd683a8877f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 8116b505-fc97-49e2-96f5-07d8fa88b2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 0a929f1c-ced9-4cdd-b824-dc3569b1e860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 26c123fa-fe69-4482-8584-920080051fc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8F64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h8F64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #577 163d60fb-91de-4aa9-b092-84f688f5e94e)");
unit.assert_eq16(16'hFB45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #577 97091799-de62-4285-8b3c-e6bd2eb4526f)");
unit.assert_eq16(16'h96E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #577 688f7635-eee8-4186-9fc6-2bfc4f2df8ad)");
unit.assert_eq16(16'h8C09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 ee0b26fe-80d9-4041-ae5e-a2d5a906ba8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 6326121d-4d37-4917-a455-43068f84003e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 5f3dec1a-2440-4636-a357-2b80f765b494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 7d00be3b-2925-4a76-a05f-0a693d9dd0a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 3e34284f-9f6c-4457-b9aa-f13d47450dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 5148e54a-7491-4556-b676-89216ab90d44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 8d638b27-c7f9-4f45-9847-fac1f7302282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h433B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'hD7C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #578 c1bf5f2d-6537-414a-8797-73d6b3fbf465)");
unit.assert_eq16(16'h55F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #578 750586ef-60e2-46d9-a1ee-b1784f7576b7)");
unit.assert_eq16(16'h03C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #578 15a478a3-7178-4954-ac7d-879a4201fc79)");
unit.assert_eq16(16'h433B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 01e12a5b-3a3e-477b-9bab-9663c974fa04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 ee7e3b14-ac05-466a-81b4-a1a6c58937d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 12acff24-8423-40a9-8f2f-ffec4a7211b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 272431c4-9335-4d08-bd00-b62c1b9b2829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 6a9112e8-dbd1-4002-a9d1-a451ee8a8ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 d9e7eece-3968-4092-87c5-40a8ebed21d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 c921f90c-be35-47e0-9485-e7e3a644ca7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h414E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3809;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'hDAB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #579 e28e30a5-3615-49be-ae9c-78a990ff9b91)");
unit.assert_eq16(16'h414E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #579 c6718a13-d439-48e8-aad9-5492a0ef3923)");
unit.assert_eq16(16'h698A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #579 83b88f02-5e73-4fda-bdd4-622c1d8261c2)");
unit.assert_eq16(16'h1F90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 dd1409e8-c992-41ba-ad08-13892dc1b405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 8ba0fc4a-eabd-4dc6-800e-ef8ce5499f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 5bc2595f-df49-41f8-9bab-5ccf260ce070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 10fe28d6-7670-442d-b351-9109641ca331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 6239bc44-e6ca-4607-b804-281daa0afca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 7dcb8f15-1e7b-408a-a281-5274b88f75eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 3639510b-0ff1-4a40-a8a5-c8a0121b2e08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2674;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7430;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h2674, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #580 691161a7-0b9a-4fef-8fe7-a2f3ee89b3ad)");
unit.assert_eq16(16'h7430, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #580 714459eb-cc0c-4a0a-929b-bec3d79c1572)");
unit.assert_eq16(16'h188F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #580 ae06d873-fefb-47bd-85f4-05fa75bc5130)");
unit.assert_eq16(16'hBC93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 f7a09ed0-90b6-4337-882e-3b3e8b137cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 b23f2e68-7c4a-4713-be10-be9725cdf002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 91cf9c74-89ca-49da-a7a7-12018857e57c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 b117530d-fefa-4d7b-a2d8-cd975cd06a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 063343b0-76cd-457d-8be9-49f5c919fdb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 5445add2-b269-46cb-9596-a652e784e602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 98efcc83-d275-45fb-b8cf-5ad8dca8a63b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h269F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5685;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0232;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h269F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #581 19675a5c-7894-4272-8571-a2e1697ff6ce)");
unit.assert_eq16(16'hDF1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #581 b44f9168-44fe-4ede-820e-9c87a523266f)");
unit.assert_eq16(16'hE463, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #581 a3854720-0fc9-4d80-86c5-cbee7720b407)");
unit.assert_eq16(16'h0232, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 96848514-83d2-482c-9b12-1d8a6d46fd59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 8e439ccf-8c8c-4950-9dfc-baf2874fe2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 da691f00-9091-433f-bb29-72f06e506e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 76ba7c2a-9a92-4374-8332-077118629226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 e8378d2e-dd69-4087-b283-e6014489eac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 a9508d5d-b0bb-46a7-b51b-5a455ffb2b6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 b4758297-ff84-417d-8669-ea7ff379be7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2106;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hADE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h2106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #582 4d3bb409-6a7c-4609-851b-39e4f513a839)");
unit.assert_eq16(16'h0B6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #582 3a38a3b8-619a-41d0-a948-3c4fdfd03c94)");
unit.assert_eq16(16'h2C16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #582 d045bc9a-9f09-4e31-bbfd-6835a3e4ba93)");
unit.assert_eq16(16'hADE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 a941254e-698c-4585-98cc-b7b59211c4ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 3bd3628c-5214-4655-9d29-76c2e97c8fbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 c846f4c6-7b98-445f-9988-327d0d481d4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 108682e0-4eee-46c0-b0f4-004703733aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 46917134-28c3-427e-9539-3a3d0b970ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 562aa4ee-a9d8-454f-9216-3cedfcaa500a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 14f2735f-e3ea-4f28-bc60-e60b7ac942d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1082;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5233;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h1082, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #583 ca570d4e-b605-4fe5-8177-da87cd3e6da5)");
unit.assert_eq16(16'h10AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #583 b11771f9-5777-4377-897d-b24d8541961b)");
unit.assert_eq16(16'hD087, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #583 30415a88-d657-4e7d-8ba8-60feede629f8)");
unit.assert_eq16(16'h5233, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 2e83504e-bbd6-4363-bdf7-93df43026858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 8e53a26d-bf4e-40c8-92c2-3d75090dc25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 d59077c8-d906-4d3c-afc5-8aeffd7b6c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 cd6e8487-695d-4eb5-ab98-ed9a7f980f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 94b27440-17a5-4511-81a3-651b9b4c9bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 947c8cf4-5efc-40d9-a31c-a01d1cf61acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 53b8a030-4f2e-4db9-895c-1b9940bdfec1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8329;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD397;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2986;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h8329, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #584 f6c999a9-056b-4978-a609-b39d30b319bf)");
unit.assert_eq16(16'hD397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #584 cbc58efd-f497-407e-909e-e8eef3b3211e)");
unit.assert_eq16(16'h229D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #584 8d8b95b4-cf7f-4b2d-9ccd-dca21a35a871)");
unit.assert_eq16(16'h2986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 e72391da-da5e-4bef-8d3d-975a7adad8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 c612fbb0-1fb2-49b9-9a42-a61672c42b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 792d1f23-0077-40f3-a30f-daff40473d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 c1b9d81d-f555-443e-a84a-3bdf6fe9ff56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 16f465fa-4345-4926-b25f-3877dd544d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 4e37f5b5-5f40-484c-bc45-3f3b15fac13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 9164fc49-5a57-484c-863e-32f726cf3eb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE29D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'hFF9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #585 b040df7f-0093-4efb-9ae9-5aaee793035c)");
unit.assert_eq16(16'h6C00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #585 c818d5f9-d5a1-4da1-8afe-bfdc116be43d)");
unit.assert_eq16(16'hA927, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #585 1205171f-7a92-4708-883d-39287ebabec6)");
unit.assert_eq16(16'hE29D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 34c71949-16de-4319-a8b0-e75e64beb68a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 ea6bc3ad-76fe-4ea3-a111-2a08f510c9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 feccd015-466c-427e-895a-c82b31989319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 f74bf15a-c13a-4ad0-8961-e5193ade8cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 e3344cc5-9a1c-4771-8619-bf598605e5a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 73d42bf2-164e-4094-bf89-b7edfb7d3bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 44d822d0-c755-4dcc-8639-21ce16953f6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD1C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h33AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9433;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'hD1C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #586 957531f8-5855-4861-a39b-a0e8f2f56cca)");
unit.assert_eq16(16'h33AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #586 305c8dcb-1d9b-45ec-ba61-95a1f31f61e7)");
unit.assert_eq16(16'h2FFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #586 b24b5221-f495-4b69-968f-b10f9b98a3bb)");
unit.assert_eq16(16'h9433, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 3cbb21bc-c67d-42bb-aa35-7c6317bb26a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 a4845dcb-b061-4533-af70-2b2047df0fd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 237bfc82-2bd4-4f0c-b566-a4fe3df456c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 9ed381a5-74db-4f3f-becf-198b12ffd696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 1a9e9a7e-b922-44fd-99b5-a7e37413ce29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 b8e92420-74c2-441d-901b-61d43ebae755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 6a1e512b-f952-4b80-b1d1-671130c41882)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF8EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9506;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h4B2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #587 bc78f3c0-a0b4-4b72-bba9-d7dce13773b6)");
unit.assert_eq16(16'hF8EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #587 8ac0498f-1621-4755-a3c2-ebe9014fb1bb)");
unit.assert_eq16(16'h3066, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #587 4640beea-00b4-40ac-9ea2-5bb545ae9f61)");
unit.assert_eq16(16'h9506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 66dad7e6-9188-4d56-af13-e6c4821c5e00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 d8cee4c6-9421-4f73-98bf-095f70bdbeb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 5acd80f6-97a5-4737-8080-32fc6aa3413c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 895dd8a1-b382-461e-84fe-0ffd0c0e581d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 a3d786b4-e537-4de4-b029-575865d713eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 6674124b-8ec8-4f2c-92db-1a32822fb0a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 68762dca-9179-4e77-9d5e-39b6352dcde5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCEB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3CCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'hCEB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #588 9e87dfb1-e445-46a0-a2ae-aa9c2985f9c2)");
unit.assert_eq16(16'h3CCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #588 40f22b39-f19c-43d3-9733-a0dd2fa705e3)");
unit.assert_eq16(16'h26DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #588 89cf2f3f-7b12-4b6a-ac28-4f7fc3e98a7f)");
unit.assert_eq16(16'hFD71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 7106443f-91c9-4ddb-886c-9e17a7e4f847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 7d47fab0-7817-4213-9578-061a0a3fc450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 9056e080-3c12-4b7c-99f5-6889b16011d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 6f7005da-fd6b-4931-969c-86a2a15f056e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 225ff46a-8066-448b-a79c-37fd43ed9ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 a03a3d4d-3bde-4cd0-9144-d6e9b09d000e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 be2b0572-a6d0-4785-b219-50aadf32d78d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF104;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5204;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'hF104, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #589 c47bb821-d4b1-4ecb-9e84-3c0822ee9c2e)");
unit.assert_eq16(16'h64F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #589 42e9a826-65e5-4ca3-a7ba-2f003682928a)");
unit.assert_eq16(16'hE4B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #589 004c8d5c-0026-4a7a-a95b-df8c6cba89d7)");
unit.assert_eq16(16'h1A54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 486c4a7e-c123-4e65-a77f-cb125f8e4025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 2ee33def-48e2-4497-b992-3808364bed2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 cac50a28-56df-4525-9c38-b2562992e0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 896690d8-03a1-4f54-924e-e10633d57795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 3436b0f9-69ad-4251-84c7-db6b2729a9a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 912bf11c-13d0-468a-b12e-8c2d56dfcffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 fc9b17e7-a9a3-4a1d-8da9-364a8bd7e7c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB884;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD97F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9513;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'hB884, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #590 99f5744a-8a1e-490d-9f9a-15ce96685cc6)");
unit.assert_eq16(16'hD97F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #590 f531c1b5-ff93-4ff4-876d-dd3589f8cb55)");
unit.assert_eq16(16'hFC72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #590 9a7fb15c-688d-40a2-ab48-eb810aee01be)");
unit.assert_eq16(16'h9513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 9287ac0e-cfba-4ada-aa17-40c214bdbea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 4c1a5e2d-1c98-42c4-8064-75ac60de6db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 184e8b64-823f-4ed2-ad0f-288fe5d552cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 76ba07bb-e897-4e45-98a4-5791c657ec54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 7e0d0fa7-9fc6-43c8-9bb0-0b32997b11b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 c2fed02f-9a98-4c6e-9144-a8b833acd9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 96a90c3f-ec9f-4da9-8a0b-c7978c2f983b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h306E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5BE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h82EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'hDEB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #591 575787ea-3a2f-4303-bdad-045a3df7a845)");
unit.assert_eq16(16'h306E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #591 4411ae49-1606-4fdd-9aaf-868f8345702c)");
unit.assert_eq16(16'hB647, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #591 8b1c9e0a-784a-4c7c-9808-5536e8a532a5)");
unit.assert_eq16(16'h82EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 966bb611-3570-495d-9ee6-008b4f31664b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 812a7941-101a-4d39-8a27-8ee321820aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 e7aa66ea-20cb-43d7-adc2-081afb725f02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 948fc699-afcb-4fb4-88ba-20ccfa1c725d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 9ae085f3-d6d3-42a0-95dd-a7bc0c25e006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 e733bf3a-426b-426c-9871-f58127902794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 2c33c429-5f99-4a64-a018-6cf07f46980f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF2F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7AAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'hF2F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #592 bff2ad1f-fa8e-457d-a8c9-e50baa6f7063)");
unit.assert_eq16(16'h4A72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #592 40d10c0b-b73a-404b-af9d-e35fc898b116)");
unit.assert_eq16(16'hBD9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #592 dbad5f55-4600-464c-9023-8ae6078bbb7b)");
unit.assert_eq16(16'h0DA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 8ecd10f7-a3c4-4f7b-82bd-771d784cf772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 c32cfb5e-19c1-4df5-8c17-a4bb51b8953f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 f39b593a-e574-4883-bd18-cc2f104e1af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 fa5dfefd-dcd5-4fe3-adb5-a3b118f91a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 39d78aee-7e3d-4a78-9ad9-86654493b605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 2b58a324-106d-4914-990a-09a07d5bd23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 ada2d595-c1c1-418d-bb7c-67fa5151c550)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'hED83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #593 77626c54-943a-4f21-8656-99bc53407da4)");
unit.assert_eq16(16'hBC00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #593 80877b28-8173-43ae-a5f0-186e4038b442)");
unit.assert_eq16(16'hD080, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #593 d525796e-b6ae-429d-b65f-8b9604a81fa2)");
unit.assert_eq16(16'h83D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 97f42ae8-89de-4c6a-815a-94be3b74a92a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 e88fe67f-3cba-41ae-ba63-6d2824be8fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 6bd2cc49-ea52-4f28-91bf-8efcf85f038d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 dae0397c-2258-409e-9ccd-605928df964a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 d5eaaf9b-8447-43d7-b955-d3a5913d6808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 cef8a0aa-f5bc-4718-bb8d-f4f6bcc16a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 83a58249-e4c3-4e83-87c5-df9fc33aad7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5AAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA467;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h65AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #594 ba3346ef-e742-44d8-b922-e6b2b7641585)");
unit.assert_eq16(16'h5AAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #594 dfebac31-4a80-4ddd-a379-b8a5eb7d0635)");
unit.assert_eq16(16'h2EF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #594 c3c80ad1-0c51-4912-9a3a-7644fb11f07f)");
unit.assert_eq16(16'hA467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 108649b3-d055-430b-9efe-7b0480000586)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 115279f3-936b-4653-88d8-4af16317e6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 4412a3df-a804-4ebd-acba-b5cf4c718b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 98e39d77-5758-45b8-b303-38185249f89d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 d41024d0-1569-4f9a-8241-c9424e5daa25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 32eee805-11dd-4951-8020-8aab663a26d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 abac2328-f425-4508-a3e4-4e61cd4f246a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5390;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD197;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h7E73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #595 ee0146b1-2c9e-486d-ab2b-2f7c20f3fc3f)");
unit.assert_eq16(16'h5390, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #595 f6c88744-7967-4368-b2a9-95b492aad3e2)");
unit.assert_eq16(16'h5316, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #595 1d4efdae-ebb1-4a52-b430-94ef17a36752)");
unit.assert_eq16(16'hD197, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 70517b18-e067-47df-8817-605096c26445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 21a381c6-aaca-4e85-9165-e782ec1b0aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 c5dab66c-7312-4ae4-9d14-7a96040877b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 8cea939d-89a8-4320-9b68-f3f62d8b78a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 42c42ae5-047e-4d1f-81fa-da1a71f256a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 fa99cc11-f4cf-4826-8d7f-eff1c60577dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 f2d06849-6a02-4519-a8dc-1ce575d8e7b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE268;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8D5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h96BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #596 49c13972-3774-4c13-aa33-29127202aede)");
unit.assert_eq16(16'hE268, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #596 20ab6b76-9cd2-40dd-80ed-3c93c5cd377e)");
unit.assert_eq16(16'hE7D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #596 5cf76578-4a17-4d43-8d2d-efeee7202227)");
unit.assert_eq16(16'h7DBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 d27b2aef-0616-4933-acaa-8e9d1c73cd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 3c059a69-02ea-4930-aa48-31880a55d5a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 9ab8ef10-2e26-4652-9b90-cb8028f0e691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 1397e01c-97b6-4c65-8875-c10d9b11e26f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 078f4b77-524d-46dc-bf0f-0b36c3f46f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 8e64b4db-6aa1-4aef-9625-f65f9b2f7e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 f10bd612-05d5-4ad6-8ea3-133ed47f6c4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF6F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDCF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'hF6F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #597 b7b8c6be-c9bf-4826-87f6-9f5b2f16de45)");
unit.assert_eq16(16'hDCF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #597 2a23b003-8f57-4ffd-9a09-3ba3a081d6bb)");
unit.assert_eq16(16'hC6C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #597 6a5879d5-3c2b-41f7-9ab2-7af666885657)");
unit.assert_eq16(16'hAEAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 8be869c6-8e4c-4aa9-b31a-4629d316c839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 1f4d6c62-6c49-48d9-b636-9b0a3f9c7f7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 60f335a2-cc08-408a-806f-17bbe95c1da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 0dd62b67-cacb-49d0-b298-f340aeb2e913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 3e289a04-6bed-4d77-b416-d771a82a3acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 7bcda16e-03dc-4ffa-be66-8e57bcca989a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 6f2f7bd1-a977-4340-9b64-ad4d5fb9ca15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h799B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h8A5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #598 382617b5-5a2c-48b6-81dd-e13917d1c75d)");
unit.assert_eq16(16'h799B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #598 589421fa-47ac-4765-959c-c23c073e59bf)");
unit.assert_eq16(16'h9C1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #598 95acf8d7-fa08-4333-9ed0-718d457fefa2)");
unit.assert_eq16(16'h0ED6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 7cd96b1f-4644-41ac-a205-f6ef5339021a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 efb58495-5607-4ee3-940f-45d486d3c814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 ec440e76-b5a3-4672-877c-ed0656a05fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 e89ca7a1-0d6c-4aad-a905-589ee21cacbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 c7f064d2-4184-481a-a67c-bca692689b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 a64a44e3-879d-4b72-adf8-96e73f326b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 44859eb0-798b-4ecc-ba85-47787403270b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h714F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2AB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'hFE60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #599 32c714e2-7702-4126-90d7-d8eafba3bbce)");
unit.assert_eq16(16'h714F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #599 5863961b-2516-46c9-9422-01677692402b)");
unit.assert_eq16(16'hAA63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #599 924144b3-d0d1-4b50-90af-0899394c0d55)");
unit.assert_eq16(16'h2AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 3a248043-9c11-4e49-97b0-a811134fcfc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 acf61c7a-52b1-4e2a-a885-c93da77ccbda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 2ebb2c6f-3287-4b87-b4c7-ad3061e01c23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 a091d957-9cb7-4784-8335-362e7b004134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 63b21a27-4644-4fff-9d3a-58200c2aa340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 17c628a8-70a7-42f2-8f1a-54b32e3618c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 7ca92c32-ab35-4246-922e-1ccd0bf4811b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3386;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF148;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA87D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h8C4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #600 aa9cf035-6a14-482e-b32f-95915844b422)");
unit.assert_eq16(16'h3386, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #600 77a4b2fe-b00c-48c7-bcde-345d9b7b4c45)");
unit.assert_eq16(16'hD381, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #600 199bd671-32a4-4c46-8641-5ca8aab49ea1)");
unit.assert_eq16(16'hA87D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 04b3cdfe-eb9a-4a94-b783-2f512aa8595e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 87ec692a-9a7a-431f-849c-555dc3757533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 453c4006-eb34-43b1-848a-ce0fa198787c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 8b69c716-67d3-4d25-b1a8-1978e43ed2a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 86c5cd1c-0318-4ab0-8998-82c8caa03574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 2ffd06bb-8753-49e1-9486-0f7be52defbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 87c0b814-c3e0-4c51-a8fd-3530e5e91a06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h77AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'hD8E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #601 e48ab650-3013-4380-8b84-8bd17eb670f1)");
unit.assert_eq16(16'hDC21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #601 3020e8cf-6245-4a6e-a1ee-f38e9ba02061)");
unit.assert_eq16(16'h08CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #601 c7fa5f28-0a37-4b49-b23d-260c04c4b02d)");
unit.assert_eq16(16'h77AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 ecf082f7-dd0d-4757-97ab-03427ca438fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 9e72141c-8745-4550-ba45-d3bf9c4ca816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 162b2483-50b7-42a9-997e-8b41a94d0c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 ee8a0eb6-9a64-47c2-9dbf-7e1f988e849b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 25bff661-bb46-4955-94ac-21a0bd4e0e70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 4cd650ab-1682-4645-a4b4-eff9fb91b6e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 65649c88-dffc-4ca5-82e3-29ffcc11ded9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'hCDA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #602 63ca8472-c6f4-4b40-8b8d-9577e3bce2e2)");
unit.assert_eq16(16'h6C85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #602 406b1998-85fd-489b-9cd4-9faa32817d2e)");
unit.assert_eq16(16'h2E9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #602 96b2a420-eb95-47db-b349-b1afaf72c3e3)");
unit.assert_eq16(16'h42CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 a5c4b342-2707-4e38-a0a8-93658f4d003a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 23468fc0-cd7e-4e34-a0bd-e7740d2fde8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 54a193e6-0fb5-40ed-9a36-4597a88529cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 9327e470-eec0-4933-b5fd-ff3accd35e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 a9994fbe-eb6b-426d-97cf-f4a8409e10ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 9c086c82-2108-478c-be14-69486f26b6cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 b4386896-fab2-4467-93c0-78a0fc38913e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3EFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9492;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h63E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #603 e7a158b0-4b18-424e-b770-177979aa523d)");
unit.assert_eq16(16'h9C0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #603 d20abb10-49fb-441e-a2de-61fbe0c3c42b)");
unit.assert_eq16(16'h9D44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #603 bb79864f-fe20-4317-87ed-953367c06a1d)");
unit.assert_eq16(16'h9492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 3570d8d8-31ee-4276-bb5f-c920611c6712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 014996ff-5fe0-4bbc-b78f-d2c809d5b033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 94d2b223-02cd-42fb-b998-4a6ac80a2e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 fce6d6b4-0b12-4927-8664-3b1256d768c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 50bb6d34-c869-47dd-af92-d3c33df056a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 046fd9cb-b532-423b-b222-72a9b05a5523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 601d2aae-361c-446f-8681-dcc13a5ba06f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h62D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5438;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2FEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h62D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #604 03fee539-5d65-46a8-ac8f-8a0544ad190b)");
unit.assert_eq16(16'h5438, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #604 e966b346-3361-4cf3-a2dc-2592179f2ea0)");
unit.assert_eq16(16'h2C4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #604 bcf9b949-7eab-4a2c-bc0c-aec6bea37e0b)");
unit.assert_eq16(16'h46F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 353c4917-3642-4a70-9c3d-bb4378e1918e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 a61671dd-a2d9-4c2c-ad0b-ce53e567f63c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 c184d627-adbc-428b-8075-57f529d5c6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 c3a7a5c0-7c3e-4d2f-a16b-34cb210a33f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 7cd0b5e4-60d1-4107-8143-8a9a2857fc35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 46cbddf2-94c4-4ea1-838a-0b0025cb940f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 1370f0a8-8dc1-4725-8aca-0b2850162191)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h724D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD314;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'h724D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #605 2c8b39cc-e4d3-4a9e-a38a-43554dab4786)");
unit.assert_eq16(16'hA7EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #605 00c32bec-ac70-44aa-b01a-db5c59723ba0)");
unit.assert_eq16(16'h27E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #605 91d9f22d-0922-4fe7-ad63-7e867833e9ce)");
unit.assert_eq16(16'hD314, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 7d0e933e-d996-421c-9ece-9fbc3340b082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 131b63e5-aae4-4f5c-bac1-98787907aaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 09d64340-a7ea-4e6e-a58e-104421fd8bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 ae59b91f-b942-45b8-8443-0056b1e0c169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 de5929b6-72c2-4641-abdb-1e753b799229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 cf29c624-7b1a-45e6-8690-41324cdffaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 5be5c6f1-a223-4223-b3f8-5038e525324b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h082E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h77C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h9E0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #606 a9b42eb4-e558-415b-980a-a9f433728f33)");
unit.assert_eq16(16'h082E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #606 ec9f41b7-d8a1-4e05-80ce-5f7d46eff314)");
unit.assert_eq16(16'h4EAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #606 856b55f2-bc20-41fe-a91b-77a00f168c82)");
unit.assert_eq16(16'h77C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 bdaed9c2-d51c-4410-84e1-c68629a9c73d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 9bcb0301-3b51-4e18-b713-1ab201ac40b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 ece8de9f-0351-435a-851c-39a050a24a5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 6f3da8e6-b61b-4b5a-80be-07ea763f8091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 8069c89c-172a-4651-ad1b-793e9845f3cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 08bd7e7a-e89d-4898-b748-083f965557c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 80210307-3a72-4b99-8b23-eae842a90041)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0ECA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3226;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h223D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h2B34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #607 6084986a-e88c-4d0f-918a-02cf92fcc3ab)");
unit.assert_eq16(16'h0ECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #607 d6576916-7344-4c55-b367-497c56be64ec)");
unit.assert_eq16(16'h4D30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #607 a30e5598-faa1-44cd-a9e5-3205ad5b2b17)");
unit.assert_eq16(16'h223D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 6141ff24-d01a-4269-82eb-566dae8b49b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 14c9fbd9-fe4e-43e3-97c8-c3d76c432b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 b8b79aea-68cf-40ea-9357-9d2e1ce9cb2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 d0c7ae85-1751-4e7b-8186-16f3b9828615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 81889f9c-b3ab-41ea-8c55-e849176c0ed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 82512b57-86ad-4aad-bb55-5ad95224cf39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 3b4cabcf-4c18-4d4d-95ed-0c9a9000275a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0814;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5309;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h747E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h0814, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #608 a6d44d86-8749-4631-8f6f-0f5cb984b470)");
unit.assert_eq16(16'h5309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #608 d1fff5fa-a2b6-4bd1-bbab-ddd38219f57e)");
unit.assert_eq16(16'hE952, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #608 2d6c1a2e-414d-4389-a0b2-99227e6d7717)");
unit.assert_eq16(16'h747E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 0ff3ba32-1aca-432a-8f13-fe4343e5ca51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 d2906590-4ddb-4fa5-8e48-a5a7b8aa37d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 e9da692d-0655-4a1b-ab64-534388e151b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 d11fed1f-46ea-40eb-9115-3fd1d623b953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 731be47b-9ff0-4769-8ddb-61ebe77e2aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 4b37ee75-8252-4377-868e-0262f0a329e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 08ac5520-541e-4c2b-9d38-f56b4e06b609)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA921;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'hBFAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #609 100790cf-df97-4634-9cf9-838ec2973424)");
unit.assert_eq16(16'hFB99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #609 4edf0782-9500-4dcb-929f-082da6e38e3e)");
unit.assert_eq16(16'h4100, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #609 9f4ff1d9-4fc6-4b53-ac3f-c78c647b2715)");
unit.assert_eq16(16'h64C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 5594817b-d554-4140-b6cf-80c7747174db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 c815d745-16d9-403f-9e3a-de57dd0eadb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 32939174-812b-469a-9b15-9a0afd3a8425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 6d4ba992-5cde-42a0-96c6-b5638cd877f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 8cd5ca33-1d5e-4bcb-9c55-554d0e82b353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 8111019f-8f2c-4256-a934-b82fa0d5bc2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 a8ed2862-322f-46e9-ba08-5b6a06350da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9126;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h651F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'hCD51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #610 a1c13abb-648d-48d3-8384-4de3c7c8671e)");
unit.assert_eq16(16'h9126, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #610 06e1b160-10ee-4448-b6f5-765c43dfcd2d)");
unit.assert_eq16(16'h9F6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #610 c412621e-bb73-48b9-ae03-84f1d31d654f)");
unit.assert_eq16(16'hEF09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 75acce2d-39e2-4258-b9d0-de900151cfa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 ba167ff0-26da-4018-a555-7768434277ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 1ccc4ada-e846-4ed7-b14e-ae3f04ffdfd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 c7b07d2e-1996-4374-ba8a-305aabb3f08f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 e3b8be09-b8d8-42af-9678-371a16d46ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 7cbd19e2-e434-44ea-a431-18213d9e0e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 c58a228a-0c80-407f-9e64-4d89aac6da3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD43E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h25A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #611 feb07f42-39c4-4517-84a1-fced9a6156cd)");
unit.assert_eq16(16'hD43E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #611 b5172f39-9e03-4356-b023-bd6714c7886a)");
unit.assert_eq16(16'hFABE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #611 fafa47d9-9272-4900-b66b-02b6d12ad6a2)");
unit.assert_eq16(16'h0E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 4e5a5b8b-3c8a-4c05-ad2d-aec843434778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 56f5abdd-1228-4e19-9ee4-958718530432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 343fda2e-1ca4-47c1-a61b-bf8fe7116349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 501a9949-fc20-4c94-aaa2-2c93b115520a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 62f269ca-a0a1-4f34-9ee5-fa02111cef57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 109105e5-013e-4d94-9c87-27d2dd85df66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 ac9046e6-f297-4cc5-8a16-98914f2a50d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE712;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h255D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD7FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'hE712, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #612 a9bdc6f0-c646-4d28-a2c6-274c6ce31251)");
unit.assert_eq16(16'h255D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #612 77c38795-835b-4b49-b744-0e5371691095)");
unit.assert_eq16(16'h8F47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #612 ca41ee99-e12a-4dcd-9679-5cb28770ab2b)");
unit.assert_eq16(16'h13A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 6812211c-f5b5-466b-866a-29377f24c0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 847f41fb-8775-4c91-84ed-35335c9e3d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 44c8f050-f5b1-47b5-8fc0-7acc083ed2a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 b4325f2f-f237-4fdd-832b-f400532086d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 3d32f41e-0875-42cd-a29d-d9301c13d1b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 f70e9b46-4c65-4420-8c5f-01245949ab6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 cc819974-6825-4cb6-a846-d7c5706a6913)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6080;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h69C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9527;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'hBF62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #613 92d0a163-a8da-4b4b-b11d-6b8259d07806)");
unit.assert_eq16(16'h6080, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #613 45e704c2-e4a4-4b31-b7eb-2c6e145e5f9e)");
unit.assert_eq16(16'hF2DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #613 53924fd1-e47f-4bfc-b40f-3937a286ee22)");
unit.assert_eq16(16'h9527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 69bbab46-c131-4e63-9b74-f58c329ff74c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 410f3b2e-ac1a-4bb4-b35d-67037c025107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 344eacb0-fd57-40b4-b9dc-ec528332d7bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 888c774f-6988-4a08-9181-c03b73e9d88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 6e5d31b0-8a4f-4dd6-b4c3-82a0b29b8159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 90b4eef6-ee0f-41c3-86b2-c901debc9e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 27cd000b-10df-4f01-a8bf-d7ce0a577c49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6BA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h89AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h6BA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #614 469cf560-b544-4164-a9aa-ab16a74e061c)");
unit.assert_eq16(16'h89AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #614 ccd29264-9465-4a1d-adca-ca9da8545fdb)");
unit.assert_eq16(16'hCDCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #614 454ebbb9-134a-4ea6-9543-9a997ab56f67)");
unit.assert_eq16(16'h3245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 9497bccc-acaf-4be2-be51-3cea0fd68a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 d404792a-8e63-4af6-9fd2-0e44852b0bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 50bf8383-4bd5-45ce-8bc9-1d8a84525751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 1211b3d2-ce5f-46eb-b8b8-a74330a03deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 76abb32f-1bd7-4602-9a8d-81647234314c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 a7039ed3-4376-4100-b54a-3590115383c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 b85e3fa1-58f1-4f0c-bd86-adb160b6d233)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4309;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC66C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h930D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h4309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #615 5471c0e6-1a0e-44b7-963d-3a48384e90ff)");
unit.assert_eq16(16'h6D10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #615 b24b42ea-937e-4de4-b5e2-40e8ed056ff8)");
unit.assert_eq16(16'h19E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #615 6a0eda07-2554-4641-94d8-5b65e7d3cd29)");
unit.assert_eq16(16'h930D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 3e7a28ec-ede7-4c2b-8688-f7d0917454ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 6e894893-ebde-467d-89e2-87de2a37f9a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 919df610-f2e7-4f43-a4ef-da4f32181ced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 50a1c295-c230-4b76-8c04-60e27e630026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 2711f775-e56c-446b-8182-4d2e6de88407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 7331b3d0-2d5e-45f1-b4e1-9b0148562450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 b737ab25-336c-483f-bcac-0d8f3ff16480)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC285;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8DB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0943;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'hC285, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #616 6873df96-a0dd-4616-b8d3-7dbba67dd34a)");
unit.assert_eq16(16'h8DB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #616 2a18947c-a78c-4a72-86ac-e1fdd8ad9833)");
unit.assert_eq16(16'h99C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #616 d04f2e90-152f-4a25-afbe-cda1929793ea)");
unit.assert_eq16(16'h0943, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 8d31beee-a840-4f53-ab9e-454c2d8ebec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 85c86b85-f3cc-4640-b5b7-a182992cb452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 69c56c7f-1a69-406e-bad9-bde9b383a039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 1055190d-4f1c-4691-8dcc-ac24f7a6a7a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 c72b6a2c-a3f2-4086-9e91-c4395ec9dee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 cf5d3474-7325-4c5b-a5ac-ab20b0414ae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 f4813ad4-c066-4319-955e-e7392dca6860)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA2B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'hA2B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #617 3e075a1c-8670-45c8-8457-57d38944b029)");
unit.assert_eq16(16'h5BDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #617 5ee6d9bb-a0dc-49ba-ae16-606983468a13)");
unit.assert_eq16(16'h354E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #617 ef14c788-20a5-4eee-ae19-af8e8ed74e96)");
unit.assert_eq16(16'h20A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 d48afd38-4f1f-4277-8177-a5d5552b7629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 34ed0c1d-a4f3-4680-9828-3374645e19a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 9ddb6f8b-78e6-4cd4-b6b7-3a4543b456cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 9bcba573-5fd9-432a-8285-dfa4fcbd0310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 ee37be5f-c75f-48b6-903e-59193dd2aac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 828c33e0-9cb1-49c7-9bba-9d5c9b619aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 c8c5df37-15ab-4068-94bf-5b940c132b87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8513;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD020;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5611;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h8513, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #618 76cccc77-390a-4ebe-8152-125256187496)");
unit.assert_eq16(16'hD020, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #618 ffddc764-356f-4449-a011-c2c46fbc0083)");
unit.assert_eq16(16'h7D58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #618 3cbefc52-3ade-4755-8f5a-0b141b35821c)");
unit.assert_eq16(16'h6C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 44a5591a-5de4-4a2d-bba2-30b3df10ddec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 325bbc7e-63df-4600-aa81-dc534d5c21a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 3a72bcdd-9940-4155-8d24-652b1e80d702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 5980f706-2fb8-4da0-ad73-cc39fdb3226e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 20f3688c-0af9-4c4e-99d1-1841a61f9b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 654f698e-1e7e-497f-b4f3-57d5b82f8070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 5a75a245-5cdb-472d-bad5-9e902cb16682)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6116;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0ACD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h036E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE1A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h6116, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #619 a1d29498-ad5a-46ba-abaf-ad81c28014d4)");
unit.assert_eq16(16'h0ACD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #619 357a8206-daf8-4dd5-8ea8-dddef6adecd1)");
unit.assert_eq16(16'hE56C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #619 c1c89362-6f2b-4691-9f68-c5595cb6a652)");
unit.assert_eq16(16'hE1A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 235472e5-ed5a-471f-9cfc-3aef5d376dd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 398ba0b3-1183-40d5-a161-429989e38619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 e7537de5-8d4c-486c-ba26-c65e5ee0df23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 d95ec3ec-14c9-4f62-b172-939e7c2b4d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 e5f056e7-f985-489b-902a-367f437e707e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 ff3a791c-1c70-49a6-a2d5-e8c230e2ff0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 748ade80-842d-4820-80cf-ecdf8a8b3899)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h98E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h74F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h99D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h98E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #620 ad438171-4796-42b2-ac73-125e6e7923e2)");
unit.assert_eq16(16'h74F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #620 22e1171e-ccc3-4709-8faa-86d3d86b8b19)");
unit.assert_eq16(16'h838D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #620 885a5692-2120-4d93-9a96-57f66a602435)");
unit.assert_eq16(16'h99D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 bd98a7e9-77dd-4a3e-9504-a26fc8f996d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 57f681f7-4fc4-4b79-b854-ce1054fa05cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 4e870564-305f-4fa1-82aa-74882bf54120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 028874be-6063-4cb0-b315-ac42c4b50b7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 cad6a084-88f8-4d41-8355-6e6261de6bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 5d4bbe1d-2784-4bda-92f4-6970dd878605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 a6cdafa1-a289-4c93-92e2-cb565b5b70b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h8B6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #621 5db0ecd7-00cf-415e-8904-b96c63fd831d)");
unit.assert_eq16(16'hABAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #621 84321190-2d92-4e06-8c61-af8b331dd369)");
unit.assert_eq16(16'h6C84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #621 728658a7-0a3d-4133-99d6-d5629de77deb)");
unit.assert_eq16(16'hD925, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 6f581847-2e55-43f5-89fe-6e36d0b33ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 547a2dba-549c-4822-b886-9cad81ed03b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 40c5024d-3e96-4310-918f-a4cdc9491bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 7022ca9a-b3a2-4167-85b2-2aff765170d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 c272453b-dc44-4d4a-9166-8faada8d1320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 8171af5e-2d36-4e91-87e0-bc81d9107696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 9174f75f-25ec-4484-93bf-9f9b86eb626a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBEC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA98A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7BE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'hBEC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #622 885bcd25-4a34-4c57-80ac-54b0ffcd288b)");
unit.assert_eq16(16'hA98A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #622 cabea82a-eeca-417c-ab2e-4900e348aa49)");
unit.assert_eq16(16'h5D7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #622 c122b9cc-89cd-428e-92c8-257131ecbbb7)");
unit.assert_eq16(16'h7BE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 b74c2ed7-d633-4784-ae05-7ee955e701ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 3ec06189-ca81-45f3-b654-84d864727ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 ceb2b0e9-50df-4345-afed-eb1e147cac19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 e2e41fa6-b8c8-494b-84f9-1a1151b62d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 26d011b2-1e7e-4d7f-af76-46fa25bcb0ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 08dba54b-6970-4cfd-9f03-6bcb45ce2e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 f292a49b-0589-4cc6-b22b-4a01729d5788)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h083D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE174;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h638E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h083D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #623 b93f7c69-1fb9-451a-8703-d1403e0a81d5)");
unit.assert_eq16(16'hE174, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #623 ce5e169e-a4fb-4282-9a51-64ad4f420f93)");
unit.assert_eq16(16'hAE81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #623 77af1c07-7991-44b8-a8a1-f970460eebef)");
unit.assert_eq16(16'h638E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 1d75b2fc-b962-44df-8839-860335d636dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 f3564542-c57f-4943-b5f4-5ceb8572f29e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 2581a6e8-4a1e-4bf3-9cfb-c6614967e9d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 d33dfefc-175c-4434-ba4f-bee6c9b78b6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 cd68e8ce-645d-43b7-8316-52ee99dedd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 0df73201-8e6d-4fdb-9aa9-5d377b0417af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 fbc1810a-bd4d-4951-af04-e47baa09e424)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h16EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF608;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'hCDFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #624 a28b1cdd-86a1-48b2-a29c-505dd6ac9def)");
unit.assert_eq16(16'h16EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #624 106889be-35d1-441d-93c2-f95154b26560)");
unit.assert_eq16(16'hB61E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #624 393a13cd-286e-49c8-8872-2de7cdea5f1b)");
unit.assert_eq16(16'h011B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 53b250e0-af62-43ff-981b-ba81041b4db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 86088b70-a508-4138-ab31-deb5bc47463a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 3ce6198b-dc0f-47c3-bf2b-c0534a246455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 275c7784-4a28-448e-857a-01147324f299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 78f8fc88-e1ed-4f51-aa36-37498062d4f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 c784382f-7c7f-4bc3-9b12-82e880e1e78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 bcf49137-113d-46d1-8576-ee3c27fb8067)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h921E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h04FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #625 204b3a4c-0b94-4ec6-8ba0-16d3de218441)");
unit.assert_eq16(16'hBD8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #625 7a7554cc-bec0-4c4a-8445-35c4a7d9f030)");
unit.assert_eq16(16'h1B8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #625 6980d7e5-9f08-497f-9489-3da48b37b37f)");
unit.assert_eq16(16'h921E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 83d86a57-ea09-4114-a850-f66a8fe91aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 bf022713-f383-4168-b5ff-8d355b685566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 235e6380-dfae-46bf-b6d5-89e3e85eb2b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 c6aaa2c3-ac77-47e5-b5f4-192fe52b852d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 4acbc451-bb62-49f7-9e5f-7f95244e12ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 b1327ab8-2c98-469f-baf0-a558fcf93958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 b701dd8b-f18c-408f-b243-73bc4a978313)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBBB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3993;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hABF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'hBBB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #626 d29bc934-beac-4ad4-a2f7-b6eba191772b)");
unit.assert_eq16(16'h3993, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #626 844a89e0-867e-40cf-947f-1d751ebef81b)");
unit.assert_eq16(16'h61BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #626 3ba90a9a-b28a-47b7-a6c2-0f2f9c9b92d5)");
unit.assert_eq16(16'h8457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 02dff525-074a-418e-af5e-5d9ae6ff15de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 e1f8eab5-40c4-4b59-80e6-63b87ff292c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 4af4079f-64d5-4c89-ab7f-1a5a1ad1980d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 adfda47d-3acf-4cd0-a53f-b4d1617bc26d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 83a0221a-2a08-427f-b65c-8bb8e86f81f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 d195b223-9a0c-4744-994b-84629109e686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 379f8c6f-2f36-433c-b200-349db3e85737)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB639;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'hB639, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #627 f7c5f8dc-f79e-4de6-b2ad-28f9e4931144)");
unit.assert_eq16(16'h5A2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #627 520e03d6-98ce-44f4-90ec-d28ed8c06305)");
unit.assert_eq16(16'h5ED7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #627 b57fbdb7-0f30-4f83-a880-e67a836dbed7)");
unit.assert_eq16(16'h57D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 9c591a10-01e4-40ed-8ae4-e3bc49631b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 c789f61a-5442-4883-b950-95fe59443762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 5f272fa2-d2d5-4ad1-92fe-99a8bf8622b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 33ba2216-ba94-4557-8319-152d4fe45cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 a38cf624-2efa-463a-9ca0-a09e02ad1ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 8c52ef17-b4fe-40c8-adf3-7d257c4fa8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 96fb1bdd-4c58-457a-835e-fc64f5777967)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB67D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2753;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'hB67D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #628 e9cb9265-f504-4393-8eb4-a7bd4bc0ca52)");
unit.assert_eq16(16'h2753, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #628 4b7f63b8-8576-4bd4-b01a-a071f694f692)");
unit.assert_eq16(16'h1171, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #628 ff4c03bc-a33d-4634-b067-a7f2bed43513)");
unit.assert_eq16(16'hDE0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 033ac5d6-6808-43ed-9af5-b2a5ef36f459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 5c9af9bb-b895-4ecd-9bf3-e9bc39cd4f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 95e5f1f8-4e45-4350-be37-f40ba860911e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 22ab4f1b-2f4f-409f-9a3d-1fb69a4513b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 b52157f1-d71c-4fc4-ba5c-8f1e729b2179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 8d790b1d-a1e9-42cf-b0a7-952b0396f595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 1176f6fa-60c6-43ed-b897-e7d7ca635807)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0722;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h3F3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #629 275b0e76-9d77-4932-92e6-6fcaf4c55a2d)");
unit.assert_eq16(16'h0722, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #629 2be6f8e1-a9f1-41c2-8993-3f886f985ecd)");
unit.assert_eq16(16'hB1DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #629 d8064f7c-7d3d-4aeb-9e3d-cb70489f9024)");
unit.assert_eq16(16'h9B13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 87ad4caf-0463-490c-ad45-1c281373d69d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 b65c0b4b-cdfb-40ce-a554-ed8899e9e514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 909ef7b1-6c33-4e13-a2ba-189a29f23825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 698c73f1-7347-4ec8-890f-03dbdf25b7f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 fcc3b31e-1a21-451a-90c8-44421687c111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 edeb5ee0-c178-4386-97c7-c3cd31e47ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 370dcec1-7990-42b3-a460-70d5187cc7e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6534;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'hDDC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #630 5f81de28-d49c-4320-bb83-1d097f4585d0)");
unit.assert_eq16(16'h51ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #630 5dcb65ef-88ee-4824-95c2-8b61fac038ec)");
unit.assert_eq16(16'hE061, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #630 f458164c-1e68-4872-bfae-bb4a69187186)");
unit.assert_eq16(16'h6534, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 26f4f763-195d-4cc2-a26b-d9de8d01e703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 b071e366-47fa-4c38-809e-88abfacd504d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 f3eabfd2-a60d-45eb-a4c6-8f500c6241a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 13a6510e-ce67-4fb6-bc70-2fb99169fdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 379db184-8b62-4b8c-95c0-7255706e5d61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 9e5ec9a6-a2ea-44ec-bfe0-5e5e3af09a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 25b39916-e782-459f-9103-9a006451db8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBEBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF97A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2682;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h589D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'hBEBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #631 3df5390d-0379-4132-b367-30fa401ff5f0)");
unit.assert_eq16(16'hF97A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #631 6e5d3861-1bc3-41a8-bdef-3178ea7b9b26)");
unit.assert_eq16(16'hD652, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #631 d9cc496a-0f4e-4335-808a-614d542eba8d)");
unit.assert_eq16(16'h589D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 cdc91b48-a1af-4c37-9834-033e04842c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 9e4b6caa-b0a6-47d6-bd72-edd004d2b9c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 1c07733f-66f1-4537-b40b-fe740fed8b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 43b4222f-483e-4c46-af2a-22651e5bfbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 c123552c-47d2-4b67-ae0c-bb5347046f5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 955f0773-a22e-4839-9f55-82d841d27377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 08c07b8a-af83-4bf5-84d0-04723947c4b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h43B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4AF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9EB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h068F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h43B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #632 2f210cc0-653c-4f94-978b-2a4a1dd06ae1)");
unit.assert_eq16(16'h4AF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #632 d99a1f5e-73ca-4721-95db-a956828c24c6)");
unit.assert_eq16(16'hE58A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #632 5d098c37-c51b-4a25-8928-717d48aa6eb5)");
unit.assert_eq16(16'h068F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 61d2f306-8dd4-43ef-820a-c7dd5c272be5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 fc6dff86-1b04-4dbf-9dfc-cb489c95884f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 e6c3b7c5-1a6f-4e9c-870b-4acb2f136335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 d539eab8-0f0c-42e0-81b5-36572d21e1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 5194bdaa-e170-46f2-aa18-0f571939f18f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 f7b82ae1-2b60-4846-9045-dace0071be5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 8dd7253a-47f5-4f4f-87b7-afa9246bf21b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC84A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5885;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h0C31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #633 97787ef8-ea97-4af5-86e4-73fec5476795)");
unit.assert_eq16(16'hC84A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #633 6256f709-902e-4577-bb56-8a0999760eac)");
unit.assert_eq16(16'hC992, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #633 ade983cf-24a2-40ff-80f1-4d58b784b977)");
unit.assert_eq16(16'h5885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 03f94057-2585-48db-9de0-34d6a71f0d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 4bcebead-714c-4e02-af7f-836d76ae560b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 e56e8eda-e176-4520-8873-483cc63052a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 4b8d2c03-3d97-4195-bcc7-2aef042c19a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 16b8e67d-d03e-426a-a94b-a5f3e0407197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 cd3bcf53-59ad-4b53-a8f0-5c9a2ed75af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 6a98d747-0953-42f0-b951-e30dd237b1f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h15A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2229;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h15A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #634 77df4dbe-b06b-4da1-a775-e8b6494fd31d)");
unit.assert_eq16(16'h2229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #634 f3f68f9d-65e1-405b-989c-06297e432825)");
unit.assert_eq16(16'h4E48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #634 8251b859-6609-4137-8c5a-65813bddda44)");
unit.assert_eq16(16'hC3CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 be143c55-67d6-453b-a512-15f472bd4caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 d328181c-270e-4c2e-8fc1-ed38a1a71795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 c3058664-ac4d-4d8a-95d6-bb37f22e4379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 db0543e5-dc0e-4a60-98fe-7793b37228fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 842b4b1b-8024-4529-bda1-6c987c5c6517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 42425fba-aa10-4a8d-8696-bb9fe049044f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 a57aec61-9c13-41ca-9f95-ce5d6412eafb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h49D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h67A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3429;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h49D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #635 81899a14-79e7-46f4-a1cd-d01861303662)");
unit.assert_eq16(16'h67A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #635 50254201-2996-4d58-91f4-292108b3be8d)");
unit.assert_eq16(16'hCC1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #635 20e5cf17-7912-49fe-ad10-2fddd371c3ed)");
unit.assert_eq16(16'h3429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 0ebf9874-d611-4d8b-ad5a-67d50c226d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 93586f0d-b10c-4083-8f68-bf3a6fa90dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 0fc7ac6d-9be1-4d4d-9694-bb8dffc323e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 42624093-1b2e-4529-a59a-ca9446ffed31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 0655dd37-d2a7-4959-8428-18a7ec40bb38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 a3e8bbe7-daf3-4418-b466-499bb086247d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 859a08a5-d877-4310-9d09-8ed106d515d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h643B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB18C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5499;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h643B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #636 979b9a51-4bc3-41af-bd3b-b0c4d5f7b3bb)");
unit.assert_eq16(16'hB18C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #636 2fc6a0f2-92b2-43db-ac5b-da404fb82819)");
unit.assert_eq16(16'hE2EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #636 cb8fb8cf-bbc8-4d0a-afb8-16ac8a760e24)");
unit.assert_eq16(16'h5499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 2d889358-943a-43d7-8358-d0b19295c2ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 ac931e24-6c8e-43f2-9a62-33c69d2fcf4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 74411e9a-ee57-48ad-978f-8a15bdebc828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 b901b93d-a565-4755-8ab3-a8270460a5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 10e8a91b-725d-4f2b-b4b4-960b48005d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 bd880521-57d4-4715-b9d1-5c68e9ef080d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 ee26ba98-92fc-4c3b-a518-8e784e8693e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0460;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h34D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hECDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h7C14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #637 2eab51d2-4ea3-489b-a5c8-b71718b34325)");
unit.assert_eq16(16'h0460, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #637 1a5a7b9c-0311-4f52-9ed3-0f3d2e9c1366)");
unit.assert_eq16(16'hFF67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #637 89b0a6c8-a34e-40ab-a9c3-11f17b4bbe93)");
unit.assert_eq16(16'hECDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 c8ae154b-d201-48c8-8d1c-b724995a6f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 538c29cd-3fa9-40cd-a62d-b96c0ae9a219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 a04627a6-5bf2-4880-b888-1a647a11ff1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 51c3e02d-a42b-40ad-b1fc-67c359c0eea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 88c5ae98-57b5-4472-a034-5cc6fc226de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 0213cda1-81e1-427f-9ed9-2b12c7a2aa24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 bb6462fd-77b1-4f68-a614-5082b16a9072)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'hDB75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #638 bf8aaf41-d6e4-4ad9-9640-39b8f11bf516)");
unit.assert_eq16(16'h5D11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #638 5e4560b9-ada5-4d4e-8750-1d75c669c108)");
unit.assert_eq16(16'h9C0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #638 ad1409e6-6050-4177-a811-7806966bb90e)");
unit.assert_eq16(16'h3517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 25304b17-db2c-49e8-adaf-d602089506df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 b99da944-3abe-4014-9c4f-ab47c60433fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 3ad3fe63-20f7-413d-91d7-c02f49a2ad3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 34cd3b1c-d8a6-42ca-a7de-7a5381df8c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 6b455ed7-32ff-422f-9ee7-5646f8d29a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 403486df-43b7-4323-801b-42bf80afdc7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 d2abe316-37ce-4781-b4a0-9a33cc41beb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5255;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h53C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h5255, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #639 77bfe517-1b51-46e0-9ebd-05aa22cd1c95)");
unit.assert_eq16(16'hD2A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #639 ea1803b2-b3ce-4519-9f9f-b97dbaa49134)");
unit.assert_eq16(16'hB66E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #639 c4d8199b-0cb4-4bd8-9447-8891fa0fd246)");
unit.assert_eq16(16'h15E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 5227ea2b-7aab-4ab3-b4fb-afa9b20fa402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 e1be8dd3-a208-4be6-a5ea-d36aa012e6d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 8b3a641e-3c2c-4cbb-af6f-7e8090a0fae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 2e5966fb-d48f-4526-a96f-5342333e87b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 44184472-cc70-4753-8c0f-2da38294e427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 144b6d4e-0ce0-4b6a-b17a-7c12f496cb50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 04f18664-4385-461c-acba-8146efcb77e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE122;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h19BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8600;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9CD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'hE122, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #640 77237b20-6384-49d8-9273-e84ae956beb1)");
unit.assert_eq16(16'h19BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #640 87fb6c30-7d48-41a1-8df3-3c3946b49511)");
unit.assert_eq16(16'h3A09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #640 1058aea4-c4f9-4a1d-9c0f-81d486a6edd5)");
unit.assert_eq16(16'h9CD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 b3343091-c489-43af-bd93-13986fcb7ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 d2807ec2-ab78-45ea-8a3a-61703aa76c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 3daa1c71-dd04-4b5e-8e6b-63424a863709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 8c9274b9-37e1-473d-a341-50606182f0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 3f683b85-3076-4ef6-9a68-589501449d5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 6ca83820-39d8-4845-a411-3c789917222d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 fb3be17e-e616-41f7-84b8-23becb87e417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5395;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEDF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8996;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h5395, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #641 44dc6adc-9455-4d26-9a2d-1cc561746b4f)");
unit.assert_eq16(16'hD2F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #641 081e40a3-f295-40a2-9e6b-b9485d124c30)");
unit.assert_eq16(16'hA8F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #641 bfa4fb5b-9fbf-4c6b-8b59-984b0ba9a691)");
unit.assert_eq16(16'h8996, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 1d0d3a63-af48-403a-a82c-4cb5710637ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 656f779e-21ab-436c-bebe-2e016400bcfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 c9329dc2-69ec-42e2-90b9-59b05ce9c7fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 4d17ab85-c51a-4f89-ab1f-60f96d37304a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 011c2188-1410-4b04-8c10-ea12183a4905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 2ec89d05-e1bb-4e95-b6d8-7e04456ba4ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 d38b5311-930c-4609-a2a1-1da14567942a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9ED0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h90F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #642 48fa388a-9feb-4281-a2f6-1f1d0a109cda)");
unit.assert_eq16(16'h0A4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #642 639d6bf8-27dd-4089-b24e-81612f436c44)");
unit.assert_eq16(16'h9041, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #642 7468a2a8-f370-49c9-86b5-18c145184ac8)");
unit.assert_eq16(16'hA068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 1818edb5-5b38-40bd-bb1f-6226ceed3b34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 5af2cb91-4139-4fb3-8bd7-fa06dfa1dee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 2f9b2f8e-ca31-4a9f-b343-486576fa4589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 500d066e-d1ec-41cd-9b53-e16af0ca0cbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 dafcaa01-3147-44c2-8885-b9b00d02fa13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 d7bce83c-594b-467d-968d-a96c903a628b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 96c9c557-9480-49de-b43c-e30249ebe16c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h58DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB7A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h12C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h58DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #643 d0931404-0e2a-4055-8ada-724e53511b61)");
unit.assert_eq16(16'hB7A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #643 472d8f58-a2e9-44c3-b188-b0a8cb40ac4b)");
unit.assert_eq16(16'hA385, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #643 5c282049-9a1e-4c0a-ab1f-74060789208f)");
unit.assert_eq16(16'h1C35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 ca7ca785-bfbc-48c6-bb21-07424ee5e9fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 5dfea8f4-80f2-42e1-ab77-8d80c15d234c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 e62d5c80-6abe-4a4f-9165-8789d9fc36cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 d345c049-07df-44ca-bcbd-0eb48d31bedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 3dbff20b-5dd4-459c-84bc-9094a32a63ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 700d04b0-ef48-4550-8c93-f72422730eef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 fe775b17-5eee-4cef-97eb-3a7ad5cf9b03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h46DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD47A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h46DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #644 82f75dec-ba14-4b5f-a999-f7611643b24e)");
unit.assert_eq16(16'hCE28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #644 17080850-9647-4230-9a9a-706b9f49d941)");
unit.assert_eq16(16'hF305, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #644 445795c1-93e0-4767-9549-6306371e458a)");
unit.assert_eq16(16'hC3DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 bfdac979-b5c3-437e-a54d-716d6445d249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 7eeabb3e-f1af-4d84-82cd-5570f82d817b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 f7f43901-ad14-4e5c-854c-bfa58e5612e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 155f0f2e-13af-4e92-a27a-b524c749aa99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 b5eac488-1129-40c0-92e2-7476e1f4f50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 1a7c7baf-b730-4eb8-b2ab-19abf58e097e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 08ebcc52-8d59-45b7-93a9-4267e654b9bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBC05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h268F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'hBC05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #645 8354b3aa-dfd7-4aeb-abaa-ad3cddd58e9b)");
unit.assert_eq16(16'h268F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #645 f23cd5c2-6dfd-4c66-a3b1-0778a672554f)");
unit.assert_eq16(16'h1CAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #645 bf9a445f-5bbc-4db4-8b82-9a8ed85fd637)");
unit.assert_eq16(16'h11DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 1256c7fa-0aa2-4331-8469-e0ff22c01b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 a14c6d4a-10c5-46d7-862d-db4b01534394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 dce81103-f87d-48dd-a548-cc0b6f056a78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 5b1e9c23-9b75-4053-b491-1f054504b86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 e242981e-9696-46c3-b8e5-9fd160b655bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 f8a67d96-0dc4-4a58-8d50-af12b93b1bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 b79546f3-a51c-4a5c-b8db-31f6bd1cea7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h26CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h071C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h45A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h615B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h26CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #646 af94fa04-13fe-45e9-b2b1-cf533df89069)");
unit.assert_eq16(16'h071C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #646 604ecf39-fb81-45ae-ace6-37b1da649424)");
unit.assert_eq16(16'hFAB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #646 2fbbe9ec-3583-44c8-bf94-0b4731f07084)");
unit.assert_eq16(16'h615B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 d1f6d2b8-36ac-4aac-92e4-fad9b2f9f697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 93d1016d-e9f8-4985-8822-3cd7f5b9441a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 df4099f3-5e33-4b93-9d8d-b7ec4dc0843c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 79290b4f-a61c-41ec-9a68-92870fe2f2c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 bac90864-dac2-4aaf-9e92-fba1c19a5a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 0d71c0e7-c591-41bb-a907-90f24a95a900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 ccbe731f-8c6a-47a9-a305-729644707acd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0197;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2497;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h774F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h0197, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #647 ad5e70ef-11ea-4a27-92e9-cd31ba3a33af)");
unit.assert_eq16(16'h2497, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #647 609e2823-e525-42c5-bd1c-a23b7de47b4d)");
unit.assert_eq16(16'h2DA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #647 1922f3ab-69d9-4267-b91c-7d1e01220332)");
unit.assert_eq16(16'h30C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 c217443f-0abe-4fdc-b7c5-bc3d16dcc929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 4446029d-0f35-4296-89fa-4a494bcdfd00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 0326d50d-9fe7-4537-9f38-5e15f7d7b1d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 d3e360a9-6c1f-4c76-a4f6-815e9f646c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 4867f725-b8bf-4178-a90e-0985a390124d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 09422ce0-0ab3-49c0-b477-0adcc9486679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 9e6d04eb-9a40-4b06-9cce-e8b1f960c510)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9AE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h94CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h9AE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #648 11af7fa0-915a-4ad5-8d92-acde1c3dd127)");
unit.assert_eq16(16'hABC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #648 9122760f-2118-4409-be86-cba39ab13238)");
unit.assert_eq16(16'hB25E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #648 bf118817-c3b3-463a-8095-6b980bdd9978)");
unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 5a1b29ac-a902-4c58-bd90-423e02b5fb50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 4f9f3482-82a4-4404-818b-63a086f3518c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 aeaec19a-9394-488a-a041-a3576b83acbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 816c83b2-e431-4717-9d15-8f6b008d84aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 718de7ed-7451-44de-ad79-d9aae4fc8424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 925bc404-77be-4796-bcef-847f8930c174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 c9f92b9f-8f99-42dd-865a-7a249c03335f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h49FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2457;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2252;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h49FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #649 b130467d-da19-4170-873a-5f62e3b83aff)");
unit.assert_eq16(16'h6F6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #649 051b5e9b-a7b0-47cd-901b-3b58545f227c)");
unit.assert_eq16(16'h6772, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #649 eea93104-5e03-459d-8b61-95587931cdec)");
unit.assert_eq16(16'h2252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 4181dc15-b44f-4478-b108-f55830a58df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 1e5c97e0-8656-4779-905e-119ec339b1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 046bd6a7-c313-4e2b-bc5e-afe97042bae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 58655cb5-3d94-4126-913d-133525dc310f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 7381c592-b0cf-41f5-a5d6-831ed5803c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 0b954748-3dde-438a-93d6-ef4d651c5a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 7985bb00-51da-4174-9f5a-3551f5d946c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE263;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'hABEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #650 192f8df3-dd02-47e3-be39-fa1089d632ce)");
unit.assert_eq16(16'hE263, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #650 4ab9ab42-796e-43f0-b88c-22366ab28b5d)");
unit.assert_eq16(16'h597A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #650 88a3095c-d4e5-408a-b0a6-b35e6bf54646)");
unit.assert_eq16(16'hFCBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 6509ac5a-a819-4f7a-84d9-ec7aecef9985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 8befdf11-b5d6-4b52-b132-8413944270f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 207f636d-bef8-4141-8b51-1a5db969a17a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 742fd88b-9efe-4ff3-a495-e97a01284099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 33bc35ab-85d7-441c-ac1e-ec1a89d9b818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 5a00168e-7ad8-4e1e-b414-3390a12d7450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 da5efd1c-9f28-4c70-86f9-b097f7f44778)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE70A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h16E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCA48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'hE70A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #651 6178a5e6-0509-4b46-b99b-3defb488e502)");
unit.assert_eq16(16'h20B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #651 e1aba77e-a42d-4e06-963c-6cc452fcf082)");
unit.assert_eq16(16'hE7AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #651 225efa97-7ee9-408e-8eb2-f41564f21c2d)");
unit.assert_eq16(16'hCA48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 1a604df4-77af-4162-8d42-03810e233886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 2338cf4d-9361-4afd-8523-1b97034f5082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 332b4f0a-9ce9-4c10-8be7-e06752c1d773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 4913de69-8e50-4521-8654-64e2f2b3db7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 624a4228-24d1-4d53-b7d4-5215fdd7205c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 8327e7b6-342f-4ebb-b7d9-61502b03253e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 f0ef1acb-bf40-449d-804b-567e968d02ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2EFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDCB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h27B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h2EFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #652 150b0245-4f68-4331-b3b9-e0fea9c3e6ee)");
unit.assert_eq16(16'hDCB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #652 a2ada750-cb07-4834-b2b5-8cee2b4734e5)");
unit.assert_eq16(16'h96C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #652 831d048e-8c5b-46fa-ab92-821ecd720746)");
unit.assert_eq16(16'h27B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 6d55a878-4c88-49a9-92ee-482448f61714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 c73b0403-747e-425d-b08e-a3445389c6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 2f046140-a27c-4720-8fc0-53942062ad1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 9498d962-84d8-430f-957c-3d52c114337c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 b94bd84a-391f-4b95-973d-ef42bb937ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 77c10947-b8fb-4acf-b68e-84883400d95e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 a6ffe0d8-d04e-4c3a-97da-05ed330b251a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5EAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA78F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'hD2E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #653 ca812447-de00-4fa7-8fa2-fec50ef375b2)");
unit.assert_eq16(16'h5EAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #653 51c933d9-f160-4073-b837-fec728001f4d)");
unit.assert_eq16(16'h8DFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #653 b95fe157-429a-4cfc-9410-9811bdc58d47)");
unit.assert_eq16(16'h3FD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 b58549c0-c968-42f9-982a-b986bcf8e618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 6f107444-049f-4c6d-8ad8-adb3f115b81a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 bc19aeae-fb58-4920-97c2-2c7701fa1db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 2ccea97f-6624-4596-9369-c8d151ff35c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 19d0bfce-c6fb-4502-9355-20a108f41310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 80b052df-8a10-4c64-b315-5e484e74d5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 ef7ebe2f-e2c0-4c93-bd79-33afedb82ac4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h022D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6CBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA2DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h022D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #654 07f12c25-58d0-4eb9-838b-ffa4b759f953)");
unit.assert_eq16(16'hEC9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #654 7bab5c96-cba4-4ed7-a1cf-0c1f7d3d4a7c)");
unit.assert_eq16(16'h19E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #654 976028f5-dbd4-4ebc-9fa4-8fce390a2d32)");
unit.assert_eq16(16'hA2DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 035cb28b-5df4-4462-bebe-839854aebf9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 908a9b15-1d81-439d-b41e-0415f13d23b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 d6d7ec5c-8bf9-489c-88fe-c577d922cb8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 88c19413-2e17-45ee-beb6-9b5e7896c5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 e9ce3791-add7-46ab-95d8-c44c77f20e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 9b8f8add-544f-41f8-8ed2-5e36f601374c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 50cbac69-31d9-4a55-9545-32dbeb30cc99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB962;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCF89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h16BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #655 9f6d2004-b289-4fe7-a028-a58c66daaf58)");
unit.assert_eq16(16'h4E5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #655 c77fcdf7-7d4b-4410-8687-de1758f6c46a)");
unit.assert_eq16(16'h6709, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #655 c1d47412-4395-4137-8c73-f8d15ae4fe19)");
unit.assert_eq16(16'hCF89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 4733238d-3133-4b00-8378-a8b59bced7be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 40f0bcf7-9d8b-4efb-ad8f-2eeefa14e215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 e1ecc0e1-cc9d-432c-b182-7981d2213642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 a43d7b0f-a591-4b47-84e2-237b983d0372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 94230760-c2b9-4a1c-b67c-b954c28e9c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 e9325558-9b5c-432d-9acb-b15bef1c5476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 6f265f78-ca33-4c96-97f3-533dc3ec27ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCBBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5698;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h696A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'hCBBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #656 18f01c83-0f87-4a34-b3a3-3b62bd68e61d)");
unit.assert_eq16(16'h5698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #656 07c7ca1b-c451-400d-ac53-03e40371b524)");
unit.assert_eq16(16'h75F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #656 7874eca4-2991-40db-991f-def098609726)");
unit.assert_eq16(16'h696A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 b708b067-ccc2-4c2a-b1cf-318060d2e29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 e4e2a929-75b1-49d3-aefb-87aa60a03a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 b63ef273-a6c6-4be4-aef1-875268c1bea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 645d547d-3c63-42b8-9c83-2ab161aab086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 ad1f2b04-8fba-4874-9372-901cdec2059f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 d923de8a-b3f5-4a5b-9c8d-5dc08a000f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 44c6f90d-8693-4018-a162-01ae521c4a44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h92CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h3F49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #657 df522ac3-3f37-4569-9588-8c45507b3a01)");
unit.assert_eq16(16'h92CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #657 75348712-925a-43a1-9203-ddf17c78fc4a)");
unit.assert_eq16(16'hCE27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #657 e61ac23f-77b7-44e4-817e-541b31566aa7)");
unit.assert_eq16(16'h9F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 1535da7a-c86d-4160-85ca-64c9c2c11ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 8f894df8-ca14-43b0-a6de-e2693e506be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 ba49d0b2-de67-4ba2-b3f2-f9591f5f82bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 03722777-e561-41de-afb6-70dbaa0fdb48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 4b3dfc06-53e2-40c4-ab7e-b41a8e7d09bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 064b2af9-9fd7-45df-8343-66db2828a670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 54b78e3f-6fd3-46d3-8ac3-6783d9a5d500)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1B5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h1B5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #658 7037b736-58fb-4354-824b-cdfe0079a3ab)");
unit.assert_eq16(16'h0C49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #658 215f3a95-7584-4d9f-9a66-d4e5348cfb5e)");
unit.assert_eq16(16'h99CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #658 c8f9f022-a4b4-4d0a-bd2f-815afb4057f7)");
unit.assert_eq16(16'hE5F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 e9995960-fb36-4480-8890-d0d4d7c15d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 41229858-1d94-46d3-ac89-29c7b817d180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 9b9cf69f-007c-4025-9197-2dd0222647f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 e325177a-dc34-44dd-b736-5ebf8c6eb5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 3caf23de-903e-4ab3-a5fc-ad0667235fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 edd591fc-9020-4034-8021-9e48fcd47930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 b7ce4b9d-6cf5-428e-ba3c-a408cdc61f2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h239A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB09D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA2E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h2B24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #659 029f1d53-8cf0-4523-ac2b-a6a157c5142b)");
unit.assert_eq16(16'h239A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #659 7dfb9851-f348-4b03-9fd4-e63d4af1fb0d)");
unit.assert_eq16(16'h0A0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #659 912138b0-9cc3-42ec-8f0c-22b14f89b734)");
unit.assert_eq16(16'hA2E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 2841c22c-adfc-4533-be8e-f0ccdbcfe567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 e198a442-b6ec-4a0a-95dd-e6ca59b6fe14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 eebf2c01-dc41-4610-ae67-976bae5845f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 e55ef836-0714-40eb-b737-e267ae55d388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 1aef707e-17b3-4493-b98a-4445a4c7bf30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 f858822e-b6d7-4871-bc5d-d86d15e145a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 ce682907-6bd5-4e78-926a-a71c2e9d89ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC558;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5EE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDC60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h0C1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #660 edf3d45c-09c9-4654-a80e-b4d09b7831b4)");
unit.assert_eq16(16'hC558, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #660 73450403-a430-440b-9674-a89b0daebe08)");
unit.assert_eq16(16'h3BC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #660 fbc2f0a8-a771-4702-a877-20d3558d3cd6)");
unit.assert_eq16(16'hDC60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 c057899f-30b4-405d-997f-38024e8fa3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 ef5665cc-53c5-4fa5-b5cd-97b5aea48f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 e9195a7d-211b-4d6d-b1c1-c1a9d770a59c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 67eb28c2-faeb-46fa-8b12-1192c37caa71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 8dd6de25-e3f6-4585-8f15-a6c5c89fb589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 02344892-0576-4c23-9faa-1acab8370fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 b17c783c-b67c-4db4-900e-32ca3b9858b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9AC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h925E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h21E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h9AC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #661 02b9f6b5-8cac-4ae5-9e09-3b821d9520df)");
unit.assert_eq16(16'h925E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #661 d8ddad3b-31e8-4f7b-ae1f-3bca03a21655)");
unit.assert_eq16(16'hA4F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #661 a20a922a-8660-4776-a1a3-57fc82856fcb)");
unit.assert_eq16(16'h21E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 e176f690-d230-4e8e-bf32-0bbb1bdc0ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 823afbe0-c32c-4786-915c-1c943e4f5421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 89f67235-f126-4d22-9b51-aa91b52a200f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 c2493937-f820-43ef-b233-8f745067018f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 69b5dd80-d0f5-41b2-af9e-3429cda936a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 d2fbf388-5faf-490b-bc9f-4c9f415b937a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 ac146bf9-f3b6-4e8c-869c-60dd7eafa546)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h350C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7AC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h350C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #662 74d2384b-b617-41bf-a760-699a4c0e7c21)");
unit.assert_eq16(16'h3E8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #662 cee57148-a69d-4d45-8cdc-4739669e70a2)");
unit.assert_eq16(16'h3256, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #662 90a14af2-bd49-409d-a4df-f0e45f10405d)");
unit.assert_eq16(16'h5E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 a493860f-47cd-4956-8e57-7b8a3d72e8c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 ee77f050-314f-45bc-bfac-0d953f7d19a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 5008fcc0-d2fb-4c14-882f-680c04156456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 fea57e66-e4b1-4395-a231-543d2efdd136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 68ce20b4-5c55-43f3-bf1b-476d517a928b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 c2912d08-4948-4b65-8f3f-f1e319b3f088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 b2fb8007-4c00-416f-a56e-a792fa52c229)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h172A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3800;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD9E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h172A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #663 5412d14e-d2fe-4534-a5b3-29d296bff8d0)");
unit.assert_eq16(16'h3800, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #663 2e34760f-6d62-4dd3-ac02-85d912abc93e)");
unit.assert_eq16(16'h046F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #663 754d49a3-0169-4044-bc95-ac120a3b17be)");
unit.assert_eq16(16'hD9E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 551ca5ef-177c-416c-bb52-9ce1b5512d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 10858324-f646-48b4-a212-6a87e87d7e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 54acd9f3-fbda-4cd7-a179-e2a36154d845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 4108791d-380f-4c32-a8f8-1cde3460fce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 dd5553ce-f894-47ba-9075-475d7e96e55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 8f799150-de21-40cf-9265-dc451bbbe04d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 66651700-9012-4a8b-8278-8c13cb325927)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA68D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBED5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'hD8D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #664 13ba9712-8921-4c4a-a699-81814cea00bd)");
unit.assert_eq16(16'hAC54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #664 6d2a01f8-ddfc-47a0-b0b6-2675643c25fc)");
unit.assert_eq16(16'h1A6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #664 8969dcaa-fd63-4242-99f2-b0318cab0006)");
unit.assert_eq16(16'hBED5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 863d6e03-667f-4269-948b-8d4f29aa0d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 e3a2804b-585d-4fc0-869f-a3ced36b34ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 9cc79f4a-f369-42ec-bfda-787433530956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 0a48dd66-054b-47a8-a2e5-18a2f64381e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 8f3221e8-93da-4926-9072-6de0e287cc0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 7a940e5a-4f57-43ca-9c2e-515709bef3ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 2750484e-066c-4239-b82c-e46c7f0999da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1476;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC383;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3249;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h1476, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #665 52e4d77c-edfd-4c11-8e02-e994a2ba77b9)");
unit.assert_eq16(16'hC383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #665 162ebb58-4216-4026-807b-7f8e746b7e88)");
unit.assert_eq16(16'h32C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #665 e30129d9-10fc-4cb9-bfc8-bc121ff6e98c)");
unit.assert_eq16(16'h3249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 9fd79214-43bf-4738-aff6-95551f353b9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 eb24524c-171e-40a7-ab7b-d7f255bcca29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 c1b08dcb-73f9-40ac-9aea-a15c74f1a20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 fdf0586b-10bd-4d03-9abe-6e682e291859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 997e75cd-0f5e-4532-9522-0102eeade595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 d0980b7f-35e3-40b8-aea1-f2272edf5bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 f96e4ff1-c00c-4bc5-a345-8cad899c47e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFBBB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h830A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2BB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h246D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'hFBBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #666 a43371f5-ad2c-44e0-83f4-d1025d789a9a)");
unit.assert_eq16(16'h830A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #666 c195ef6b-b1f5-4816-94f1-aa82947ad817)");
unit.assert_eq16(16'h4E98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #666 4fcd99ca-3a29-40b9-a127-90e5253acab9)");
unit.assert_eq16(16'h246D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 28d62833-ed16-4633-80b6-8c81f6f872b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 0995cb2a-2e62-4552-b969-65fd6bf613a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 dd0cb35f-b4d4-4405-83ed-17d2e753ae80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 e3ce2173-5621-46d6-bbe8-932e306116b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 3b86a407-69d9-433e-a764-82cc333eaf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 b74242ae-2322-4d4b-a699-183f6a6e8990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 ae4592e6-a813-4306-a6dc-30823e4b5709)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1F32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0150;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h1F32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #667 19bf4c88-11c0-4ed1-877e-d2d5aa16bea1)");
unit.assert_eq16(16'h0150, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #667 75a689b3-ac12-40e8-84ae-0a069535264a)");
unit.assert_eq16(16'hAE8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #667 27599ec7-4e72-4ca1-bcbc-ef6731c8ade2)");
unit.assert_eq16(16'hFD1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 360ce56f-3768-4416-adb8-b749e2ff0ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 4a4eb7b7-7c45-40ad-94fa-950e850f27f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 f8a8be22-ff65-4ab7-9a5b-24b1ea33f464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 8705887d-4ed8-4f83-869a-06944ac4ac2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 b836b5e8-bc60-4dd3-bf69-93130dedca27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 d1f48417-b349-4843-81ed-fdcd313bddc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 df6ab5ed-5a71-4885-a7bf-5d428ba57a44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h408A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h04B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #668 a3a25072-90c6-491e-b9c2-2e066c97a342)");
unit.assert_eq16(16'h408A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #668 e7ac0762-0b48-46ec-8bca-4f596535eda3)");
unit.assert_eq16(16'h0F4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #668 c78a14bf-07b6-4471-9835-75943c9d8433)");
unit.assert_eq16(16'h0A0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 528350e9-876a-4454-8231-3e471620b97b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 16c54f6c-11be-4f6a-b555-90919557596e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 9f98b826-3a0e-4d93-98dd-c45dfc7b4d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 28da97ce-29d0-4cfc-9bca-5b5049b59a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 0362d964-c3cc-41d7-a87c-af8ef38077c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 a5b49252-d054-436e-a12e-780ed3079f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 5eabeec5-f2d4-4ff5-9bde-575c46bbdb1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF7A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h371A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h64CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #669 9c49ce47-3361-4b0d-bc7b-b4bf146c8dcf)");
unit.assert_eq16(16'hACD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #669 82f4b8dd-8fbd-45a7-90f7-1fdf8c723f97)");
unit.assert_eq16(16'hF509, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #669 58128c40-0e9f-4048-be61-911a85e6ab0e)");
unit.assert_eq16(16'h371A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 a9f485a6-95e1-412d-b37a-95f14c61cc04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 e106e8f7-65c7-4532-9e29-c20e3e2f362b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 f5660959-838b-49d8-93a5-500b45940ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 e4fe1db1-5615-4d1a-b289-01475ce8f6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 7f6c3f22-9706-4991-a5a0-b3c8dd7feade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 4af73c35-350a-4c92-b524-e68c0e8d934b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 f4119551-fb34-416b-971f-03df2e9d77ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5927;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6566;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h32DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1735;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h5927, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #670 9ed14f52-47c1-4196-b031-a8f9ad88eccc)");
unit.assert_eq16(16'h6566, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #670 2c52313b-791c-461a-ad38-2125d1c8569c)");
unit.assert_eq16(16'h5BC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #670 c1696610-b5c9-46db-9753-88d5d6a04ef8)");
unit.assert_eq16(16'h1735, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 9b90318a-ea2d-4758-a6d3-4ab1414022fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 5ffe912e-4343-47e0-86e3-33cf83f5f640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 aca96c0c-a75f-456e-8491-0ba486f179c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 90cf8835-7b1f-48af-81ff-6470d0da7d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 447dd113-5e08-41db-a354-e26d5a766f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 341e3448-4497-4738-a04c-2c296321a743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 b765c398-e1d7-45c4-a4e1-d47dad9e4869)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2486;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1299;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'hD8EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #671 d7c0abe5-0cb6-4f0a-9078-74ce46d623b8)");
unit.assert_eq16(16'hAE05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #671 f17d237f-d58b-471e-9e5e-eb71bf41d9a0)");
unit.assert_eq16(16'hFA6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #671 833faa8c-597b-47cf-bc55-c6765d8508fc)");
unit.assert_eq16(16'h1299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 32c0c5a1-dd8b-4b5a-8956-e48cbee1e049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 2f35db8d-b2fd-42d1-97b1-afbf00a6f170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 8e355556-2290-4b25-849b-d0feb5138a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 ff1ee012-8763-4be1-b919-95b1836d71af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 f4781226-ff9d-45a3-a06a-1b901d0e44d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 56545523-ebaf-4455-b15e-bdd65f7eea75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 ba39da4b-3c8c-425f-88d6-b25a1e4118ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hADDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h080D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h699F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB721;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'hADDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #672 f401ce7d-5d0a-4bd1-af75-9ea3bb0def33)");
unit.assert_eq16(16'h080D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #672 fa82225a-fb52-4667-83d0-65aa8c292740)");
unit.assert_eq16(16'h1C4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #672 0492c063-caaa-4360-9157-5da0090fb5aa)");
unit.assert_eq16(16'hB721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 abeeafdc-4e1a-4918-ba74-b532610d211e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 6a01396d-73a0-4fbf-aca5-1f229d5553b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 a1d2da1c-3c16-4f74-89c6-240abc9ba2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 5383e833-8c6a-4b25-99a3-7ab21f2130b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 a446d747-cd6a-4b89-b7f6-6c080b7b4778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 8ae343ef-6515-4bb8-9984-b7f0da62e283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 0b5918d8-55fe-4f5d-be35-912e99f338cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF6FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h75C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h9E70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #673 dc46ca2c-dd7b-4c9d-b7cc-77b799c5d7e2)");
unit.assert_eq16(16'hF6FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #673 c0b3ffed-a33e-4903-8a73-c3f74fc73d28)");
unit.assert_eq16(16'h175E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #673 dd2beaf2-01f9-4e7e-9e39-47540ca30133)");
unit.assert_eq16(16'h3B0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 faedc107-0ace-4eca-b87b-642d72cf5aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 c73da1a9-7829-4180-a2b0-5a36547f3b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 13613585-78fb-4821-bf05-688ef61b0104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 33d21584-7330-4980-a88d-1dc60176a2af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 04e7f4ea-459b-471a-aa0d-3e2ff8045a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 ea140b61-1fd8-4d41-b1ac-1bf004470a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 50471a65-5f5e-4cca-a7fc-5d4d98c09938)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h812C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC05A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h7C4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #674 900964be-562e-4531-93d7-9f6859ad6ab9)");
unit.assert_eq16(16'h55A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #674 fc6f3a2a-ba3a-4c61-bf80-6953aca3a826)");
unit.assert_eq16(16'hDAB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #674 ef49b315-7f96-4875-b314-055481e1206a)");
unit.assert_eq16(16'hC05A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 e9a90cdc-096c-478d-a607-0cae21bf7d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 fd99409a-74a9-41d2-8c50-18f65db3a122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 5417b47b-3730-41a6-8549-dc734f8709d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 5b8c138d-3208-4451-9d85-b266161c7dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 545bfeea-579d-42c4-bd45-073768389131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 f07afc2c-c9f1-4017-bcf7-7188132b24af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 5b5ec73b-63ec-439f-8ddf-003bd4a6b112)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA53E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB3FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h5CF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #675 12b4738a-f3f7-4a2d-8e8a-6bff8891194e)");
unit.assert_eq16(16'h4E2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #675 bafae12a-1b41-4a82-8dc2-cf2b70906f3d)");
unit.assert_eq16(16'h3AC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #675 c72cb623-2dba-4463-a148-cee3253a18fa)");
unit.assert_eq16(16'hB3FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 4f1fe629-7767-49a0-80bf-118fe052b587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 b9ac26e2-8f01-4e34-b896-9a4088ac7c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 fdd650e1-7dfe-47c3-8734-13499938ca64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 51b464e4-f1e7-4a7d-9ee3-a4234f852067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 c4056509-3689-48d9-9e60-35585090cd51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 30e82bd8-d10d-4705-907c-6e30e6534353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 4b71ed87-0368-4770-a505-55e0a26e1634)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3ED0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3BA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB468;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFA54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h3ED0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #676 933c66f0-1835-4531-8519-90512026a941)");
unit.assert_eq16(16'h3BA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #676 13a3a258-9e19-4d99-91a8-8bd284a64c4b)");
unit.assert_eq16(16'h92CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #676 a1030854-3bb1-4b0b-a69d-427b88273566)");
unit.assert_eq16(16'hFA54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 6e8d0902-8147-41cc-be7f-3022c442b093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 14379b8c-e0f1-47e1-9837-38ef1c76c4df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 57790efc-c569-4e8f-8029-3190e3240e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 32ded344-e6dd-4d27-ad5d-0c709985cfa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 a35721cc-bf7f-4dec-aa3c-1fca3e0add3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 405d9f55-8db5-4fef-9019-8bcd32feab05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 923bde09-feb4-48ac-b84e-f262ec8cd1ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1328;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h32F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h98EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h1328, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #677 442bfeaf-854c-4dcf-90e8-705efe241e8c)");
unit.assert_eq16(16'h32F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #677 4615f875-22d8-4d18-9321-ab10bf2ec5cc)");
unit.assert_eq16(16'h5898, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #677 e2046f06-2f29-4f19-bc9b-b5d9a5c76c20)");
unit.assert_eq16(16'hC627, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 4f25577b-433b-47fc-a76d-45fe5bf57f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 e7726923-ed36-4c29-afb6-1e7296eb3784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 631c9178-dc86-4a3b-bee7-b58a09616089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 db18c32a-3888-45f7-ab1a-b64f1d76c879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 1ae84833-6a07-4d00-b4db-a5a0cbf89469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 543ace6f-86e0-442c-8822-7be575cfbd3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 dec47472-19a0-4c25-9e5b-a8134e1f0459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB031;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3896;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2072;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'hB031, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #678 13f99eed-fcea-43d2-a08f-d25e229c94c2)");
unit.assert_eq16(16'h3896, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #678 4752de68-667f-4204-aaee-8cf1d335d5c0)");
unit.assert_eq16(16'hBDFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #678 05e531a4-3392-4ced-adac-a72ab43d459c)");
unit.assert_eq16(16'h2072, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 7d8d6764-ae2a-4a3d-8df2-d69c6a13fd9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 363830dc-dd43-4f73-bd6e-f953b6f7f0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 446a700f-f58b-4273-a181-c0a6d26e8eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 32c36995-1ff4-40d2-a4eb-b04da8a5772a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 4382fa91-6f29-4586-9648-f951eb139331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 a3a36b64-9d4f-4817-b11d-235637b91ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 2f911760-c3bf-42ee-bb9f-71c62f7f7839)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6E86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC62C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h8B8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #679 ee2e98a9-29da-4390-bf04-bbef3759d25b)");
unit.assert_eq16(16'h6E86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #679 e12635a0-4e7f-4e86-b982-6b8733796c00)");
unit.assert_eq16(16'h916F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #679 ad6757da-ae1a-4a57-879b-331898ce6432)");
unit.assert_eq16(16'h08C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 efa0ece7-31da-4e51-822e-61b7e488f529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 09e74371-3b5e-4124-a577-47d282f62347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 0cb78b8a-9464-494a-ac7f-60caac0f1acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 3ed30f20-64b4-4bdd-9231-96a053a3651e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 dda176da-7617-4ddf-9b5a-0143fc6d5a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 fea51bd4-6660-450f-a656-468adf8f9083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 6f65dcd3-9a00-4c8c-acf4-cb64f7558dd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5560;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h206B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'hCC4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #680 0a0b15d5-f024-443b-9025-e9add7e4bc88)");
unit.assert_eq16(16'h5560, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #680 47e19a49-5991-424e-97a7-0c30da60284c)");
unit.assert_eq16(16'hCC54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #680 79d3d62a-0815-4924-aab8-626984cfb5d3)");
unit.assert_eq16(16'h206B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 7d150d15-d0ff-44ac-adda-36bc97c65890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 0e94050d-7495-44fc-ac46-a15555c25030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 f3633683-d94a-4a96-95a5-193e498a77f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 d9ccfb32-b671-47b3-8b7e-839da882e440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 6d85710c-9bff-42a9-961b-06a1d4adfd24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 44fe2aa9-835d-44f1-90cb-e206c25b1fdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 2c7c414e-1617-45e8-a2d4-2d4f3f7b83b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h129D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9EDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD268;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h129D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #681 0a97af8e-bffe-4dbf-807b-557b18154241)");
unit.assert_eq16(16'h9EDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #681 15470006-8662-43d0-ae7a-999f7e1fb473)");
unit.assert_eq16(16'hAC6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #681 282c41b9-dc06-4387-8f98-4586f96e414a)");
unit.assert_eq16(16'h23B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 94b4367f-b934-48cf-a5e1-0c65727b8f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 61544645-f23c-4590-be3f-6be076379dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 ab21ea13-a299-4a9c-bdd1-86cfb7527d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 1b8befae-8629-45fe-8feb-496fa9798a6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 1670e932-aa9a-4a31-b7c3-e63fdf3df330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 c05577d4-d3e9-442c-a45b-753bf511739c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 f432c1b0-b6ee-4ead-828f-ff4969e44791)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8F2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7729;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB420;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h8F2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #682 ea35d427-71d5-4b43-a2ff-445eaf48b60f)");
unit.assert_eq16(16'h55B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #682 77960736-9a07-4fd9-a4f9-0ec1673cee09)");
unit.assert_eq16(16'h366F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #682 e7f3cd97-f4a8-4d4d-810b-9e2a2a647932)");
unit.assert_eq16(16'hB420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 640ea448-d5a1-4dc7-84a2-d27d94d456bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 be3b0df4-c367-4632-b037-efca681d40e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 2967e244-5531-4bc6-8ed9-3d3e450b26aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 9a671267-457a-4c65-996f-0f385a1c93d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 18e63241-eb29-4647-822c-33a7257841ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 5a29a982-4b7c-4c85-b8e7-b0fa60e648ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 75013d4f-754f-4d22-9d30-13b98fc21024)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h825D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB09F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBF0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h8A94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #683 fface2d6-e039-49db-aef9-918c5efe049a)");
unit.assert_eq16(16'h825D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #683 8a287dcd-91ed-4834-8158-05305cff0419)");
unit.assert_eq16(16'h7F29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #683 c71674bb-4c89-42b9-86f4-3f116e6818c1)");
unit.assert_eq16(16'hBF0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 0c117b19-7092-400d-8ef4-e39aa031a8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 eecebe12-5517-4245-b9ff-da2a9bf07555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 31aef171-0401-4286-ae5a-dc9b648414cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 6c09d0d0-1f72-43b5-812c-d066c3f87a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 09a21ec4-5e06-4f7f-9b4b-a5715c00215b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 ddbba01d-c919-4466-904c-5352ef25a5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 267b4cb4-18a8-4d39-a41b-d55c556c9e99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3889;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE3C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFB28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h3889, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #684 95d6e6a1-8091-41fc-bdfa-d71bed2ee558)");
unit.assert_eq16(16'h8E24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #684 322b1af8-31f8-430e-a698-85446a3fe75f)");
unit.assert_eq16(16'h80DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #684 c11de3d5-5042-48a9-ba19-bb373fd597d1)");
unit.assert_eq16(16'hFB28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 e9f23cb6-cb25-4666-b09f-46ced64d5d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 7783402b-4fd2-4e95-a339-4d3104918654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 6557d8f2-dac1-4fc3-af15-e6b3860adb51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 da3baa70-30ac-4ba0-b165-c8de5d94816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 c166e287-fd0d-4e7b-8230-df42710d7066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 0c14ddab-6d18-4f11-a6e9-96317995f01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 6d5b77f2-9448-4c3f-89b9-a39778e5ac86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD97A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6569;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA90C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h92B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'hD97A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #685 347c66c8-3101-4dfd-b949-3b5803a6bdaa)");
unit.assert_eq16(16'h6569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #685 a590c131-01e4-47ef-91c8-c278c62f697f)");
unit.assert_eq16(16'h4625, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #685 d01900e5-c32f-4dc0-8240-feb0f06f118d)");
unit.assert_eq16(16'h92B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 dfd3c5a2-9129-4033-bc85-b102d28d240c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 d5d8aeb6-7180-4075-a055-cefce9fc285f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 d87c47f9-99c1-4263-b35d-976255308bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 1a5a4914-a04e-4c8e-a919-2d4096b4e8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 7ec6b593-6779-460f-b442-42ffbd1a554c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 08dbef7c-549e-4021-b262-5d2c04284ddf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 28e75808-ffc0-4a37-a1b0-68e92e318290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h245F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDE7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7350;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'hCD6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #686 ae62b146-2cef-4472-bd17-833fda2cb489)");
unit.assert_eq16(16'h245F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #686 88b49365-78e8-448f-89ee-9ef765467d34)");
unit.assert_eq16(16'hE0ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #686 d78058e6-4817-4e80-9084-ba4059a29ea0)");
unit.assert_eq16(16'h7350, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 27f1cc98-66cd-4d48-b2d6-21f9fe087dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 c1ab2516-0523-4c73-af1e-0429f63fbd02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 1cff2bd9-6398-4a8a-a015-e58732affa22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 4811438f-5d02-4b46-80c8-31cb603e0059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 32a6da38-349f-4424-854e-8bede8c3e53a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 297792cb-a080-4ea2-aa8a-a315c1eb340d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 4a112c49-e501-428c-a5e3-e1a9120ac2ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF43C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4397;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF033;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'hF43C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #687 79c9d7f0-48e6-4723-bacf-bdd988ae6585)");
unit.assert_eq16(16'h4397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #687 6032e198-fda8-490d-88d2-6cc63ecab13d)");
unit.assert_eq16(16'hB106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #687 c9801cbf-70d6-4390-813e-a2d834214716)");
unit.assert_eq16(16'h4E0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 2e60b2bf-4fca-47a2-a259-4a8aedece94b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 5e96e425-6416-4dd4-81ea-c26765177bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 7c686529-fc35-4e1d-91ba-075008f441d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 480fcd1f-cf6a-4f54-ac22-cdd52c04a457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 42522f45-2fb0-42f2-82ba-406886c32d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 335d1173-7ce1-466e-9881-592a610e00ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 e1613ad8-39f8-4cef-bbc8-f0a20291e3bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h623C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8940;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5448;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'hEC92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #688 e68cfbca-0d0b-439f-9cd8-8537f9c8f104)");
unit.assert_eq16(16'h623C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #688 d24ac86c-976e-4233-ae55-02a11bc94dda)");
unit.assert_eq16(16'h3C88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #688 5cbdb4c5-bb6d-4da4-936a-0a0803f80201)");
unit.assert_eq16(16'h5448, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 b3dbaa41-26c3-4d3e-afe8-00de74962d86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 c1eff1aa-3e15-48b2-937a-2d72429fa783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 0ed247d9-f453-4bd7-89f8-604670be0d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 de3ac3d7-4256-4f96-ab9c-44a298e108fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 f8d954d3-3d9a-44d5-9a75-1d2eb5244f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 5bd55351-b5f2-4657-8ed5-64d540d25cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 12e9f332-e42e-408f-986f-eff6d7e39325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h204E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2CB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h7DD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #689 057e0cc0-60cd-4667-bbb2-cbb99499a006)");
unit.assert_eq16(16'h9B2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #689 180c83f2-872d-40af-94bf-7a693a8e96b7)");
unit.assert_eq16(16'hDB36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #689 0a6fe9b6-1561-43a2-a7c7-e42a77efd6fc)");
unit.assert_eq16(16'h2CB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 45cef517-867c-4fdd-9262-302f8a215cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 87284127-972b-4c2e-ae80-37558eea10a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 1d2cef0c-37d0-4ec8-8f5e-99e66a6d7a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 5a61d00d-e0bb-4ff8-b10f-18fdedee6dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 a32e6ea1-1489-44d6-8ab4-7dcdfe967e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 5c21abca-f452-47fe-b42f-afda5dc99722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 a928397d-8441-4820-a9c0-4259924aafc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFDD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE012;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hECDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'hD0E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #690 a8650265-19cc-4249-a269-3e762487a1eb)");
unit.assert_eq16(16'hFDD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #690 358aea05-5018-4af2-bcf3-0e50ef0f2125)");
unit.assert_eq16(16'hB3B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #690 0e6e03fd-d8a9-4a89-b06c-8cfb95b6bbd6)");
unit.assert_eq16(16'hECDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 18dd52c6-ccdb-4869-8e9f-e2fb4b400d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 f12f427f-2bcf-448e-8cc8-fa85f0bbd378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 05213579-f987-437a-953a-a8b55b38ac38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 da07cb09-b429-4b4f-b88a-80571ff89591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 97e9a10f-db4c-42dd-92f7-b6a1f8ff18c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 f8f8f877-3d66-43eb-9d61-ffc68355473d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 eb8e2e39-b015-4cdd-a77b-f7d0b1f52e32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF76B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF7A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h874E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF39C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'hF76B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #691 8a7673ac-64fa-4860-a145-ae0d1613f1d6)");
unit.assert_eq16(16'hF7A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #691 e9971950-0bf4-4880-acae-4bcb0a86f83b)");
unit.assert_eq16(16'h22B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #691 588d8e3e-ad0a-486d-b1aa-80cbb18cb932)");
unit.assert_eq16(16'hF39C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 101db055-15f8-45fd-8349-21db86e28e18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 81533817-7468-4acf-84ca-0001838970b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 3b7d7000-7d3a-45e2-bd3b-ff5191b351e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 e0b2d357-498c-4984-abb7-8159894b93ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 a9ac521f-6001-489a-a1bd-a01bb49b4f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 9342a589-d0d5-49de-9bd6-c95c7871a575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 faa82412-e844-41f5-aabd-6aa6c809c25e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA061;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0EAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h14A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD951;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'hA061, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #692 32568edf-5506-42c7-b82f-be72d960e6ab)");
unit.assert_eq16(16'h0EAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #692 140aa365-f978-4283-aa0e-d5ebd41dcd54)");
unit.assert_eq16(16'h7974, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #692 b06a787e-b61d-450d-80e5-073a38ea7401)");
unit.assert_eq16(16'hD951, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 883a909c-cf19-462b-b90e-9e296d9521c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 13ad5f06-0cac-40dd-a015-805ac9084f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 bdeb8677-467d-4a4d-a216-a480d24c8b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 ae552739-1548-42fa-b351-8acfeeaa6260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 d9fb73de-722e-4f4e-9320-55756035d7c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 1bc99e28-ebf8-4b3a-9180-8fb7845e9b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 0a33c891-b883-4881-9d23-aca73a573ec6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7A6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4357;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8004;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4EEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h7A6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #693 97ac40e9-3cf0-4ef8-a47b-1fced8a302ea)");
unit.assert_eq16(16'h4357, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #693 88fbc245-767a-4786-9c6f-2f6e3fe3ee52)");
unit.assert_eq16(16'h95DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #693 0332ef40-e536-45df-80a7-757445fa4c58)");
unit.assert_eq16(16'h4EEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 f31b709d-1fd9-4ddc-854b-5a6387456528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 7798fd1c-5d0f-4f3e-81a5-6c756d23f830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 182d67f7-4574-4d3c-91bd-51aede846392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 688cd98a-2ab2-4682-99e7-c85dd6db36ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 5280e8a6-7357-48ca-9d9b-a675fac114e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 0df8b4ac-e504-4452-bbeb-62473415b64d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 a0fa1dce-3ece-4bde-a5c2-b365ae20bc4b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD168;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFEA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0070;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'hD168, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #694 88700688-7b39-4617-8714-193bc1f44260)");
unit.assert_eq16(16'hE0D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #694 070feb5b-1e25-44eb-9a9c-1e0e84c05da5)");
unit.assert_eq16(16'hAF8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #694 ee7f5012-2223-40a8-8a95-5fd4e2c7afd1)");
unit.assert_eq16(16'h0070, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 058e326f-80e1-49b6-8001-d88dfe1a4e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 cd206254-3ae9-4d40-a452-f2be7c8e0f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 c3fcf15e-02fc-48d9-adbd-f7117b67e16b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 fe59cbbd-d6e3-47b3-a4ce-54b87872df45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 de476f62-65ee-4511-9da6-6e55a51c805a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 8eeb65b0-ed38-4107-829c-7481f3828167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 6e0d6376-896a-4abc-b6a5-4e2c76430f5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB019;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFAD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2692;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'hB019, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #695 9a5d1691-ed4f-431c-a62c-157fc4bb7186)");
unit.assert_eq16(16'hFAD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #695 64604329-a756-4fc2-b2c4-bf92cb0a9649)");
unit.assert_eq16(16'h064D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #695 d1c5f864-084d-4635-b3c1-9ce8a8a78b6b)");
unit.assert_eq16(16'h2692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 626a8704-33be-46de-869f-1cd0dd4b617d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 efa33d8f-8743-4146-81a1-5c3802e117dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 20f380a1-c177-417a-a9cd-5fa27c4c4804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 18c89566-5c38-4b5b-bf4e-b04d3418d33b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 888094d1-3d12-4f45-a0bb-ced613693b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 89c74f46-25ed-45a3-beed-af0a4376854c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 9f32c1e6-83a0-4e79-b0db-a792d545b626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4448;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE7F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1399;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h295F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h4448, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #696 289f13d7-17cc-4d41-9e5e-eae9b6360185)");
unit.assert_eq16(16'hE7F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #696 51ae29d1-c643-40fe-a4b5-0ef623143b88)");
unit.assert_eq16(16'hB96F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #696 8a50ebeb-f81b-4979-b550-a7d4c2477ca3)");
unit.assert_eq16(16'h295F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 82e2ab55-f51c-4ce4-9089-be761a1a5dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 6a43ef81-8815-4b71-a889-79e9f4e4d7fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 79af5853-8275-4b54-bb2a-6a7beb4d875f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 798cd3e9-93c2-4ecb-a213-acb53e0c5546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 070dd26a-f9e8-441c-b818-6628bd27bc7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 6068b9df-ee4e-4908-a722-febc243ae4bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 e5894669-6544-482c-a5c7-f3623b649b5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEA34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD0D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h75F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7EA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'hEA34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #697 d8fff2da-9f86-4213-be3b-0aeb690154c3)");
unit.assert_eq16(16'hD0D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #697 6b771c7e-9c92-47de-be19-e9283843b270)");
unit.assert_eq16(16'hC6DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #697 f88354f2-ea3e-4820-b8dc-4912ab1bf735)");
unit.assert_eq16(16'h7EA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 5745fe41-9ed5-44b6-aa82-16d65233d271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 a047812b-8ecb-446b-bb07-fd3fea5f327e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 2249a994-aeb3-4940-9631-d9e6788a1d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 e4da92d3-dc90-448b-a124-e719f8ee1ca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 d61b1cae-eb6e-4945-86d7-a6dc6fad764a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 27d83dfc-6dbd-4d6f-9a45-f0d189ba53a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 cb78c083-4b8c-467c-8bfd-791694809c8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4735;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h21B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h4735, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #698 c0e4e078-3834-4c8c-96d4-c0412e1582f1)");
unit.assert_eq16(16'h21B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #698 7f1ce80e-ee34-4781-86cf-6ed4cdab70db)");
unit.assert_eq16(16'hDBD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #698 f05a574c-13fa-487f-9f95-ed4652d12812)");
unit.assert_eq16(16'h0FEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 4b7e7314-0021-42af-bd9a-3e60ddbb244b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 f3ea96c8-a781-4878-8d58-e2107b876798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 a134c3ad-867c-4d15-a5bb-8e28dda70c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 807c1e22-48d9-479f-a990-2986dc8a1b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 cae3da18-a591-4a7d-9152-6b74e37b2f3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 158c9d8f-e01c-458e-b1f9-2d0c4f6f31f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 b8d353e5-2a2b-4569-9b2a-6122e33ef6d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7263;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h7263, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #699 92a47767-4930-4cb6-8bbf-e932565d760b)");
unit.assert_eq16(16'h46B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #699 4698db7e-cf75-4484-a557-c02f9dca0e4c)");
unit.assert_eq16(16'h1FBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #699 266e6719-f823-43c2-bc93-ea6602e7664c)");
unit.assert_eq16(16'h027C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 3e567230-1d88-411a-85e2-c7786bd0dbee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 edcecce9-d9a3-4170-b388-c19fe60801a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 9eb0fa28-0b0e-4f0a-a5dc-0015831baa47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 9ddd34b5-d194-440a-b6af-4affb0dd7d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 21c3955f-a840-4fae-86f9-4f963d5fdec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 9a030ea6-42dd-46ee-9743-927d62d67c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 d233aec3-2d0e-490e-8a1d-5bb0c49da7db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0194;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h150D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h70EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h0194, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #700 b3503f6d-4477-4dcc-80ac-6d6aa1ecff46)");
unit.assert_eq16(16'h150D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #700 6a9355e1-e0c3-484e-aef6-b224352785e7)");
unit.assert_eq16(16'hBA6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #700 227cb4c7-dc3b-4c29-9861-4709a3511aa3)");
unit.assert_eq16(16'h70EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 debdf388-b8e9-47e7-b775-f7d0ac442212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 a23a59cd-8c0f-4fdc-841b-259e7de91d33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 2942414f-f7bb-41fc-b5cf-68f0ab7829b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 812775c0-4bf2-4b6b-b897-e1b43113b424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 9a2f5164-cfd0-43ac-a3fe-12a7887e6162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 41a2df69-f12b-43d8-82a4-fc2612c845d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 e78a13e1-4b7a-456e-92dd-6efe5a11d7c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8487;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8634;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC7F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'hEE27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #701 f147621f-c0d8-4f18-83ee-19c769ebf609)");
unit.assert_eq16(16'h8487, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #701 442916fd-b30c-45fd-af23-68dd196d563e)");
unit.assert_eq16(16'h7176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #701 ba40222c-2347-48a6-86eb-645ad0d41120)");
unit.assert_eq16(16'hC7F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 62a2698b-d918-4eed-a002-4cf618feec21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 7dcd759a-eb9f-4a79-b6a4-7172a427838c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 45aca08d-f534-4209-aa18-5c537088883a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 b8156406-efde-4ca3-8d30-8fe37a7e5e7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 ffa3ac70-dc21-42b4-b03e-f2bc41e02fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 f005ce08-5dbc-4fcd-b21a-5412cbc0a013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 e43306e8-7e47-4076-bde2-f16a563292af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hECD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h159F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6EC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEE31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'hECD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #702 330eaa2d-6a8b-484f-8ae3-e4472cd0489c)");
unit.assert_eq16(16'h159F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #702 e1728346-ecdf-411c-9312-d6b3294c407d)");
unit.assert_eq16(16'h4CA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #702 d6a6c97e-f0a8-4e20-a7dd-5d85ca8afc43)");
unit.assert_eq16(16'hEE31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 7e49f67c-09bf-49c9-a092-bb6dad4b83d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 7bd0d265-48d0-4d5e-9302-5d9dece6a018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 68160df2-ba88-44f8-b936-4d49a6912d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 45055c24-04e5-431b-a279-fc64b370a329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 7510c03b-e025-4b2c-8bfc-fb7425868d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 ce48d4b7-d760-46e8-8693-d9d735c4cf45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 890e795e-5312-47e6-8c05-12006a1af44c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0BEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4296;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'hBFD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #703 649ac1d2-29bb-4f89-913a-a5689f1399ca)");
unit.assert_eq16(16'h0BEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #703 1e08f293-b32f-4fe1-889d-2bbd4a18ccfc)");
unit.assert_eq16(16'h1318, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #703 e4c2cdb7-4e1c-49a5-b910-d232755a0e11)");
unit.assert_eq16(16'hFF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 8f62772b-5559-4517-a6ec-89cf33cd792e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 863693ad-1a86-48a3-a9b4-7c4ea8f711bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 917cd0d7-7f83-46f6-a674-82aff23c545e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 47e285a5-dbdc-4aca-8580-8ec5ce851161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 529ee6e3-a830-409a-b48f-b7317fc7b13e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 db549c6b-8ff0-4bd4-a48f-d44bbdde406a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 3d55f531-3da7-4676-8d67-010254b44f8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3033;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC660;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'hF5E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #704 135b5c1c-9a52-4ff8-8f78-e619465c0cad)");
unit.assert_eq16(16'h3033, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #704 c30257fd-5197-4d38-8557-4ae862e6ce19)");
unit.assert_eq16(16'h6DC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #704 e8298c8d-e41e-4b23-8c07-c5de6dab77cb)");
unit.assert_eq16(16'hC660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 4532dfa1-e076-42a6-aa54-161d129db34f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 b798ecfe-1020-4720-a1aa-acde1eaf66ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 03709447-4b54-45af-a9c6-edd9e15bc595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 74c71882-9b47-47d6-bd54-3c51844172f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 97facfc8-410c-4e54-a6b9-03b5912b7386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 18541a64-8a6a-4f12-821e-c425cf3bb12b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 f60a2580-d482-4661-8a7b-db7f52766d5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h22FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h25AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h22FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #705 1c5d9937-0baa-4f81-bae4-9a537f31af51)");
unit.assert_eq16(16'h3D23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #705 4adf643d-019b-4354-8889-f8f984c255b7)");
unit.assert_eq16(16'h5098, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #705 a19c5188-1418-463a-acce-c436be56f3db)");
unit.assert_eq16(16'h25AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 ec1dbe07-dca6-4342-a259-02058832baa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 b91c8692-8d19-4102-9aed-8f74e50a5957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 5c161107-60b2-4ff6-9222-52075ade85f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 8afb5cd1-1019-4794-b7d0-ef3c806d9d30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 19567e1c-995a-4286-83ac-9ad0873045de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 c3221a85-176e-4e27-9a48-e0fc833969d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 1a2e4b43-16f1-4cdc-a493-f1f4e6e156b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF6FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1AF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h2DFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #706 501943fd-a848-4df4-8905-3a4e6f7eb432)");
unit.assert_eq16(16'hF6FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #706 d3896676-926d-4013-8d40-208929de8ffe)");
unit.assert_eq16(16'h0978, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #706 3b4779d6-f942-4864-9ade-f875e228e37a)");
unit.assert_eq16(16'h1AF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 b772843c-2ac6-4cc7-978b-9585183ef198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 ae544e24-e73f-45f4-bea8-811ce0d222dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 c146556a-e934-4df3-aecc-8f2c078c34d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 bb982809-6f77-4cb0-a82d-17ab57b3f51a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 8619372b-83d5-4166-8d84-6111b93cc666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 5c8ea88b-716d-4a9e-92bf-7103a2f3fa47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 0740f9c1-a9b5-43cb-8cde-cea2dca46300)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h775C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h76D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h775C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #707 5651da6e-7abe-442c-9a0d-32350dbca99b)");
unit.assert_eq16(16'h9F9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #707 f112e5dc-c97d-4c82-9655-f7119b4f2043)");
unit.assert_eq16(16'hD942, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #707 c4d7ac7e-c177-45e7-adcf-dc1642d05037)");
unit.assert_eq16(16'h76D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 e0797e0d-bc31-4054-99b7-6e327cbbc039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 092550ee-b5ed-42bd-a95e-393279206582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 bcb60349-f747-4cb7-82de-5b383c1756f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 9010184b-1e59-4ea4-bab9-870b2d5ba5a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 d206b5c1-f1d1-424a-83d2-003bd81a4875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 01524ec4-2262-4cb1-bda8-86709f31651c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 54a2907c-3bee-4b8a-8f99-1258480cf1e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h931E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD8D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'hD2F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #708 a6b7e326-edb8-4a98-a77d-6c8681e8c4b9)");
unit.assert_eq16(16'h931E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #708 626b7528-1605-472c-a3fc-ad4142d9b34d)");
unit.assert_eq16(16'hB7BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #708 a5f6557a-249a-452a-bca7-e7369993e4fa)");
unit.assert_eq16(16'hFE54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 4be0a0c5-6aad-4621-825a-c66922719650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 641080bb-0753-497d-950b-e25c78325faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 18aec8d3-c430-4f1d-8e81-511498af024e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 fb6eb389-3b17-4f98-a64f-5cb333b9ca06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 fcc6ea51-d4a5-49e6-afce-c8e884a85854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 2e6f3f7c-835e-4a00-a738-43f549bbd9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 08124bad-cbeb-4323-b597-36b562bdfa2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7358;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD507;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFAB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h7358, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #709 1c31e975-f82b-46a5-abb2-326e5bdb7a9a)");
unit.assert_eq16(16'hD507, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #709 4e1305ba-1352-4120-8cc5-a449e2a105ed)");
unit.assert_eq16(16'h953E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #709 82ffede3-e5fe-4c90-a675-dc622e6120bd)");
unit.assert_eq16(16'hFAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 56c947aa-7088-4c32-a0d4-5c33fef2c879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 9ba58b33-634a-4d80-a5f0-59e3e3a9c133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 f57770e6-8441-4058-831c-7f47a00e735a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 f561b1de-15e3-4da5-91b3-886e6f4da617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 a836af4d-3971-4984-b088-decae554a4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 cc00db61-c0db-4999-a636-ca5d479375e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 1b774cce-3d46-4e42-8ab0-96eb0c3b64a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h253F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9373;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h4AA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #710 87c6dbde-0ea5-401d-9b8f-2a3aff3595fd)");
unit.assert_eq16(16'h253F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #710 43f6746e-152d-4dcb-9c3d-e3be19614bb5)");
unit.assert_eq16(16'h7171, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #710 b50b61a2-1b74-4c1e-b6a9-fa052a7e16fa)");
unit.assert_eq16(16'h7A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 36c5ce77-bd0e-4df2-89ae-e6982c752cc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 57ed7c7f-12ad-4fbe-9fc9-fc2535037eb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 3a070d99-0a39-4d77-a87b-f159335d2d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 e72d8606-825c-4f7f-a24c-8b25e7b3ad85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 fccf5f76-3ef1-496f-a5a9-fb14875fec8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 386a98c5-a438-427b-b587-d8acabe1e552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 d040fc11-b009-497f-8b2c-fbd28f294095)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC478;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF52C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h8A8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #711 4683d543-9a20-4ab0-bef9-552b32107e42)");
unit.assert_eq16(16'hC478, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #711 e33ffcc2-90aa-4a19-b499-e4ee5f78c2d6)");
unit.assert_eq16(16'hCEA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #711 e3b47c92-cf29-4e17-835a-18a6b7db6125)");
unit.assert_eq16(16'hF52C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 7b9e00cd-e3f2-4d88-ac72-f1903369d2ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 849a42d4-cc17-4d47-b68e-3992feb82820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 1d9ed8ed-592d-43c9-a5c4-a167025bc8cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 7b4ac3f3-cb46-4564-95e0-fcf44f744eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 ffa33fcf-f1e7-4782-aa57-b69fc457e443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 7eded05a-4e47-4668-85ed-c20766feaabf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 a158d2c5-6b59-4762-8468-8b66b6280374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDDD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5893;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7325;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'hDDD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #712 91ffeb8a-756b-4799-ace4-24bb8b4943c3)");
unit.assert_eq16(16'h62E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #712 988bc17e-e9e5-46d0-bef5-f2600808c50d)");
unit.assert_eq16(16'h1DF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #712 a022bc05-d9ae-4ca5-8857-67edacaa250a)");
unit.assert_eq16(16'h7325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 1af6f817-1feb-4063-9351-bc0a0b386068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 e8e71ad1-98d0-41e4-9bc4-9f7d7abca6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 cb4e22f3-0bff-42a9-ab04-d3ec1620b4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 d4abbe0d-46e5-40e8-aad6-b96a27f915a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 4f81f43e-e15a-4a58-9b29-0d1d88fbe677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 2ad6494b-ce99-44c6-9824-3370bb883297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 93bf6133-ede4-4a8e-ba73-9f0d390f674a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9812;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h22E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE250;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAC93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h9812, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #713 5ea32b94-dd15-45ed-8a23-9e0f5c85e719)");
unit.assert_eq16(16'h22E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #713 df2cef97-2072-429f-93fc-c6e4674256b4)");
unit.assert_eq16(16'h068C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #713 6a4db1d6-8080-41f1-b9a4-94a16b393d22)");
unit.assert_eq16(16'hAC93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 ef085da9-8a05-470c-bc5f-86ccc025a130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 2c875bfb-56c5-42ce-beae-6542e548f9f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 58db278d-8f51-4c0a-a2d2-efcfc74609b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 16bb3487-8b74-4e7a-af4f-a08d43216f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 15515e95-d9e0-4a04-bf64-54c871858b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 7421bdf6-6c2f-4af9-bf7a-8b5d2a07f003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 a3982989-b76d-403b-8cce-577cba3a35c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7038;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFDC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB171;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'hBDAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #714 3ccc13a5-e112-4d7c-935c-cd146fd19cc2)");
unit.assert_eq16(16'h7038, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #714 5d2dfeda-ae12-459a-bc1f-f4223356bfeb)");
unit.assert_eq16(16'h3636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #714 7f0d88de-2f27-4c7e-b44d-88d65f64275e)");
unit.assert_eq16(16'hB171, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 daca0773-8fcc-4410-a0c7-0452381402e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 5fbb74cf-0cd2-4020-a4db-fe960c5700c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 4cb63043-afc1-43f1-ae43-ac3e4c28df68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 0ec6c7d3-3413-4c09-a820-d672c019037a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 5e9ba8fe-d346-4be4-a399-76d9f3e8255d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 8013c20b-935d-43fb-8e3a-aeace8c196e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 5fdf04be-81d1-42a5-b3f7-8cba477161f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB3E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAFC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB06E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'hB3E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #715 2c18ec05-5680-4be0-9c83-f73cff449245)");
unit.assert_eq16(16'hAFC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #715 ff80c048-d8bc-4830-a259-dadf1054517e)");
unit.assert_eq16(16'h0DFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #715 6e2a2d09-c7fe-4057-b195-56c7c8b88f5f)");
unit.assert_eq16(16'hB06E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 529fa0a2-f9b4-4316-9afc-035ac25e4d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 239b68d0-c429-473e-9d53-0326a4549f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 4eca9d5a-01c7-4a00-b311-77e7b0e30e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 2671b359-ee2a-45e2-93bf-da45f15b78ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 8e55b3c7-ca1b-458d-9f50-8f4ed715a68e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 a7d5654e-867d-45ac-af1e-730e41b56e00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 e094e6b5-2db4-46bf-b4d4-e9fa56d9f441)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC3BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h917D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2BFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h66D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'hC3BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #716 0fe329d8-da23-4a9a-8a28-99e984bab2bf)");
unit.assert_eq16(16'h917D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #716 1a07fddc-ab9d-4925-a21a-92f32968151c)");
unit.assert_eq16(16'h61C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #716 a593a4dd-c845-407f-bd32-f22b8a308121)");
unit.assert_eq16(16'h66D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 2230e097-d996-4bbb-831d-6d38d42e7846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 bc628510-8ceb-48cf-b631-3832ba1ed2b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 30a54805-a1fa-4229-8ea7-8c07751ad5b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 17983925-6a9b-42c9-b008-ecff0aa7ad07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 8d20bc9f-3e69-48dc-a954-98bb7abe31c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 3f99b088-3410-4cdf-967c-e70ef306c6b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 1f6ad9d8-5076-4927-b9ee-90d33ec84e05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB556;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1A90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'hB556, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #717 30ec5757-5793-4aae-b0ef-565e412fad8e)");
unit.assert_eq16(16'hD6C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #717 db197438-ff29-4308-a084-6b1b7a270089)");
unit.assert_eq16(16'hD140, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #717 8a25ab0f-e480-4990-a0dc-e68540bfa55d)");
unit.assert_eq16(16'hF1A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 32d974e7-7f79-4ea7-8ad3-7f00fc5e57cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 761184fc-0401-449d-bd68-44a03aaa86ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 d4ed5514-a28f-4479-9c2b-61d5fb4fb343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 34bd3cee-096a-401b-a695-1cdfaea3ab9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 4f6eedca-15e5-4db1-b998-c2c798f841a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 c2b7c9b8-ff45-4780-9394-9a316a612a95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 452a5896-bc5d-4f1a-acbd-eb18d0cf7c04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE9A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD296;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h7E58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #718 007777ca-dd4b-446a-abe4-f7f0610e80bc)");
unit.assert_eq16(16'hEB19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #718 045927fc-f2e0-4f8a-8bcc-3383182ff523)");
unit.assert_eq16(16'h0ABB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #718 80a9a571-ada3-40ad-b616-e099ace8a260)");
unit.assert_eq16(16'hD296, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 a823cd19-ed9a-48ac-9d74-801e246fc1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 8fb1d739-d6a6-4faf-819a-575ac93719ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 d065d769-a9c8-4389-8bd8-259e1582a27d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 4b1fe94f-ac27-4b37-8325-94b8c60b92db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 d0513766-51e9-4d35-80aa-90ad343d3af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 7cd0c541-6ab3-4935-8aaf-8a9685efabb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 98c78871-473e-4608-b403-df63a4049343)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA7E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF00A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEE9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'hA7E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #719 4fd4277a-0421-4ebc-8912-9e2057c74c5a)");
unit.assert_eq16(16'hF00A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #719 6b7b5c72-c8e6-4619-8338-87514629b2e5)");
unit.assert_eq16(16'h5E16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #719 e7778d1d-ba62-4774-94bd-21956c8c71a4)");
unit.assert_eq16(16'hEE9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 5ca9abef-7954-4e8b-a7bf-5d0d82f52d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 7320d853-a599-4cc8-a923-6754a2bb4e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 cbbd5e29-aa1d-4a06-9345-3c8344adeda0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 8f5cf027-9705-4595-beeb-2c7e025ba435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 6856b5ba-4c8c-4184-ae8e-0df379cef4d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 74280544-994b-44e3-b0e7-102d104fe5c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 6293f43e-6bec-416b-b2b7-b5f2b6548617)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h54C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h598D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1E4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h54C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #720 6a8bd599-9532-40c5-bcfb-01989f7368e2)");
unit.assert_eq16(16'h598D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #720 97bcaac7-4906-4e5d-a366-ffaff815c0a1)");
unit.assert_eq16(16'h173D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #720 84ffc9a7-dc8e-4261-8227-f578a48aaf2c)");
unit.assert_eq16(16'h26B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 8caf9b2e-4370-4980-aa60-8c69294236de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 10e629ba-0f9c-4fe8-807b-953560873b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 4046edf0-0aa3-48e4-9cba-bb0a1a65f08a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 3ce27033-781a-41cc-81ad-b958da957400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 3f9715df-70cb-4075-b07b-f41c2086ced3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 2d4f1103-6d5d-4013-9e7e-5414ae3bfb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 56dd979b-aafa-407d-b955-191ee16b8eee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h17FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1066;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h22B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h17FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #721 4ea2f644-25dc-460a-8c2d-dd9cdc4c905f)");
unit.assert_eq16(16'h1066, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #721 50162460-0788-4f1b-abc1-75184f856a90)");
unit.assert_eq16(16'hF6C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #721 18269709-8df9-43c1-8791-bb9ac3c950f1)");
unit.assert_eq16(16'h22B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 3ccb2bf0-6b33-43ef-9039-6a03d66c9a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 25f7e9d3-786b-4040-8259-1b664e6de266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 402ae7ed-cf09-4280-9fc1-c03c81b64451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 6212382a-1348-4551-a41e-624a6dcf300f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 12e80116-ad0d-4287-9591-0712d6970a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 c2bf0afe-3c3c-41d6-8cb6-2574b1b25410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 3c8b8a42-2367-4c30-aa36-b1dfb311b8cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC431;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4846;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'hC431, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #722 dfd80cb1-23d6-4fb3-adaa-05e0276eb984)");
unit.assert_eq16(16'h80EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #722 14b1b99d-d86b-4669-b115-7dfcd40d6242)");
unit.assert_eq16(16'h4B56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #722 c3d6fff3-4d35-4523-9a0f-8abb74201cff)");
unit.assert_eq16(16'h3FBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 40ef0e51-927f-4492-9e5d-75c151bae566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 67f96924-ffc4-4be2-9bfc-80436abaca0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 eced47d6-6a1b-4c9c-b1af-f0de9bba9e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 6420f0b4-e6c2-4817-8719-412ef7c6fb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 6b698c05-abd9-43b1-9901-0b09acb36b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 e1e43f66-c4fa-4fb1-b81b-9bb66e56eef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 14914732-84fd-491b-b7a3-eb889dff45f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA3D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA4DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB063;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'hA3D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #723 3806a5da-85ae-47f7-810b-28cf21fc19d2)");
unit.assert_eq16(16'hA4DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #723 e49a586d-b6b0-4255-8171-4101fc1b244d)");
unit.assert_eq16(16'h24A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #723 bed71635-02e4-47c9-a8d8-64fa13e25553)");
unit.assert_eq16(16'h09FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 058615a8-9e97-4f46-955e-8f8c9f75e1e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 0183ab06-6227-46ce-97ab-8f51eb39c722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 b4157dad-5201-479c-bd59-cb6532f3c788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 6c6ccc80-f67e-4aed-9050-c005f009d1ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 a20b48f1-599c-4b14-aa20-c0db67002673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 b71055f1-30f7-4bf4-953f-d432852b0f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 fdca7ec8-46a4-4bf3-8634-3ec8f5fde196)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1663;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h36EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBCC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'hD7C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #724 342fcda0-431b-4dd9-bb4b-53f4266af8c6)");
unit.assert_eq16(16'h1663, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #724 ca8481a6-8df7-4c12-844e-8a0654676a46)");
unit.assert_eq16(16'h8EF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #724 8a1c52f4-afa7-43d1-a225-e75448c3b410)");
unit.assert_eq16(16'hBCC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 39d43b01-1486-4d22-99bb-b2fc8bf41905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 99bc6f83-3984-43fd-8da9-563c37fc5ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 6431ed0b-62fa-42b1-8883-4bdc5ba2978f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 ce26b1f2-fb4c-4a16-b7d0-cbad70014354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 288be4d5-3749-4b17-b428-1a0652fdc1c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 b669a31a-5722-4658-a601-a48e885acbd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 79811f5d-a99e-4e12-a2da-69119c7bd91f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD113;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h329D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6862;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'hD113, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #725 d0953296-3b7c-4e91-b239-080b1156579a)");
unit.assert_eq16(16'h329D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #725 184200ae-82a5-44c3-a7b4-1895e53d6708)");
unit.assert_eq16(16'hFCE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #725 ab2ede30-08c1-42d2-8d00-bb743e755185)");
unit.assert_eq16(16'h19A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 02885155-50e4-4602-a80c-7a4f3a90b4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 9ef58fc9-3057-48ae-ae1b-b735559490ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 c1fb2ba5-410f-4b12-903a-cf8dc22f1c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 1f7908e3-b252-414d-8dc6-921c5a3343c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 5aea9a46-0ceb-4fb5-8f88-23e633f0e416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 29a7023f-90a0-43ae-94c8-5b6f19d7c09a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 32e2fc37-d628-4125-add8-96a07d82683f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5A35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF0EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2016;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h63B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h5A35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #726 350e034d-fb98-4dec-8411-97734bfb3428)");
unit.assert_eq16(16'hF0EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #726 a9b7fd0c-57c1-4694-91d1-29e127fa318a)");
unit.assert_eq16(16'h14D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #726 604e655a-8816-40c7-866b-c4a1586ba1e2)");
unit.assert_eq16(16'h63B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 85d0ced9-d320-4226-a326-70e46b74832e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 12638034-90ad-4e5b-9a2f-540324197d51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 2c1d4f64-dd54-42ad-8b97-3cacf6bc889f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 9e290b7c-a3fa-4d7d-b44d-b4fbb9460f14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 974ba726-b78c-43c7-af8f-c20010971a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 2a3f4462-4385-4ffd-8e69-a8706e4c98d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 06f6ca9a-3af7-4f33-a843-db08a3f018e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6155;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8E94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h6155, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #727 b41f2f12-e5d0-431c-a6dd-4ac129d99c00)");
unit.assert_eq16(16'hAC55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #727 7c734863-ceea-4026-ab40-4915d78b17f9)");
unit.assert_eq16(16'h2A74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #727 f646c708-6af8-4333-b36f-ea33f87e40d9)");
unit.assert_eq16(16'h8E94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 7e785ec5-9315-4041-9ca7-b2774c361388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 a978a34e-737d-4edc-97cf-01291ea59f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 93bdf199-abed-4ed0-b08c-4165547837d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 333e8d3a-dff5-4bce-9c33-b71597267c0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 f8f668ce-eeb6-4070-8518-931e74178fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 24d73b42-caa3-4022-8996-d0e04aca3e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 81942091-2ee9-46c0-a2d6-27d1ba689a63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h202F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC01D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h202F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #728 7699c0d7-1a11-4017-a2db-8ce1520a5291)");
unit.assert_eq16(16'hC01D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #728 c6184230-9c8b-4cb6-95e6-c8daa559ea69)");
unit.assert_eq16(16'h0E0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #728 f19d3b4a-83e4-440f-a204-1c87a731d96d)");
unit.assert_eq16(16'h02B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 d165860c-93fe-42d7-a1fb-88c911bae90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 966340ad-4483-4dcb-add7-e4817855f619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 0ef9bc0b-ff86-4aff-97a4-1bb3abf5d291)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 97515e36-4094-4baa-89b5-ca2054cf8f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 78af3a80-9337-45ee-bb9c-53cfac266846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 f089c207-61f6-40d9-8a98-9a16bb8d6794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 a06a0b4f-a778-4dda-b87b-045b02800a64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h195E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1AE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h67FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #729 a649c638-be5f-4dd3-9d15-df07658f3741)");
unit.assert_eq16(16'h195E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #729 8fd87709-716c-4fee-b80a-a1d66cf178cb)");
unit.assert_eq16(16'h392F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #729 c85f5aa1-6c09-4492-8338-17376836dbcc)");
unit.assert_eq16(16'h1AE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 25d09365-08ce-4331-a590-d05298f184ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 45e15f2c-a93b-47f7-afc5-a77d26282b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 69699652-6443-4ea6-a4c9-a7e8511966ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 f8aa008b-89bf-4362-8302-e33de1335a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 490d739d-c537-4f3a-8c89-a2bca9f343eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 a09fdfee-039c-4a64-955e-31a1fdb0fbf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 79b98601-d838-4a4d-8e64-f78af87c6d1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h379A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h643B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h81A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #730 8fd98503-ca82-4fa0-8015-3f6073269c0d)");
unit.assert_eq16(16'h379A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #730 dc740930-00ec-4836-9d40-e95d5a068224)");
unit.assert_eq16(16'hB15F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #730 16660abd-d9a1-4d79-a17d-b4fcbf27941d)");
unit.assert_eq16(16'h643B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 ca7928d8-8e15-4e5a-9895-6e9645a8468b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 22b90dbf-9ee5-4aad-828e-2de3c4964c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 47243ed2-878b-419e-a915-07f0ca8dbafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 e38c25a6-9c4c-4c62-ba66-c186233e0bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 13c0afde-ed23-48c8-818d-c4b5c4d759db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 8f24b3b9-2b8e-41f4-ad9c-f213ed18224e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 cd5e32ae-b858-4fa2-bccf-cbb500f8124e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAACE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF307;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h49E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'hAACE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #731 7ca33169-1579-48e0-9f8a-612359c2ee29)");
unit.assert_eq16(16'hF307, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #731 639cb1c5-857b-4678-ab20-dfa943239cf3)");
unit.assert_eq16(16'h6A33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #731 a14e5914-2d0f-45d2-93b4-8707997ed163)");
unit.assert_eq16(16'h7DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 b4e227e7-299e-4460-86ad-42aea4ef7baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 812e1eb0-c472-4e9e-bbe7-3fe991e296a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 f8b8bb39-0f4e-4800-87fb-4f1ac556ecaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 c2d853d6-55fe-48d4-a827-6bd8eaee7815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 8657e1b1-8de1-4535-99a1-3b6abbefcb1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 3adec31c-75e0-4bc6-8f9c-550dad1e7f27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 abbc38be-53a7-4937-8bb0-8ca589386b07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD8A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'hDB15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #732 a32fe003-9a8a-4628-b193-aef6ffcbd3d0)");
unit.assert_eq16(16'h55B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #732 28a22016-111d-48fc-ab37-ae603269d5f4)");
unit.assert_eq16(16'h597A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #732 289c03be-6838-430a-885c-eb60ff0005e2)");
unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 c409b718-d5a1-49fc-b90e-d686b854c56e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 60ea48da-3b2d-4241-bd01-8f6c224946bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 3ca3c2e8-cbfb-486c-9f05-02659551cc76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 bc1c484f-960f-4a69-a225-6d4f29d0ad51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 4a0d2c23-b50e-46df-9c26-6d4c43ddc6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 3bcae1ba-a083-44b4-8fd9-6e003e9b7adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 8dc751f6-0c8e-4fe7-9ab5-7a64a77a231d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h701A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h019B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h491A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'hAAF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #733 51dd764b-d300-447e-b43f-c6f3a17327a1)");
unit.assert_eq16(16'h701A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #733 59754bb6-243c-4259-9fdb-83e8e4c24b4e)");
unit.assert_eq16(16'h8B04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #733 4ab03b39-633d-4083-b9de-a12e198269b5)");
unit.assert_eq16(16'h491A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 3048c826-9bae-40f3-917f-4933a0d700ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 a5f6d4d4-fce9-4f12-901d-b038abad279f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 966b875b-1c98-4825-8679-c86457ca72e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 f03e8982-6113-4d8c-9de3-24cb6cacaa9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 30a71338-9d86-4373-be8a-1b713869717a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 397e68af-ac58-4357-95e6-0f8d15baaebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 99ff1eaa-ee0a-4370-ab8d-0065ede206df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAAA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'hBA32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #734 8f884a6b-b43e-48ab-9461-e50b4586ca91)");
unit.assert_eq16(16'hAAA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #734 874da412-5a6a-44e4-a2a8-6eb7c0b723ce)");
unit.assert_eq16(16'hB168, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #734 1fdada1b-5c38-4cd7-9b5a-f96354843aef)");
unit.assert_eq16(16'hFC80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 8b0b0d09-f8e2-41f6-8468-4ba1a6153c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 7332cd62-f86c-4b6b-b9e2-ac6c627193c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 c7129948-fcf4-4d4e-be8d-6ab35c65b913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 755f67cf-aa78-42f5-93e9-3338915df3bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 580d20a3-6bcc-4e90-bcdb-4a0ccde3c0ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 fc5b745f-288b-4635-8014-e0b26877d98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 061bdefb-81b4-497e-b13a-5c8867762c24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h262C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF066;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4028;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h9CAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #735 da7367d6-249d-4694-b49c-6681f545bf31)");
unit.assert_eq16(16'h262C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #735 e56ce7ec-cc18-405b-9094-f99b496b4056)");
unit.assert_eq16(16'h27FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #735 f2bf6df6-9dce-4450-a726-d45880bf3f94)");
unit.assert_eq16(16'h4028, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 7511d913-13ce-46a4-8b7f-7a11a79be9f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 55a32752-3e47-49b9-b5f9-c1a819ba6908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 6641d096-55de-495d-8343-305c739d2bc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 1e749cda-38fb-4ca3-9d5c-5f9b3920b891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 812b271e-d928-46e6-8a92-1d584482a033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 1f8d7f66-2e8a-453f-8dd1-2faf1d052d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 0972ec45-6896-46a3-a187-489613fc0735)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE789;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC460;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'hE789, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #736 bf0a943c-4e83-4b2f-b633-a97964007338)");
unit.assert_eq16(16'h4A23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #736 e513b40c-7675-4dd3-8b48-d19d36d4dbcb)");
unit.assert_eq16(16'h2A2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #736 d16925f9-ac0b-49d3-8cce-d08f3378cb5d)");
unit.assert_eq16(16'h1F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 bfe7cd2d-4e2e-47d8-8766-6b77564fff56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 b30a6a81-f4e4-4b00-a170-3256e610b77e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 a87d1556-e87e-4398-837b-b07e549ae492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 9143c6af-67e2-4a2d-b718-5e44617d8d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 970fbab0-f66a-4b1b-b8c2-4899460da2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 13faa5d7-1291-4054-a6c3-205df4e868c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 d5fe4401-6b52-464f-ab11-715e92b1335e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA0DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h355C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7022;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'hA0DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #737 98a49c77-a8c5-47fe-968b-ecb5f5e0f289)");
unit.assert_eq16(16'h355C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #737 b2b2d49d-e206-48b7-bd0e-80d502d71046)");
unit.assert_eq16(16'h4930, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #737 1d703f46-8e8c-48cc-8574-767604f5cd8f)");
unit.assert_eq16(16'h7022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 0144d66c-a739-4dfa-87a5-a086d8b69479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 7ea702b9-761b-4ab3-a1ad-3029adf77358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 73a2a7e1-daf0-4683-9843-5b50c74fedd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 19eef3e9-151d-4e04-a4c3-8ec521648497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 20a4c7d5-2480-44fd-8d44-86362e78b56e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 7a8dc138-90b2-4620-97f5-1ed04320004f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 3b02d630-eb7c-42ca-a57c-525ad10db1d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB3CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'hDB51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #738 420b4b8f-e284-4227-a141-85bdd04dd5da)");
unit.assert_eq16(16'hDB79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #738 e99043f3-fe1b-4dc1-9a65-f17495449977)");
unit.assert_eq16(16'h3DC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #738 405ab2c2-34e0-473d-814c-d77b041da4e7)");
unit.assert_eq16(16'hCB3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 406a8e61-204f-453b-9b11-aebd9df801e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 d31f71f2-9b13-405f-9534-cf3e8384a775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 23a1d23c-0eb3-4fb8-83c2-5debd1fe0762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 ead68df1-b02d-4be7-8b65-d0f702dfcd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 a118f8a0-d79b-4fdc-a284-a9bd04995211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 735420fc-7f07-424c-a3b7-097c6dd650f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 641e8f67-1755-44e3-98a7-908324887bbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF6C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'hFA0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #739 522d253e-6187-4db9-8aa7-913436c8779f)");
unit.assert_eq16(16'hEBF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #739 0d13ef6b-fff2-4823-8132-dc68737f3dc8)");
unit.assert_eq16(16'h0788, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #739 81843dd5-7ff6-4941-b936-6c46a13d1b99)");
unit.assert_eq16(16'hF6C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 8761a365-34d1-40fb-bb11-b618557e820b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 05e4c33b-4602-449a-a198-539ad98a4362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 511416a8-9032-4132-b633-b2c75439e4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 669f41a5-8b52-4f5d-a7ef-06efb3e249e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 ae1c61b2-4edd-42ca-bdae-89f3f1e626a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 233ebb62-f3b5-4741-8756-68ea6ebb4bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 d76221d3-e22b-45a8-92f5-3bebd8c62db4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4763;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h89B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3413;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h4763, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #740 2c26aaaa-a6ef-4ccb-b851-84b823b9e953)");
unit.assert_eq16(16'h89B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #740 adf0147e-c52b-453a-984b-4073f38bef4e)");
unit.assert_eq16(16'h11DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #740 86b86ddd-d19a-4158-adcf-d15432151b5b)");
unit.assert_eq16(16'hFC8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 0c52f353-e9c5-4557-9b58-d2267f57ca1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 d4f8b016-c952-4587-ac2f-48e4d212d46b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 a1eaa480-81f9-4c37-b94c-1fd9e95c76cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 0f9301b0-987f-414a-b260-70d56b856841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 ea1d294e-eb40-474d-928c-3414f28059d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 9bac004f-71c9-4ae2-9324-b4362c665c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 b2100a44-eefe-4170-a443-69f5bc7aa5ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7FF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h406C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB926;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h7FF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #741 62d6a426-bbd2-4d40-a9d9-1fdf2b4667fd)");
unit.assert_eq16(16'h406C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #741 2556b6b3-327e-4a50-8919-f05ffa40ce76)");
unit.assert_eq16(16'h6A8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #741 983d791b-4e63-4a7c-9495-1e84e05ddde0)");
unit.assert_eq16(16'hB926, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 d238385c-d9a3-4485-b0c6-839ad7292047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 1aeacbaf-3bb9-494e-8d65-5d0104c6b79b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 8b989d51-d78d-417f-8a1b-af783815ff34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 fcde22ac-8152-4ace-80cf-4588b1afb835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 6c020903-6c9f-40ae-9766-7e1a3d218814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 2ae2b417-742d-4fae-a746-8bfbb7ad7219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 3cc56ccc-7fed-40a4-8ab3-0e9bf828de8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4438;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h4438, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #742 c30730c0-2368-4096-82e8-18273c223c2e)");
unit.assert_eq16(16'hEBAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #742 24b87dca-b81d-4889-aff9-64cabb7899c0)");
unit.assert_eq16(16'hF374, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #742 98eba64b-73dc-410c-9f6c-817fce981448)");
unit.assert_eq16(16'h89FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 2e3f4a89-2c38-40a3-b518-0f4108af0fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 1895c941-aaa7-43a3-bd58-d5914d137b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 20f2ab6a-2251-4c41-905d-822ac2c3096c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 1ff8ddb2-8f2a-4486-a33f-ed3c16e1f0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 e8a37d08-d55e-451d-bc06-46e7cdb368dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 40f0cd78-670e-44b7-89f0-752039bee757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 f5c5e539-6fa0-4cbe-b3aa-014ee7111c52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8EA7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h00D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #743 5df54bdb-f7e6-47f2-a3f6-b87b38e0a85c)");
unit.assert_eq16(16'h8EA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #743 f09d922d-c4ac-4c67-86a6-d64178774da8)");
unit.assert_eq16(16'h98CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #743 b0940958-569e-44f3-9f4c-6a1fab631a1e)");
unit.assert_eq16(16'h4D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 c869d92f-469c-4648-aeed-1e34afc81c9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 fb0e8f91-d16f-46ea-92fd-d4fbd5208fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 695a793f-31aa-4651-a7e2-4cfb0638fb80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 49b9729b-48d8-4171-830c-727a4ddd18c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 d501f715-cd9e-48d2-acd5-bf1850fa8319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 57edb464-b204-491a-b508-4e65a727c300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 eac42dd5-e5e9-4e6b-9ba3-c337c72a4bc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5C9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h83BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h38FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h5C9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #744 c7563f7e-6aa2-40de-91f2-6fb19621b715)");
unit.assert_eq16(16'h83BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #744 2db5cdb4-6702-4971-9045-922f00fa807d)");
unit.assert_eq16(16'h83D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #744 217c925c-50d1-42d6-b3e6-34a0fbffedd9)");
unit.assert_eq16(16'h1FF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 2e953fee-1b1e-446b-934a-4af7894b1f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 3444e530-4096-40cc-8efe-052e60fee20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 5424d1f3-502e-4d33-b939-e8ed3d68b934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 20300586-4860-461c-aeec-76bfab13869d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 20137cd2-e16f-4daa-bda8-04e7dbada7c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 0f897f13-abd9-4c27-9aa2-9da23ea6e3d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 df1329ba-a01c-4566-bd9f-38f2819a9dd5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4734;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE683;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h4734, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #745 960fd2f4-055a-4199-a330-697e4748db4e)");
unit.assert_eq16(16'h49D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #745 a2a9da94-832b-4888-a3b6-bd9a6edda6c6)");
unit.assert_eq16(16'hD73F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #745 bcfdab65-8f53-4dbd-8679-c387b3754684)");
unit.assert_eq16(16'h3AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 3363c565-6a85-43b1-a2fe-bdfcf9411b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 5eb6f52f-4a1b-4359-af46-023547a54505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 b2f38dd7-2fcb-45cb-b53f-5693d77397c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 0319c599-8c39-49ec-9821-a97af28ad624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 737a8439-93c0-47e4-b700-c37269622dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 facf5ca0-8ac5-40cc-886b-e3771798169b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 651447c4-cf00-4833-97ca-a49473ed48ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA65A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD7AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'hA65A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #746 172d9af9-c30d-4485-bc0d-743bebe63a6e)");
unit.assert_eq16(16'hA7E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #746 b2c032ae-f457-4bf5-addf-7e78b8c419bc)");
unit.assert_eq16(16'h9819, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #746 0318ac62-2c40-4963-a3c1-ff575a5af735)");
unit.assert_eq16(16'hE4D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 c0d15b29-6b09-41a2-bb51-2123906783bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 bcfd1375-8bd6-47ed-86ca-2c4b90822977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 b8a1fc22-e356-4af2-afa2-8d56ce90fc8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 d6777b02-8ec2-4ff0-ba81-9757607e1959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 aaf9606a-f039-44a1-848c-f1ed13f3f63e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 814bcf43-9c2e-4acc-b26b-d486974cec3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 ab9b7b8c-0c46-42a6-86ef-96fa8dd36185)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h729C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBCA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h40D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #747 0ea576c7-672b-4e64-ac95-fcdcd6a3fc5e)");
unit.assert_eq16(16'h729C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #747 a4e076ac-c62e-4bba-b3ba-320a639f9054)");
unit.assert_eq16(16'h092F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #747 e01b717a-3905-4b31-b5b7-96ba08d097c8)");
unit.assert_eq16(16'hBCA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 fa29d7f0-4d36-4435-8184-7e31c31083be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 87547c40-6921-441d-9ab6-c61a47f26e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 09543b9e-ac66-4156-a163-0b51f21f2033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 3dfb2dae-8993-4eeb-a64e-fd56f361d0d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 ee60ff15-b980-4a87-92a1-b92ad685b727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 0c160449-1c73-4748-a718-c6a8dd860357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 69676229-0d70-48d9-95c1-9cb5e32a2754)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6CF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9058;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5503;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h6CF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #748 10ac38c8-4d8c-46f1-8238-fed127fc9246)");
unit.assert_eq16(16'h9058, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #748 0b43e0d5-63e5-4635-84de-64436e131506)");
unit.assert_eq16(16'h0D50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #748 4c7c184e-4a70-4fe3-a69b-871d91a7ca8f)");
unit.assert_eq16(16'h9FA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 3b1212f1-a9d7-4133-bdb7-b8c2ab5804e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 f33292bf-ee5a-46dd-8819-d16b84615b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 b0121a05-3860-4e5d-bb2e-3f2b1d20f119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 a81da16d-3283-4223-9984-8f95a5eca51a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 49b20c56-0ff9-46c7-850e-4af4c14e2bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 251693ff-4a59-4b8e-bda0-6ce8817b8a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 8ba59d81-71e4-4175-b9c8-ccdadd162a51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1CC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0484;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h74B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC411;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h1CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #749 2f0114fd-9581-4c09-ba60-c098a4e2f9f3)");
unit.assert_eq16(16'h0484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #749 368ae535-5a8f-4118-b7a0-6eba07571910)");
unit.assert_eq16(16'h2883, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #749 ea8ab130-c473-4a1a-b71e-148d5d0eb36c)");
unit.assert_eq16(16'hC411, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 601e8d98-b8c3-470e-aa1c-6e7449469652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 0a1df101-7bea-4c0d-8da4-6fd32f631a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 cd8acc8a-fe42-4734-b9c5-981849ddac59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 325b9024-4d47-42d9-b89f-e855b55a6871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 303b2392-cf6a-4455-b3ed-41e24fb56c0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 26dca8c9-6fa8-4f91-8cf6-deb2b1560bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 79d0872a-689b-4502-81e6-151101de02d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7A05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF7CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h7DE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #750 e852b42b-c769-4844-ad94-640cd53de209)");
unit.assert_eq16(16'h7A05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #750 b8ea1b9b-5cdc-4c1f-a51c-f2d06d98fb1e)");
unit.assert_eq16(16'h82BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #750 b32e5e1d-f280-4aff-8c8c-12b26445a06e)");
unit.assert_eq16(16'h02C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 c0c90c95-4f94-4286-9f4d-a93f45c2dfa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 18e65ad9-3c74-4374-a277-31583058e2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 e8f02694-7d25-47c7-b6aa-a9a29a5402d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 64bd612d-204e-48ec-b8cb-ca117c1e32d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 dd7e8bc4-545b-4b00-84a0-ea3e30d91a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 3467a909-7a58-449e-a8b7-cd8ed7f94c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 994a47a5-4323-47c3-9e25-1da19e3c0ad6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4150;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB081;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDFCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h4150, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #751 de4d2e28-2886-49c8-9fd8-57f861de942b)");
unit.assert_eq16(16'hB081, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #751 362977d3-2bd4-4eda-8829-2c8e8c27110f)");
unit.assert_eq16(16'hCE9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #751 93fb24e7-2485-411f-bb70-a5be0fcb37a2)");
unit.assert_eq16(16'hDFCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 d7436a36-4d7a-4e24-8ff9-a11dd3a91344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 6ee83a74-13c4-40bf-b7da-56add3fbd592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 98015812-9db9-4233-b870-30e3241f5324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 8a0d4704-38f3-456b-9ec8-a8a0bb2be8f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 d53f5e57-cb90-4433-a5f7-ae5b13b0e268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 4e57f02b-25c9-4969-9fe6-5e72e4d4111c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 9d4c1299-604f-4d27-882c-edb5ebb26b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4347;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h906A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h3D61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #752 c75d8070-dc28-4e4d-8f38-08600d586c3b)");
unit.assert_eq16(16'h4347, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #752 e5e4e9ee-f8df-4f3b-aa03-2efcb5e86c67)");
unit.assert_eq16(16'h046C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #752 0f5ee25e-2c45-42a3-b08f-e8c20ee452c4)");
unit.assert_eq16(16'h906A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 86890ff2-6bf6-4d24-bfa0-5e37770e1f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 b87be85e-8140-4e9b-b215-24a6ba989c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 3739e73c-a17d-48d5-86da-265df943f151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 0485a69b-ad18-4e33-9b7c-bfc617fde9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 35145151-0676-4a4a-b53d-3c5ad8ac63bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 de5e0d17-3feb-4409-a21a-81c8f0160d0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 3279ae8b-5122-40c6-9749-bd5d0391b6e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4CE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h12E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'hAE49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #753 12e0e87a-db4b-438f-82c7-6b837bb3981b)");
unit.assert_eq16(16'h4CE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #753 120d7350-50de-44cb-8c08-75f870d814f6)");
unit.assert_eq16(16'h1CE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #753 82242a69-105d-4b94-88da-53172fea97a1)");
unit.assert_eq16(16'h53B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 998ba173-d633-4b45-88f5-75e7609971dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 3291a177-779b-4eba-9fa6-e69aa4437288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 3cc1ae24-9925-4497-bdfa-9dc505557b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 3b6e274d-ea94-4ec0-bbc8-687332c6b1b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 580a81a0-c080-49e1-804c-e7cb845dc0c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 a1d37302-1331-4ce7-ac46-2139def5f274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 56351b1a-bc73-4deb-95f9-1c6811095d48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB4EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA24;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB525;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC85C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'hB4EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #754 a51d45af-5595-4f91-961c-148bcbcca7bb)");
unit.assert_eq16(16'hEA24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #754 81633099-8380-484d-8d1b-71466f730cc8)");
unit.assert_eq16(16'hD45E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #754 2d7edf10-d519-43c7-ae32-70cb0545318a)");
unit.assert_eq16(16'hC85C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 2253e3f5-746f-464d-86d6-4b7bc7463916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 d601291f-425c-4530-95d8-84fbc40737d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 18c848a1-b2ce-4ff3-81dd-ee780b498c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 db68b3df-fa7a-4be5-9ee5-f520679a9093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 5a099d53-3cf9-4aae-80d3-5b7758398ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 7d8b4e33-2524-4a31-9697-8627fb3cdf81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 0454ad1f-09ad-40a2-bccf-5125a8b89e4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'hEC73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #755 e3343fc5-91ea-4bbb-8427-cb7b796d0b3e)");
unit.assert_eq16(16'h07A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #755 8817e9a3-86cb-48ed-b3a9-483a7d97d830)");
unit.assert_eq16(16'h1E4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #755 42477c68-9e84-4a87-b5f0-970cf660e690)");
unit.assert_eq16(16'hE338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 f78e2103-c5ff-46c9-9769-89121d3f881a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 f20c66bf-ebd5-474e-8c48-d6a68e14ef4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 c0a0f0e3-cbde-4fa3-8951-c0b219c26cf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 b677d407-8827-4f25-be02-8013eed383c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 36414ec3-6499-40cf-9fbf-361f6f347977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 dca04800-81a1-435f-a3cb-75f960dd14d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 ac547ffb-f50c-4b3c-a633-3b0a6a49325e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8596;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4FB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9E09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h8596, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #756 b4e7204e-5a97-41d9-a22e-abce1e77bfc1)");
unit.assert_eq16(16'h4FB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #756 e8c9709c-db29-4af0-b02d-9b2857148ef4)");
unit.assert_eq16(16'hEFE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #756 17d885b4-027f-4738-9b3e-4ab6314ab267)");
unit.assert_eq16(16'h7A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 1628ae3c-8686-4734-a25f-8b0115f166cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 2ee4eb73-5e28-4e71-9689-d680c23c819e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 ee8c94fb-5fb3-42c6-9ca7-8587669ec287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 688b3de0-6786-423d-9102-924936057ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 1c6c9ad8-5338-47a2-8d5a-7b66311e57f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 36156e8e-1e21-489f-941e-db7ed42946c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 ff25af65-13e7-4a2a-a0b3-238f5aa53f9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE85A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h727A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0334;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'hE85A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #757 57ac0373-9d09-48f8-bf26-4b6f7c47aeda)");
unit.assert_eq16(16'h727A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #757 28a22217-4fdc-49f3-8b71-8ec987ca25bf)");
unit.assert_eq16(16'hE3E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #757 a96b2867-a6b3-4369-bb9b-67cb3133fa08)");
unit.assert_eq16(16'h0334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 d29087b6-c4a7-49f4-b594-8e36d2e689c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 aa6040f1-84de-4ed7-bde2-1db688818ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 2848fc61-445c-459c-9fd6-fdad5b4228cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 c04d2dae-7485-4967-899f-b7613e47251c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 1a186c61-5871-471f-941a-c0c0c331c8e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 382deea6-72c9-41dc-b5b6-c51033bcf5fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 5ecc57bc-70b1-4715-a1ec-7184f029f246)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h20D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4AB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h20D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #758 21618fbb-56e3-488a-ad8e-15acec2a471f)");
unit.assert_eq16(16'h20E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #758 8509cff3-f481-49c1-aefe-8081993b906f)");
unit.assert_eq16(16'hD0EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #758 73c21dad-8fcd-4cc2-a414-cef44c90bccb)");
unit.assert_eq16(16'h4AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 eec6e806-bda5-4495-99c8-17cd68579ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 6b9b03f7-203f-43fd-b3a4-114ae9c1db80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 40e570ba-e09d-446a-b60b-804446734b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 7af8eb5a-a58a-4342-b5a1-52eb8f2f414b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 a418f08b-8d33-4695-8694-8de4b3ad5595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 01668f21-3991-455f-9269-5808543a991d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 c7c51ab4-604b-4696-a550-b32fca725ac7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h170C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h7C44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #759 ea169867-829c-4712-b6f8-a88aa6852d2c)");
unit.assert_eq16(16'h6C3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #759 f39e26d8-d43a-48cd-9e16-2f90ae4aa9fe)");
unit.assert_eq16(16'hA28F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #759 baf1bad0-1484-4e90-9f34-56398d6b78e7)");
unit.assert_eq16(16'h170C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 7048e031-305e-4b40-b822-fa9fe7fd9ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 52ac5ccd-02d6-4b82-bc30-ff62503e3014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 21a176d2-da9b-466f-885f-32e795efa431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 09dbc047-225c-414a-8d91-fcd3dc201092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 6e40f9be-5e33-4bc7-896e-ce36041c1110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 2b4c475d-fce7-429f-b5e2-a765a9613f2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 8fef9a16-dfc8-48b0-896c-98f540e5d9b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h568F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8709;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'h3B47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #760 71a886c6-ae86-4232-99c4-0f19d70a0fa3)");
unit.assert_eq16(16'hBC4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #760 9e45d7c5-cf6b-4000-828a-48552f3d8527)");
unit.assert_eq16(16'hA425, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #760 ac8af99b-0dad-46e6-9804-4642ad41a026)");
unit.assert_eq16(16'h8709, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 640ddc6d-d60b-4b52-8de4-4d112a6a7a9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 00b74cbe-97c7-4fbc-8567-ad7c14f527b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 316cc85f-d337-4b19-8d80-b5826e4a8e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 03514f93-06da-4da7-886b-b6535f21352f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 152f6e8d-f52a-47d8-ad83-c80af81031d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 a11f3b99-b10b-43e1-96f5-aacb2a6e4bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 6e991307-b3b4-4c9f-8df5-958b9f7aa589)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h005A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4729;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5211;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h77DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h005A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #761 d80e83f8-12f7-4261-ac0a-49cf0e2602d1)");
unit.assert_eq16(16'h4729, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #761 ee6b9dea-689b-4a09-b9fc-783294ba87a4)");
unit.assert_eq16(16'h27CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #761 7dc99949-20e3-4f93-87ce-a71bc17d1a71)");
unit.assert_eq16(16'h77DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 3d859991-776c-4b4d-8153-682bc883dacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 68e95b38-cd0f-4fed-8cdf-df001e7fe2cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 4abe47ce-089f-4df6-9fda-27d7bec4554e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 f66a0a7b-dad3-4fea-b6f0-7c7b4fe4ae1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 d2d5812b-5ec6-4fef-b307-ff434ad41d3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 bc9e61fb-5ced-427d-8f43-d6a7dc98c721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 b20f5e0e-dab6-4aa9-8a32-0534d57c570f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h525E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB77A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h525E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #762 33be6720-44ee-49ba-b658-9183fd96172a)");
unit.assert_eq16(16'hB77A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #762 ddae47c1-53f6-493c-b23d-9777f244459d)");
unit.assert_eq16(16'hCE68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #762 d49a3a85-aee6-44e7-aa30-eb87b07eb942)");
unit.assert_eq16(16'hE518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 e3f20ba0-1690-408b-9abf-7a96740e4ec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 93ac740f-d366-43a1-8b67-4a863b98fa0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 3be3bf93-e0b8-431f-9b31-e0760fbe9178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 7547d4ba-eb06-401a-923c-768c4883b794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 8507636c-52d3-4b42-a608-879b22b27cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 a81ed4a4-939a-43bf-b1bb-3b2d75bf8c64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 a7450c42-b43a-470a-89ba-64938465a42b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h412F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h89B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h93EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA368;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h412F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #763 0f67285e-66cb-44b6-ba8d-48f56efcd514)");
unit.assert_eq16(16'h89B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #763 765e4dff-898d-4997-a193-728c697e756e)");
unit.assert_eq16(16'h466A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #763 0562ba8a-f24a-426d-8ffc-683df6cf6803)");
unit.assert_eq16(16'hA368, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 534931c7-f80b-4691-8de4-ca4d751e8296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 edfbaba4-6004-43a6-90c2-55db2ed04b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 97311f47-3d64-4869-8c94-6e6461df7a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 49aa5665-9d4a-4a74-b525-52be2b3a3818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 ac6c612b-cd3e-4179-8bdf-23a577e16087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 67768d01-9f39-485e-a2f9-1c4d5b98512d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 97331ff4-df81-4738-9fd0-7f65adf7e5c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8888;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDEF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h8888, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #764 699d8c78-6d2c-460f-b423-136658f0a307)");
unit.assert_eq16(16'hDEF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #764 f50dd1da-1022-42a7-bd10-28959e1f3f97)");
unit.assert_eq16(16'hD9F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #764 737b83b1-d95c-447c-98ef-90df4a1e294f)");
unit.assert_eq16(16'h32BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 9d322b8c-d067-45e6-8576-fa78e673029a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 58f32516-223d-4e76-b355-40b6b247e418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 27638024-6ec2-47a0-9f6a-14f7c2f35de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 1eecec7f-7592-4902-bafe-2c906bb26bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 1ae790c1-ebd7-4f10-8d9f-413fcf1252a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 9956c5bf-dcf0-4256-90e6-4b82e4b080ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 5c68a7c5-bd3e-4c79-94fc-e4403f799d71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h86B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8563;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h86B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #765 10557e02-3f4b-405e-b6c2-f343f064b4c6)");
unit.assert_eq16(16'h8563, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #765 8e71b614-fec1-44ac-b9f0-c527b1656c8d)");
unit.assert_eq16(16'h6C59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #765 363ccc83-4a16-47c3-b5b1-f4f794839555)");
unit.assert_eq16(16'h26D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 00d7fefc-898e-4444-8a9e-51d1fb61bfc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 359f63d8-52fd-4b78-b884-b15bc71481ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 e49022ec-5b37-49f0-98a9-6c2fffa43617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 c1cf07cb-488d-40e7-a488-34ae754f9f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 f60063b7-efb6-4ff2-a230-ab4194f24081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 1873c534-24b9-4e61-bb75-13aed7e6f1f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 3ef3ab5c-7bd0-46b0-8d6f-991b4af585b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3A6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2339;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'hE5D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #766 b64420c3-6cc5-456b-89af-d0bccc6d017e)");
unit.assert_eq16(16'h3A6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #766 b0097b69-fb2e-491e-aef1-f8bc4a5066af)");
unit.assert_eq16(16'h8482, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #766 f8543c46-83b8-44f7-a7f2-34eeb568d79c)");
unit.assert_eq16(16'h20BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 4aa4ce18-ad0a-4975-b248-92c80bc5ec90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 0a2c904e-24a5-4524-9210-f34fbf198a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 ec1c1bf3-0aeb-48ef-b781-f01d547d1479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 98b5d7bd-f293-4576-a27e-1d92a9ba8737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 3b759b5c-76a2-4657-8d18-03a205dd7a1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 a0e13b0e-53a5-42bf-a857-50025c0b76ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 44456739-de63-4d17-9b44-3fac859dc20a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6186;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4B0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h6186, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #767 cd4e62a7-8dfd-47e2-af5b-6edf21b42e58)");
unit.assert_eq16(16'h4B0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #767 46a643bc-15e5-4f81-a744-fc7960ccc7e8)");
unit.assert_eq16(16'h0D5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #767 72af5d09-fbd0-4871-aee2-9d78f84cbb1e)");
unit.assert_eq16(16'h64FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 81a81b03-f446-4c29-b748-8bfe8856abf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 a1756c16-1f10-445a-a5fa-d8a562e6f773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 f4f03272-5ccb-4c61-a037-b1ecb76f903d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 99c49e27-b8f4-446d-8c3c-7a0e3d0d1039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 e5ba5820-cb27-4495-acd0-59710d1d0856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 6bc40eff-4988-416b-9e14-372a871c78c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 dd340c0f-ce48-4d94-974f-04985a39bdc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h86ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA61B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h86ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #768 5350beea-1734-4be6-a0a2-76d869191b45)");
unit.assert_eq16(16'hA61B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #768 f7687d35-a554-417a-82f4-d9066401672c)");
unit.assert_eq16(16'h7CB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #768 2e55b75d-6660-48a4-ba8e-2f4c6b3f7a32)");
unit.assert_eq16(16'h36E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 d0877aff-1169-4297-a437-86be46c4284f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 cefa2449-000d-492a-bb35-c2adaf4b77c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 a396e168-b4ea-493c-be20-f4d151c07617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 a61fa9a7-1c62-4f11-a3a8-67ca9c5e766e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 24cf68e9-e457-45e8-a9da-ad139f162fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 2139ac8c-039f-4090-8b4b-3138474bca0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 ef6544bb-b83e-4832-a029-61e84ada09bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h24F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB754;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h24F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #769 14051645-535b-4853-a1c3-ef7d07b3b6de)");
unit.assert_eq16(16'h9B40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #769 d44d7f47-fad0-4b91-a59a-762eb513d388)");
unit.assert_eq16(16'hB754, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #769 a1b1aa5c-25e1-437f-8b2f-d8014d4af35f)");
unit.assert_eq16(16'hC3FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 a0aeb1ff-af7f-47e8-a33c-9f494ee7906f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 3a7750bc-f35e-40ce-9674-912426023566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 4021d2d8-dc58-4cfd-947e-14d5620bafea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 05d4b8a4-bc44-4d21-bb80-eb9bc8e40042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 1773247a-c119-4a10-b2a2-03501172183a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 da46c3a0-2af3-4f3b-b1af-6e529dd4ca17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 0ea37b68-d0c9-46ab-9be2-139da6be63b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h354F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'hFFBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #770 9ea82b14-047e-45d7-ad34-dd23b1495f85)");
unit.assert_eq16(16'h354F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #770 c9bec72a-af5e-447c-a6df-cc8333bdb012)");
unit.assert_eq16(16'hBB22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #770 a80ab9d8-e908-4e63-8829-5711e2cd57f3)");
unit.assert_eq16(16'hD0AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 792dc57e-607c-457d-862a-639b9dd64461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 985fc714-b34d-4451-8d60-44098e8ed5ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 57ef1d86-e1f3-471b-97d6-6c2e7e6cdd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 060c9910-3e2e-4db4-baa6-28dbbb35b289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 617b3d18-8c2b-44fd-93ca-f618b56b4f80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 57df15ec-bcc6-4051-b662-75f3bc1c07d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 0e097a2d-e52f-453b-9d79-34bef10e5095)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h158D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h002A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h18BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h36E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h158D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #771 f6f8791d-0720-4172-8eec-ed9ec852ccb3)");
unit.assert_eq16(16'h002A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #771 2c8a9113-43a6-4aca-b440-fa28bcf6694e)");
unit.assert_eq16(16'h18BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #771 20f82610-1318-40fb-8223-d17cfef32169)");
unit.assert_eq16(16'hD453, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 e9bd4d26-74e0-4e2d-9053-80b22f1d73e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 dc9ea946-00ff-45e8-b30f-77b3a561fbe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 2674c17a-6a91-49f3-973f-2b45ed08ac5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 9730bf60-57cb-48b8-ab50-c1712bd2fc82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 af34f079-cad9-4a96-9fc8-159d57502cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 33ee8246-b83e-424e-9604-dc2a25345ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 13700002-5625-4c39-80de-d7f074e9908f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h24A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8292;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h24A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #772 36d66843-976c-4c12-8938-5bff329eeb17)");
unit.assert_eq16(16'h8292, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #772 bc3c3832-8ba4-4994-86a2-777c676261ab)");
unit.assert_eq16(16'hBB42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #772 5ef986a0-b55b-4849-b125-a9d422ebc6a2)");
unit.assert_eq16(16'h51D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 cdbaed32-6623-4add-8930-31ce42dba5b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 4c317606-d135-4e69-968f-b570f9bb61e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 fbff2726-68a8-489f-90ed-fc7c95d77b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 03e81d02-a7c9-486b-b181-313798a68de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 396d573b-f249-4cd1-85e3-508e5c85423e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 f4657a4d-d947-47d9-b863-36ecf6e30ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 9f63792c-d3c5-4db8-a755-3d734c350385)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA076;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2399;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAC1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'hA345, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #773 f87ad69f-2960-4251-ad8a-bafb3030fe48)");
unit.assert_eq16(16'hA076, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #773 936e7b2f-a876-4364-ae64-61b3b21c34d2)");
unit.assert_eq16(16'h2399, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #773 2d27768b-08f2-496a-9fef-d4c4a8861d0f)");
unit.assert_eq16(16'hE5CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 3ebf034b-8b3e-4407-9f6b-f3c3e0334cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 61f18051-ac3b-44d2-ae55-0e9d82ff1e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 4071def2-2c66-4c7a-9e41-1bb16ef3dbe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 ff723006-f41a-4aee-87d4-ef96e831c0ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 3d7e9a01-1518-4aa4-8665-1a532da3f67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 748e301a-f2c4-4f78-aeb5-211ed0293aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 b964ae1a-248e-4631-8128-f3c48342f85f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE861;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5D36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h99C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hECAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'hE861, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #774 352583ce-147d-41e3-9285-fb8271ed3589)");
unit.assert_eq16(16'h5D36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #774 324f618c-0fb7-4f31-88a6-003dcb1d2fae)");
unit.assert_eq16(16'h99C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #774 cd705956-fa23-455d-bdbb-f0a40d506c65)");
unit.assert_eq16(16'hE873, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 8ad50282-5afb-436f-b26b-9d1570ddea07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 312f1ea1-2c9f-443a-8762-c9f14132b270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 377c1e60-350d-4104-a559-000b17fbe198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 f253a787-4ab9-4d66-9563-6a6e71ce341e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 dd02abd9-39e5-4965-8d54-2a7396fe893a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 26658768-580c-45d9-beed-0f36d92757f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 298dec79-35b1-491b-8336-d85c18001616)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC686;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h56AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA9FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h80B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'hC686, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #775 06a250b1-cf31-48e5-8f45-9ccbaa86dd39)");
unit.assert_eq16(16'h56AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #775 e45015c8-23b3-4c4f-b42c-0e74e6c45a66)");
unit.assert_eq16(16'hA9FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #775 2be3d66c-946b-45f5-9b8b-6916385845c8)");
unit.assert_eq16(16'hE608, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 844e7821-2019-4404-9d62-91c299a60b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 6cd8e4bc-b39b-413e-9115-7512b742ced0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 fb495c43-1e36-4289-82b0-cbb5743e5fbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 1d712b7c-57d1-478b-b3f7-53cbf1895398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 fac238d2-7679-4b5d-b01f-50820f2e07e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 3a94d8bd-6559-4aa5-8bc4-60afcd64b9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 276c4ff6-99c8-4534-8a18-2842c888932c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h87B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h188F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'hD3BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #776 77b18cff-43e3-4505-9992-65eab289143f)");
unit.assert_eq16(16'h87B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #776 5cfbd3c0-dacf-42e4-9054-858212ef42b3)");
unit.assert_eq16(16'h188F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #776 0b35ac14-f70a-4649-b386-64c185d32db0)");
unit.assert_eq16(16'h7A59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 dfb33c21-731f-4a68-a740-9b4298733b85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 b55fd809-00bc-4724-825b-9abfe50b3f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 a7e4eef8-4a22-4298-ac81-f06f32b66551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 9a9600b7-f4fb-4e3d-bf38-78c63f655d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 ca237543-c90c-4c12-ac7d-f48c0cb5a1ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 a9ab9940-df8d-446e-a274-1c13cc5868cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 fc3bca64-b153-4975-9107-086a0aee0916)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4D34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA746;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3784;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h113B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h4D34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #777 d910a17e-0720-4d1e-9ec8-2a5965db2b02)");
unit.assert_eq16(16'hA746, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #777 d0442165-89b5-43d4-a570-a035dbd43167)");
unit.assert_eq16(16'h3784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #777 67d16125-2380-43d6-8912-b39bb932e15c)");
unit.assert_eq16(16'h3DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 07dd4591-3bcf-4497-ac4b-6e4e14d447f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 b4aff55e-5e71-4c99-bc97-b99721b44b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 0a4ccd1b-9684-4dec-b6ac-11ad2003a8b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 5d2cbf16-aa2d-458a-bbbe-1c8fac329e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 f843d57b-ce5b-4d6a-b8ec-61857448cf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 b2d28806-0c59-4448-ab84-a539c26cb843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 4d6eae8b-142b-4aa3-943d-d524efdbb9eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7D71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'hD6CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #778 7f4680c4-e2c7-496f-a667-cce0c9d9568b)");
unit.assert_eq16(16'h51A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #778 d2312d3f-21e9-434c-99e0-1c4bedf745b5)");
unit.assert_eq16(16'h7D71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #778 68cead91-9d17-4ce8-8bd5-0aade5a8d008)");
unit.assert_eq16(16'h742E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 9ad7efd0-6754-4001-a61e-aa6cb3c00634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 a36b7911-cf2d-48e2-864f-e744fe0e8835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 02cacacf-9933-4353-aa13-353ae3cf46c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 2d91946b-a00b-44f1-8ac4-15261dda3d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 ca0ba89f-7efb-460d-bedd-e34e06ce3175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 25a215fd-5844-4178-bf13-7449f8891fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 1ab025e4-76f0-4c26-9088-ab6b33f14561)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCD39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3766;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4F4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h0D12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #779 e3fba130-710e-4480-bdfb-e6f01eefebeb)");
unit.assert_eq16(16'hCD39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #779 3728a209-b72c-400a-9a7f-b097e0f22839)");
unit.assert_eq16(16'h3766, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #779 601fb355-b4c9-4e37-a35a-600e88b4ebbb)");
unit.assert_eq16(16'h9D6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 48f74dc9-af01-4ea0-836e-8b570b01ce98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 db391032-b5d0-45a4-9f4c-bc5896f0fe28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 504d8128-8347-40b5-a201-c8ff691ed065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 a0445ffe-7253-4cb7-ad29-21b0b511afa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 3cb92b11-84bd-46af-a9bd-5086b0706e44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 48a40dea-97c0-4349-ad1e-2726cb08e8fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 62d4b069-ec9c-48cb-b103-ab52340878f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC287;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF57E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h75F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h73A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #780 93988e46-be42-43cf-854e-9764de948c60)");
unit.assert_eq16(16'hC287, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #780 5b8a8c94-9b32-4549-a91e-745da2f696ac)");
unit.assert_eq16(16'hF57E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #780 e5e0266b-c99d-4864-8f07-1b6f8fcf6e28)");
unit.assert_eq16(16'h2ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 89669afd-7e72-4c29-9838-768e698b3d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 6a0780e2-9685-4874-a41c-bac60c5dd6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 cc8f00b9-7e33-47c0-a0a2-eb1be33c5cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 84e6f2b6-6651-4687-9497-ecaf4aefcfb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 04c4302d-ccdf-4ff6-920e-570166feb3d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 8d0a9a3c-d43d-48c8-82f8-f614ee6cfd7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 a104be39-c688-49c4-b6ee-9b6ea0515007)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB4D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h17F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'hB4D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #781 34481796-a752-4207-9ddf-986f81c643c6)");
unit.assert_eq16(16'h17F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #781 457008a6-47e7-498f-8768-45b77aaa6950)");
unit.assert_eq16(16'h81EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #781 861857b3-be95-460f-8d50-f96a7684d2d1)");
unit.assert_eq16(16'h0B32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 4ad4c50a-00a9-4d4f-af3a-ded84ba55a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 115ccfac-38a3-4033-9a4d-328aa2100120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 ef47f21a-d67f-4bc1-85b6-83977753a4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 abed10b9-d5e6-4c78-9f56-56ca14a16e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 b7537dd8-99bc-4738-80b0-db405792bc14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 bd84cbfc-3f12-473d-be32-0a528de1174d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 29b560e3-d84f-48de-878a-0522eb11ea4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAFA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h64F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #782 9d3babbc-40de-4fa7-b60a-2c7d8f7be760)");
unit.assert_eq16(16'hBB56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #782 daf6f47c-67f6-48ee-ba28-7908581e9cdb)");
unit.assert_eq16(16'hAFA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #782 3ddbaa26-80f4-421b-a76d-efca929b0607)");
unit.assert_eq16(16'hA62C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 888a9308-7555-41cc-b0c3-09cae747b5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 1a1a7ca3-681c-4a9d-8f86-5f2c0a6891ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 4af3a5f8-8dc4-4a9e-910d-1fff221607c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 27960dc4-36fa-427f-b2f2-a6a5fde5d44a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 02c74897-9960-4e35-bb8c-9e15e409c11e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 91f1a855-7c55-4bf0-982d-74241ead9cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 b1c9fe5c-d1e9-4e91-8cc8-a60c4eaad05f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC620;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB10F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'hC620, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #783 78c6dc44-d294-4156-bc0c-ae3f2e2ff618)");
unit.assert_eq16(16'h3C6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #783 593ef10f-d2e0-4c13-a141-03af9dd79571)");
unit.assert_eq16(16'hB764, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #783 bb3a0ffe-6f01-40fc-aa87-4f40d8e0c3a0)");
unit.assert_eq16(16'h3F0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 8b0bdd20-c05a-48fd-baee-49f5b7254099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 a62d171b-2539-40eb-ad55-abcaef8ae361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 892bf50a-8f90-4132-b1e1-bb71c350b93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 e83ec6e0-e2d6-4185-8140-ad58ac20dc45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 54febb10-02db-4533-8b97-200f958b34ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 d300d05a-cbcf-4479-adda-4901762720bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 b117ec0b-8a8c-4925-b59b-f12a2e3b1f51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h53F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2049;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h4E38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #784 d058cd37-f7c0-47a2-970e-24bfefdee284)");
unit.assert_eq16(16'hACE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #784 0e44443e-562d-4a8b-a3de-1b7c975a8ccf)");
unit.assert_eq16(16'h53F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #784 ee24970c-683b-45a7-a78c-425e446874a6)");
unit.assert_eq16(16'h7F8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 f372c458-38b2-4bd2-9008-197d87011d7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 7abe3d8f-28cf-4071-bf7f-bc004db15e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 90b8de45-e288-473c-95d0-d4196bf5f349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 a7f197fd-30e4-4dea-b87b-da23a5a2c6bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 9f51d08e-4216-43d5-a64c-cd66058874b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 5fb43f9b-f8a1-4303-ac8d-e1c544fa08f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 a77fc9e0-d8e8-4eb2-8416-f3cbb9e1c6e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h59E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF01A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFAF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h59E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #785 5505b8cf-b0d9-45be-9e4e-ae0e76959a6c)");
unit.assert_eq16(16'hF01A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #785 b07a7add-fce7-47b9-b367-f9872a1d21eb)");
unit.assert_eq16(16'hFAF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #785 8259c4ae-b4f4-47fb-926e-10727cf960a2)");
unit.assert_eq16(16'hD924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 df172736-c76f-459d-9b09-2339f09a2470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 21645331-1531-4bc4-95f6-f3949db2c339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 59ed048c-1576-486f-8440-e2778b557f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 a468b445-f4f0-4e97-a2f9-6a956a17fe2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 7b47a0e6-a2d3-4520-9ef0-1bb8650f2720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 2f723799-f958-4336-bc36-18043b937289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 971a2d20-93ac-49f5-a7ef-35bad25946be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC546;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'hDC9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #786 c7eb136f-9cc5-4172-b02f-c02af5db9917)");
unit.assert_eq16(16'hC546, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #786 bda43dd1-f972-4984-bd09-0bee1534781a)");
unit.assert_eq16(16'hDA72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #786 115a08bf-0970-4752-9d92-8db36b83702a)");
unit.assert_eq16(16'h083A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 ac4c5832-8177-4433-8b93-60080958a52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 37e17a3e-ffc3-4505-9a5d-5545ae43b2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 20827c66-c7c1-4b97-90ae-b2ea014f09ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 f725ff6f-aed4-427c-92b1-88e24335966d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 a9ad2e2f-c9bf-465d-b742-c6fdcb6bcc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 570cd032-7d90-4fa7-a807-73f9abb3755b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 e9316f86-8d74-45ac-83b4-4cd35c8f97ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1B22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h663F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6E3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD46A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h1B22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #787 be04db36-95d6-4d62-8ce8-6c180124637b)");
unit.assert_eq16(16'h663F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #787 ac2315ca-de97-4914-b8c3-6240935a9895)");
unit.assert_eq16(16'h6E3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #787 5fcdd332-7acb-42e2-afa0-514875e7d182)");
unit.assert_eq16(16'hD81D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 3327f36f-67c4-4f76-b93f-a36dcbdc189c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 0f1fe34a-f318-438d-a22f-72288e28f1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 0d8dd5a5-accb-48f1-9d78-1404fe06b4c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 b7c2d59b-048d-4efb-ac78-c4a5eaf626f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 46f53243-9bed-49fa-a7bb-fda706f2a961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 174d6697-574c-484f-bad1-903499cd0b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 59c5ad3d-bb57-4b37-b420-1cdf80fbb7ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h55CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2621;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h55CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #788 56edf391-9bd1-4fd8-a46c-fffaa9885e63)");
unit.assert_eq16(16'h8A90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #788 9868f9de-fd56-445a-a089-5aad0a945bc1)");
unit.assert_eq16(16'h2621, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #788 99c9c61b-7672-408d-9498-0ec735425909)");
unit.assert_eq16(16'h52D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 7cf3b206-3be1-4637-847c-2a6aeda52021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 b2f4e684-0991-499d-9923-beae2ef77b62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 154b6192-8473-430a-a577-f6386964424d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 2c114e36-5f61-441f-ad10-1f591c2a6259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 0cb55479-5109-4578-afae-45f44c99364b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 0c12996b-8262-4b50-9b29-16d6ab3d9012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 a612c9dd-fbd2-4371-a3bc-75349c56a9db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC590;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4EC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hADCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h0CCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #789 d1f3b0ae-da92-479f-a76b-6176243a94d0)");
unit.assert_eq16(16'hC590, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #789 c8db0885-5e58-4bcd-a0e1-cb938998c090)");
unit.assert_eq16(16'h4EC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #789 bb9b6ddf-4414-45ef-ad32-61b1e1b15bee)");
unit.assert_eq16(16'h885C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 1afcf0da-867c-4285-bc63-8611a1874b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 757edc59-37e8-4abb-a7ca-49c7429a0c46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 591ce12f-ca2f-4b81-8216-ecc6ea276d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 c8a73599-da92-47c4-aefc-dca50ac830bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 ea2e930e-7c05-417a-8f17-f0fd09906bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 e297c534-23ef-4db0-9856-c252705962ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 6950ccad-038f-4ebf-9804-a85b762e3811)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB95E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6BF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'hB95E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #790 79ec6cb9-3211-47e7-8208-ac89fe8dcb2b)");
unit.assert_eq16(16'hEF31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #790 81a9f551-3eb8-4702-b314-80b23d829a64)");
unit.assert_eq16(16'h6BF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #790 9de9ac73-8b59-4abd-88f9-1701169b6190)");
unit.assert_eq16(16'h396F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 3b0d80c9-393c-41a1-804b-46bd2003a06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 d3f709ad-d5c4-471e-8e7d-018129ce4596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 ef365759-9d72-4fd0-b60c-e6dbe57324be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 a181ffc2-2683-4c9e-808c-98ac54aa11c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 ead94bf9-b9ff-4eda-b53a-9337d2006390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 9c922b1e-de39-4049-8437-5da9fc834480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 afe7e1d6-92d0-469a-8c71-2361079327a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4440;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1346;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h78B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h4440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #791 b761babf-f690-478b-969b-475d630d0ad4)");
unit.assert_eq16(16'h06F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #791 dbd6db2f-e68d-47e1-9cfc-ab3cbacf4159)");
unit.assert_eq16(16'h1346, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #791 c428ad92-9590-45dd-b3d6-44c4cde597bb)");
unit.assert_eq16(16'h0335, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 048cf1a2-1524-4699-9496-c406273c0132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 9082ebaf-b633-41b7-97f4-dfc442b67907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 4a4827c1-096a-48a2-a642-b86ba097a878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 7bf06f08-e396-4127-8a1f-911532e34c9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 ddde92c2-6d5d-4b25-8cfa-e99ac2cfca6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 f6daac4f-c73f-4809-a9bb-9e825095ed82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 1ac6b89c-65d0-4901-9d1e-153c54690da3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7374;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4932;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h7374, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #792 f482a2d6-0ed7-424c-8592-f159dd06fb66)");
unit.assert_eq16(16'hACED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #792 6d429f61-4f30-4141-b3e9-e412ca02f731)");
unit.assert_eq16(16'h2DAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #792 a5b3496d-96c8-40fa-8e7e-a06de202460d)");
unit.assert_eq16(16'hE6A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 59a84a82-1f98-452b-917a-21a7236497d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 fe17f2b5-c611-40fe-a297-3125aa75d99f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 13603e4e-335a-4eaf-ba5c-2c17a7e697e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 9b85980d-465d-4d46-81b2-92fea9d326ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 cc84627c-482f-40bf-b3e9-815e26deb055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 3afd75eb-269f-42d7-b4a4-1b8ef37efa29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 dac468a6-7cc0-4a98-b364-fbeb09ccc513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7576;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h239C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'hE3C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #793 5eca532e-4faf-40b6-8b61-cd1dd0e541d1)");
unit.assert_eq16(16'h7576, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #793 72ce29b0-cc8e-4aab-ac6d-ed69f535d304)");
unit.assert_eq16(16'h239C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #793 747033e8-3f0f-496a-add8-021fd32fb845)");
unit.assert_eq16(16'h0D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 b2a202e3-052e-49ac-a318-d87343a4c629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 b0025597-9067-4da5-bcd8-ff241e752665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 39c39fdf-96e7-495d-8973-9353add7db79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 07e455ca-44da-4e44-9b96-1b9c662d0857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 fd40e391-114d-4bba-932d-0c5583bb0c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 495e8c24-6f38-457a-9b77-1ba9045d7a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 0aa44055-6705-4333-98bb-4586ec203e8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF9EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3821;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2812;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'hF9EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #794 7d904ec1-5dff-4295-8415-5da155809f68)");
unit.assert_eq16(16'h3821, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #794 f9986e3e-3c0f-4b07-9ccf-117a637b5674)");
unit.assert_eq16(16'h2812, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #794 9c211c18-21df-4eb8-b492-b91923ba70c7)");
unit.assert_eq16(16'hDF5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 7542db6e-87fd-444e-8774-bb989b7e7b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 b5799ac8-bce0-44ff-a290-f419827e8d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 8dd8848d-7800-4fbb-b617-32343a5e40ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 4b7628dc-0f2c-462a-9b34-ce0a87e17efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 580c3cc8-f1f4-4698-937c-d7d401049e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 fb672b2a-ff7c-4d74-b6d0-efcd233ab8fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 6b23f9bb-eec5-4e9c-83b7-6c4d7a5b1ad4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h374A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA554;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1957;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h374A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #795 8bcd0c75-1c8c-4cce-a129-7546c989f707)");
unit.assert_eq16(16'hA554, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #795 3fb925ae-212c-4a82-a8c1-5c53cc38dd61)");
unit.assert_eq16(16'h3DF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #795 d956d3ca-34b5-4be1-93c7-87815c6ed65e)");
unit.assert_eq16(16'h30F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 0e2030df-7d61-41f1-8d3d-dad15ac84dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 32a08825-d8a3-4da6-a8c5-7d38b7643bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 d9b4a1ae-39a8-4378-b583-3fe8e798cb20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 00ca28f3-424f-4608-b452-75ce660a4108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 df9e95b7-a589-4fb4-8d45-2e14047822ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 386e8d78-9deb-4550-a4dc-5c4eec0f6c95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 9ae5a8c8-21c3-470c-8545-bcf61467d32a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC487;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC2EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'hC487, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #796 779d000b-a25d-4041-b296-2dcc401708d3)");
unit.assert_eq16(16'h3D91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #796 c3852cc0-28b6-4aae-951d-0fd9e10fc0b3)");
unit.assert_eq16(16'h0F7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #796 1849ab8b-7bcb-4a84-97de-5551dbd8e17b)");
unit.assert_eq16(16'h8ED0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 f602eb1c-f2a5-4eaf-937a-5c0af050199b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 9865462b-8ab9-4c78-9a2f-3401d64e13bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 f6f542ea-4907-47b8-a2d7-82d8c7201a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 02c53775-0985-4109-9268-86ded007c8c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 6f1a2c2f-5619-4734-ba62-e692cff9500e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 18382e05-a7c0-4c28-b426-59bf65de555e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 e2d74d4c-3037-4bc6-80df-550e5502efd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h259B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4FB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h259B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #797 3290c75c-d138-4717-af3e-2361646c36d8)");
unit.assert_eq16(16'h9A7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #797 4ce14031-34ff-43b0-97ef-dfdd6ee57b8b)");
unit.assert_eq16(16'h0E15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #797 ac3385bf-bd23-43ea-bf67-af5f9815cb2a)");
unit.assert_eq16(16'hB1C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 90a9d48a-a526-476b-898a-841ec85edbc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 cf91f88a-9d01-40d1-905e-a71c43886dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 f673127e-1da7-467b-b9bd-5a482b9b2fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 90d0ba21-c1b6-4a8e-b288-350f0bb543c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 92698a18-94fa-48b3-9b37-58cc8ba81417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 26e1d2a3-4811-4116-9f8d-78856eec8edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 de54e8de-6095-43c4-9b12-38afb829bf5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1605;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDAB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h9B72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #798 88e0d68c-84ec-44e3-9b36-bf2ea1a028dd)");
unit.assert_eq16(16'h1605, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #798 99e4e440-3e75-48ce-85b2-a1322fbb5b6e)");
unit.assert_eq16(16'h04E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #798 a723c928-b29d-4151-ac22-de87966fb909)");
unit.assert_eq16(16'h38FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 c09f0837-3abb-4e71-9fc8-1dc442fce34d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 12f365c5-6119-469b-9397-e784a36363fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 114ecf69-f87b-4b90-bda2-8eb4e9b5256f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 8f9fe29d-3961-41e6-86d2-d8cdc54f5511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 0c5f3ed4-ff1d-402e-b2e7-a6caa36d9cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 8e36f34b-cba5-47ae-9c4b-a83a8c314d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 a7c8c8f0-4e21-4a3c-98d8-37fdbc28ee6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h71F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFEDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h28D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h71F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #799 2643e6b1-6e78-4861-841d-c9704b09aa97)");
unit.assert_eq16(16'hFEDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #799 4297d4e8-a993-405f-b37d-7434c056fd5e)");
unit.assert_eq16(16'h28D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #799 db584e84-dd32-4076-827c-9b939141c68a)");
unit.assert_eq16(16'hE407, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 af13d46f-5497-4b88-9043-b8081cdc4ece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 b4c6f006-7525-4d29-89c2-8beb691b1f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 9221fc30-9fa9-424e-b268-422982841786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 481f7638-4967-44a7-9ac8-b3b657c6fd82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 64e5ff42-d65e-4ed8-83f6-5c441406976a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 292499eb-03f4-4db1-a0dd-ee3a54285a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 724c49f7-ed39-4998-8c9a-82e34b96accc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA545;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h38F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #800 93fff094-469d-4a9d-9679-5182283e3603)");
unit.assert_eq16(16'hA545, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #800 ce22419c-074f-45a1-903a-79369eecfd67)");
unit.assert_eq16(16'hAE19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #800 8f6dc60f-7729-4649-8a5b-45604c1003a9)");
unit.assert_eq16(16'hF2D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 f45af13b-3063-4b39-87fb-1eba70aab61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 db1bef60-132d-4aff-9f06-9aec23b516f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 d47b222c-73da-45ea-8b0c-6a651c52d195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 a77ffdae-13fa-4561-9105-dd0e7d84836e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 31befc16-7422-4175-b4d5-c80c5a31c82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 9c83d067-66ca-401a-b6d9-586aaf1c21be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 e5fb75da-1275-4739-bf97-e42d0f81455e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h470D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7859;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB919;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB326;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h470D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #801 2466411d-82f7-41be-a4a0-97ce52833581)");
unit.assert_eq16(16'h7859, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #801 59f17bb5-98a3-41f2-afff-872d5aec9757)");
unit.assert_eq16(16'hB919, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #801 216065cf-741e-4276-beb9-8041d4459d2c)");
unit.assert_eq16(16'h6D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 ceacccd9-d624-4759-8fcd-c7565d30f416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 462da75d-fbdb-4498-9ae3-e6210c0b08ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 04503dd2-69a5-43f7-b06f-6e68b4f3b43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 f83c27ff-a288-4395-b27d-551e3ea77305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 b79c5975-7b75-42d8-bcf0-49018da9ba9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 bd5d270d-1e3e-4fdb-aab9-c754a42d9ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 ed1d81b4-e59d-430b-9f57-bea0e48c9425)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h35CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'hFD79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #802 2d5f4095-b8ba-46a1-a1d7-c35acaee023f)");
unit.assert_eq16(16'h8D19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #802 49c885e8-ccb0-4c3b-adb6-347b9cc5fe15)");
unit.assert_eq16(16'h00E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #802 cefdbf16-a90b-42bd-8fc8-8cf3c3106a6d)");
unit.assert_eq16(16'h41D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 8804a1ce-9ec7-472f-b6db-6ed7fc70e860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 15bb45de-1879-4457-af76-62bf7128c00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 69bf1e2c-d904-4980-a78c-f3f0012b0a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 f25a341d-0f2d-40cf-834b-44873b58a9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 ce509c5f-5aa0-498e-abbd-6d380dac52a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 43992523-b8d4-4911-ab07-e17306aafe5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 60bad4ee-a2c4-42ff-b5cc-b397eebd17a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA09C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA907;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA116;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h2DA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #803 d34368c4-33f5-448b-acd0-c9a793c65ddc)");
unit.assert_eq16(16'hA09C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #803 4cf1e7a8-e62b-4653-8787-754e5a52d1f7)");
unit.assert_eq16(16'hA907, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #803 4cd8e26a-1995-4db1-a3bf-b54881d72101)");
unit.assert_eq16(16'h66A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 a3935bfa-6510-4345-9002-ca1d3373fbe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 5d04f8a5-9be1-4324-9c4e-67bffb6422fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 44af7ac1-9bcf-42e2-bf04-04903166b8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 e5040d57-1eec-4a01-a629-7be8ef1a2a7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 cfe0a9c7-6e61-4ee4-b554-5bd89d69a271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 5cdac496-577f-434c-aeb7-966c36194b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 0a59710f-42e1-4ff1-9c66-3bce7051188a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE7A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF147;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'hE7A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #804 55516dca-e2b6-4136-9e57-9c9496e71955)");
unit.assert_eq16(16'h3D43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #804 0acdf088-9fb9-4674-98b7-0a0580f5a901)");
unit.assert_eq16(16'h6C9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #804 151c4cda-db83-47fa-b8d9-5c856d5347e8)");
unit.assert_eq16(16'hD7F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 00a5660e-5b31-4174-b3f3-76fc1860a837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 f86d0895-60fa-41a5-8a5c-c040f01d6a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 7ab1702a-aa3c-4d06-a125-04da60c7eed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 d8acf55c-1c85-4005-a50d-e113f45a7f44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 a96d6e51-1676-4506-8a6f-7d5268c456d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 23e83a43-2457-49f2-bd92-f637b4de2c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 3b8c9bc1-cb1d-4838-8d02-d0e95aeb8169)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF693;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCA19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAEB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5752;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'hF693, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #805 2cafd183-0f33-4fb8-a5a5-49420a33b2d3)");
unit.assert_eq16(16'hCA19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #805 de8c80c4-36bc-42ae-8d53-8a551dbad9ae)");
unit.assert_eq16(16'hAEB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #805 8632b7a5-21d3-4258-b2b4-d436c142da34)");
unit.assert_eq16(16'hE3EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 d60f2a2c-f708-4697-ae03-0bda68871e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 422af359-52dd-40c5-b173-59adf44aafc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 f4a4b2ea-e039-4347-8c1e-be3a5ee75e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 55d7b32d-1350-44ea-912c-c2a1d2d3ef4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 05cdbc5c-52da-41d6-b9d6-4a4d85f04dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 ab51674c-e1e7-4b72-88cf-c95a2656230d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 fb18bd7d-9bb4-4cfb-b5db-a6328568e613)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEEC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6716;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'hEEC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #806 00091544-acb3-4d17-986c-209b8c02ff40)");
unit.assert_eq16(16'hABDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #806 310beedf-fc8c-492b-9c0c-d35446e3abfc)");
unit.assert_eq16(16'h6716, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #806 87885304-e5c5-4318-b6c1-0562f2ead897)");
unit.assert_eq16(16'hFE7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 6a165403-b82d-4970-8353-7c33efc50932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 6772a9e2-750e-4774-b203-1fec7335b2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 68ea0c04-c5a9-4895-924d-533133509bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 b07e1da4-b50a-4ead-aad9-0a10caa21c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 0b0c02d0-621a-4b45-ae00-03db6fea070a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 3822f80e-2240-448a-8a56-7ff6d7dba016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 77141e1f-f7a2-419c-a3b4-350946507fad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0BB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8254;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5410;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h0BB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #807 3075ae46-cfcc-4bf6-9a03-2e601b3bbb57)");
unit.assert_eq16(16'h3D25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #807 e996b88f-55d8-4319-ae6f-091ba6bda240)");
unit.assert_eq16(16'h8254, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #807 c3e38e29-fd52-44da-acec-4ca154a840a6)");
unit.assert_eq16(16'hF3A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 0121c97e-c91a-4d4d-a476-ea7e3bd7dcee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 0a6a8005-5047-49f9-b1c4-5bf7a5535bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 43136714-014c-426d-9118-2a0ff14bb07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 a37c07c6-5397-4c9c-90d2-5736e7f5849b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 8b164aa9-caa4-4bc5-9081-ee4106709e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 c83756f1-f883-4d07-8fa2-1e65247a6469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 ec357f61-3df3-41ee-81ec-ddc0f83e1345)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC883;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF219;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'hC883, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #808 f551593a-35a3-46b1-9040-6c5bd2d7a1ad)");
unit.assert_eq16(16'h3E45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #808 8578d83d-bb93-4b30-a64f-8728dce89d21)");
unit.assert_eq16(16'hF219, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #808 dbad4cbb-713f-475f-ba59-3541b84942f9)");
unit.assert_eq16(16'h7692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 10bdbc27-710f-4024-be05-9702f106459e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 7a9be11e-5015-4a64-af6d-bfee877bec7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 c8bdbc10-4db8-4d10-80a2-98f289e8eef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 06fa47da-5dcc-4f44-9230-367969317d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 b4428ee3-09d7-4d9b-8b96-da4fbdec244e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 824c77c5-e69e-49ba-8c5d-9f0b356502ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 741ee1ba-dc81-4dd8-9af6-8c9b55251539)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3309;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF84D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h3309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #809 1ae5fc6b-5e6e-4c10-a9ba-3d2529951184)");
unit.assert_eq16(16'hF84D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #809 4132eab5-b05e-4271-ae13-17cc878d5c0c)");
unit.assert_eq16(16'hBD9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #809 b6aec15f-e7d6-46b1-a97f-069a2e8d44a3)");
unit.assert_eq16(16'hE9CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 1f2e89f6-9a1d-4ce2-acd2-c7efbafd585d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 8808c5e0-f96a-4a15-838e-a8f1793dbc16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 387540cf-18eb-43e9-8c67-16ec65c5c539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 f0d31a79-b436-491f-a9be-d883169399c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 13acef49-e254-40be-8488-6e58e2dda061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 4d957a49-bab7-4fef-98d0-42dee8381214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 e3901f36-b116-4c24-ab9d-496fc23a2ee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF240;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h25F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #810 94d5167f-2670-4691-a754-cb591d911d45)");
unit.assert_eq16(16'h1B4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #810 bada350f-d8c0-4505-b3fe-1efff7705752)");
unit.assert_eq16(16'hF240, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #810 6498578e-c29f-4959-9d7d-3ca497f99a06)");
unit.assert_eq16(16'h1200, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 439b0ee5-a776-48b2-b58e-d6532ff95db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 36fb326e-4548-4434-8595-a39563a841aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 3294a87c-4d49-45bd-b75d-68598b0d9284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 54bc0f15-aa98-42cb-91e6-a601669885ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 74885a13-a29f-4538-afe3-79e7f4dbe426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 b5ff161c-1c46-4f80-bed3-0635dd4653cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 cbdbd805-adb5-4386-8034-5c701dc8f998)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF33D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF5C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3D56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'hF33D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #811 e712c6b3-66c9-4a5d-8149-ac5d220bb71f)");
unit.assert_eq16(16'hF5C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #811 5bc95f61-6532-473c-91b7-b9c983f24122)");
unit.assert_eq16(16'h3D56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #811 078ed7f1-eebe-4660-9cc5-1e0cb027d5b9)");
unit.assert_eq16(16'h3A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 9652b8e6-08dd-4962-8822-a4dd84103d56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 2dec0aa4-6fd9-49b7-bd0f-c2f9e8b8398f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 e489a399-9ffd-45c9-9907-0fb9cbf0ad80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 a7f8a5a4-f930-41b1-83ec-fbe55e90637b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 df1b2d26-eb87-4066-8e5b-3c42a104862e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 1daafbe3-1724-4676-a9c5-20b0ad68c7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 77b11cfa-8f91-4e24-9b22-65110a7290dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE2EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA293;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC3CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'hE2EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #812 10fe9133-cd63-4103-bee4-508e425d1dc7)");
unit.assert_eq16(16'hA293, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #812 839ca797-7bb4-487a-9927-91f999b2f662)");
unit.assert_eq16(16'hC3CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #812 a41f3dd3-279c-4e5a-a882-fa3fb9d30e57)");
unit.assert_eq16(16'hDE65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 b722f6c1-6bff-4dfb-ac27-9ac8fc702825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 b3819fc2-9976-4ac2-b6fd-0d1fd4190daa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 a384579c-a238-4011-9c2e-976203494f30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 90c94047-d016-4c27-94f9-3c1369ff6664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 39aa72f8-5ba0-40ee-b180-c4391af84bac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 bc510cd7-849d-445b-9c5f-bc4c2431da23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 4e700b6e-e336-4969-8cbc-eadd99607c2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE44B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h99B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2AE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'hE44B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #813 78c19d63-fd4a-4918-95a7-13c79c54fff9)");
unit.assert_eq16(16'h99B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #813 bca27f0a-6331-4e2c-8cda-37d9888d29e7)");
unit.assert_eq16(16'h56FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #813 08f17a8e-a3ae-46e9-a034-5c4bd84ff099)");
unit.assert_eq16(16'h0438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 f677f260-c88b-4f90-93ea-5d680181a96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 fd57ec45-e70e-4376-83a4-54086a8d2b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 e25ae515-6d4a-4a0f-a4d1-6dc8390e8c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 3b7fc1a4-45e5-439b-946b-1bf127698aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 88f45a9e-74c7-4805-bd36-8a502bc5611a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 dffa55be-b358-4eda-98a7-a310f0503a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 8ca64217-b87c-4de3-b411-ab93a42310b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h28C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB4F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7722;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h28C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #814 dd83c432-9345-45cb-bbe9-cac250fbb22b)");
unit.assert_eq16(16'hB4F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #814 5fcf2967-8565-4b99-9ad9-7a8b7c3c56b3)");
unit.assert_eq16(16'h7722, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #814 5f3259f0-b3d1-4d8b-b397-8014e119bf87)");
unit.assert_eq16(16'h77C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 d8ea4576-0a5d-4e4e-919e-a397f7c58bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 6d70a788-8741-42d6-8483-8075a0914887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 7a0756b5-eb62-4a59-b58b-99e85d4abaa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 b23c6baa-5256-43f2-83f4-f31cfb6c3aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 495eb2e2-7b13-4484-a10a-6ae33a2f19bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 3a0fe56d-8c19-48fc-9859-74f6d2cadcec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 3decccc4-297d-40ee-87bd-3ea868617581)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEED3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA97A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'hEED3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #815 2f5b1fdb-610e-49f5-87ab-964f9f0b61d4)");
unit.assert_eq16(16'hA97A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #815 18532675-d2b9-4759-8c4e-a9fb99bf8842)");
unit.assert_eq16(16'h59B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #815 3423f7ed-271d-44ef-9d27-41d15180aab6)");
unit.assert_eq16(16'h28F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 29c98ea6-bde4-4040-b4ff-46b87f555cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 30d7704a-28af-41f2-abc5-94cba57425f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 9d58c5b9-fc49-4e29-8211-0174de06f291)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 da691dcc-f7e5-4014-a053-e69c8d5594be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 0d85fca6-767a-4266-8cc8-eaf63e10235e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 9a1987e7-1a85-4d70-ae34-cf72a60b9829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 f2ec9c22-d192-4481-9c02-0841eb9ed2ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1ADB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8ACE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6AFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h1ADB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #816 907ba29a-e591-4db8-b593-ded708e700ca)");
unit.assert_eq16(16'h8ACE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #816 b88022b9-0101-4307-96b1-9232227a0358)");
unit.assert_eq16(16'h6AFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #816 bad8e70e-4a7d-40dc-94a5-2f96c51ed6b9)");
unit.assert_eq16(16'h303C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 acdf0d95-a6dc-42b8-a537-646426b9f8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 83b3ffd4-0c3a-42bb-ad4c-667d0ea701f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 8e2ba212-d84f-4dab-93d3-71758dcb48a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 f82e45a4-7a9b-4e14-a2b6-8b2b7eab79d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 3617a51f-9cbc-45a5-9041-babd4b1d69ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 e42cf1ed-ba75-426b-bfa5-36f2ff60b643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 18d14821-fdb8-4c56-a4dc-fce2155bcc7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h586F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h2A6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #817 a1794728-283c-4192-bc27-80a87c09922b)");
unit.assert_eq16(16'h586F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #817 5331d190-812e-4524-b3b0-87ea47b2c6ca)");
unit.assert_eq16(16'h0CDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #817 770f0e94-a97a-455d-a413-f6bcabe2b031)");
unit.assert_eq16(16'hEA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 35cf4d8b-c967-4847-a968-f60cc79205ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 8aa53790-ba96-4a4e-9d7b-c47a10a77edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 c91331a7-b2fa-43ea-8dc2-252c134c7c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 092045be-24fb-4c2f-9d80-0e41cf728d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 fad07301-f217-4c0b-bc75-a6c2f986d3b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 d21e5d73-cf14-4e7a-808d-99a5593c3344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 3770a3f4-5252-423c-af02-83446deb66a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEDB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF3C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA717;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'hEDB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #818 6cc36574-8a02-4581-9758-bd25f5014e6f)");
unit.assert_eq16(16'hF3C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #818 2161b611-46e2-46f5-be16-2a902fc0d477)");
unit.assert_eq16(16'h8A0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #818 4ce616e4-1e72-45bd-851f-d3bdc4e76bcd)");
unit.assert_eq16(16'h79E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 1e34dc90-41a0-4fe0-8e38-6bcabb8bb325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 21e41dfc-3695-4c15-87ce-840f04ec33e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 0aa29de1-de83-4587-854a-99c953dc33b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 5d3bd2a4-e7be-4afd-be6c-3c2b423719a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 e031141d-116e-495e-be49-95e94233e482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 8fb6136b-0989-4ad0-92ea-e0e786688e41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 b05778a9-88e1-422b-90d0-a0231273cfc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h340F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD08C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'hE6EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #819 8753477c-6491-4591-ba85-cefdfb835c15)");
unit.assert_eq16(16'h340F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #819 856c154e-c253-4403-9fb1-609844b9bb75)");
unit.assert_eq16(16'hD08C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #819 19e73b74-a91b-4a65-bab2-8a8fc3f52cdc)");
unit.assert_eq16(16'hD726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 67f0c7d4-2151-463f-bd41-a81ab657365c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 c5c9cc53-723c-4432-9222-d7cf47b8087f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 995cd358-fe63-491f-8aef-e68a388e12f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 73e348da-65f6-4398-9daa-eed16568b77b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 1b171734-8595-4178-a66a-4fbd3218bc61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 dc3b552d-b1b0-4356-a5a0-14819638c27b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 4c8302d6-3553-4ae3-a2b6-3ac51f66e892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h58CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC152;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5904;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h58CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #820 4608f3da-14a5-4d30-9495-6a87536dc3af)");
unit.assert_eq16(16'h0D23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #820 d279cd57-4239-40f4-beba-e55f7e34d362)");
unit.assert_eq16(16'hC152, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #820 870f19af-caf6-454e-a867-6a70ade55557)");
unit.assert_eq16(16'hC346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 11077769-1991-457a-8ead-2873f5f00bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 36c3eb01-b891-4b55-bbdc-6043ce5555fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 1bb37599-2ad6-4b65-979b-a13d40753949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 22ab462c-66b0-4466-b61a-e96d1cf5be0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 d6cf5687-cd3a-4757-87a2-5d5fb90c250e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 953f8a27-f7a5-4bb4-b8b8-77f9bcc87ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 65063c2b-738b-48ea-ad15-fd12a9f34399)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h66D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD16B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD19F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h66D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #821 0990c003-728f-480f-9654-a224afaa93c2)");
unit.assert_eq16(16'h4F47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #821 3c807223-0ccc-4dce-af13-239a632919a4)");
unit.assert_eq16(16'hD16B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #821 b8057e7d-8921-45cc-92f6-2bca8822bc51)");
unit.assert_eq16(16'h4D73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 36043c06-2000-47f1-a769-5a6ed8899253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 51def157-453e-4b79-ba16-15bd17b1acc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 049d0b9f-a95e-4f3e-8534-7ea2e60eca9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 c7ac278d-7c85-4c70-aa30-bc5db335357d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 b21d15b9-0b15-4b63-831b-ffb2e1ebb0cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 4e7a0ca3-1cdb-4da0-a002-7cc201de0acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 f57fd17d-f4cb-4eaf-a289-cb128b6219a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF96A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'hBA97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #822 f5016c45-5848-40a8-befc-9555f751e8ff)");
unit.assert_eq16(16'hF96A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #822 06be9fb7-b98f-466e-99cd-262440984e1e)");
unit.assert_eq16(16'h2A76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #822 86b381b5-4d87-45cd-813f-e2ca042bf437)");
unit.assert_eq16(16'hBE64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 5c44f835-c220-4b85-bc67-d4fcd98a2db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 423c3d6c-d025-495d-a8fa-3720048d114e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 7b56b22b-5b1b-4ab9-95d9-0d1f44651711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 0a8741aa-7cba-4f84-9e72-00b46a3bd585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 a046c660-d0af-4047-94c8-869a418f9484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 1e4303b1-c162-4ed0-a281-4267d5b32c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 90d3e238-8493-4a29-b6bd-bce0508ff1e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC081;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4CC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4AC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC6E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'hC081, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #823 adc3000c-771e-48a4-9458-d5aa11801e0c)");
unit.assert_eq16(16'h4CC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #823 42b2827b-052c-46b8-83cc-b9490565bea1)");
unit.assert_eq16(16'h4AC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #823 6fbbba08-8b31-4a7b-bbf9-3bbe60d64f61)");
unit.assert_eq16(16'h6891, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 59182baa-6bf1-47c5-85e5-e95268d20d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 40377936-8d6a-47af-afad-74052b7b92d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 cbcfce3c-949f-4ede-bafd-f74c02dea9ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 f21114b8-92b2-4e81-b745-3a2a11e14b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 efa91aeb-41db-4faa-9c65-b30cc753e8db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 06b01942-fe57-4de5-8df8-82ff51afc1fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 b0feee54-fe42-435f-952f-6a8fdece6580)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2A9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h3B2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #824 3ab7a2ee-266b-4191-9227-158a93ef415e)");
unit.assert_eq16(16'hFF61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #824 a3bb786f-1b06-4ecd-a852-e196873f42d9)");
unit.assert_eq16(16'h6C5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #824 d56a42cf-ec7c-47c1-a04b-0197a94acd3d)");
unit.assert_eq16(16'h59D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 a69bac40-bd18-40aa-b4dd-4e75ec537fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 20441d73-0f7e-4dbc-b9a3-0fdc0999cbad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 2853bfd6-abae-4bd7-811b-7d024968abf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 0889a2ad-8f4b-4a2b-9368-9a23c0ca7e7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 a31903a3-136f-4422-9de8-eebdbc24c1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 0be06b9f-2598-423f-bf5b-0a62087982bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 88f684c6-17c6-4627-97c7-7c41008fe867)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2151;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3335;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h743C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h2151, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #825 d2d98f3b-f6ca-45f6-a153-b719a197fbe1)");
unit.assert_eq16(16'h3335, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #825 03db95ee-de33-4b15-a0ee-1e3da2a2e3c9)");
unit.assert_eq16(16'h743C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #825 5726b6ed-1024-4518-beb7-c1a7bf701442)");
unit.assert_eq16(16'hB9D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 441f4fc2-01b6-4b80-82c0-2c40c24b51c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 cdfde40f-8a14-427b-a618-1497c49f67b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 ece3567c-2feb-4308-827c-d200df71cbfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 270dc10a-33fe-4b2c-9b21-84e785fdea5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 62030c6d-14d4-4546-9d0f-bc326d9c2bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 084df309-a99e-4861-ad4e-aaab7d457ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 ac2be198-76b6-49f6-89ff-8a0aed6cdfda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h45E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h6B99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #826 89586a45-08e1-4a36-84e3-a41bbe98a1e3)");
unit.assert_eq16(16'hD7B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #826 845b3613-c503-4a02-b820-9bf1b95230ee)");
unit.assert_eq16(16'h45E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #826 128459f4-2ff4-4e9d-adcf-b2dff37e74f9)");
unit.assert_eq16(16'hB785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 698a6769-b743-4a6d-8a1f-416cdf8a9532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 50f0f215-2084-4e08-b7f4-5d4b1a051827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 bbe496c2-df92-4b0d-9a5d-6be1c92bb069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 d3f5dc5d-e1a6-44c2-8467-7cc7b48beae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 c1cf3905-dbd5-44bc-9e94-3a5cd6fdfd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 8a530b04-1cb9-4247-8340-fd5a1ce94036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 21bf5667-3166-4d50-b1cd-7aac202e9ae1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB08D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC477;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'hB08D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #827 8a53bc04-fe93-4046-96a7-0a83534d362c)");
unit.assert_eq16(16'hC477, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #827 e314920b-a97f-40e2-9faa-8bb8e6e55cc2)");
unit.assert_eq16(16'h70C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #827 57632c40-815d-4b64-86aa-107f7d3c1cd4)");
unit.assert_eq16(16'h6858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 c4ee7963-6ae0-4347-b3b6-8bb663c902d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 3f17767e-72dd-4839-86e0-f336ba02d74d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 c5d3119a-c04e-4dbf-80a0-4ef138b6b88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 2be04a0f-55b2-4962-ae64-116b8f0d6d48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 6413a0c7-c89a-49d5-b642-22c34ea9e7d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 5199487c-74ef-4a0a-aeeb-5ef9ddb85a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 49353758-d2ea-4998-a79b-9e418dc48243)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6205;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC820;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8002;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h6205, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #828 7776777d-85e3-49cb-aae8-bf5d43491c43)");
unit.assert_eq16(16'hC820, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #828 f8038bd5-8522-480c-999c-7089daabe2bc)");
unit.assert_eq16(16'h8002, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #828 0ab0d5ab-4c8e-465b-b0f0-3e6ec099c565)");
unit.assert_eq16(16'hF2AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 07c3e399-02f7-4df1-80ec-6cf401408c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 8aa8725a-13a2-4a36-964c-db52ac6184b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 3d60f0a6-d470-4101-928f-c84f213f1b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 5f4fb8f2-73f8-4bfa-ac7d-2c9198a955f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 5b701192-0536-46be-a115-2c1cbd719d0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 a0c825e1-c0c4-436b-8ce2-afe1e13bac23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 392c2f57-f92d-4d6b-832f-172738755d88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF1C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB472;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h7E41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #829 024c8973-fa70-4647-90aa-125437d15b82)");
unit.assert_eq16(16'hF1C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #829 a712b4c8-ff9c-45cc-ba18-ad216c10cb70)");
unit.assert_eq16(16'hB472, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #829 f224998f-acc0-44c3-b310-c9cc038e1a28)");
unit.assert_eq16(16'h223D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 9cea27bc-f2f1-4d56-95d7-1084d85ddbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 623f2163-01b1-4765-bd1b-709690bc0fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 b944e8eb-d751-413d-a324-c83a0104a802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 38e4ffce-0814-4def-b1cc-a5a78f978bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 1cbd63c5-215e-418a-91ce-7f2bbaa6575d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 2116f438-8ffd-46c9-8286-13daaa258cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 9093d4f5-06e0-494d-83e8-8b3dc8c7fa23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD515;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEEFA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'hD515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #830 4ab54789-d203-4e37-8bc6-ef6dc4d80971)");
unit.assert_eq16(16'hEEFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #830 053f49a1-a947-4035-b82b-8f199161b803)");
unit.assert_eq16(16'h9C48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #830 74a4af5c-cd48-479e-a53d-490984fe064d)");
unit.assert_eq16(16'h3C71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 94d6279c-4f92-4bfe-b711-b7c2c5daec72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 f1afd975-035f-430a-afd6-a8058c21fa24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 77aae744-dab0-4d2e-bda2-df66d308396d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 f19186ce-a94c-46e1-a4cb-47611c9be778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 cdcbc29f-b48b-4add-a1ff-64d0a9504571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 2fada025-fab6-4600-ae5e-0d5339c68bc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 74e7ab28-54b2-4f8a-9c50-05346c90999f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7749;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6938;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h7749, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #831 ae9e32bb-5822-439d-aeb0-834073946d94)");
unit.assert_eq16(16'h6938, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #831 7bc28787-bf62-4144-a380-2a146db4abef)");
unit.assert_eq16(16'h73C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #831 423eba9f-e0b7-4c8d-9c5c-2af211cf2f5a)");
unit.assert_eq16(16'hF483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 637b233e-4c3c-453f-87d9-1ef3f444a4d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 6583d579-accf-4275-b947-243d6fdeb4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 cb5a3f2e-4dfd-4643-a39c-1599ac0823e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 a619ccd8-5cc1-4b93-b986-8ae8231f77df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 004eb8f8-6bbd-44a0-b0fc-e4ff9a83facb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 0fab234a-9af4-4b77-89bf-8a69c3d0e6f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 2e15714f-826d-4197-ba6b-d602e616796e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF18F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'hF18F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #832 ba380f28-c4ec-442c-b31b-48820f5ea996)");
unit.assert_eq16(16'h5B69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #832 8924aa83-2430-44d1-8b8e-6b9cd6222a41)");
unit.assert_eq16(16'hC1DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #832 2571313f-56da-41f4-93a2-5ffe911235ce)");
unit.assert_eq16(16'hFEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 c64ad3bb-a70c-48be-9861-eb20118e3c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 d37cf183-408d-48e8-a92d-67545b7b92cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 f87a995e-658e-4422-8e5f-1e5f57884096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 50322522-ba55-4809-ad02-6e17e0f2cb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 86541936-365c-48fe-9ab1-b1a57781d501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 1d0591fb-56e9-415e-95ef-f4bb47358fd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 e28a612b-6adb-4974-ab5e-993edc80d017)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h09C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'hD9B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #833 11dec5fa-3ef1-4824-a611-f5366d783eef)");
unit.assert_eq16(16'h09C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #833 1ff12081-0d9d-449c-8bd9-e309b4e928db)");
unit.assert_eq16(16'h15A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #833 41cffc38-f9dc-4e4c-9e18-7514bee3fd34)");
unit.assert_eq16(16'hC98D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 fcca3b35-f7af-4323-9a70-eb32d97ddf12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 4c6122ae-942a-4cca-a778-aa6f2bdb41d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 c557225e-2561-4a5c-8c7d-5e6831a79da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 e18990ea-4fb9-4a05-9288-5e8773a48c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 4911000c-9d2b-47bc-97ac-8a4677814a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 25b446bd-3384-4b77-81f5-aa782183588d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 680f7f0f-d7b4-46b1-b95a-f63117f93153)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1FEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC52B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h3B1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #834 74380256-347f-4488-8929-8c374943e980)");
unit.assert_eq16(16'h1FEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #834 1a4bf8c9-51f1-47eb-b941-87c93cf53cc3)");
unit.assert_eq16(16'hC52B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #834 b2b1c596-19c2-4c1c-b0fd-90ef3596feb8)");
unit.assert_eq16(16'hF397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 67837ff6-54d4-47a9-b622-a4b21ece939f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 5a893b40-a6d9-43fb-ac81-3854bca91870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 563705ba-8550-4d81-bb4d-594d1188233c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 b519afdc-4fd7-4eb3-9723-525064a01c39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 8859c718-5c61-4d18-bdb1-ef2c22285d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 ad0d543f-3db5-4b10-babe-cf73d61394e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 2987776d-f161-4163-b253-519787359244)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h424A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC91D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h424A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #835 08b0cb85-6cb3-4193-af06-8024c3c64648)");
unit.assert_eq16(16'h0D9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #835 b1f6c707-93e3-45c6-9cca-79b5b074c96f)");
unit.assert_eq16(16'hC91D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #835 a613aae5-3d20-47be-95cd-0d6eae91eb68)");
unit.assert_eq16(16'h3891, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 abcabcf2-1a64-4522-b4f1-0d44a80a0ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 26ab04eb-0b1e-498a-9ef6-f51c180c9410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 41a18f13-c38a-424e-8ac0-19de3c356aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 5e0ad99e-1b5b-4d65-840f-753e41e2c466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 f96313bb-c53d-4cf1-a98e-b5d2205ccba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 fd2466dd-e4f2-4ac8-87d9-1f45bf8a3f69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 eaf04cc9-4ae9-40b0-9c28-74fadd5d8ae3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6DC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC5F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h6DC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #836 ffb29b70-7bd7-4ab5-ab24-ec683c25eef8)");
unit.assert_eq16(16'hFB9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #836 c6fbf230-d3e0-4918-accb-fdf01614326b)");
unit.assert_eq16(16'hC5F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #836 42dfde12-6856-47e2-94d3-d7e836ee7db1)");
unit.assert_eq16(16'h1387, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 824ef95d-99f5-4308-8ad9-727eb70f78e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 2c1fb830-a9ab-4612-aa4d-ed12dc33f19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 68ff110e-4236-4b11-9912-ec65b2924966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 5d9748e1-64ad-4944-8fb4-090e6796678a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 688e8f38-de14-4092-b761-0b3b4f9fbb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 103375dc-29f0-40c9-b40b-6e90c900d8ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 21e349c5-a350-47fd-97c3-f4f544dbca5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h83C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3928;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h40B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #837 9e48c25e-5085-457b-ae03-5e969e36a6b0)");
unit.assert_eq16(16'h83C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #837 b462dd6d-98fc-4e5a-9aa4-24c754ff4bd5)");
unit.assert_eq16(16'h3928, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #837 5752b960-982d-4b5a-8730-2dcb3c55ef98)");
unit.assert_eq16(16'h1B42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 af0e7710-faa4-4fe0-8bc5-552ad24ed774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 65744aeb-af9f-4888-81a7-e6a6027e0e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 f66fec1b-c97d-48f2-bdb8-3edddc0d20c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 5533eb87-32fa-4f56-b4dd-8ba7a43354e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 08cbf363-3a25-48e6-8ac4-94df46d4527a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 1a3c68c6-870a-4bbb-8f62-bef98b37e4fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 19db9d99-7073-45bc-8033-cad05ed7a42d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h654A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h820D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h267E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h6AB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #838 7c47084a-3a8c-4243-be7f-27678d639da5)");
unit.assert_eq16(16'h654A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #838 7a3b680d-9dee-4843-9172-1c78da50da3a)");
unit.assert_eq16(16'h820D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #838 94047458-399c-4f9b-afd1-5ef3081720c5)");
unit.assert_eq16(16'h96D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 71fbb5df-3ad5-424d-88be-555b82e15f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 a943ff6e-c4e1-4eac-8b35-6dfa122dab2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 30d4ae66-f408-4575-9900-dcd52e17161b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 7228ff61-0d86-4091-b40a-08270b6030f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 36725ce5-36bd-47b4-af52-44cd8c53753b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 19c4a07d-2b75-4c6d-9bdf-f9e2e590a08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 23ba3f0a-16fe-4664-a6ff-d2f8fcf041be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8FEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h927A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h35CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h8FEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #839 76ca5fc5-2b08-4930-ab03-027d6e29fcc2)");
unit.assert_eq16(16'h927A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #839 10d6319c-b280-4bb0-a640-35688b1f0e2e)");
unit.assert_eq16(16'h52A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #839 3d43a7ef-869b-408e-8b4c-22410f64491c)");
unit.assert_eq16(16'h3136, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 3d64faf3-8edb-49dd-b1a6-75bdd57d7630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 d84190a7-8c40-423d-a0c3-d5355876d20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 d0dec5ad-fba2-4387-9f16-c08087d1148a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 4d573616-2494-4cf9-a1ed-7c32b201cc63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 3e0ac5e3-32df-4a4f-b67d-baacf41a6cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 ba5a6124-a963-4399-8688-156c20e42a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 69c08839-7038-4e67-8544-54128c0f51e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7261;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h845A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6357;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'hAD76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #840 b8b8d9ee-650e-4d49-bd0a-f0012d1fa148)");
unit.assert_eq16(16'h7261, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #840 edd644ed-9044-412e-96b8-d0e6461c3a84)");
unit.assert_eq16(16'h845A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #840 b5b65919-bd7a-4a16-bb75-0e52265bc53b)");
unit.assert_eq16(16'hB672, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 e8968734-9368-4ec3-b6c8-9be655719112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 b6885221-48fb-406a-82e1-db2628a8b6a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 96d1cbbd-c406-4a5b-af44-7019df5e905d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 54a83519-e45c-4a94-b699-57b5f8b60d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 53c910bb-4230-434d-a41d-35d3d0ce9dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 2b7fd6ee-b32f-45dd-8de3-fd9f90bd3eaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 d7a0aa27-e66b-4a94-aec6-9bf8385ebd44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h36ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8531;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h43DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h36ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #841 2422d2ea-d7ce-4895-a2e1-17ca407bb1d9)");
unit.assert_eq16(16'h8531, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #841 7aabbe02-9311-4513-b163-51b41681b6f3)");
unit.assert_eq16(16'h5653, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #841 0b31c575-1bea-4667-acc0-ef8ed61a7981)");
unit.assert_eq16(16'h248A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 d28fe3b8-83ea-401a-8ba3-13c5fe37fe07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 81a5360c-281f-440c-8b22-a82a047c2940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 a2e656c7-cfb3-45d4-a0c6-9b9a177688f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 70cb523e-bd9c-41d7-8218-408a00b0252b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 8db4dfbf-e3cc-4ccc-aff3-7f7a68a9853b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 82d674e9-a34d-4c70-9998-9e8dd658d278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 98bc9ced-05ea-4a11-8201-4ab0c9bc2e27)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6618;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1797;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF895;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2804;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h6618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #842 9288b242-3595-49d6-ba38-0431e88b9b64)");
unit.assert_eq16(16'h1797, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #842 4dd17714-051a-47f3-af74-b422689eab7c)");
unit.assert_eq16(16'hF895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #842 ec50076a-5569-4fec-9666-ba1258d83ce7)");
unit.assert_eq16(16'h8BEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 a36fcabd-2208-4323-a0f5-a3e78fc41b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 c5a58029-f645-4f1a-8c15-dd3c54ccfd8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 c8634662-2c34-4528-b723-521c5ed02038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 4b009b01-50a9-48d4-8040-50ff8b72c704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 6d9562ff-9a9e-49d6-9234-757d8c95f9e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 e0b88bbe-dd44-4ee7-a92e-d89d14c59a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 ae8ff99e-ab68-4d10-a863-46cc46c55667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h707C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3CA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h707C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #843 2ab12139-71b7-4957-892a-b9796e5427dc)");
unit.assert_eq16(16'h3CA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #843 48e83288-9601-44f3-8c47-31bd375a4cf3)");
unit.assert_eq16(16'h5F9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #843 4d5da094-2a2a-4e2f-b027-992d02ed078d)");
unit.assert_eq16(16'h9BD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 bbf6fded-5a9a-4006-b880-d338e11189c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 f749cb20-152c-4dd7-bf48-563cc45da43d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 46ec0935-806f-4dc4-a2ce-374e8e9918f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 f2ee9c37-e430-486f-ae99-5c7d60f1ef6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 13587699-1de9-42ed-ada9-1249765202ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 45d7bce0-26ea-4ad2-ac52-96ae214cc42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 adc1a7f6-50eb-4122-a1d0-d29092e9b6ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE177;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8FCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'hBA44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #844 a60a5b6c-4ca0-4f1c-a8f6-064101000883)");
unit.assert_eq16(16'hE177, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #844 abe33b2e-a60a-42e4-b5aa-65283ae8d3a8)");
unit.assert_eq16(16'h7E8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #844 e7c2bac8-9e21-4c75-a43c-3ddfa0787a3a)");
unit.assert_eq16(16'h63FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 20948dce-ccf2-4553-b6cb-97f221f6e5d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 3c88b0b2-3ca4-4274-b1d0-78878c50ecae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 baf10a86-cb12-463f-8c04-178f520b73d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 b7bcfb4d-7889-4736-8a3a-0120911114df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 e2372947-2fae-40db-823e-d2691f47df4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 d2de0d85-b833-4b09-8630-7140326b9282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 9a7f2dfc-c8c3-460d-b958-75902ba4dfde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB1BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5AAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF923;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h7D12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #845 e1b0a448-f5e5-4eb4-8e71-d85be68285cd)");
unit.assert_eq16(16'hB1BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #845 7bb584c1-2480-4cf2-aecc-40a58c310da0)");
unit.assert_eq16(16'h5AAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #845 8634dd01-a299-4d82-9965-1d7f6e2706de)");
unit.assert_eq16(16'h0C6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 a728f84d-0ff3-4378-bcf8-53b7ad6ed3d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 3ec75808-110d-4873-827c-b77753f37906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 454e1a5a-e3a6-4ce2-9301-4ee7b0c74e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 e696c187-a30e-4758-a9f0-84107e321443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 fffc286d-ac25-43d6-b96d-9585c7ce2003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 5c8db1ce-a834-49f7-abdb-189459189d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 cd269d91-4d4d-4898-ad73-28e3c10d737f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2E27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h70BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h10B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8476;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h2E27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #846 32e1e9d2-86bd-4915-b8c1-3109cd701a3f)");
unit.assert_eq16(16'h70BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #846 4306600c-36a3-4ae1-aa27-ede3646d8351)");
unit.assert_eq16(16'h10B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #846 9df97843-2767-4145-8615-2879f2f61703)");
unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 6055cc5e-51f5-424f-8e72-161b50551a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 c497d3f2-ff50-4c7c-bdd8-cd8a2371c015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 03cd0f9b-194d-4a1e-8053-f7c9a85d6bd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 9ca73626-68bf-4ef8-8aa1-a94a121518f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 df7c9bca-8cca-435b-9c67-9cdbed894744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 52079f3a-0c9f-40b2-846e-3f7749532095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 24c82867-6c62-4865-933d-def9b698a40b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h32A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h347B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h524F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h32A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #847 8e044a3c-777d-4aa4-a4dc-d93df1a7a6ef)");
unit.assert_eq16(16'h347B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #847 6a7d1a51-d561-4555-aabd-93ac72d410a9)");
unit.assert_eq16(16'h524F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #847 0117235f-b783-4b0a-8280-41fe61dbf3b7)");
unit.assert_eq16(16'hD259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 7b9926aa-a42f-4ebe-9a1a-e20a3308fe87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 e686231c-3b99-4c19-9aed-5059dfb0f38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 00977eda-4ad8-4410-aca4-07e23f851f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 bb1f060b-7b0c-4805-a0bd-01e0a01b9e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 8875ba26-5336-401e-9f70-5391d91079c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 e4f8f1d5-f1b1-4af5-9ef7-05fa07742725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 80286414-af40-45b7-afb3-debeda60d324)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD298;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h922B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC0F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'hA8FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #848 d00cf333-5823-4da2-a9f3-0654947e1ea7)");
unit.assert_eq16(16'hD298, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #848 8e9b9a70-8edf-456d-8bc7-567cd15b1356)");
unit.assert_eq16(16'h922B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #848 bcab2d8b-ce6f-49a3-a5f9-0a94680e4ac3)");
unit.assert_eq16(16'hBADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 a5b8b2ad-c2d8-48f9-ace3-d1a154f1c22d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 efa1c581-6272-43ce-989a-700797a204a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 5f3234eb-f6e9-450b-a4c7-d6f066b9865f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 9211e27c-ce36-475a-924c-d49dea6c7f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 08ea1bb1-0090-4d47-946f-e6fcd420e004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 a18b40bf-27b4-42ba-85e9-0e5c6ae5ae3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 fc782001-0d9c-4365-b8f4-c2e9048cc8e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h49A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD88A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h785D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA1C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h49A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #849 d5652a0d-9851-4409-814a-56257f8e56a3)");
unit.assert_eq16(16'hD88A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #849 6304bb0c-02bc-44cd-9404-6381d0c80029)");
unit.assert_eq16(16'h785D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #849 3ad2548a-08d0-4b4e-a285-d76812ca4518)");
unit.assert_eq16(16'h56EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 d8bde640-e3a9-44cf-bfa2-708504f2eb11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 76e4d394-6080-4956-967a-995d569b05d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 c7cad3e0-314c-4249-bc8e-308e023dd0e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 d7d23c85-1413-4616-9e60-a100c25f89f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 d1e46fb8-66c1-4f5f-b41f-b258052f78c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 6bf91330-60d7-4ac9-8d71-9a3d40c74d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 f27bf978-ae94-454b-81c2-def7748a44dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0430;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h0430, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #850 44f9c46e-2637-4b73-90a5-583e811a8242)");
unit.assert_eq16(16'hBE75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #850 1a36b6a6-44e0-47f8-bdbe-64e4ea2a01c7)");
unit.assert_eq16(16'h7647, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #850 709d71a8-35b5-4e43-8e03-0c5b035ff9dc)");
unit.assert_eq16(16'h1DA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 b6375fbe-c79b-45b5-b6bd-0978c046b597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 4733ced6-824f-49c1-88a0-80e4bb86e5a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 e09104b2-95b4-412f-b8af-10b6c3cd51d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 44d78320-6565-47e3-b4ff-0e2cd51fa59c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 31b7ae7c-93eb-4bf4-bfae-2cb4634f9fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 5b8c72e6-54d7-42ea-b4ae-47baf494ac12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 50f0b9bf-24ae-471c-97bf-b2f7afc6be4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h35D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2F47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE28A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h35D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #851 3dd351c4-0b6e-4ad2-a8df-3de997488b94)");
unit.assert_eq16(16'h2F47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #851 546ef71d-1a8a-43e4-8ea4-f52611c5e340)");
unit.assert_eq16(16'h06BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #851 29287a57-d9e9-4fba-9359-5d0aee24ed0c)");
unit.assert_eq16(16'hA57C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 da3c5a01-a182-4e13-901d-f78622b0d715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 7ba92abb-4d7f-4cf5-b7b9-c2be0dc9e509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 b6565f90-0361-4877-abe3-981e8a07e934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 30954789-d247-4226-81aa-d7c2803d9dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 6d41ab2d-9e14-4e03-8350-324ca709520d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 add9c115-fb06-4dba-9524-f8f555775d10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 90979e83-e106-40cf-a85a-267acaceadc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5164;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h5164, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #852 54999d06-9432-4cbb-aba2-ecc03da47208)");
unit.assert_eq16(16'h9F8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #852 5f6ef58e-eefd-4ffd-b439-a1f3fd07af53)");
unit.assert_eq16(16'h9FBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #852 0393090b-0a92-4abb-9855-b08f3960dbf2)");
unit.assert_eq16(16'h0AE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 5884c91f-9cd7-40b2-8812-5df561057976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 1e1ecf13-3e0e-4a91-8ac5-0ef59914df37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 c3a83f90-2f31-435b-b32a-727cc2ecc6a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 3e2c9ff1-a249-4531-a363-518ef40cd575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 1ac22973-d049-46f3-9955-954814701afb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 9cefc4e2-f6ba-435a-a445-b9e342306758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 e6459b53-2eba-485a-a38d-fdf99e93cac5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h78FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h96E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #853 e0f10ad9-debc-4146-9f60-69259413b6ca)");
unit.assert_eq16(16'h78FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #853 5446d5a0-d653-4013-98ac-dc92f9ed8709)");
unit.assert_eq16(16'h7A32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #853 ddca612b-759d-4e76-a9ae-09002733a29f)");
unit.assert_eq16(16'h1654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 50f380b3-6e6d-45b8-a1af-934df1199c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 12fd9c49-8a61-4d3b-be0a-32b1e53bfdf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 f771a6b6-0bb6-4de6-9037-10f1f20f364b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 bfe052ce-a683-4e10-b721-3549680a1451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 6feabebf-8ae3-43a5-b432-3eff16ed7b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 845bfce9-8da7-4df3-b879-aa6c0dca4831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 a37001e5-808b-4fd5-a29a-f83bc81be8fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEB6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'hEB6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #854 20055a41-4683-450e-9161-d1a3872ed177)");
unit.assert_eq16(16'hA1FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #854 ba7478ba-ccc8-44dc-95ed-7f9b4108fd58)");
unit.assert_eq16(16'h56E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #854 9e31da4b-2516-4187-8ca7-6afb80d5d6af)");
unit.assert_eq16(16'h1B31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 14c5a6ff-2fcb-4765-a44c-33e849ebd988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 c012bd4c-2a98-4b8f-b1be-3972a7f32a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 0d94e03b-67e8-4aee-acb7-d549efccfdd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 220c0e41-a497-4503-8287-076498893a10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 5e52e194-7e50-4f31-becf-9e5e68cf310d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 77c3ad07-7020-4e84-9d04-de7bf0e05260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 f581c76b-894a-4b7f-9aa1-582104a923dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF8C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5ECC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'hF8C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #855 6fc22c1a-86d9-48bc-9ba4-b415478ae09f)");
unit.assert_eq16(16'h5ECC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #855 9f62bc4e-5bd9-4121-8617-f5369f570e0a)");
unit.assert_eq16(16'hCC18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #855 10bd6314-96f7-402e-a94a-ffc6ca908aa1)");
unit.assert_eq16(16'h4204, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 945c2267-c0b9-4c3f-9031-2a7df3116afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 e26c5134-24a8-43ba-b439-0cd123de81a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 b2c07f60-2f43-4196-a771-959024c5287a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 d50f52cf-f884-4ff5-a2ce-d44a1d8c4713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 63b9d475-74ff-4d00-bc20-5cacbd57f06b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 286cd669-ede3-4af5-a3a7-a6e916e843e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 ae34ebd0-43bf-4069-98ad-2f279cc67cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h403C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6414;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE809;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h403C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #856 6962225c-49e8-4759-b7da-8db1684843f6)");
unit.assert_eq16(16'h84B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #856 e3b646e0-a030-46d4-bd7b-5925060af04e)");
unit.assert_eq16(16'h6414, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #856 2cc2846c-2416-4e3a-b997-8d5b296e024a)");
unit.assert_eq16(16'h3FAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 1afcecd9-ca9d-4166-a54c-2fe57a1f4a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 24e3627d-570a-4951-b303-00f2477f89e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 80f64032-1b7d-4106-88d6-abce55b694cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 4bd1b7d5-82a2-4384-8818-24e99390886d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 6150be91-283f-44ab-9ed2-6d70c88a56b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 4706acba-3448-40ec-86f1-e8d42568e27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 4cb79a71-69bc-4a7d-b6d5-847e00c2cfb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEEB0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2686;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3490;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h9B1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #857 eff5d9ee-69d7-4eec-8cf6-5dd04653d801)");
unit.assert_eq16(16'hEEB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #857 20ca8715-48cb-48ed-b289-07581d1684ac)");
unit.assert_eq16(16'h2686, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #857 14bf883f-9c61-4088-bd36-67e5e95e166c)");
unit.assert_eq16(16'h19C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 37a47286-03ac-4311-867d-231d30167567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 24a2abe8-afec-497f-bd3d-d51501be0e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 546cf435-8c75-4efb-9abe-546c1a76aaed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 6ac17a06-ece0-496c-80ec-c64fec36a6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 306c63df-38a8-4ca5-8cd8-3a007b0009ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 90695656-a536-4271-8073-6c21423cd8e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 62c0586e-2826-4f27-b1b9-ae73a3dc6582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1393;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD13A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h58E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h1393, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #858 03bc9fea-4384-4bfc-bebc-adebdd92ab54)");
unit.assert_eq16(16'hD13A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #858 d00b4f0d-61a6-47ce-aa5c-a5b11cbfe70b)");
unit.assert_eq16(16'h0F1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #858 8b2b50b5-987a-4c6a-bd72-251b004cf922)");
unit.assert_eq16(16'hFFF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 43119798-53ab-4a02-923b-83c1cc62ee4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 427862f8-c1b0-492e-8f52-67fcc045ce9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 d52f5a53-8689-42ea-92a1-77769e41e3aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 c93fd478-3c2a-449a-9d69-2f087f6ef478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 bb775970-feb1-44df-93ad-4cb3ccae5d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 557f651e-bcd0-4a03-9c2d-c34788e8d466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 d282d3d5-5475-4875-998c-c9dd7d5a4855)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4942;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h797E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h518A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h4942, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #859 f2746d36-3187-406a-bb87-19c597a6e1ea)");
unit.assert_eq16(16'hCC21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #859 52cc3bc3-d3eb-40d3-825b-c484b3abf858)");
unit.assert_eq16(16'h797E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #859 55c5db9d-c25c-4327-b1e8-e63a41661859)");
unit.assert_eq16(16'h0146, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 f444d6f4-49f2-416c-8896-adf2cf4edbbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 ff08bb30-e242-4eeb-8f04-4504487a006b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 ae92fda1-2f97-466e-865f-8bb8fc3d4bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 d11e97c1-af7f-49e3-b11e-8feb30845be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 432bc5a0-d563-4002-9bf9-2886c238b6ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 3e4c757b-8db6-42d0-960d-20bd4b9568f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 351b0349-8325-4280-ad3e-277ec38856e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h35ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h0CAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #860 f5b5e14f-1917-42d6-9654-60b3c5934cc7)");
unit.assert_eq16(16'hD6C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #860 dab79dcc-14b7-4169-aae6-9649c956dd03)");
unit.assert_eq16(16'h35ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #860 e26c0a93-55f3-4857-9a1d-6ff078c0f0de)");
unit.assert_eq16(16'hCDF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 09d92030-a240-4dad-aaee-6cea38687f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 55a2dc85-e1c0-435b-aa7e-32651a237619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 720af006-f1c1-49ab-9dfb-fc39a2e40dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 9822b143-d222-4980-b691-b28d38b014e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 517c6954-b745-4cb4-9613-10e137aa8c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 765a3c76-daec-4341-a5fd-a98d4abde7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 52094060-82b4-4b35-814d-1df86677eb14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h39B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h39B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #861 176967af-21b0-46aa-ad69-82823c472cf6)");
unit.assert_eq16(16'hA7A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #861 04d67a5a-8d15-4eba-8001-a0903e6514b0)");
unit.assert_eq16(16'h5F39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #861 016897e5-4f9f-4b2b-8b4c-95b4c4bb446b)");
unit.assert_eq16(16'h8328, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 c15289f1-76ee-4b6b-906e-389601700683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 7c2b5f28-45f5-42b1-b4fe-f10b0a19b33a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 d0faaeb3-778e-4f46-b86d-bd97425303e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 82238fb0-7992-4956-9c1a-f176cd22877f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 1c7d1e86-136e-4e0e-85dc-e01da08eaa2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 25f62781-7e4c-4b62-b0c5-a96c673a6bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 e1c2d0eb-44e2-4cb9-9a80-990a7f81ad57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hECFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7340;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h34D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h418E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'hECFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #862 3e5ea539-7ce8-406e-a132-c3c1e6b91fb5)");
unit.assert_eq16(16'h7340, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #862 b5f1f289-e2ae-481f-9f87-2cc783b81cdf)");
unit.assert_eq16(16'h34D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #862 748e3172-c34f-4ecc-9f3c-ccc6ea69f139)");
unit.assert_eq16(16'h375F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 8255542c-0e8a-4bea-bef0-0ecb6fb285d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 e144aa32-ade9-4dd2-b4d0-d2d99360d8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 f09723ba-2d62-462a-be23-07dc8940960b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 7135859a-c041-47cf-b63e-060c1b8c3e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 2a3f7e5d-697c-47c8-add5-7dc0e8ecb6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 4e9ad695-a967-429c-b767-a87d058f359c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 a53526a5-a2e6-4abf-9af9-eee2b04a04c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA1C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE339;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF759;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'hA1C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #863 044e34e5-b1ce-48e6-a7dc-fe49898dcbaa)");
unit.assert_eq16(16'hE339, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #863 327302a4-da8b-44f5-9f31-c46a6cc38456)");
unit.assert_eq16(16'hFE74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #863 d0e7eb09-1b3d-4a14-a561-96b34a65fec3)");
unit.assert_eq16(16'h840F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 7aa1460c-26b7-4bda-a6a1-9211e7632457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 71262970-c9d9-4949-aa47-76f2968ddb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 0cbbd4fa-a2ab-439f-81e0-eac06d842a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 83b4224d-821a-43f0-9c9b-a6aa6ad05392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 75110717-c359-4593-aae7-2a5299c0c798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 e33c2f7a-6153-4a91-9afd-b6b8fe72a9dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 021f7f20-0db4-45c5-8fe2-fdec388347f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF0A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE6CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h134E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hADA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'hF0A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #864 030c64bc-b461-4767-bc29-635f3b1b6e3f)");
unit.assert_eq16(16'hE6CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #864 52fa0844-cb64-4fd9-b286-8f033ba9231d)");
unit.assert_eq16(16'h134E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #864 66a1aaa1-ed7f-4973-b904-64ca98d6989f)");
unit.assert_eq16(16'hD323, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 32e57c36-443e-48c2-93fd-70affe7b0426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 0e320c58-b25d-4a56-84fa-0eb14443be78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 a63788e7-96d1-4c36-8d51-493ac67669ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 f5490f3c-0100-44f6-8204-0193bd4f3b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 dc20ee36-4334-43c4-bcd1-6aa45f2b9faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 a97064d7-edaf-4573-a150-e1b20847202a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 5afade91-db0e-4776-a417-6d0abdde6364)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h98EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD479;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h54EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFEE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h98EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #865 74dbda98-aa02-4832-a344-d12df99f973d)");
unit.assert_eq16(16'hD479, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #865 85af1307-6c03-4ffd-a15c-8f4d7d1db944)");
unit.assert_eq16(16'h54EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #865 767d5ae5-58c2-4e91-921b-e1ad697451c5)");
unit.assert_eq16(16'h548A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 befa19c1-5d55-45f5-ae99-2a939e8d9315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 72490936-e417-4be5-94e4-77c8868407ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 acaa6e3c-9ecb-4587-839e-c54135851d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 baf9cfdc-baa4-4de9-b22e-08e58b4f6389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 eed590b5-be9c-4d70-ac92-3cd323bf0033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 dcea5b73-eefa-420f-8892-7307550103e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 2c6ddfba-c790-42b3-ac56-51ef2c288f80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5875;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3744;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h606D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h5875, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #866 653201c9-6e0f-4334-8ae9-4c49af6f68f9)");
unit.assert_eq16(16'h3744, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #866 c73d1777-2bca-4134-8cff-3b8bccfd0c35)");
unit.assert_eq16(16'h606D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #866 8b907924-c465-4396-b32d-ad2e4647fcea)");
unit.assert_eq16(16'h37E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 3dad0155-e782-41f5-a7f5-b3c2088066d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 773541da-c13e-48b7-9bfa-b49a7edf98b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 9589f147-ff23-47ab-aea9-40f0604ff55e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 4b8c251c-52ae-4649-ba40-427bee93f523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 3bb5013e-a178-430d-9d08-8eac349d8fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 c3db7740-05dd-4cb8-a1e8-ba35bbfbb0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 d715f9a3-364f-4ecd-8349-ddc04d145492)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h99B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF5F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2689;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'hDB90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #867 3ae38718-3edc-4d57-a242-b86c493b52dd)");
unit.assert_eq16(16'h99B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #867 765b9166-de81-4d9a-8073-a1769214a4d9)");
unit.assert_eq16(16'hF5F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #867 31741fbc-4440-43b6-b504-9f58b788041f)");
unit.assert_eq16(16'h6C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 0c724dfd-7072-4095-839f-5345a27dceb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 f253574f-d87a-430d-be75-2131a8bc01f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 84297114-6a61-4d8e-a9c9-cb5bc4a33e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 4694914b-160e-424e-ba6b-7f6dc37200c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 15e2ecef-a40d-41d8-96e0-f1b5af8d8c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 4202989a-62a3-44cc-a9b0-e4e3a4ddeb16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 f79cb8c3-7c47-4238-ab41-05a8bbbb0801)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h375C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h040E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h375C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #868 4e8a33f5-af0b-416c-bb3d-b2f52f429dcb)");
unit.assert_eq16(16'hDC8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #868 0f2305ce-04ff-4bcb-a383-a1e367dc00a5)");
unit.assert_eq16(16'h040E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #868 3e64ddd5-3b3b-452f-8e1b-e637660334d0)");
unit.assert_eq16(16'h1641, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 37766c5b-b45a-4cbe-a2c7-3fcbc5f75de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 92b443eb-2fba-495c-8624-05a784951013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 2c8d9424-c62b-4f1e-be24-49c36213e0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 10a3c5fd-efef-4d99-97c0-e7553d0ebe3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 58155665-d93a-4984-9fef-7651804c8383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 bf75a3e5-274b-4c97-9de6-ffcd4125ae57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 2f7f3e7c-1722-43f4-885e-576e2785baf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA266;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9436;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'hA266, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #869 25703b84-b66e-4019-9c82-7505af09fa65)");
unit.assert_eq16(16'h9D15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #869 13711865-5462-4200-8e13-2c45c9730e8c)");
unit.assert_eq16(16'h47B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #869 cce8c2d9-e584-4ac8-b058-3fbd674abaee)");
unit.assert_eq16(16'h92A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 3dcfd6bb-0643-4aea-b84e-0c326c412b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 2680bcec-5487-4470-937d-d8ef169aa0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 d06c8914-3a2d-4e1e-96da-0d55aca36c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 fb105cb3-551a-45cb-bb7c-5ea5fe8bbdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 94f0c70b-8570-41d0-ab4a-de7ceea49ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 1a89f8df-9c3d-4da6-963c-0a41ae026ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 e9bc1dfa-d0eb-41c3-87f3-336657f42c21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8985;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4093;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8BD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h8985, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #870 7477d19d-ebc1-476e-97f1-7c187f701a67)");
unit.assert_eq16(16'h8A59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #870 3d7f9061-0cd7-4132-889f-1cb9f31d58df)");
unit.assert_eq16(16'h4093, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #870 063d6b2d-d7fe-4c4d-b240-c412cf782367)");
unit.assert_eq16(16'h70A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 70b57042-8600-40fe-a3d6-c4b5b21a26d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 512204ca-50e7-4d06-9357-9a2ba16c9702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 68a0a5c0-3f47-4a12-b928-406bf51bec28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 d5167500-2c47-4e17-94ca-7aaa9ccc7ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 670b033e-30ff-4198-9e83-52091b3309bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 1cddadf3-3e08-4d97-974a-23a310def6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 10ada3fc-e699-4ef5-b436-0d8b71645e23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6FCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h401F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'hAE15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #871 e147721d-edae-42de-90c8-c8ddf6ff2b57)");
unit.assert_eq16(16'h6FCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #871 42733bda-4846-4e8d-95f9-8e6ac6376ede)");
unit.assert_eq16(16'hA195, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #871 87f7bd91-2503-45af-9451-d10b025a99ca)");
unit.assert_eq16(16'h896C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 4b3a1f83-3b32-4b34-8450-80e929ffa7fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 87076e0d-4bc0-4362-a19e-4c036c149b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 c3b02be1-6819-421b-8fb6-3b11e3b94914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 cd83b70b-9679-468a-9c84-7f670609324f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 2ce1c270-9538-403a-ab03-f879a70f8c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 37bb37fe-bb4a-447c-8957-621de0b8ff4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 a0dca1de-fd74-4085-b18c-18e22d829501)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h64FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #872 d5738608-b2a7-4f6d-bf1f-f43a39c8c0ea)");
unit.assert_eq16(16'h9A0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #872 adcb408f-2341-46df-b687-9176c626ff9a)");
unit.assert_eq16(16'hC4B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #872 9072e6eb-a597-431e-8d8f-da2a5ec17b45)");
unit.assert_eq16(16'h30DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 ae31ea44-e981-401d-b807-990f17489c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 8927bcff-57c2-48d2-a892-e75e22fd3f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 a4eb7dce-3ef3-426e-8f2b-a75597ace3a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 790b12fc-d916-4f5c-a0a3-34409f8aedad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 fa69d914-9880-4d19-b3d8-6d6b9fa0f260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 1f3ca46c-422c-438b-9a63-651443c0cdb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 9522d034-0171-4387-b0be-bee999845525)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1D5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCFFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAA67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h1D5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #873 dfa1a2bf-1fb9-45ed-842a-c26bcaa359b1)");
unit.assert_eq16(16'hCFFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #873 d67b48bb-d39a-4d82-80cc-beafccce0d80)");
unit.assert_eq16(16'h64F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #873 df29a578-a82e-4408-a734-90d3d23a3db6)");
unit.assert_eq16(16'hCCD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 d7c17594-3f5b-464f-9bde-7b4d443b5b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 18f570c0-80e6-4cd9-9bd9-1822516d50b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 01195f04-7d20-4978-a008-1931dc8d5ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 f5f2b729-847c-4553-8154-bfb06d419ab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 87df2606-8a1f-4a3f-8aa0-a57e5539a65d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 51c1020f-baaf-4700-aeda-5a12b30ae25e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 2ecc884a-39cd-4a9d-91ae-2d0a4ea98fa3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF989;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD54A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h5F23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #874 664a1729-2d78-4c94-a084-85b8b7163196)");
unit.assert_eq16(16'hF989, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #874 47ed0323-6315-4bc1-94a1-9428b7a9f2ed)");
unit.assert_eq16(16'hD54A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #874 cb36ca40-56bb-4554-9608-a885bc9f71c2)");
unit.assert_eq16(16'h4E6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 84ba7b4d-ab3d-437f-9736-19a176369824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 68cce5c6-321b-4fc2-a6ce-55b3a7e19161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 a4db197c-a961-4804-bb07-16007b8fad0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 8d779175-4838-4410-ac92-2c61bd52732c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 8bd39e29-7f82-4d7c-8d45-8674984c3857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 14e2cf20-e400-4a57-9602-62bb8c84d6de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 e3d07dee-2e5d-4445-a1bd-e9d2d6f231f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEFF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE94B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'hEFF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #875 b8a172c5-b450-42b2-ad12-458c3684179e)");
unit.assert_eq16(16'h80FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #875 355a8054-7f9f-4c67-b3c7-47781843dcb0)");
unit.assert_eq16(16'hE94B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #875 dfd4e920-1a37-4264-973c-f23b4a057114)");
unit.assert_eq16(16'h1B04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 86f472ac-d4ed-4dbc-8517-e35045709539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 26a1443d-776c-4e2c-91cb-4c40b1ac54d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 bd01b5c7-b388-41d0-ac41-34030fd391fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 265203d5-3aaf-4990-b7a8-2ab63e054036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 49e2648e-42af-4d49-a1b6-6a961c4ee361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 5ba82964-5804-4da3-8336-216e5b1f4d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 7e154a28-b9dc-43bc-8aa0-0e5c1b44e6fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h964B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB387;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h964B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #876 b7715b2f-ee60-4988-8098-ec7c6fff211e)");
unit.assert_eq16(16'hB387, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #876 aa715843-de67-417c-93d0-731bdf502e29)");
unit.assert_eq16(16'h40E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #876 548fabdc-bddc-4e7f-979e-9c9db82e012f)");
unit.assert_eq16(16'hE954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 0cb6acb8-5a39-4815-8864-e09904196fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 5317467f-879b-4335-bd1c-516dfd600012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 1b909c95-d748-4a92-badd-c7a66ba76a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 424eb7cf-5764-47b7-9519-c077f9c94a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 6958948a-ee89-428d-a73c-c1aa61eff959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 60aa013c-dbe8-41c8-84ac-67d86e30fe5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 222cd38a-7bf6-4cb4-9b7c-71e7a06be245)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h14AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB974;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h14AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #877 09a55b27-e3e2-453a-86f2-1a80eb30b7b7)");
unit.assert_eq16(16'h46A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #877 582ee891-a0e9-4dae-a52c-8de54f5deb2e)");
unit.assert_eq16(16'hFFBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #877 319ea769-c24b-416f-be19-b45f570bc11c)");
unit.assert_eq16(16'hFC62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 e00d409a-7991-40f3-868f-802fc5455841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 27f078b2-e4d9-4322-98cc-ea2cc17a6c5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 044666c9-07d6-4941-bd79-b12ccb62a85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 76c32a09-61c0-458b-9fa1-2cce9879ee6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 072fcfca-d6a0-4213-bf45-5126c15aeaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 63c3bddf-a366-4059-a4d5-868b9670e7d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 3cac2721-ffe3-4c1d-8950-1428c1ffdaa3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC02A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3192;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h399A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h30D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #878 48c2da70-5383-4982-887d-c34f3c0ecff1)");
unit.assert_eq16(16'hC02A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #878 86d1a36d-a891-46e7-980f-56dc20c69fe1)");
unit.assert_eq16(16'h3192, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #878 698e1056-1d70-47f2-a3ef-47dbf9e30ec2)");
unit.assert_eq16(16'hFC2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 bf28f45e-3ca4-472d-a741-3aebaea7ee0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 07f9d42b-7b0a-4cee-924b-8652d388743c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 d46f174c-e588-446d-9c30-e37976795f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 4556516f-fcca-4d83-b658-e5c0a4eaf0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 2b36d249-41f2-4561-9b6d-7bf71411ba5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 b83240da-9e88-478e-b336-ea6cb8498adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 0c7fe52e-74b9-43ad-b5e7-3350559a1cc1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h971A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7ED5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h508F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA618;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h971A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #879 3da014ee-c461-4cda-8181-0852885c5c87)");
unit.assert_eq16(16'h7ED5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #879 b8c57fbb-b4c6-458d-be47-85be0edfd634)");
unit.assert_eq16(16'h508F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #879 46a3b37a-0a0e-4277-9f14-e7332ba79d2d)");
unit.assert_eq16(16'hF439, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 d4a88f97-04df-4b55-a3ad-10986566791a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 3d08fabe-7f78-4cd7-b80f-b48a24aed53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 1b7dcd6f-8d3a-4eca-b58e-e205a85b563a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 7c692b29-959a-4a9d-8736-3375aa3ed393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 d92c7d80-bdea-4f2c-b17c-e4fb22167342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 91139de7-8117-49e9-9a85-6e0319549527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 b086c519-136b-4288-895d-8dc5ae6dcca7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h917F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA922;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'hCDEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #880 e42a1b6b-8e61-440c-b3c5-48105e4d1516)");
unit.assert_eq16(16'h917F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #880 63b25a25-06f5-474a-b480-96f85e7e278c)");
unit.assert_eq16(16'hA922, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #880 61658b7d-ed5d-4852-b7ab-532fe7a243df)");
unit.assert_eq16(16'h4278, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 7d030b53-c164-4018-9fec-a84ba2071fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 2ea9b4c0-0d80-4e03-88ac-13e4bb0fce92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 5e417d20-d1a4-4f16-83e2-71d0c1a62d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 6d3feb9a-67b6-465f-b942-485cef19c560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 52b2bdac-5fd1-49b8-95a7-8dd04ce497e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 3f0d64f1-a3be-48a7-8a01-20956a747510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 6bc6ecb6-c965-4d18-acb0-8ad5cfd99112)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2231;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB260;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE693;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h2231, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #881 77a0d150-2e0c-464a-8a21-9f4c1185851a)");
unit.assert_eq16(16'hB260, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #881 eb119dc5-2ac0-4101-b1cf-d7d03c055bf9)");
unit.assert_eq16(16'hE693, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #881 e8900a7e-836b-4ddd-b1b1-2a5797b96ab0)");
unit.assert_eq16(16'hFD15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 326a4419-b8a8-49ad-906b-77db4079a8d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 31d1d813-ff99-4178-80d0-c5339f476e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 7194ee33-7528-455b-9488-da03a015cdd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 7344f1e6-1555-44cd-95c0-2dbf5cdca5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 a7b73071-4ac0-4014-80e0-3f05f5e4cd69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 026b0275-21d9-46cc-93ff-25f03bda355e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 0c40897e-2481-4859-80da-6b6678b6507e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h77DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h866F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4DAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC42C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h77DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #882 cb7c9711-9659-4045-9003-96cf7e62f05c)");
unit.assert_eq16(16'h866F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #882 62bed91b-fd85-401a-bcad-474f36ecde08)");
unit.assert_eq16(16'h4DAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #882 ff9efe21-6b37-4352-b43e-23b356c6deab)");
unit.assert_eq16(16'h7B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 2e4da110-6f3c-41be-98da-7372b5f4ff1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 e57e83e7-0e50-4e7c-9ae1-ce8c98a4a0a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 209a5e8a-a680-4b46-9673-b679bbee1bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 d52fbc42-4484-416f-9539-55694556c7f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 78102fe2-73f8-4f76-8702-5cfe36e5a818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 9715afa2-eb9e-47a0-966d-3e7a91d5dda4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 4cf85d0c-2048-4868-9666-44e452ea9479)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0B70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9193;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0B70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #883 3ea3a5bc-0495-472f-be57-166d28a2e773)");
unit.assert_eq16(16'hE3E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #883 0d84974d-1dfe-4774-98e3-8487d03d5d91)");
unit.assert_eq16(16'h9193, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #883 c3a51b88-20d1-4f96-9b82-13f175b24944)");
unit.assert_eq16(16'h16AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 fc019bf7-67b2-4786-b67d-a6e8c3eff860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 e2337ab6-2e75-4482-9a31-e0047d7b6f82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 678e45e1-da82-4958-94c2-d8733831a086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 dc2ca4d4-631c-490e-a6ae-2f5039f4b0ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 19dc2ee9-c06f-49a1-917b-661c6981ce8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 0dc6ebfd-5316-43e9-a6a5-b350d3971bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 26800bd8-61fe-45e3-94a8-3651aeaa7fc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h1E3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #884 cd463db3-2f23-48c5-9bde-b28b0c2b36d9)");
unit.assert_eq16(16'hED60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #884 adcf5fd7-4a37-4c2c-baeb-3c287ea22feb)");
unit.assert_eq16(16'hDB0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #884 7736279a-8832-4231-97a8-3d93955e3f5b)");
unit.assert_eq16(16'hC4E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 f5d80c78-6b1d-4f1a-bee0-4d14264cbae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 b51695a6-fbe6-4136-be67-6a7bf07307dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 2deb43bb-51da-4703-88af-1cba9195321c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 7c2aac7e-99c2-47c7-a356-9ded323f794f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 357594d8-ec46-4f17-892b-78669f7b42aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 fe0d5776-b826-4d7e-b527-36c623a34535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 70a75c45-c85b-4719-8b4b-fbb85be54fad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6029;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0852;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h6029, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #885 290a175d-f9f5-46d5-b1c2-e0a59e3dc886)");
unit.assert_eq16(16'h2D7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #885 cbcbe36f-2a3c-43b7-9226-48f4dc9b8777)");
unit.assert_eq16(16'h6109, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #885 02b6c29e-60b5-4223-9ed6-2a261a3ca873)");
unit.assert_eq16(16'hE912, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 f0e5f8a9-7189-48dd-a37c-fdda52240fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 8de13817-1336-43e7-9145-0a344b5bf32b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 94e86d78-9ab0-4c53-be83-a3e584c0c0c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 58c67d2d-7b44-4da4-98c8-361258eb68cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 818891da-9296-4552-b8da-40b9b25005e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 06f61a52-a23b-4f92-8552-de16f76f392f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 e134b629-c0bb-4766-a523-b92fd90818f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h42C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h50F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h42C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #886 797290f5-5fda-4142-a228-ba5432616b6c)");
unit.assert_eq16(16'h81A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #886 087b51b4-5176-494b-bd51-77fa6c7bc9df)");
unit.assert_eq16(16'h50F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #886 c6b00a12-4b48-486a-ac3a-81a7278ad805)");
unit.assert_eq16(16'hAA58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 4b6e31c7-bacb-4361-b177-a1bd29509c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 6d89b489-2491-4547-ad4b-d21cfb33f765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 868c7c02-20a9-40ab-8119-263138c80672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 45daf332-cbf8-444b-9b38-1224a24e5640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 1c890e7b-54d8-4aaf-bba1-aea3070e7317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 3ee3317c-c9a4-431b-9a35-e88cf28e61be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 4dcd4a90-fc5e-4bf2-adc2-385cdfb96c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD8F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4FC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h6A16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #887 233acf16-a6b7-426e-b62a-2831b2d42528)");
unit.assert_eq16(16'hD8F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #887 a8a37096-0da8-49cc-bea4-9406cc7f4b6f)");
unit.assert_eq16(16'h8BAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #887 d1c3bdc7-fb12-4712-82fd-dd217f53775f)");
unit.assert_eq16(16'h95B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 2a538a96-ef9d-4f59-a1b5-a0ef944feaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 6d2a54d7-9225-4082-85ea-f5e4397f7dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 cbf48d6a-432a-4fc6-b93b-3eb13a74f6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 6f81f7af-4f59-441f-ac6b-ab6ccde27f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 e19cdd0c-071b-4f3a-bcba-567b70183b40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 6380cb8a-b7b1-4658-b170-c1e5e17b1edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 f7e05a16-75e1-486c-916a-bf0e51ac22d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3159;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE700;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2755;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h3159, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #888 01a3d709-b3fd-4f98-8a1a-f255b72db626)");
unit.assert_eq16(16'h4F6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #888 9ee5359c-640e-45ec-804f-1e461e2e2b97)");
unit.assert_eq16(16'hE700, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #888 07f6cd9d-7afa-41ee-be7e-fd5df2491582)");
unit.assert_eq16(16'hAF00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 488c016e-eb94-47de-b12f-82fbc4df391c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 ae865aca-a118-4559-864f-3c03ee7c12db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 02a2003f-484d-4e60-822f-ff9d6f5d5cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 848c7364-60f7-4d52-83b3-f8c014c7ecc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 654a273e-df87-4660-9757-028ba1f676c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 60a79f3b-949a-4345-86d2-f963a4550afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 c5f1d522-4b2b-45e1-b0b4-164f17767ab5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB206;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h253E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8BDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'hB206, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #889 8ec91b11-3f33-4b5d-a8bb-13dfd76cd2ec)");
unit.assert_eq16(16'hE0EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #889 283b2437-e7d3-405b-b38f-5084be83993c)");
unit.assert_eq16(16'h253E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #889 c504bc34-ffdd-4d0b-974f-f27428f220de)");
unit.assert_eq16(16'h8B1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 404d3020-44c7-4ecc-bf49-44152bbee0b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 020d7539-1374-4a84-84cf-c1ffedd828b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 9186938a-e22e-41b1-84d0-21a37896f096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 f3850b75-154f-452a-a3bd-7436446033ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 3b83078b-8d1a-49b8-892e-05817c871874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 f8d768c9-71f0-4d05-b931-67e8b1274150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 a33c8661-49e2-4d4f-8c09-ad0338128821)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h80FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h736A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'hBA0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #890 a7cc5af1-ce31-4ec0-bd9f-4dc55583aa59)");
unit.assert_eq16(16'h8F30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #890 30eda86c-362f-45fc-86ed-3d682b646b8d)");
unit.assert_eq16(16'h80FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #890 42c87dfc-ddb7-4748-b49c-bc46b6f3ba7b)");
unit.assert_eq16(16'hBC5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 5d9ea314-b8f4-4ca3-af72-3bed378aa1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 f691539a-f2bc-42b9-bd09-39988f96b2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 56101098-85a1-4975-927e-a667c81c66b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 62202d28-2cc5-4e4e-995a-a2e41e5c9038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 99579908-1d1d-452f-9a4e-714d551c8abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 03fd757c-7219-41dc-a724-c0b79b926888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 61061b8a-d7e5-4749-9c8a-f48df0efd9ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE230;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6FB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC61A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB434;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'hE230, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #891 1243d9af-d8f3-4143-93bc-b583301064f3)");
unit.assert_eq16(16'h6FB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #891 e4e47ea4-027e-4933-9b14-05083f97dc3b)");
unit.assert_eq16(16'hC61A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #891 48f7c679-48fb-4df9-9e7e-918bf2f97cd8)");
unit.assert_eq16(16'hA8C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 ba95c5bb-c3c9-4bae-8512-1fa08c2fb7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 96fc88b3-617e-4474-a648-ed2227d5a0f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 b56327d8-8ae6-456e-959e-4374f39d3275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 eecf7ec9-e000-40b8-a901-4af4421b7c33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 731a0206-9f52-40bd-b7c4-782945d2a34a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 23521952-7815-4bdf-b798-47d953049055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 ea773fd0-2263-43ef-a4a6-654adc5a4582)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h09F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0635;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE225;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD372;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h09F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #892 5ac14966-8252-4333-9289-06cb4d9dd667)");
unit.assert_eq16(16'h0635, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #892 a97f0ec5-9337-4a6b-83dc-ed4fa5b06414)");
unit.assert_eq16(16'hE225, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #892 136f60e9-cab7-4c16-886c-fad298ab7c0a)");
unit.assert_eq16(16'h1C0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 4af9c6b7-0837-432a-acc9-fa8f0272c6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 e38f3689-57bd-4180-a28d-a7a0a58cfbe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 cdcf944e-486c-4a37-a287-f660a605872a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 289dd025-cf00-4a4a-a2d5-a4a1a1f61876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 77f89bae-8392-41ec-a2c0-3c206ef672da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 d7f799c7-7aa5-43f9-8102-90130a526ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 7da36940-6e35-4598-96c8-f3995d582ffd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABFD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6326;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC2FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'hABFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #893 e9bfae9c-494b-431a-94c9-4fe9d6a0caa5)");
unit.assert_eq16(16'h55A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #893 38854c53-8317-40e3-9203-7961e94ee110)");
unit.assert_eq16(16'h6326, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #893 535daf27-13c6-4256-ad36-13004904a0c1)");
unit.assert_eq16(16'hE64E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 dabb343f-ce0f-491e-97bf-e4930cbf7b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 320d589d-df72-4578-9d12-dc918b0d749c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 36cc350b-01b1-4ed0-831a-387470fcdb2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 c346a9e6-cc67-4955-89ef-d69494a0f326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 e719527a-5fb4-419d-bd8a-2f7159163909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 f463ef54-a5e6-44db-b369-7a98dea96438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 70beb8e5-888b-45f1-a5b2-58dde9c15dd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF589;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB541;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC691;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8193;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'hF589, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #894 6c74eac1-0597-4294-bfbf-9370ea4a0827)");
unit.assert_eq16(16'hB541, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #894 1032487e-d018-4874-a081-ed3b52936f16)");
unit.assert_eq16(16'hC691, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #894 b215faf2-1079-4fd8-80b5-4a62bee94a8a)");
unit.assert_eq16(16'h28E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 90d40539-24e1-41dd-8fe5-747c5a6e8a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 3bfc4920-c4f3-418d-b439-57af50675712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 a79ef381-ca37-437a-ac41-15c63f55a824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 e0fb0c43-3d75-44a1-a4f2-711d3fe15a3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 6eeb95d3-cbbf-4e79-ba4e-9cabb5380056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 ff2545ec-bf0f-449a-bf77-8e1ea12510b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 a23e1475-b3bc-47f3-bd0f-cfe2e79b9301)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2410;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'hABC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #895 48e6515c-35fe-40f4-a884-072ba3a5b8e2)");
unit.assert_eq16(16'h2410, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #895 b65390bc-98c1-4d0e-86c2-d9fef8df169b)");
unit.assert_eq16(16'h4C23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #895 221e71d9-fd08-410e-8966-4bc6fa195f63)");
unit.assert_eq16(16'h1756, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 1fd5ae5b-5383-4a87-8a83-419c0c614777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 89fc003c-1467-47d3-89fe-6f16bb86c733)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 41ff53fc-7251-4c4a-96cb-cebea5e66e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 cac0e5a1-b3e9-4caf-a6d5-5e0512d2a6d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 7b0074cb-7d87-4600-98be-e4bf8724c341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 6d5dad72-a33c-4682-a4b0-3ac7b62abbf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 e4b3183f-ef3a-42fb-9c9c-8db953be2ec5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB20B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1776;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'hB20B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #896 4ef11974-3cf5-4057-aad5-c0835d62e19b)");
unit.assert_eq16(16'h1776, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #896 ec342e55-1789-4bef-9a48-099975296197)");
unit.assert_eq16(16'hB880, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #896 0bed7a88-2a16-49be-b747-27e63f4554ca)");
unit.assert_eq16(16'h5C00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 ab80b31c-7f0d-4ad1-9908-0df7266b5b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 390b27e1-14c4-4fb7-8228-ef5faf80858d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 989fed75-c444-4156-bd92-f5556b76a818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 488c34b8-9b88-4b97-8f14-bcff1b4d3804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 180c9c0f-0678-42f8-96f4-67839dbcb92f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 7de09c3c-a744-47b3-bf15-ccf5cd4b30d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 9524478e-631f-4ea9-9155-77e904bf3d04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC812;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE171;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h5D2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #897 0cc47e08-24b8-4b1a-aca1-faee5a813f5e)");
unit.assert_eq16(16'hC812, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #897 62343e93-7af6-4fac-810d-8461d9ff5bdf)");
unit.assert_eq16(16'hE171, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #897 323cac13-a042-443c-96ff-c8595a057eba)");
unit.assert_eq16(16'hE4A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 ae036689-410c-4a86-b02a-3ceac4ea7511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 36857853-a8f6-4cde-8275-cd11b9cbc960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 a5dfa69a-a654-4ae5-a8f6-c83d6a296251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 34970c30-a964-49c6-a656-892da0593aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 419eb3e5-aa5e-4958-bc9f-830a1b746381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 628b9443-ad5b-4563-bc5a-1515cfb13652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 59e44021-220f-48e4-847f-6efbfb973e76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA5E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA1A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3845;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'hA5E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #898 b290b585-f14f-4759-861c-ed35443c9698)");
unit.assert_eq16(16'hA1A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #898 6d9a0027-1865-41bf-b96c-e2b33d8a9f37)");
unit.assert_eq16(16'h3845, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #898 0fb744f7-b834-4b6e-9137-5ac1893dbfbb)");
unit.assert_eq16(16'hEBDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 1cad3fbc-ef8c-44c6-9649-1b6c1ef73135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 65973915-76e1-4b09-9800-90fbcc9f0389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 7e38a9d1-8834-47f6-9314-6132f18a53c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 9d8cd8d6-3358-40f7-b857-41da09334188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 32fa6675-dd78-42d5-923b-89a482f3bf02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 af1c0b48-b225-4a9b-a265-8652972b73b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 4c7cb5f3-7050-426e-be27-589bf17d3575)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCCA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'hCCA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #899 575a3e29-99f4-4694-9706-4388f2fd8cfe)");
unit.assert_eq16(16'h12E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #899 faa8349f-8921-458c-91dc-fba55b42101f)");
unit.assert_eq16(16'h5375, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #899 6bb4ee40-392c-41e0-b377-01a61970684e)");
unit.assert_eq16(16'h2784, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 2a57cf10-746e-42a2-bea4-4dcf79842b6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 3fff8339-ad3a-40f5-be57-dedb48329345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 8b866374-9090-42c3-b8bb-0fc211359feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 4ac62bd5-9e82-4ec2-a6a9-79f7606f2139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 ab58c49f-36f6-4873-9f38-8ac86bd31cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 9d97743e-cc37-4c3f-955c-c200554f963d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 4d5ec435-2685-4b10-8414-1f2f63766c84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9DF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h52E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD50F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h689F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h9DF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #900 0704c8d9-9426-4876-bd11-92577077776e)");
unit.assert_eq16(16'h52E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #900 31ac0fea-cbc7-4ffd-ab69-f00d7eaa2fd7)");
unit.assert_eq16(16'hD50F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #900 d8497f4b-c570-4645-8086-40c384458a71)");
unit.assert_eq16(16'h19BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 b96ae743-b22e-4f70-aed5-0ced9db468f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 972a02c3-1529-4562-8694-f3e1b8527190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 622216b3-0df3-404f-92b4-edd6ddcac2dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 45ca4f0b-9309-47f2-8f21-98c745c472c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 0830e8ed-bfd6-4c37-b832-76b8043617e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 59e3b767-04ce-428b-a713-07fdc99beeee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 ecb5b4ed-acbc-4c6c-ad53-ae8f39b452dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h41E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC772;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h279B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'h41E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #901 b262c024-5172-4113-8d43-fdad92ce98ab)");
unit.assert_eq16(16'hC772, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #901 33dd52c0-f955-452a-bcec-14cf619edb1e)");
unit.assert_eq16(16'h7C2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #901 748e3a4e-b177-44d7-b27e-37373e2266f8)");
unit.assert_eq16(16'hCC2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 b3edff02-44b6-409f-b2c8-27e696f36989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 999fa924-d891-4d13-bdf4-f6008c52f94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 adf00b84-6968-458c-9873-33475e507d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 1388c3c6-c3a3-41de-bc38-dbf8fa04861a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 6825d23c-563e-41af-9a85-95f1ee388cc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 8294384b-6bf9-41d8-bc3c-aea55880c32e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 3198a1d8-0dd0-466b-868d-e90da9526a68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE2DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'hAA6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #902 c949e025-c6ee-4b2b-a491-ce918b3ff317)");
unit.assert_eq16(16'h82EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #902 f5eb2e29-adcd-4a90-a4bf-8d0fc49f3eab)");
unit.assert_eq16(16'h78F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #902 70dd4c88-fa28-4dcc-adc4-ff9a4e559ed7)");
unit.assert_eq16(16'h4B01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 21719051-6c84-4bf8-b421-6c98e5034bc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 7be4db72-cfcb-455e-bf86-5bafa74dbef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 05bfc430-0ee5-4903-b266-3f89aa0b300d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 306384da-b397-4927-bdb4-05b6f5a18bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 5e557e53-019d-431a-8fa3-632f122647c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 652faad9-019a-4745-8799-6a5eb8d05ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 e4fdf2c8-2068-4b78-8dda-b440c4f30fd7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h99B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h79BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDAA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h99B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #903 f816c407-15af-4402-b828-cc725700bfb4)");
unit.assert_eq16(16'h79BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #903 0c259eeb-090f-451c-bc1b-744b6416c9b5)");
unit.assert_eq16(16'hBAB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #903 e7b22d4a-06fe-461b-a4c4-671950a1aea0)");
unit.assert_eq16(16'hDDD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 29144cc4-3d13-464a-baab-1d885c9f176d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 004397b3-ddf0-442d-b4f3-147f9ea31494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 427590b6-96b1-4bd2-926a-96d7c86e2cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 5a76381b-faf5-4ce2-8680-b870df7c2170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 1c899871-813d-4121-a834-96061d3dad46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 b595827d-5e65-4180-a807-8e6fa244f6d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 1cd0f73e-7a13-464e-9634-d054a6a6daba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD76E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9258;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'hAE19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #904 967e48e1-cd14-4618-b75c-b7c2637d9639)");
unit.assert_eq16(16'hD76E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #904 b8823f0a-685c-45ab-91f0-31e22f612426)");
unit.assert_eq16(16'h9258, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #904 cb454673-15c4-4ec0-b4dc-36e4b063fa8a)");
unit.assert_eq16(16'h91E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 32e20310-4cc5-4989-a14f-8af2be97e52d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 f1c5910f-6c02-4628-8838-645f38335e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 a0a0980b-bdf1-48e3-996e-d1cbfe9bc6d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 540b3e84-0ba6-4927-b3c4-0833e446e898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 3243f856-d2c5-4554-aac2-ae1151eb10e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 6a4e1bd8-b8cf-497a-8e84-58fef7c1f1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 10272ee1-4f13-4563-b6c2-14918c7b7333)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9079;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'hCE63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #905 12fa75de-2244-4a1b-9d27-8a86e7b6f5cd)");
unit.assert_eq16(16'h8D22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #905 72098dd3-53ce-4ab6-8100-c2078ff26c72)");
unit.assert_eq16(16'h3B4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #905 c5a4c440-c510-49e5-a886-b40b6e7a22a1)");
unit.assert_eq16(16'hC337, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 9f97f2bf-d8e8-430a-8b3d-42b2c7a4e22d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 4f6c0c61-3d6b-432e-8bdd-f6058e58318f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 7748abfa-63ad-411f-a9b5-b370b5751da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 761d2061-d233-4248-bc70-26090d5c9606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 6b39264e-aafe-4b2e-9245-0073f3b6d0ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 5f55736d-2591-4ca0-8ebc-3739c53ee00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 f5b64ef0-bc32-414c-ba52-2ce912f14797)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6936;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA22D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h6936, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #906 92c374b2-52e2-401d-a830-5fe0755ae74c)");
unit.assert_eq16(16'hA22D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #906 203aab98-11c9-4fee-bd75-606f23fef6af)");
unit.assert_eq16(16'h8BF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #906 1983793c-9fc3-4f45-acc5-fd2d9123c2d4)");
unit.assert_eq16(16'hCB35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 be5804ea-7cc5-472b-8958-445f94f53e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 a96d574a-0ed5-456d-aea4-6cdd722e1f8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 6313217f-587f-4e3c-8a7f-24297f99da36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 1895e479-3451-47df-bbeb-eb8065f3233b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 411e709b-d775-47a9-93fd-95a5cb726d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 b567c6be-bcd5-4e93-872c-5ee261978965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 e75aa31a-616d-4a3e-88b3-dd436b21578f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4777;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2730;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC736;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h4777, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #907 7c05b29d-d95d-4d95-89ac-edc097731458)");
unit.assert_eq16(16'h6B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #907 6586567a-69be-4b31-b367-713b1e52cfa5)");
unit.assert_eq16(16'h2730, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #907 78674a5c-caa5-4d0b-9508-f9105ebbdafa)");
unit.assert_eq16(16'h07BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 695c9d77-5d58-4346-9354-d0935b29eb30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 e12c02fc-f307-4e63-bc10-a0e16fb0189e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 5f17f541-5db2-462f-ad65-e2ede37e7e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 74776725-df8f-4361-a306-3fd09541da9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 1e226a0b-c4a2-48c2-ba2d-ab700bbb8730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 937d4303-46eb-4ddb-b940-ba6c8a726ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 30627d41-6161-44a1-ac96-734e71a3cf65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0525;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'h0C41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #908 4908e480-701c-45ee-b92e-8726dd3df9fd)");
unit.assert_eq16(16'h0525, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #908 1912be67-5e24-494b-abe6-e89f82fae63f)");
unit.assert_eq16(16'hEE9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #908 f2269f19-e0a9-4b45-9e7b-4a8a8a0908f2)");
unit.assert_eq16(16'h56CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 75a76d84-7a4c-4b72-a953-bc280dea3d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 d98744f1-9f7b-4925-a10a-3c7df5f6f12e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 46d599dc-fb12-41f8-8da9-011d902c175e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 c25ba0dc-fb52-4923-b3d2-cb885e3c593d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 b85ccdf8-27e7-4f26-a17d-7ec047bdba9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 a0621cd6-75c3-4938-afc5-366cffa35a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 c17cb62f-0995-4ff5-85a5-5884d8e03619)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA3A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h09B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'hA3A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #909 3d6fa433-fe4a-4aa2-96b9-251d4ba796d5)");
unit.assert_eq16(16'h09B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #909 a207ed20-175a-4d37-9ca4-4833a03651a5)");
unit.assert_eq16(16'hBB81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #909 0aaf5d8e-d3cd-4578-a973-ff438923fd92)");
unit.assert_eq16(16'h6247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 f7aa3b83-4b01-4e1b-8891-9096708975e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 f2f62457-7402-4726-b3f9-0e450083e1ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 60f388a6-3e77-4965-9dae-1ab92c1008bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 9a53d444-8601-4017-b0b4-5a4570fe6a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 394994c6-2ef7-451f-b994-635ce28ee5c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 4d334d57-9a02-4d2f-a240-3a46ba1c6f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 c24eaab7-d34b-40ad-8c16-26da6c67de40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB211;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h432A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h9E71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #910 e7331966-56dc-4e97-9395-daf107149ad8)");
unit.assert_eq16(16'hCF66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #910 1c12d468-5ffd-4f44-9658-647fb7659d8b)");
unit.assert_eq16(16'hB211, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #910 ed25d51c-8535-428c-a9d4-c01f2e1fbcdf)");
unit.assert_eq16(16'h9979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 3ec50349-8609-4e36-b6ec-1b886e3c30e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 628551de-1d56-4f29-a3b3-b9954b6af15e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 d33d31dc-31cd-4384-9160-1dfe1b3de68f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 d48720b3-5079-404f-ab40-684703dee9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 b3b9e8ab-c010-4f0e-b744-26f33225c331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 3a7b761c-7c15-4be1-a08b-61e51be3c1bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 99d5d783-787a-430d-91cf-890342ba5235)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h21CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5766;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h38CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #911 52633ed1-91ff-4476-91b3-b55c2043689a)");
unit.assert_eq16(16'h21CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #911 ed6fa07b-e016-45f1-85d6-d149f359f549)");
unit.assert_eq16(16'h5766, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #911 775de676-8216-4346-8cdd-b5f0aa203f24)");
unit.assert_eq16(16'h3132, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 7057d068-931b-4126-a9a8-b403ce7aa362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 a352dfc9-7c44-406d-9605-daf8c3a2eeef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 521282a0-021b-429e-ae60-02de447bf93a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 5e31a4ed-0a3a-4496-902d-501a999c6038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 7a9f4bca-6ef6-4a7b-922a-ce1170c51295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 eefa77a3-8cba-413b-978e-3e29c58963c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 1e1b2016-6e47-4cea-a4aa-4e56b87181f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h546F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h84F9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h96DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'h546F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #912 57f09b18-5064-4b1c-b653-99cd664bfc32)");
unit.assert_eq16(16'h84F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #912 b14734ce-1fe5-4359-a4cd-7dfb90d3df65)");
unit.assert_eq16(16'h96DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #912 eb283d17-530e-48cf-b133-509225011676)");
unit.assert_eq16(16'hCD61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 510c92fd-cd42-4a62-8c8a-3bba911dbc00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 bded75b5-5db9-433d-960b-cc1d21332ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 ebe79f29-3348-4d59-b94a-8a7ed33527d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 d9716bf3-2779-4e30-9bc5-938ef5608337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 d23501b7-789c-4609-b176-abe66fd84df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 06a11ad7-481a-4860-b916-15589cc92b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 2090b301-2923-4819-a4a8-90627ac81e5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4CB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8972;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCF77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h4CB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #913 2cd6cdbf-d126-4277-8ce5-a9b2b9995ca7)");
unit.assert_eq16(16'h7B85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #913 ff8349c5-98c2-4665-b5f3-3d3612cd1978)");
unit.assert_eq16(16'h8972, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #913 4b21604e-3e3b-4eb8-b688-3db1dea7f959)");
unit.assert_eq16(16'hE85E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 bf5d2177-9bc6-4243-9d13-2da1b9742f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 156bb905-653c-4ebd-80ea-78eb988596a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 ccc848f0-a8b8-49e3-91a2-1a8a098d64a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 2d115dfa-4a38-49de-bcb6-7c2a9d69033f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 5e197dc1-5f50-4fd7-8a21-b85a6f76b550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 ff98eaf7-e7bc-4bb3-8114-cdc7cdb83486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 5cd9485a-be9c-4ab5-b612-39356c0cd3de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1C94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4AF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9565;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h1C94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #914 d0554233-179a-4ad0-b00b-5d37b79a0790)");
unit.assert_eq16(16'h4AF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #914 b5be0e13-e96c-41a9-a270-bf64184fbd2c)");
unit.assert_eq16(16'h9565, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #914 53d678c8-d21b-43c3-be0d-b337b520f6fd)");
unit.assert_eq16(16'h566C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 2b1657e7-609b-4c6d-8ae7-991defdbe3f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 13671ca4-83a4-4afd-8ae6-65472c25dad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 e2e77a86-0891-416d-ba85-035029d26524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 24e35801-df85-4216-96d0-ce82008a4e18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 01cf9235-3399-4354-8e84-7ba6e9b65bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 188523a3-5e2f-4b0c-a6f9-c235b6f98eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 f807b16b-fc5c-4f6e-9b0e-23e2e9a638db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h71F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5339;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h71F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #915 9036d759-cdb3-4424-9ab9-f345c0d2d70d)");
unit.assert_eq16(16'h5339, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #915 2eb52cb3-a6ec-45cc-b794-552e97e15aed)");
unit.assert_eq16(16'hBA25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #915 13d118a5-18e2-41f4-ae9e-dd19c4534822)");
unit.assert_eq16(16'hBBA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 686db334-1057-4d31-b0b5-31c448fc77a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 9dc152fb-8adb-40c7-a94d-7c370052c510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 d92f2044-f539-4162-9168-2d37090d0080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 d2303d6d-a949-4fcd-98f5-8f926502d080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 b8dc1bb2-881d-4eda-a3c9-f06034f2eb8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 37e07bec-244e-4eb4-b1a6-03849baa4307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 cde782ba-53cc-452b-b70a-b3dae316ea8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF296;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h28D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA7F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'hF296, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #916 529916ba-c041-4a44-88f2-43a31a4ff92f)");
unit.assert_eq16(16'h28D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #916 bcbd35ae-bc27-4781-af12-864486c34af6)");
unit.assert_eq16(16'hA7F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #916 41647c2f-5dd5-4e0c-96fe-78d7401b107a)");
unit.assert_eq16(16'h3285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 d5296182-422a-41e1-b814-98e2e397c6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 d57186e3-7ac1-4a6e-b9ed-e4ec065a9bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 6d9f053e-e376-479f-b9cf-e733450a44d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 401c8e09-a893-423f-99a7-2b7aad1f136e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 8ecb86d5-b4cd-45fc-985f-45611a36b820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 abcaca09-22d6-429b-9e52-6fc0c8fb37de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 c1e33c6d-abfd-4779-8e63-a57e79ec99b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5C6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA72E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'hE1F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #917 4bb906e4-dee3-4882-8f7a-487791fe375f)");
unit.assert_eq16(16'h5C6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #917 0465def2-441e-46af-a377-f194238448fe)");
unit.assert_eq16(16'hBF03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #917 1754eab6-4a50-4d7d-839b-abfd58daa092)");
unit.assert_eq16(16'hCBF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 4f5aa016-9c77-4f9b-a4f0-35d7f83a855a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 b13e94df-0228-4550-ab49-e21fb52e7070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 14a0c7a8-2aeb-444d-a7fd-a26fea92b3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 deb46d48-f94e-4242-8d46-6a6026003ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 98386048-a61c-445d-9aa4-9870f85495b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 4289a37e-7452-49a6-a9b2-b0dcdc57acf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 7617afa8-4092-4bcd-aca8-9ccd702b8c78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6D32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2446;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h6D32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #918 87ef0f43-abc2-4096-a0ad-3f57a0c8cc27)");
unit.assert_eq16(16'h2446, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #918 feec3a47-5808-4bcb-b47a-c029eab7d5ea)");
unit.assert_eq16(16'h8A4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #918 f31fb64e-8d3a-40ab-9a56-18a10490f570)");
unit.assert_eq16(16'h9F11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 4c073b0f-4eb9-437e-9306-66279f74f782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 8624c027-a5cb-4fb0-9c7f-8cc895573e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 6159d2a2-beca-48cb-af53-cd0c11aa7f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 4b28af91-94bb-4437-a0fe-70bc2a762ba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 7d229e37-f52f-4027-964f-54ea26910ca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 1ed97b2e-a944-4270-a2ad-7cde8bf4f3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 fbe9de56-bbae-4ff2-8c97-1289924d9bb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDCC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC3B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'hDCC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #919 6e30c84c-41bf-4e53-89c8-4ed3517ffd33)");
unit.assert_eq16(16'hC3B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #919 362348f4-6ab1-449d-96af-67e0738c20e7)");
unit.assert_eq16(16'h06C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #919 f32dd766-57aa-4ae9-a32c-9270eb05dcc9)");
unit.assert_eq16(16'h4559, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 afd12a34-d68e-4041-b0d0-6077abc53c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 3de0cc3e-9ea6-4694-a0ce-a628b9abdd05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 3173c5e2-5490-4879-93fd-6867bcf9093a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 f0e125f7-4fab-4570-b28e-b7cf39b3d5fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 1e59b646-1160-46ab-9e5e-e6e9942f6c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 8f7525bc-f309-44cd-8d19-d57d7347bc70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 f7d3b6de-c6f9-4d4f-af28-fa3470cdf108)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1C4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h329F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2DD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h1C4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #920 8095f3d6-fd07-4aa9-a14c-9a0bea403fda)");
unit.assert_eq16(16'h4E45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #920 62ebead4-035e-49c2-982e-19eeff645b81)");
unit.assert_eq16(16'h329F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #920 3c7182c7-03ec-4494-97d8-b5181696f628)");
unit.assert_eq16(16'h20F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 ac894d15-23f7-4bda-a499-2e6b349443f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 9c2897e4-d12f-4f43-950d-623c74cbae1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 4fc19568-d556-437d-8f6d-d8403e8c74b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 f3f136c5-f8da-46e3-9f93-e6ec32f79c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 63bd43da-eba8-4561-bcac-f26e0eb3c1e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 1f06cc09-bd83-411a-b40c-97df6b7ad9df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 050508ce-4494-445a-8ff1-96de4464f7e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9C36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h77F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h65CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD72F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h9C36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #921 6ae43b12-6c54-4a5e-a66d-d40780d0e441)");
unit.assert_eq16(16'h77F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #921 7d0e64c4-344d-4ce7-b229-8ac0699ff2ff)");
unit.assert_eq16(16'h65CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #921 6daeb9fc-112a-43cc-b38b-ab9de40aac15)");
unit.assert_eq16(16'hEDBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 5dc75bd0-6361-4081-92ad-4dce18c72903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 8768aebd-5d68-4603-a9c5-623c8a86680d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 80441f63-fd02-4081-8601-41cabd0dc3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 352fc870-ed24-4ea6-8c78-6ba38e6b94ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 e55a0ec7-3f38-41d3-9aad-2323a7c99d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 95ea0dea-cc6b-479d-8ab1-3c084e14a687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 7f48b628-7a7b-487b-9ba0-e80af61ad7e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7047;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4310;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5FB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'hFE6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #922 236ead80-1ac6-41c3-814d-c09149b9ba06)");
unit.assert_eq16(16'h7047, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #922 c6ad54e4-8547-4dd3-aa95-3eb77aa79384)");
unit.assert_eq16(16'h4310, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #922 f09f5c55-291c-42fb-bd99-5d56b88cdf25)");
unit.assert_eq16(16'h9CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 862ade8d-bf04-4a84-b91a-dd68beeecbbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 89041a55-f508-4de2-a92e-2d7bd8214631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 edc11bb4-4b78-493d-b052-7d3d798b9dd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 00ab73e3-8c85-4af6-8343-fde7efb517cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 7dd591b9-7b34-42f1-a285-47ccbf2f5756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 f1d296eb-dc82-463e-8216-43a6560a80ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 1b171ec4-39b1-445c-af89-693a44fdb7b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h960A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h92A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB978;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h62E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h960A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #923 d129481f-b8b8-45df-920e-9a2a856f5400)");
unit.assert_eq16(16'h92A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #923 51df9eb5-2093-45bc-b818-8c0f9b1a08a7)");
unit.assert_eq16(16'hB978, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #923 19b37339-34c8-4c64-a13d-47757842936f)");
unit.assert_eq16(16'h6E36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 ec768ded-7a78-4958-a83b-a1d446fa1aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 3c260172-f693-4204-b502-a27efda107de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 53a781d7-ae3e-47b5-8b47-f9acada77f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 26b4b089-0173-4b9e-8dfd-179d1784bf20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 7ad2c62b-c118-47de-8e00-dc5bb5bb8c68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 df1682aa-f15e-4824-a90b-29f3a4123dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 a6328f63-ed72-41b9-b887-910fb5a70a0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF5D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h98C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9311;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h2F26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #924 147b2e69-d0b4-4ada-975c-55fda11a3dc5)");
unit.assert_eq16(16'hF5D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #924 6c432862-1a54-48ae-95ed-694c297c6582)");
unit.assert_eq16(16'h98C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #924 64048ac7-bb53-4150-9d6a-f059b71f4a17)");
unit.assert_eq16(16'h8C89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 53772026-e5b1-4235-b5ed-2b29ae4357bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 3b27ca58-b557-4b4a-bc55-bb5683b1a0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 04716012-5d1a-457b-aba0-522e06038bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 433238f3-d7d2-4431-b477-f60ec2bc0335)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 c8f75cda-70e7-4559-8958-17a8e3e0ad86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 5058e0e7-bee0-4708-ae7b-2609117db950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 d4769b9d-f7f8-4051-a97a-7f857dacf48b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA7B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2425;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'hA7B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #925 afdf626d-ed21-42c8-be4f-711bb1270e2e)");
unit.assert_eq16(16'h2425, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #925 c1966bbb-e0df-49ae-a12b-084eab59bd68)");
unit.assert_eq16(16'hBE67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #925 6c1733fd-da85-4739-a977-822f019e9f27)");
unit.assert_eq16(16'h09D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 7b0ef6a1-19b5-4a00-adac-32c0d9d1ad29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 b3e2d785-9999-43ca-9308-7ab713d56ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 8681f456-2837-48d4-a37d-802bd7507663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 a59dd6ad-ce9d-4ca4-9ead-e6450a6e2938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 7e821a1d-4630-490d-b879-c61a8fa16cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 d7a82449-0695-4327-bacf-605737a7b21f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 a8ea3efd-cd9c-4909-be2e-bfc4ebca50d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2DCB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC92D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h69D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h1DA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #926 2989367c-e95a-4c44-b740-dc3adeef2f42)");
unit.assert_eq16(16'h2DCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #926 dd77b75d-3e23-4952-bfcc-2562f2826117)");
unit.assert_eq16(16'hC92D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #926 a9975471-9633-44fc-9b33-4a5788f9a669)");
unit.assert_eq16(16'h81FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 37d34dbe-c8a7-4621-a487-a128284e5a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 1475abca-8315-4ad7-8f95-98f65da06a26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 ae9609e7-ac54-48c2-ba7d-e29aa823146a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 5b315f8c-ec2d-494e-b6d7-00552f10e0a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 9be62bce-0859-4e74-be16-abf53570886a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 1310b3aa-3be9-4abb-99d4-0ef83cd3f1c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 edbab7e4-37dd-4359-8198-5b66d9f9b9f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h61B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA886;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h56DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'h61B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #927 3aef3af3-62ac-4573-a028-d17ce2987968)");
unit.assert_eq16(16'hA886, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #927 e2dcdcc3-71dc-481c-9cec-57f3d9cff67f)");
unit.assert_eq16(16'h4C7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #927 6908b5ba-b304-48d7-aa6a-db03a9b050d3)");
unit.assert_eq16(16'hB16A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 2f3cdae3-0eed-4d4a-a244-b25b79bfb58a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 c62ab608-4395-418e-a2b0-3970080aa67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 af3f2136-1a01-481e-98fc-9a09cfafca36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 1a6ccecd-5f5a-4a4f-82cf-8ed1d99ce2e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 5d649749-5387-4449-9351-49dd11e12cc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 4fe3e088-fe2f-4da7-bd71-ea4a7cb073b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 6ffe7f2a-666d-429a-af21-0ad91b7b467f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD089;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA374;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE639;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD820;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'hD089, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #928 2ae8db0a-7f84-40e3-bbb4-f41d5a06976d)");
unit.assert_eq16(16'hA374, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #928 79b22c6e-d9be-4868-a90f-61badad9ca89)");
unit.assert_eq16(16'hE639, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #928 d16fb9d7-d9a1-4b49-89ff-bbe97dde17d6)");
unit.assert_eq16(16'hAF6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 cf820e29-5374-4855-bd0d-a5d74723c75c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 db826b77-ebe2-4de4-99d6-57c657bf7ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 4a058fa7-775f-4270-9055-2f6a2d9b6bb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 e31b56e5-c02b-4d93-96d7-7e987b358a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 d528bf37-da2d-418a-b518-6ccc27117bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 2f9307ea-9572-439a-ae22-b04fe51f42f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 28b55f7f-b6f0-46ea-9193-792e6bbc0449)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA470;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'hBD7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #929 949b575d-632a-4a05-9815-4937d9e26f9e)");
unit.assert_eq16(16'hA470, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #929 25014f97-0114-45e7-b43d-7281cb42708e)");
unit.assert_eq16(16'h25F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #929 8ec51ef5-5888-47dd-bd20-0033c19bf2f5)");
unit.assert_eq16(16'h6F77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 200a72bb-3644-40eb-9f2b-c5b328446086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 a4411339-b187-435f-8305-0cc6fea08b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 151fb085-2674-477c-bc47-112d48a32827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 ab0aa34b-f3e0-4c95-b6c8-b75df85381bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 bf315c36-c458-4630-b301-b5f0a3f69c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 150d6498-56cd-4759-9979-8d0663927875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 41734e42-774d-4e4b-a999-947e5dda1e3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3313;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7658;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h25C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #930 2397d528-8b25-4fb9-a611-d3df7b4c892b)");
unit.assert_eq16(16'h3313, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #930 ac4e4c64-0e14-4dd0-b50c-815aef2356fc)");
unit.assert_eq16(16'h7658, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #930 5e2d2efd-838b-40e4-a30c-3e553f0848b1)");
unit.assert_eq16(16'h9DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 ad531a4c-2781-4e91-ad95-464cf3ca5220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 07d2d195-436b-4820-9f56-c3bbbb8e20f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 32a2864d-1693-42b0-8c3d-f95a63809dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 7759e5fe-620c-454e-9b0a-3ff2e6f469bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 40cffabc-5f25-4023-a784-fc681bd87592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 551394b0-3500-4e8d-8379-53692cdc9258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 bbb9c50c-aa56-4ad6-bd19-a3db9049bcbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB015;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h671D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'h0D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #931 a365589c-dcaf-46ad-8c83-f34373fd8016)");
unit.assert_eq16(16'hB015, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #931 324ff7ad-cf37-448f-ad30-d95dc36ac512)");
unit.assert_eq16(16'h2A30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #931 77e013f4-4681-42af-b03b-d44cfb783553)");
unit.assert_eq16(16'hBE8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 75480101-c8ae-472d-90be-aa431386f441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 51d7fd46-d5cd-4ac0-aa76-66e929c74ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 58871214-1405-4988-bf77-1f2e2dbbc501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 7625f12c-75ad-4011-a720-b43a0143830c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 9fd271b9-ed83-4305-8b89-b1f46dc0a8cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 bdc760f3-3374-44a2-a483-c72cc36a1859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 68003cbe-185e-4915-b500-9088300523b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h05A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h25D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB48A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h05A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #932 1c303e5a-ed4c-4d69-a0ea-5913d9c3fc0b)");
unit.assert_eq16(16'h25D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #932 683e2102-5d0e-48b3-b67e-8a5404d5f638)");
unit.assert_eq16(16'hB48A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #932 e722ec17-392a-4cfd-8ab0-8eb8c24655bc)");
unit.assert_eq16(16'h0425, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 3c5503f9-3928-4d76-b007-b63b0039a915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 ff78321a-a7b3-4ad7-8a7a-1cc1d27fb6ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 2b1180f1-5911-496a-96c4-68713191f1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 7091a3f3-7b48-4dec-b0dd-5f494cbe5239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 16b45972-3ada-4302-ab24-fd291db46194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 6a380d66-7306-4866-9804-2251ea4c610e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 dbed7094-bb19-4bf1-9e72-5bf62f6bbec2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD463;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h72CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h828A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA78A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'hD463, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #933 388e6815-5c53-4d36-ae35-c8ff3a1764fe)");
unit.assert_eq16(16'h72CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #933 fda63c94-78d4-4e6e-ade2-58c745e121a3)");
unit.assert_eq16(16'h828A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #933 2c396ca1-1fe4-45f3-af97-1479c9a53e34)");
unit.assert_eq16(16'h55D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 a887dd3a-19c6-4775-80be-32ef11fa07f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 a93cd415-4056-4fcf-b476-cbee8304f09c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 83ebc8ee-96ef-4e7c-a087-2a9dc23639b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 3a234c5a-5210-4930-bd79-39e78ec9a862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 46aebbd5-5cc1-4ccb-bdfa-73863eb0fa2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 9b5098a6-65b4-478e-8eec-bfaa4e22c491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 d224856f-422b-4777-b49b-764d604d0314)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h34BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7734;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE619;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h34BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #934 da5f4ebf-2fcf-47e7-8a4a-cdf052e5b2cf)");
unit.assert_eq16(16'h7734, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #934 a8582b4b-e48f-47ed-a52d-44f4db1dcfb2)");
unit.assert_eq16(16'hE7C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #934 4b1291e4-c167-4f16-aacf-a25b49ba11fb)");
unit.assert_eq16(16'h035A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 03be41ba-7645-4234-a048-60a908cf917b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 48ebd159-f916-4296-b952-5f7aea40a1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 ac1f2fb6-e584-4bca-bcb3-62839ac130c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 68467e5a-07ff-4b64-b475-c66771f22141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 ca306227-304e-40e5-904b-763b34873a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 400ccbfe-e9e5-4c0b-a9fb-d5c776161fdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 28940598-d8fe-4fa3-a68f-3f91f84006b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7D15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h197E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA098;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h7D15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #935 72ac067e-e4ee-42a0-ba4c-aae5be90af5c)");
unit.assert_eq16(16'hBB49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #935 533bf84d-3979-47d5-8821-51d8eae03004)");
unit.assert_eq16(16'h197E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #935 11f337ef-274e-4c9d-bed2-277fd14261c1)");
unit.assert_eq16(16'hD76B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 821d8cde-83b3-4996-9e17-11796172495a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 256ec2e6-5c8c-4423-b45e-38df3a243739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 5273f354-b204-4854-9214-ab06687b42aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 b6e54b17-1e7f-4b97-9d6e-2694efa379f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 3bfa5577-2a99-4d4f-8463-0c2591cd55d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 193872bd-2ae8-4680-a72c-09a3e0fa72cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 f2d7ec88-df8e-4672-9878-ad0d61157b1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4367;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE37B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h4367, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #936 e34aef5e-ffe7-4f48-835f-2a166d623a50)");
unit.assert_eq16(16'h11B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #936 f57a91e0-9e8b-4c9a-a868-f55ba4083a5c)");
unit.assert_eq16(16'h8AB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #936 f47f2748-95f1-48cc-9363-931277fc99b1)");
unit.assert_eq16(16'h5BD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 d39222d4-8697-4527-927e-da53bf9e5743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 381d5676-1b66-4e2f-a44e-29710c97505d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 89563f3b-967c-483f-8da6-49daaa586d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 2d18a912-ccca-4829-ae1f-a7f05521a35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 f142f8c6-e41d-4b53-abf8-3e1e9382b09a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 10c88137-9f75-4298-9601-7959136729de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 ce44ce1b-55ab-4a99-9a3f-45209dedc40f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA746;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB8C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'h68C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #937 565a6913-12ca-4530-9e0b-5b75d45a410a)");
unit.assert_eq16(16'h8F8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #937 0bada8e9-12da-448e-a219-38b9fa6af273)");
unit.assert_eq16(16'hA746, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #937 d6f8a328-76e3-43cc-b16c-527911201ff9)");
unit.assert_eq16(16'h8EA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 f2936135-bef2-4f08-b28c-38871e3710ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 a20bf624-4021-45cb-a195-e70c3e834426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 1d4adb60-310f-4e9a-bd7e-1be03ca97b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 f1f89328-de1a-4b62-ad89-94e7b2986d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 70ec33cf-c54a-4e8b-a529-2483d832ad66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 1b2e7fbc-d930-4f89-85d2-c32a8ecab17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 0c62a148-081d-48fb-a90e-4591428328dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h92DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h74FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h92DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #938 233a0f8b-24cb-4c1e-bd81-d94429875c0c)");
unit.assert_eq16(16'h74FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #938 79d10d97-8c1d-46f8-8ed3-eaa3e0e1f8e5)");
unit.assert_eq16(16'h2E3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #938 7aa708ec-d8d3-436c-a954-0cdeb8e3cdc9)");
unit.assert_eq16(16'h2455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 e282e850-10b4-493a-8b69-d6cd582212f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 67946814-ec91-403d-9468-c362ea3dc55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 4f32d843-da1c-41b9-acaf-129ebb516148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 944d4b68-5d10-42d0-97f4-ea4cf45de4c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 01c20e56-4ac5-4be5-820a-8252c07ed552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 3431b5d4-2b1e-467f-b4e8-8a3475b63f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 b28adbd9-94b7-4f6e-9a92-c97c19fc5408)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h72E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #939 f2184981-29fe-412f-ab4f-9c23288d7de2)");
unit.assert_eq16(16'hEFC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #939 ce5e75da-2505-462d-ab29-6e07c4a53b4d)");
unit.assert_eq16(16'h40E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #939 09ea198a-ab20-4a5b-a417-08923311e1d3)");
unit.assert_eq16(16'h1F26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 2b60e218-7bdf-4606-89a7-a0c414506b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 dac551e8-2253-4c6f-8799-c7bc5eef6ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 2a6970b0-da89-4570-8c98-85732969c639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 6ca0fa6f-a96b-43e9-ad27-0e85599a831c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 1504ac4c-18b3-49a9-b67e-2bef92e12396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 7493aaf5-4e5c-4bc4-b54a-81487ab8bf69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 993f7385-bd5e-440f-95b3-f6d90a4f5270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9548;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF116;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF747;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'h9548, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #940 9267c3f9-d67d-4314-883a-4a7776cf8702)");
unit.assert_eq16(16'hF116, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #940 2efa7a12-25f6-41ac-a514-a65c2f4c577a)");
unit.assert_eq16(16'h6B87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #940 01c49aa6-b6ae-4e8a-8945-e4ee23c23652)");
unit.assert_eq16(16'hC663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 4f8aacb3-7075-4114-a9b2-8d3959266f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 35bc3e84-c7e8-4246-a41f-b15017d9fc0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 198382e1-9868-47d1-9b1b-709fcf6b0f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 5d007406-3c2f-44f3-8dcb-8e9456f7ba05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 44d0d4e4-a1ad-4e16-a2a7-f77d980b83b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 bbc09921-984f-4a97-be66-96116b54c159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 e9535902-9adb-4057-a70e-7d5205fa1c89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF2E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB36B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h6AEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #941 937dd433-1283-4914-9c77-4cb17968dc19)");
unit.assert_eq16(16'hF2E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #941 1bab5c74-5e46-4c14-9e0b-16108e681d67)");
unit.assert_eq16(16'hB36B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #941 358b882d-3c8b-4b0c-955a-d9d5601adf54)");
unit.assert_eq16(16'h55D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 d2fc6eb4-cacc-4e1d-a3e1-06b0fbb72287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 680ced84-9b97-4240-9d36-b6ebebe41c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 589cbd41-b7b2-4211-adef-772f7671a55c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 a7ad32cd-e769-4e3f-9547-dc6d39ad4861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 7f3d5374-8285-409b-9eba-929a642b857b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 a25fa1fb-a452-4cfb-9148-b9fbf3d0db36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 d4ce1661-5a66-4c25-ac2a-bfa0daf88b11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC34F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h154E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7ED6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'hC34F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #942 85ec178e-3cd8-40f9-9efb-330dcf456f92)");
unit.assert_eq16(16'h154E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #942 40887d15-c625-40ef-9044-3c6a9a432d1c)");
unit.assert_eq16(16'hF2AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #942 fedfef51-68fc-49c7-9f93-bb638dc55f6d)");
unit.assert_eq16(16'hF049, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 831afd69-aa5c-41f2-b737-42618baffdee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 01dcbeac-8580-47c6-bc6e-c0c06cecec75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 01861eff-ef67-4175-9491-c8d5c2cd0b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 74465ce1-4684-4226-af59-05a4f36b0e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 f2b21db1-57bb-4290-b406-237bfa064657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 8945185c-8538-43c4-b779-9e0873b3eb66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 53d92ccd-11c3-4c5e-84de-c834ab2a1013)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h97AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB3F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'hAEAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #943 f072fad7-ee32-45ec-ad0e-66b622101f90)");
unit.assert_eq16(16'h97AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #943 5e2a4d30-a82d-42cc-adee-ef64f8ec359c)");
unit.assert_eq16(16'hB3F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #943 17fe2048-9905-42c2-9b39-2492200a465e)");
unit.assert_eq16(16'h2091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 2b938041-40cb-4bb9-9bd8-a84653df4737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 f2cd9add-0272-42ca-b3f0-73b3548e0636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 556040da-c9b6-475d-8e3c-dbdbe4c41307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 e6ff2571-0612-4b0b-81cc-332b4cffd39e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 656eb612-aa5f-4e21-afbd-23b775b02666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 becde173-4b79-4cbd-8346-362f1c46fff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 2aa6d846-2e9c-42a3-ba1b-d66d9293210d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h207F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9389;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE117;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE161;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'h207F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #944 6e46cfbe-d7ff-4657-81bb-974d94fe1aad)");
unit.assert_eq16(16'h9389, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #944 074bacb3-5e25-4d88-9dd7-0b5e8503ed6b)");
unit.assert_eq16(16'hE117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #944 3c7b4107-bdec-47e6-aa60-42b8326a5b71)");
unit.assert_eq16(16'hA705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 dddd03eb-b964-4543-8fa0-1d24f7bcaf8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 35e831f4-3691-4bcc-b599-81ad3de0519f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 e8ed0d21-e32c-4e3e-b01c-1ed63079645e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 d0eda6f6-1388-4784-98c9-7b9472be63f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 2a1155db-cb9e-4f2b-8546-5cafa15a01f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 89b4c346-a8a1-4c1a-a10e-5eb41fe8b3be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 40fb47a0-9a9c-482c-a37b-a1fa37da8245)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6BCD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0001;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h6BCD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #945 3b871095-345e-4536-8fe0-e3275b4459fa)");
unit.assert_eq16(16'hDF3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #945 45e3edaf-6233-4f62-bf20-77ba7d66f8f3)");
unit.assert_eq16(16'h0001, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #945 32c3cad8-14d0-4bb7-9e95-ce62f19e294b)");
unit.assert_eq16(16'h2FE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 9f75f6f9-2a20-49a6-9401-0a94dba3f665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 16c5fb34-b36c-4c25-ab9a-a8d379932056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 25a3f886-a0dd-4816-b7da-12ad0508e8c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 0e0781c8-66fc-4923-9ea8-86859743caf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 88732927-6fbb-4b69-9b7a-b061b269097c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 dd2cc3b1-cb8a-43cc-8dec-6bf1b7937637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 3ee65219-8fa3-442d-ba3e-f8a5d0da9b3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h788A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC36C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h92C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h4C05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #946 f6d1cef2-516f-48e9-9c84-e0d61e266e71)");
unit.assert_eq16(16'h788A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #946 b1218506-5444-4925-ac36-85fc393f8849)");
unit.assert_eq16(16'hC36C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #946 aa3058da-29d9-406b-b5ac-b2c2b96baa25)");
unit.assert_eq16(16'hEF9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 38181ae9-2ec4-4102-8523-1b3e5937b6fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 34144be2-59de-4c02-877b-f493a5f14fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 afe23b65-faa8-4af2-b918-9e9694ec8b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 32390a71-8b4f-42f3-963e-f7da9cfc0926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 a877a5fb-ee58-47ac-b8d6-d6894117872a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 39bb14a5-8696-4672-aab7-97482e653278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 ec563d48-908f-4ffb-949f-df6241621374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3DEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF67E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC5C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'h12BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #947 35fa5d7a-c352-4f0c-b615-85fc633d5b65)");
unit.assert_eq16(16'h3DEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #947 c96607a5-0f34-42f3-8fd6-a9e6cf7f3977)");
unit.assert_eq16(16'hF67E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #947 b45fd3ad-1dec-4944-b7fd-97053c42c7e4)");
unit.assert_eq16(16'h006F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 3ab89b63-d7ad-439e-883c-53b68bfa2a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 cdde4fb0-1d93-4e7e-b274-2fa4af24ca47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 803ff422-a25a-4e31-b7c3-74fdb1b52426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 cff32733-24a3-49f6-806d-c6466074ab89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 51a678fc-0eae-4831-831a-e0847a2bbf5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 928bf03e-1aaa-4a92-851f-7ff7c70875b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 cdbadd14-4d3f-4357-9133-7ab72ee019e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1BED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8922;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h38CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #948 d2806a00-2ce8-4873-9793-07255cedc94f)");
unit.assert_eq16(16'h30AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #948 be75952e-074d-4fb6-8490-4204be353efa)");
unit.assert_eq16(16'h1BED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #948 a959ae09-792d-4d22-828e-341aa1b203ea)");
unit.assert_eq16(16'h9D38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 64873394-2b96-4c49-af81-0a77858afa8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 093652ba-d541-42a1-a655-eeaffd2f0e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 fbbc9360-4eb3-40cf-a059-d115f3f1b549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 19560acf-95a9-4cd9-9a63-e494e7e6e099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 2b89474f-0c75-4335-9a58-76af551bf2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 15a99efc-4cf7-4de1-bdda-8f4cad77c3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 c5889f3c-9cf8-4c49-ad57-c0b6cbdac789)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1ABC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0366;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD626;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h0D00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #949 ef98fa56-7cda-43a6-88f5-8305e17f140b)");
unit.assert_eq16(16'h1ABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #949 36bf37da-fd47-4d6f-b35c-3251f9a0f928)");
unit.assert_eq16(16'h0366, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #949 0bc4cfd8-04bb-4351-bd3c-698bc9f09ffa)");
unit.assert_eq16(16'h0619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 7b9b88b6-dc4e-430b-99d0-7ba048b0311b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 af7a2898-15a3-4be7-bd9a-973e275edd1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 fa32b10f-26f9-4d1c-a77c-a059226d0747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 ba270aa4-afb4-4d0f-b67d-d943dac92a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 882c46d8-dc77-4d8a-94b9-6c6ee89e3e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 0d18479f-7d23-4591-a34a-a177f2a4cfd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 c0f97394-0328-4c20-af8d-b3ef43850863)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC4F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB920;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9EC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'hC4F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #950 4e06ebcd-261e-4630-90b7-512d7ae6231a)");
unit.assert_eq16(16'hC5BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #950 fcb8aa86-a2f7-402e-923d-01b2266580ea)");
unit.assert_eq16(16'hB920, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #950 42d5a738-3e20-495d-8b11-d1ab73d7f263)");
unit.assert_eq16(16'h762A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 c0117f09-642a-4794-9275-efd5dca73593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 a120015f-4f8e-4d8a-844f-a86060b59035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 1cb30f6f-8c2e-4b46-b2f9-0e8cc66d2879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 972f0f90-2d58-434b-8012-d90a305952c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 0974571b-d6be-4dce-9e84-b994082d7eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 edfce1ef-5ffd-42df-ab55-ed84a3d76e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 f1afd7dc-c0a4-46ef-bd7b-b839e3c66b4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h22B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA25D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h22B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #951 746d4649-22cb-4c16-8331-f066a10a4d2d)");
unit.assert_eq16(16'hA25D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #951 4748cda2-895f-4846-8edb-6388f29e2c43)");
unit.assert_eq16(16'hC0AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #951 be7678f8-1e69-40c5-9c7c-6e64e425f555)");
unit.assert_eq16(16'h5EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 ecfeb60c-6040-4e10-bd2e-fffd339a5c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 2532b4c0-b119-4519-9d56-6ed4290bfe1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 9f3721a4-d3cb-4f8d-beeb-793fbbfafc8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 3eb3f55c-451e-45bf-88ae-c3444db29196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 0cd4b2f2-3525-40fd-b7e8-49f917c484c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 fe26f67c-85cb-4554-ab74-436b2cfd0814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 77be90ce-aa55-4742-9401-876c2e00b70f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE41F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAA94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'hE41F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #952 232dc492-7f7d-436e-95d4-eda1c5dec68f)");
unit.assert_eq16(16'h0C06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #952 c398c420-2553-49be-b1cf-7b292e2614b2)");
unit.assert_eq16(16'hAA94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #952 605a8851-948b-45be-ab51-71f37f14e0cb)");
unit.assert_eq16(16'hCABD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 dbcab188-fdcb-4a8a-af3a-155e519e64c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 d704048c-4abd-4ccf-94c2-3edf7e82abca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 de33d538-b949-4210-95a1-89804501075f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 279d3aca-4ee7-43ec-b5f1-52f4bf15e526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 4616d3fb-0d99-40dc-b4a0-50e545441e33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 71f252c1-4605-4c50-b5f4-42b64e62f36b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 2eed6536-e85a-448a-8f7e-61f2999179b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h035B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h27CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h89BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'h035B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #953 33c7dce8-cc4f-4655-995b-a896947667d9)");
unit.assert_eq16(16'h27CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #953 4c750a8f-07e1-452b-84a6-79e0f3fd8232)");
unit.assert_eq16(16'h89BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #953 973c8af9-5a00-4b0e-9b82-556db2ca43dd)");
unit.assert_eq16(16'h6AAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 70f93cef-b1dc-4e63-b1cc-d7bbc7a883a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 c1f831a2-af8b-48b9-8ebc-604a22382a83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 a964a875-0444-4080-a793-b758146c1b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 caf4f896-215c-4dc2-a211-37cbae546f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 6ebd8a59-89ce-4782-a115-3173dddc91d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 ca15139c-0982-4dd7-a49b-e4c79966ca7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 8b2b75d7-aaa0-4e91-a9b3-5c50d0ebdff6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCBB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h779E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'hCBB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #954 857144dc-c5de-4fd9-8c20-494b5b890267)");
unit.assert_eq16(16'h4C29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #954 88985ca2-55be-4869-8a22-05b077e25a68)");
unit.assert_eq16(16'hC6E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #954 4d616ae9-bf63-48ae-bcb6-dc4c6ce4d1aa)");
unit.assert_eq16(16'h2493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 5fa10a48-8eaf-411d-abf5-a425e15731bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 1c2a5bc6-1235-4d45-bcb1-0aa5508fb088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 b39fbfbe-61fc-4069-993a-34e5584d733c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 59eb23c1-8bdb-4bf8-8a30-4db6422c8602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 01baab50-8281-4eda-8cd0-3d8b9152c2df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 8f3260ef-bf03-41dc-9630-bccbc6aae9c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 387f3eb1-d5e4-439a-ba69-b7255b35637b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h89F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFB62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB30B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h89F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #955 f22bdc55-29cf-48ed-9422-5d5df2a571de)");
unit.assert_eq16(16'hFB62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #955 5db4d19f-2ae3-440a-919b-4f3404f6003b)");
unit.assert_eq16(16'hF721, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #955 5ff8fde1-99f9-42b1-bf8e-1070cb7837f6)");
unit.assert_eq16(16'h8213, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 ccce8809-6e8e-46fc-9704-327931a307a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 23df533f-9e85-489c-88b3-40a04c79ef1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 969e90d4-ae41-40e5-80f4-e91a6c737bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 d0e3f517-7b21-4a50-b5b3-c50bc16e1873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 18e01dec-613c-4890-aa00-cb2b2daed4ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 1c3ebfe4-80fc-471b-b825-bde3d62a061b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 190e85f4-9180-4e26-9e29-b2c59d3216c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAEF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h11FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB74D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'hAEF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #956 55bac28a-d87c-4f29-a375-7fd6d5acc6a9)");
unit.assert_eq16(16'h07AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #956 0728c6bf-5c90-46cd-8eaa-58a9e765c486)");
unit.assert_eq16(16'h11FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #956 277ab0e5-509e-4ec5-bbbd-fb68feace795)");
unit.assert_eq16(16'h1BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 199cb810-5204-4a60-9c57-38da13e763d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 8079ed8a-9c14-4060-a8d4-f0672704591c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 5c46f02a-601d-4f7c-af0a-ec7560c33a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 03f32159-336c-43a6-94dc-ba5d0158e41c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 e503154f-246f-4cc1-b431-60f0cc5d5a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 a1f40dbd-56c7-4a0c-b009-60fdb3331d47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 b5b57323-da62-43e1-97c8-ad0d54b3bf40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE288;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF5F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8243;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'hE288, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #957 64183727-26c1-4600-8769-8ccfffacab9f)");
unit.assert_eq16(16'hF5F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #957 539ed0a2-5d7c-44dc-a8d3-a1c1a9032879)");
unit.assert_eq16(16'h56E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #957 03c71aa2-4e6e-42ab-b9e3-3a63907c6b13)");
unit.assert_eq16(16'hA4D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 ef0927e6-1544-41c3-a29d-93fdfa57336e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 fd6e139f-6e7e-4a1a-a882-007f2bf06e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 5037b913-6cf5-4c9a-b374-e8d909651c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 7b460091-91f6-4dd6-8946-fc0591ec0abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 3690fa05-181f-4737-94cc-ba73088d56c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 79475135-7e3a-4828-b2b5-a50a9aa35f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 4a3539c3-411e-44cc-888f-bb4744f77767)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h413F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8BEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA607;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h413F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #958 aa50d436-bcbe-4e86-ae3e-1cb87a84ef8f)");
unit.assert_eq16(16'h8BEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #958 066f74e8-2885-4d8b-a5c0-6adcfe4b01f8)");
unit.assert_eq16(16'h73C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #958 5498ac3c-e3f0-4430-8607-8092a686da68)");
unit.assert_eq16(16'h6E0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 a11cc0aa-1101-4821-b42d-d0612fc684e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 7b8b4570-1de5-4f67-b95e-d66a4f400d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 a90603d0-b6bf-4707-b6f5-94ab41a38157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 472e9f4e-34ef-4739-b8ec-7d9094086f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 76df06e2-e0d4-47d0-967f-0a65a1dd0e53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 839a6e0b-1e5a-4f1d-97fe-13053a1da6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 e7571b94-1a9c-4c7e-a62e-ae3316f5d7b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h772F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h772F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #959 927bdf2d-b135-44af-81fe-7c9d2ed6cd33)");
unit.assert_eq16(16'hCC6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #959 7a56cf38-c71c-47f2-8e2a-e91f60b34eae)");
unit.assert_eq16(16'h2F90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #959 f58f9c51-591b-4985-94da-4dfb55d3033f)");
unit.assert_eq16(16'hB321, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 bba8719a-3dd4-460d-ad8a-2b29f125b97b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 732a9e8d-a654-427d-8d80-b2eaa6c87459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 6ca01515-5ef5-4a6b-a73d-d7a1e1973bd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 0f267fe6-fef3-40e4-9096-783f040adf68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 9444d75b-d6be-41f6-8915-64d1aec6a8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 bceef08e-c757-4715-a12f-ff59191d063a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 64a1f031-62ad-44b6-9988-ef85d8d8388a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7618;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h7618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #960 c656b18e-ea4a-4b61-9475-8545b02394fc)");
unit.assert_eq16(16'h1D30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #960 9bf57a20-1f62-42fe-a16e-16d41a9ac024)");
unit.assert_eq16(16'h40C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #960 e485a4f3-ee04-482b-abc8-f1eee8a15e87)");
unit.assert_eq16(16'h8436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 315b83d8-1976-43a6-ac72-ea00e0844410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 39d6e731-1744-427a-a514-48af05ecff7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 f42a91f0-1d38-4c3d-b52e-e9e94e0c3f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 e75f0222-8801-49b7-bcfd-a6b57f4445a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 b6ee20f1-0f33-445c-b115-ddedb937fbdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 9b694419-0884-41a1-86ef-d6a3f5832152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 3443999f-4bd7-44d4-afc4-9920bba40814)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5077;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0077;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h6AEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #961 9c22884d-c2c1-4719-848b-2986e34d10d1)");
unit.assert_eq16(16'h5077, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #961 f18e0ead-2152-40ae-ba0d-2a43d00921ca)");
unit.assert_eq16(16'h6B71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #961 e94494cb-f6f0-42d5-bc29-6a954fad2799)");
unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 6f3d59cb-c1d9-4c11-b18c-193463241066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 aa94ba67-8687-436f-8a12-b03d9ab822d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 dbff0732-a1d5-4009-8b93-da7937628b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 adfb8a24-278b-45d7-b24a-3761ab8ea151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 c34028ea-47c2-4ca9-980f-69344fedd031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 57146157-5638-4d20-b778-e8d5267ff293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 a5557a27-b52d-43de-b08c-5f5cfbe82b66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD51B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC744;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h5D97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #962 5a656ae2-6eee-4472-9b45-045d7c5a2299)");
unit.assert_eq16(16'h30C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #962 39ae011a-0e85-43e0-95b9-3de0a7d7a665)");
unit.assert_eq16(16'hD51B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #962 aff55512-8e24-4293-8269-9a5c7170650c)");
unit.assert_eq16(16'hBC1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 014c9db1-d5c5-425b-a95e-6927835d6f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 0b553ddc-09cb-4124-acb0-9dd6506359d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 95e1cc57-4aa7-45ed-bf10-cd06c957e58e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 56b90d3a-eae1-4cd2-9e48-69fb4bccd7b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 0f3fa520-a2ab-4160-ab77-5da39984ea43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 e52b4666-2bfb-4b77-a8a9-821bd419bdfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 1775d964-6169-4d20-8706-7c1e885956ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3336;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'hF3C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #963 cd857263-9098-4dcb-82e2-cb089d00763b)");
unit.assert_eq16(16'hEBB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #963 0a52aa01-a83c-41b7-9557-ff8962235ccc)");
unit.assert_eq16(16'hFCDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #963 ec9a008d-c3af-41dd-95e1-50dde0996168)");
unit.assert_eq16(16'h52AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 fe735537-eee4-4ab1-91f1-8103154fe4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 ef2e7fb0-ba0b-438d-b290-cd7947d0317d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 f68afa6a-4dbc-4e6c-925f-cbc20270ce63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 ab5da0c3-952e-4a1e-8e73-7f28ef07e2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 a3232cec-afe8-4634-949f-f55e386f0d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 4310a6d4-d434-4442-9610-091e3d86bcf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 6fea0d4f-5f9e-41e0-ae01-0c387a53c976)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB488;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'hBB19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #964 17ecb331-9e5a-448e-a67a-fc7db0160dfc)");
unit.assert_eq16(16'h6B83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #964 542746cf-9529-43ae-b7c3-03b226bbe6b6)");
unit.assert_eq16(16'hB488, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #964 09f3e805-160e-4e3d-821e-e1d1739dc21b)");
unit.assert_eq16(16'h7212, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 9ffdef17-323f-4318-8cca-2f19e190adbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 aa3832cb-88cd-497b-b514-f0cd306f857d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 a0735252-ae37-4e76-b2ad-92d914a04778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 2794e87e-0f09-4b74-9379-1d2bc407aef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 baea3bb4-91b8-4acb-b6b2-4607fda52314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 cc18bdb2-286a-4f4c-b2e4-c215f93a6c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 2cb67098-33c8-429f-80bc-1d6909046db1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCEF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h7DA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #965 80ae2da8-8ecf-427b-ad20-d67af4219648)");
unit.assert_eq16(16'hCEF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #965 eae340ac-33ab-4f5a-9263-d19daa1eb16f)");
unit.assert_eq16(16'hECB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #965 f08bce47-3e33-4e12-ad11-20c3c3b03c18)");
unit.assert_eq16(16'h7312, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 01e12175-a7ae-44e4-8217-af9f5ed8dee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 275287a2-8e47-46ad-8568-b52bfad2bcde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 5d19cebf-c2d3-43c6-a1a4-7fd5aa854809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 233484b3-32a3-4dab-a214-56878ebb45ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 dcb88e1e-9e30-440c-96b3-e357cc3eddf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 df9b6386-8da7-4e72-aa83-363092ece8a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 f24c69f0-cbde-4a35-981b-55d780cc2b2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6DC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA6BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h6DC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #966 4e8bf6a1-7d9e-45cc-8e46-8c9f4ae3eec0)");
unit.assert_eq16(16'h95CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #966 d07c95fa-7678-48a7-a7a1-472601ff4502)");
unit.assert_eq16(16'hA6BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #966 196395e5-db87-4dd0-8493-65a65948b538)");
unit.assert_eq16(16'hB922, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 d383ba0f-4676-4852-a6b0-82774e5043cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 f6dcf851-287e-49e7-8949-6658a339db71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 48f560c8-5452-4caa-a3de-29faa6da75eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 76916dc6-c9fe-42cc-8099-ccc49b291bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 6e2ab7c9-abe9-4f82-840f-4bb21b53f261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 42b3a9eb-462f-43f5-95a6-d5457cb22958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 a56a7ee8-0c33-419d-88fa-0c5ad313c792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h576F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0149;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h576F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #967 9e3a3be5-0890-4f7d-98d1-3a6e07c716f1)");
unit.assert_eq16(16'h0149, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #967 9c254b5d-a6fd-4ae1-a6f9-e15ba9de33b5)");
unit.assert_eq16(16'hBEE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #967 39ab6b8b-8a9e-4538-9d32-9dff601b8ed5)");
unit.assert_eq16(16'hDCE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 b634f82c-e6c1-4f8e-8a4e-7571dd933729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 b888c03e-ae8b-4d5a-9904-0732e7d8bebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 ca268de5-4769-4811-a43d-b3ded5641a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 b57af392-48f9-4a86-a575-3120a8205aba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 88294e6b-9e64-4bf4-9c4c-3df249c35165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 bd605e0f-b599-47d5-a8bb-8dc761f4a2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 262e6a0b-7c60-4d6b-87a4-d5a45f5382bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7EBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h256A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h7EBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #968 73cca6e7-f32e-473d-b189-2cbba05b0b15)");
unit.assert_eq16(16'h6F46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #968 8a134998-05a8-428c-8457-759d88a97c9c)");
unit.assert_eq16(16'h9C46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #968 5bc3a909-520c-4357-8b65-f698bc21d749)");
unit.assert_eq16(16'h157D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 a18c2c2d-c76c-4a05-bffc-1ebc398d6a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 22e153c4-1f6f-44ff-b9c1-b44dc2585ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 fcc2f37b-0409-4e71-a192-12a17c3e3b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 3f451c73-fc2f-4314-856a-c987cf603a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 f37d8fd9-43b8-4c5c-9b8f-a4c59faff382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 30238917-9864-48c9-a35b-0299d030cc39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 8be6dcb3-8021-4b00-8c6b-34aaf3d9f89b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBEC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD36F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h25FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #969 d136b3bd-8fb6-4369-99b6-c2fb7b313aaf)");
unit.assert_eq16(16'hBEC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #969 25719caf-687c-4ca3-8d0f-a46bdcd4c5f5)");
unit.assert_eq16(16'hD36F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #969 5929fb56-92de-4f52-99d2-f287d3b05391)");
unit.assert_eq16(16'hD2CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 a8ff638e-1445-47a2-ae1b-c9b52e77c17b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 50e3d63f-9a01-4af7-8884-531ef6d6540d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 d3405a6a-ff2a-44e7-98a9-8dd429fd74ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 ea1bb24a-0871-4410-ba7f-906dcd1753fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 a6589eaf-4b01-44fc-b97d-e434d3875d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 ab35b2ac-b7ab-4663-b460-163a45ff7bde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 1b9a3c71-8778-4b82-89f0-824fa84a6ee5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h666A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h5E4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #970 eebfb384-3fa2-4623-9eb2-f82de9a47824)");
unit.assert_eq16(16'h8F98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #970 87dd4022-0040-4cfa-bbc9-4a99f54ffd13)");
unit.assert_eq16(16'h88E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #970 98336b15-4598-47e7-ade7-565ddfef9b04)");
unit.assert_eq16(16'hEDFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 4ca126cf-1b22-458d-b9b1-a6231e74b264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 ec19ac0d-2a5a-4989-a080-1059a3c947d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 27c66ad5-0b06-4fa2-b44a-8e3ff8c9bfef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 75b1dd58-d722-4b87-9bf3-4af757b606d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 ecebc263-3bfd-4f99-aa4d-bec5dec3baa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 a3e3225b-291d-4ed9-a461-98448c11e223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 6f1f00b3-5ea4-42a4-884f-fde36d8b9b86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC7CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD198;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9911;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'hC7CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #971 7b1cd43b-9ec5-441a-ab80-a0ce42584ec8)");
unit.assert_eq16(16'hD198, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #971 8fd9cc7c-eeca-4658-9a5f-bf12d0808966)");
unit.assert_eq16(16'h9911, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #971 cf867547-05aa-4a76-8235-fbb08bee1721)");
unit.assert_eq16(16'hF885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 2ed09f59-b414-41dd-9e53-4da93a7fd1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 9d2a4f94-8eef-4cdb-8daa-1eba1fbbe137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 2e46af0e-c5e8-4bc1-bb29-7fbc7c875b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 488cbce1-0d62-46fb-b9f3-ccd691b620a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 0083ca35-354e-4909-aac5-3cfd38fcb570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 e9970c62-d8a7-4e0f-9cdc-5eff0ec1e357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 95815113-dbeb-4662-9133-1a1d664d411f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDD53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC83D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h617E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h321C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'hDD53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #972 4082dfbc-679c-4986-9a0c-a5466a602e45)");
unit.assert_eq16(16'hC83D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #972 255c53b4-2b21-484f-a3e1-f81dd03bf2b9)");
unit.assert_eq16(16'h617E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #972 7517130c-fe5e-4a26-ba42-bf00430d5d14)");
unit.assert_eq16(16'h422C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 a73184cb-519b-449a-9b1a-2d7edc163685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 fd49b37c-38fa-49eb-8df2-43fccafb3d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 1c624a9d-2e4e-45e6-b1ad-78df6e73db74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 fec07ab4-cbe1-43a2-8ca5-c8fc2397520d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 eb73d8c1-3e3a-4b7d-ab9b-b763dd7c8bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 72475829-80e0-4c03-9c5f-faf43a9fdd7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 32d2ffa6-d12e-4ade-bc63-925268ba8e10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h147C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE2A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h147C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #973 1d4cd4b3-c2be-4373-9339-e56ee43104dd)");
unit.assert_eq16(16'h5BF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #973 8065452e-d7d7-44d5-9450-99f202295c47)");
unit.assert_eq16(16'hE2A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #973 afda85cf-326d-492f-802d-93c59f21c1c4)");
unit.assert_eq16(16'h658F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 89a633ab-2cc1-45d5-8953-d103f617966b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 9e9be1f5-4436-49b5-b9c0-598c35364c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 aa8fe5bd-17c1-4d95-8955-7c3bedec888c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 b9c77eee-2a70-451d-9fd2-ca0cbadf4043)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 05f08040-5194-47a9-a572-23d2cd346d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 e4a2bfaf-c384-4553-af4e-bf500c9bc900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 d6d43894-b1f2-489f-85a5-bc8403f233e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h07E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2513;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1CAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h07E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #974 998219ca-f10d-4b14-b981-e6f40da78c7c)");
unit.assert_eq16(16'h2513, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #974 def989a5-a326-4910-bfee-f1488fba6a51)");
unit.assert_eq16(16'hBEBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #974 707e4ea3-29eb-438b-982f-e80e43800e6a)");
unit.assert_eq16(16'hECEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 36dcbb1a-60ee-4189-b189-64d8a8a82975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 605eb847-0115-4b35-8fa9-35a450d4f82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 26ac000a-63de-4d92-97c8-df5b89284826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 169b858a-d4ba-424a-90ec-e701566a2f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 2e5a1e97-af60-4fbb-8537-273fb60b3878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 cd000c42-5fbc-4ce6-b8b0-e3ff54b543c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 916f4a68-5e24-4ad6-b8f0-d31980dd317b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB192;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB773;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9890;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'hB192, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #975 6c84ae2f-e82d-4680-b557-661c9b2a4f56)");
unit.assert_eq16(16'hB773, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #975 0cac215e-629c-4085-9765-e3ed8a5ed638)");
unit.assert_eq16(16'h9890, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #975 164e50c6-9238-4def-ab7d-8e8fb5299257)");
unit.assert_eq16(16'hCEE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 858951c9-7745-4afb-abd2-92b82941344d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 63581b64-1db8-4a06-9bf4-966a65fd1f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 7ac2c679-6c48-4b34-a4bd-92034432e685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 4058ecad-d65a-40bd-a8bd-8e6a871c3a59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 a43ef08c-3145-4e85-8c9c-000cf1df72d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 03bba347-a192-4aa0-8f82-95c3f03999ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 1dd3fbde-2c7a-437f-8d8a-f16d2092c1de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h73CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h70F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h99B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD463;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h73CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #976 2bdc5acc-c535-4f97-8fe5-58a8ed212329)");
unit.assert_eq16(16'h70F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #976 5e6492a8-79ec-466e-a1fe-72e1c71e6173)");
unit.assert_eq16(16'h99B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #976 b109da38-3dcb-4ecd-94c1-3ddd38f33de9)");
unit.assert_eq16(16'h0531, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 3f8b3541-4107-4ccf-a4aa-bf00cf90cfd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 2008a31d-f3c8-4fb7-9e51-e8108e0558e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 7d6497ce-6b76-45f2-9816-66351cfe5290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 dca75f1b-1247-4d8f-afc8-db6f1d208758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 52d122fc-cb27-417b-b940-719e7c804c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 3847d1ad-176c-46d9-b0ea-ef8d9bcc0022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 e0e39d94-130a-464c-ae24-28d4e2b6e5d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7CAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h67F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h659B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD750;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h7CAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #977 e5a0a6e2-0716-4110-8798-9461d28dd1d6)");
unit.assert_eq16(16'h67F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #977 ee9516cf-347d-4eb5-aead-491f80ca7cca)");
unit.assert_eq16(16'h659B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #977 3f09b46a-5e40-4665-b98e-c93bdb64b401)");
unit.assert_eq16(16'h0467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 9f18f0ee-395c-4ed7-9975-077dfb5bc847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 aec12c19-2743-47c5-9dd6-ed91284dfe03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 7b8e202e-678d-40ca-b9d3-6bbfbf678179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 0767b18d-74e5-405a-849a-bb358fae2d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 c14905b5-90cd-43c6-adc3-0ea65045cfb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 351b26b3-058b-4993-9ffa-50d6924951cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 ee982330-5777-4252-8b3a-98185b486dcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC734;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h45E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h87BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'hC734, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #978 ba38c717-b055-4b31-9d22-036859475d2b)");
unit.assert_eq16(16'h45E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #978 5f55abe8-30af-492d-aec1-bab78145a7bb)");
unit.assert_eq16(16'h87BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #978 79b2e528-4ab4-4b61-aa29-644dca6394e6)");
unit.assert_eq16(16'hC12B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 55bae8df-1889-4e29-a1ed-97f8bcbf106d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 0286e8f9-2428-4bbd-8216-64699e75d0e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 c9e03e01-9180-4340-88f1-46a7aa679245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 edc1fe70-a610-4399-a6d8-8ac71b97a1cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 113cbe26-f542-41f2-b7ec-d43390c54e77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 0d762e83-b6c0-47b1-835c-d74472f007c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 47f86da7-0895-499a-97b7-1c569347248d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA0DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h67B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #979 7f176e51-e2be-4061-b876-07589a0c2b52)");
unit.assert_eq16(16'hA0DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #979 bc6181e8-6286-47c3-8e46-da262c50a77f)");
unit.assert_eq16(16'h6A3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #979 95866e6e-aae7-481e-a7f9-981a05978ce5)");
unit.assert_eq16(16'h35C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 3a24db7d-0afb-44d8-9c6a-12a4ee31bc4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 a240ddf9-e38b-46b1-a4e2-4131ca38c02f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 cd9b120b-b06c-4910-ad42-70529f5cf347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 94324f7d-7c95-4e62-8ed6-33921bd081ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 60da4d93-945f-4ef6-873e-b7c3df1eb24e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 6987d238-fc83-4a79-9cc9-b51788b1e628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 be1f38fb-2bc6-4303-a765-c76c54215cc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7776;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2764;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4347;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h7776, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #980 816075da-bb29-4fe8-84e2-fd2ec958c2c3)");
unit.assert_eq16(16'h2764, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #980 5324f1c5-a56d-4bae-8e20-c26222a4b968)");
unit.assert_eq16(16'hACD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #980 a5350293-e295-427f-878a-87dc3f68c4f5)");
unit.assert_eq16(16'h77A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 b223a44d-c5eb-49e7-9bfb-fcab3ee8eed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 5631fffd-d3f7-440d-8904-06c3f6c51e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 462b91cd-56c9-4825-a6b8-842350ab580d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 de1a4a96-552e-49fc-a920-87f2482d7387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 8b29aed0-f26b-46a4-8622-f34937d04f3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 118b017f-908d-40fc-bd2a-5c62471b50c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 07b11074-c653-4611-9428-c62e9b305628)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h93D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h394D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0389;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h93D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #981 6b089f36-18ee-476f-a026-d1122702f132)");
unit.assert_eq16(16'h2A36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #981 735eab72-cf98-4251-8ffc-93bea2a131b1)");
unit.assert_eq16(16'h394D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #981 d0c54ba2-f5fb-41ad-9b29-24feb679dedb)");
unit.assert_eq16(16'hC4C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 d7d1501c-ba55-4cc9-bf97-b10762939702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 06a41c15-a3e8-46a2-97ca-69513d0f09d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 85a57f17-ae5b-49a5-b418-4db1425cf867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 c842ee26-e968-4c9a-a341-c3a0accc34ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 5c304a5e-af9c-49a1-a346-75c100949318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 ed2ef029-c3a9-4b3d-be98-ed62b8aab948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 87fcba3f-bed4-49f2-93eb-86fc1cb89045)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h87A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE91F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h689D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h87A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #982 f10ec57d-c74e-44e7-b721-3f75871ebe47)");
unit.assert_eq16(16'hE91F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #982 752051a4-a01f-416d-9569-4f953962f407)");
unit.assert_eq16(16'h97E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #982 bb248037-f115-422b-8d8d-3d45801e9407)");
unit.assert_eq16(16'h0FF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 3005221f-7dc3-4e7d-a778-90780a61dc18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 81bca356-fc68-49f3-be7b-298abd7e1a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 2910cbc2-dbcf-45b6-91c2-b9d19d8f04cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 ebdf9f09-2127-4271-b6e2-1a0b3fd4658b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 3c2acfb3-c376-4f15-b8f8-c54953095e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 57939146-b59a-4fff-8a0e-18a19cb46358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 02ff8919-0d52-42dc-93fb-ebaa5f4bb8a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA6FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6952;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h3F80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #983 233d4421-a4a8-4f21-8780-16a438e13ed8)");
unit.assert_eq16(16'hA6FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #983 35164b00-ad27-42b1-85c2-10ca8db2af31)");
unit.assert_eq16(16'h6952, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #983 bc68399e-60b4-4f70-9b41-c58d5dde4f59)");
unit.assert_eq16(16'h77FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 ae2ab3f7-3885-4fce-a75d-aba87427121b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 6c925890-fa3a-4460-8fec-98873da88e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 53dba284-5951-4a17-b710-94ad8932a445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 14222a7d-1404-4932-9c0f-029c70749750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 89123454-e9bd-4f50-aae4-aa5812ce0d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 c841de8d-2645-4cf8-aa1f-e1c47a9fcc60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 3b749a69-ffd4-4ccf-b692-47ac6876d80d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB20A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA58C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'hB20A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #984 a84154a5-4b35-462a-9340-94fd94ec6785)");
unit.assert_eq16(16'h03F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #984 6ed1b957-2f04-488a-b074-cbe7aed70fe1)");
unit.assert_eq16(16'h6161, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #984 77fadb6a-bd73-4e11-99a1-82dba1fd331b)");
unit.assert_eq16(16'hCD85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 34ca7310-1280-426c-b3c3-54427bd9372f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 d085527c-5f11-4d5b-bfa2-ca5cbcd59c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 b17cfb71-3ddd-460a-8300-e0ebd1b10937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 13e4b7d0-a161-482f-8025-070d2ecde579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 bff273fd-1936-49f4-819c-2efb8154450d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 a748e458-d55f-442c-a757-36134e0e2bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 068c26a5-aae2-4339-a34c-87266569db9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF76;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEAA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'hED05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #985 fda996f8-dd67-4198-be88-4c4e7ad8b836)");
unit.assert_eq16(16'hDF76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #985 c5d7bee2-3647-4294-b93a-2edb8665341e)");
unit.assert_eq16(16'hEAA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #985 59e50f44-ed18-486e-829b-e745755b4117)");
unit.assert_eq16(16'h9A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 dd88eb9f-f673-47fd-840b-942fa004d3d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 b6296ce0-2db0-4c58-bdba-db96cc47ee42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 e36a622f-b211-4240-92ed-ada210f02b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 bfa6b6e6-0187-46c3-99a4-f504ab4c1711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 e8080b8f-0a08-432f-84b3-b3e814d8bbe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 90b068d0-126a-4c79-99ac-f54a06b87290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 6e072429-318e-452f-b8e2-0fbaf51b7288)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC415;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h70C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC799;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'hC415, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #986 7a8eadc5-d46a-4b1e-afa9-850f020a6433)");
unit.assert_eq16(16'h70C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #986 ecdf3936-47c0-495e-ac61-a9bf14882148)");
unit.assert_eq16(16'hC799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #986 8338c922-ed58-41d5-9015-d0f7a6690e90)");
unit.assert_eq16(16'h4D09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 33579f97-c06e-4a44-8c62-fc8b2e6b35f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 e0a51239-28c1-4c2a-89be-31a474fe7e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 81fbd929-c826-462e-b3df-7b2bfc065761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 816adbe2-efbb-4251-bc66-847c3542a8c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 d039d1ab-df5c-46c1-8d25-31c6acd99279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 63c92cea-5c8b-40bf-bc6b-28d193731033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 3a212d50-d755-4688-a6d9-df8c2f4400de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0315;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7386;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA752;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h57FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #987 7ee92461-3f09-4eb0-9bfe-1cf789477093)");
unit.assert_eq16(16'h0315, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #987 5c8647c0-1b93-489b-a4a7-0aa45ce6bfba)");
unit.assert_eq16(16'h7386, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #987 a31b07ba-e29a-46db-ba82-db91bc598f62)");
unit.assert_eq16(16'h1515, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 1764a9e4-62b9-424b-9494-a5bcc43b7fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 e2552ca3-09db-486d-b8c5-4470eded693c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 c3aff3c9-9d87-4f77-8fc2-630e86c83114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 e22c8c1a-1fd5-4f54-aca1-778848393c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 a224e796-054a-40aa-b41f-a43fa0ca0506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 58ddfee6-1446-4c70-a002-17d51911c839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 bd0894e8-84d3-490e-bec3-ce0baa8d9449)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC5CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8334;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'hC5CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #988 204dd0ba-509e-430b-8c07-1a605a1bb680)");
unit.assert_eq16(16'hAA1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #988 37f707ff-6bf8-41cf-9a1c-2d2b909dd518)");
unit.assert_eq16(16'h6336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #988 69008e84-078b-49e0-be55-898042daf89f)");
unit.assert_eq16(16'hC9D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 7c7039cd-d6bc-4409-ac34-c5f8dcc41619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 41038ee4-a578-4038-8aae-7729f5f7d53b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 83bf71f5-dbe9-402d-8e1f-f949570a787c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 19bb9c10-48eb-4ccf-85bf-ee200c23c5a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 5aa6a2c8-78ce-4946-b62b-f87d5c4a0431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 972c52e3-7912-4000-a389-5f995797fc2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 573ba3d1-204b-4a97-a7c3-1e0dfebfec35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h930B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h9F84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #989 37cdb9e3-d1e3-4d22-a54a-68f4817796bd)");
unit.assert_eq16(16'h930B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #989 5e33e58b-d696-4295-9125-e690b55bb058)");
unit.assert_eq16(16'hDA46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #989 288bdd10-82b7-4516-a62c-c7ebf69c81b4)");
unit.assert_eq16(16'hC76A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 d40ddac2-e240-4bd1-9ae8-632dee9503f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 3243258a-4cc2-4ac1-98ea-36bd381d56cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 4a9c4b47-3347-470f-bd4c-05737cc76b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 157c056f-ee21-4601-84a5-8f36fead2d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 02277d1d-d7af-4497-9a8c-395c30919503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 49adfa3c-803b-499f-a92f-56c9ef1c31c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 c48e40a3-60a6-490f-9beb-6dac7113aba2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD722;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'hEC98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #990 44184733-bd13-4b8a-9bc7-2f329244c0ff)");
unit.assert_eq16(16'h1A5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #990 020503f1-2371-47a5-9023-72c181bb7695)");
unit.assert_eq16(16'hD722, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #990 ca13824d-d180-409a-8fd2-b378eb819b9c)");
unit.assert_eq16(16'hEA5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 519c66e1-30c0-46e0-a687-39fbfb9b5219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 79194aaf-eba7-487d-b552-25c5cbdbc126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 8d5e79ed-da7e-4f10-9eea-955c683cb3fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 139b82b7-7229-4aa2-80fb-20d262a0c4f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 b9e47ae8-5923-4967-bc8e-3dabe8a70529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 cf5ca75f-c56f-43b7-86ec-7c4b68a6864f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 2d09ef5b-e8ca-46b3-8761-eab2cd38fd1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D59;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'hDA68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #991 114bb555-4371-4825-ac9d-85e48a03df48)");
unit.assert_eq16(16'h1D59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #991 8276b74b-674f-4e46-97d2-9e2d4467f476)");
unit.assert_eq16(16'hB0EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #991 9e282eb3-fee2-47ed-8532-4a1722cb661f)");
unit.assert_eq16(16'h8545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 535e8fea-302b-405b-a3aa-1a408ecbebfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 d92a5ccd-452c-4142-901b-d3f055bd1776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 76123976-7533-4c13-8fd9-16d1a9589624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 972bb72f-2af1-44fd-a5ed-c109feedc410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 088f6852-ba6d-4454-9ca8-a36451f4c8b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 55fa1f73-c007-431c-911f-2e461a416525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 d8e15d09-6742-4f2a-8463-37d391706371)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7DDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h7F5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #992 d85ea60d-d208-47cf-a136-ae95b684a266)");
unit.assert_eq16(16'h7DDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #992 b8ec1183-6636-404a-b6af-9aac120a4768)");
unit.assert_eq16(16'h0CCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #992 88957323-6f99-4f27-816a-93f5f30a744b)");
unit.assert_eq16(16'h7A2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 a8f57a4a-88f4-4c71-9cf0-94c8966dbc0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 8a4d3260-55a5-4733-abc6-ffc8e70c09e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 faec3084-74bc-4ee9-91dd-4796e805da45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 dae8690d-59bf-49ae-802c-5f3b4d1ef5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 e65c8b36-070e-48d2-8a8d-97a9bbf3649f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 3eff0696-28c2-416f-8265-a7645abb5bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 912dbf05-f477-497a-aea0-1172e7d586d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC38D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h59ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'hC38D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #993 62913144-dc54-4820-8a11-0b602f36106d)");
unit.assert_eq16(16'h59ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #993 db9eb2c9-bf1f-45ec-ad86-fd08ff2e454b)");
unit.assert_eq16(16'h9FCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #993 7164c24d-c7b6-4556-8cc2-4cd7edd3c032)");
unit.assert_eq16(16'h3385, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 66b4a161-f958-46aa-940e-7898a2338449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 bbecc438-c6cf-4deb-8de5-71484552306f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 84ec16ef-6546-4797-98d4-9f5a84374e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 fa2d65f6-2633-403c-9918-18c3e0c83c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 fc43d66d-bc45-4b8a-8ff8-a3f48181a146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 fa0106cc-3457-460a-8e91-b1f7ae86e814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 f957e4e2-7d20-4714-b4d6-f52ab910875c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF629;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA274;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h272A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'hF629, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #994 01ca07aa-a8b1-40fa-9e03-b35813973d0b)");
unit.assert_eq16(16'hBC66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #994 1157d979-a418-4886-93bb-8948ebd19436)");
unit.assert_eq16(16'hA274, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #994 c823895f-950e-4c1d-9528-56494eb7e16c)");
unit.assert_eq16(16'hB7E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 cbfdb8b3-0fd3-4cc3-a2ee-27ca626b1e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 96acae31-2df3-4bfa-a6ff-9b258ac31d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 c428c1f3-b578-46f4-a91f-e6f1ea63a5d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 b734671f-6ba0-440b-b722-cccc4a322b75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 0c7ef5b0-db3f-4f6c-ae8d-3e5a5a055af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 16a99886-6b14-42e0-b70a-edbf1080684b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 6b992dfb-f713-4e7d-97b1-238624a3b1eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3713;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h3713, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #995 58e11ee2-03f8-492a-8191-86ca9e9a3542)");
unit.assert_eq16(16'hD4E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #995 3dbf2e43-3291-4018-9df0-419adcd700eb)");
unit.assert_eq16(16'h0A8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #995 89d83bdb-b723-417f-a333-8130af49822e)");
unit.assert_eq16(16'hEBAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 67f51869-c85c-46e9-bc3c-64f4b6fa4c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 0354e24f-91d7-4020-b330-5007766327f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 a1214422-b1ab-4d50-92cb-c7aa158b8724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 2b00d48d-33a2-451b-a1ca-881c885622e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 873fa968-e0e7-45a5-adff-ef5afce6ad33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 c9b09761-8400-4d74-a3ac-b98fe58ef1a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 df1ad7c7-8bb7-4891-9cba-d708f5c69691)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA6F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'hBA6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #996 ea57d76a-9be4-4c35-a8ca-6ebb2899a1ec)");
unit.assert_eq16(16'h20BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #996 9fbb06a6-411a-44ac-8367-b059a5d1ac2b)");
unit.assert_eq16(16'h0F84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #996 5133c663-6fc8-48ab-b12b-1480db7adfdb)");
unit.assert_eq16(16'h7713, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 3e9f5450-08d3-4697-81df-35c4622a94b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 25c09320-a371-4dcf-9aa6-c18a0bb5c113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 74095ba5-159a-4c14-a0e4-d8973b28b1f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 016048be-a1a0-4f49-9234-9e7936cfe9e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 a55aa3b2-9c55-4b7e-89ff-6cb760048e44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 976c21a2-60cb-4beb-b74e-032641a693de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 8575f769-c3a2-45e7-8cee-7372318facb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA3E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h9E49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #997 e23174ba-b963-42d2-b2f5-968f1fb3864c)");
unit.assert_eq16(16'h4C39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #997 2b6217e3-82b9-4b30-80db-b5db6f06699e)");
unit.assert_eq16(16'hA3E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #997 66df1bea-11a5-41fe-a3dd-27ee0b92e2f8)");
unit.assert_eq16(16'h55D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 f74e33f5-803b-4f84-82bd-1c2934296f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 b2835873-e7ea-431c-ada0-71ad222dd97f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 c5e8fecc-2cb3-4958-b615-f8ad8f048de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 d26ffeac-a3ba-49b9-8ece-4ab2fa6c4277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 65c9cc2e-743a-42ba-8682-427719158de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 26920f28-47cf-4f66-8aae-f7a96187bd21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 5b2134db-f990-44fe-8acb-9a579a9166a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC222;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8555;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h91BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'hC222, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #998 f66a1ba8-a2f2-4cc5-a345-799997fc8c42)");
unit.assert_eq16(16'h8555, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #998 a51a7df4-0301-4017-a97d-e26485ab44fa)");
unit.assert_eq16(16'h91BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #998 74c98744-cabe-4b36-8c02-cca8b628d7f9)");
unit.assert_eq16(16'h9870, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 f0013210-0b32-4220-aa4c-8ac24348bf88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 a2cdbb66-a161-4bac-9cf8-4b3a72d2dfc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 81f98750-0ad7-4100-b6e6-3e6a1cfed6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 f3f0bbd4-2050-4ad4-ab29-b5944e2d5285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 6ce6aaf5-7b41-48e3-9c7c-34aa02023be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 3687ace9-bdf7-4c98-8993-0cb4326f19f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 d647633b-dc95-492a-82d4-77e227dca2e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2FFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h668B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h3D34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #999 2bd90f26-9d8f-4bda-b691-68018fa1fabb)");
unit.assert_eq16(16'h2FFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #999 62c3b77d-9c8b-4884-997d-4c5a6942d741)");
unit.assert_eq16(16'h4BE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #999 b0327a2c-4de2-420a-99fc-25f638b23f0f)");
unit.assert_eq16(16'h1580, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 383adb66-ffe6-4136-8f28-cba975d4eb31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 44fa462b-6a1c-4dbc-9579-4a657b60ced2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 a5ba85b8-3400-4b9a-b604-bde691b895e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 604226d0-7dd5-404a-a1ff-a5a1c6295aaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 f354d399-7cae-4f36-8331-5dab28a56c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 55a2ceeb-878b-466d-9406-0b0f9a9258b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 fbda0192-5174-4b4e-adb3-5280af33fc77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF44E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA106;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'hF44E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1000 382201be-b27f-44c3-9528-de47b5dc505c)");
unit.assert_eq16(16'h7E4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1000 150e5b76-c41d-4115-9189-b134ef9ed5e4)");
unit.assert_eq16(16'hA106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1000 b77410cb-6283-4d7d-ba63-6d27da1e57c3)");
unit.assert_eq16(16'hAA32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 b57033a4-2b4e-4d57-95a7-0267cda89d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 f0b7fbc3-357a-4e41-b298-44eddd7cc652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 273dd816-2883-49e1-bcdf-88591a54aed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 e77d35ee-6c20-47df-a359-b2dc4e60d957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 827db415-1ac8-4b4e-b8b4-693036419b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 17dccca9-6989-4581-ab8a-b81878cdbbb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 a7039917-600c-4577-ae8f-ad8b8f8257fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3035;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h24D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA1F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h8B63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1001 b6de73e6-049d-4c14-94f0-b9e34067c0b2)");
unit.assert_eq16(16'h3035, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1001 a480de80-7c61-444b-a646-4c3376c5aeac)");
unit.assert_eq16(16'h24D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1001 a5221317-8813-4120-b8e4-f9c9f71a9560)");
unit.assert_eq16(16'hB5EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 3caeee4a-d441-4530-94a6-f4140ab338b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 d978e4eb-7877-496a-8851-0beee402fb1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 970d9cfd-a5a1-4d88-934a-8c29aa97cf62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 d99975de-ca6f-47eb-b94f-7a211e827465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 5f03aa0e-85df-4f3b-8ed0-6bd7e9e30f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 7be94583-5925-4f28-b3d4-6a928ca8eb35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 573b691b-8b16-4602-8244-616839fd76cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB4E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'hBE9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1002 49bff969-c23d-4a3a-a6a1-1376de3ab9d7)");
unit.assert_eq16(16'hC4CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1002 4c824951-285b-4f9b-aaba-2e5db6c3d180)");
unit.assert_eq16(16'h0D9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1002 06fa877a-b69d-454d-8229-a4b3c799292e)");
unit.assert_eq16(16'h92F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 6e319e5a-0c99-4865-b885-1576dc62378c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 b4650e09-7ae8-4fef-9df8-0c7644c7ed74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 ee80ba5c-f75c-4ae7-9825-46510f1befdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 bb2cb8c5-902a-4775-b198-8c190b166d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 df5dc89b-fab4-4024-bd88-68884cc20d9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 85c4d25b-5afd-478e-9719-3a5cee536820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 d3b08f9b-8da3-4487-ae11-fcebb4bfbfcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE107;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA131;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD2EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'hE107, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1003 15e3ac69-1eba-44f7-93cd-675df7d5f5ad)");
unit.assert_eq16(16'hA131, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1003 8d6623d4-d98b-4d8d-906f-9d3c6978987b)");
unit.assert_eq16(16'h4C4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1003 9a416ff9-47fb-4d27-bd65-d59df8eab064)");
unit.assert_eq16(16'h4D25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 1311ae4a-9869-45db-b551-dc3fa8297cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 8695f030-4de0-4ad7-a6c0-01750edbe7a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 fa504f58-2428-4753-bee6-3ffa302d4d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 1d1ddaf6-d0a6-463f-b69d-650525fc00b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 3439d595-8073-43ac-a1ab-a47690539c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 cad7c2f5-fdb9-44a6-ad87-4b9f6f1e5215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 2d139f5d-4884-4902-9e55-57043ec6a17d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB706;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1D50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE71B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'hB706, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1004 5f6ea689-62cd-4865-9e94-c43ce9301152)");
unit.assert_eq16(16'h20EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1004 5f6e6e07-f511-4a30-a278-1dbd897d221c)");
unit.assert_eq16(16'h1D50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1004 536f1ba9-e563-4c34-be01-98f1d4c731e1)");
unit.assert_eq16(16'hEB66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 34968cf7-f785-4b19-a042-2922ae26b043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 b0b6961e-5304-42d2-9334-5a422df97374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 94d398ec-ad48-4424-ab9c-66bef5a6b671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 9537f746-f4e0-4a16-b0db-d9a53ec4fbc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 f9367e70-ac4d-416b-89a2-af3aa53abdce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 b0021656-b015-4b13-8cae-5dd2756fb97e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 3da551a6-353d-4b39-815f-7352e76546c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h716A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h757D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA724;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h716A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1005 41879fbd-dc6d-47f7-a7f0-3e5be35337e6)");
unit.assert_eq16(16'h757D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1005 db440814-18ce-432a-85f2-e4b968ad1e9b)");
unit.assert_eq16(16'hA724, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1005 b34c61f0-1a6d-44e0-8b5f-0d2be15f1e5b)");
unit.assert_eq16(16'h14FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 80ddd2cf-a1f5-4fca-a694-913147161385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 a4367812-95e8-4ec6-8917-4b80e54d3f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 3f399bab-c669-480a-91dd-7d523558db9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 5381404c-5165-4f51-b947-72b0945be109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 b08ca52e-2ff3-4bf0-a832-38713aee7e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 a2992237-866b-4529-b559-cf505b15de7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 143d810c-fea8-4a0c-b01e-8300efddad7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h78CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6462;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBBA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h78CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1006 79768f9b-092a-4aff-9e73-c1946f7b770d)");
unit.assert_eq16(16'h73E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1006 3f7bf817-b0e9-495b-8a41-a4018e3b6ec1)");
unit.assert_eq16(16'h6462, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1006 d6279c78-4828-461e-959f-cb200d539933)");
unit.assert_eq16(16'h3751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 ec447934-2cd7-4eff-a18c-c7e63be166c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 e92270de-7fed-4e9f-8580-a3fcf6d5142e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 18e2b0b8-93d9-4ad7-b902-6ae2dfcbcbe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 a0b5cb52-5812-4bb0-9656-12e6229679b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 141cfc13-b3f0-4f70-9978-467046bfdbe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 14964769-fea0-4dca-aafb-8e0f85571a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 69f474c2-3a43-40f0-ace4-f882f92a87f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h049F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h26BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6B2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h049F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1007 a39c2a06-2886-4f67-b857-bd447ea7f7a1)");
unit.assert_eq16(16'h26BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1007 8d081b01-1bb8-49d3-9a0c-3b00fd2d4fca)");
unit.assert_eq16(16'h0EA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1007 fbefd332-bef4-46c2-930d-8972c9796183)");
unit.assert_eq16(16'hD7FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 2a374f8e-f6fc-4c6e-b544-306898d5b3b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 f0c0ccb8-09ff-4d7e-be99-d6f0c75b754f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 4ba934c4-28b6-416c-af7b-a15bc954e428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 b4d98885-7ce7-46c2-b9a0-7d94e08053ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 01a3657f-7075-4bb7-9764-c3dd378790bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 dcb32d67-4e11-45f7-8656-c24ae1537dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 f18e7222-0010-4dcb-bd9e-369d913090d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2DBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5EEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h916D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h2DBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1008 3bacad9c-5d10-4d35-86f1-87ab79676155)");
unit.assert_eq16(16'h5EEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1008 94b643af-0cd3-4f84-a1bd-0dac7740b130)");
unit.assert_eq16(16'h916D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1008 b0130c4e-c163-4477-ae06-3b1be63211a9)");
unit.assert_eq16(16'h3EAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 bf442d29-c561-4f13-b387-76307e64e47f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 51b1c78d-5754-4318-a415-6252a8c85947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 911c9095-899e-4cf1-a5b2-e8a085acbab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 7dfba0a9-8d45-4818-9354-14729584950f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 6d941f69-64e0-4e7d-acab-fa277fe01b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 bec8f62a-20c9-45af-9682-4a485bb5b824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 69dece68-98b3-48df-84f4-f98a093d0dd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4229;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9567;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hACAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2706;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h4229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1009 ee66a232-a28e-48ec-a02f-372744587c63)");
unit.assert_eq16(16'h9567, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1009 07f67d6d-747c-4fa1-a961-60c18bc003bf)");
unit.assert_eq16(16'hACAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1009 0ef260b9-faf8-47d3-8d88-f30a7681fc03)");
unit.assert_eq16(16'hE50B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 2226d018-0920-4cea-8182-d0b03e143851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 ec70531a-e8c6-44ee-998f-62990d12bd26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 4b7a2e1a-6d52-4154-ab41-5252570fa3cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 6d0b14c3-513f-408b-a564-9f674ede0e69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 2b668f2d-309d-4b70-995b-5ae5d1a91047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 18add791-59a7-44cd-b532-e106cc85263a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 3e5bd8dd-0c55-4fdb-a16e-19052d4793d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3BCF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8088;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h6C14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1010 5c944aab-4e62-485b-a925-872e88d8a160)");
unit.assert_eq16(16'h3BCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1010 8e1c1938-4781-432f-989a-f562075435f3)");
unit.assert_eq16(16'h0990, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1010 15c7e40c-82a2-4046-8536-f7b72a77d47b)");
unit.assert_eq16(16'hDA3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 97739fd6-8837-45b7-86d1-0907fafe4a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 82b7422b-f72e-4079-87ad-29351efdebf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 1199e72b-b1d4-4e66-974f-bd75d8966cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 d1de6ce5-f377-4580-ba35-73b4c55488f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 c571deb3-bb62-4996-a7f7-ae293b529404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 46fdb78c-e846-42d8-8860-4050031eaaa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 fa4319a6-a460-437f-9f14-bd9b1882c690)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE136;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3373;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE6D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'hE136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1011 553d0bf9-6e35-4a7f-9415-c3b4944e9794)");
unit.assert_eq16(16'h3C17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1011 64444e17-30df-46b6-afa8-917ffb64b13c)");
unit.assert_eq16(16'h3373, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1011 cb233909-0b2d-4ae8-814a-748c95d3482c)");
unit.assert_eq16(16'hB571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 6be437b3-0ce5-461e-8fe3-727b66a8f230)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 9a7b85fb-b32d-40c8-954a-6de9be468d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 0934ff39-46bf-4af3-832c-031f8cccb169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 5df0cbc1-3c3c-4798-bd51-39b195dd2373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 22c97331-eaf9-4a47-850b-a942e69335d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 5cfa5c36-5431-468f-bc2e-d19fd44cc2e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 37cec4b6-860e-414e-ae49-baf63fa01af7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0044;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5515;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h0044, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1012 4823bd22-7dcb-4547-89ea-cadf84b479b9)");
unit.assert_eq16(16'hD7B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1012 3c462c18-2c50-4614-93c1-47396f295cab)");
unit.assert_eq16(16'h0BB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1012 a52f3776-484a-4248-9827-e2746293bd28)");
unit.assert_eq16(16'h8FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 f9ae5fbe-5833-4c71-bd58-3d82fe37d8a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 a355a4eb-fa6a-4de6-9c4e-9134f3a3509a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 0ebbca52-65f4-4fbe-b7cf-ced2b0930cdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 35fc3071-4b94-4e8d-aba3-d35c78ee6c53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 6ae46828-1591-45c8-9141-81ce49065506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 a90b65b6-7e7a-4218-912d-2b372b782d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 151282d2-5c7f-4b9e-ad74-55adad188f92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h193F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h50A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9165;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h193F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1013 e3b23aba-8385-47f1-b484-094f87f4a35b)");
unit.assert_eq16(16'h50A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1013 167f4e72-e81a-4c35-97af-f58aadacd836)");
unit.assert_eq16(16'h9165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1013 7ed15ca1-f85b-4699-836a-230bc78cb7bd)");
unit.assert_eq16(16'h7EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 62f6e663-9595-42fd-98b9-4aa7f02476e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 db1471f4-7d00-4187-b550-13c609736ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 e184c5c7-0faa-4ead-97cc-074efec055eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 dab7c34f-0133-41c0-a1cf-f53eb921067e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 40fe4e02-24e8-4425-9226-ebecfad1ed54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 623d7486-e74e-4ef2-bbec-eb8b06608f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 1644d24f-e3d4-403c-b493-9e9d269d1333)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h302C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFCBE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h36BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC7A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h302C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1014 bc3a334b-54d5-452a-8102-7e86f3665d54)");
unit.assert_eq16(16'hFCBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1014 b639134d-c45c-4793-90da-d5a1019205c4)");
unit.assert_eq16(16'h36BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1014 633ed7aa-d63f-4afc-af07-0e535b5df6c8)");
unit.assert_eq16(16'h1862, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 cf4a36c9-c8e9-4199-b161-5b9117ff84ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 30d4442c-8b43-4887-a51d-34f64474924c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 f46a899a-1d3b-4977-8b66-fd5801c6555b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 e2a084d5-d88c-4e74-8073-d717e331ee01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 5ab8ac07-3833-4039-a1a5-abba025564f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 09231cbc-0cd9-4db9-8f63-03661a25e8db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 42342170-254d-470b-8e51-51d020c97b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'hBF11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1015 891af7ce-cc28-4180-8355-b8fb586266b9)");
unit.assert_eq16(16'h62DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1015 81d61150-43dd-4562-bdd6-c0345085d042)");
unit.assert_eq16(16'h0B15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1015 59f5cef6-2230-4c3e-85f9-dd80269d8ab4)");
unit.assert_eq16(16'h65BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 4271c56c-32d3-400e-a5b5-3389ce44b20e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 af4a81cd-8e76-44ef-93e2-80ac7b8965e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 6b7e74c7-a314-43b2-b2fc-2abaa8e8859c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 416d07a2-a19d-410b-ac82-42c976b8a0bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 22c42328-460b-4303-95fa-4b9c40be1c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 d026b8e6-703d-4ae5-baca-bc07a94861cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 9e207f21-09ad-4307-9f06-a4f06484eb92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7EE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE640;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h463C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h7EE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1016 0d4fc796-935b-4313-ba8d-047940b63a29)");
unit.assert_eq16(16'h51D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1016 5fa5603e-ab7c-42f8-83ca-9c123af484fb)");
unit.assert_eq16(16'hE640, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1016 e41b41d5-6df9-41f2-9577-0c2c94429874)");
unit.assert_eq16(16'hFA8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 eae7752f-70cd-4329-8a26-b7461c3835fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 078a3854-ac57-41ad-a7aa-ada7dd4fedee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 73518b6e-7a8e-402c-a37b-37584fd49737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 0aab52dd-9b58-46f1-bb8b-2aaf78e75a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 23734a84-66c7-4bff-a243-5a429b946761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 f9a909ff-3652-4dc2-ae3c-4a246db38853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 82f0498a-38ef-40ca-8398-ecb2ba3d35bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9A11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h7F25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1017 266d8300-558a-47f7-adea-e9cab4a42320)");
unit.assert_eq16(16'h3E1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1017 a7fe264a-a5a0-4a2a-a6c0-7ac264b6937e)");
unit.assert_eq16(16'h9A11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1017 e1754da9-d4ec-42da-a1ee-1a0beb5d9694)");
unit.assert_eq16(16'h577C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 e298351b-a008-4b99-909b-abf7b9c20181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 a3158a52-391b-42d7-87b7-ef8a8b7cf362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 6e3fea2d-86f2-453e-8e22-899bd7ea8af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 21473f21-b39b-43db-9d3f-0b210428e718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 cb945a0f-b5f5-451f-96f8-de138904c494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 e9aae3ab-dd54-467a-93d3-21fdf7d85c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 d828888c-95d3-492c-b1bf-264eda239e1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4CCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4282;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2661;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6267;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h4CCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1018 1667f94e-f05b-49de-ac83-acd6d7426255)");
unit.assert_eq16(16'h4282, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1018 2af40f82-1d81-459a-a116-3dd1e7e8606f)");
unit.assert_eq16(16'h2661, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1018 709c0d75-f15f-454a-a39f-02434dd9a922)");
unit.assert_eq16(16'hBB4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 22d83dd6-2a66-4a2a-884c-7349e79f2abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 bf04fe1a-60f0-43e1-b08c-4b38bc5bd078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 aed77f8e-89b0-4408-b051-5622038746d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 a8065a38-27a1-4ccd-b4fe-9604b6272cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 ed26ee0e-ca7b-4540-ab3e-8fd6e31e0091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 0835db5e-038f-4bca-8414-aabcc4935de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 105bd9d4-fde9-4f03-8b4a-4e7d7bc2a972)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h725C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h21F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h725C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1019 528ee428-75f2-4db0-a0b6-ae54a230c991)");
unit.assert_eq16(16'hEFA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1019 21e0a1a1-f716-4549-a05c-ed5941d4f7fc)");
unit.assert_eq16(16'h5BE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1019 2f4b3ed0-8f56-454f-8fa2-18fb37cd128a)");
unit.assert_eq16(16'h639F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 eff7fc7e-e7f3-48d5-838d-90db812bf4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 4bb95e3c-2bcf-45ed-8ebe-26121fccd87a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 ebda8d39-cce5-44ed-adc5-0f25d528282c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 e53136ca-35e0-4760-8a4e-66827b154d9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 37ee8671-99f1-4158-8d13-d8b73be8fa0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 464fed26-cf79-4ebf-9b7b-a001d9541bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 958034ca-7946-4bb9-9f82-8457d430af94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCBCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6BFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h12CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1020 03a7b23d-1314-470a-b4ae-3c47192bd557)");
unit.assert_eq16(16'hCBCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1020 c8d57aab-da62-4c2e-b854-ce49793a80a7)");
unit.assert_eq16(16'h6BFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1020 b55b4a07-2a9a-4536-830c-dfc3ec73ecbe)");
unit.assert_eq16(16'hDAC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 02bc2427-506f-414c-a91a-dde2bc77b39a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 2a438986-4654-4201-89dd-3998465d1537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 7db28f82-7d14-4e5d-a2ec-f0a4c6b1b811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 0172a24f-59cf-4573-b164-402dd2cd6793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 48792eb8-bc4a-4e39-813b-3b80cd350ca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 d3fb79af-654d-4549-b199-03a4b98c46c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 892c45ec-8121-4ddf-919a-5b76453f0acb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD3A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8321;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'hD3A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1021 0f5f2c58-8c18-46cc-baaa-7171fce8414d)");
unit.assert_eq16(16'hABEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1021 ed546ed2-2375-42d4-85e4-9a841166860d)");
unit.assert_eq16(16'h8321, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1021 25ac4786-54e0-4bee-9612-fa3f3d4ec9bc)");
unit.assert_eq16(16'hC659, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 f8e50b88-3b4c-4603-967b-93d9115109b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 d9bedb48-f1d4-425d-81fb-35fae6bd3699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 3f0b153a-f860-48f7-80d6-06fca4d216ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 f704b0f8-2483-47d0-b746-412856c21eb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 8fee4db9-60d7-494b-a372-fa3cd44853cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 4d8ac61f-e8e3-4709-9057-2377c7523b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 5ea756d2-1809-4461-a115-4e32bda58c82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4590;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFC00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h4590, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1022 14f774b1-b468-4b32-97ab-5a71aa92f90b)");
unit.assert_eq16(16'hEA4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1022 f2f6a2f7-bd02-44bb-ba48-1b2971ade35e)");
unit.assert_eq16(16'hFC00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1022 beef7411-5495-49ef-8dbc-8b497e43bf91)");
unit.assert_eq16(16'h22C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 f780abfe-4f66-4c75-a29f-4cb3c8bf3a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 f48c10b2-e87d-4a58-897a-c05dcef57b84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 62a13a3e-2439-47b0-ae43-e576a61d63c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 df932475-39fe-4acf-bebd-c180da9e5b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 80f7bd9f-d1d3-4b8f-8264-1bf9f40a61aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 704a9dbf-11df-443a-a816-ebc62b2b4ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 5d08a5e3-d288-4958-85ad-3225544ec800)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF21E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h13DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD8A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0333;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'hF21E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1023 047bc874-9de9-4f16-95be-4e2139dda598)");
unit.assert_eq16(16'h13DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1023 827e9a49-7242-4440-a6dd-7c585a0a7ed0)");
unit.assert_eq16(16'hD8A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1023 50530d36-5fc3-430f-a708-3a3d03dd4f3f)");
unit.assert_eq16(16'h6A8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 f74d0fc3-7597-4c07-95d5-e8671aa1a444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 d25665cf-6013-4ea6-a29d-938fb05e9237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 59a00ce2-6e49-4443-bf07-e54f11ff5868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 23aaaccc-0d64-4067-959b-a5a7e6c33e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 7ae343f8-7f75-45a6-bfb0-f00a418bfe29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 25894e12-fbce-4302-8a42-a2678ec4e8dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 a58cca6c-874f-4037-ad84-5522b6f02860)");

#(CLKPERIOD / 4);

unit.finish("ld16ddnn ('LD dd,nn')");
