unit.start("jumpjpixiy ('JP (IX|IY)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #0 742f5544-c1f0-4b2a-8b64-8aa0e458b7ba)");
unit.assert_eq16(16'h0F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #0 228ad94f-c35c-4b97-9aa4-70f3edc85375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 98d2983b-4e31-4089-80d4-da34a7546f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 ddd61008-ae0c-4188-9c91-b095fdb710b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 36013340-aa65-4253-a041-304258f415df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 de6bd51c-babe-4306-988a-7168e05fd2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 f253c793-591c-49e5-897b-ef59aeb716b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 f360ac37-3d43-4728-9daa-a534ecbb0e05)");

unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #0 81a01815-e12d-494e-8909-abd6180efab5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0002;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0027;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1 3c578993-5bbb-4443-a966-471b66a39ccf)");
unit.assert_eq16(16'h0027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1 deb38f79-78d0-4a21-88a3-e1da996730fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 d6dde7d2-5c53-4e62-80b0-9526b8bf889c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 46f7cfa2-41df-41d4-89d5-6ddf984287f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 17c9cd4f-3986-4d99-9834-bc83a1135f7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 0864f5a5-65c6-4555-a4be-c4899a1622a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 33c091d7-f296-424b-b23e-45ab911ec375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 ee19637c-e386-4180-858e-b895f57707d7)");

unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1 1861acf1-96b6-4fd4-a32e-154590ae5b7d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0004;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h0E02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2 9de927ef-0fb4-4558-a15a-8a1fb6e0e544)");
unit.assert_eq16(16'h04BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2 6cbab61e-de54-4b03-bca4-96396f15300c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 3cc73e93-7afa-460b-8a77-6f066e4e1715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 0970570c-77f1-48bc-8880-54b269032a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 7f8cdebd-1779-45cf-9927-ad50df936817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 24f5f495-2dab-4fc0-9d36-6bd43979f5ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 49987a67-0ba6-4a24-9d47-0ef848bac3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 6672a5fd-cd27-4280-916a-b589ff53bbf6)");

unit.assert_eq16(16'h0E02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #2 2c7b64e8-442b-4881-a9ff-439d8e9ad4c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0006;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h023D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h023D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #3 943d8227-7c6d-42d4-a7c4-51c306c97cd1)");
unit.assert_eq16(16'h0C9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #3 a09be002-dca3-44e2-93bf-c17b495eadff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 db2b752b-703e-4262-9e04-63e5cc0468d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 690deabb-47c6-40cb-8cc4-d27f5d2ef938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 b5f4409c-e43a-4b2e-aac9-2beca2034297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 883df74b-e4bb-4743-b907-6583c0e81367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 fd75c498-626b-42f2-b514-14fbb09cea6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 fab3d682-b644-4dfb-97ab-028b90052cf7)");

unit.assert_eq16(16'h023D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #3 76444dcb-04ea-46b3-be85-725178b754c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0008;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #4 36cb2fd8-5445-484b-8d4c-9d9f9fcc7305)");
unit.assert_eq16(16'h071E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #4 88a10ce2-0fcc-414e-9cfc-ad9c433eae1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 35279385-5846-4ffa-aa8b-253e04c06d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 cd0f9e07-57be-4df0-a99a-e0e429c280dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 9932d90e-da7f-4f18-a84e-148b98d0285a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 65623c35-d1ed-456c-afcf-12f66f47587d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 9cbb177a-7b3c-48bd-98f0-d4f82453e94e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 f02bd219-3ffc-42e3-ade3-c0507af7ac36)");

unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #4 e530bf55-7728-4205-ad33-39a5b267fbd3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h0EDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #5 2dd10f3f-5543-4e27-820b-f4a5101c7063)");
unit.assert_eq16(16'h08F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #5 75c6d3a1-9d38-41c7-ae07-85e398d2de85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 75a590e2-aa23-4b3f-bd0e-6403c07faba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 1a964d59-365d-45ac-ab0b-2a529d0aee5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 18862849-57f4-411d-9f7f-bca30f32dff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 7095e909-177f-4fec-bf59-0c2f6c3585f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 93d448b5-a9d9-467c-be33-062b4839fec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 136b2b17-3418-412f-8bc5-1df8f81567e0)");

unit.assert_eq16(16'h0EDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #5 0abcbb61-922e-4508-9e26-e7dc17994977)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0346;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h0BD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #6 b1d9e541-cc49-48ec-8fd0-7dde1a03db3c)");
unit.assert_eq16(16'h0346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #6 6cd7e651-1123-46d1-8d84-de0d896ee668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 24624d19-c538-460d-8255-8b6a55cd5d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 60514fbe-67d8-4b87-83d1-3cdfad0aef0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 fe0e6ac1-ea90-4a2d-b9b5-6090639d70c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 7f69de60-d83f-40aa-9c6e-fd1a6cf81db2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 b24495ca-b631-4340-afa4-9d69434fb7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 a1624b75-acbc-4a74-b748-5357dd8c2757)");

unit.assert_eq16(16'h0BD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #6 49127d5b-faf1-4b58-b782-6887bfa9fc75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0849;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h0849, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #7 19fd6263-a588-455f-9be2-1b824df5455f)");
unit.assert_eq16(16'h00FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #7 dd11c1a9-9def-4626-9ef4-2e4d0684c5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 0c68993a-2b26-4fea-bd23-69df0e679c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 1085cf04-d95c-458c-b73b-ad5ef0745add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 7f87debd-7f39-4a75-a5f8-912839a98f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 06f8f117-5ff3-48f1-9dda-3560b46d4071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 f8d024f2-1fbf-4e05-846b-355959c020bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 d01533e5-7e19-4462-8bb9-e366355ba95a)");

unit.assert_eq16(16'h0849, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #7 4207690e-e50c-42f2-a240-580d66f2b92e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0010;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #8 fb865204-2ec4-490e-81c6-d60c70226448)");
unit.assert_eq16(16'h0A58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #8 180d4f29-85a0-41eb-bb70-893fdfc7fcb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 23951e9d-784e-4c3c-b21a-652ed4c6c0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 7d94dab4-fd46-41d0-9a2b-2918889b09a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 347dbcb2-bf14-4753-af66-02148ca5b372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 6b5845b1-1173-4db0-a6bf-6a776cd39cf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 7c20eb22-e16b-4944-beed-ae34107d0082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 414bb7ab-8445-450c-8556-63bc9e93249d)");

unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #8 ca6c440c-aa00-46a3-9382-de3d19627644)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0012;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h096A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #9 44fafc05-2c0b-4aa8-a99a-838fcc84e45f)");
unit.assert_eq16(16'h096A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #9 772a3ab4-41a1-4d06-8416-232cf2dc5cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 1977f83f-0992-4bb1-8505-5b07b7c36385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 56843f0e-421e-4687-9c36-e30ba9d81884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 d26f715b-5079-40ad-a243-e83ca40d8c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 b01e5e61-0eb7-496e-8950-2d2e72cd24eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 0a6f2cf9-cc38-4ef0-8fec-d9969ecc30b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 09c59a52-e294-4956-9ef2-51a4e9d2eff5)");

unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #9 b4c99dbf-cbac-4480-b1d0-d455983a62d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0014;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h0EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #10 d185a1b5-072e-4a65-afde-12263227e61c)");
unit.assert_eq16(16'h0729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #10 481220ba-5cf2-4e7b-b58e-d33e6a7b8897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 ad148fa9-55d1-4e39-8d51-9537bf07a238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 f6445fec-0493-4b49-8f56-812d6dbb8165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 86ae6204-9aee-443d-906d-12beda79c97a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 17f41c1e-13c4-4d1f-a617-575981b8c25b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 c89bf2ca-984f-4d49-abe3-1055bebac1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 f3da4d88-4ade-4722-b5c3-911501dec2d9)");

unit.assert_eq16(16'h0EB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #10 ecc5c75d-eab9-4e2f-8ab6-72bfa58ae6c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0016;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0477;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #11 a6df57af-ad50-4dab-9c0c-9940b8bba6d0)");
unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #11 4ca3e773-f3f9-4a17-94be-3eaf1643f91e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 da0c7cd1-aaa8-4c74-89e8-0c14c655d190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 1c19daf6-683a-4750-a746-4395d4b1692d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 55e71f2a-06cd-4297-a627-6d4155e1095d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 976cbef2-7ac2-4b49-a2b6-1d2ab0b6ce42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 ed1eacd9-cdde-4ba6-9ff9-f4de09b3da0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 75d58018-8764-483e-95a7-15eda6eb3d54)");

unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #11 f7cb82fe-0ec2-43c1-9c11-214f73d87747)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0018;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h039C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0927;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #12 3242d942-2741-4ed2-be70-8d074c30757f)");
unit.assert_eq16(16'h0927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #12 20ca9fd6-93a6-4dad-a800-379422555dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 312cad2a-38d9-48bc-a2a3-85ebce675ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 9b7e6678-681b-4087-b72f-fb642a0540a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 22029820-5da1-4735-8236-4043c7cb2557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 76ea286e-8af0-40b9-a647-ce4363b03014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 b8a76a5c-27fd-4d5d-9d72-22f0caf9607a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 463919bc-8c88-4b03-9a65-39a4c847c0a5)");

unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #12 83ba041f-416c-49bf-89ad-dfcf1ee5c0e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h0DCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #13 b6d1a9be-ec07-4fee-9beb-86ee28cad023)");
unit.assert_eq16(16'h02A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #13 08c654b3-175e-4b93-be97-33bdd0f11890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 2159ba20-bdb1-4a43-890b-b73464f745f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 aa695191-7eb1-47ff-8758-6f58b97c7424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 c1c18825-f265-4abf-839c-5b963837622a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 677cdf5a-24cc-4942-b43a-83db77fa5d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 bd7874fc-f57b-4b4f-a876-e9f5179cfda1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 2f5685b4-d0fe-4a30-9e29-5feeab06ec65)");

unit.assert_eq16(16'h0DCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #13 541ebb11-f395-4567-b830-77096b2c76db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #14 7a727630-8c71-4ab4-bcb4-c7563c28eb16)");
unit.assert_eq16(16'h0338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #14 c7c72fa9-467d-4ca9-944e-e473ce9db1e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 802af7e7-31dc-4772-a8f4-4e3ee92ab419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 4930ee23-0198-4048-a6cf-5f73fc97729c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 b3202667-b7e1-4222-a051-9ceb14bb0425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 4116cbe2-0793-4e23-924c-ab48cce79453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 543639fb-8bd1-4671-8e9b-43d9992f3c16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 1ee00709-1e2a-4e4b-a991-1b24244584f2)");

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #14 27b4a50d-6293-4314-b938-812619d9b840)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h0F57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #15 fd8d18d4-d1fb-4494-921a-b1a133115a07)");
unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #15 0c470bc7-a3f4-46ec-bcd6-c057313494ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 2cec5083-1af1-4908-a13e-3dec572ed536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 a5115814-20e1-48b5-9d4b-3706a350c029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 8b6cb38a-ffe2-44f7-a041-b4692eeb7053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 6309a115-2f69-4cea-9849-e9840044e24d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 163e6eb0-3e68-4fc0-88c1-2cebf0c4d326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 43c19032-7d7d-4f58-8039-cde60c181da5)");

unit.assert_eq16(16'h0F57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #15 e45f74ce-465f-4edd-8318-9768e1a00275)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0020;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h059D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h0DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #16 1d37fc0a-38ca-4621-8661-3679276781c6)");
unit.assert_eq16(16'h059D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #16 62226412-4ea7-4723-9d71-44d9db631e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 09857a2b-bb32-413e-a3ed-9339c3a1b70c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 a5e787ce-45d2-4f2e-8a53-42f41bf6240b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 ad74cf63-6e72-47ad-bb03-12b15f9bceba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 7e8869b7-3f6e-48ff-9a47-3ac87edb1953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 925bdfa2-ddb9-42c3-bdb8-3c523726a003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 4c61e3fb-2239-4c47-be4d-014bcb417a39)");

unit.assert_eq16(16'h0DFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #16 d7c5df74-933f-42a8-b4a8-00dea8750d34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0022;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h02C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #17 5a0545c1-a6c4-4713-9dcc-f6a8bce56e45)");
unit.assert_eq16(16'h07AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #17 7f16f5dd-ab23-41d7-bc01-34effd1c010e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 673679cd-7915-4c0b-91d5-64dbdeeb18fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 87040379-8c4d-43e9-be72-40ded3016e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 9d26212d-1aa5-45fa-9e7d-05411f36dd58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 7fd6e0e8-5db6-4fff-920b-555f7d27677a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 81b96b98-a3f0-4cf6-8872-0b7aeffeb6b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 7c8b9556-01ce-41eb-b6db-afec7736ae15)");

unit.assert_eq16(16'h02C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #17 a266078f-cff6-48e0-a01a-ac2b8cc4492d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0024;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0483;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h04ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #18 cfa0e693-c770-43a9-a128-25c222a8d69a)");
unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #18 4df2584a-f9ba-44ee-aa01-8dc9b281365f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 23bdb93f-c6eb-4740-b957-5faa444e3a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 94a7cd36-a607-4b39-90b7-7d6c6fcdd44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 ec1e559d-63b9-454a-a3ca-6db879ffa8bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 1486d6a1-ec1e-4b58-88e5-5b199f04729a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 b7ffa404-86b9-4dff-b453-e775ec9628ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 4855639e-1b74-4a96-8a65-4886f9a838b8)");

unit.assert_eq16(16'h04ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #18 024b5ff7-e8fc-4b2f-8d15-dc56e4d30c15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0026;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0550;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #19 1c352688-04e6-46bc-836c-e0e44584d528)");
unit.assert_eq16(16'h0550, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #19 232ce9ea-4663-4aa7-a5d6-9d61c3dc3d55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 aa06994d-8ec5-4ac7-82a8-c0606d08903a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 4e08b804-6680-433b-81fd-3a51dca821df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 58e39438-445d-4233-a35f-4d026d1fc76f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 6dee5935-33b6-4f04-81df-0200e8535f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 575b9df0-7c57-4853-94db-39c4c0fb9dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 319674d7-3285-4979-918d-ba87853025ca)");

unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #19 8fef8150-a7a4-4a4a-9496-afde62908b09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0028;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0265;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h0265, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #20 704e974b-51cb-48a4-8d78-dc65165afecc)");
unit.assert_eq16(16'h0C6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #20 907b73e7-a098-4b5d-bdcb-f97da13b88c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 929bea3b-ce2a-4726-a242-e19960a735b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 ed83cc65-1827-496a-bbec-d28ab5a64388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 8e76e95d-8d6f-42b2-aa10-82912ad3eb01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 048035ed-994e-4ace-8820-d7e910261b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 952e66af-2fd9-4849-a977-a499a3c7040f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 1f7daafd-3343-49dc-a56e-bac14783bee6)");

unit.assert_eq16(16'h0265, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #20 1f481674-e80d-4ff0-bb0a-191f4b20a5a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0211;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0341;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h0211, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #21 86c3e184-f626-4782-9513-ba119bb56adf)");
unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #21 e0fc89f3-643d-47d7-b2ff-0b3f469cc32b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 51d6f2db-f227-4756-a562-eadf474a552e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 d1afe6ff-4ece-43aa-8f2d-a931257ff457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 3f59c5bf-db18-4178-b9a2-c01bd1879154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 b245cee1-6505-42e8-b7d8-0563aa28d047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 ea22e1ed-46e2-43c4-a274-1de5896e2327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 5ed0363f-7a45-461d-bfdd-b35b33251e40)");

unit.assert_eq16(16'h0211, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #21 90b15598-3b3f-497f-898e-8215aa640349)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0750;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'h0750, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #22 834d5096-d074-4df8-a049-c9ce658829a5)");
unit.assert_eq16(16'h0D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #22 d849aba8-01e2-472c-ac1e-f2d7983b29c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 f9c48fac-7465-4c2e-9438-b94a20d48183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 9e0d5329-f6ea-4a89-95e3-3f210137b289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 249c13a3-4280-471f-9b53-d812c73eaaf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 2213f5d9-4102-44b7-9a7b-42c55ad57453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 a22e0548-ef62-42bb-9dc4-d44374fe0201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 2451f288-56d8-4399-9ba5-fd45101ddebd)");

unit.assert_eq16(16'h0750, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #22 d97fc011-ddc3-409d-8601-3de6a5e435c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0533;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h0528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #23 1968ce99-399a-4bcb-bb4b-f024dbcdb910)");
unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #23 df2164a1-02eb-4dbe-b60d-be5f0bfe977b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 52bff477-283a-459a-903e-6528995c41dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 ceadc5ff-076d-4f1a-9b06-80a7b5e11a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 bb605776-2279-4c14-8b1a-990cb3d2c7b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 d0008fa6-472c-4ae0-b107-4060da6680ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 b7880c69-5141-4695-9ef3-cbc272371c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 6f362c3d-46e3-47f3-8a9b-8813563b4501)");

unit.assert_eq16(16'h0528, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #23 e1ac16de-5564-4958-b979-17b074b93b7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0030;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0331;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #24 621d3186-77e4-4217-8429-1b53deef4379)");
unit.assert_eq16(16'h03FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #24 f259a93b-af31-4c3e-abbe-eb8726d50156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 8ecefc49-0bed-4307-bfe5-9bb4fa2a74b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 6d694946-622c-412d-a964-6dbbb0831703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 47f8d1a8-06c2-43fc-9163-2777b03071dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 266a3253-cb91-4596-8f6f-580f94cb7df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 cec5e18d-5c46-4f5d-8bfd-e115f9c7fd28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 dc76172d-f549-4ac5-b62d-cc841d03e430)");

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #24 0556a23b-bb3a-4f85-b2f0-6613e54f9592)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0032;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0472;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #25 4d393fcf-26be-4ad8-863b-4ceb1629d39a)");
unit.assert_eq16(16'h0472, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #25 e08099f7-9eeb-4c8f-95a2-054bc67c8b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 9cbbe240-c60f-4ab4-a578-87cd957b6f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 4ab28a63-e147-484c-af9e-54fc2f546b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 b9d0419b-b585-47e9-81a4-8bd2ae12faf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 cc56079a-d17d-4eea-8699-7c2072c671f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 e76717b4-0947-42ae-9ebe-cfdf961a98be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 3f587bfa-41e6-48fb-a2e7-f3a86c91f222)");

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #25 a1c0cf42-c3f9-496e-b21b-bdd7d76b4298)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0034;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h0FE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #26 4e75ee3b-ceab-4be5-b257-79637e477e9e)");
unit.assert_eq16(16'h0BB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #26 638a4fc6-7352-4b1b-a47b-6387fd30049f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 1ad08196-3cac-4e39-a45b-c70f504dd59f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 2cc1b181-dadd-404f-9f1f-b5f83aaf12c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 23ac90a6-ffe6-4b39-80ac-db6e64097357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 87e66be9-ce52-44e1-827e-b5888e272c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 8a7a904a-a0dc-4584-bffb-b1f21a1d6b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 13b3aa18-f2cf-4a7d-9944-9356bacae06e)");

unit.assert_eq16(16'h0FE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #26 5fd9d2eb-d24e-47ed-be4e-b053d0ef72ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0036;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #27 ccb9144d-0c38-4e6d-88d8-e3889c4f0c4d)");
unit.assert_eq16(16'h0F30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #27 50099c90-a096-4896-acbb-79f8b955d3b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 219abf94-dcb3-4c6d-9366-b49ccd8be4ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 9f37243e-7e3b-4250-8485-48671a085e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 96ce63b7-03c3-4f38-aac6-16fd8eecee47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 fa1b7f18-0eb5-4d11-afa5-0815a3a38314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 860701ce-2673-4d7b-af60-042c860d6493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 535f5612-3488-40eb-ab18-5720b754ad23)");

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #27 f305c556-d76f-40a7-91c1-4dd2fba4ed3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0038;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h026D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #28 4910c5ec-f2c3-4c31-8bfa-38b70b035984)");
unit.assert_eq16(16'h026D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #28 8028134e-00cf-4f7c-8246-0b01e8940e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 6cd403e0-45eb-435f-b087-855f70ad222c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 e36f80cd-07d3-4c15-ad6b-6cff44cad3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 c214e73f-858d-478d-aa3d-08dcaf38432e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 6ca7dc26-285f-4983-a165-1538db6666ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 98ce468f-c83d-4beb-b39f-1b36e084fc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 e50b6de4-b2f7-4f56-ba38-1d98e85f4f75)");

unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #28 e01eae25-2eee-475c-8e22-fa62edd974ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #29 69d144eb-6d8a-4921-adc5-b383a4e415f4)");
unit.assert_eq16(16'h0A8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #29 fbd4a4c7-a8ff-424b-a933-ad8c0a1cf59b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 2f9be834-bc1e-4d82-a169-8d40c17ffe2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 50a9a0b7-86c9-4164-9fc0-2a168dce47b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 ce800ab7-b2b7-49dc-829d-c087b16a0921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 4c3b6c16-705b-4e66-b1d0-d1140ec7cad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 9d62d894-9297-47f3-b9af-d4cbb655f2a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 c8d006bc-aa71-4094-b233-b08da6756094)");

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #29 9614e8ee-b4dd-4780-aa4d-aab591f6d6cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0770;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'h0770, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #30 876191bb-81b9-4c74-a290-3ec5db8f65ea)");
unit.assert_eq16(16'h0C13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #30 cbc99b19-9900-484a-aab5-a81c409a75f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 3a2bcc8e-8db0-4ab5-a3af-2f75a6218924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 8bd3767e-8e69-4eb1-a731-2fe6509f8a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 d5ac57d8-4d88-4698-ae8e-47b3dac93df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 4d295b24-05ed-4680-b025-27871829f412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 9e0e1a86-132f-4491-adc8-acaab641ef94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 e6dcecd7-cdb3-4d96-854c-a4d4afb83eb7)");

unit.assert_eq16(16'h0770, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #30 8ea9c40c-a470-4560-b710-1a62be0960fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0488;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h07FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #31 c975b4cb-cd7c-4d43-9eec-6c70ab5215b5)");
unit.assert_eq16(16'h0488, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #31 6c71fcff-8862-4ba2-b878-93715529ed22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 d2bd1276-dae0-4693-ba59-1fa47d1c4c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 50ea37db-22d1-47c3-8954-d72ea58332bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 9d230e97-6eab-4e6c-8471-e3cddafa27da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 7c0484b4-7f1d-4ef4-8ee6-95d2d3646283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 79d42476-12e9-4e9a-b5e2-cd0e68cf4fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 82873df6-79ca-4712-9f05-baaad6330c3c)");

unit.assert_eq16(16'h07FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #31 763d0067-7c1f-48fc-829f-13b84a6854b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0040;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h09BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #32 8f411d57-b067-4344-9abe-1cf836604b55)");
unit.assert_eq16(16'h00B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #32 0617bfbf-a334-4e58-9d58-11100b4decab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 e4a8511b-5e4d-43bf-89d0-bf420f9a9e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 361e9191-9287-411c-a6e1-9602759367cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 4548dc72-383a-41a6-853a-6e4b2b34d771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 e9d306a0-e646-4366-ad04-3408369e8b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 514ec877-5fa7-44a1-ba6f-fae4085a5a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 73c99ec2-95de-445d-bc74-9abe00e881d9)");

unit.assert_eq16(16'h09BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #32 a15c9f00-ade7-4476-944b-f49d9e3bcabd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0042;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #33 bc8e458f-21a6-49b8-adf8-9d7063ed1777)");
unit.assert_eq16(16'h0B4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #33 1c5d3342-50f6-4dfd-8b51-4d3d28a3491b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 b6d03c8e-997a-4e19-9ab0-5ca8a1a2364c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 c4bd5bbd-8bc4-4172-a305-1b2892776288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 a8805b30-2579-4883-861a-a9fcbe93d964)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 a7e08583-b6fc-4deb-82c8-3ffad6f87be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 7716533c-b908-4042-8444-a958905576d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 137e6793-253d-4f2d-86ef-151d55ca021b)");

unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #33 bf2735a8-5629-4c33-bfd1-eed36d5b0bf8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0044;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h064B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h064B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #34 34e5aa68-7f4f-4094-867a-7ed41f7c918e)");
unit.assert_eq16(16'h0D33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #34 c836108d-2be9-4448-bd4a-9e0c169b0941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 f02d128d-62da-4545-8ffe-d8569d5d5e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 13b8e963-2196-4dae-857c-5279fe597c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 c7544e90-ece2-4e3c-a4b5-edabe4a5147c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 4a976b15-1210-4405-aa1f-76664b69d812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 9caa6bfc-64bb-4795-8bb6-f2ee64077a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 583a6995-14cd-44a6-892c-bfd50dd7f223)");

unit.assert_eq16(16'h064B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #34 f548deae-023c-40c6-b905-6e257627ee86)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0046;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h0DBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #35 d74b78d8-d513-4a2a-852e-e11bb8915f6d)");
unit.assert_eq16(16'h06D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #35 44ae71fd-5d8a-4f59-a830-b40cf5871d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 f3df1815-4b2b-4bc8-aea4-f4f05ba19801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 fd42c6f7-bd28-4535-87e0-1e985b7e379c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 d24c6d2e-000c-4889-9353-2b410ccbe2d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 4a0592cf-ac89-437e-9e26-99372230e7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 1e7d86ef-b698-4126-ac45-c3e31d949c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 a786499d-a656-4fff-b554-f4593b8437d4)");

unit.assert_eq16(16'h0DBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #35 6d4eff1f-214a-40f4-ab5b-7f7e4c98c204)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0048;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #36 0a977e70-8e78-492f-87b2-c49ae399a51c)");
unit.assert_eq16(16'h0A53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #36 b959da29-b2ed-4a50-8475-320c7e6a3b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 9f907a53-048a-427b-aba3-604cafb1ee62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 4014f300-3232-41a6-8645-2a58e64a13e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 9fc84ee0-afcf-4c68-906f-4b2a3dde0b70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 969e891c-2f01-4eee-b82b-7c7a3280068f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 567a55c0-1ea5-4ec6-887a-708357819310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 1ba0f301-2c3c-4727-a5e4-742939e50042)");

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #36 cdc59461-b3ad-4622-9a55-2a691c86755b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h08F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #37 9680be92-62f0-4a9a-85b2-4ddc146fb471)");
unit.assert_eq16(16'h0E3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #37 4d62f572-7c64-48d7-ab6b-fcc474091470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 478cd575-af2b-4387-bfa4-54e842141836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 9bdef8d4-da66-4498-98d3-f4e7ba96454f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 d1e27efc-f81f-45ee-8765-bbfc0ade4ffb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 da2f7a23-d1a8-435e-841c-a7fd85b81930)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 054cb419-1e6d-4314-8af2-534b33ce81b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 3c9a8ea6-b33d-4c61-acf3-4676fc87c304)");

unit.assert_eq16(16'h08F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #37 f41263b0-f115-4b65-b0c4-f4c4886f8ad8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0199;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h0DA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #38 04e7a378-82e2-44db-a4d0-1bad5849a0d4)");
unit.assert_eq16(16'h0199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #38 98e3b1fb-26c0-4a60-a22d-33b7cd2f3486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 1b3eaaca-8495-41ce-a0cf-2f783ccad8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 92a9b215-cf64-4523-a8ea-a9fc2757b5f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 d0307bb4-69d9-47aa-872c-3572a2747d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 a186f524-82dc-434d-a1d5-d4eb34d52124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 84f0de8b-5068-4d03-8254-ff0513784506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 80b579eb-df26-4334-93f0-ef819c219954)");

unit.assert_eq16(16'h0DA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #38 2a1fa474-5c04-43b5-92e8-95dd9263eafd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h0D35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #39 74e3a003-3f48-4999-8506-826dca748080)");
unit.assert_eq16(16'h0A8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #39 11045f6e-66a4-4649-acd0-88c4e1871d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 90825256-caff-4874-88f3-60bd6cc0a69a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 f1eef113-c67b-4ebf-bfe1-531eb67dcb36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 fac32de7-b8a0-4ef9-90d0-f95a7839ba84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 540acf63-11e7-4c48-8dca-82a1e90bf937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 1112227e-36bc-49cd-9a75-7c8937e1fada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 9f63fdeb-6e83-439b-9575-b8882cad2faa)");

unit.assert_eq16(16'h0D35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #39 0af10226-ca2e-45c7-ad06-92f919a50d28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0050;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0855;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #40 38bfbcb5-616f-4a6b-ba22-8298ec66f95f)");
unit.assert_eq16(16'h0855, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #40 39e36547-e07e-47c9-a855-f339bc11e962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 39f3dafc-3233-426d-9cfa-5aced60eb026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 0c1678d0-9cd3-40f8-a097-f4dc9188c544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 0db1d9ba-d778-476e-b201-89642322ffd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 56c9ba1a-5ebf-464a-bae4-e5854d918cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 e45987ef-a766-430b-a7a2-80658da2d607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 4306b439-82b5-41cd-ad89-f27f916c4e01)");

unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #40 fbcf53f5-430d-4305-bf72-922af4eca6d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0052;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h087B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h0AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #41 99dd1679-a22a-4678-a290-624f5a4509a4)");
unit.assert_eq16(16'h087B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #41 fed4a9d2-0123-42e1-bdd3-0dd361878e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 ea15f6dc-a7dc-4614-9577-3f197c752f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 ffc22bee-934b-461a-9098-69ef15de6601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 83065bd1-7932-4fb4-93d0-f1929c33ecf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 43472bd4-06c6-4f14-8cb9-0efe65442b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 ab1b6d6d-614c-4fab-a5e6-74c15f3cf361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 19cc6f85-47ab-4f15-b25c-b7e91a3a4050)");

unit.assert_eq16(16'h0AB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #41 279a5994-4ecb-42cd-92e0-b9519bd680e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0054;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #42 83620361-a4a5-46a7-8645-92e4810d41ef)");
unit.assert_eq16(16'h01BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #42 c8dd8b4b-8a1c-4c89-9ccc-6821a8d7ee4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 bfe7b923-1734-4775-b458-787059d4dc6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 e56f78f4-0188-48ec-8901-3f368996a890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 f017a5b9-bbdc-45c4-afb5-a066e20a2570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 e9920801-c544-4670-9f23-173c00fec457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 dcd300eb-4e27-4879-9dc3-a7dde8cbb9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 0ca4a2ac-471b-40b1-806a-3837b2d4dbc0)");

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #42 73137a16-e25a-48ee-9871-ffa4da728638)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0056;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h0D62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #43 c97adf2d-0a72-438f-aa16-6fec59b2a42d)");
unit.assert_eq16(16'h0B70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #43 50c69dab-b319-464b-b303-af596dc539b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 ceeedf64-9e5f-41b7-be00-838eaa75e59a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 8cf01936-c586-4c6d-96fc-d6dd10cd7e56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 8a336824-1d64-444b-b001-415c6fb9adba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 f151ae1e-ba9c-43d7-947a-49eab5637edc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 8630f21c-32c2-47ba-bc52-8ae329279bde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 f9a49c42-e846-430d-b826-bbe68c4e29dd)");

unit.assert_eq16(16'h0D62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #43 545f157d-7883-4e22-8abc-6b5edd035f05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0058;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h0CC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #44 ab82643f-e33f-42ed-9558-d1794af7f9ae)");
unit.assert_eq16(16'h0C47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #44 6162acc8-c0c0-4ac9-95f4-d4aefc6c36b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 61a28f0d-6ecb-4735-b003-c7fd983593ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 c94c6b31-be35-4fc6-8d63-84be9818b37f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 87bc10f1-5254-433d-9510-38451e632ddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 5fd82891-06a6-47ce-ab15-dea70523b33f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 709379c0-b196-4b24-82f9-089ea949fc0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 f11a04bc-7120-429f-a935-1b79adc015bb)");

unit.assert_eq16(16'h0CC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #44 3c448c35-800b-498b-a470-61a8b207fed5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0208;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #45 8e613f48-eadd-4079-9049-57bb65cae54e)");
unit.assert_eq16(16'h0208, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #45 d121ab6d-488d-413b-9dea-33380843e10a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 eb82c97f-8da2-4c2f-a6c6-09eb26b6c5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 5961064b-4298-4542-8af1-b676a31a4341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 62558169-a08a-4ab8-bf27-eed1bdf5b07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 62daa884-d403-4f28-8656-10a2ebe10328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 e228d54e-da98-4b85-a67d-5c1c164b3755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 de0c3914-f979-4711-b581-d00c350145b0)");

unit.assert_eq16(16'h0D37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #45 0c2e4daa-f639-4cbf-b4fe-caee225d69b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h0C47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #46 f5b3128e-fc77-4030-9d0e-37334522eb78)");
unit.assert_eq16(16'h0A85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #46 9ea55cb2-1d77-44c9-884f-d764e42a4693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 6f55b241-6135-462d-a84e-2bef5440e8b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 0f8e0b97-9ecb-457c-bc52-d4955c2daf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 6e0023e0-28f8-4851-8817-f015c3ffd619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 8874bc76-a43c-45ad-a03a-23c19484a536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 de5269a9-d49a-4cff-80f2-5b4d59be2ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 db12aae8-e27d-4ccd-8186-2dd9f249c3b8)");

unit.assert_eq16(16'h0C47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #46 66fd3fe4-0a17-4cc8-8b43-3f97789e5ebd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #47 abab53ab-c8a0-4676-aa44-b4c6e4cfaae1)");
unit.assert_eq16(16'h00CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #47 cd204131-e433-4139-85a2-18dc7c114522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 43d70d39-e2db-429f-a530-a4b566522fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 a4646077-0583-4cae-8d7f-cd26eaaa0a3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 3f9427c0-9591-4a42-95f5-49d5a35f8288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 42107d1a-37bc-46d1-87a4-c81acac1c6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 66bdcf5d-4aac-4853-8aef-e53ba8a3e573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 98de0277-c66e-43b9-8cca-15284a0dad5f)");

unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #47 24305c30-1936-4fc1-bbee-0a51e6fe40c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0060;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h063B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0408;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h063B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #48 3692e2e2-6ea5-414f-a606-c375bc1bf2d6)");
unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #48 3eed6b9f-5aa8-454c-a8d4-2538d4d42750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 b7f64d67-48af-463d-a6ec-239de138dbbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 c28259a4-89c2-45cb-ab5b-698e044e27ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 5a08f699-12f0-47d0-ac4b-e59398ef9be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 d2192aa5-d676-44b2-b620-5a422b1c67d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 f79dfefd-ec5c-4872-a1a7-6903bfbaf549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 0c33c3a8-80a9-41ab-8848-2df6f49c62ae)");

unit.assert_eq16(16'h063B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #48 79e88241-9706-46a1-b5fe-69fa2bee0a6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0062;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0421;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0929;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #49 83075c83-f44b-4194-9e56-c973fd753094)");
unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #49 bf5e5fbe-f24c-4c99-ab88-d03997fa36de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 c9e40837-d68e-43d8-b896-b246e83184ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 b2573874-4db9-4f6e-a569-6d358b9e555e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 3953fdb2-3b1d-4eb0-9959-c7d854d8cad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 199aeb16-5c52-4566-b9c3-41e50f30288b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 211fed1b-cd9b-4b07-b402-c686598df6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 f477be53-6010-4710-b1ca-6e723e11bd98)");

unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #49 4d1e44ed-8c63-43a6-81a5-77b49f822a53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0064;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ED3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0668;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h0ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #50 042efe6f-0747-494a-b23b-64e3c3dd221f)");
unit.assert_eq16(16'h0668, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #50 7e9fd2df-c9e5-43c8-9f90-e1e9f3f79244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 b51c2b66-b98f-4f65-8820-f0192241f6b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 79e30852-6947-4996-9dff-014f89466fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 757ce6ce-fc86-453e-b73b-dd4a945c1fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 d4fd90a7-28c2-4963-b4ab-5a3e22302ed2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 2a8c89d5-400e-4b4a-a03c-288326679479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 72f2e58c-96c6-44b0-855f-00394da168db)");

unit.assert_eq16(16'h0ED3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #50 2344935e-7d73-462d-bf12-ed51ecd2e095)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0066;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h061B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #51 1441d6dc-ccb5-4747-8d51-9cb9ce786545)");
unit.assert_eq16(16'h07F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #51 ad30f6c6-bf5f-457b-9760-5ad222df4a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 89f70b2e-5b72-4abd-bde8-c27647864afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 97e87f5e-cc14-40e8-8021-64a6fe606744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 babce8a2-ec66-41d9-87a0-d3daae9ec373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 f0a11cf4-5d2c-4239-8820-394d35d46f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 304b42db-4583-495e-b532-6780e699deb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 2db8f0f5-ac1a-47a2-8094-f7171a05d1e1)");

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #51 0f9fb848-1236-42a6-82ad-dafa7b820da0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0068;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0259;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h0CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #52 ff719b96-87bf-4b94-814d-3c58434da971)");
unit.assert_eq16(16'h0259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #52 3fade1a0-7b1a-4d0b-a23c-772ea7580330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 1ab5f6ad-832a-492b-b1d4-a92a50d76243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 ae871286-172f-4f78-be98-14bedbf089f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 1842508a-9d73-4c8c-9d93-a4141b549528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 0d142012-7352-4ab5-8921-14f1c34f78c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 32d56de2-2d60-4cf6-ad49-77f951c839d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 b1ce4c8c-cb6a-4196-bda0-b81a2f13dc1e)");

unit.assert_eq16(16'h0CC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #52 546d59ef-a9c7-4fd1-a484-321598b48f02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0080;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0471;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h0080, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #53 34d1bad9-7e77-4f3f-9eba-9774d30b9328)");
unit.assert_eq16(16'h0471, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #53 5cdd7532-6daf-4a80-895c-2daf6ef06759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 281bc62e-d57a-4c7f-aae6-717628eb2b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 fbdbe66a-7cd3-496a-ae61-eee82b9adb73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 8ffc454f-5109-4465-8d5f-5bee7d8f01ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 0f3e51f4-b8c4-4672-9d92-ae703cfaa5ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 99d032fb-89e7-4ac3-8abd-8f2c4c32339c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 f5951d57-659f-470f-aa83-d7f10490c4fe)");

unit.assert_eq16(16'h0080, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #53 3d289604-4187-4ef4-a25b-496d62568e52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0141;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h0A61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #54 8b3f959c-1b40-46a8-8532-2e0137991221)");
unit.assert_eq16(16'h0141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #54 7209edcb-b3dc-40c9-bf50-6da8262c7300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 a6268784-d87b-4c5c-bb51-0be3ac636aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 13bd2689-8b91-4f8c-8bdd-3b0651132fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 ec665d43-bf59-443e-adba-f6e0673a265c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 2ca76536-188a-4200-9e2a-2d553d285cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 30e08bc3-cc6e-43f4-80a1-fd6fe5774de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 81467263-8bdf-480b-92cf-afa6dcff5a5f)");

unit.assert_eq16(16'h0A61, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #54 2cfdce2f-2cc3-4d8e-b56b-72639405a9e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0119;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h0C6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #55 70734444-330b-4168-988e-ffbc3329ff33)");
unit.assert_eq16(16'h0119, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #55 8dbfd436-e6db-4a4a-a47a-ce9ddf41ff7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 acb64354-4358-4708-98d9-e7279869e2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 81e3d274-c4bf-435f-97a0-8fcd40080457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 04a2f4e7-caee-434c-95cf-f8af3513eba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 30edf557-2a2c-4f65-9333-2df32a8cfadc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 e429511f-600d-435d-9715-55f745c46a61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 ddaf9e44-5adb-43a4-b932-a2af6c1ce0d2)");

unit.assert_eq16(16'h0C6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #55 972e2d01-361a-468b-905f-a2ddf40ca39e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0070;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h0D9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #56 c96541fe-dd65-4d57-8adc-c5b308297e44)");
unit.assert_eq16(16'h07DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #56 2c0ebb6d-97e5-4a52-a011-efdee4cbb944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 b2b57297-89ca-46b6-95f6-49eff1164d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 e7a8c670-5a70-435f-8eb7-6592c14facb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 fe2df45d-b072-4676-8505-e8470ddf1804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 2099252e-0f70-4688-942f-d2e097afff2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 4b4e76f2-81d8-4535-a3c7-fa7373f8fe11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 8b0d66a9-4f28-408d-9f24-88cec3b0d5db)");

unit.assert_eq16(16'h0D9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #56 74162503-c3f3-42c8-b4f3-cf16a566e7d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0072;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #57 a63a9dae-a23d-47b1-8704-5c738c766cd0)");
unit.assert_eq16(16'h0E41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #57 5714cad9-6352-4456-9e3b-e5fb0b4b8d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 1a828d15-ac81-4c95-85bb-c359d2e840ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 54f23485-ed68-4c22-9437-e97162878f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 f5afde50-dc9a-42d5-8fb7-42fd95c0864d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 059d63f4-9323-45ac-83fc-93bbaa96f9b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 2659f1e9-f593-407f-a09f-4b45eed44791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 aef225bf-76d6-4954-9612-db9a9014ec9f)");

unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #57 f0b27c35-e9d9-4115-9074-566a1d5d658f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0074;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0415;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h03E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #58 c12102b3-e7b8-4f87-970f-5e8c2c4f177a)");
unit.assert_eq16(16'h0415, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #58 dec82cd0-e3a9-49a3-98e3-3c6a066606ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 a2359e42-db8e-4e4e-b147-214674e8a027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 50833c05-f8f4-4fa9-a622-e96cd314cbc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 e43090dd-74b4-4a39-9287-5e78e26b3d24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 30bb1540-57dc-4dd3-8a63-ba0d0779b9b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 9d0c00a9-d428-41f9-9cbb-7cc3428569db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 a9270981-8668-47b2-8f8e-60d359aa5825)");

unit.assert_eq16(16'h03E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #58 0172cf21-7fa7-439b-8803-1bab433a7ff8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0076;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0059;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0262;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #59 e76edb9c-5f18-47b7-a9f1-ca0b980f220e)");
unit.assert_eq16(16'h0262, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #59 46201465-7ee0-4bed-9772-c2a4581386c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 5dfaeb3e-c21a-4c75-a254-398989e29d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 a05abbbc-5793-4e66-b7ac-401a20d9edb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 0c1f9712-5156-4c8e-8ffb-c72547ddae50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 bb49e031-ba6c-4a96-895a-104c790a724d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 2192d530-70ee-44fa-b3bb-8f6dbe2ff920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 8757954b-b288-463b-a494-bcb71b24983b)");

unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #59 dc244723-bcda-4ae1-a398-0605b3c3aa71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0078;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h08EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #60 303abc57-237b-41fb-be47-68d413d04274)");
unit.assert_eq16(16'h03E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #60 22dfbfc3-36c0-46a3-a00d-71f9604ea267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 03728c19-1bf6-4a2b-9207-538f4aacddf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 ff404dde-0eba-4660-bc93-f8ed23bef77e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 45173ca6-9dcb-448c-aa86-edbee0e59e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 acbfbd5e-3de4-42e6-9e90-2aec580ea6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 a8eeea6e-1a11-4502-a64f-95c699912622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 77e3eccb-40d2-46c5-9dff-840d02368466)");

unit.assert_eq16(16'h08EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #60 e04224f0-112b-41a9-b730-1fcc49f8cc27)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0166;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h0D81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #61 b29a4455-8da3-48b0-9f6e-3573a6908414)");
unit.assert_eq16(16'h0166, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #61 cdfc301f-9955-47cf-b74e-f95ecda6b9eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 a8d54ccf-b15f-4d29-84b9-d01a1bed21e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 a855926f-09c9-4ed7-9b71-69a93521cfbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 40433fab-e98d-4b82-9984-b3b4febf965d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 f421014f-fed5-44ad-a55f-518076f557cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 e66a2ce7-598c-4f58-891d-e0561bfded99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 a4a92322-b0e0-4f21-845c-64a035ae99c0)");

unit.assert_eq16(16'h0D81, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #61 1d5b38b5-f10f-4490-b6b8-1e4267618280)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h0F4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #62 fbefc48c-e03d-4d31-b9a7-b95886c37085)");
unit.assert_eq16(16'h0B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #62 cdd69dde-7465-472d-95a7-e7292a042355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 c951eaeb-d46c-48a0-9ddd-892555dfc39a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 66131675-21eb-426f-a7eb-007a21caed1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 cbb63da0-ae21-4e50-a53c-32eed75ce994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 259be432-5606-4969-b99e-3825c5904efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 d38ebfea-852b-40d2-9964-d819dd1fb021)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 071df61f-0fc1-49f2-86ec-9404641a574b)");

unit.assert_eq16(16'h0F4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #62 37c95a90-ab3c-4a29-ba87-484b04a0022c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #63 7c34d5ab-4c2b-4298-ae5f-d502d4158610)");
unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #63 b58740d8-749d-4c36-8e15-5f4925288587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 7dd944ab-39e6-49c7-9719-6967f3ade645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 8cae6583-7fb4-4bcf-8fe7-f1402dc2f653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 c8ee3629-cfa6-4b5c-a7c5-c6c330d51619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 b6496926-6995-484b-b5d1-4cda60496a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 0ed7889b-f5d6-45a4-8886-7236df9106eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 2e030858-6f36-40c3-824e-93b09ae355f3)");

unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #63 238eaa71-1f3c-4a92-a5e0-4a10cf610b72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0080;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h019F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h019F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #64 032a02ce-0b0a-4313-8ae8-796694ecd99d)");
unit.assert_eq16(16'h06C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #64 06f8f483-fadd-4b27-94dd-43594148a594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 4bc49aea-4846-42b2-bd5e-6b1e527b4b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 8d926a07-ff66-41cf-b838-023946474be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 72e40158-b1dc-4113-96d6-310166c39d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 2fa7ac1e-5edb-48f6-9f03-d788bf3cc23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 71cefc94-f435-4115-9dd9-470ef3225d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 3cde9082-caf0-4dd7-a407-afc81533ecb8)");

unit.assert_eq16(16'h019F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #64 e7e57b5e-69e1-49f8-abb5-0395f80b5bcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0082;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0716;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0483;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h0716, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #65 6d83493e-494a-4f23-b1cd-73a0e8d50cc2)");
unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #65 fe7de0de-f1c1-4677-96ba-0d870b673a0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 4d6a1e3f-953e-4b80-b7df-bec1975f5efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 b97d7bd6-2e4f-4762-b869-0de1e4d84833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 343e5e35-4820-4ade-9172-e5bfb91fb821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 f6000b27-04da-438e-b694-b802fd97b5a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 94a3e200-cd04-4438-8156-64ab5b1ad303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 12841c38-2fdd-49ff-9ecd-228d365bdbec)");

unit.assert_eq16(16'h0716, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #65 273cd253-3405-49a9-a1b7-e6fb853b3993)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0084;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #66 6af3dc62-c697-4de1-b4c3-411a1fc8a3f5)");
unit.assert_eq16(16'h0A88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #66 496a10b2-4829-4881-b278-617fdf04e3b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 7c2a6740-a57f-4100-8642-54b747256dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 e6ac28ff-ef6f-425a-b408-6cb0a643eede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 049e8796-3d6d-4bc2-bc81-35288257fb57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 251a87f0-ede8-4f01-9761-3fa08a6844da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 f1c0dbd0-a1db-4cc6-a7cb-63691c9e2c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 a86dfd18-e0dc-4321-8192-f922682cdf01)");

unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #66 6e7319c8-1b35-416c-b39a-0f3d86d170d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0086;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h0B0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #67 0ff59646-735b-417f-9e50-e6cda1218c68)");
unit.assert_eq16(16'h02BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #67 ed3bb0c2-af22-4601-91b8-0f81f3e29557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 21c28485-54df-4760-84cc-263822ff6b62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 65c37419-a716-483d-ab9f-a6d18c1902dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 79173bb1-46aa-4aca-baa7-2fb33fad26f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 4d2cf787-f2aa-4317-94f6-382cca501713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 d803a821-517f-4935-998e-8dfeda650368)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 7a436460-207a-42df-80b5-1f72a57b230b)");

unit.assert_eq16(16'h0B0F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #67 9e8b407d-2c25-46f6-9dd3-75b9e7b1afcf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0088;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0335;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h0F07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #68 4f057304-ac6d-4f74-866f-07fe0e6da195)");
unit.assert_eq16(16'h0335, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #68 d0ab97c7-0aaa-4d41-9b02-8cecc96e7b74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 8e3d9506-6bbe-4c09-a7fd-6b51fa083ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 7cf1122d-0a9e-4d2a-97f9-72927f4dbb81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 2eb5816b-4df6-475c-bf47-1e4b26c94862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 c1dbda20-3612-4ffb-b10c-03583ead4c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 eff8b4db-59b1-4be7-a49e-88519a39cb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 4624963c-eb54-4c8d-a0b6-284e0ae7fd46)");

unit.assert_eq16(16'h0F07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #68 299af16d-5b4f-4195-ab56-f420f5f79217)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h0DBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #69 67d52272-8571-4162-8324-60917849f4dd)");
unit.assert_eq16(16'h05B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #69 148ae0f1-d27b-4f39-aba3-ebc97ea0e9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 90dd9b4e-bdfe-4934-ab79-c776e9351f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 12786938-8b80-4d31-84ec-acd9d75894c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 d6617e0b-9f2f-4f87-b5c4-7902c3d229d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 bcb0ae0f-ca4d-41fd-95a8-7fa2f676d922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 10d8441d-8720-4d98-955e-fdd2431f84f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 847df7f7-8c52-4fe4-847d-35561a01e69b)");

unit.assert_eq16(16'h0DBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #69 fb3723bf-78f9-4cf5-b99b-3187e24422b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0462;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h0462, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #70 fb2c9368-3ded-48d9-9012-8a19e392cb7b)");
unit.assert_eq16(16'h0BA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #70 9aa9beaa-ff66-4a12-be2b-d5a6fae002aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 1d1bf9bd-cd4d-44f8-8528-2b4fbddbd764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 da1bd966-281f-4935-9cb2-463959dd7224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 91ae5753-5ec0-494f-a2ef-aae411a315aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 e2623ba8-f1e8-4e09-af61-64bd72e13e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 ce599a1d-e252-48a9-8dc0-430f12e7c06a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 634291a0-63eb-4261-ae3c-c7a48115a330)");

unit.assert_eq16(16'h0462, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #70 2ca57030-b4a0-4c21-bdb6-d920c63f715a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h0B49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #71 a63af1c5-8bb7-4e89-985c-8449c5c96211)");
unit.assert_eq16(16'h0EBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #71 ca24264c-994e-4e53-9e0e-69b942da0bc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 bf0a1d85-be40-49bb-b3ae-d6f2ddc4cfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 f9eab8eb-db49-4c40-bba6-6a0c2aa980da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 3b1aff0b-8ed3-4af8-83f5-413f054cf9d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 d40219d4-2eaa-4c4d-8c0c-e5f71508edbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 81b36fcc-0194-40ac-8e24-c328ecebfab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 2c2b1ca9-8c02-4f63-b0ac-0510e2b76de2)");

unit.assert_eq16(16'h0B49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #71 e342be8d-bc55-4955-a1f3-24b0619cc428)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0090;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h016E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #72 9e3bc551-0c15-48ce-bfea-72382fd1ff2c)");
unit.assert_eq16(16'h0C60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #72 3e7d3928-95f1-48d9-9784-82bc632d623d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 b65ced9f-db11-4c93-97e1-7af99589d365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 8d97f92c-e354-48ec-b2d9-ef775f608183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 e1d4b971-699f-4878-8672-5676238c4062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 afa93462-bed9-4ad6-b476-5844c3df2108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 5f01cae4-ff77-4bef-8790-de4401824e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 23bea80d-bb7b-451d-8208-285ccf9638bd)");

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #72 fe44c137-4540-4c00-b1f9-181f0dbb5ce5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0092;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0868;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h0E43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #73 9c0d8eb7-cb65-4569-aa07-2cfbd4adbf9d)");
unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #73 e88f5e18-6b2c-4f6d-907f-4e3310babb25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 2a8b16e8-ecec-4233-be00-ca259ec8a9cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 f78e7748-0ece-4d5d-87f0-ff3875f57db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 1f603a1a-d994-4dff-bd6d-dbccdb883899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 71819e0e-bbec-456c-ac30-cb8b768d6842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 e8688707-7534-4115-9098-9d87469e3783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 ed4ebc0f-0e3f-4756-a696-2e82d2d84eaa)");

unit.assert_eq16(16'h0E43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #73 09655f2f-c40a-4358-8812-bc296e742aa3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0094;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0364;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h04D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #74 cdc7768f-a2b2-4411-a607-63fd3e3a8d86)");
unit.assert_eq16(16'h0364, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #74 d900e796-951f-419e-b674-418b93c096d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 bbb09444-1b3b-4d76-8b6a-80d0f48a26d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 75bae517-99c6-40c7-a0b1-b795ab06b908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 88b9f2d4-eac2-4629-bf4d-80d491042257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 bac4cfba-401d-4d3b-867b-9ba5ee0de13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 944bdc86-5aa0-4be4-8c1e-0ca13bfb1b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 52d2c2dc-bc1d-4ba1-9fc0-f9c020e563b7)");

unit.assert_eq16(16'h04D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #74 c4d74a0b-3352-4579-a5ba-de339b7d3f9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0096;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h052D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h052D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #75 a154c4d1-4bf4-4570-bc13-718024da658f)");
unit.assert_eq16(16'h0E19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #75 8d4caff3-b96b-461d-a053-6702a5576046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 5f840087-82ad-4943-9878-4a2f213a5fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 b19b574d-6633-45b8-b1e7-767f35616646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 edb56be0-3fbc-4f4e-83c2-c63c0ab10ee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 fb9e8323-bfca-4524-aec5-eeec4f7066f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 1feb275a-13ef-4b8c-b87f-6aa852fc30ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 29c5a0bc-c42d-41a3-bbcc-5c799de323c2)");

unit.assert_eq16(16'h052D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #75 8e268895-13fe-438c-a172-96b2a66b6c3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0098;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0794;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h0794, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #76 17b1a00f-8e2f-4575-ad87-7bf03774f9d0)");
unit.assert_eq16(16'h0BCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #76 db35fb4c-f8f9-4ccb-b595-457e617e6fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 28b64f6c-5ec1-41ec-8014-61c43c9085bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 a5580e70-d581-45b1-bda2-33057800acec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 fb93c801-cbe8-4069-a26a-cf25d88acf2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 bde953ac-63c8-4849-ba76-890abbac6b4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 45fbbc3e-6432-4f6b-aec1-40ce8c5ffdca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 d83e9a2c-0149-41b7-80ca-0e2b1fbd60f4)");

unit.assert_eq16(16'h0794, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #76 c1fbd951-cdda-4a7c-8ae9-331f5115a7ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h0F20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #77 8cd7a7cd-9228-47b5-bd23-23e827239401)");
unit.assert_eq16(16'h0F41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #77 73b0eab6-66a1-4c84-b83d-013a1147da30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 8ea622f0-8472-48ad-a248-c6884a38cd8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 0c288b50-9dfb-4faa-9390-55210aa73f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 36d4f487-d267-45ed-b25b-d52f72b31a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 609995bd-c8f0-4b1d-aa8b-0ec4ae02a17c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 336713fb-213e-4d29-881c-aed9ead50c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 3bcea384-9af3-492c-8b68-ca9e3efe7ec4)");

unit.assert_eq16(16'h0F20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #77 cb6bd9ff-caba-43ad-af00-4aec9465e781)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0288;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #78 a6454acd-29dd-425a-836d-06b588f786d7)");
unit.assert_eq16(16'h0A91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #78 73ecdda3-c220-4df2-bd4e-c25a20e00666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 1d917365-fb57-4daa-8f62-8e46ded9d429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 0619fd5d-e1d7-4f12-9e17-f33c46a08e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 44e2808a-eaa1-4781-b70c-025f7792ed2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 63c9755d-9f5d-4fc6-ab19-4f6f1e54a705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 0b088398-15be-452c-a43a-214c67c9d556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 393dad50-5804-4fb0-880d-06d4b635245e)");

unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #78 9fb1597f-7b70-4fbb-b2d9-44a5469b7e79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0936;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h061E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h0936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #79 65c7b7e4-5f4d-433f-9eb8-7594efb3e153)");
unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #79 b32e3978-ef46-469b-beff-322cb794dec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 bca6305f-8b91-48b9-9489-7e855426cbe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 ad45a7ff-6a3e-42ac-8ac2-6ca1d4c89229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 7a6caf2b-2e4b-4d58-88b0-4134b52ec7a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 6b6ed73b-5ec0-4d7a-8bad-b2765e15e3ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 ea8fa672-e240-4813-a975-d8cb4fc9329c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 5691c81f-bf3c-4219-ac6c-22da312f5e21)");

unit.assert_eq16(16'h0936, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #79 7979bde1-f1e3-4c0b-b5be-ff2fc715ada3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h044A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #80 3735a692-ecdd-4636-8f33-ab946f50a4af)");
unit.assert_eq16(16'h0BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #80 d68d4c1f-ef59-403a-a3cc-cda04062cbea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 dad81b8e-921e-43ba-9dc7-95d059e851c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 3afb7295-7430-4d43-b4c8-6b999341f7e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 d06b233e-e16b-4975-b3a6-8b1b8d105e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 93b8eaed-79cb-4804-b145-452eae7ea079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 e0fe1b4b-746f-4687-8f60-b42621686720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 d39c6838-4365-48ae-83b6-d62ddf1f7c06)");

unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #80 17d3063d-4a67-4bbf-99c9-0fe37878689d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h063D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h063D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #81 6973e80e-6a59-4258-af3a-30dea5309b66)");
unit.assert_eq16(16'h0C0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #81 904a7042-95b3-4b7d-8bf7-1ea24dee5760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 427f98a5-31d2-43b4-9306-fd890105245f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 a6b9bb53-f3d6-486f-ba07-99dd76ef46da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 6774bee8-9b45-42db-b549-6878903ef590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 fa0fccf2-6ba9-4ec5-8337-c41f9f13e6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 8c31a359-8d77-4cfd-be6c-8fbde1c57114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 c0054ea2-40f1-4c4e-9317-4baa5941c516)");

unit.assert_eq16(16'h063D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #81 6a499de2-a716-43cf-b314-cb57fabe70b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #82 384be7e7-aaf0-4b9d-ae91-032b24a24050)");
unit.assert_eq16(16'h0B36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #82 fc26cf41-509b-4eef-9f32-55fb2dd006fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 314ecfef-717e-475a-85de-ae95ad0f6756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 9dd4b18e-365f-499e-a267-b00b7ea65b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 12c7a1b9-31ad-4d04-a16f-5eab4a6f5a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 843e0988-bca2-47cd-b681-6612be58557b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 b7cd3e0e-e74a-4b46-8c09-c8f6facc75e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 11294bbc-b339-48e9-a323-3e9691d6e7b6)");

unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #82 08abbed1-162e-497f-94ce-369509bf5f9a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h0F49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #83 8f6debee-878a-4e09-ae7d-e42f8d8b019d)");
unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #83 c07e4f83-95d7-42ee-bde8-feb614af8a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 6408227b-1f6a-406b-b7aa-9da319db7493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 0da18fe4-5513-401a-9201-6bc66bc82fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 f93c5d1d-c4c9-486b-9421-584e080534d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 eb99067d-d04d-4988-86c4-79a98c3cccf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 916ec7b5-cf98-4352-9ebb-2f0193574c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 2b908f7e-0881-4cc1-8339-69373bb1d60f)");

unit.assert_eq16(16'h0F49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #83 0bbe7426-84e8-4f7a-b2da-e0e5b7c2d985)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h081F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h081F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #84 ccc29d2c-5066-4cbb-b166-49f9a5a005dc)");
unit.assert_eq16(16'h07B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #84 caf9b236-d96e-4e31-98c3-e6f0ac72e4ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 9fd8e808-58bc-4f07-8367-7f18f9f254f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 820e8f17-e903-435b-acff-4fe96e6617ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 a1dd1a22-e2c5-4d74-abcc-9c9d6ab574d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 2f67b014-5b0b-4856-95b9-221d346e70e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 146ea338-395a-454d-b305-3c1f76b11170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 7738ee14-19c6-4d98-954d-e720d769a0e3)");

unit.assert_eq16(16'h081F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #84 a00e650c-cee1-45c8-83c7-f69cd49efb4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h08E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #85 43907f61-1e5a-47fb-b492-e7695fa21637)");
unit.assert_eq16(16'h09F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #85 c5f8bb39-9134-43ce-97b8-9dd5e7aecced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 c65fd63f-7d1f-40f3-9a8f-4681d1f3ab36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 77f598f4-b3e4-4ad0-8fab-28cf3dce5705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 8c7512b4-dba6-482f-bb95-2d25e2990957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 74415d88-6dd7-4e44-a2de-80363805c058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 3bdbb615-e447-47c2-a4f5-2ef7ab57fa82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 1879c246-d650-41ae-817e-51d0c6e34d41)");

unit.assert_eq16(16'h08E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #85 580fc1a7-ebd8-4f71-a03d-22d928baa2bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h0AD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #86 376b430d-2ea8-498e-bdb3-d83f054eda97)");
unit.assert_eq16(16'h0A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #86 8b19fdd3-9f4b-4184-86a5-0d5e7869df69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 f5261fcc-dc98-45f4-b1d1-f483597b42e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 c5d38ca8-e65b-46ee-86ab-ef0a3ce85449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 565945d4-2b48-44d3-b4f0-33c4f0b6e011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 a2b331ad-774b-4a20-a0a8-a54a3aa4214e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 474a986d-3500-4e17-85e7-28d2d033c1d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 2a1de2eb-100d-497e-afeb-29a612f7c7ea)");

unit.assert_eq16(16'h0AD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #86 c147f1cd-3e3b-49ca-b913-08587ed34865)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h0511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #87 696bc69b-48de-46c9-9dad-ee373f8c7408)");
unit.assert_eq16(16'h0D2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #87 da76a7ea-9e92-4896-abc2-dc06d3addbd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 529fa29d-660a-4a1e-b876-0e21fc3fe918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 6ca45496-0d57-4fca-a804-4d9731ac9702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 e6697c71-5ce7-43cf-b28f-ad2e7986a82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 c9efbde7-47ad-45b9-9bfe-14f5bfd6724c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 38910034-9a27-40f2-82f0-169f78469b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 e0dff413-0220-44b6-9cfd-58d513966fce)");

unit.assert_eq16(16'h0511, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #87 be60db6c-9c1b-4004-9711-c8b21214fcec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h0AD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #88 b68d7506-7af2-451e-b870-ad0247dd566c)");
unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #88 2975ec7b-5b7f-4eba-af6d-c07e301a792c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 75dc5a5d-7c62-4340-96ca-19ad29579161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 e7f21ee6-1ad7-421c-9428-1e924724ec04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 55884a00-7404-4dcc-afdf-44ac2c27facc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 5cd23cdc-9e6a-4ecb-b1e4-dcfde288ce22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 8e90ae4e-fad8-4dbe-9bf5-f2296c73dbf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 6bbb9b0f-3960-41a7-930f-b647734bff64)");

unit.assert_eq16(16'h0AD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #88 87f26bcf-9294-4cbc-9d89-2fed254ae27f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0066;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #89 7c439705-24a2-46e0-8b89-b09722e0b157)");
unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #89 523375e5-72bb-4772-a361-9648f2a132d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 6b03cfb2-f892-449c-91b0-9adc8716733a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 28f7ffe2-2e9e-4dd2-9a98-9f5026f13e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 43da3137-a3ab-4562-91e7-5e37ba982e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 630fa91e-257a-49c6-af1f-7f95cb514f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 b0dafdfe-7151-4fd3-8653-a523f7f710fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 290b212d-ce3f-4535-b11e-8ee7c70afdb3)");

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #89 caefcf3e-b14b-4b53-a213-b3f8a6d7ee2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0570;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #90 748c8ed8-1635-4777-add0-4536e632d377)");
unit.assert_eq16(16'h0570, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #90 4e05ae2f-521a-4c7f-b65f-cb2baac5fba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 057d3076-690b-456e-8250-311291ea4b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 968d6728-356e-44f9-981f-9730dfefbc05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 604ef1e4-cd4c-47b9-abfe-c963f809c891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 e0cf85f5-4f93-44ce-bfd1-0073b3ef184b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 f6e72139-4317-4d7b-8d30-725f483ded3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 ddfa8bb4-afb7-411c-adce-cb2baf703c06)");

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #90 1e07655d-59e7-41ab-bc6f-814214638b5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0607;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #91 5625540c-c294-4f71-9f09-9efd3ac62315)");
unit.assert_eq16(16'h0A75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #91 fd0b2b2c-821e-4d40-a285-8983729b7ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 d0c97b97-336e-4655-a321-b3d613add1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 d69fbb5d-0508-4e16-bddc-e62d4ca59e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 31cd19a6-b15f-40cb-8ec9-8dbd07a412d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 db9b3025-f2bc-400a-8430-f6e56b097f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 03b14b72-5d89-46b9-a305-a117e010a318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 cb953c6c-5834-4100-b545-83048181fce8)");

unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #91 4ea9f752-e603-4ab9-9814-3d61bc738865)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #92 edf74f9d-2030-4d86-9755-f6dfab093b85)");
unit.assert_eq16(16'h03C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #92 68956dd1-2897-4e8d-a090-30c81219d908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 fefd1db4-3562-40c1-b1e6-7689d9a0397e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 d987eb9a-25b0-497e-983d-f972d698bffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 ce133828-2883-451a-9016-81dc0fe1fff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 f6b23350-ba28-4d4c-a2ed-a0eb12925635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 09cb96f7-f03c-44d8-955a-ec1f4fb00ab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 1d5ebe6d-f648-400a-b4b3-bd28961c95c7)");

unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #92 4073d20f-07f2-47e2-8bd4-a838ca91edf9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h059E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h0DE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #93 ad79bba5-fa8e-45da-abd7-a84700886878)");
unit.assert_eq16(16'h059E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #93 85a40909-d32f-452b-9f49-4c35a7315bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 0cab3240-0f25-4ba1-9189-ec350be43afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 d9568486-990c-490e-b269-7b01936f1efe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 11cdf1ae-3ae5-4f47-9f86-1ed3befdc845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 d2d36fdc-c92e-4243-90a2-a4ceece6be32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 7ab3de08-0853-4dee-b3bb-6bbf5ae23832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 b20d182f-7b87-461b-b7e3-25aa94bac136)");

unit.assert_eq16(16'h0DE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #93 d9d8ab2b-b7df-468d-99b1-ffc2e949a8a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h000B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h073D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #94 9b542b68-af81-4f38-a1de-59ab440dba48)");
unit.assert_eq16(16'h073D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #94 abbd64df-f356-4e64-a97b-64fff13a68c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 b8c9ce4f-dc0f-4a92-ac2e-3e01a7d87964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 565734ba-120a-4b52-bd8b-f79b26257aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 6fb0fe7f-f6ce-451a-8f9f-7509a6f03486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 05a56fde-2c7d-4903-b522-d7f54189249a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 2d059f84-afdc-4229-b2bb-cad62bfce1c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 5eaef275-d069-4134-a7c5-9eaaf2f64b5f)");

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #94 d8448435-3482-49a3-b1e6-362eab58754e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #95 49e0c5a4-3edb-441c-8e60-b5d5b818d99c)");
unit.assert_eq16(16'h0CBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #95 45353da0-4e5b-47f8-a8d1-bae2043765ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 c6fb02ef-61bd-4466-9142-7f3849b8851b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 e3b757df-716e-42a9-b966-d87c2e89fceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 4754ccaa-bbdc-4b09-b3d3-94c40dfe2e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 395e5d3b-cbc9-4adb-88e9-cb350ebed4c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 de7f4174-fcbe-4511-9174-9ec1702d48fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 da0d0778-2fa9-4c1e-b7c5-84cb566a139c)");

unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #95 1756f31a-dde2-4dd1-b3fd-dfd643107908)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0113;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h0B69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #96 82f35bec-6157-4e31-ab99-96d413111f67)");
unit.assert_eq16(16'h0113, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #96 a1c04d95-c75d-4d72-8361-b5c198ec7661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 0052605d-fb57-4898-adde-0b72ba18c73a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 3e2c031e-448b-43f9-a6a0-e245b3b5c03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 aac7cb45-e3d6-443e-9d10-c1613f98e356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 143db4cc-383f-4b82-a6a8-453933585679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 0eaa105e-8a03-4aef-955d-c3872c22c801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 141c52fa-9102-4b06-b19e-5765d4d75215)");

unit.assert_eq16(16'h0B69, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #96 d3b30b42-08e9-4487-ab6a-99dfb700fb83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0616;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h0616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #97 720c0e11-b35e-4afc-818d-895c512322ba)");
unit.assert_eq16(16'h0D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #97 60f1974d-7eb5-4b8e-8de5-c7c504d506ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 864ff97b-d9e5-4bde-a7eb-6e8b1db5bd3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 e77a8aa7-c90b-4610-88b0-258732bd2baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 d5b6a9a1-78ff-4219-a5eb-0a8918d90f7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 cc19451d-02f3-43bf-896c-4b6262d652b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 a9ff4aca-7a88-48b5-bf16-58ef9b05531c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 c67fcae2-9699-4115-a7d5-3133c81cd75b)");

unit.assert_eq16(16'h0616, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #97 78d34f3b-4166-4b0f-8fb0-9c776494ad20)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h0AC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #98 fb7924be-a649-4662-a192-22a13a8bb7c1)");
unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #98 394ea22a-6efb-4089-8ac9-8e028346367e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 c7ef6e19-e6f6-4112-b1c7-8d28e6b928e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 b414d5d2-e18c-42bc-a574-cd7903cf6a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 8d1fe0f8-31e2-4496-9a83-69b94f897c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 beede4c1-f818-4d35-968f-11a83a1206d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 98b8db0b-219a-46ec-af46-d5c76d06a1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 d33049f5-b123-4013-a7a5-2173f954b9ef)");

unit.assert_eq16(16'h0AC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #98 2e70b552-bac3-4d67-b964-19afa1b48544)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h0B11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #99 357fa584-0216-4a54-92b2-dfb49ca54493)");
unit.assert_eq16(16'h0C9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #99 e134bf85-db81-423c-9728-ce927cf17663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 e424e7ec-20d6-47d9-bc5d-4ac2f1f29de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 1341a0f4-ad21-406a-8951-feb5a5a4d202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 42fee520-f1e1-4bdf-a8a8-7cd920398ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 9fb2aab7-f97d-4abb-b308-8cd422e2cb91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 36b5ea04-f600-4ce0-bf3d-9765e0842dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 087db308-92b0-482e-b429-5b95c3489f21)");

unit.assert_eq16(16'h0B11, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #99 78008b61-85f1-4d9f-b5d8-ff9f0f02924e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #100 de7f2738-3a05-461c-950f-a787af02a266)");
unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #100 5041d719-1704-48fd-a00c-5ee31acc01e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 7b724967-300d-4f39-a7a1-cd64512a39f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 9bf83e05-3fc7-4e03-a4bd-d46fcdbf72d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 ecab54dd-f984-404a-aa39-87bba458da77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 fc2e2d50-a2dd-49c5-99f0-c391ffa8ce31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 eed3c105-13eb-41c2-a8e5-9ca79dc32127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 d2c68bca-8399-4ffc-a5eb-17dc4b6efac7)");

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #100 6829bc41-b007-4d3b-ad2c-fde99d5a1336)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h0EDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #101 b36be605-f407-49d8-a5ff-aff3d6a421ae)");
unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #101 ca751662-e268-4972-909f-175f3792318d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 e05bbf21-2e40-48dc-b05c-3a7505cdae3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 50785f94-520c-4806-9dc2-99749b8d1754)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 c68b6a14-6e47-41cf-8ef2-c9e610edee3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 3fc9f066-2dd0-4be7-acf1-2ac2e5593a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 e7aea424-d672-443f-8c00-bf0da5b00bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 50885873-38e7-4833-a36f-069410710ede)");

unit.assert_eq16(16'h0EDC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #101 ce39ef10-45f9-4735-b5be-a9113108c9fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #102 67a14710-56a1-4cca-908a-e528d689cad3)");
unit.assert_eq16(16'h04CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #102 cf6a79af-66aa-4ff7-b714-0ce046dbb2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 8518be42-cf1c-4184-8286-35c2b07c7b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 7e712d31-de60-4058-b5ee-df3c487fdf3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 ed79cbda-0e9c-486c-bcec-fd83f9011209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 2a9fef55-b5b8-4b9e-b384-3af4f5121f88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 1a3791be-e9d4-49ac-a9ce-9caebf92f683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 06ff6d42-3b58-4022-bebb-5ea8cf59a2c6)");

unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #102 20f0a7c1-9e4a-4501-9c88-4fd0030fef25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #103 52b6e114-1733-453c-9b2d-4512b897f63c)");
unit.assert_eq16(16'h0B7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #103 1ba677c5-168c-4c9b-b0a6-6f059b17bbe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 1e60d0bf-17d9-45d5-a148-23a03ed424db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 71b0fd10-2cfd-493f-81ee-83d2af28e2b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 9ecd2d7c-7b39-4722-b067-7ad8abd0cd2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 810b8256-9046-4d91-9a9d-7ffb0a4dcb47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 ab0fcbaa-e1d7-4fd0-ab15-5499cca85763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 119f30cb-b515-43a2-9852-20456bd10f70)");

unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #103 487ba374-35c0-4e9e-b516-db84dedaf422)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0885;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #104 74a12f19-8f78-44c1-880a-04f8b4b6b593)");
unit.assert_eq16(16'h0885, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #104 5bd73ba4-e49b-4d72-abef-9a342d210288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 cf23fda3-a5ca-4a54-a1ae-797fa4abe7ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 9c5432ae-6e4a-45b4-9844-428989596381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 4f5e85ae-a331-4f67-ba6f-bacd983de6ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 4ee832fb-8ca9-4495-b062-025d24b3389c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 fc950e00-8de9-4270-8c99-e0c57c19e182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 22322a19-977a-4b3a-ab65-ef17bc3e9a1b)");

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #104 d17c723a-a856-4d4a-aee4-2953f611ab52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h0DFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #105 bddba575-6a12-49e3-bd74-78f3e5b3859f)");
unit.assert_eq16(16'h0B5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #105 279b299d-23c2-473b-afe7-87bd8ba21a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 23cd7e57-e984-4d03-93e2-58f0ed7e8a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 a6c4e25d-9d08-427b-81c4-e92efeb7e222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 120b27f8-367d-40fb-a300-5a15a091ce88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 2728779a-ff5e-4f4d-b4a4-cb8af14f0e63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 0237a8f1-cd94-442c-9810-a2bb41a5e4d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 06892191-235f-4d9d-81a3-065bb2f717f2)");

unit.assert_eq16(16'h0DFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #105 0d538186-c08f-4a13-a411-17567d830f9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0503;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h0503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #106 a8798bbc-b922-48c0-9103-8c31a242a3d6)");
unit.assert_eq16(16'h056B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #106 c45608fb-e4c4-43c2-8f1a-b15dba2cf93a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 4da8d322-9d7c-4498-acef-acfdc2a271bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 40ca37ab-99c8-4a4a-8903-3bb76c688830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 8040794d-24a9-42ea-b276-60543a846a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 7c50cf91-dc57-40e0-ad9b-e2e488d4a179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 419c4bc4-a7f1-4e39-b409-7030b0142577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 a3268acd-a2b6-41a4-8b5c-f55aae18d742)");

unit.assert_eq16(16'h0503, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #106 1011e681-0306-4d4f-95f4-2bf1905f8645)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h028D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #107 d268a0ba-1302-4f18-a253-7e83136053b6)");
unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #107 2fc729b2-a0f9-4db8-a298-b0979cce620b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 a7ff5406-282c-420d-8c83-bbb773b45fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 0a907deb-d8c6-4e2c-a171-986ef53e9d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 736e75fb-c20e-4186-8de0-25a6df61bb6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 f23c9f10-ace8-4127-978d-4f8af4303c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 49dee4d2-1495-47bd-a66a-62967e562c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 138fa68e-b53f-40d5-9fce-f903433cb42b)");

unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #107 1ece6126-9556-4109-b755-701f9dac02d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h06D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #108 0a10e8b6-006f-4a85-838f-8305a9e690e2)");
unit.assert_eq16(16'h0D2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #108 a15f2e1a-8c05-4ce2-96b9-d4afdba315cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 98e4f07f-1d9a-4cc9-a299-67378a62b4cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 925bf229-07c7-4ca4-9982-23245de8c9dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 4c85d2f2-e95b-4745-865b-4260033d6168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 f66d15f1-ed64-4917-b4b8-209bb5e39032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 66d51ed5-231d-4b39-940d-b2f5f7f71ee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 b2ed69e9-8c88-48b4-b865-eb2239dc86e0)");

unit.assert_eq16(16'h06D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #108 d7047c74-8d75-437a-891d-fc1ae588a05b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h079B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h079B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #109 fc4ec545-b948-44c2-9071-a3d0aecccea2)");
unit.assert_eq16(16'h045E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #109 78d16428-2302-47c5-9778-5bfe727af875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 f395a294-c09d-44a5-b014-718e0c17d796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 dc4740e6-315d-49da-a20f-9a87cc46cc13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 45de858c-7e4d-4aa3-8939-ade233b1f268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 ff1b2821-424f-4e3d-86a9-82c4f175b9ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 41996750-8b41-49e3-981e-e81884d232e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 35277115-c080-40d3-a7da-36d3a030a087)");

unit.assert_eq16(16'h079B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #109 601eaa6e-039e-473f-bc0a-a682e2d8aae4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h0C81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #110 63244e20-d750-4eb1-9380-829991560dc0)");
unit.assert_eq16(16'h0B10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #110 cc1af0ba-ab01-4746-a1b3-46e8ae66ec93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 69fdcf16-92e5-409e-b11a-7664d6904151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 2ee584c5-c4bc-4355-8199-7d6f24e24c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 3b320d65-d961-4611-b015-54bec03b786e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 d9d58790-2ea8-4b4d-a26d-6ae0339192f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 6c0922a1-d54d-40f3-9f59-e2c39bd7d232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 9d7d061a-3694-4229-a298-cb2664d6c810)");

unit.assert_eq16(16'h0C81, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #110 df64f407-2e9f-4e0d-bd0c-30c921bb3c46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0293;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h0293, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #111 8ae33883-aa1d-4796-b488-8a5fbd331594)");
unit.assert_eq16(16'h0AE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #111 ad93ccdc-ee53-46da-80e8-aaf37aa7081d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 10112f7f-e67f-44a8-99bc-12fdcb022362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 a9bfe744-9a06-4bb1-a843-a2414b0bc022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 dd6e6901-f568-4f87-86e9-c9843833e844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 e64bb7bf-4a14-4599-83bd-108e65b40f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 b6df22e6-6a7b-415f-b944-ac30a54b6b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 f8cfb869-ff91-474f-8b06-90261258af68)");

unit.assert_eq16(16'h0293, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #111 046bef6d-24c1-4d3a-8c34-985566b30996)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0435;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h0435, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #112 04ca2954-667a-4b92-8675-04519c4ee78f)");
unit.assert_eq16(16'h045E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #112 e8e1c5ef-6094-4b27-b745-d93c5918dbec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 90886f24-2e33-4d0c-8e4f-2c78989b7745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 c91f79e2-1767-48cc-b8de-b1fa66d4a3b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 395edf20-78a7-4866-bd7e-e585a95c16e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 6fdd5bc6-f9dc-442a-8291-bbc09756c059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 6a151325-afeb-49c5-8f09-9c4a5cfb5ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 ca03d14a-6286-4f83-8d55-75094bd4d7d1)");

unit.assert_eq16(16'h0435, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #112 2221bd0a-a09e-4848-aeb6-39a2707ef1f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h01AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #113 a90a8037-c181-48d7-8640-228e9b61e71d)");
unit.assert_eq16(16'h00BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #113 3f0135d8-709c-49da-b97b-82657c32dea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 f3368277-9aca-4321-a5d1-fd592556bc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 79236623-8d6c-4c45-b49e-5703a3c87678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 5815719b-3163-499e-9b83-8b9b30b863de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 e60b6fc8-f5ab-46b3-a615-9c21ca2b47cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 f1ae1551-128d-4ad3-97c5-e7fafabdf4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 9f8325b1-4414-4401-8663-76068280c488)");

unit.assert_eq16(16'h01AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #113 1d41f216-8519-47d7-a26c-ad9307f05d53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'h06B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #114 0b6f04bb-fce1-466f-abb1-3995b8ce4bc2)");
unit.assert_eq16(16'h0D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #114 5b4889f6-4110-4239-b053-cb404a23b9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 0b857465-d581-42d8-8e20-18e14aeb7fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 99953ae9-e834-484e-9128-2b402d35e6b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 8347dba7-c48d-46f3-8680-749140cd5e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 1680251b-92bb-439f-8e55-4d1c4eca5955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 89d32fb2-c80c-42d9-a7ea-254fcbd7abc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 4b927da2-8911-4a2d-9885-41674c93fed0)");

unit.assert_eq16(16'h06B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #114 e4c91ee8-61b7-4a62-af2d-561d264fc305)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0600;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h0600, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #115 9e63a3cc-b874-4e2f-ba32-3f11dd65ed47)");
unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #115 3a7d0c64-7c35-44cc-b9ed-b8ec99515a21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 d4ba4b97-749a-457d-80a8-6988be379650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 7c377be4-4e70-4292-a6ff-a19d345366eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 d43540f8-f416-4685-ae02-8c5ee297a749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 be088e14-1d31-4d8a-b766-9d28ab280a25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 204ddb31-8a59-4090-a91f-d7618165b11c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 8b6e24c2-aa05-430c-bfdb-33564e82b17d)");

unit.assert_eq16(16'h0600, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #115 ad84d0b7-7ee0-42f1-a84a-dbf3530a0564)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0367;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h0367, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #116 3d360800-3025-4b7d-a05f-36e2ae4d9b82)");
unit.assert_eq16(16'h07D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #116 2b84eba6-8a87-4e2e-8429-a142adbc50f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 10058de0-9e8e-4da1-bcc2-b5e58ef8835a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 eb124494-9b73-4294-85d1-0e55939f6f7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 86b13780-ab4c-4127-b00a-daa7ae2347e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 f9510fab-bf7a-4592-8369-950e17e8ad10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 43df7d65-6233-49bb-acda-c12719dab067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 1d02a95b-dcc5-45ca-8b29-0a953387195e)");

unit.assert_eq16(16'h0367, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #116 c21b7540-8e1d-4901-9d1e-6b35c99418d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0473;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #117 c4936f9c-3f3a-47b7-aec6-7578d8336add)");
unit.assert_eq16(16'h0CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #117 1b4c5288-c341-4775-acbe-6274b3772875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 0c16d58d-b228-4460-a862-62ebd7c09b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 caa100a4-5b42-4466-b674-9ab13348c4d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 505edb51-bd4e-4c04-885b-2dbe6401b229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 281aad6d-8a74-44af-bdc1-e5bc8226cc41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 cf664552-11dd-4166-90d2-830c26822e92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 6765ee46-1e3a-4d93-9a2f-9c7141681397)");

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #117 6bf42b85-d15b-49b6-b1bb-8132fee55e52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ABF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h0ABF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #118 ec6b13e9-3719-4aeb-81f7-352d4144eaeb)");
unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #118 0b6e74b7-fd91-438c-9f90-8baeded79870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 261ef402-9e4b-408f-b598-013ce530b897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 1d9039bd-efe2-4fef-a03a-c1f5ac8b6ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 1b994562-0737-482b-b1f3-a76a5efbdb07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 71d70002-bb0a-4803-b93e-432a4b0a9af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 da22e332-538d-4e0c-a8f8-2609a15ebe5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 2a9429ad-545b-4441-bb63-fffc8e5f1bee)");

unit.assert_eq16(16'h0ABF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #118 0a80fcc3-c89c-4ad2-a602-3c1ee748ae15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h0B8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #119 441b759c-896d-4c27-a221-18cc32cb7c6d)");
unit.assert_eq16(16'h07A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #119 b33c8bf1-959b-44a2-8598-5d86a7c2eb75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 2736249e-2c34-4e7d-bf9e-16cd99e9795d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 1fac5bbd-b6a8-48d7-9950-7b7ea5333893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 76a309a2-c78e-4df6-ad31-3576dce131de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 515312af-33bf-4bb5-88ee-846bbd16dce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 a7c7791b-15d6-4ffc-bdfd-8c4c4c4fb8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 82c5ccb6-c559-40a0-a056-e4bcdb6bdb5c)");

unit.assert_eq16(16'h0B8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #119 ae71fe7e-7502-4787-8b51-9b5af7a3204a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0888;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h0F06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #120 7eaf006b-250f-444b-a2fb-c52c1c48a4a5)");
unit.assert_eq16(16'h0888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #120 13a21816-3489-4b0d-ae79-9dc37ba384c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 0a40b02b-c307-4fc0-bb8e-130ec2401589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 45bc39ba-a31d-4b70-a3d7-b2c4c1f7146e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 79562af7-a16c-4444-9620-0bc9adb1c216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 b5d6aa1c-0e71-4bff-83b2-20127db24f98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 125ed5df-d4da-4035-8f61-1fc785512239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 b108b848-86d2-4cbc-b0ab-ac3d3aa661d9)");

unit.assert_eq16(16'h0F06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #120 5c919a22-508a-4dea-a97e-17a64bda5ffd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h0E98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #121 60b1bd32-359a-4f63-b6b0-d24f92f454bb)");
unit.assert_eq16(16'h0AAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #121 4f4e5944-3068-4aa6-8cda-36edda47c6fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 a8b519c9-7e64-4122-83b8-5484379a2516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 9ceece16-e679-4639-b6e4-15b2dc96c56e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 914cfcfd-cad2-4faf-8887-80a57c3c44bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 8021035e-a016-448d-a1d6-9b41d0e99b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 73912808-a82a-405e-b1a9-45c5b9125325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 8fb8906c-ba67-45c6-8853-5aa18bb5c80d)");

unit.assert_eq16(16'h0E98, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #121 d9660c0b-602c-4c9c-a43f-24e6d3fea8fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h046E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0814;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h046E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #122 b128e150-e1dd-45f2-a868-ee31d40fb05b)");
unit.assert_eq16(16'h0814, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #122 b8dd7375-ab64-46af-b769-164944a99714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 e097e5a7-c489-401e-b573-57d96ed1e7b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 aff5e9e4-ba10-43b3-8a97-1535b63b6023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 2c73578a-cd77-47fd-80c1-dda5a7f5098a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 49c5f6ad-8099-4f4b-a38a-e4570bd03adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 151d5988-f7c7-4146-a5ee-ea05cc271ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 72f96c6e-8ef4-4427-a915-c4f20818e82b)");

unit.assert_eq16(16'h046E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #122 205f2fcb-bffd-4367-8102-1b18ac977585)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #123 1aed6761-7e25-4694-b3da-facc91517961)");
unit.assert_eq16(16'h0A4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #123 f3a3481b-e702-42a2-93ff-cef9558b14ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 e595cc0e-721a-4436-840c-1a7670b29ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 70d16795-2e18-4467-8cc4-ba79a172954a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 6cf6a655-9489-4c53-a884-0fb45bf04a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 95e6d215-a68a-4072-bc72-29d5f617c5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 7ce89c07-c75a-47f6-b4a0-69ea9b050ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 dbf70aee-dade-47cf-946f-ed52a272c8c9)");

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #123 c7060507-f836-4038-a366-54d19bde0b05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #124 d325f155-44a1-4d65-a929-117f23dc23ad)");
unit.assert_eq16(16'h0A05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #124 d205c678-2d51-4f99-99da-43a3a9be4d3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 a51da031-48b4-427b-bd18-a0534782e746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 2b40821f-b108-45b4-9201-96b133253960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 974a7c6f-034c-4711-91b7-63f7d4829c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 e76c8649-c63b-4592-a6a6-4f18000e3bed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 26defa8b-05cf-42e0-b6a1-5c00a423eca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 923c8da2-5cf7-4666-b9b7-2018a62bcde8)");

unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #124 c177c239-61dc-49ec-8ae3-96b11479fcb5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h04A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #125 6df11e4e-3653-46cf-bd3a-acf35dd14e30)");
unit.assert_eq16(16'h0D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #125 38824f83-5036-48c9-9c64-bbd5de595255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 a5e85bd1-b6bc-49e6-8656-7fcf715b30c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 a09b6f9e-af23-4156-aff9-8cd4f6d2b4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 5449b704-d45c-4a18-b9c3-6330fa69ef6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 7bde0919-4cb2-4b54-b84a-ada5ff554f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 4ae189fb-f0fa-474b-9011-8857918b0c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 51cfe160-50ef-468d-ba73-e82541ad2cf2)");

unit.assert_eq16(16'h04A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #125 1d3a99f3-5ea1-4cdc-993a-9b19cc984490)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0187;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0270;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'h0187, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #126 31e7dbd4-1fc6-4aba-988d-e0e21c5fb025)");
unit.assert_eq16(16'h0270, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #126 e5541d91-56dd-4ebb-9273-ba824d254bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 b9d77eb2-8497-4f65-b638-dba024aa9227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 4d93646b-36c0-4d91-b0f8-3544c43e19d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 2bf79069-ee5d-4ceb-a152-75c78c80fbc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 0ca5b1b6-4ae3-4fb5-8c1a-dec6d62e90eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 afec0065-c8f8-4db2-859e-92b0709fa861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 ebc695ab-1248-4862-aaef-80084b180022)");

unit.assert_eq16(16'h0187, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #126 5a3d6302-07c3-4a2b-9db2-0e2604ebc538)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #127 7acf2d1d-28b2-4b4d-b61a-2d8663337a72)");
unit.assert_eq16(16'h0C6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #127 fa9f33ff-0942-4297-8b49-82f2e68e6578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 ae07adf5-ce51-40a5-b930-589d92978c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 908f0b8f-23b1-4147-aca7-36beddd0b9b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 0f56b3d3-2fb3-471e-bd56-b3b1df5baced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 6e28d778-a915-48d1-be93-76b224e26b27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 466fb97f-77b2-4f0a-977e-2329fc37aafa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 d234a211-7cf7-4e54-a7df-6c17658ff1f0)");

unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #127 0f98c924-5a77-4275-866e-72ab0f7678b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0100;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0083;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0156;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h0083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #128 b6292eb7-a4b2-4f74-9e8a-a3d1b7eda362)");
unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #128 8c43394f-8ba9-4492-92f2-42113e9bce81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 c51a2587-df66-4aeb-b44c-bc3dc2d61ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 223f45c9-ddbb-4d3d-96a9-428af8f45242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 98c19127-d257-4b3f-8bf2-2eee0a859bf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 4659ad79-8ba1-487b-82af-89e80c11415f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 862e1754-1976-4ea7-a3e9-48319cabc02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 3cd1a326-e8ca-4a1f-9e73-3957b482267d)");

unit.assert_eq16(16'h0083, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #128 3f7d80ac-e1bc-4c0b-9971-f646b957a569)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0102;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #129 f4b0874a-76e5-4ab0-abe0-d2a56b64559d)");
unit.assert_eq16(16'h0F5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #129 eaabff6c-4c26-4457-a7a3-8d02a9dca7fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 e9910ffc-879e-4e5c-92e8-d24c1fa8ec2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 5de888f7-d1ba-4fc5-84f6-9be67c428369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 d4a599e8-2817-406a-b54c-25a4e09dae72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 9df2f547-6a26-4976-a89f-12fb2815d580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 08a44e5f-c539-48e8-8756-a7f0033846c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 f4956134-454d-467e-9ca7-d980491fc370)");

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #129 e9241726-17a4-4b7b-8d04-ae7727688a50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0104;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h003E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #130 22ff75b6-29cc-433f-85f0-95e5614899a1)");
unit.assert_eq16(16'h003E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #130 5afa96fd-8200-4b60-ba9c-6a05cfc29896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 902f7f89-4ec8-4fee-bbb0-37bf878e4987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 709b2293-d657-4e30-b916-129d673bf1a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 398cb86d-bba0-4f3c-a340-62e0388e1ad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 f20e12d2-7fef-4577-ad5a-bf314d7356ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 892ea0fc-53a5-4dd4-9633-735ab00c4399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 4a2bf828-b6de-48f9-a01c-eaf3e3dceb22)");

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #130 353d7123-a0cd-459c-9cde-dbaaef143f22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0106;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h056F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h056F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #131 57a1e752-4544-4cff-b61d-62ff9ec369b7)");
unit.assert_eq16(16'h0C62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #131 0955270b-aab1-43ab-a6a8-95967edaac68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 c08250eb-cafd-45d1-b318-8a81d07ef56d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 e0157886-a1c1-4807-9a0c-9f0f912dee23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 9313c555-94e1-4d5d-b3d7-7c9cee6c7f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 cfa8b8ee-1107-4009-826c-7126df46e758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 651725ae-a0c0-4430-9a51-88cd8d2647c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 3dad467b-74f8-4007-a789-902d3a485cf3)");

unit.assert_eq16(16'h056F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #131 da72fbea-ac97-4530-816f-ec10a82e0760)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0108;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h050B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h03BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #132 eb9a23ee-b848-4267-83e9-e9f1e2db4f4c)");
unit.assert_eq16(16'h050B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #132 78ce1b10-c66e-4fd5-935e-0fdd25b3c14b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 da5aaea9-1603-4979-9c29-d8f5b24ffd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 b269a1dc-95e3-4815-84b3-0955d6e39f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 8635f52b-3925-48d5-b819-e0359e85e1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 6891ef35-e23b-4aa0-95ac-c9d0b39f7024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 743ce028-bfea-46db-8c3e-0901cbfd7201)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 a50b5a43-258a-4e5e-a18e-39c6fd55b52e)");

unit.assert_eq16(16'h03BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #132 ccaadc2c-67c3-48e5-8991-237c98a89147)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0396;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h019A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h0396, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #133 a518160a-4134-4c5e-9a32-b217284089fb)");
unit.assert_eq16(16'h019A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #133 eae5c41d-4020-4842-b62e-43fcba98b32e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 80dfac7a-6037-4573-a743-9c81788cbee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 52177a82-e014-410a-83be-e0faea231b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 34b99264-6594-4c19-a75c-6a9e5089c2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 e9f362ae-0475-4cd9-b92c-6d130804a4e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 6a0b36f4-7a04-494f-9951-5cf9387d2cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 48df59ac-c04d-4ee9-bf73-b8d46d3d214b)");

unit.assert_eq16(16'h0396, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #133 22dbedfc-874b-4840-856b-0394103c77f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h0AFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #134 cfec214d-d2d6-47ed-ba1a-8faabbe8ee6b)");
unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #134 c8ed70b8-534c-47bd-8390-edd343f61f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 2a475503-04a3-455b-9db3-0f9b23cbb928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 b35da927-39fc-4709-861b-c1d968d8c712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 dc78e194-60b4-4294-9d68-15bebbbc8d8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 979195f9-a05b-4a3a-bfe9-67cb9a0a10fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 0b65da6c-88e0-4578-bf76-c079895fe6d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 ed661280-c58b-44f2-9b71-0037b7fb3170)");

unit.assert_eq16(16'h0AFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #134 65675a05-3cd6-4399-83c7-8405871421df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h0A1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #135 3fc8e4e3-7971-4dd7-b8ff-e7109affd447)");
unit.assert_eq16(16'h03DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #135 8646aed5-a2ab-4c0c-851d-03eca53bd817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 e5888c09-7dec-4592-9c03-21c3b00d8226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 f8a938a4-e4e4-449f-8280-99deaf82105f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 d0824d0e-2fe9-450a-a8cc-7b4484575e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 03b1df56-a58a-404f-ac27-7a98f0f11ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 d4e80e35-8ef2-4d02-b58c-2fe0b1968016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 d2da7410-51ff-4a18-8d9d-170a794924b5)");

unit.assert_eq16(16'h0A1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #135 f793e3d4-668c-4cae-bded-d36aedd8069d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0110;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h011F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h0587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #136 43650428-012c-4024-9c00-5dc3e6d4c79d)");
unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #136 0fbea73c-07af-4283-a2d1-b44a6b240717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 c8d490d6-cd03-4b52-8649-d94394d9a60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 fdae6862-7de5-45ca-88cd-b022ae214de6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 bb0516c2-42d7-40b6-a074-795e4664bc90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 d1f5ab22-41f0-4c2a-bb65-be58e857d4ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 7ac76411-2c07-4ee1-83ba-9b3ddf2c22c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 4f60a0bf-9a1a-41b6-842d-3be4b61fec66)");

unit.assert_eq16(16'h0587, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #136 ad5f9b5e-03f0-4792-b657-8fc70a80cd3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0112;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #137 00520a9e-eebd-4dcc-ad6d-5c6ccde25956)");
unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #137 47de3da5-bc24-4e9c-8c43-70fe28ac2ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 7b4b5361-01e6-4ddc-b4a1-57a3888045f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 952804c3-6129-4505-b709-75fa05e2da9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 e5f9ffc8-04cd-4d37-9b03-59b0cca8d4ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 9098591d-5522-4156-8e4b-473bb1d93173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 1d1ee375-70b4-4c24-9762-02eb1dff0a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 b578e56c-0341-4fac-a8ba-bba3ae68dd57)");

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #137 64b5a37d-1a30-4e59-8a5b-9bd8291730ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0114;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #138 565ad3e0-58d1-4d94-914c-12e7dd888c51)");
unit.assert_eq16(16'h0F3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #138 9cadeefd-4f8a-4f66-af03-afe527826239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 90da80f2-43e2-4b8e-a56b-d03efaed7493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 70744046-622d-4fb7-afd6-62629d50cedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 fad1fc80-a3ad-4c90-9e5c-54c8ddc02fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 865d4372-135f-4976-915f-47b0e210b5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 f92b58d4-a537-45f0-a625-66948ac1813f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 6c819276-b3ce-4e89-88fb-a8523885c7de)");

unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #138 338bd0a0-4cdb-48c0-995a-cbf691a43427)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0116;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h067F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'h067F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #139 fc002879-7827-4e4c-b5ef-3cf9751d1604)");
unit.assert_eq16(16'h03A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #139 00d1175c-6177-47d8-82e8-8d50442c49f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 de737b3d-1fe3-4c5c-8b33-8709010bccc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 a9846535-62dd-4def-9ceb-be7ac4f28ab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 a12a945f-8955-41c3-9e4f-c405d1e58c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 de346fc7-fcf9-4770-bb86-0634aa88f76f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 be3fc727-4783-4ad0-9844-f64cb2922926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 48601b89-0eb5-4884-9dab-c06022101f1f)");

unit.assert_eq16(16'h067F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #139 6f5a5728-6814-40a7-b8ac-d0b1c7862492)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0118;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0041;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h0041, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #140 1ef764cb-3364-4c9f-a382-d04b9f948de5)");
unit.assert_eq16(16'h0F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #140 09603678-945d-49a6-8b83-10e1a2b338cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 dee84e6e-217a-465e-ac13-b910777cb696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 9254bb7b-e188-4892-afc6-c14dbb39bda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 4484a961-710f-4e97-afcf-745247115a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 362f3af7-cc7d-4c4f-a70c-91a71d9753ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 5c0d3d7a-1404-444e-9758-cdc4ff1fe60e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 018c2d36-4b89-4eb4-9af4-817dbe53db5f)");

unit.assert_eq16(16'h0041, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #140 784927ae-a0c6-41fb-a4db-afa3c4275fd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h04F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #141 2f2e63a5-98c4-45d0-ac8f-87241bce7915)");
unit.assert_eq16(16'h0EDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #141 ca786b0b-bf5c-4fa4-ba2f-4c65521b97b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 f833dd7c-d4e1-4339-b508-f7c9a1609d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 c3b7690d-bb13-41df-b754-302ab9f96d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 7cb53c15-7e07-476f-8d33-b816e609ec4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 5f28ceca-9943-4045-a31e-32ab8676d27b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 b14ce375-d888-45c4-aefb-906c795b01c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 827a4bfb-273e-413e-bf51-a957de512368)");

unit.assert_eq16(16'h04F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #141 ba1c4f48-e456-4bd8-afb1-5947c4e60815)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h0B0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #142 7302b161-031f-4c13-9533-90b7f67dbf99)");
unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #142 27a2dcb2-d20e-4489-b4c5-5ae33fde5e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 22bd167e-4220-4203-9890-fe9b06342ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 f07d1d58-bd08-454c-b220-8ba8ec598e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 d85bf04d-1152-41c1-aa13-e5f62f6038b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 1dbdc6af-4c31-45ad-9132-ef88b4f3fe48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 4bddf425-52b8-4fa1-b2dc-3bc9898858b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 aa38da81-ddfa-49d2-aa9f-7109ac9cee41)");

unit.assert_eq16(16'h0B0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #142 58c50a8a-be71-4587-9aaa-510c034048af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h066F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #143 59149a1b-7cb1-4b62-8a0d-5df22ba0e9b0)");
unit.assert_eq16(16'h0E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #143 eb88a03b-6059-4cf1-9615-ad6c7713bf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 d434f777-fa09-41ac-965d-521fe5b15687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 5070eef2-717e-4a18-92c8-bbb6cd992fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 535b77a3-bc5e-40dc-9c60-0d59fb571532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 9f292add-4c01-4ee5-a78f-43b408ea44a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 d60df907-e6e2-45e3-bac7-ddf5aa1550f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 cfc1564c-2410-4c8b-8c1d-48b89c4b7b67)");

unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #143 49dd7c92-5824-4847-a6a8-97171e5c64f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0120;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h085D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h085D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #144 e1049bbc-6f2b-4e5f-ada8-1ba1c1818c08)");
unit.assert_eq16(16'h0635, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #144 613abc15-2d40-4af3-a5a2-478346a20d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 2c15b06d-62a1-4974-8749-2ef9bf93e6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 1fa117d0-f739-46fb-8143-407ea63c9883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 3de2f3c3-8911-4bf2-b2d0-f6a96d2e63f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 b3602530-67a9-4dfe-a04c-ac580029fd98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 cbc52130-4b92-4838-8bae-ca20a957c734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 a10e6eb8-6d73-4e5f-92a9-72ca78b8036f)");

unit.assert_eq16(16'h085D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #144 565576ce-ef6b-4522-9d67-530d40b358d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0122;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #145 ac2ba0ef-1324-42cb-84de-79aaf4140d38)");
unit.assert_eq16(16'h06A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #145 44ad20f2-989c-427d-8cda-ee9c397082ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 67875f9f-8e70-4bc8-8e0d-afcd0fe79325)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 bad828c5-d36f-4f82-a858-193ed795ad5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 d47af819-5262-4031-84f1-ee37abda354d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 45372697-aac7-43e9-9298-a31e486bee9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 a35866a3-3bea-4efb-8fb8-44ad8ef47fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 cde90e18-4ac2-4770-a52c-fba0530aa043)");

unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #145 2e54cb5a-5866-4444-a7f2-06d43ee5fdd5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0124;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0684;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #146 fddcd5b0-9585-46b6-a134-c2388aaf2f74)");
unit.assert_eq16(16'h09C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #146 eb20e359-d4dc-49ad-9888-d42384768c08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 93b038d8-72c2-4770-82d7-d696f05dc684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 cda05588-cb18-4d4a-a481-24549af64ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 577925bd-296e-460a-ae75-c7da215b0822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 4aa3d046-846f-4d1c-9269-8ab428483e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 86933629-5908-40d2-92ce-c8ad9229dca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 0182cc84-6283-43d4-b5c4-383be28504bc)");

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #146 10f12399-21c5-4237-a72b-facf405d7abc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0126;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h023F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h023F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #147 571a981d-d2c3-4bbd-8e42-37233e0e51ac)");
unit.assert_eq16(16'h0EB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #147 f6c3f427-fa14-4397-b55b-6f19b15f32ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 b07c354a-d297-4c60-89d5-bd05503ec512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 b330db7e-0ec2-4fbc-ae4c-098e4666151f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 7bff7559-ee9e-44d0-8ed7-3421b08c95bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 640bd03d-de83-473c-b182-8f839d6a8954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 6451adc1-2312-482d-ab75-75e2b3877925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 6718558d-8f8f-490f-8490-9989a370f660)");

unit.assert_eq16(16'h023F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #147 46232e90-0050-463c-8db3-4338179d735d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0128;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0652;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'h01EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #148 fb595e28-ae86-469f-90c7-c8ed7b0f8115)");
unit.assert_eq16(16'h0652, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #148 b2daa7d1-e3c2-4d55-a28b-25c570694bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 654e14e6-c548-460d-b00a-a9b67142cf4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 bb7a222b-fa5f-4a8c-8c43-187e06719b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 06c60ad5-5b28-4097-a9f2-e24811c683d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 1fbe66e6-3724-44aa-a5ae-f579da508892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 d10d402d-d63a-46d8-a98e-5d0aaf110a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 75adb9e8-a9cc-4ba7-af3a-d6197be08b0a)");

unit.assert_eq16(16'h01EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #148 d034ffcc-bf1c-4c59-b6ee-6bb9c6f0b89b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h0C8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #149 800734d3-66b7-4d40-bdc9-b0e17fac34f9)");
unit.assert_eq16(16'h07EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #149 46eec7cd-faee-46b2-bccb-0799ade96b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 375b1835-5c9a-4199-a50c-f2193af36200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 4b9d1569-6101-4f3b-9f1b-7bd73003b940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 af208c80-869f-4080-82a6-b152d45667ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 5a470ac0-e3f6-438e-ad6e-8c4d76f627f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 45532b09-9c50-49f8-9ed8-16c07f79f48d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 32741301-8ce4-48b9-a2cb-e566ca1a6614)");

unit.assert_eq16(16'h0C8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #149 8c645c55-eadb-45fd-98f0-aea21c4fb056)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h091E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #150 aa3c8c49-a757-4563-964a-d6afc4d656f1)");
unit.assert_eq16(16'h091E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #150 6d17318b-8b47-45a7-8041-aab44749dfdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 a357fbe4-6909-499e-be74-53e55348f2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 1342e2da-1742-4472-9b4f-b06ee9b7c522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 b822af18-652c-489b-b936-749bd141df29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 afbef0fe-e114-4b1e-80e0-ed921a41d7c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 32bfc602-3ad8-4ca2-b1bb-647746b5a844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 c4fee881-4c32-4a9e-bf38-d1d0b5ae2947)");

unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #150 c7cf8533-6149-4c23-9894-a31929a30f5e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0353;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h0353, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #151 f482be3c-9e8f-4101-911a-7383c06ba204)");
unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #151 65ef732d-880b-48d8-9a38-d57fc4c17625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 ef70a5ab-4d86-454a-b23d-d80e5e8e4f49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 bd71e3b6-dd40-4a51-80ef-a80f17957781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 0e600274-f1fb-4fc1-8d0e-fca2ff1350c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 4a2ec179-bcef-4d04-999b-02c2355a5d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 651a2121-3b04-4345-ae38-55b046d64ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 a400d9fd-cc00-4f38-8a28-a1e045665d92)");

unit.assert_eq16(16'h0353, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #151 015cfdb6-9d44-4885-b13a-8b29f988bc95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0130;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0252;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h0D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #152 1fd60bfc-0310-4166-ba11-560aa0334dcc)");
unit.assert_eq16(16'h0252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #152 628ad315-062a-45e0-897e-cd36a597ae33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 18c5e252-ff80-46fa-b75b-c1a15aad4578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 704be9f4-3a6a-4b9a-91d6-9cae4a4aeace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 17a5bb01-728e-496d-99e6-23840ab41c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 31dd17b2-78a7-416e-98d5-1ede9cbedf4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 1d9b16a6-2e10-4a19-9eb2-6e6ead8488df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 d0a2e421-c7fe-465c-adb9-729086b26417)");

unit.assert_eq16(16'h0D82, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #152 7aad6916-a2c6-46c9-998a-bbd33a0e4db2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0132;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0527;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h0A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #153 47fc9626-2002-44fd-9c58-8f42bbe7237c)");
unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #153 28c28cc2-956c-4d36-b412-d7aae0f77515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 6fde7be9-3dba-4699-af9d-44efdeacf1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 cc8a968d-0f63-491a-be58-7e0c39488c5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 8dcad6b3-9a26-4927-b3fd-b1a43720f82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 caf8a53e-46e4-442e-91c0-7784a81a3c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 5eac1814-53dd-429a-b9c5-b0831dafb0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 17118a2c-ca29-491a-bc7f-afad09780dc5)");

unit.assert_eq16(16'h0A20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #153 20ade204-6c1d-45a6-b4d5-904d4e611731)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0134;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0546;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #154 292ced7f-9d8e-4153-b93e-8424f425d171)");
unit.assert_eq16(16'h0D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #154 4d12d28d-8fb8-46bd-9a26-35608787cf6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 ee1d1af8-db00-4d0c-9f8e-94f297466ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 388ad58f-6115-448f-b580-3fa233667eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 7c9ca53d-6a8e-4c45-8bee-6f72c03d3d0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 dc944ffd-fc55-4273-8e99-153162eed26d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 07bc275f-7e17-4420-b268-fd0acae0f258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 8967e5e4-3825-4f9c-a50c-68a1bfa4cce3)");

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #154 4d3db19b-e9f7-4ca8-838c-ff7319476116)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0136;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h091E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0380;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h091E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #155 f3b13407-5e85-46d0-af09-e72a11194646)");
unit.assert_eq16(16'h0380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #155 e43e4c95-2757-4529-ba47-3985bed0acb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 100025f1-cb6d-4f43-9e90-0e3f079f2467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 56fc7ff6-ec8e-4f7e-98df-08c250566900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 25e56754-208b-4334-aa3d-da48734f1db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 f23dbde8-a9a5-4297-9fd2-6e1a5fd78944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 04f537ec-fdd7-4c49-a55a-6a0532c00ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 8555f8fb-cde4-422e-a7f4-f7142fb2d041)");

unit.assert_eq16(16'h091E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #155 4bd2409c-b047-4660-b613-ee96b14b6b9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0138;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h06EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #156 9e8fe767-ee6f-4d05-95f3-744e9bdea46c)");
unit.assert_eq16(16'h08D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #156 88d3cd12-7fbb-422d-814e-527a89299877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 6ba8eefe-491b-43a6-bb57-e21c61e3cba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 fa0c10b1-128c-4eb5-9f85-4f6ffdfd620b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 0cca56aa-a10f-443d-a583-3bf0e0eee24d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 b099791b-9b53-4050-b4f3-bb448377000e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 22294459-73e5-4b05-a523-d6ecd48695be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 d04e7723-d991-4b68-8d57-710d3a2f94a3)");

unit.assert_eq16(16'h06EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #156 c5ef12c1-317f-42f3-b530-ebd6d44d6802)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0200;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h086F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #157 c8ffb82e-2f13-4562-904c-7603ccbd7c7f)");
unit.assert_eq16(16'h0200, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #157 94ddcaab-b9bb-4585-81f5-73f700e37bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 5884f09f-7f54-4ae7-966c-380a7811d737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 19a4f158-f012-48f7-b95c-437d48edf1e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 696f141b-88f8-4768-a8d5-0ee6828582ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 532caee5-e2d6-436c-9680-3da4353386e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 d78cbc0b-6942-4b3a-85ee-35909bab09bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 910468fe-8f10-4724-a6e4-a0b48bff446c)");

unit.assert_eq16(16'h086F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #157 8a2b3d39-1034-48ad-a075-fd66f9c50367)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h0DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #158 63c65213-bf88-4271-bd4a-a47357249d89)");
unit.assert_eq16(16'h0A9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #158 d9ef8cbb-70f7-42a2-9b67-710a3d334dde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 a8824643-1b1a-4a70-a788-59f8d94d3580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 8e468529-814a-4353-ad8b-c0c424484e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 087c0979-ee03-42da-b2d0-931bf0d6be11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 5fa8feb7-4031-4039-af5a-5504ffaa0a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 2a82b7cc-19d5-4109-8279-86b7adaea965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 7d10eb86-441c-4eab-a5b8-33db2616ba21)");

unit.assert_eq16(16'h0DAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #158 e78a8efa-1b3d-40da-aa62-8ca73a46139a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h089C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ED2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h089C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #159 76a325b3-bb40-4ebb-8f34-c64e27267fc0)");
unit.assert_eq16(16'h0ED2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #159 1a389e29-7fd6-41a9-9619-321dd95332f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 0343af71-532c-43c2-bb71-033832ab1c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 bbde65ed-8b88-41ea-82df-e53090c51777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 4a980eeb-4933-4fda-ad20-4f04d8c2a903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 f0ceda7d-ef88-474e-ac55-406940003e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 84a3dbfb-24e2-4247-9bbe-df86c0037f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 2d08ddbf-ed64-4a7b-bba2-58b80e164e81)");

unit.assert_eq16(16'h089C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #159 9f34b568-ac5f-4432-ac74-0dc769db84da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0140;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h038E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h038E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #160 89450e40-5051-4b9d-a24e-9718d9dd1cb4)");
unit.assert_eq16(16'h0C12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #160 d3dd8e52-f8e3-46a8-a89a-7cc6468a4fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 137f5954-b345-4570-9bae-322215d6e79c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 eb2b7153-4f22-4e8e-b2f5-465874ada22a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 633e447c-58b2-4daa-929c-b6b43012f238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 453a19a7-02b2-4811-9960-498e118c0855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 f940c756-235c-43f4-a6ea-d8440b085f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 f55fcca3-36c9-45da-a12a-7fc7ac04e5d3)");

unit.assert_eq16(16'h038E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #160 35d66256-0efc-46de-a6bf-217d232ac7cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0142;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h0EFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #161 a8d66b56-62b5-4522-bd1f-4c5624e78734)");
unit.assert_eq16(16'h0F33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #161 01454bb3-a4e8-4ff0-a785-10bf997847da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 d0afce88-3a62-4ab5-b258-9a6a12f0a7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 d1519e87-d84f-404c-968d-b07b93de1bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 f048ff8a-3afc-4cc5-8647-857e5cde2430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 7d329d5a-46ba-422c-9f06-6da80a79224d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 d0117cba-713d-433e-83b8-bbb8d3f654e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 e6e1a849-2a45-492d-92e0-f91a7ac1687a)");

unit.assert_eq16(16'h0EFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #161 2a2d261d-0552-4bed-bcc8-23129351570c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0144;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'h0EC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #162 04ca941a-022e-4e99-9cba-f251890b900f)");
unit.assert_eq16(16'h07B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #162 46ba9a71-0ef5-42d4-9eb0-dce84a67a9ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 36e670df-2627-4ca0-bf14-c8711859c22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 f5936f3e-ae18-4e6a-b19c-bd6bc94656b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 eb21fc90-4506-4f2a-adbc-f5ab344de3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 29315c1c-43d4-42c9-a71b-4e551e9ba085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 6bf31090-c212-4632-bbce-e5f8567a9a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 12465656-cb65-49ce-8308-fc597948bdb5)");

unit.assert_eq16(16'h0EC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #162 1d42d17c-4dbc-405a-b68c-7026802dbd32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0146;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0755;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'h0108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #163 bd907d4a-70b0-4fca-972a-4c7735103d78)");
unit.assert_eq16(16'h0755, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #163 75df6aea-c41e-4e99-a662-0ddae0669004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 559bf31e-9291-4aeb-b4e1-4bf53df36065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 1387ac91-e052-4651-8add-732b05bd34dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 2cafa5ce-1298-4d65-a787-f079612dc87d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 c417b39b-a549-4138-9291-d003a45daa27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 ace62531-8d28-441f-8dc8-27155f9af6a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 dc1a33b8-ea7d-465e-97d6-4a71469a2f83)");

unit.assert_eq16(16'h0108, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #163 a4279854-43e2-4f0b-8631-84a11f81c3a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0148;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h048F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0620;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h048F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #164 dc379f39-873f-4601-aa40-92e2f46abc89)");
unit.assert_eq16(16'h0620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #164 ccea3309-061d-4631-82c7-4eb5788a70ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 e06d9540-2d09-4c14-a365-fd7b65588eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 90905baf-b05f-45ea-a3ed-4b51baa032fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 e8d4bc49-aa5a-4b1b-b00a-97fc217766d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 a8343538-9aae-4380-8adb-9b296e0978dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 a281bc5a-a0f0-4253-ada0-17bf3074fb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 cdd3733c-077e-4d6a-9eea-3cd8ccde40a9)");

unit.assert_eq16(16'h048F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #164 e0bed1f1-40fd-4d0a-8d68-9a502cbf964b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h05A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #165 88f27540-32cc-4b10-9629-8910fe4935fe)");
unit.assert_eq16(16'h09B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #165 9f9624fc-444c-4d9d-893f-c58d54e664c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 1dc90d61-7d06-4971-aa62-834a58667046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 53c97839-02ab-48e8-9c05-c4e2c37ced1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 bcc52259-88c2-494d-9593-91802123cabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 487051ca-c077-43d9-8f71-4584b6ef95ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 166e32c0-730e-4398-8a92-e7f43cd05b99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 f8914784-f874-4631-9cfc-6ed2dcf16562)");

unit.assert_eq16(16'h05A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #165 aa8f70d6-7773-4dee-a399-e9916f76ec08)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h0E10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #166 ac781861-5fc3-4f10-aff4-5417568badb1)");
unit.assert_eq16(16'h0D6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #166 e4979fdf-ff66-42b2-bf1c-7447698c84fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 ceadd1fd-fefb-4d9b-99b2-5986c89e209c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 14e5d9f6-1960-4570-a4a0-c38e7c956270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 d8bb7991-cc1c-4f7d-b7ae-8a09e6ddca79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 594c1311-0367-47c1-af99-16138deb09ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 26400717-c532-4370-9572-22fba6cc20de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 5f47ecd2-377f-47a4-aeac-eac5432d7f69)");

unit.assert_eq16(16'h0E10, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #166 30ba14df-2e79-496b-8406-4fdd4e5745a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h0D88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #167 9240e4cb-1c35-490d-bbba-00fc66af620c)");
unit.assert_eq16(16'h0D88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #167 f952683a-9130-4e2c-bf8f-1ac2cd34ae63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 ed150a52-df14-4244-85bb-2afe4783a6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 ae94b568-5b08-4a35-8b43-d2a44c93a6aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 4c01d2cb-a8ce-486a-abd6-b432ca0fd79d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 baf01dfa-0c13-4fde-8950-b85932b2f06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 376c5f35-7c29-4742-8998-1d28abca68c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 32ae58f5-fd5d-491f-b39e-3cdccb9c8ccd)");

unit.assert_eq16(16'h0D88, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #167 92906bc7-da19-492c-b24d-36c63599fc36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0150;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h019F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h0EB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #168 86f8dd5f-5561-4330-9f44-50bc0c80599b)");
unit.assert_eq16(16'h019F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #168 01c0d712-de16-4591-aa57-dfece6bbc98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 140bb33a-6b69-44f7-9339-091316d98fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 b661a09d-b3cb-4e4d-938d-db48486abd8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 2de7749d-fd20-4bf0-a60c-a3a91f3f1a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 b28bc7ca-3a25-463c-b3c8-2c194a9a44e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 ad852516-26fd-4795-88c4-995b7647b751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 c53dd267-564f-4ecc-97af-2966e0725804)");

unit.assert_eq16(16'h0EB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #168 7722ebae-4777-4c96-9d8f-1225d86aa39d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0152;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h085D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h0F20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #169 db15f805-bbda-42ca-b1ad-fa1b33aead85)");
unit.assert_eq16(16'h085D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #169 505117d6-723d-48b2-a623-3f49bef81388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 2341f361-c61d-4573-885e-4feeaf2e8c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 f5fabe42-754e-44bb-b363-faf486c3f328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 66d8f245-a250-4e64-abb5-4a92aed250eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 baf6536a-3672-45ec-870b-891944dad41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 2d1671ce-8b68-4aa9-b37f-d3447f3c769c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 8defd847-186c-4f30-b2d9-eaf7450f4785)");

unit.assert_eq16(16'h0F20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #169 ce27f818-1a72-41f8-8fe0-05b6246431e3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0154;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0704;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h0704, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #170 932f2c11-2098-4117-9fed-cdbdddd93e94)");
unit.assert_eq16(16'h08A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #170 dad9c34a-3cae-441e-8f17-4eb5ae92ff45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 031dfe95-060b-45df-97e7-ec746e8e3dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 982223a5-0bba-42ca-ab2d-af344509d788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 e50c6c7c-5ac2-4011-a67f-3fcac6b3e8e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 ff7b6aa7-385d-45f8-8399-5deb4f399ab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 17376c51-eb94-4177-9cc1-34aa39abb4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 be427ea6-8da0-4d8f-b0e0-f2b8d9b8ae39)");

unit.assert_eq16(16'h0704, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #170 b8051c39-30f0-4eb9-95fc-294b4fa2c780)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0156;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0567;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h03AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #171 34b89047-6d1d-4587-a774-00ad3c3f1989)");
unit.assert_eq16(16'h0567, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #171 bd84b92b-35f4-48d6-963d-1e4c7401f903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 1211f281-c79c-45c4-bfd3-56c0b4e3be18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 987cc511-edc2-4946-926c-e7f6097d60f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 bac4b233-66b9-4edc-bfa3-2867c62539a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 36182251-41fb-4c8f-aecf-acd19707d51e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 654a23f0-5cd5-47d0-a3c7-627cdbc70f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 79af3653-782e-4c84-b9bc-bcd581d72f47)");

unit.assert_eq16(16'h03AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #171 7ff36bd6-bca9-420d-af1e-cf8cac121131)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0158;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h094D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'h094D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #172 b1eaa5ea-8524-4035-9182-2e743fd9e2b1)");
unit.assert_eq16(16'h0B2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #172 de33deb2-cc7b-44fb-a71d-efceb127fc23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 a40c2d67-e89a-4915-8209-f4a51f0042d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 39244146-5190-4822-920d-497063a5ffa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 ecb00a11-d96c-49ea-b980-363f4dec3544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 62ab1949-1874-4667-aa83-613f35e5da1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 0465b4ca-d398-462c-9b27-8b19838fe9a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 e6e8984a-b09b-42e9-bda4-e73b90b5f396)");

unit.assert_eq16(16'h094D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #172 3f87a429-a667-4df9-b4cf-bdcabcf02d60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0830;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h0830, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #173 9988767a-3ff0-4f6a-bf66-b25136a59461)");
unit.assert_eq16(16'h05ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #173 1679829f-9ce4-4b6f-aae3-6990ef6a6457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 518d5248-a427-45e8-bcef-2a01227cb357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 9c060ab1-9dcb-493f-bf0c-379e3e74d7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 474eecec-f630-48a0-bc7f-6890b3f81e31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 16a89ef1-8f99-4687-9994-3ce653576f20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 e0d1650f-1017-4430-baf6-9e9d6aa56fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 28ad7075-a110-4ab3-8893-48c743a3456e)");

unit.assert_eq16(16'h0830, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #173 f5094999-838c-430e-a1f4-8b244ee598d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0874;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0011;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #174 7906a728-2d2b-4829-ab10-4791c23ca071)");
unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #174 6384aab9-d49f-4c1b-a3c1-1b7b20a68a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 667b80b5-d714-48e8-a0de-6d27552d1363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 159ff0c5-3b01-4e46-9c2d-c05189d78028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 1584aa5e-fa5e-4694-a926-bedd81786cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 f4f2e908-9155-429b-adff-0b5ad97d4dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 e3f28d57-18c6-4876-8ad8-9b113a7f021d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 416389ea-f434-4582-a7bd-2a96a7681491)");

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #174 34537882-5890-4fee-96d2-d024cb762616)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h04C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #175 8946c84c-58b9-4213-8351-fce1f0611fbf)");
unit.assert_eq16(16'h0A98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #175 6f5ebaa7-5dba-48f8-bcbe-d2168c5cacd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 7964f41b-5b0e-4036-93d0-1cab044eeda1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 d25ca4e8-0263-470c-9b1b-845bafced287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 c343a7a2-f935-4dae-bc8a-f1c6d636e05f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 89b38d4f-883d-4011-8828-618d04d466a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 c6c00b89-53b1-4ccc-b88a-ecd7206b3497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 97183bce-cc42-4128-8866-bb93a2b6168d)");

unit.assert_eq16(16'h04C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #175 74c35b54-d148-4c3c-9a96-e11af020d72f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0160;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h089A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #176 dd7e2823-d1de-4c06-8f6a-0a84a8893b25)");
unit.assert_eq16(16'h089A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #176 4427f87b-40be-4208-99d3-e856a081faa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 3fd3fc16-9a4f-4b43-9486-c1a8fae507fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 942ded81-e561-4ab6-99da-723b313483ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 ec5ed51a-eb77-4c48-b5f9-a6f7528ea1d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 fe2005e0-fc79-48d9-814a-380efef32a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 c87d11b4-2215-4a52-9f1b-d00ab83571f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 7dd1efdd-d742-4e9a-83cb-1ce7770890ef)");

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #176 91b10fb6-6989-486b-857c-919d1ef7f7bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0162;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'h0CB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #177 19daa65f-0124-4d32-a4ba-ab095674872a)");
unit.assert_eq16(16'h0B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #177 e6f11d41-aa60-4e34-9efa-e2aeeb94a9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 209ac0b8-1961-4ae2-be52-f5070828d991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 ba604dea-9cd3-4c1d-a783-aa5d72426959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 0978c8d4-3302-4d3a-a668-9305bdee8ed2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 e1757989-735b-4c7a-84b6-ffff5fb0101a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 3ebc1d04-3ff8-413b-b65d-6c61fb0930c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 c69408e9-d6dc-451c-ae82-9e0aa9ccfdbd)");

unit.assert_eq16(16'h0CB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #177 e4fc10d6-c8cd-452b-9353-7001dbc082e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0164;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #178 d413c297-1363-4186-b633-cddffe70c3b0)");
unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #178 66ca1405-50f2-4359-ae53-7232becef9b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 279983eb-eb70-4a3b-af21-d845b6be6c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 0b9b8ade-b4ea-4087-b047-a23643320cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 bee6395f-42de-46c1-8239-b907ede5a24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 5def042f-d82e-45a8-917c-5ac5ee8497d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 94ede238-f2fb-4180-8800-470731628f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 db124345-c142-4c22-8df4-7c7dfca49080)");

unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #178 95ae8efc-f8df-4a33-a568-e13967efcc04)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0166;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0521;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #179 85794906-1cc2-4d7d-94cc-2d105797d103)");
unit.assert_eq16(16'h0521, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #179 17a6ba20-7b5d-4511-8271-b4007d140c46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 c54208d0-e4d7-467c-ba71-5a8cd8a4043b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 24fda62c-9799-4aa8-8d30-5e0a59345910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 e6e1a360-3089-4c19-8436-097d8e513df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 ee136bad-2c57-4c13-88d6-f8949425448b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 e514e210-dec9-43df-a1ae-5dea1a8cd9df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 d6779c82-65d9-48e1-8b65-e82f7b9bab95)");

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #179 70f85951-6ba2-44df-9571-730c0530bbe7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0168;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #180 882fdc82-9818-4b38-b964-ea34ae3a790f)");
unit.assert_eq16(16'h0D6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #180 945ae0d4-3aa0-40ec-8736-30413456214e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 f344059a-e679-4d0d-b926-f33b51c08a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 3350de13-cd03-4167-be4b-819f06d7e5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 9394215c-b0fd-4218-93bb-3a73934d3c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 8bc7e122-6128-4752-bead-46c238c67c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 2b440cb2-ab46-4282-92b1-47e3a5887cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 cbfbda08-16e9-408c-9363-228e4005e306)");

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #180 c84dc087-0a66-4b15-a997-2d46d4b49eb5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h0D13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #181 827b8e7f-dc6c-4de7-8ed2-a2ab0a5ef05d)");
unit.assert_eq16(16'h0D52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #181 26d76ff0-fddb-45b9-94b1-abc05363a98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 ad89d22f-c5d9-4c51-a702-e55c4c8b2b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 a58514be-e53d-4725-975f-6e1a30ebf667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 ffbaa43d-4689-4e63-af08-16c43430ebeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 c157e414-2679-4984-b023-a55b4ac05984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 58cc28a7-881d-4be5-9ba0-e0299760e16d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 6ae306eb-b75a-45f9-93b9-4c2eaac85cee)");

unit.assert_eq16(16'h0D13, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #181 7c12dbbb-69a2-4694-bcbd-be5474158c5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #182 91462a11-d6c1-4a30-bdfb-f09ac8e3259c)");
unit.assert_eq16(16'h0CCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #182 3e6cda18-da3f-473a-9cbb-0ff22ee07c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 4c397d1b-48e0-4319-99de-06a5a0ad3788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 d9ff0e6d-caa6-4da8-b5af-eac20761a232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 7941360e-7637-4847-a374-a3e134218986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 f092ecec-e49e-40a0-9644-b166ad8eda10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 20b3cec3-9770-47c2-8a93-cce044c90d79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 8b85f39b-d0fc-4e9c-8f60-70770e314888)");

unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #182 d5eebd18-2a68-4382-830d-e8cbe182bbe3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h0FAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #183 44c08255-13d4-438a-b4db-dc88f27799e0)");
unit.assert_eq16(16'h09DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #183 1acc6ba6-c94c-4192-94d1-1ae3f0f22976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 c259a865-1ede-479b-a9de-52da37191c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 5257a06b-d738-4965-9fd5-978e841210bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 da7a56c9-734b-46b2-a6f0-c7a62056e0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 492a5e96-9bfa-4c25-b95a-a7aa9f3778de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 c8d5d62d-dcee-4729-a897-9b935b6eea55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 56d86d3d-1d1c-4dad-857b-5c88f161b000)");

unit.assert_eq16(16'h0FAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #183 d6d27905-6ae0-4e88-9e52-d68809aba217)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0170;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h008F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h006F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h008F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #184 ab49f53b-b5f6-41d9-b663-59bacb1e75be)");
unit.assert_eq16(16'h006F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #184 a9a33dc4-653d-420d-b4c9-a197b67a54d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 410df871-dc17-4d4c-973c-31cd2a63ecf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 deff82d4-f416-4ed9-be70-798647ff9b11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 036f65b3-0cfc-4e36-bda5-868f7acf1c3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 57c116f3-e9e4-4cfe-90c3-d153ea287bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 79027967-9f2a-4bd2-b81a-5c1a86326c0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 b39ba94b-875c-410d-94db-deeb7eb10609)");

unit.assert_eq16(16'h008F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #184 62786e6c-0781-4c8a-9dfc-c5317266e946)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0172;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h09CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #185 852b7f40-5247-47f4-ad3d-e28cfdd22ef6)");
unit.assert_eq16(16'h0B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #185 a8750b66-e306-48a1-b41d-f12a680e208a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 1b429aeb-c2b6-4c6e-9b26-9100583b9e7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 5aa9081b-af95-4487-8ea8-7ea9e19a610f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 e20fe641-f077-45c8-911e-07c3208e411d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 74113299-b9d0-482b-ac00-5e256564b163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 e1177f2b-6eda-4d06-83e0-23f15d51e01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 b1a45272-b088-41cf-b444-9c89d7270f47)");

unit.assert_eq16(16'h09CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #185 a00d5ce1-a5ff-4d85-9234-88ee99a6b427)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0174;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h0DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #186 e1ed2160-d45a-4b72-a9b7-aebdff16a559)");
unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #186 17e9ac9e-d63d-4644-a578-cf93f8c73a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 e8ab392e-5fb4-428e-9400-2235b81d0089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 bcb14ca6-5b51-4d34-9f61-14700ced679d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 a6962f04-25ed-49d5-b2cd-08d43731b696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 5eeb8099-f23f-4162-9254-988a80f9c581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 2a09c507-e9d8-4543-a738-a56d5602727a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 a37431d9-fabd-4a72-98f4-3903175d2f32)");

unit.assert_eq16(16'h0DFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #186 d7038b5c-6dcf-4349-871f-f3f9e11f993a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0176;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'h06E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #187 a822965f-673c-4682-aaf2-2eb0e24bec7d)");
unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #187 4fd5a6d3-943b-4b73-a90b-baafa4116cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 0eb8ed58-77bf-42a7-9fd4-9a8f05eb8a56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 d26f0acc-c37d-432b-949f-ec48424a0501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 6c747b96-4a79-4a6c-9c67-bb802c4fb3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 3a1cb7c7-b1b8-48cd-bc8e-903a768e1910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 e94bad9c-2e04-4e68-9232-ed7e2f683c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 3b86843c-b600-4a90-8e65-8a448efe1cc9)");

unit.assert_eq16(16'h06E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #187 14b6e8cd-8e53-4595-a9d2-86c78e151887)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0178;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h0853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #188 d073b5bd-efb1-46bc-9e4b-6da203a648c5)");
unit.assert_eq16(16'h0E15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #188 d0900259-3a20-45f7-a788-7d48698d5c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 637149b0-dc7c-46ff-b2ff-e75d7e71f75c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 36235dd5-7a5a-48d6-87eb-4fad76ea274c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 34fc15b7-f858-412a-b3ce-bcdb8a652f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 28c46d75-3bed-4f9d-b953-afb7e1f94bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 6e2867fd-1a30-4a27-9afd-099a8f71993a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 22b7bcc5-e246-4daf-b240-0839e95e8980)");

unit.assert_eq16(16'h0853, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #188 77a5e595-eba1-4191-a683-6252c2c9aac6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0873;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #189 f5aa5283-3fa0-4991-b3b2-347ebce5d4e7)");
unit.assert_eq16(16'h0D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #189 4d4d4f9b-5e71-4842-b3f4-6e0d7c455df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 6885601a-05eb-45d4-ad77-8618a350f39d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 abf2120b-9a7f-46c5-98c4-854d579f0efe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 1bb310b7-ad04-465f-ab8a-9b2ff86396e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 6d91fb72-04a2-4b7d-be2e-4c7c8781edeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 ae3419c1-dd97-427c-b79a-c57a5b110436)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 bac20dc5-db50-497e-b7f3-a9b10ed3b1ac)");

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #189 0bda551c-c555-4194-9a95-3a40da9cd31c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h041C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h041C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #190 50350010-63c0-44da-9295-7c2ebd8a6f30)");
unit.assert_eq16(16'h0D91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #190 5954cb8a-4484-4314-ad75-999b17e36703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 e2e0f753-1f5d-49b8-9852-4a402d0ec730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 4cbd5e0b-7322-4459-9b46-8d2570b22275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 a3225ea4-6e9e-4e31-8ec4-6dad3b2165f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 9d9920a8-055f-4aa0-8f63-5bdd0055c015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 d78ce2bf-50dc-493c-93a7-406b4acab37f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 c4bbdf18-fb45-402a-bb99-102a1593abab)");

unit.assert_eq16(16'h041C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #190 fd2325c6-a799-4063-a54a-9ced11db59f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0124;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h0124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #191 6131bf1b-4442-4fea-8099-bfd75cb13421)");
unit.assert_eq16(16'h0D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #191 b2a3201b-820a-41b5-81f2-d6a044331e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 4c044d3f-24e4-4e45-a4cf-5f268015724c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 a654d276-f6dc-431d-a06c-86e7f7f0fe9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 9a9f666c-4802-49bc-a010-0083f4f53602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 21a6a42a-a03a-4b5a-8c7d-6b8c938f6394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 8d4021eb-a4bb-40a4-a8cc-1bf067394765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 2eead974-1078-4a81-835b-4281ce091488)");

unit.assert_eq16(16'h0124, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #191 69984039-9d8b-4ac3-b2a7-6f26f05860ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0180;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h0F63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #192 8750ed5a-7f5d-4227-be14-026268fa63fb)");
unit.assert_eq16(16'h03A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #192 41db8fae-4599-41d7-b797-08515dd47df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 b99f7972-c977-44fa-98d3-a455f85bb56c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 29def2a8-7284-4e09-ada6-df6bf6f6e9cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 a3f55fc1-64d5-4981-a36f-c86a55608625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 066e0fa4-8d2c-4e6f-b680-2556064f8ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 41b07ce1-038b-4d44-9af4-cc5145722025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 31beb56f-460b-4f81-a676-d71f4f695903)");

unit.assert_eq16(16'h0F63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #192 f1ebe391-4e86-4cf6-a5ed-8fa6e308dad2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0182;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0084;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0951;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h0084, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #193 3162a2fa-1ff1-4fed-8e84-3a99dcd54dfa)");
unit.assert_eq16(16'h0951, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #193 cb46fdc9-9267-4ee1-925d-1917d814a84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 857adbc1-1453-478e-8a6f-bc14680f7a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 a2cf6506-b0ce-4291-a6c1-d6c809a5826d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 18351c7f-de46-4c7d-9871-ff766c53a9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 48176738-6255-443b-8a13-8f9bfb7a4bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 b201ae15-35ed-4907-840e-6d84a39100aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 aa6c9d5c-6918-46f9-a8f6-e1802e426ad7)");

unit.assert_eq16(16'h0084, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #193 afac8366-49c0-4a8e-8869-31afebe8bb24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0184;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h0F92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #194 746091c6-dad6-4940-ba1c-3e9a31e10f21)");
unit.assert_eq16(16'h0EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #194 cf251fbc-dd41-45d5-ac51-ed02163ba848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 540641e1-2a7c-4fd3-9f1c-4a10c4dc0cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 87e5f84b-3d4d-4481-9df3-16991d1b5cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 5d92fa14-8c24-451c-a87a-b86e8d0e0df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 448344c0-daef-44ee-8687-04139ece67bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 7bbf8ffa-fe66-4561-a6b4-e8fe572eb35f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 4b121128-f40d-4c2f-909f-3baf8982be81)");

unit.assert_eq16(16'h0F92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #194 2f9ced11-6a9d-4c2c-ba82-7210b009b9f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0186;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h06EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #195 d75315e6-70a5-4c9e-ad79-d80dec13ab87)");
unit.assert_eq16(16'h08DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #195 5bfd2666-674b-49c3-9686-116f8f1f9d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 7a6fb114-99d9-446a-b4a4-da9f48a3ebbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 ae3733ab-3740-48ef-bede-4348936accdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 b4062aca-6dd3-4f29-8ac3-561beecd53be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 397e40bc-fce4-446e-b0f4-f9c85f83c7b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 767871dc-d738-46e9-90df-9a7575cecec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 8597d798-d9b1-4f29-8670-6401dff67860)");

unit.assert_eq16(16'h06EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #195 e72d47fd-3173-4160-8324-337042f4a5e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0188;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h0AD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #196 88991acf-1f96-477b-b26d-cb41ee59e0fd)");
unit.assert_eq16(16'h01F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #196 36345b09-ab94-4755-80b2-83540a2ed2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 e3f82887-16de-4cee-b0c2-46adaaa27484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 68ca1bc2-a74e-404a-aed8-b0a75250f250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 ee02936a-b400-42cd-b058-582c6c3a50fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 ebe43101-d197-42c4-bdb9-8cbaf0493412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 7ca6a83c-8dc2-49ab-bf7d-a4dc3f8b17e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 5f1740b6-6c29-48da-8f24-489aea4e1849)");

unit.assert_eq16(16'h0AD5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #196 87d1b5ae-7a77-4203-879f-cc8ddfd1eb07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h02EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #197 3f284ae6-75cf-4faf-a4c5-50b8803a854b)");
unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #197 a940d837-7848-413b-b3eb-b6a8fd4190f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 abadb02f-4d75-4714-98ae-14bd67d9da37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 656c6be7-25b0-4430-a148-02f364a82b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 12ff438c-9a30-4ea3-8c61-8a18ece54ab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 d42ef217-c5df-407e-ac6a-646e709ac7cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 9c45d924-d082-4620-873d-2abee5240827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 3c597a80-91fb-4839-9603-51dddad1d3eb)");

unit.assert_eq16(16'h02EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #197 c7312a7e-ec0b-4507-9ebc-35e5a83f6ce5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h05AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #198 5ed80514-2af9-47f2-ac6f-194baa1d8301)");
unit.assert_eq16(16'h0BF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #198 79854b02-e843-4596-aaed-478d667775c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 1863dcd9-8097-4221-b762-cfc33dbd825c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 910cb20f-1d31-4fda-a57d-8c5861e9466c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 a16fe160-f732-47e7-9531-02221ed6ecb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 6ba96249-f3e3-4c97-9d03-78b6b201430a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 c2d150a0-8a61-4ad0-b6d3-c20f697665b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 b9d0baeb-f59b-4a6c-9621-9b23b8018657)");

unit.assert_eq16(16'h05AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #198 36bf522f-b532-4eb0-b29f-3e74b008b003)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0644;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #199 32e4a5a4-3541-4f75-8d47-4f88cd06bea9)");
unit.assert_eq16(16'h0644, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #199 8cca10b5-653d-44b1-aa6b-eca552d66b3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 afbd28cd-e0df-4f88-84a0-9414a5495b93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 8a680245-c538-44a7-a469-584ad43eb434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 a3596f90-2591-4265-ab19-5008d6f3791a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 bcddab04-6f78-4d97-bf4a-3e4e39915a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 e00dd6c3-4626-4fb4-92e5-2020f34ba4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 368799f2-f512-4c6b-b6f3-36e0308ccad7)");

unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #199 bcca776c-40fd-4907-90a7-36e15f1c7a1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0190;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h0CC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #200 c4d37f57-8642-4572-ac1b-a56628da6b93)");
unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #200 dca86771-6ddd-44b5-a1ce-d0efa2972e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 033450ad-bfd3-4f60-838f-ec3d1a5127e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 cb3cdafc-7b1f-4ad8-b9b8-78d88acd9d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 955e9694-a50f-45d0-afb1-ec960416d53c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 f2a24e34-9e25-4097-b44b-5c9e8c899898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 31c20512-6741-495d-97ed-9fc4b6b3c765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 a7d503e5-06d8-474a-9676-50b6f0234a35)");

unit.assert_eq16(16'h0CC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #200 42bdf633-df92-4fe7-b3f4-55ba958dff59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0192;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0616;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h0E87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #201 2e3e7a49-85bf-45d7-bec4-1dd4e7d428c1)");
unit.assert_eq16(16'h0616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #201 345ff28f-109c-4201-9d91-124d82a1082a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 333ff1cb-742b-4266-8140-50483b15f038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 c36b068a-b1ff-4873-9259-df5e97db6836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 7f82d3e9-12ff-4a24-824e-318ef8e81e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 96b1082c-db74-4d88-ba2b-a1bb2b1dd073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 b35c5b47-a08c-441e-a9de-668605eaa819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 8fee6572-4a8c-4afe-97ae-f30985e07161)");

unit.assert_eq16(16'h0E87, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #201 7a427f36-f5da-48f4-8c64-ba004c785aaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0194;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h073A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #202 a01a6769-284d-4868-9a18-67b482b95146)");
unit.assert_eq16(16'h0D08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #202 3a650ecc-5400-48dc-940d-e6d638782682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 38dd6ace-d807-41cc-87c1-0418ce3d338a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 fb14a9c9-9ca7-4495-bb7c-8c4c6a1a259a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 556ad44b-ff84-4878-9d35-59be955024b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 3646134d-c7d1-493f-891b-286d7cced835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 70a79d71-282b-4503-8157-c7dab9ab8da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 4e35cae0-21ec-41eb-8c23-880a25cb1da7)");

unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #202 32d81c5e-d1fd-45f1-96dc-2e613f10bc61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0196;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0444;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h0DE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #203 ac51342b-89b6-4574-8989-369736e78eb8)");
unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #203 df325d84-e576-4d41-8f27-29edd274b68b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 4d20d392-bd4b-4170-8414-6cb984de7378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 f3870dce-7f42-4ba3-b4d3-bb128cf9e3b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 c0ae6724-5535-4f2b-aa39-96cf5979b6fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 942c35c8-0e3a-44f3-8186-1ceab62246dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 2b021775-3b29-4ed5-873f-52cbca9d5827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 a22b2f1f-0265-4f56-b36b-2e0c0411fa13)");

unit.assert_eq16(16'h0DE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #203 4d684df0-8327-4845-9d44-a3c8041e5f1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0198;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0982;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h07D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #204 ba1d4a5b-603b-45c4-80a9-6fa3b209caa0)");
unit.assert_eq16(16'h0982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #204 e54917a7-80c3-4e81-8cbe-06c20051e726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 8f1ef74e-d98d-42ea-b5ee-348b063f0249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 6b2a2268-1307-47c8-be6b-679637c1759f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 528e23eb-0ccf-40dd-b3b7-a18db9aed4f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 46686b1e-cab1-4d65-8ad3-1bb352ca597b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 664d5230-ca07-4ab5-a2f1-3e28e038e4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 c4e423f7-cb5e-4d9e-8a5f-12e6696c9cba)");

unit.assert_eq16(16'h07D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #204 a2da7cff-be96-477c-8fc2-eeefb1df5db4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h006A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h006A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #205 8f1956fc-82f7-4821-aebe-736de63d2e4e)");
unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #205 197a6b02-f71a-4cb9-ba64-12b9108f7bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 98415f4e-97d4-4747-b71c-6ac5b1e9e499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 2aee61fc-5d55-4d9e-bef7-f4d5e3a2d9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 95b704dc-62ba-4896-8335-7880f660ef97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 836e3013-83a8-4771-9d07-a7472e6b1b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 862f183e-e67a-49e4-a508-dfd109336492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 98f40b76-33dc-431a-bfef-2fb27ebadbe7)");

unit.assert_eq16(16'h006A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #205 2b214d2d-3976-4b49-ac03-67e419c95613)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0470;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h0470, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #206 5f154be5-da3c-46e2-8ec7-6b11cbb04828)");
unit.assert_eq16(16'h0CB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #206 ffbb54f1-9f12-47b0-acbe-b78b6db52837)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 1c993afa-be3b-49b3-8364-f1203fc7f14e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 9a09eddf-f5f3-4fb3-80c1-bddabb4fc7a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 235dab4c-6967-4f0b-a3f5-9f2bd97edc27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 421a264a-0dbb-4fed-b39a-20a195f47374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 7a4adf9e-9f9d-4145-95de-d000aafc0107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 2894bea2-414b-46ff-9ac5-48ae96f3da3e)");

unit.assert_eq16(16'h0470, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #206 597cc34d-0340-4fc0-9624-f40d4aaa827a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #207 91ab187d-a769-49ab-8747-0108374c08e0)");
unit.assert_eq16(16'h0A74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #207 dcf9d2cb-ae38-4f9e-aae5-519803a40303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 b646cb96-a435-4424-91a9-ef74adf83153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 c69af0cc-765e-48d8-972d-36f0e4544a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 4ac9f441-8484-4d91-889f-039d43256e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 7a1232e5-b385-4763-86e6-a31fc73875f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 16f7af3c-1c28-4cfe-9b94-6324284a6e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 2f0a8e75-30d9-4d2a-835c-2315cbb6b1c1)");

unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #207 e69a9b15-6389-4c14-a09a-3a4f51e85cd6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h01B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #208 d7281f33-7dca-4ba7-af5b-f12eaddfcd62)");
unit.assert_eq16(16'h01AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #208 766e314f-8496-4171-a097-664660381e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 63aea073-ba9c-4c9e-8aa7-368e081d624b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 525fddba-420d-4972-934a-ed1ae66d7945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 185f1af0-830d-4d6c-97a5-0596cbb15560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 5ad9a214-a172-445d-9b12-05a3798d5eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 fb47df87-4653-430b-8dc6-64918e2c356f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 a406c00b-31bb-4ee2-b671-420365f35012)");

unit.assert_eq16(16'h01B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #208 bf2b0650-f691-4c75-bff3-200eeeeabb8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h0EA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #209 f5368b7d-15ba-40ea-bf5b-a58c2367006e)");
unit.assert_eq16(16'h0211, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #209 67cc24ff-a7ec-4a4b-9ec8-45d003c54943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 47a5daed-958f-4e29-9558-87f7a658c497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 e9c0c83e-dc89-4a3c-a051-81b257a407df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 8e686d19-62c0-4418-b376-19c5fb7c08b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 3204f196-e35f-45d0-98f2-16008e8b8984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 690c418e-c9e9-4a1c-b92b-ca27ee2b0fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 c50dc848-7be8-42be-8624-dc4d9201f6c9)");

unit.assert_eq16(16'h0EA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #209 8da22ed3-50e1-404e-9789-3ad1cc68a6da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h03D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #210 9c5ad335-d5f5-403f-8e4d-c8ade3321a39)");
unit.assert_eq16(16'h0D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #210 1ab74498-3863-41f0-a94c-a9891306fdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 c5447bad-9ebc-4415-bc4b-8d6df470ac37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 59469595-9b4a-42a8-b896-cbd822d482e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 a5d0acfb-eca1-4a13-83af-6ff8e6cfb154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 b379efc9-8ef7-4b52-8e61-e4a52c1344f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 8293e383-f7de-4a07-ae8a-c4a6438e5129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 0a3838f6-cb78-455e-9efd-54be3fda1a84)");

unit.assert_eq16(16'h03D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #210 8399b9b9-a858-40c9-9c5f-89fc465294e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0596;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'h0596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #211 b7cd51f2-43f4-406e-8688-b865f5f5ce48)");
unit.assert_eq16(16'h0EE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #211 56869fce-c732-4f65-8020-ee9a5fec3a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 3f812520-345f-4c7b-98c0-d609929871cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 5bcc8d92-dc3e-4c58-8c98-1e810a1199c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 6d52d80a-c53d-4988-9102-acfd1ef04e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 708c5ab0-ea0d-4035-94d6-6fe4472e575b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 77bd9a37-6325-42ec-8e76-ae6765ac5930)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 623d980c-0306-41a7-8caa-b9f689299481)");

unit.assert_eq16(16'h0596, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #211 3fff78bc-e399-4ab4-80e8-a08310483507)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0339;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #212 a29273cf-e0f8-4c9f-af0b-0f2870c3fa42)");
unit.assert_eq16(16'h0339, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #212 eabcbb40-913b-4e4d-b9f0-9ffcf25e02d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 c95e9f57-175e-4e99-9656-3ef75940d6c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 c9ce5428-abf6-4965-aab5-116412aba94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 61d50d67-93b4-43b0-87f2-18e5b85d2c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 f2987d62-4f4c-436d-8946-74f7503c4ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 8347e66e-18d6-40b4-b316-b88dbc429335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 f662e1cc-774e-424b-9946-d8dae74c6bba)");

unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #212 b7152536-cddd-4502-be25-25a6122c8d0e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h091B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #213 36a03f89-ad2d-4c06-9aae-a254ddb6a805)");
unit.assert_eq16(16'h0406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #213 7350f3eb-a65a-47df-ab89-748a6cff1534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 dbe79841-71c3-4667-9d95-b5cd3d96b7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 7daa633b-ab73-4f0c-940e-b3b1828f6083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 e1a27e0e-ad58-490a-8586-7037383cefac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 e5b827ea-9556-497c-8c3a-b3a37da0b6f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 5bb32799-e39a-495d-9a82-8aae89b27b40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 0da8b74f-52dd-4d88-aa94-5a3abb910d25)");

unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #213 347cf4f8-47a6-4f1a-8984-d8afc73256ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h05C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #214 e7c81878-6e15-4625-8bca-b20e5621d92d)");
unit.assert_eq16(16'h0FA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #214 c118ce5b-c670-4543-9f0d-c973509af975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 de57b2ce-35d5-4bdf-83f3-dfba6c366c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 83565c5d-10ae-488e-8165-768ed09ba6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 809cf267-670b-4e1b-8784-e583dc125e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 a4fde095-c94c-481b-9a84-fc758f9c06e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 d6d2bc30-5a89-46a5-8f4c-1bd48f8e4bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 dc59a216-0052-4392-9e92-a07714b2c4b0)");

unit.assert_eq16(16'h05C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #214 733b2a2b-255d-4cbe-907a-5525521e49ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0122;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'h0122, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #215 6522f3a8-82b1-4b21-ba25-13586b25720e)");
unit.assert_eq16(16'h0D36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #215 143c6a35-f13c-44f0-be64-7b8d6511cea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 c7b4369d-b02b-447c-a5b6-790a7830c7bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 d1983418-db8b-46b8-971b-a9120623d7ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 3c9cf39d-8ffd-424a-b770-0cb6db2d4328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 eca84a9e-4dc9-4e2e-b02e-69cf54805f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 ca02634e-56bf-4cac-aeee-41024630425d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 9a073f7d-eb40-4b5d-b0be-3c431d551319)");

unit.assert_eq16(16'h0122, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #215 471ad425-90be-4a69-b55f-b32c04f1c019)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h06EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #216 1e451aca-869b-48ca-b7ec-a708448dbaf2)");
unit.assert_eq16(16'h0B28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #216 7692f0ca-a91a-4dee-8bc5-0e056878da80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 4396195b-bcf1-4747-b053-ea2c6237ac74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 0368db6d-fab1-4bf5-8a33-7f67406cb2ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 da2707fc-c760-4738-b6f7-a544000f6646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 a8c61dd6-c91c-4a32-81f5-e3f5ab37833e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 40c67b6b-8700-4367-9bb0-ee6f38eeeb8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 11a2fe7b-13ab-4826-b59b-494abb2d6683)");

unit.assert_eq16(16'h06EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #216 01773452-e3d5-408e-be6c-4c5f30395175)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0355;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h0355, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #217 b9e1b5ee-ba03-4a0c-b0f3-a812147dc4e8)");
unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #217 74884e3a-8a8c-427f-80a7-1c9a7fc3442c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 85467bdf-07bb-4bcb-9b58-55776ec8f6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 9745f939-9049-4436-b28c-9479e36b7f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 3dd32c55-f68f-41ec-86f0-7072ee1284f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 939df2d1-71e7-4260-ac25-d29f3fa4e6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 f1a215e1-4def-4d1f-a5f5-9c10d5701a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 557bc65e-a702-4df6-b415-a479e8f5127f)");

unit.assert_eq16(16'h0355, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #217 23e0888f-7ad4-42c0-bf21-aa8fc128d818)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h09B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #218 cfc7811a-9e15-43e9-913c-7e126ac39f70)");
unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #218 9722a13e-a082-4a2f-8a21-e121d4f77806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 d5e596a0-186c-479f-a190-86718762c90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 8acaee2d-3582-4ce4-b3d4-12c2cc0768d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 90a349af-0685-4fa3-b162-e805fc961362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 2699d79b-68a0-4730-9319-57c9d257d5a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 7924c1de-7933-41e8-9031-005eceb951c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 2f886690-6a99-40ae-9ba3-f1eb3a5279b8)");

unit.assert_eq16(16'h09B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #218 7af5395b-9866-483e-b835-13521904d00b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #219 aef22953-c0f9-4501-8c1e-55ad63860946)");
unit.assert_eq16(16'h09DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #219 51bd807c-c203-48c5-8f2a-83e560b2b982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 bc8743a8-2ee5-46d2-8a30-e58096ddfa1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 34ceea62-6d4e-48aa-bc4a-cf0144a6dbd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 bfc5be69-6bf8-43c6-bd22-965189127445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 8b1a1c19-cc4c-45d6-8bc0-d3c98a088e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 1f75ec2e-7c47-416e-8c6e-799b7d678a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 9fb12f49-4f60-48ad-a79b-4aa2c456a397)");

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #219 1fd3d644-ae87-434e-92df-00ae4b02c52d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #220 2c224962-e084-43af-bb42-1a274030515e)");
unit.assert_eq16(16'h0F58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #220 ce505602-25ef-4457-88b2-cba0c6e5a7fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 8ef256ba-dcdf-4d08-b17c-5f4ee02d8f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 bab532de-6c84-4b9a-8124-ef91c1ec02a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 aa50a16a-7189-437f-b812-9ff513cfa260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 bbc2d213-c75c-4577-b3dd-35029478fb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 826719a8-3660-403d-bd4e-d64f63aa5866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 ab5f5c3e-bfcb-4e1c-a86a-a3c01de2e4a7)");

unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #220 c512e17c-3254-4e4d-a9bf-430d5c1537dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h0BF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #221 31f1cfef-9f9e-48aa-9ff1-8f6fa8d5577c)");
unit.assert_eq16(16'h07B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #221 5f175496-9a6e-4b55-9fa4-ffc9fd11fd8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 b659a5d8-51c2-4e81-8351-3549f35b1617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 b4630ed9-5a21-42d9-9705-365e8d8c7c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 5961e4bb-7673-407d-a76f-0e6f23662755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 719245d8-7da8-4685-9197-9b03a76cdaef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 049ae7cd-8fda-4554-b920-3a452fdffb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 672f5a00-69d3-40e1-9065-63f2f61c5d8d)");

unit.assert_eq16(16'h0BF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #221 0bdd1a8d-7d45-4210-9194-d8b655d28bf7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0723;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0489;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'h0723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #222 e7bb1396-9d45-4cbf-9e5e-10ab165d051d)");
unit.assert_eq16(16'h0489, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #222 7a5db93e-d416-48ae-9fb5-07fbd3de621c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 16122e7a-105d-4fa3-8706-1cb1f856105d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 842d1975-be4a-4dbc-b586-bd903035133b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 0a3e8045-fe83-4d60-af26-9d05115a0d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 6a1a9e08-bef5-4dce-a1e9-85cf3d27e3ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 72c1c581-9a2a-4473-8901-a2008732898b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 fddb8b43-04cf-4e68-8346-d87e36b47e0c)");

unit.assert_eq16(16'h0723, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #222 fe63f985-ed33-4ab4-839e-fae2ffe7b7b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h076A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #223 205f5328-857c-4026-b40b-61dec7a11414)");
unit.assert_eq16(16'h03A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #223 7ec9c77d-c21c-4477-b042-d1897f2ae031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 e260870e-ee41-444d-96be-f8a6991ea150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 c16e3f84-2b52-48fd-b87c-fb96d85ee366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 c2bb9cf1-70fa-4757-a84a-04f1f8c41f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 8021cd9e-a0c0-4df8-a848-d0d5e155dc7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 0d8f22a9-33f1-4089-a3f4-e9c7aeda88ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 b86d2299-9cd1-41af-a459-82817344560e)");

unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #223 21278dee-ea14-445f-87eb-a60b1b250016)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0103;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h0103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #224 8c330249-91fc-4ad1-98fd-7b7497cf86c3)");
unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #224 f508958f-b2ef-4eea-98fd-22658c925c78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 ffbf8446-787d-46bd-a320-845dd873be32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 5ad2868f-243d-4e40-83ff-c00950e6b153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 0f22e653-162c-499f-8170-9a5ef44714f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 dad37f5a-671f-46c4-be98-90948ccba09e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 0ca02bb8-04d0-4284-9538-94bb1ebc72b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 86856a52-2355-46b7-b027-2b3d02ba2247)");

unit.assert_eq16(16'h0103, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #224 43caa67c-cf00-4327-81ee-d954ac243d52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h081E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h081E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #225 40fb52f1-7bd9-4df4-94f8-32918f7d2ef7)");
unit.assert_eq16(16'h0E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #225 e23bdfda-cfbf-45a3-a6db-16d9bda31e00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 82c58873-53c4-44de-a273-3a53afcd6496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 387ca302-f4da-4d44-96b5-229398de66a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 90442708-b5b4-4a7e-b7b9-92e046790d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 2e64f2af-133d-4436-a49a-feaf35f7370d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 6da4ab48-da2d-413c-8f10-cbda60c2d76f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 4299e1e3-777b-4d6a-9b86-e6964672733c)");

unit.assert_eq16(16'h081E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #225 03cbc2e1-b1ec-4156-a10f-c91703bbccb2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0521;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h0DD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #226 0e105b46-53c3-456f-8b3e-fcda1d3407e1)");
unit.assert_eq16(16'h0521, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #226 8d20586a-6b2e-47c3-b274-93e04882cb6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 8df57a95-079f-4722-920c-0f68a5dae390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 7f08b0e4-9422-4977-970e-632602732543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 183714ba-e227-4de9-949e-7aba9ef67d77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 4aaf87c6-dc11-40ad-89f1-fff96749639c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 289edf93-9637-4a30-8616-16f5f9a7c6d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 cdf06385-91ca-4c16-b26b-fbffb2d10e8e)");

unit.assert_eq16(16'h0DD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #226 d3546f32-8041-4194-80a6-c7dbe58d8120)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0480;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #227 74b0cd46-deba-4729-8d94-d2812ad66c18)");
unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #227 5b96223f-4e19-4f79-8133-9e067bf3de28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 56bbc7b2-d6b1-4c4d-88b9-2565d8102156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 df4a10a1-3090-4a86-8461-d2136086d323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 70127611-07d5-4f56-aa81-1c0358d330b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 38a7549e-5454-4ebe-9583-8553cee329fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 6cb23957-e606-426d-81f2-10a4d5b89d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 714a7a7a-f87d-46dd-bf1a-b62d7afea970)");

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #227 ca2d09d3-b6d1-4668-b791-a9c70de82e95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0620;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h0EBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #228 c8e65435-8ce8-4bd9-b0a0-af1179800688)");
unit.assert_eq16(16'h0620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #228 00aa831d-b1a9-4894-a80e-18af16b0061f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 9c575785-1317-4435-887e-1c3285a52a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 452eb32e-71fb-43fe-adab-cc85fc7278d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 6f3af1f9-96c5-4208-91d7-ba34c465dec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 2c8e6542-6922-403b-a49a-f2d4d9a59824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 9ba82d3d-d79a-453d-bc5f-4a03baf232f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 99c12baf-539d-450a-a48b-2fabb1440172)");

unit.assert_eq16(16'h0EBF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #228 d298c360-13bd-4733-aa87-a18a93d2f963)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0527;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #229 4679c2b0-9862-4a54-86de-dfbd87f98994)");
unit.assert_eq16(16'h0581, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #229 2b5b0848-48a8-4dca-a08d-802f0de00525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 86768374-e3c1-49a4-8ee9-9034b2fc1e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 3aadb1ff-abe0-4ce8-ad71-e355d5b3f4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 d661ed33-0b1e-4655-aaa6-6910ca6483ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 4ec4da1c-192f-4d7a-8377-829a47737dcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 a5ec539f-18d1-4254-815f-a8d946da9951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 3f4b4bbf-7a9d-4a27-9dce-a26b55e5fda9)");

unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #229 8f28fb2f-4d96-4cf0-8a94-9543d63f2147)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0386;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h04AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #230 a641c486-8cec-43dc-acdd-bbf59d525f5c)");
unit.assert_eq16(16'h0386, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #230 d5e6f69f-d060-4ddf-bbc3-980b3f360bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 dfeeb0e4-6a28-4284-a765-14d0b0ae2c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 0e5da266-d309-447d-91f3-4714ab60ecf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 10515b18-873f-4ea5-a357-2c0c48e84a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 ed44d84f-4d9d-4b02-a10a-a0aaab4bf016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 ddddddcc-8ac6-4415-968a-3514c023622a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 6341331b-cb02-48a9-8eb7-46695b678335)");

unit.assert_eq16(16'h04AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #230 e2d01370-d23b-476c-b5d3-eeb18100a3b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0663;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0421;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #231 a11ce60a-9a9a-4db2-a862-b4a9b5017698)");
unit.assert_eq16(16'h0421, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #231 4f028a09-ef91-450f-8701-7b8020335e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 b10f1b8d-b03b-4d3f-88b5-c22cb3ec3f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 d20e8c98-b64d-4ea9-b131-4f61540a10ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 d36f4256-9b17-4a50-9503-3cd049aaf6a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 eca51a57-0f54-461b-a040-aebc4f2bfe7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 74383f62-de87-4048-abae-a30196c3c848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 6ff0f471-b1c0-49e3-9750-1dbea67dcacb)");

unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #231 e9efb51f-ead8-43eb-9936-61271a2dace9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #232 b6afc24a-9631-44ad-9705-e90b448c1ea3)");
unit.assert_eq16(16'h0B2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #232 35005d4b-7673-4a1a-9d54-e147382faa31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 efad654d-9143-4779-9d0d-efe4963987d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 045ca383-faca-432e-88cc-0d2f4c359a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 ea64eacd-3845-415e-8aaf-edb1e7916d72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 ab86ab08-0e15-45ea-b96c-fe41f513aa33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 454b82f0-c05f-4add-98c7-d6eed219b430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 e10e85f2-ddf1-4075-b588-61f32ada4504)");

unit.assert_eq16(16'h04E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #232 ed86fd41-e875-4d35-a086-316f9950d68c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0220;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h0AAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #233 153734e0-b3aa-49a9-b226-4364ae81c08e)");
unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #233 102463fd-7b9c-4fe8-891b-a23d956a683b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 d65aa139-ff70-45fc-a87e-fa9e4c062997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 12846998-6610-4724-99f2-16ba2edaf2dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 6104f87e-dadf-406b-a179-947d29b3102f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 7a7989ea-f9ef-47e3-bd0a-b54cc97d9f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 2bbcf835-f3e8-46f8-95be-4e35f7ced159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 17a92cea-56a0-4b6b-8b12-9337906f8e14)");

unit.assert_eq16(16'h0AAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #233 504a7a42-a063-4200-be2d-874c4b101b6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0747;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'h0F9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #234 20f11e7b-7058-474f-a9e4-cb6120b7e7e4)");
unit.assert_eq16(16'h0747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #234 b427a667-9cdd-4702-87a5-5cb452dd424a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 4c6f3d0a-8c3f-4e63-bb55-38ed8017a785)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 aebe40cc-20a9-40d5-8469-91fc838029af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 53840051-2ecd-4ad9-b609-ccc84caed454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 75d26124-49b7-41f3-8034-411b70b56af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 b928ac2b-de8a-49dc-9e58-35c47e291f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 1a45fd31-d3dc-4be6-ab0c-3ee9676f7967)");

unit.assert_eq16(16'h0F9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #234 e7444a0a-10b7-40aa-a6d8-c56d1a11f355)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h050A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h0F1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #235 9afc8075-52ce-453a-b6fe-98645428bc5c)");
unit.assert_eq16(16'h050A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #235 34771ed9-a5e5-461d-8499-804f24a0376a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 eb962a02-84e9-47e1-bbc3-16b42f960615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 961481a5-012b-4f87-8ad7-fd1012647ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 e4936f13-a52e-41a1-bc1f-0f0aa711762a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 a5f1b098-5c9a-493d-a933-993c767a9625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 ee411a5e-0a41-4abe-8551-04f79829d12b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 3b396698-8fde-4723-9d11-8540fc229731)");

unit.assert_eq16(16'h0F1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #235 1a86f6e7-22e7-4cf2-995d-7fb0ee287993)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h0D3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #236 b373a8bf-5c6c-436d-bf2e-08b43fad0f47)");
unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #236 481e6bbf-0da0-49d4-98e7-f9b3d64f333b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 219369aa-5743-493e-9f92-bd1a757ece49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 4efb6cb6-7663-4406-af8e-0af58266da5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 b7dcfcef-6e56-4b2e-ae83-eeb28b9aa3d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 75165cd7-dfe0-4d1e-9d56-adfcde334c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 7e3ca681-3055-42b1-ab2c-159833773c58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 f1ac884a-4fae-416c-9bb4-b3fd21892140)");

unit.assert_eq16(16'h0D3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #236 4eceef58-342c-48eb-ad39-ca77ac6d5f1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0115;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h0DEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #237 be1360df-4e7f-458b-a1ba-5337979a99d9)");
unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #237 d34212dc-d52c-4ce5-adaf-146959332d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 1f3c8e60-38c1-464f-a978-794c4a85822f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 500a1b76-6310-4142-a1fb-6d41087fb157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 73e4ce26-2688-4faf-8034-4ffa4c4ce9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 a6b5619f-5635-4dc6-9a80-c715fcf601fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 81531199-4f35-4ce4-8656-6f2f24050f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 eefdb403-ce36-4b1a-8ff3-29f96392f74b)");

unit.assert_eq16(16'h0DEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #237 936beee6-1234-41c6-ab8d-aaf414e3c96b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h064E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h030E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #238 f45dbb69-6a16-4125-8f5b-6b5ff09acd8a)");
unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #238 01fb931f-a072-46f4-bc21-aba68c49a407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 db048cb0-25ab-4f94-aaf8-d4a3d358deed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 eaf67661-9621-4fb6-8d2d-e85ee234aac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 caad4a87-f653-471a-8352-c4c08596c8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 50f2e6f1-be3a-403f-b057-db56051e523d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 24bd82c7-534f-4d15-b5ec-758a97a145d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 40df430d-f709-4454-86aa-5c365fcd3c64)");

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #238 d40a3f5f-3caa-4bb5-a0bf-909da89aba9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #239 9fc14227-e4a1-449e-aa56-ade28d409d3b)");
unit.assert_eq16(16'h04DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #239 518e6e75-4e3a-438c-9072-2d0dba623a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 8ba83dc3-3212-426d-b483-146fe28e9c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 69c4eb18-a93e-4e37-8fee-cc02aae0ca3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 7c54f915-b8f8-4b9e-83a3-7be0c6081455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 d7b6e10d-043c-4d82-8ae8-eb00949dff91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 42c033a0-693b-4e0d-aee4-449945eb77e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 c30915f0-d633-4f48-a134-4336c4971e97)");

unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #239 bfdb9348-bd39-46cf-a038-8e1b9a0b0f19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h065C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'h0CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #240 1ed3fa3a-514a-4274-9f8f-acb1d5ddc46d)");
unit.assert_eq16(16'h065C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #240 635d2d61-4384-44b1-92ed-a6bb586601b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 78d19da6-d418-4010-bb75-1b4bc6574e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 f9ff955b-9bdd-4faa-a79a-0bacc2fb7a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 2f57c220-0746-4516-a6b5-d1a3d7a0ac92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 0cfdcaf6-de37-4a6a-9cb6-e6a472493089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 4dd65c1f-5581-4fd6-8177-797cc8066cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 fed385cd-93ab-4fe3-964c-467588dc1b52)");

unit.assert_eq16(16'h0CCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #240 ffa0ee67-e176-499b-9896-c4307cb11c6a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0631;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0094;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'h0631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #241 369df802-193d-4746-8622-899e0e200be1)");
unit.assert_eq16(16'h0094, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #241 eaad2975-bcd6-4ff1-8245-bf3025c086c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 cdadff7f-3d32-46ec-af7c-4d4df61689af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 8a872bb8-5355-4eee-8b68-473093c131eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 d12b89bc-6ea9-4e79-bea7-38fad8e00389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 8550ace8-57a5-4528-b574-a4bba97d7382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 5d749833-3c4e-42a8-aa5e-11640d0d5e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 3ca17817-c4b6-4613-baa6-4821e2870faf)");

unit.assert_eq16(16'h0631, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #241 32447edd-7d7b-4de8-b473-307b3a0d330e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #242 8c62fcb2-f8a8-4661-ad03-671db7798916)");
unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #242 cafc311b-e3c9-4cae-842c-28c2ec35e975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 fa02c733-ca11-4085-aac0-33f385b02bc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 d46ed405-a552-491f-ace9-a270a4a1bbf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 bf48732d-157f-4d82-a54f-d82e252eeed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 518a319c-7086-4ba7-86e4-82debf89342f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 2d9a418f-66cf-4404-beb0-e5bc4f7ee774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 1d8d5a15-4189-4467-9cc1-4bb4724eedaf)");

unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #242 41fde4d5-99e7-45c3-804b-1e8feb5c6c89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0816;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h0816, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #243 0676a9ec-b9d8-46c1-bdca-b77830adc5d8)");
unit.assert_eq16(16'h07DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #243 514075de-1eef-40df-b69f-4607a9d563dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 066090bf-d1a3-41ef-9083-4084fc90cec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 070ab4e9-3f1f-49c3-bb6d-ba30da458b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 76f8fac3-1728-4519-9de0-e7adf8134162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 ed1d31f9-5670-4c1f-9368-47076d317eeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 f1d5423d-ee14-4f9d-88fa-6e5666ed5f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 eed432b1-ebd4-424f-a68d-9384373a9932)");

unit.assert_eq16(16'h0816, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #243 99aa4a4b-826a-4a62-9248-2a12bdd2e552)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0866;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h0866, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #244 c80f2105-11be-44a4-bcb9-cecfc0b72b57)");
unit.assert_eq16(16'h0C80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #244 37e7d3f3-c74b-4610-aad9-491917789551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 7b1da78a-3789-40f2-8e86-b92ef92a73fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 08a8f354-c4db-432c-834c-ee044ccaae5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 6f5f2360-0f19-41ad-8e08-b95df354f418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 1fddc09d-14c3-4364-96e5-e967630d1e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 bc70df8a-d6a3-4c92-a50a-2bbbce19f0f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 44d9e076-6271-49ef-87d4-f0af743a78ee)");

unit.assert_eq16(16'h0866, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #244 77614616-c8e1-4717-8b0d-41db6f3919c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h028D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #245 344b8bbc-1ac0-4a2d-91f2-6685b95105fe)");
unit.assert_eq16(16'h04C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #245 c6aa2b34-a740-4988-b409-fc433c2b0eb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 eec3168e-053f-4c38-b700-059a4aec4ff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 28b350b4-bcd0-4058-b4e3-c0b19a70ca1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 44e9727f-4137-4a55-b46e-7a6406a7c7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 41e9bf4f-89a5-4048-8291-7e39692a3d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 c9fce020-c02c-47ec-9e1e-56a4852c49bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 4291b604-6658-4fea-9168-782b16ce4fef)");

unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #245 94eee042-8397-45a4-8a3f-a79a35f92b42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h07C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #246 82d1e599-8a08-45b7-aa9d-e4c02a8e9f30)");
unit.assert_eq16(16'h07ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #246 c857ecf6-49f7-4c0c-af53-4be5f651a8e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 9946ce2a-fa1d-4c84-9338-eeda63b451e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 ef0f925a-e74b-48a2-a1b6-46dfe3e459e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 dcaeea53-8c83-4678-aeec-83fd613f1100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 87de02c4-a80b-4b28-a2df-7319877a87d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 4be2bdf3-9e1c-4af3-9dd1-5fa2fc90e6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 1981d163-284d-44ab-9e55-7089340f2a88)");

unit.assert_eq16(16'h07C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #246 bf02516c-ebc6-44c5-b137-3fe67da79abf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #247 99d90ace-018c-4f72-822a-82fe7207461d)");
unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #247 27a41114-7145-4c5a-95b6-5372b9ec24d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 3f84cc59-5f82-44b8-8fc8-b3a44df2d3ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 4e143369-2b1e-4705-a856-f8c18e8dd01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 a7fc0141-767a-4ae3-a246-61fa3e557d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 33733556-8114-4591-ac5d-c65b7364b9af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 e3b24ead-9280-468c-87b8-5d922d782145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 eb2c5d0d-f155-4a39-9c89-50ae850d70ac)");

unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #247 968d22c1-9ede-44f1-96d0-4498261d3e56)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h032A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h0EC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #248 1ba11a9b-79fc-423c-914f-dff46ee0a623)");
unit.assert_eq16(16'h032A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #248 ad52a720-a034-442a-9409-a690c1680670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 67c3142d-cc50-4029-82f7-1c82115e4a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 a16684a8-44a9-42d5-a7dd-5a0d16d258af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 3f86942e-57ce-4eee-8307-46a9a2541f7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 11a27cab-56f0-4679-a61d-bafe7626a615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 f97eec4f-1bf7-4f82-a7c4-c0c28ceb4ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 1db00ea2-8acb-4772-a725-f5debbbfe223)");

unit.assert_eq16(16'h0EC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #248 b767c6bb-5c28-4bab-bba4-fa18a228b0df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h037E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h0C18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #249 6cb3e371-3ae3-402a-9ef2-6c1353fa464f)");
unit.assert_eq16(16'h037E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #249 abd37cfa-c8f7-46a5-909e-cd0ade8ba463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 fa5deac1-aa0b-41d4-82be-68f12177084c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 a2e33748-cb4a-4dbe-9718-9fd22a8afbe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 5df3dd7b-d8b5-4c3b-923c-fbdf83a3a3e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 21e368cf-579c-4e17-a68b-0fd0b46e70f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 d0dbd781-830d-4156-8388-db003a2b8249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 20cf11e0-b0f6-4603-9509-433152ace6a4)");

unit.assert_eq16(16'h0C18, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #249 945c65d6-c9dc-4e2a-8e81-a29f137c665b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0800;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h04FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #250 2a590a61-3fd3-4139-8729-6394279e8824)");
unit.assert_eq16(16'h0800, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #250 359307dc-2efc-4472-bdd1-e6672e2c4075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 9b1ca1b1-7525-40fa-b892-1d2bacce4ba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 dd4edc7a-f8ee-48af-9205-b87aee6706ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 a74062a7-0974-43f8-8f77-3209283ec98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 52f7897f-9c3c-4921-989e-9aaee6a341b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 20ebec10-1002-4c50-8008-6081e311c0ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 26ad9e55-c89b-4885-ac2a-13707660d09a)");

unit.assert_eq16(16'h04FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #250 420691ea-1c64-47ed-9b86-7f939e0eaa50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #251 32da485d-40d8-4fd5-94f6-aad69c3a6a9d)");
unit.assert_eq16(16'h0FC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #251 275caf40-3b9b-4dee-84c5-3cc34d00090d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 ef4c4b24-4633-49ec-a7a0-83facabc519c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 62d4e09f-c2c0-4ce5-9998-d4422af89f68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 030f4353-8508-4ba0-a2f9-6e16d8974b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 4683f672-81fc-4343-b459-69d608184d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 1f206aea-b50e-4c93-ad7c-0addf3d16cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 40bb3a97-bdf9-4609-ad91-f19845459747)");

unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #251 158a379a-2b63-4266-a594-1c360b633182)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #252 1550f391-9f63-4f3d-8cac-2e6d22686a72)");
unit.assert_eq16(16'h00F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #252 5c80a476-f40f-4a12-a86e-86188bbf7c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 395963a5-1c25-4eb5-bc32-433188eba73b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 1e4d81ec-171a-4052-85f6-1bcd3a08eb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 dcddf3a7-cfa2-4073-a161-eef6a900305c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 308e3770-cfde-4077-84cf-8c6839723da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 e38f9904-6c02-4cc5-9f03-87f9219dbab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 b3209c34-c2a4-4be8-ab3f-7cec8a3f3d03)");

unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #252 3b66afa8-1966-44a1-a626-399d028f0a47)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h096F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h092D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h096F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #253 98ebfb9d-1636-4cca-99ed-6cf109d96f0b)");
unit.assert_eq16(16'h092D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #253 cf640a91-8439-48b1-a626-d7fdbd2d58fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 76c2649c-90f6-45d4-9c19-0fd9bcf5db5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 afc104c0-f0df-49cc-981b-bc1ac1538f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 623a268a-6f00-476e-8c93-09c9b89f6312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 d4f80f11-d13b-4f64-8907-57ecc69817ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 354c51cb-de32-41e9-a98a-03f8ddd10a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 6c6c923b-d00c-463d-887d-a62d6ed5721d)");

unit.assert_eq16(16'h096F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #253 fb548cde-eb11-425d-8f90-4690e3223e95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h04C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #254 b304b132-8042-441e-a3d7-13314722f454)");
unit.assert_eq16(16'h01DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #254 44d9aa23-695a-426e-a1ef-0202f5893096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 6e8abae9-7cce-4e7b-a365-a52a25dc1ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 08214bb0-01a0-4a09-9d72-3e5ce5401da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 850678ea-23b0-4055-a272-ce2ad8038431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 1f8e9493-323f-4dc2-82a9-a1efb0d726cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 544e2ffb-c641-4588-ae70-44165389b01e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 bdb43a82-dddb-4dba-839b-b0cbf5a6cf99)");

unit.assert_eq16(16'h04C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #254 1c3e740a-35c5-4e27-94a8-5723e398681a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0485;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #255 a4b0cc4b-a625-4310-8c62-658796792561)");
unit.assert_eq16(16'h0485, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #255 f385b54a-bc05-4d06-b435-006c4abf146e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 f6517e8e-9b47-4e2d-9cc3-0e1e6ddc749b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 ee0066dc-e6a2-4939-9f39-d3cf0eb825e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 6ad2f390-9e57-4c52-b604-55c149efdb3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 5fbd037b-beb8-45a2-887d-5648b3635137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 44bd9198-0ff1-49ff-a002-51e49e2b6e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 09256f08-aa1d-4c2c-95da-ef364563a5ea)");

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #255 41f6f0b5-b26d-47cc-b104-63a6833492fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0200;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h0C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #256 2eb0938a-3460-4085-985b-1928b06a9018)");
unit.assert_eq16(16'h07FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #256 aead19be-4083-4191-85ed-ee3fe8382f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 42d071c8-bb58-4623-b71f-4115f098ba67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 69bd2164-21d4-44d7-9537-8082cdc63187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 6c931c44-e2a5-4816-95e8-7e1ccd7e620f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 96d64118-3632-486e-8b80-49867eed311e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 c1a34b9c-07bb-4e73-91be-a7ff87ce3457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 356cecf0-492d-4185-a842-06a892ca3b88)");

unit.assert_eq16(16'h0C94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #256 050a2bf8-c757-4b95-994f-4471b2bdb4f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0202;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h0B57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #257 3e18f5fc-c136-49a9-9def-8b1e0d5c38ab)");
unit.assert_eq16(16'h0A10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #257 1ed5c546-7d7e-4e22-be7a-d237a73029c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 38340af5-0a95-44fa-a3f2-4e00dea5baf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 18d867c5-8712-4a67-8bce-c52e54b2acce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 aa680248-e001-4176-8a4d-029c6efcee34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 f1251863-df20-4478-aac5-a3ef214dffb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 9de95ec4-8f87-4d51-a76d-04b5ea2c9bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 afd98cf4-d745-4ba8-bb27-0762d4ebf8b2)");

unit.assert_eq16(16'h0B57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #257 72ea55d4-b16a-4947-9436-a3e0bd6fedcb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0204;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0296;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h0296, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #258 32375d2c-97c6-42d4-acc7-daffe4420a25)");
unit.assert_eq16(16'h08E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #258 aa8f9cca-482a-43a0-83df-cf2e11870323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 f74ac489-3b2f-4888-a06b-274d5a3f760d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 c9ca895a-ea3a-4ded-ab5a-a05ce24b5247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 61ee2e51-e0ed-43a2-a632-a4e816e0de2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 9c789741-cdaf-4124-88f6-d3904638de83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 6e7c434a-845c-406a-9dd9-0a8e7f34ab87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 a24b1a6e-8ba0-40d8-a5ae-8f9026abf671)");

unit.assert_eq16(16'h0296, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #258 d03e0937-352f-486c-bcbc-e2e8d78c55eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0206;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0476;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0736;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h0476, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #259 ce8b4238-75e3-4c53-ae28-8adabe6b257b)");
unit.assert_eq16(16'h0736, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #259 5b5b6d37-1d1a-4dfe-8f89-8f9540e61cf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 dabec904-eccf-4ef4-b450-9605680620d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 3c74e572-78f3-4a76-a074-ac56f87fa623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 ea8f4acd-8804-4425-afaf-33e4444d14fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 8bd57f6b-f61f-4df3-bddf-ffc284fee25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 0bd5b454-c0a5-4f56-b6e5-c3a1e31f3a1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 6b918aad-6294-42cf-95e1-71d7adc30498)");

unit.assert_eq16(16'h0476, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #259 ab0da4bb-77d1-46b7-a888-8dcb38072611)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0208;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0311;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h098C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #260 fc88a226-bf3d-49a3-8e7e-241fb0662b38)");
unit.assert_eq16(16'h098C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #260 57f20f71-ab26-4337-b4ee-02dbdf467df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 3f1b02f3-8535-4252-a55b-f7ede13b613d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 955066ad-7182-400e-b55c-0e221ad2f604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 fc475529-e702-452a-ba2a-95b521d4b089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 3b3446c3-fc9f-474d-9818-9b32bf3079ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 a74d6930-8632-4100-a238-025531fce5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 6fb8b446-773f-4302-9d6b-469d45a997b0)");

unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #260 d76a3360-2580-4918-b413-bfa803eb401f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h02FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #261 6571e899-d38e-41e9-adf1-06160aaafd03)");
unit.assert_eq16(16'h0CAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #261 fe0cc6de-c301-411b-a16b-c97f68409003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 e6eb4c73-07c9-4bc0-80bc-e3390e92d560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 99260860-cea6-4c65-9e7d-8967de545787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 66ebcc37-33d3-40ec-94c7-8c031436ae4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 97f0ab82-584d-47ee-9055-183c4781b081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 f45931a7-1355-428c-9759-00bca6e8c167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 351ccfe1-2da7-414b-8652-d59d34872cd2)");

unit.assert_eq16(16'h02FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #261 c277ccf8-82d3-482f-a042-5534d3911b0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #262 f94805c8-8ddc-4dd9-bd24-13e7d741fa55)");
unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #262 60dc21ec-a655-4a42-be44-6e7c29a56905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 5a36ca66-87dc-4265-ae75-3632927afd48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 35706c27-d42b-4240-9bef-7a8e52b37e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 9c513429-f73f-4a9d-b74c-b2a666b84c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 fbaca588-b94a-4ca2-a4aa-69c21e26a352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 403eea75-b46b-4a39-9a45-d8b43541e80f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 4d6d6b8f-ef0a-4219-9635-9f612a4ccc78)");

unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #262 2b2ecca9-b097-4726-9b4c-e76827af2096)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0451;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h075A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h0451, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #263 dea7117d-766a-4d54-9ee5-517d2b1d02e9)");
unit.assert_eq16(16'h075A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #263 4205f2d2-675c-4b79-95ca-4a991aa35686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 1463436c-44b3-475d-8519-cfb968024fef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 5cad84e3-65bf-4868-b07d-b1dd1c93b355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 159cf2b7-1cdc-4bbe-9e3a-1c01f2444df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 865b9119-ffd4-45c7-b60b-ea35a5e9a34b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 b96bc1f5-b85c-4812-ae90-11593b656536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 d2a343ab-1649-4e61-9333-9cbb18fecc96)");

unit.assert_eq16(16'h0451, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #263 7a28664a-2d90-4901-a430-ae9eb725e286)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0210;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #264 ca5d2dae-50c2-43d2-ab34-dc553c9600b4)");
unit.assert_eq16(16'h0A16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #264 a262cfb1-160d-4ecd-bc6a-1a33c4609bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 dc41d514-cb28-4976-b840-f0956c42fae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 7cbe24cb-c3f7-4863-83bf-d63410ae48e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 cab52587-ccd8-4c2e-8c40-961babcf21af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 0a19f00d-203d-4927-b9fe-76517fff4748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 ece09c30-c767-4c75-a63a-47f1949a87ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 fe696c35-efa0-4ea6-b1ac-31b0d227dba7)");

unit.assert_eq16(16'h0B37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #264 d9b39696-68fe-4d2e-be5f-1cc119312814)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0212;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h095B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0866;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h095B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #265 21447b7e-e7c2-4452-96e3-163d8b093b59)");
unit.assert_eq16(16'h0866, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #265 d13d3d39-023f-4d0c-b4dd-e1c025366a1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 71acc0cb-15c5-4a66-a231-b9ac46cfc3e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 ef9d3c30-fd1a-4191-8a21-93f5c52d1e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 5548fbc1-2f54-441a-88ef-4afe0ca270cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 1569b3c0-9b95-4177-ac1d-18699065c74c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 e813dc49-c661-486b-8305-d3a3b615eb93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 752354f6-b9be-4baf-a86a-fcf038404d94)");

unit.assert_eq16(16'h095B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #265 92b36d08-9d31-4133-99ec-cfcfeda45c63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0214;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h03FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #266 2681ef6f-c990-41a3-857b-19bb8d1a47a8)");
unit.assert_eq16(16'h0DEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #266 26bf5df6-dad7-41f8-a7cb-78317716eff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 fb10d87b-cc8f-42e1-b810-180f7228f43a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 fbbc8070-263e-4ffe-9a22-370944411f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 2eb24b6c-d312-47b0-ab88-85a00eb41f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 08d50d45-6e65-44cd-98f9-25cf2947d5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 2fc137d2-35d1-4b51-8ce5-9b274829de6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 1f29a206-6ef6-4bf6-912f-a43533b74307)");

unit.assert_eq16(16'h03FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #266 076d1785-3e3e-4c17-bc02-6280f2f14958)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0216;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #267 e8974a4b-7b38-4fb4-b27d-70325faf39da)");
unit.assert_eq16(16'h0925, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #267 cc3b6840-1e88-4cae-8bf6-4393e1151ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 196bc14b-7a54-4c58-91c3-f89326071380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 f7280d6b-453e-43a7-9a4e-f9e443bf6d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 eb7cab4d-5e95-4f5d-971d-dbc9cf0b026c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 edcc0ef0-913d-44e6-9653-85395d54d2c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 b99b937c-593c-4c89-96e9-7b9a16b68960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 5a79fd12-31d8-4917-9c6b-ed4ce3b84cf3)");

unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #267 3ddd81db-3d68-44de-a93c-157e06505a5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0218;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #268 f0c1d60d-8e2d-4f05-b7e5-1de466099d79)");
unit.assert_eq16(16'h0F25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #268 6f0d3caa-3506-42d0-8a91-8d9b720f1fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 9d282c07-5c9d-4736-b094-27b215ee8af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 0930bb36-37fa-4ac9-aa05-822efd90320a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 0d56684e-13f6-42d0-9e52-64c351049c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 cb2e62cf-9b50-48b5-964e-68937639b54d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 d95e5a8c-ed86-42ae-8452-6ca40639e3bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 ee618ed5-6e26-4f75-8ea6-c47b9dd7c43f)");

unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #268 e8f3a97b-63af-4fa2-bf5a-ac080897bbf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #269 5640d6e5-6e33-414d-a9bc-cb5d007a6dd4)");
unit.assert_eq16(16'h00C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #269 221f0efe-4c05-48c9-8bea-d35c22982f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 95a59870-9eec-471b-abab-5387b953be48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 ed4c0da4-10e6-4e2a-b5df-0f8b60c25484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 544028a6-4098-4842-a578-a645c1117065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 aeebd71c-e70e-4747-9996-0e83853b24cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 c0598161-ac95-40ba-8cb8-7db88777a016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 f4a7c9f4-4866-4cd6-a6b0-0fc508805600)");

unit.assert_eq16(16'h0AE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #269 ba15fbfb-ca29-4257-9cb1-c76618526659)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0315;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h0315, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #270 8a56dda7-65a8-4165-9803-07a2ba7efa1d)");
unit.assert_eq16(16'h0F46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #270 de3f263f-5159-4b55-b0de-e715c2995688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 cb445e2e-9451-4650-9747-0d869f984ee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 651a269b-86e4-49e4-9e8c-b26c5e67cc7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 63b6dc67-4573-4de7-9230-f54c2da6984a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 c2462008-9420-434d-83ff-5721efedfe75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 e314c600-bd30-4331-89d0-e4eb29fb33a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 3cb0a395-e97d-45b9-8dac-5f044faa42b3)");

unit.assert_eq16(16'h0315, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #270 528e713d-7d06-43d1-b257-cef94632d39c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h01EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #271 6f15fdfc-927e-46a7-8013-bad8a475dbc6)");
unit.assert_eq16(16'h0CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #271 6d525d69-07b8-425b-aa3f-aa7615df04ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 3de3c869-d44d-4d89-a4c5-6964822c830e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 ec943535-d7f6-4088-a696-08dbe4a161e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 16dcce6a-5260-4be9-b9db-76132213e83a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 0a7e527f-fb69-4596-adb7-b691a0b08ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 85e7bff3-3ad1-46d0-a130-4075cf511cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 8ded2f6b-471d-460a-8bd0-0a78dc64d411)");

unit.assert_eq16(16'h01EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #271 d591726c-0008-4b8e-bd94-475aa3abee79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0220;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h021A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #272 137e47ba-a9af-4320-8d5d-d3097f8b9531)");
unit.assert_eq16(16'h08B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #272 0b371bb9-ffe3-4874-8ae6-261556e938e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 ad05813e-5ab9-42f7-850e-65d349ff6bed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 0b61ebd1-27e1-474c-8aa2-11f982da9cf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 5176745a-19f8-487b-9675-01fc7ec081f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 eaea1260-c605-45cd-9fec-0f5fc5604616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 cef21530-c2dc-4fbe-ac9e-db14bb6201ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 f6b25c37-f555-4c92-891e-b47ffad3285c)");

unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #272 7c59a2d3-6f8f-45e5-8248-e1a0c5a209ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0222;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h050C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #273 c601fff5-6c77-42e8-940d-af5967f040f6)");
unit.assert_eq16(16'h050C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #273 bd707384-4f5c-47ea-a0c6-d50a60a387ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 6f9a1b3a-07ae-48a2-aa5e-cdfb04a9b784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 a6f63070-e735-4474-9da1-764f8c33e8a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 18db97ee-7097-4b7e-88b2-249c26fb6c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 026c46fa-bf88-4749-be9a-eeb5018e549d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 8d92ac82-241e-42b2-9ff6-8a9ba48a1bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 19d810d0-aa3e-40b4-a9ab-ab8c45353459)");

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #273 9f1db071-d3b8-4cba-af3c-44b22c59b9ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0224;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h00BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #274 6cd209d2-e3b7-4134-a9ac-1d67f2855b43)");
unit.assert_eq16(16'h097F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #274 5fe28be5-3cfc-41b6-8f86-b803734092c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 67fa4f08-d9e4-4381-83fa-024f27b02872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 752be6b1-870d-4a56-9235-32fd847d231f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 eb11ff56-9997-43e7-a19b-1aee3d649cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 d15cf5a0-3852-46e1-a006-dc7c54cf3d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 2c1d6439-ceed-4150-80a1-d23003eb987a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 b0aa6329-9c77-4d46-9920-6c0b7692b49e)");

unit.assert_eq16(16'h00BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #274 d495b16a-0760-4768-a43e-d9d90b6e61e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0226;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0245;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'h0245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #275 945217ba-44df-41ae-8a04-d77d9bb72a9f)");
unit.assert_eq16(16'h01B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #275 cee777e9-497d-4c52-af6c-52caa68d4171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 228d5215-9cd7-4a6d-b727-ba6f175867ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 91514c42-c29d-4e98-9b17-de1dec6be62d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 6668fb40-44ea-439c-8a5b-b38c53f97ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 e9cb4d7a-654a-4333-88bf-c47d6568b59b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 e5e4b971-26c7-427d-82a0-15a4367e247b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 b29b0c35-b548-4a86-8a38-2ea386ebf5e5)");

unit.assert_eq16(16'h0245, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #275 bebeac3d-65da-4e1a-aafb-98bc2b55ce18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0228;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0984;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #276 58f008e0-caf5-40eb-a871-fda1cd6b9c77)");
unit.assert_eq16(16'h0984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #276 c479dc40-2816-46d1-806a-3d5527a13a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 90ac3f99-b170-4ec8-b24f-0ba6a26e3f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 ffd2191f-a566-4f15-9a23-dd08a67708a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 31ffc50b-c575-4167-8060-cf52f311a6c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 be00efb9-e8fa-449b-a122-7d4a5e94f42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 76d6271b-951c-49f0-8c76-8ed42fe3b0d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 468a7175-fa6c-41c4-8c28-b6d374d98753)");

unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #276 712ab48c-19dd-4c80-8eee-268ae5e447d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h0E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #277 bfb88a4d-6e8c-4f18-9524-da17c3f7f236)");
unit.assert_eq16(16'h00B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #277 71b69dc1-3b10-4d18-8c9d-4a4de7af09aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 11a78bf9-8baa-4b0a-bca5-5510a080a002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 bc54600a-62fe-4aab-be88-65d16efc8017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 12143c5f-ca7b-488f-8af5-8232e22f1ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 8045ebda-bef4-4ca7-816b-ca341cec4910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 f34055f3-b309-4fee-b6ab-ac8c543f2845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 6310e240-a76a-49fb-96bc-0564d409a5d2)");

unit.assert_eq16(16'h0E9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #277 650c927e-e6a6-40b2-aecb-1ca4352ef230)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h0F72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #278 dc8d3a68-6fea-49f3-8dca-a2936efe3d1c)");
unit.assert_eq16(16'h05ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #278 4c889198-21a2-420e-b3c5-fbefed5e0fb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 6ba538fd-4092-4499-b938-7fa6bbe5feda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 97b37d8c-97a9-4564-aed0-3c86ff0d087e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 5e240623-f481-44f2-a7af-27a160d78775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 ffcb812e-6d37-4124-8974-8834f9d63aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 2a815498-8d25-499a-9a37-3d2486941614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 a24152f6-90b9-4bba-b406-1890df50282a)");

unit.assert_eq16(16'h0F72, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #278 a4d96408-b8c3-4508-be94-d954d12fa309)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0412;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #279 27629018-4a32-44ed-897a-adc91931e9a0)");
unit.assert_eq16(16'h08B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #279 e53c7ee8-4e1f-4287-9901-02de6ab6109d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 649387cd-d3c7-4732-9600-8d46ae357833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 df3dbfdb-1baf-4765-96ab-9f5139104d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 f02f333e-46e6-47e7-875e-1eb6bfa44107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 466f6929-8dd9-40b7-b1f1-cb76f0129c9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 654bf660-1332-41c3-be2c-f1e99ed9a4e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 a7d8363c-3aaa-4fbb-9eea-26216aca7953)");

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #279 330f445a-a2f1-4b06-99b3-e7e0acea02a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0230;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0386;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #280 6e7f293c-bc45-4b97-b0d0-fb9c55128881)");
unit.assert_eq16(16'h0386, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #280 b4afb011-8a89-427e-8573-ee244e0f2de6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 b1a6e359-e8ab-42d0-b114-34483f3fad1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 1dd83981-c3d9-43bc-b5f8-910175252dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 09232168-a3b7-44b9-949d-cb78edd00aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 b4fda503-aeb7-4e23-bdb5-4dd78a844f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 cc640854-49f5-46d2-9aef-400a520e265b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 dfa49ea1-e992-4650-bf52-08d2bae7c847)");

unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #280 ee1a0e2a-55f9-4b6a-b754-7e980a5d3073)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0232;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h0E49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #281 3f7d6f60-52ea-4f05-880f-9d9c0bfac414)");
unit.assert_eq16(16'h0CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #281 f6517dd1-97f7-4bf4-b70a-cac569fdf185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 a281fd34-b501-4ffa-885c-18e8dde51761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 04c9b2af-3d2e-451c-98fd-d2ab7fe95b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 71023d53-108d-4298-a923-b7c3fa5a5a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 9d6ab185-6686-488b-b2a3-e2c3806c49a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 07834823-a3d9-49f0-adc4-62d4ec13ba2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 d25aa805-0e9f-4824-9d02-974277e99f43)");

unit.assert_eq16(16'h0E49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #281 01df7eb7-a79f-4298-bb5b-7673126080f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0234;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h039B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h039B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #282 b7ba0970-0306-4459-bbea-3e45d25a580b)");
unit.assert_eq16(16'h0EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #282 d8318593-5031-45c8-b983-e5edc355721d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 cb5c0ff1-e5ac-4585-aba2-9b3cbc328926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 7e1c6f82-3a0e-4330-98e2-1decc406b640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 75ed1d80-4a71-4bb0-b442-d8cb4a86bc1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 959c72e5-67a7-46df-a7ec-387df9add2c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 b40d0b3c-4f88-4508-8dc8-49c38191ff12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 bf1f2da3-d52a-40d4-880c-c010ce282803)");

unit.assert_eq16(16'h039B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #282 8e1a0b42-4acc-4559-8cd6-78eab4d18e67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0236;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0492;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0285;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h0492, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #283 cef21b60-dd81-49cc-8aef-2898828927ef)");
unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #283 dda1e874-2f73-42f0-82a8-2ea577ac3926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 e6a230e9-0df4-41d0-b8e3-be0148f4f2b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 fb0c28b5-7a5a-4e44-938b-d8a661f08542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 abfdf6a0-b21f-49d7-8dea-34cb599ab1d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 baab24e6-bdb2-43f5-9f84-42e64f2ec949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 dc49e0bb-bf51-4cf8-bc95-d85027033e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 1e76c431-36cc-464b-823e-b41056bc72db)");

unit.assert_eq16(16'h0492, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #283 e8614454-4c88-48f7-95b3-356388bc8936)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0238;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h022D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h022D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #284 0924edb7-bba4-4a1e-9468-14e6096bb989)");
unit.assert_eq16(16'h0C62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #284 73556df8-fa2d-42d8-a155-ddd9f78992a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 fc87cbba-1a32-4b81-87b4-831dc141ed54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 c50aa85f-b952-4a88-a83c-8ff4ee725952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 6d39f86d-6429-4ad0-9e23-a32ad93be3fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 ff0990b9-58bf-45b4-b148-58f36f5cabb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 b39f24df-3fe4-46bb-b875-90fc50aac0fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 cf6a6f6b-cc84-4666-bb0b-7681f20f00d2)");

unit.assert_eq16(16'h022D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #284 b6187446-6d4b-4707-88f7-75401e92ab88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0029;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0463;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #285 018c80b1-57b9-4e42-bb16-bf3d222d798a)");
unit.assert_eq16(16'h0463, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #285 9151edae-cf67-477f-9add-a8f65b66de56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 a4565417-6be6-4cb5-aebb-f1a5167f3930)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 210b0f32-49ef-4f0d-a116-558397643d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 a8e5edc8-6e5b-4fa2-b48b-b6a29b5a4125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 36da173f-b46e-48f0-8229-e3d2eb609733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 4a67aabf-9492-4ad2-b1c1-4ea36f62e989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 26032858-f4f2-43af-aea0-c5e87130b648)");

unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #285 2c218cac-5759-45da-baf2-cf2c2b8e95e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h0BB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #286 e71e29b1-2abb-4fd4-98a7-2f80d93bdff9)");
unit.assert_eq16(16'h0F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #286 4e2846b6-2ca6-47c3-b173-5889ca2e2c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 db648973-b7d2-41d8-b35a-d3a48e50f4fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 248e7c29-1264-44a2-9eaa-b630b91016d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 319dd219-4cbc-435d-a985-81609b0a5996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 6b80a32f-68e4-4234-a8e9-60d1a984eecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 68d4cf36-e783-4db7-9e55-1b79330b5616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 c539c18d-70da-4919-a669-892ed8c05c36)");

unit.assert_eq16(16'h0BB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #286 969be776-ffd0-445b-adda-53bf9edafdd0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h006E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h006E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #287 2ae4c199-2b3f-4ead-983c-c6702ce3641f)");
unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #287 7ac7a9fb-2633-4daf-bb39-61dfb4cf261e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 40c5407f-5028-4ec9-824b-88ae369b8d2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 f1d97705-ed2d-4b5c-80d5-b6b01c5700bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 c6ebdd9b-dff9-430c-afc6-7051a8e7f153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 1fa85e2e-ff7a-470b-8a79-d795f2445473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 12f4d66f-6788-44d0-aa92-cdf5a0c29b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 ad58e072-fc1f-48d7-b9dc-fd557e2bb899)");

unit.assert_eq16(16'h006E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #287 f0a5061b-894d-42c5-8102-bf16db77e5bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0240;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0103;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h0FE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #288 eb0bd365-32a2-4d44-9012-4f70e0a9bd98)");
unit.assert_eq16(16'h0103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #288 1acdb6d8-ec15-4c24-ba85-43490ee97def)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 826315e8-8f95-4ce2-abbf-29c0c8785223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 0959e8a9-a19b-4b87-995e-940f5deb6a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 67ba82fd-64f1-45e4-a3fe-ebfac557eba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 fcfa8703-d445-40b9-bae1-e2e61576b003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 c911caf0-3f58-4513-a090-266d7ee5a81e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 8d9101d2-3be5-4bee-9be0-a3f803c67aa1)");

unit.assert_eq16(16'h0FE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #288 4b6c39f6-292e-43dd-8ec3-09e7faf6e2d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0242;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h0BEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #289 dccf75ed-64e4-4cef-9df8-1f2b0d8472db)");
unit.assert_eq16(16'h0AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #289 ed38dc59-f671-44ad-af1b-f401e4837a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 a9e64afe-1d5b-4b26-8569-2dd280020fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 7455ee96-b34d-4dc2-b80f-180a99d34380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 9ce0e016-d04e-48b6-8b05-5b32bf157944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 96ffa35d-9b02-4597-82a0-bcff3973d81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 f002e516-034b-4414-a212-260a15529976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 1747c728-4586-4f0d-9cdb-2b9c775d0ea8)");

unit.assert_eq16(16'h0BEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #289 29ab4003-c778-41cc-907b-0783813fde03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0244;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0152;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h0152, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #290 19f6883f-9f23-47fd-8939-5171f353590f)");
unit.assert_eq16(16'h0C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #290 27fadb74-bde4-477e-9d86-8c303ff63178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 62bbf6b8-711c-4743-a885-6adcc5b49f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 8117862a-239c-4a27-9ff3-7c4f148567c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 d0ea6d1b-e33f-40d4-bca5-9a649addd99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 707f3927-7fb6-4d0a-91e7-f028b5277853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 ce622350-271a-48f0-99af-b5d54d0e42c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 65025c55-4990-4333-a090-39e9691f9745)");

unit.assert_eq16(16'h0152, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #290 da1f432e-f382-4eed-acfd-232e4949057f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0246;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0042;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #291 94e75c26-a405-4529-a53a-068d77c20c1b)");
unit.assert_eq16(16'h034B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #291 198cddc5-4bef-4da6-8747-23d3f949ab67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 54a9e0c2-215c-4aa8-ba30-98250f5d765e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 342d8742-bee8-43de-8b1a-e28539318cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 c1b642ad-31d7-44ca-9edd-a3e926c3a42c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 ad50dff2-d38e-4cde-96bc-9a587fcf66ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 2ec6aaa3-6ab2-403a-a783-cd3c1c7e69c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 a3771e3b-d6d1-4a3a-ac27-1db5e61116b1)");

unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #291 337f1ff4-4b49-4ecd-ae2a-47613d12691f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0248;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0221;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #292 2ab7a249-0766-48a3-8340-218913f51bfb)");
unit.assert_eq16(16'h06BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #292 097913a6-502b-4c6d-9ca6-b10813a3326b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 92b72f5d-0581-4d57-af7e-fd5786c41b81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 38b50b42-0978-4d47-b48e-f7bc4c2d7200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 245f64f4-5c94-48f6-9c84-c6bfb299a396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 b04ada7b-ff05-4e63-bb85-9bdea5d5f8f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 e7073e25-f24f-4ff9-9218-2bd6b7c0e0f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 37a9fd58-064b-4576-a8bd-042574a4ad43)");

unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #292 28da331d-1757-4113-9c90-261450178a0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #293 e5f4f901-2120-4a9c-adfb-120ab7d93ce0)");
unit.assert_eq16(16'h01EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #293 3a55e2af-1cdc-4546-8b1a-401d27784104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 85e9e433-18a1-4d33-93d0-e3b319e80380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 14e8a67c-0396-40b2-ba8f-6b057fb526d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 b9ae6148-38c0-497f-abc0-b2b0ee3e8d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 240320f5-8630-41d1-a9e3-3357b86ba830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 5a682145-d8a6-4fad-8a1c-d82e13831370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 ede033a7-d337-4334-9f7a-bdd80ead6fc2)");

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #293 335ae3ec-3ec0-42aa-9597-88eb05c9f5c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h0CE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #294 2268cfb1-b159-4f45-b746-58f0093d1f58)");
unit.assert_eq16(16'h05C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #294 e262b522-34c0-4183-af32-d54f1329e730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 ae3052b2-c200-4da2-8320-0efaa51d742f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 13f7844e-d819-46ab-8f7c-f10bd3349d49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 780b0f1c-2ab3-4114-819c-3b685e95d056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 7b157013-b745-4c50-aa15-b6214d6fc733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 cada4ea6-91ee-4121-9e8a-ca9e0efa033e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 2cb34f13-a8bf-42d3-b4a5-84d0dd3cb95e)");

unit.assert_eq16(16'h0CE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #294 a2e9ac00-d1c0-42ca-94d2-395c3644a930)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0209;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #295 c7d7c491-474b-46c6-be4b-336a30bee6db)");
unit.assert_eq16(16'h0209, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #295 fc7c6806-3cce-4faa-a03d-506e61cd4b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 f4b9d16c-871d-4f29-9319-cb487b99fa03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 b1674347-8b92-46a1-883f-b80e6edb0ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 ea8a3f6a-90c6-4174-ae49-4881a6b7ff3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 3037def4-a548-4a01-899b-412afe6fb57e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 56ab520b-e5ad-467e-a095-ead746b240e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 0ef032c2-b486-4df9-a243-026ac3a9b843)");

unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #295 29ce1954-ccdf-49a3-97ea-7764d44f1d6c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0250;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h0E5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #296 8dd9bcbb-0095-465b-b411-a97dc5bf7801)");
unit.assert_eq16(16'h00FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #296 7891de0d-35ff-4a88-b3d1-4bfe0eeaaff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 902cdce8-4cac-47ff-bba1-fb81a8e12be6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 f993ad87-425b-4a31-9720-62e6cc85009f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 9b4d52dd-3132-40b6-bfd7-cee79db626ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 3dfb4ad8-7896-4a49-aef5-baa43a85449a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 df3e3f07-cf9b-4ec2-af7c-f2de9b377d19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 72801cd2-74d4-4b1f-b529-0beb434f1683)");

unit.assert_eq16(16'h0E5B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #296 e3bda3e8-c48b-4d95-a407-3ff21991a269)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0252;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h0793, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #297 84bfbe1e-da8d-455d-a8af-91ca9cca5f38)");
unit.assert_eq16(16'h0FFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #297 18df1456-8f9d-4c2a-bd09-32306e52a515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 69a0057b-7a84-4933-806a-10d3c968caa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 77ca9c9d-28a2-427f-986e-4bb8d6a3b826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 ef8e515c-bbf8-47da-96b3-a97ffa1132f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 8fe1144d-6622-4621-9cfc-9c0fb9b4ad91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 98a75097-cc88-469e-9466-6ff28ea8a032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 6d86c7d4-5340-47ff-a897-707dfb47e30f)");

unit.assert_eq16(16'h0793, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #297 65e77dd1-6ffc-4899-846c-1696419ba42f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0254;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0633;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h0633, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #298 fa719d42-c77c-4af5-9b26-7dcc9f7304ea)");
unit.assert_eq16(16'h0A26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #298 d4dcc0fb-b532-4a4b-989e-a4af17ac627a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 bdec0b93-48b6-44d0-9827-4c18bffee959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 bf4a7401-279d-4213-bd45-22a21ea5d8b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 49d95543-0ed0-4970-a5c4-5e01d33dc07d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 62337815-b1a9-4864-b71d-d2de01438fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 98ba8521-c725-4a36-b1f7-8d36467726b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 aa4f4efd-7f4b-4e41-91eb-bbd28a011f4c)");

unit.assert_eq16(16'h0633, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #298 2ce1ab22-d9a6-4cd8-8ac6-0457e6d21668)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0256;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0995;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h0721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #299 88cd8392-a241-434d-8448-42c15071c5e1)");
unit.assert_eq16(16'h0995, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #299 6ded913a-c31f-43cd-ad6e-c0da401b908f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 8b052fd9-2056-4de8-8b1d-159c1be1730c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 65da8751-dc30-4469-a883-f303f57dedb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 559fda7d-1d0f-471f-8155-982a7bf4b7f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 36b6d630-5e2e-4507-86bf-97a3014b3dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 73a05576-7b36-47dd-99cd-c2208a7a9502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 c48e1dd8-bdab-454b-9ac5-7457beceaf1c)");

unit.assert_eq16(16'h0721, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #299 d78a51be-d6a1-44a0-9d18-cb4dfc315d7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0258;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h08EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #300 a2ac6e3a-bee9-4f92-b182-4dde2d6e415b)");
unit.assert_eq16(16'h03E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #300 217381ff-2826-4360-86f5-9b43337f5f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 13e25392-57e9-49f5-83ad-e398ff56cfa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 a1543f01-3208-4d47-bf53-fc7712e71e2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 bb7b6257-437d-44fe-9320-054d90f871b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 585ebaae-dcea-4722-b863-eb7da1ea80cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 5a576c7d-653e-4277-abf6-c5a9f839be31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 723103ad-9695-477b-962d-074c107ce9a7)");

unit.assert_eq16(16'h08EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #300 1ffbfd48-f935-4251-955b-c1062cb3a3b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0097;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'h0097, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #301 68d0d436-47af-44b3-9efe-a289d5d73334)");
unit.assert_eq16(16'h0B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #301 96e1979b-b31b-4b83-83a5-8b502356acdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 a4317e2a-659b-4c90-bf0d-e06a8b19dcdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 a369e7ad-7f2b-4fab-9493-9caafece9d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 4f57c4c9-78ea-4eb0-b9c9-f4f3842f44b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 7f79b08a-2e21-47a9-b5cd-869c83a88d2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 11405831-8907-464e-a64a-7435a3a6963d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 ddd01163-0c39-4f80-93ee-672fc1774262)");

unit.assert_eq16(16'h0097, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #301 4fb83e05-4f1a-4ae3-bb70-f1901a1745f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0035;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h0C93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #302 ce7721a4-f7d7-40bf-a1fe-40a5e1dd1a8b)");
unit.assert_eq16(16'h0035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #302 d5d40ffa-28dd-4a09-b4a3-90eedb485845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 8817561e-4cf4-4465-9dc5-c9835f87c7cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 1000137d-abde-4ba1-8acc-06b17a07bb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 222011e8-7d59-4db3-9515-b6980b1f26c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 39257d1b-5d5d-4f6e-a4fa-790795d66769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 1146eacc-f59e-4fea-aac0-d55db531c6be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 3808c187-50cc-441f-92b0-64a036600541)");

unit.assert_eq16(16'h0C93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #302 e74e2d6f-3853-4829-ae19-63454d826597)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h05E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #303 436153d5-1542-4dda-a8ff-1efc11bc99c0)");
unit.assert_eq16(16'h00AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #303 c7624d15-fbae-4a3c-9edf-747c7f8a1e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 a62295e9-7c99-49d8-80a6-dcad03eea04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 834caed1-eb8e-4c1d-9123-ed5fe2d9435b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 a15c9ee2-a71f-4851-89e0-9723d2da2d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 a8ca37bb-98e6-43e5-bb25-0a47b5330dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 14d98e81-3a90-4471-9642-90106ca75e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 dbd54475-e590-4851-a3e9-bf51a6d883ad)");

unit.assert_eq16(16'h05E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #303 9b34cb34-9c39-481f-b629-e59627f7b012)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0260;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h0F78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #304 98c63daf-9048-4dae-83e0-e3283a29b55d)");
unit.assert_eq16(16'h09B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #304 d2f2b587-681c-4ebe-8305-5406025b5e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 2988c427-e500-48d5-9c21-e037a20ad215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 ca3d193f-b98c-45a2-8d40-bcf21f90ade0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 55b60ac6-5509-4c81-99f0-888119560289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 3e2fda06-ce47-4c12-b8c8-347717803e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 05f066fc-8757-48a1-ba79-422225859cbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 2d4a0d53-5916-4056-bce5-7eedc0c05d70)");

unit.assert_eq16(16'h0F78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #304 8e27f52b-1883-4f65-8b61-94552703d871)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0262;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h093C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #305 0eb5b733-7ed9-45ef-9fdf-e0ea74a3a62f)");
unit.assert_eq16(16'h04DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #305 b9af0c5e-5c71-4f09-81bf-accbfa53bb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 5f3c0cea-e0c4-46b8-bbca-27349853ee2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 ff5b7d70-3258-4ab3-ad98-d60e2fd3960c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 b72ce264-d1fc-4625-873d-cbf1132e7563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 97b840b1-a458-4a5b-a60f-d089455b6864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 59db2a88-1f42-4e20-90b1-06a066466520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 330a3338-21e7-4f9a-bc29-8630d9126b8a)");

unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #305 9f3bb1b3-282e-4215-8fa0-71fcd4fabe11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0264;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h01A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #306 b749c19b-9bd8-472b-8d0a-b647b0b67b5d)");
unit.assert_eq16(16'h0529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #306 eb2f7d05-ad77-4edc-b0f8-cb7dcbe8edce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 219e77bf-79c2-4d47-90c7-c89c9634a43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 7b36c2cc-84cf-4a09-832d-3673c68c41cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 339be794-00b4-4842-8453-633c38d15569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 b27c5740-798e-431a-adb3-6be31872d3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 1a7dae4e-6d14-4366-bbf4-9c224f4df35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 b4446843-c113-4202-b07a-928e108d14ba)");

unit.assert_eq16(16'h01A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #306 f04f6c1e-67a2-4b24-91df-930b7b4f4485)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0266;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0624;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0151;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #307 e4cc7d60-a091-4e00-8ac4-30046a69c205)");
unit.assert_eq16(16'h0151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #307 5c61ba64-c679-4c29-b917-c33c423c0ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 9f7e8c67-334d-4ca3-b17a-7e569d8cc3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 3473803c-e89f-4c9a-b9ff-fd4cc53bab13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 c4a6e0a5-356f-4d54-820e-f05a5ef98d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 2d3a02b9-3142-436d-9118-77d3a79915a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 98fb7607-7d08-414a-96fb-530984ab32a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 3860cacd-d541-4bf2-ae7d-e9aee2eb5c61)");

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #307 68e7f5b1-9453-423c-97dd-902d5c88947c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0268;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #308 48c6aaf1-6cf3-4b19-b922-45a8c3f95dfe)");
unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #308 89367e2f-6943-4e4a-a531-f735d3351980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 eebe5e43-5662-4b21-bbae-c0e286478ee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 35990986-cddc-4fae-9b4d-f73a5889cb72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 158a7b61-98a7-4e0e-9eba-d42377e96cbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 c20fd453-e337-4417-b62e-94426b5c4ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 54f836af-1ade-453b-a941-f4385d97d25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 42760a38-6984-456f-a085-e02f304d0194)");

unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #308 be28123e-8a4c-4edb-8b93-068ff0acdc40)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h052F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h052F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #309 4bdb21d2-8b39-43ca-b7e5-490a511669af)");
unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #309 603802a1-e30d-45d1-87be-6c0e0330f744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 5865c580-3b27-43d3-876f-2f8b08a34bbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 54fce679-c282-46ca-82a4-0f4be0c5546e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 6ec351c2-6d61-4b4d-9e59-873007c694c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 61983e54-1b23-4566-8e46-c5eef062c110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 af8cf1de-fad1-46a9-9de4-1282b0febda5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 65c92849-906f-4089-a044-d0c74770e2be)");

unit.assert_eq16(16'h052F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #309 fe334cda-580d-491a-b9d4-c74535ccf4e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0546;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #310 36047883-3e29-4f2a-b148-3cc99fa88ce0)");
unit.assert_eq16(16'h08FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #310 74d964b4-79c7-490e-97c5-295f2d1ff12b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 e7c1a23c-91b4-4519-9fe4-9a07c9b8a722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 704a6280-90b0-4dc6-bdf2-6e106d784cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 f2f85337-514c-403c-ad71-2edcd600c188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 ef33d244-db59-467b-8439-ede798333631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 32b913fe-4960-493f-bca4-d2d146ee632b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 19b750af-d4c6-4dc9-a769-58f07862df44)");

unit.assert_eq16(16'h0546, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #310 f0a9c61f-ac6d-4ce3-b4d5-ea537aaf8d50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h019E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #311 8431e081-ea08-4435-a413-625e95bc176a)");
unit.assert_eq16(16'h019E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #311 d88b88e5-493a-4b70-aacb-ac456b5ee292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 3277f95b-db2a-4346-9347-3cd4d144b185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 2900e3f1-2e1f-49c3-8d1c-da650335ac4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 427f6200-8f28-4c77-8c5b-756857bc331b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 e9b4632a-d7b8-46f5-9c31-cf88a26d4d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 889d773a-4f1f-45b6-9b99-9be182e299fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 6ae8e1ba-c1c2-4922-885b-7468115bbd3a)");

unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #311 7e76e6fe-3cfe-4b74-af42-e63bf4f7ae87)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0270;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h094E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h094E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #312 d4a6975a-8d20-4aec-abea-3d2f3cb364c6)");
unit.assert_eq16(16'h03CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #312 29593b07-68ad-4ae5-af89-62a9e2123d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 4d4394ed-1a91-4162-8a15-bc56e9289787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 932dcede-b607-4176-a94b-0700e8b4a822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 c4770bd6-33a3-4ee6-bce1-01b1aef7b184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 ae3e1deb-3448-4177-936c-d0f81ffe5933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 0a85b9f4-5eed-41d5-be77-96dffc3fcc5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 8ddfb44d-3e0f-4418-a2da-152bea04c61f)");

unit.assert_eq16(16'h094E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #312 497b8af3-e9b3-4e32-9d76-3a7a42532923)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0272;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h01EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #313 38f87500-7383-4656-9823-2f7894ce8119)");
unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #313 545ce23e-571d-477b-b4f6-4cb234d20281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 bad04478-89a5-484c-b4ee-981b463c21fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 e738db44-0a41-465e-9ea5-72e25fe76807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 98371b22-24a6-4c0a-8050-008a0b038a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 cacf92f2-2ef4-4309-8c41-7c142dcc61d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 8802281d-d922-4380-aed9-9d140f597c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 4d412bda-07de-469e-943d-53ab5ab95ab6)");

unit.assert_eq16(16'h01EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #313 bbc4f49c-a5d8-4bd3-8876-1dfdd702a0f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0274;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h011C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0860;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h011C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #314 afe43d72-8c3f-4662-b680-c732e5e19ffa)");
unit.assert_eq16(16'h0860, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #314 c3eeeb3b-aef7-4662-b290-ce7a9854c734)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 aca554b9-253a-48ca-af20-54878ed5a5d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 94fb28ba-f0a8-4aec-a322-20f9799230da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 ab70c915-7bfb-4958-88bd-2837264a0be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 2d203120-9344-41b9-9a7f-c9322143ef46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 12a17b13-2af0-4f03-aa3f-6b8e83b696e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 d4ba41b9-e4fb-4678-b230-704c615d127f)");

unit.assert_eq16(16'h011C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #314 5b44b918-6aba-454b-a06d-f3673777be06)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0276;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h0D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #315 ba4af414-7c10-4d05-943a-0de6cc76b975)");
unit.assert_eq16(16'h01A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #315 42ae1506-d7c3-435c-abbf-d46195454002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 d885e2cc-daf8-47d8-bec8-7521cbf90da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 c7a2fa08-3b8c-4a44-90e6-800d4e9e8c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 990f813a-fda5-4440-b2b5-c3655018d8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 94714daa-ca41-4430-aea7-5ef9dfd10e1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 bb5da6ad-bd60-458d-83ee-cf3727c27ccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 4f69dd9b-2c86-4b70-ae9c-d69e99391db6)");

unit.assert_eq16(16'h0D9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #315 56551937-4363-406f-8d14-1abeb8ef4100)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0278;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0449;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #316 595bb30e-b06f-4b33-81e5-d67bbaec6052)");
unit.assert_eq16(16'h0449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #316 e1c467fe-647f-4d20-9c7a-9c5087deb348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 6fd8fea8-40e0-4aa6-9f46-f23dd41dfb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 31e6f7c8-80cd-4cd8-81ed-c865bedb38a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 aee7c6fe-28b9-4dee-8f6a-4f575ff80a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 48a581b5-43ca-46ad-9b6f-27fcc6deb243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 d9d4e433-a0d6-4884-b347-b12daf3fc5ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 778578fd-cdbe-43de-a1c5-25f492852e5d)");

unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #316 048569ad-b2bc-48ca-9591-0810784d8c10)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h0EC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #317 f4491caf-56b8-444d-90e1-c3e7c7c19d46)");
unit.assert_eq16(16'h05DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #317 d95297c0-e05a-4ff8-bd56-07d6ea0b67f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 d0978b2f-248a-4c52-bd53-9f5cc136f7a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 4173593b-5ab9-4fe8-9ad0-abd0748fe6f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 04fabf66-948e-4855-8d4c-1e722fef4212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 a20dffda-8b00-462e-869c-441a51a8b80e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 e2861e86-13f3-41db-8ba5-093b75014a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 b885d324-af59-45c2-b204-085474d53008)");

unit.assert_eq16(16'h0EC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #317 3ea25d78-1db1-4047-b54b-486bca1bcd67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #318 d5e9818b-6091-41bc-91a2-8ed00d69c6e3)");
unit.assert_eq16(16'h03EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #318 26d7868f-216d-4e9d-9299-2c7e446f4152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 43dbb3de-4849-4d70-88e4-6fd52e6282a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 d36f39ab-6ac4-47c5-97eb-3e407ba05535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 7d49b4c3-10be-4afc-99d5-5bc727808998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 9014a534-f956-4c31-b104-dcd193571fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 bb1e79d3-4e3f-4ec3-8f1a-042f16079d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 3e7c2b5e-daa7-406f-a518-5cdc8e68f18d)");

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #318 90945b6c-c6c2-49cc-996d-ab69c25552cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h074A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h0DEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #319 e172225a-ea79-4705-a62f-8ef3e40da864)");
unit.assert_eq16(16'h074A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #319 b9b922d9-218a-4d57-b8da-489b13f10acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 0c1468a8-891a-41ea-86b2-071df768f1a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 a623362a-7abb-45cb-bbd7-7875d0517e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 8535204b-6d7e-48b1-b5d2-aac0b94b2479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 dbde36b9-cead-429b-97a3-94deb7fcc65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 a6eddc15-96c9-445b-812f-d7c34c5cec68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 301ade77-703a-4d66-9ce5-59a25c593244)");

unit.assert_eq16(16'h0DEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #319 20e354be-4b21-4ff4-ba55-fe16537ed133)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0280;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h0CC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #320 04f86118-2d89-4e2e-b7bc-7c8c22883f5b)");
unit.assert_eq16(16'h0D79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #320 7a3c8ece-954d-49e8-a16d-e8ca87f23b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 8d058094-7eab-44f8-97f5-a24fad804343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 f284693f-1eb3-4ef6-a94d-0059b4f6fdc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 f86d6af7-6d8f-4e78-9f22-1ee14ddd6dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 22a6d463-2597-4d27-816c-82170a36a5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 82f5abb4-4a43-4190-a839-603849af25b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 c7496de6-5db4-46b1-bf1d-9d03656c1446)");

unit.assert_eq16(16'h0CC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #320 bcd5f112-e498-4d37-9f19-4292e4e6f0b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0282;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h09A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #321 308d6886-2a25-486e-a1d1-1dcd0012e7bc)");
unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #321 a714f3f4-4a91-4821-8e92-12a8b3a0e67c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 39663078-a3cf-4377-ace1-f7e478fe751b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 a3a20065-a30c-44ae-bb00-1958eae840ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 e3e04770-0908-4c60-9ffb-30496d08501c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 e7259137-926c-4b59-a6ad-bf56d60637c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 e1dac4b1-ba17-466d-aadc-eb8578ed496e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 dbc87f94-0cdb-4df3-8b4b-71e464f92c7b)");

unit.assert_eq16(16'h09A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #321 dc972b4c-bb2e-43b1-a2d5-840feb28a0fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0284;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0345;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #322 ed05194f-d1bc-4cac-b46d-fe154a73e736)");
unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #322 c879cff2-0812-454e-b8d2-5eba0b5ee520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 ebfc44ce-6fd5-4d26-a8ef-7b56f163a1e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 76d361fd-a936-4ace-9745-462710838aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 0d875c34-1cac-420a-bc82-d986c3851ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 0da16d51-e5cf-4082-9863-ea9cf0b8cf39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 89ad14b2-4b61-4ba3-a0a0-d1d0dbd99769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 939b38e0-29ee-4295-a64f-3e2e775de96a)");

unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #322 24f4e237-274b-423e-abfb-7baad8d46011)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0286;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0798;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h0E14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #323 3e4c5d0b-8dae-4b9d-b63b-bc7d74f402c0)");
unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #323 6e402392-0db7-47cc-9fc3-9f7aea223df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 c4a70c7f-fc53-4bfd-98a1-8daf8abca7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 58a12bc0-0aed-402d-b545-0f192b2ea09c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 4c677587-3c2b-42ca-ae42-59abdcb1b0a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 88fa164c-8a0f-428b-ae98-1e9d9c84c2a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 db65206d-5d76-4e68-b602-1c1ba3248548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 8c59bcfb-5c45-4782-b493-cf1f0f7da8cf)");

unit.assert_eq16(16'h0E14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #323 6157ade3-c08f-4289-8d06-e38892c4ed71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0288;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h02CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #324 2dfadcef-8a18-4d3e-aff3-4c5e71ac9957)");
unit.assert_eq16(16'h00CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #324 c9b3ab2e-c20f-469f-8d9d-2e45ba4c2973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 ed4344a4-bcca-4bc3-b0a8-e1cc24abafb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 1329b9b1-09f2-4884-9182-fad7466f1262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 cd608461-0ba0-405e-9c0a-1e16091fbdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 fb66048f-df03-4f94-b919-0e22590d64bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 3b7d8bed-fc7a-4dd8-8214-2956dcfbda83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 b5aa840b-d7b1-44a1-b407-6dfc49fea6bd)");

unit.assert_eq16(16'h02CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #324 bf2982f6-1211-4d0d-a4c7-f0bed02f54fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h093E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h093E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #325 90e87387-48da-40a9-8d08-573875f6790c)");
unit.assert_eq16(16'h0E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #325 6171d762-c03b-4b84-8c90-f4ca3308ec23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 ebae1f34-b52e-4661-9077-89b3b17b24be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 82bfb7c8-48d8-4251-8486-035280a6f35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 3c8f3a33-7d9f-44be-b6c3-342b4c94fea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 b2987213-eab0-4cb1-bacd-61e37a5b2331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 9b62f255-77ad-4150-895e-c88ec3d60003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 d351b2cf-4ce0-4fd5-9bdd-e7ed50e471a4)");

unit.assert_eq16(16'h093E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #325 a45d57a1-9a95-4275-9f69-08a556452414)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0193;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h0193, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #326 e59dd3a0-8bcd-4497-8de1-5677d134e3ee)");
unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #326 8a688b4d-0292-4105-b596-f86b1acb0992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 e78c159a-701a-4869-b724-f93eef9b7d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 32ce6740-70d7-4238-ad47-004213ba25a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 0529d5c3-fd1d-43f2-9760-79e42749ae64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 081d5b12-db2c-4cbc-8176-313df27ae719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 3b2437ee-3c15-45ee-85d8-dfbcc194e757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 129621aa-dde9-49dd-bb27-7777d107fddd)");

unit.assert_eq16(16'h0193, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #326 c1547b98-b700-459c-8aa8-80c5ef87ff34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0377;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h02B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #327 22b9e98e-7f15-4c26-abd6-4a82e7b53e43)");
unit.assert_eq16(16'h0377, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #327 2fb7d169-5363-4d2e-b1f3-8c5c1d21455d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 bff6a7ff-26b8-428a-adc0-fc158d22cda4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 de8f7773-28b3-4063-8253-a8b2ca57cbfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 bc3443f5-95d9-4094-a7b8-e982a6799909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 4c4a826e-865e-4706-b77d-4a5c8e6a3918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 9eccd670-cb35-4732-b968-a9adffb6a6c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 0a1a4fa3-842f-4d9f-83dc-5e4e54e6c94b)");

unit.assert_eq16(16'h02B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #327 9f25678f-07a8-48e2-af20-918622a67b7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0290;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h0B0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #328 7edfd2ed-396b-4d0d-8502-3a07b5c63240)");
unit.assert_eq16(16'h0D7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #328 81b3d25c-0f7b-4a99-b561-5dd440888f64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 79f528fd-663f-4941-bf62-bcdf3f6d1d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 dddb0ada-1625-46f8-ab01-2d7e374d6bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 ee2ab071-c969-4603-b679-69cf2ad536ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 5e3370b7-faf9-4ac6-8c07-522650e222c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 a6b39105-9416-4474-93cd-9c8c5dfabe90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 c4c6100c-e9a3-4aff-a5b7-8272d534926c)");

unit.assert_eq16(16'h0B0E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #328 edc59e8a-1c52-4e63-9643-afc46c3782c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0292;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h0CFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #329 5d01fafb-9be9-4b8c-9e42-afef87046fb9)");
unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #329 14113318-e5b8-4a92-b0db-628219e85b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 e05b0bda-bce2-40a4-a369-65216c002703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 9109bfc6-a0f8-40ba-9e91-5f03ec85a722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 5cd43fe4-6753-4a10-912b-af4ceea32f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 7bad0ce7-270e-47ee-9661-0bfde51d85f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 1326ddca-0840-47d1-b6a8-99cf9d3c7aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 e2a0125e-9b35-4e79-9103-7b5b9b9983eb)");

unit.assert_eq16(16'h0CFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #329 995e9eeb-b1b2-4c59-bb4f-108d33bf572f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0294;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #330 69414ae9-6a76-4b5f-911a-a9002c07b081)");
unit.assert_eq16(16'h0A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #330 3498e023-2d89-4568-9e97-ce82ddd654b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 a0155ad6-4514-425c-8396-34514bf54e96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 a5b3164e-338c-4e8f-9859-906f2c128c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 ea2eb5f2-da84-43aa-82da-888d72fd81c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 3f2a659a-a3af-4997-94d7-bc55e876a2de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 4300dc13-2ec3-47ad-9c79-deaab94919d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 9550b816-bdf4-4540-a695-a0e6ef8911e9)");

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #330 2a5646da-cbbe-4b99-a8a8-d351d1e6c9d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0296;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h001F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h0D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #331 d9ec861c-998f-46dd-aae3-a97b61bc7b3a)");
unit.assert_eq16(16'h001F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #331 ba61595c-d338-428c-91d0-7594c41b3a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 aa5e6cf9-a154-4acf-899a-611c71583949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 6a70e048-0de7-4bef-96e0-30274be0a897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 5522cd11-6ae8-4228-941d-9d35746db51e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 c1d96b65-04b2-484e-8b61-36f19b55a408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 dec50bb0-b2eb-474b-adc7-1c4363493f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 c602a78b-5d27-4085-b030-b245ec69ad81)");

unit.assert_eq16(16'h0D67, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #331 b5fb273c-aef6-4c5b-a46c-1b7242cf6d25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0298;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h020D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h05D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #332 04cada90-f44e-47ad-a2f9-9277510c6155)");
unit.assert_eq16(16'h020D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #332 72143bc9-d18d-451e-ba46-cddbed9a3172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 4a3368ea-db62-49f9-ae51-11d3dab0c2c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 05d3b278-4e24-4416-babb-d362f99b47cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 cb695585-edd2-46c0-ae74-ba32f1e213e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 0a85dab3-6fca-40f7-a6e8-09c4525d6cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 ab6a3f9b-9c1a-41fb-a9e3-457b0a706e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 0d68d3a5-873d-4549-b531-4a443940c697)");

unit.assert_eq16(16'h05D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #332 f405b5bc-a953-46f8-a4c1-c8e4968f698e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0490;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h0490, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #333 e870774e-03dc-4416-a401-834b7ff4d2be)");
unit.assert_eq16(16'h0C3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #333 52c2bc4d-c9b4-459f-9f11-9ed68eeefcbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 d3eaf1cd-dd0c-45f4-ba15-e873046c234c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 0ca88294-868a-4921-ae95-f8d1c6a2c9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 60ac011d-be21-4f2a-8480-01587b83ba09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 6f5a9fb1-d393-4223-a72d-01c49eb62c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 c4664cf4-1ef1-4f9f-90f5-fe87d9392528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 bc8de8ae-aa90-4d6f-9f8f-445f0e346c45)");

unit.assert_eq16(16'h0490, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #333 1426ad0c-d789-4dfa-93ae-48ca80271f52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #334 6947b1e3-f3a4-4861-810b-ab4cb2a09a65)");
unit.assert_eq16(16'h0EBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #334 998d3465-b171-424c-8663-88ffe1127541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 0613cbf0-7b98-46ef-a8db-ff6b93a86038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 c796f0cb-1973-44a8-88bf-538627de748d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 4697edb1-b779-4bbc-b3fb-ed2f9ad5b476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 2102f93b-9b64-4f86-b993-49fcad9d018b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 55899c71-fbf5-49da-b758-3c22311aad1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 341629dc-cc03-4eeb-a22b-a3bd33c5af8c)");

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #334 d0ee8c6f-50a0-46a3-a99e-9c41a35fc5e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h096F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h096F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #335 5aa1eb5f-6954-4ec2-8a0b-fe901aaf253a)");
unit.assert_eq16(16'h01E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #335 e1df11e9-cc2d-4f86-a622-5ac1fb3e288e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 a44de17c-c9f7-464c-a707-25786d27e47e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 44bb42c0-b4a7-46bb-b4f4-8cd7c2202ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 ebf98bb7-c384-44c9-9c0d-32a638cd8c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 1a7e1f10-bb1b-41ab-8eb1-e75d3e16b68c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 df67f1db-cd8f-4d2a-b728-9d108184e416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 6d1e3a41-724a-47e3-86d5-985d6fcbccb3)");

unit.assert_eq16(16'h096F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #335 ed3ce5f2-9215-49cb-ae8d-c3c2bd8d45b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0051;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h0F6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #336 66bfa0e5-2680-4776-9410-b596ffc00d89)");
unit.assert_eq16(16'h0051, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #336 e301fe74-ef09-4092-9680-0fadd40f0e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 08b19ad0-0432-4c4e-ac0b-8a6093c64f30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 fd483b03-a9b2-4d1b-a068-76aed45567fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 a948056f-5b04-417f-9e13-f7cd097beee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 ca2fb4fe-b193-4e8d-bef3-38084a11d259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 fc7e60ee-0d34-4915-b7ee-49ac6791d0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 b9705936-243e-47b7-b0b9-ec8d0d8b97f5)");

unit.assert_eq16(16'h0F6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #336 8526324f-61b2-4798-a1e5-4768519ee2af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h048D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h048D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #337 35a1eb40-88e5-438f-afd1-b11ae613e0d0)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #337 f716ee12-a724-4012-b25a-56ecb549b0f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 af846798-2896-408c-a2ca-8d54d98fa49d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 27a8ae35-53e6-4db0-865b-5a3fc4956d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 3ea276c1-2a05-49c4-acbb-76232192386d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 7eb11c3c-5cbe-48bb-8d7a-d3ec8abf041b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 804ef42c-7a2c-4773-a44a-8d41ffd12b00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 df9e0564-b445-40bd-92f0-9f8eb11f4eae)");

unit.assert_eq16(16'h048D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #337 6dc4dc43-ee67-4790-ae73-df31a1bd5f9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0326;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h0E72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #338 0acd0174-377e-4b0d-88f8-d972b35d2b82)");
unit.assert_eq16(16'h0326, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #338 d3aaa9b6-086f-41e0-b8fe-a574d08c9803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 f9916fb7-d5eb-4168-a993-0fe9e7cbd838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 afdd54ed-69fe-4113-aab1-8392c2268ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 5fb55ee8-0bd8-4f7c-909a-24d5aac4f8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 85e0e5c5-ff8e-4d07-a709-a206e2422802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 beefa1f8-b1c3-43af-8f45-7a3d33b0178e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 a434c81c-0e3b-4d61-9078-c150bd8cc63f)");

unit.assert_eq16(16'h0E72, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #338 6e545dc1-b47a-4d1d-9d16-42465ecc03d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h0A6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #339 01cac3a4-8809-4456-ad63-7b554131a4b5)");
unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #339 f1d6e35e-888b-4a1c-a647-5388101a5aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 3ca5f640-cf41-4e88-8d11-5aeceaf9a1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 ee2f0ead-51e9-49a4-8e32-fdf08eaf1d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 e819337b-dadd-421f-b704-3216a0f7faef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 0c78f5de-5efe-419d-bc6e-09dfd05a7c5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 a2bb4f3c-bea9-44e4-89f8-5677eaab8f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 f77e768e-5e8c-4b52-826a-30e120bde377)");

unit.assert_eq16(16'h0A6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #339 e3899324-1dea-42d1-a2c4-89268944e0cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h0E80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #340 0519aab5-8ef8-4552-b31f-0a0c6f4d6db9)");
unit.assert_eq16(16'h03A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #340 27ba7059-e003-42d2-9ce0-6c7d51109e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 b10fd4ab-b828-4742-a1f4-b1e296f913d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 e48649f8-fa14-46e3-a3db-7f1204712226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 9532b8c0-b43d-4a10-ab52-ab244eed86ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 2063b914-8084-4c05-a67f-cf1a84c07ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 ab3cd622-ed81-446a-9938-5a6e56e4f736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 e4ab6dfb-e433-4302-ae1c-1a5d20d63f31)");

unit.assert_eq16(16'h0E80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #340 c0471f20-6ed0-4a22-aa89-09d141571856)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0717;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h0717, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #341 2bfe4604-1990-4aab-a36f-6962fc682403)");
unit.assert_eq16(16'h08D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #341 129c188e-0eae-4c62-98c3-0702b129fd53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 f1cb11c0-0452-4221-9d68-c52e39afed71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 75cec268-7de9-448b-bec4-52c8dbbe0577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 6227326b-8ae4-4804-9a30-c65f89a991ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 1bf5d98e-23c2-4cd0-8fff-c6265b8acefe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 10930813-f1de-41c4-8aec-045542541872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 40d9a7aa-1333-456d-bd9f-16007b93b92f)");

unit.assert_eq16(16'h0717, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #341 7fc8777f-78b9-45c1-8028-8e9bffe1b2e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h018E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #342 e5a91531-9496-4171-bb13-7caf0e50068b)");
unit.assert_eq16(16'h018E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #342 0ca83fa8-56bc-4075-aaf7-5a0205512d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 054ca53e-939b-4169-8056-b9dee872bed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 737545c4-89af-446f-ad87-d73c7e301d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 67630c52-d390-4819-b634-481fbe3d1d9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 c8d22aa4-f0b7-4305-b5ae-9b40b7242634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 020b70ee-08c2-4890-a4ee-b58846a5b88d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 b1abb691-8bd3-436c-8449-39d98a6a1a67)");

unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #342 4742e133-aa16-4254-b7c2-db6c2dc78e0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h044A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h0A94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #343 7159ceda-4a00-4f87-aefe-082d8deb0b0d)");
unit.assert_eq16(16'h044A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #343 52ce26b2-1cc0-4b2c-98d1-002504fe9d24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 6182fe5d-0ef9-4921-a754-46071e625a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 03324907-b723-4328-8ccd-628a93b464db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 a47d81b2-9931-4694-8a2f-d12ec5b05635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 8b49ba6e-94b0-4ce8-9cda-298d37e2f391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 0c45d6dc-0f8e-42f7-8e36-5f6d670dd6a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 e4b6c74f-7bb9-4bc7-8d02-fe8c188f9931)");

unit.assert_eq16(16'h0A94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #343 40a44e5a-4be2-4e2e-beff-6a9957cd0d2b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h0C95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #344 31154853-2e7e-4e63-8b70-dde5fda893f0)");
unit.assert_eq16(16'h04B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #344 d663f94a-51b5-4e7d-a0f5-17735a99012f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 b1ff703c-4d89-4991-94c4-d895c7f2ff35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 945fe2a9-e0aa-4a2d-b5a2-c7e944e83443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 d07ba0b5-2f60-433f-9232-a7d56bfb18c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 8afc475d-d819-4290-9cae-6c101ef6fead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 b4f0b2fc-2ffd-4431-8be6-5534d49a47ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 3d69df67-d8e7-4f0f-9d62-07208dd540c3)");

unit.assert_eq16(16'h0C95, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #344 e6c912a1-7040-4f4e-852b-b98c26216158)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0262;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h097F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #345 1546b2c6-a4e1-482a-9d73-65ca8ed192a8)");
unit.assert_eq16(16'h0262, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #345 25789425-0abb-40bb-8c49-cdcd2702ebbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 0b18d208-cc48-4808-a205-9dde5ef2cc88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 09374fff-ad85-483f-99e8-0c9bd3d7c98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 d47e99c4-2bf3-48e8-b5b7-dfde415824aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 d693a32e-cd2c-4158-a53a-a47c425b7e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 e7232ccc-050a-4aa4-bd40-7ed1a6f41aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 15f27a47-b949-455c-ad58-9d148fa95de1)");

unit.assert_eq16(16'h097F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #345 6404287d-a736-4b9c-9cc2-d25c31f263fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h066C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #346 615cf1a7-34fa-4262-a9a6-b0aee3846d48)");
unit.assert_eq16(16'h0C24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #346 99887124-f8c0-496d-b429-988db2dac08b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 4ed17221-97ed-4990-afcd-69c8cdb07f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 420fd957-c122-47c3-871a-cc00b9e5c1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 b3dee276-b470-4c98-9a7a-707fa6f48dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 5ddbca0c-91fb-40b0-a889-6992a767943f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 72391b85-aa1d-4d5c-b49c-6014a7c3772b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 bf3f9503-c32e-4cfb-a973-4699dc6f0930)");

unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #346 fdfa7ffc-4c07-4785-802b-53e5b325aa09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0250;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h07F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #347 a674252e-2df6-4994-9c38-eb57d4f894b9)");
unit.assert_eq16(16'h0250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #347 4ff44585-ad4c-47dd-a3cf-4dfc0727c762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 b09809ce-621c-4545-bbb9-7375de78e4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 5883f732-9227-4785-933e-b56ce4b52c0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 7294319c-7618-4009-aec6-5f178a5c60ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 0f8c55e9-b37b-4607-986c-007e8c85a149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 b813cb88-0de8-4d44-afd8-2102fb4c40ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 ec7270e9-12bf-4fa8-b094-6460d73d999a)");

unit.assert_eq16(16'h07F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #347 d9e4a7ab-b467-4104-a7f0-7f2edf3f7662)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'h08D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #348 88905f80-9dec-4f60-bf2c-2da8cbe768f6)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #348 717753bd-d54b-4947-8cb6-096d3551fed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 6f775d85-e213-42c3-b811-a6a65e2b6364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 97eed846-7278-403a-96ad-6d7b1bd8abfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 18c92c33-5b11-43f5-845d-4f4ad85568a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 4ed5713d-0fff-4f97-be65-a40bf6f9321f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 f882501e-37da-4adc-910d-88e7c9ce8729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 bff7d3dc-162b-4267-b39b-2b3ea0bd140f)");

unit.assert_eq16(16'h08D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #348 6946c410-9ce9-498e-b6fc-3b672c4afea6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0953;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h0953, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #349 93d66cff-b136-4cbf-86a1-52d43514c8ff)");
unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #349 7fbcd53d-bce5-407b-9baa-d2cbc2b35435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 c6d6cad7-c720-48cf-9f37-f2f363e176ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 2f9a9526-2e67-4007-b305-4cbda2e81688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 1c241ea2-542d-4c4e-91b8-06f89f8126a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 cd5f6244-88d0-4012-936f-f8feeb99d340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 5fd36d29-fe28-4b30-9fe0-c4070de8e70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 a38ee1f8-bbe3-4b9b-b262-3d9f29f15b72)");

unit.assert_eq16(16'h0953, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #349 93596a39-f778-4e9a-b7d3-9db9774c035f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0931;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h012D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h0931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #350 39f5ebd0-2f50-43dd-92ed-a27625e83eef)");
unit.assert_eq16(16'h012D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #350 6b9a95c5-e2da-42f7-bb75-d1779460787b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 717f0cdf-52d4-424b-8383-b3675d679877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 f3662670-bbb2-4e24-9632-7e5a38589191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 ce913f02-5b18-40cf-b29f-ea93d3862ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 b4d9fa6f-7b70-44aa-843d-70b221e65d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 7cda0125-d79e-43d7-89bb-f07d34d83fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 8b3c336c-d182-462b-9bdb-d6ca11382b5e)");

unit.assert_eq16(16'h0931, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #350 977b8aa6-24e2-4432-a6f2-c4238dc0eda1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0918;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h01BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #351 5d2a90e3-8741-40f8-b65c-a727782e00a3)");
unit.assert_eq16(16'h0918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #351 bd9e0bb5-4dad-4a03-9ce3-580166921e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 92093a36-5577-42e2-bb1c-9c748cd998cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 2002afa5-19e0-4a4b-9b4f-6ebdfb848adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 8fc14854-4f3e-474b-818d-171d8701486a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 f2027a1a-76a9-492c-817a-b851a2a0e185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 d8392bab-f27a-41b6-b4c5-0c083df030df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 0d33432b-1303-4917-a752-b19b310a45cd)");

unit.assert_eq16(16'h01BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #351 35334118-c311-4871-94e9-e654d82385d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0022;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h0022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #352 50a844c4-b40e-42ea-8294-0de31cd0c9ed)");
unit.assert_eq16(16'h0C38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #352 b71330ac-c93c-4a47-bfcc-99c5b98af81c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 8da24261-ee47-46a0-b11f-6349ee5bd5e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 a079f89b-10c1-4f87-a8ad-24e2b37e7231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 76fd1c4e-9a23-4cc8-9cc1-ff1080710403)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 aae86e51-a007-41a3-b508-606ed015bc67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 47d09bf1-934e-4b5b-8f1c-dcad8958184a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 41f57972-e5f5-4710-8271-a7c56d4b0dc7)");

unit.assert_eq16(16'h0022, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #352 5efa76b3-0627-4be1-9733-8eacf41c8238)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h013A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #353 020596ce-4865-4af4-a135-2c4d4c38b8eb)");
unit.assert_eq16(16'h0510, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #353 d682e022-2518-4d91-a039-00e1e1333266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 c1f1748f-b417-4c45-a0cd-988b9ecb9e3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 ba311a9a-6d35-4cdb-b7b1-5d93643420cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 bd677912-8912-4b43-8192-789af3f6f28b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 d7e10fe6-8153-4663-8272-8d9d560b5d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 1f3c88aa-d7cc-4426-b509-a855a106102e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 4185555a-3dd5-44be-9749-ad4db6de1e90)");

unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #353 424e7da9-890c-471d-8486-5d3350232b31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h0E34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #354 0fac29d2-c75b-4a7f-acac-b0bad91d769f)");
unit.assert_eq16(16'h06F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #354 2e46acd3-eb80-475f-a6ea-79fc62494c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 a54441e0-0715-4eda-bcbc-35a7954a9253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 14418219-de5b-4d61-b64b-9b574adc253a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 1a4e80d1-25e5-42f4-824f-16ac58976af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 8298a193-e4a5-468f-a659-ee60f275272c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 49f4f440-34b0-48e5-8bda-25ee083efede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 76dc5845-dab4-4410-8d2e-76c4afa19411)");

unit.assert_eq16(16'h0E34, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #354 6e7029a6-6d9d-4785-81e3-e7c9364a2e6e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h01A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #355 78c87a70-ed26-4461-873c-d000ae86bcad)");
unit.assert_eq16(16'h0E51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #355 75fa30a4-8e6a-4291-ab52-4629cbc5ce93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 cef3fafc-bf0e-4ba1-9d1f-fb4c4f627f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 d38f0c82-62d2-4b82-8545-a9caa99d3332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 97996cf9-0b89-460e-86a3-9e12e86a7f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 04689b4b-f3bc-445e-8835-0a5ed229e917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 2ddbd4cc-151c-4d08-be04-6dd750f70881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 00d4035f-0f84-443b-887d-6ca1101f2b79)");

unit.assert_eq16(16'h01A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #355 6d12e709-9b2e-4073-a58a-62a08f7ef6af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #356 b8f22473-b08f-485a-bfd2-d8a8ebd079cc)");
unit.assert_eq16(16'h0901, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #356 ea85b55f-620a-4fe5-9a85-6daa94ba6daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 70aeec0b-d3a3-4ba5-914c-2a6036593ca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 be32dfd5-000d-4459-b3da-91e12e8d0dba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 b2386458-820f-47e9-a8af-ef7d67c895e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 c5ec480e-a401-4185-a17c-e8f71e8d97a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 9ed88bc4-1e2b-4aa7-b0c2-31d7460d9a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 f05d5f61-55bc-4072-bffc-a3642722f52e)");

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #356 4bcb3d04-4d6c-48c9-9f10-5bf0361f093c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h00D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #357 3978ba1b-9123-4c8e-ad1d-ac3ee79d57ef)");
unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #357 48bd93f9-c29f-4a2f-8643-e7a175009381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 a067759c-e276-49ad-8ecb-bbf0e9fc53c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 f085911a-8f31-4c8c-820f-85e43d49566b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 9c2e0b9c-1cde-4b8a-8aba-723c20d53d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 e8b695fd-43bc-40cb-a7f7-c4fe834f25d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 311f8f32-b0c5-4d3b-9170-a83e0bc87d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 d3b25456-f210-4239-bc5f-0b0b83f6557d)");

unit.assert_eq16(16'h00D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #357 be1d6bfd-0ae0-4613-9c31-bf0f112dad8a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0479;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #358 e400146e-dbfe-458f-b110-7fb42c5b057e)");
unit.assert_eq16(16'h0B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #358 25c2d193-4a03-44dd-b974-d5d82ceb25f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 90baf301-c6cc-4529-b7bd-69b836b8840a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 cc93b160-de3a-4b12-96cd-75dbdc39e4ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 21fb3661-aaa2-469a-a6d2-57aa60f1e910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 b9bcb619-34ec-4fb0-b8ff-34b1e60f6ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 ab48d349-c3b1-4f54-ba44-d67bfdaaaced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 56776eac-4d54-4289-9b3a-99cfb3d006b1)");

unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #358 2ae47cc5-2aa1-4783-ac14-95b2133667b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h0E35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #359 215d0f9c-aca1-49a0-b11c-4e51a4c8b08d)");
unit.assert_eq16(16'h0CE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #359 5b4346bc-de54-4778-b21f-3b4123d63761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 0f43d948-4bfc-4374-9184-9f4a8a0c3082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 eccb43fe-37ca-451f-bd78-029967d41353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 faceb112-571d-4c3d-b0d6-8eb6d2c325bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 dc6de55c-5e86-41b1-ba0d-8845a98b5d4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 203dcaa7-8f2c-4383-af63-063dc95d9142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 c0a1b520-cbde-4d90-a260-350bf6ee0b2d)");

unit.assert_eq16(16'h0E35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #359 00cdf961-422e-403f-b2e2-ebf3821b7734)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0706;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h0706, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #360 e66000a0-6e45-49ef-b882-5a462ca5ac65)");
unit.assert_eq16(16'h0D99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #360 56aedcf9-b369-4c4a-b9cf-2c2f03093f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 4e9ff462-cc9f-4e4d-917c-0b45db8a2630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 fb80ccd4-31f8-4d31-b272-d5104bfb8118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 023917ff-97c9-41c5-9b2b-e87dbd11d118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 1968b597-d18e-49c4-90e7-9b6a036b8bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 888b1932-a983-4f28-9d1a-2ba4bb5da3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 ca8b0df4-3a98-400e-bbca-f8b74d8abc43)");

unit.assert_eq16(16'h0706, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #360 37b958cd-6894-4d2e-b266-ca89bf7b20bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0864;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h038B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h0864, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #361 24d069e1-3203-42c0-9ab4-72d853c167f0)");
unit.assert_eq16(16'h038B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #361 3b0106b3-cd57-4296-bf44-3793a0fa833d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 88796853-4fc1-4395-9dad-c6eb6be98b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 432b5c38-f9d1-48ac-aa71-2eff28aaeee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 e7c1b00d-91c2-4da9-a5f6-2b197584f744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 83fbf1dd-59a7-459a-a014-18b7cb93dc94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 2fa79b6c-47ac-4411-98f4-9a76d3969214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 62888eb0-4fa1-4e1f-8b03-82d685089123)");

unit.assert_eq16(16'h0864, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #361 3e8d8b5f-6365-4193-8256-dd784fe235cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h0C2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #362 1ad04556-26eb-4b87-891b-99ed7a834a08)");
unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #362 b87eb96e-664a-4635-9a6f-5b015002cdc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 c3a318ba-7153-4185-ab92-6d6025c35c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 1f66ea55-5978-47d4-b33a-9916b2c86277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 902346e0-cf59-45b0-94c9-5448a48dba38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 779eb062-5332-4bde-b071-0bcd445ba207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 4f461394-ddd3-41fc-9f6a-2a3905225415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 38387173-6de4-498d-a888-5cd64aefdb74)");

unit.assert_eq16(16'h0C2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #362 2913ee8c-4641-420c-bda8-547d431ff364)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h0CBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #363 48185e9c-f057-4068-90ea-5d5fc876ac78)");
unit.assert_eq16(16'h0C5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #363 76ba0e3e-7aad-4496-b6b7-4cc4d2df9f48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 56a6a1bb-68e6-42cb-b926-1f312118dfeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 ddca4f9a-e52b-4012-bc75-00497c3de449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 3dc5e56c-248b-46ef-b85a-cc29fe1d9e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 7a317554-01cf-4569-b3ed-1a7a1b8b2f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 6de8917d-8b08-496c-91bb-cfc9ebb20a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 54f531e9-afc7-47c6-8032-126475fd785c)");

unit.assert_eq16(16'h0CBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #363 bcdff25b-f454-417a-9b8b-b89777c30a53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0052;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h091A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #364 92228a70-308b-45b8-a138-69542d29f6be)");
unit.assert_eq16(16'h091A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #364 9e8f5361-6b98-43fa-807d-12d7f7676713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 b8c2307b-72ee-435f-9271-41b1ec272478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 5843b8ef-1157-4777-88c1-e11155e05989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 8fc56a54-1efb-4146-863c-d66250315b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 071b7036-aaf2-4d2a-80ea-44b398efde61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 1ca19055-607e-4b62-b275-41667c3239dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 24bbe306-48b7-49f5-b7b9-777beff6f661)");

unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #364 92e6729e-9cd3-49a1-8ec6-64daafc376e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h0454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #365 04d29602-19b1-4e95-a490-01094b14473d)");
unit.assert_eq16(16'h07A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #365 5ba8bebe-33f1-407f-a63c-34a685b785f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 1be516d5-f154-4487-8df5-4bc5a79a8759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 5cae24eb-226a-42ca-a9af-fd85e891587d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 552f88ee-b1c6-4be5-b2b5-e5f07ea5e12b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 629cc57c-4884-4468-b06a-d29013adb1de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 c1780b2a-970a-48a2-8153-5682d3b9ff9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 ece00bf6-5326-4254-bc20-654679fa3e9a)");

unit.assert_eq16(16'h0454, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #365 da5d7122-dff7-481e-a712-371970475549)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0553;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0842;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h0553, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #366 39c427ff-1bb5-4b13-94ec-8cac0f43c01c)");
unit.assert_eq16(16'h0842, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #366 a91f31a2-2ef4-43d5-9969-2ccc4681e148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 14e46ca1-7164-4e18-937c-3793fb8d1f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 d9ab5f82-8cba-43a8-9b01-e480cae873cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 084520fe-d76f-46a7-a07f-6f973161da26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 0e165e66-cad9-4d74-a5eb-124cb339337e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 75b26261-1aba-4893-ad07-230725ea5fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 72931e00-40ff-40c4-aeab-61c330795d22)");

unit.assert_eq16(16'h0553, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #366 3c60f8fd-0355-43f8-a089-42cb6b314eed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h059A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #367 cbfbea1d-0133-483b-aaee-aca558a659ba)");
unit.assert_eq16(16'h05F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #367 c6b58c71-3906-411f-a456-f4674677d60a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 50cf8350-02dc-47ed-9fd7-ba2c231c8f57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 f2ebe4d0-ef3c-49e9-8f29-23d6c5ab7895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 d03772ae-9a6f-491a-9967-b7e00f1a6991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 c69c1d34-d153-4fa1-b712-d2a2fa75fdbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 7142f644-bdef-4b0e-8dbb-fcd23efec4fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 6feeebdf-eaf4-4fa6-ae80-e9e67f4c470e)");

unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #367 5d2f0153-cbfa-42d6-9deb-6a4fd4923b9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #368 d3c06ffe-e628-4533-8bd2-cc0b6b0dfa80)");
unit.assert_eq16(16'h0F2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #368 e88af080-02d7-4dfb-ae5a-be3d92863487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 4f24ac73-7702-4714-aca7-a6714253e033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 5b5afff6-6cb0-4d20-9eea-020df20972c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 7c885426-e1c8-46a5-97db-ea6998be4cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 964e3d8c-318f-4d0b-b208-d668e86ac50d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 27249187-6cc0-472f-b582-215eb9d19d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 a4c2a259-b910-4342-9940-f39e9095fd71)");

unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #368 01d23193-f895-462b-9095-9756ac4e6c40)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h01D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #369 22c36b7a-8f4c-40d4-93c6-1b0fcbfb6f29)");
unit.assert_eq16(16'h01E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #369 e728e872-ae61-4fe0-8cfe-3f341594947e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 fc26b3ae-405d-4057-9551-28a2973d2102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 028a8837-3998-4c04-b4e1-7b191bc00e94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 05b0583d-d512-48df-b571-81b72fc1f11d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 b7dd619d-e331-4166-b7f8-18a328ced686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 3a6ff0ea-5b6f-4c64-8f04-2ab7df5a5a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 a2b5246b-1b3f-4bef-9fbd-89690b21b588)");

unit.assert_eq16(16'h01D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #369 3ab4d050-a6a6-41c7-884a-2349b0479f9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #370 01bed3e6-f11e-4a14-9e52-ff101945ed84)");
unit.assert_eq16(16'h0B9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #370 ed7bbf03-f179-4df5-8d4b-396a3443c491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 5746c5ab-fc58-407d-8fff-d6361fd887e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 ab523212-33ef-4e4f-853e-7bbc3fe8e08e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 983c115c-62e5-4b7f-b017-7fd434d9fde1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 1ee3a601-b8ac-441d-9c6a-cae4f247fc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 0ed64d2c-d6ed-4f86-b882-ca044b049ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 fe737175-15b2-4522-945b-effe977abee6)");

unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #370 8f6e1ac0-20f7-48ec-9984-655d9fe037d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h09B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #371 f692cb5b-6e2a-4524-9f7b-862bdcb132b5)");
unit.assert_eq16(16'h06BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #371 fb131d30-ea8e-4172-8c70-fbb3aed8e661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 c0559cd9-49ab-43c3-a155-bf1f7d9edf09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 6f05da02-ee78-4434-a3e9-10c06ecbd688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 1eb93f19-e89e-454a-b92e-abbeec6a277c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 450ef5c2-f201-4bb8-9ec9-2097f44aa435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 9be88f9d-ddab-4a98-bfba-79d519724e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 9e5fd647-5583-4ad1-b441-60c072d13049)");

unit.assert_eq16(16'h09B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #371 e38fc2ac-0252-4726-995f-fb4a1e1035a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h0F92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #372 1007a3f4-5df4-4768-b956-ee6aa0201358)");
unit.assert_eq16(16'h06DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #372 c1a8addc-501b-4607-bb05-6830a55bde8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 ea29fcb3-6135-425d-86c8-214ff1397719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 e12b905a-f262-46ae-ab43-848d573de674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 4dedb425-d24d-4fdf-85f8-1281d20481d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 5542e3eb-9d2f-4281-9f61-b29bab678a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 f546c034-035a-40f6-a50a-c48a9a317927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 6ec2ff7d-f486-42c2-bb71-e65ef7d707a8)");

unit.assert_eq16(16'h0F92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #372 759f7cd0-0eda-4f3b-820a-9b1da90a089f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h0A51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #373 b3b23ceb-10f8-46b2-83e8-c113a070b672)");
unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #373 4fa6f78e-e050-4cfc-a3d3-8830d1ca655e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 f72f80b3-a70e-442b-83c6-ebefa00c1c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 887d2fe8-88f0-4a24-a3df-4a10aeebd22b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 b6fa76e8-3a03-4bc2-978c-c076541a9b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 1ca0f5ae-3641-4e01-9bb9-1ed685662638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 69e4bcb4-c94c-492b-b8cf-4d3038ffa96d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 ec1ea9a8-6820-4a21-8b1d-51984e0f8ab4)");

unit.assert_eq16(16'h0A51, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #373 0a510774-3d3b-41b5-bee1-f4f9d4de835d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ED1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h0ED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #374 c33d0429-e621-4b7f-b21c-d79947286df6)");
unit.assert_eq16(16'h0A2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #374 dd366933-d01a-4905-97ae-02be997d76f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 1504d7ad-f456-4a67-83ef-17b302e3508c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 8215e902-0dcc-46b4-8ad3-a2f89a3427e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 277cabff-f653-4cd2-9b2a-523587a37348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 a3c1eb61-7dcc-4c8f-9b00-2cf1992bc5b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 aa85be5c-6377-45f7-981e-4344b1a03750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 9aa1f9d7-5d6e-4ffe-9cc8-39236950bd05)");

unit.assert_eq16(16'h0ED1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #374 719d6e43-1d24-46ea-aca8-53bd23ebf35a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h0CB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #375 c429bf7d-46e4-42de-ab78-d6475ac47871)");
unit.assert_eq16(16'h0EB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #375 b74b340c-28dc-4e0f-8ff4-6c39ad7d5fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 aeb1ec5c-a27e-4ddb-b336-9c182a9b1fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 aabd639f-623e-4dc6-861c-f1f8f1337390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 0da3a3b2-eb55-4eae-b6e8-34c9dafddcaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 d67549dc-0e8f-40c1-98f3-051aea153025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 90a70bb7-c942-4711-b1bb-531d8c2bc5b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 b6cd7020-c615-4a2f-b3bf-fc649dc263d5)");

unit.assert_eq16(16'h0CB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #375 1c4a02ca-0341-4fde-9d51-f82bcf96dcf5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h00F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #376 c8bf51dc-c18e-4762-9dc7-8a588a09c026)");
unit.assert_eq16(16'h0C99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #376 1e046315-f719-4e10-bb86-1f13bec3cbc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 a46130fc-cb36-4a8d-8655-86c2aaf13766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 f5faadf3-a685-4492-9cc8-04f4d06ef544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 668920ac-b965-4140-8819-bd51c303243c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 752d7b93-6b93-4723-a86e-3e9e7087e052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 e24cb821-6685-47f1-8b3b-0e92cfca616e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 d4509c99-3596-4499-9b36-b804317391c3)");

unit.assert_eq16(16'h00F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #376 bf82edd6-12a1-4f37-8f55-a8f6ac6d86a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0387;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #377 21f31a55-260f-4398-9626-4e7dd8cdbff7)");
unit.assert_eq16(16'h0387, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #377 e1860dad-d68a-4270-a9e3-18b5f4a2ece5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 51192cb6-4fde-4198-86c9-58ddc16f37e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 6982ee1a-beac-4ec2-8af8-323f97420641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 11a62e73-b902-4281-8cb9-59274273bfa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 9ba669bc-b639-4ee9-8bef-717f4c3c363d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 746df0bb-6945-4abc-8d3a-5ba35e1994b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 72c6cfed-21f1-4c04-973f-4b077543e69f)");

unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #377 34e6ff31-eeb7-4eaf-8106-167ec69211c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0820;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'h0820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #378 57039349-e348-4f80-b834-3a436e3efc9f)");
unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #378 71bc6b0c-c1d8-4857-94c9-bcedde3eaaaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 736fb145-e846-47df-abfd-d3dfb0f6f65e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 acb4cd57-6c9e-4999-82e1-d140ae328844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 e4311e76-550a-4ba7-b64c-9d4c4aa2275f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 3990530e-2a95-402c-8f78-71d2dcf56085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 d2350c9d-1440-4b22-aab4-db5ba4ee065f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 f9582bd0-9b07-4ad8-9a8a-f1efe568e46a)");

unit.assert_eq16(16'h0820, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #378 4b011b15-7e04-453f-bf73-13759a1ff4a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #379 81d4b727-9cfd-4435-ad5a-fe802ad1ed1d)");
unit.assert_eq16(16'h0A3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #379 f182dd0d-7b20-400d-b0d5-8c92aa37df0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 9f782408-9d48-409f-8fe3-743f33baee61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 aa4385f2-8bab-40ce-918d-acfb67b1ebdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 8a32c214-e68a-4684-bf41-ff31721c5f11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 ae376f4e-72f6-4c25-adc8-d99d9b08bfab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 ede1dc31-d6f2-4ee5-b8b0-a9cf78bad377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 2f058134-16d6-4e97-9097-41a2ca82f94c)");

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #379 aa599657-18d0-4b81-b915-ab46736357cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0403;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h0403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #380 076c2236-c8fb-468a-9075-79d557c6cdc5)");
unit.assert_eq16(16'h0C1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #380 301f9680-e2a0-4381-8e9a-6c8151270aba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 2b41870e-a95d-40d2-8a7b-16608533c56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 c10687a7-28cf-4747-a07d-8f7abd58ca06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 b16d96b1-0fb1-41df-91f7-fd7925f4948c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 45ec08ce-2a70-474c-81c5-eccf929c88e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 da81621f-d450-4935-9e28-753c2ab09b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 edcc76c2-6522-430b-8aee-ef5268ab65f2)");

unit.assert_eq16(16'h0403, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #380 d35dc733-9b25-4481-8506-4a75d74e88db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h0880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #381 3530b8ff-80ef-4eab-a3ac-10d6b810db5f)");
unit.assert_eq16(16'h0C1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #381 1faff07f-1935-4d9c-bedc-e99804e04b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 8856954b-1038-4d5f-a832-5721cfa84442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 c01d1b9d-d9b3-45fa-909f-4e5a6d863014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 373a24da-65a6-4727-9223-a80952f18da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 151e51b8-4a21-454a-aa82-1595dbcbd22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 784cbf85-0d60-4e3c-ad0e-5fb71b23693f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 6b56da9c-f005-4888-8332-18e249d7d512)");

unit.assert_eq16(16'h0880, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #381 ecf274c6-a3c5-45ef-98e8-da5f9f41885b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h055E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'h055E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #382 20509438-064e-4d22-97c5-49f65a065502)");
unit.assert_eq16(16'h0F63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #382 0074262c-821e-4c19-b6f0-c0ee3228c385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 d0302af0-512b-4df2-acbd-7e49f90bf546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 510acf11-5e79-4c79-aff5-9e11a83f30b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 a760a35c-a042-45c1-af86-f3bdc8d81629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 613a64e5-b058-4340-a9d9-45341b27142d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 42c5a3fe-8d82-4970-bca7-d5c86fbbf544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 a0e6f329-d1bf-49b7-abd9-b42a06ae3b3d)");

unit.assert_eq16(16'h055E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #382 4dafce25-e135-471c-9ab3-b27c2822d541)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h075C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h07FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #383 381c834c-1f17-4e53-93d3-f43f15cf0e55)");
unit.assert_eq16(16'h075C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #383 e40bb77f-363a-4d3f-bc18-0b16e7d50526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 940da028-32b7-4e8d-af17-ef790c9b124b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 4bf7ff92-1d6c-48a0-88c0-9bf65e131a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 d377d4b7-21a4-4d6e-afb2-6df361529b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 612c193e-9a1f-4d54-8dae-22456049fb37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 56ac79bd-720c-499f-bf52-a857b076505e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 db52f7fa-e836-4329-997b-4e516ed69167)");

unit.assert_eq16(16'h07FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #383 9e280bb8-5cb1-4f6f-85e4-52302580ac4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0300;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h091F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h0CF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #384 383b7e30-db1a-460f-b073-07688bfc0896)");
unit.assert_eq16(16'h091F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #384 49860f61-262a-4684-aea9-ebb82e957580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 ddf519c9-36d4-4e59-8d24-e75824cb9470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 133e0db7-22e9-4aa5-ae76-449bd4382a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 f9ff12f9-36a1-4fb9-92eb-f8aeb1cf7b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 4f6aebf5-d69c-4bc8-9f6d-45abc64d57c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 79919fd2-a142-4c48-890b-c26bab331a78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 e9806796-0e4f-457e-9a62-2f858d47a8be)");

unit.assert_eq16(16'h0CF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #384 f1ab44b7-721f-4e05-8ca1-541bf0d41f1a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0302;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0868;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #385 119827cd-3249-48d4-a9b2-08f4a40317b5)");
unit.assert_eq16(16'h0AE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #385 ba644971-8dab-4efc-b4d1-e54ef84cde83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 fbf42181-0c06-4dda-ace6-0a2ae72811e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 8c1bb9a1-98ee-4937-9881-d0946a066169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 62a5930a-81b6-4ad1-a5d1-38ee5b0e9ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 f239621b-3afb-4eef-8c7d-6ead66283214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 febadb50-03f7-4e4b-a36d-d74f15f3a677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 81e8d6c8-bd60-49bb-9843-3a498c1761ed)");

unit.assert_eq16(16'h0868, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #385 0212bb1c-6f70-42e6-b549-e7a6b7143d21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0304;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h0F07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #386 2585ac80-5c7e-486c-b72d-26b7bb09bdb0)");
unit.assert_eq16(16'h05D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #386 8d008b44-309d-48a0-b9c5-f3a1a659e5eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 b2e6e396-cf91-41cc-87e7-758c6b82c165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 6647bce6-d465-4b29-8751-8cfc1f7bc801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 c837a418-dc84-4b9a-b748-b7c3ff113408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 b3463e24-0cd1-47e6-b6d4-d6edeeb8d552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 f68813ea-f8ce-422b-9b21-e995e032ff4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 96f168aa-086d-44fc-8e56-044150c1cbd6)");

unit.assert_eq16(16'h0F07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #386 a40b41e1-7924-4742-89f2-6d679565b8ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0306;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'h04A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #387 e7c940a0-b517-42e2-bedb-65a81fd1c1e4)");
unit.assert_eq16(16'h09A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #387 8ee7d354-dd01-44b8-bd8c-cfacbfbd66d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 cc06d4e4-6117-41dc-9c04-958217f13b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 23b8fbef-e60e-46bc-bff3-64327315109a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 c82f6db0-c2c0-49e2-8b82-2cf546b7c8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 32192cc7-ce47-42de-b82f-d6bfcd34284e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 14058aae-6421-4a5f-8806-12f31f883870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 4832375f-2189-47e3-af3e-ea8cfcce0238)");

unit.assert_eq16(16'h04A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #387 75b7a578-3815-4a8b-89b4-ba0af2be1e7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0308;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h065C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h0EE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #388 af34bd7e-282d-492b-9b12-13ade27e4bb2)");
unit.assert_eq16(16'h065C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #388 f8e7df38-f379-4161-b39c-c6191730c7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 ac61f258-2473-4417-b8bb-c3f34d83ae74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 4deb80dd-02ee-4041-87a5-63e845f2577e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 7d1b0303-1a5d-4ad3-a465-29bcfb0f4fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 3d19903e-8c08-4632-ab75-dcfebec8db78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 bd4c8a06-78dc-482c-8eb5-e32753630d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 03dd8746-a14d-42ee-afc7-8fe000423752)");

unit.assert_eq16(16'h0EE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #388 5e918c82-f16c-436a-a598-4fd74e8563a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h0FFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #389 909311e2-4814-402c-a5df-a98f3870b7cb)");
unit.assert_eq16(16'h077D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #389 d345fa6c-60e9-4c8e-9bcd-3c60667dc5ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 dd79db9c-81f2-4826-af0c-1502f999e5d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 02912d99-0133-488e-aca8-03a71dae15e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 2480ce02-5ce3-4aca-8a5e-80756a9bf425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 ffd9e3bb-b90a-425e-a0e2-d50844ee8792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 634f2284-e363-4485-9a1b-723270894d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 d8ff44c7-83ed-41c8-8cb6-e90095575e1c)");

unit.assert_eq16(16'h0FFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #389 52dec0d0-5693-431a-a8a9-b97b6f3d7519)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0663;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #390 fad802e0-9d5b-4fc9-ad35-bc4ea062c74b)");
unit.assert_eq16(16'h01A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #390 7c46a330-291d-4d0d-960a-de8f428b998f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 cbeea235-91c8-4177-af6d-5cf76c988f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 459befc3-1407-4ef9-a7dc-81e182b7d14c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 1dced93a-19db-4f02-9fb2-3f1a5ed699cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 ade22e05-e89e-4bea-aae3-e467f98383c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 68b1637e-54d9-4f11-8bc1-6a995e1dade0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 cb966005-77ba-4ec5-92e2-ff0e0c29d199)");

unit.assert_eq16(16'h0663, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #390 0c1ebf7a-12af-4be6-9c69-83c83f250d4e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h072C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h05C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #391 63bdc253-a169-4636-8afc-487c44bc8517)");
unit.assert_eq16(16'h072C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #391 7de022bf-37ad-42b5-b181-66b568a3b490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 757549c5-2ba4-4e40-86be-d3f414a143cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 eb02f8cd-2b43-44f8-b4f0-9ea2e7791ed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 0366d087-81e8-4b64-97f4-7fac9fd901e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 1f6c8f94-b7bc-4bb4-acb9-1814a6734016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 aa970231-d2ac-480e-bad2-f12490ff2502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 f5950f5b-a146-49b4-8946-f0b93d0472bf)");

unit.assert_eq16(16'h05C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #391 865dadfa-233a-4aca-8fb9-9ba0d4b0d822)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0310;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h0BF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #392 3adc254f-57a8-4516-95cc-e54956687ed1)");
unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #392 68768b8a-ee93-4600-81fd-ecf04bf11717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 32476e79-d2ae-476f-aa89-8550e489c5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 80e998d5-6136-43d9-9cf0-a0a5c7aff0f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 a41ddbca-3690-4204-ab89-ff681661460d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 bbd95b5b-c178-48a7-af6d-a2f4862a13b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 280f120f-ca32-465e-9946-903a87a6b56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 91a14429-f09e-40b1-b55c-9cf66601c508)");

unit.assert_eq16(16'h0BF4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #392 ca8d0047-d48c-476c-8d61-411a937cb37a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0312;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h05AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #393 00c7d196-ad39-4e71-b392-6a5639eabcec)");
unit.assert_eq16(16'h0F83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #393 21f20d9c-4efc-4e9b-adcc-8dc25f713aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 fcdf5e6f-ce75-41b7-8126-703b50389ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 f9aad9e2-4e30-480d-9821-9239de626179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 9e1e44ff-8c04-4268-8af6-07bbcce00368)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 d79e880e-265d-41e9-897a-1e91ca99af35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 7c81af5b-407a-47bb-88f7-854b53b95afa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 fa34937d-d63e-444a-8c8d-ee9c061f3bd9)");

unit.assert_eq16(16'h05AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #393 0504201c-4d96-4600-8008-5ed0eb88943b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0314;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0436;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h0436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #394 792ebcfa-ff76-4d7a-a23f-5d3293a74569)");
unit.assert_eq16(16'h0E69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #394 4f9e1a2f-9d38-40da-86d8-65fe5d74f14e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 75b32d8b-8e78-49aa-b6b6-b310797d5d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 4936791b-8251-414e-a2ce-de208eca7a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 7b1c9f92-9280-4a7a-9f6d-88f5e8aa7c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 24cce176-813d-4898-9203-245a1d7bbcde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 554ffbbf-04e5-4b34-b67d-6a8f3490f380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 9586f1bc-4fea-45e9-8188-789b0d45a487)");

unit.assert_eq16(16'h0436, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #394 e69cda6b-289b-4c50-a923-a40c6ff4229e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0316;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0091;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'h0091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #395 4622921e-04d9-4851-8ecf-e17a2499231d)");
unit.assert_eq16(16'h04F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #395 c72363e9-0a58-4873-9adf-e9879b3990ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 b1aa7f70-3488-4662-943a-345a8866d56f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 dd07114c-c75b-45a1-8201-54f4c6770a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 03422c03-7bea-4a5f-aeb5-d0843b6bb4bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 7d13fdf1-47a6-4608-8f5e-bfe15f79fc84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 9b825fbd-1ff6-4e12-80cf-43540559f056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 5733d674-076c-43d5-bf21-904149c1c5dd)");

unit.assert_eq16(16'h0091, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #395 24097604-7461-4f36-9649-76f4912344eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0318;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0841;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h0B2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #396 5f6440f7-320a-41ed-80c7-243f0f1c528e)");
unit.assert_eq16(16'h0841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #396 77c467af-7d90-4509-8012-92fdcac90203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 8e7556e5-83ce-4db1-aea6-0af84a02ca3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 bcf32070-6701-469e-929e-93cfb0756c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 43b54964-f528-435c-a655-154985a04216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 1bd8c978-28da-4a2d-93c4-26ea4fe1381b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 c37a44a8-838e-4c03-a5d6-76b56e1f09dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 0a6321ce-a67e-4b15-89fe-3912d0cc0bdd)");

unit.assert_eq16(16'h0B2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #396 65440f16-51a4-4784-bd03-787c7a49d531)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h05D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #397 227cbf90-5d31-4fa5-b0df-c3844d66e491)");
unit.assert_eq16(16'h0DC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #397 7610031e-c04b-4e45-88e4-0967021e0efe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 0fa47ea4-86da-4977-9326-1f3964ff46ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 5b3253d1-f01f-4b5a-ab4c-44018f03d2e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 c12c663b-a463-470c-890d-0415400fe951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 7c9bd36c-9b53-4cad-9cd4-98e2718dff99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 4bf6106c-390d-4e82-8e8f-3c0da8cb175c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 be97127b-0315-460b-aa16-d9b7a23ae1dd)");

unit.assert_eq16(16'h05D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #397 fc30d5c3-b324-4628-87bb-1a7326c6eef7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #398 4e885301-e4d5-4ac2-9533-c745b26df981)");
unit.assert_eq16(16'h0457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #398 ec36b28d-e39c-4ecf-bcfc-b09b224970c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 382ee352-5e7d-4734-9bb5-489d39684c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 23b44539-0484-47fc-af5e-18e03b6c4841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 7ff7d13f-0bba-4ae8-bd96-1f4406475261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 94f4131a-b3f4-4120-8a49-68aa43855bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 6389fc65-face-4612-a9c6-4f7b1d2c1313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 eafd08c3-d40d-443d-a467-799fe8e19b08)");

unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #398 dc16c058-2d42-425e-a43c-be34b10c727c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h0BFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #399 e36e5788-62be-4fc6-8ce0-0f814d01afc0)");
unit.assert_eq16(16'h0B72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #399 44aecdce-39fb-44fb-a26d-be89ad197027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 fbd87737-cd6f-4f5f-bf86-e59881aeba15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 a436fa93-00de-43ee-946b-0d3de0ddcf9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 225671dc-5be4-4946-8022-5be8a7d66136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 9e344821-b7be-477b-8aac-af4a8fa44a25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 c0d711d7-8e1d-4691-b9ec-ba0f02a2bdf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 ab16a780-079a-420f-9f6b-8002b136a413)");

unit.assert_eq16(16'h0BFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #399 c1af27ed-fd15-4f75-80e6-d43db9105597)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0320;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h03FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #400 cb661a99-3539-4dce-b661-dc879b60232b)");
unit.assert_eq16(16'h08BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #400 826a7b10-c5f0-4758-89af-b4aa685ccc7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 d0bb1e32-07bd-4d2c-b55b-29493fc6865c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 3c4db908-11c7-4588-949e-a379be9f441e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 f8a3756e-9f28-4a77-9f4f-c55cabd48f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 a3e090ad-ba5f-4e38-aff9-b02215c6a016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 576cd742-8d5c-41cd-b467-f74808413018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 9ddc0bda-d2a7-4833-9c39-55fbb312dbff)");

unit.assert_eq16(16'h03FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #400 97ec8ecc-6c10-47e5-999b-cd76a45e8db2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0322;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #401 2de8e68f-3abb-41ff-bc6c-cd9c359772a1)");
unit.assert_eq16(16'h06E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #401 df0ccb81-632f-4b03-9ddd-723be5fff4de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 2139fb69-8a25-402d-823e-1947e03f0f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 33a51c0e-3962-4ecf-b63e-7b09e30255a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 c34128b2-8e47-416b-b737-47baa0ac85db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 58cf0aa5-fe54-45f5-aa01-6f4db1c9c888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 42b5b500-31eb-4b71-8d52-6312b8c26966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 e7d8986f-976b-4beb-97b5-4ea032e3052d)");

unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #401 f4a1f229-b78f-4022-b8f3-1da12dc4dcd8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0324;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ACD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h0ACD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #402 a6789578-d6f0-451b-86f3-1280d779af34)");
unit.assert_eq16(16'h0A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #402 6e4a57b6-c0d6-4e1f-bb2f-3c554269419e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 08caf55e-2a43-410e-9e76-8d34d862a533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 69c196ac-de10-4020-9aec-83ca3c0a8fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 81daa9c4-6282-4084-8d30-6a9a36f75b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 c93e594c-4b7b-4b06-8954-f41e256e8479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 ebf11d9f-7da7-472e-9552-e6bc0f626aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 91661cb8-0f67-49cf-a3ad-ebb75c10084a)");

unit.assert_eq16(16'h0ACD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #402 3742b944-e97a-4dab-bea9-22980c618314)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0326;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0811;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h0B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #403 70a2130f-59e9-4b01-b5b9-468fd33e6819)");
unit.assert_eq16(16'h0811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #403 4dc30d2c-e665-42c7-92d3-c3e9ec273f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 b2e3b2ef-bcbd-4a6d-b188-60fc2e0bafcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 c0c202e8-cb59-462b-ae6e-43b1eecd9f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 a69b5b86-92d4-49dc-8bac-95de43906823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 c4394ac2-e3be-4049-b47a-edc9d526f0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 487be29a-bde9-4a26-bbc1-92829d9bb292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 d42c46d7-900b-4b05-a38a-a97906cb8ec1)");

unit.assert_eq16(16'h0B29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #403 6ac079e3-f8ae-4bfc-ad15-8735c2152927)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0328;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0566;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h0FBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #404 a2d858df-594c-4166-8cd7-ce6a81c5621b)");
unit.assert_eq16(16'h0566, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #404 9d054d00-b863-4253-970e-5538e7f48876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 694947c1-d328-49ba-be43-dd46bddaec6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 ccac26ba-2801-4395-9fcc-2d2357ef8e4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 60109384-2e59-4788-a46f-fbee34af1146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 8601f118-1dc2-4764-8a24-25a314f03a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 b29fec54-830b-4036-94b0-b4848a03be05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 89ea6db3-7703-4d2a-aa4f-1dacc0442e19)");

unit.assert_eq16(16'h0FBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #404 c008285c-ed7b-4179-b2b6-240f27ee4332)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h091C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h059A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h091C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #405 0005813b-80cd-4c6b-8b1e-ab4a32ef8895)");
unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #405 89a0356a-c1fa-45e2-b9b4-20273df9bb01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 49fbdc00-157f-413f-86e4-2539feb6f99b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 aab92e95-df5f-4380-88db-1f3c52f7aa43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 fbf4bded-2704-4d45-a564-59021ea29ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 67b7d330-46ac-4ef2-89a0-837f17a8335a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 2633f881-988c-4dce-a44a-7ab864fb928f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 bf15ca5a-1e43-476a-a05a-7bb698434d56)");

unit.assert_eq16(16'h091C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #405 f7485444-b18d-4a5c-b524-1a3aa1544098)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'h0B46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #406 8d5e9379-a80a-40a9-9e5c-3a7df05e0fa6)");
unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #406 d7941888-83fb-4b14-babf-28f8f5a1653b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 9a1eb278-45d5-40fd-8e70-a82d87d435e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 fb54fa20-dee8-4e1d-b7ae-3c7a9d077437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 8df5386d-e0fb-4fd3-91a3-0eff6f825070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 0af3c325-4336-4872-b391-2f94c1bbb370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 861196d4-35ec-4f9e-ac02-1cfb500ffbab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 a8d038b7-7d0e-4d41-89fa-01ed4b2f50bf)");

unit.assert_eq16(16'h0B46, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #406 6245e51d-9cb5-45e6-9ea1-d3ff335d6aaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #407 135cdc95-f957-41df-b5bc-32264882fa03)");
unit.assert_eq16(16'h05E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #407 ec7b4231-de37-4c07-a2b9-465c07a7b79a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 d32c9d06-4316-4aa0-8681-5e62501c1714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 a9f669c6-fb2a-4d41-b84d-5b39c5540092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 4e627b4f-a3b9-48bd-be1a-9098a760779f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 ddd1d6f6-8395-4be3-bab4-697fe9ee823d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 596484b0-7037-4596-924f-7dde8246cc4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 71361605-15db-4e38-bfe8-f5cc9d70cccd)");

unit.assert_eq16(16'h0A41, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #407 9e3c545e-4f23-4a73-9cfd-048f1a8fb6d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0330;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h0B14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #408 1212ca38-0ca4-41d0-9b0f-99e5c69bfa18)");
unit.assert_eq16(16'h01C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #408 37acb9f0-4d31-414d-820c-21f47394c33c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 e3645407-742d-4479-b7d8-fe8509cd2937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 524b6e37-385c-4ed9-986f-7542f347bf41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 1810c69a-1524-4cdd-b516-fb1d327643e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 3c597312-6fbb-44a5-8056-7cfa05789bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 9faf01b8-fd29-4694-b469-3d6a61c47828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 e847fb47-4cad-43db-b506-8c991f897b6b)");

unit.assert_eq16(16'h0B14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #408 56093c20-02b8-4474-aedc-c97204e6453b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0332;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0697;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h09A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #409 a4225559-96df-4c54-9bbe-1456164be653)");
unit.assert_eq16(16'h0697, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #409 63e8807e-6844-4352-99f6-ca44f8c215bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 0cb54a4d-cee2-48d7-ab7a-67a0ed74e4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 832e8687-df5b-4455-8f04-40ca7339803b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 bb1f65b7-21e2-4173-b629-c13a50f03686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 0e36f30a-30fa-4152-9064-4a7fbe20633f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 cd457b64-efb3-47e1-beaa-6d7ecb38181c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 59147e1a-8455-4242-aead-b94acf80bf4c)");

unit.assert_eq16(16'h09A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #409 66935d7c-bd87-4de4-a121-d97b5ff59a7c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0334;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0203;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'h0203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #410 581d8e25-6a41-4256-858b-c6dc76f87ec5)");
unit.assert_eq16(16'h042A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #410 ae1bd125-08bb-4a38-80de-41a867ce048e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 45a17316-3bd1-467b-8635-227c0c749b16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 157a0fa7-f1fb-4a1f-aed4-0b47e28d41f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 967ee3e9-9e9f-406d-9f7a-d0e7acfffe79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 286093ad-6032-4a32-8da9-6a7e02ec2aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 5a8bd972-59f8-4d93-9ca9-53cbf15beba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 4f17c384-4965-481e-95d5-614f314e66f7)");

unit.assert_eq16(16'h0203, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #410 e6eaed78-eaf4-4f9e-ad21-f825de963891)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0336;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0341;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #411 262ab315-813b-44a4-b7de-48ec00eeeeb4)");
unit.assert_eq16(16'h08CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #411 fb50de32-bac2-4350-9f26-4e141b43a595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 d4e419cf-16c6-4616-9b6e-61ea935e8d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 ae280604-71e7-4033-8c2e-cf026ad8d6ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 111c8ddf-9823-4d52-8cda-5496a1002ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 dacf27f9-983b-420c-a79a-cf90df34b9f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 c6fa0404-c7a5-4400-907a-6546c06e73fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 6c5385dc-63a6-4b12-8684-d5f9a670bd77)");

unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #411 4cf20d72-7076-4008-a2f5-45d9e8430f15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0338;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h05F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #412 65acc466-4c05-46dc-9ec9-0e629722dae8)");
unit.assert_eq16(16'h08C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #412 c4669c50-1f67-4b12-a22b-947852d46153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 667f2978-a4dc-4cf8-ab8d-1d4b2398e095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 368517fe-f464-4491-af0a-1123868b8882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 666fdfea-5df7-45ec-8568-0807708217d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 667b95ff-3c72-4a8d-8d32-eba978192d1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 84fba19d-9777-45c8-8073-2ab602ba412f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 dd452566-7596-475c-a398-fbf94958a0e1)");

unit.assert_eq16(16'h05F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #412 760022ab-dd53-489f-b4ba-d2fbf2e21ebd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0757;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h0757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #413 fd9c828f-2d04-49ec-ab36-10d5ef307a08)");
unit.assert_eq16(16'h05F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #413 e79fc7c8-eb2c-4e15-8ce5-54c88b69432e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 92c6c2e7-531f-40e6-9ad2-2cce711d8ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 05d2f0a5-cb44-4183-9ff6-747cdc7ce68d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 509b90aa-711b-4587-91b1-8d6bedb7856f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 0bd8b43c-933f-409d-8835-72cc4a525b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 a91aac0c-61ad-4515-996d-1ede19fcb284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 cb185505-be5a-436e-a08c-7109e8efd03c)");

unit.assert_eq16(16'h0757, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #413 a296a712-0f89-4449-a291-4ea2d0815569)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0607;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #414 735c5302-46c9-48dc-9840-e085684e5f4e)");
unit.assert_eq16(16'h0A83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #414 f3b070be-a771-4bfe-b4a2-551cca4f1558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 fcea771a-2b25-49da-b299-3178165cd22e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 66f3433b-4436-49db-9441-2ef2668be21e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 4cc380b1-1346-4365-99be-8ac04bb3b9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 85291805-f3d5-4d6d-9855-ed27fa9318df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 314e6684-2b76-46b7-8569-2ec67b97c364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 15c4f2ac-24ad-4b4d-a9d1-02b5f640ec46)");

unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #414 fa100ac7-9469-4ada-b914-bdbdf6b6bc8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0904;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'h0904, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #415 6cac1257-44e9-4134-9c3c-355a43c1d19e)");
unit.assert_eq16(16'h0B92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #415 a40eb8ac-7414-4c72-80f3-11b7da4d87c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 9d494e6f-67b1-43e1-b839-d6aeb4848cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 afacbf68-52b5-4ddf-8ee6-ced5b652d876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 f9da78ab-2afd-4da3-b645-c37b514826e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 cb821144-9c9e-4d44-b40d-193fd2d786a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 5f53154e-6694-4091-bd0a-e3f93fc61b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 31705c43-8b74-432e-ab9e-6a620fc43eb5)");

unit.assert_eq16(16'h0904, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #415 256bb776-bcfc-4fb4-a8f2-bcf706962017)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0340;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'h0F11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #416 aba41594-30f1-4900-8dce-9fa6691dec92)");
unit.assert_eq16(16'h0A4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #416 32ddeb52-b999-48a6-8a6a-ecfb78d8ab91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 ac65c101-cb78-44d6-a93c-bb6a63b172a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 c4012736-9fec-4c0e-a860-186292a3a14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 bb4d7feb-bac5-4710-9db0-696533573fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 f0ef710e-d4bb-47b7-b432-5f4c44d710bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 b6327387-4f5a-4c94-b88f-2e8371946a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 5ff7f33f-148e-4471-8eb3-f05d786568a0)");

unit.assert_eq16(16'h0F11, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #416 005c45b4-2187-40d3-82dd-b2f8c64d29af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0342;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0801;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'h0801, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #417 8d563101-93dc-43a0-a3d1-f9683408fada)");
unit.assert_eq16(16'h01C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #417 bcc0b2c3-f6cb-47e8-ade0-8daa099075f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 c6ec16d7-d632-4a53-afd1-03324b647bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 5aa583c1-850f-4be1-8192-a377b6101fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 113ef8ae-3225-4505-bb1f-990cf45ef53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 3802cbaa-a635-4cea-9252-9318537e4cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 dcbe2199-4d8a-43d3-931e-eaf96582c1d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 5f613f63-2299-4987-83da-7d08d9328df9)");

unit.assert_eq16(16'h0801, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #417 09c05364-1ead-4da5-a2dc-c22bbb36e86b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0344;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #418 c2c1cdcc-9178-4bb6-a8a9-f7c5e7646dca)");
unit.assert_eq16(16'h08F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #418 2e860f82-1c2f-4970-97aa-7631d2c574dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 12abadd6-64ba-4a97-be83-8ee1bf717ed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 90ab2864-fc13-42e5-abb8-ca2f630ef3d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 5e24f982-292c-4fca-a037-865514875244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 96091702-6463-4b5c-a144-0af6cbc242a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 ac07e1b6-8647-41c3-8286-725fc37cef2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 6ac311dd-44d8-45e4-a7dd-26bb70ea50b1)");

unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #418 77450ddb-ff3a-46c4-a0fd-24ffbe22e5ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0346;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h011F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #419 17e615b1-ef6e-4e53-838f-f69543b66fb7)");
unit.assert_eq16(16'h0EF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #419 f5c69bfb-79a8-4091-b931-952d0edbb808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 c372649f-d459-4cae-b74d-41279efd847a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 dbb62185-7fcf-4b7f-a09a-c37dad00fe29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 e2e546ea-31cb-49d6-95c5-946e1f962158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 53f14cf3-7853-460f-a05f-352032aed7c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 34f358a1-236b-43b1-ab5a-e1e85d64d91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 7f1cc2da-0346-4192-91bf-553a7d7eb0ba)");

unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #419 411b53c3-0df4-44a2-846b-9e891ea242ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0348;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'h0EBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #420 f44dda48-4e18-4442-a661-a5056a91f901)");
unit.assert_eq16(16'h09B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #420 a79b4796-c8eb-4bf7-89f5-01177a5e99f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 bde3170f-a793-49ef-98b6-646270d952e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 fa20fb2c-6371-409a-9847-03017a902322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 715f6f6a-0378-40dd-9082-3136b685fa7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 52f10944-0525-4aa6-875d-c087d07453fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 ea4c9a11-1366-4e1b-8e34-5185c52b0cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 b8c88bfa-104a-4173-8b48-31cbae0060ff)");

unit.assert_eq16(16'h0EBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #420 500e2d66-0421-45e7-9f0f-0b368aecd8b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h07CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #421 ded6371a-4558-44a0-81c0-eccf3578b8a7)");
unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #421 fb593b6d-2648-4756-8cc7-109475152965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 3ac15acd-d8e8-4837-9ffe-24f900c3e5d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 1337e41b-aece-44aa-b735-f12435e73276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 c3b600f5-23dc-47fd-8cb8-7c6bbef5890a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 7397966a-2f07-44cf-8307-fc2c49d6d9c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 9b7d54ce-b828-4c47-87f8-acb1336012d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 3bc03ed7-2333-4481-b534-38f4c5b2db5d)");

unit.assert_eq16(16'h07CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #421 1c477b4c-f798-48e3-8562-42743d652407)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h0B8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #422 2aba2c1f-4a5b-4231-b744-d98b14585b65)");
unit.assert_eq16(16'h0F5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #422 82fb2dc9-f4e1-4584-ad6c-446e8b7add01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 9b40ec8c-d6a2-4d75-ab20-501f72a44faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 33b9fd83-03d4-486a-936b-163ca841994b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 264740ee-39b8-4c1a-8c5b-bd93209b3b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 4eabca15-e6dc-433b-b577-1f8430a98a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 6c37db76-d0b9-4f60-977e-358bc0063427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 83b4e487-569c-467d-bfde-f280bb999b7f)");

unit.assert_eq16(16'h0B8B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #422 bc0c256a-b790-4f0d-9895-7fd186c44920)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h0B68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #423 74bfa0d6-bdef-42fc-acfa-b7d2123927b9)");
unit.assert_eq16(16'h0D84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #423 52531c3e-30e4-43e0-962c-3091380de0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 26e19c0f-ca6f-417c-8fec-bc02b9ecfc2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 4392a77c-3f97-4103-9a6f-97394fb7aff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 21b52b50-d055-4552-a585-9ddb8438215d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 a0dcff87-81bc-4ecc-8de9-f2ba07a4ee74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 eb1dba93-533c-4680-966c-8f4478b642b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 89da2fd4-8288-434d-8bb3-6a56a544a012)");

unit.assert_eq16(16'h0B68, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #423 b9fa93ce-afb7-489f-be13-ca22c1611dce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0350;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h08B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #424 8cca7c52-9114-4886-81a2-5f091cd93396)");
unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #424 8bf8d134-2513-4d3e-83cb-d419d392bcb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 86d41a50-9109-4006-a987-aee69b182b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 47a8bce6-c03c-4d99-84fb-f3a5a5ffb511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 ad33444a-4034-4159-8787-788460af0215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 9976e1cc-9cf6-4d6b-b63d-ac68d5eae05c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 3e1c21ba-76d1-4936-9a34-314253fd79ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 875f7da3-b618-4bae-9230-d04c8c654f8e)");

unit.assert_eq16(16'h08B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #424 f37fa106-20e8-4caf-979a-af7a0540ca95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0352;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0548;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h0548, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #425 d8280903-2812-4395-9d4b-b6cdb78bfd69)");
unit.assert_eq16(16'h080E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #425 1ed3a2b3-61c4-47be-8d03-5d65fe9dfa45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 9268992f-e19d-4a8f-9cbc-70326d8faf54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 9b1edf3f-90c3-4af1-9737-ba80a16b037d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 d36a74fd-df6f-4006-90eb-c94a11a21e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 56093633-44db-41e1-a630-85ebe5bc820f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 a61fddfa-1bcf-4bd1-af68-2c23d5504189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 1d23548f-b24f-4012-a391-aeb782325254)");

unit.assert_eq16(16'h0548, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #425 efbf6d35-e1e4-4b47-af5a-68e195c2b750)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0354;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #426 a6a463a7-d2d0-4e1f-acf7-421183d04cac)");
unit.assert_eq16(16'h0A21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #426 325143ff-45d3-4b34-86ed-75fa141cfae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 4d75788d-26d8-4a2e-9374-b6ca04f3facc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 259cebb3-c4aa-4e48-9150-24e91eb5aeb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 15add4e9-4768-4fa9-9b1b-d7952eb9769f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 4cbd61cf-6baf-4968-9b49-3d045fb635ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 21afeb3c-1db0-4331-a60f-f6004cb5c9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 22b55a4e-629d-4d14-97a8-10eba14f9b70)");

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #426 524decca-b67a-468a-a100-ccfb0e0023e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0356;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #427 fbbb9dd0-1685-4350-8732-f47372f7174a)");
unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #427 ca03405a-a881-411d-9b4e-c47129e30d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 8e1e1e6f-e7d8-4b87-9f57-d0cfc7ba3f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 31552473-4ced-42cb-b5c7-d3b1b0788eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 ec0ebfec-4afc-400e-b963-a1a5160499d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 732af356-3724-4312-8607-61604b0d96cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 a67c2275-2d84-4030-beff-60aa2710b7e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 afec3adc-1664-43a0-bb37-a17285bfa887)");

unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #427 83dc4cf0-5b45-4589-9058-74a204aa917c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0358;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'h0359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #428 47727733-5637-4b8c-b848-2ab38e211f2f)");
unit.assert_eq16(16'h06B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #428 8d0f0d71-1466-42b6-8e5b-25f38a50a790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 a1cbaeb9-d8f5-4dfb-a8bf-bb0c8df7ebbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 64a4de6f-b923-4c47-b380-cc0007c0a78e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 24a2f74c-9bab-4677-a479-421530c29088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 e24a63d6-fad3-4f0d-b87b-872c78a4c04f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 5f05f4a6-fa58-4155-9c59-0e13488b777c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 5580d984-4400-4fa2-9e2d-e50742538851)");

unit.assert_eq16(16'h0359, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #428 fb3047ee-eacc-4439-b49d-e0b185c9e1bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0253;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h0253, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #429 daeafe67-dc51-487d-9af8-73a7bfc768d0)");
unit.assert_eq16(16'h02DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #429 c27acef6-175c-4df0-981f-a6682a87c330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 c960cf02-9ffc-48df-a856-cd62a7858a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 194b3958-8e92-47de-a1fa-352e293ff8ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 6f37e958-a614-44c2-b35e-16f8ac41d5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 12227bad-9724-4bad-8014-d9e90d904991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 9bd6d649-2035-414b-bef6-92f51aaa03b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 89ab3d49-70d0-4538-85ec-a2ab9eccc966)");

unit.assert_eq16(16'h0253, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #429 8b3b2268-092e-4888-aad4-ada4005cc663)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h051B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h051B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #430 4024dde9-a64c-4c0c-b5a8-bd7eca2b6af0)");
unit.assert_eq16(16'h0F7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #430 e9448746-2770-4cb8-a187-440c7751b2e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 77f9eae1-1287-4ab9-ba15-9c7217c41dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 09254cff-1455-4f7e-b64d-f4939488df3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 a0a09e9c-f4e6-4f8c-9d0b-62e5384df55e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 fca05615-0d80-4f47-b01e-03a410907289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 447d9017-47fc-4c50-bedc-3aa700fb0699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 b6d3ba0c-ca54-4992-8205-8a562d281b6e)");

unit.assert_eq16(16'h051B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #430 d9ba5aed-db3b-44b9-b75b-f7482f920283)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0565;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h023F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h0565, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #431 9f8d2c29-d4b2-4b8f-ab3e-cf7b24e686fb)");
unit.assert_eq16(16'h023F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #431 a0745159-0b5d-4e1c-a30e-d52aaecbed7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 f26999b0-3e2e-4661-a3c9-7f0031196a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 f13e4a01-f800-4072-8118-bab4508b3f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 5a0dd97c-bd7b-4ae4-bad7-43da2a3491dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 3090a174-c0c6-4b2e-a3c6-b73f2267814c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 9e1e10f6-2a8c-43cb-ad53-6623795dd4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 5318283a-92d5-4d58-afdd-cb65a9c69f84)");

unit.assert_eq16(16'h0565, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #431 835f1b9d-7915-4c34-8b7a-fcf78765d3af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0360;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h0AAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #432 3b04caf7-37d3-4241-b1e8-26e96e5c7411)");
unit.assert_eq16(16'h0FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #432 b2cc0cf5-ea78-4968-a303-d719d3f5a437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 a680dcef-1eb7-4cca-8530-7005b7610f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 5cbb7bb5-4a0e-433a-8655-8c7f6cb67f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 6607823b-db2f-4ee2-a466-4e620ddff8ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 20ab4df3-b97c-4000-a58c-2c55f6fe7e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 39e39ae5-34f6-4f5d-bac9-da2b64e3cba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 49b35d98-6812-488c-a744-67b6bc2ed2b9)");

unit.assert_eq16(16'h0AAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #432 fb49426c-c134-4194-9101-c00dde4ab5f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0362;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0791;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h0791, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #433 d1ec3935-3491-4b82-9727-171d6bc851d8)");
unit.assert_eq16(16'h0EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #433 87322e22-4614-44d8-982b-840d7b11f665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 6d5c51bb-2e18-466b-98da-64532be9f744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 c9c10f2e-2f77-4d6d-98d9-9d20d223c559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 eee1d4fb-d4db-43cd-b101-ed6207c073bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 440c8c94-708c-4676-8c9a-9e6b864e00c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 93811cbd-886b-4498-a1e5-501922cd48be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 99bf75e8-23bf-438a-8ec1-bd6d4c16c5f5)");

unit.assert_eq16(16'h0791, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #433 35b8a6ab-1916-4d09-bdf2-7182a4ad9ff2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0364;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0392;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #434 2600f1d8-ec88-487f-a30d-fad0cd910849)");
unit.assert_eq16(16'h0392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #434 81b6cf12-0416-4d1e-a44f-417968022aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 affe9d36-b928-41c8-a71b-2db819d5a874)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 5e306432-1ce5-4c7e-b721-725ec6aaccf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 15a5873d-6876-46a5-b38e-e6af07e6a4a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 cae26ed1-60eb-45f5-a2bf-d471456d302b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 a5b74a57-3bd6-41ab-96bc-9146527af905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 21a1d679-e75a-4b62-be7b-cc8362cd9a07)");

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #434 3c68b091-9f39-4d44-8375-661b3da091d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0366;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h098F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h098F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #435 7b369c99-465d-4dd8-9e14-8ff3dc1db99c)");
unit.assert_eq16(16'h0DAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #435 b57fcc31-c27d-4d32-b889-37036143bcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 8000faf5-b0c7-4655-9f44-bbe2abd40ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 d1c6940f-651f-4e38-b355-fe15c290e922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 38a69669-4b0f-4f64-984e-c08f2c61d945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 a1107acb-d531-475d-875a-acec41472a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 92ffd867-a0b6-4dbd-8f74-054c27ddb814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 dd7b0377-1757-4244-82f9-49bf71c7579e)");

unit.assert_eq16(16'h098F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #435 f6b756cb-a8e7-4b6d-b976-f938d98cdbc4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0368;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h073A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h01A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #436 e54623d2-edf3-4b43-8b7a-3a121e56c757)");
unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #436 f1203b04-3ded-42d7-81fd-af9eeae9207c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 6efa2a90-16e0-403f-9369-9b32cc2cbe6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 042549e9-36ec-4c2c-bd41-af4f2936a443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 0a501edc-d6a9-420e-b91a-a3f1130b19a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 52752f24-496b-4508-9b79-1875cedc1df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 a9b80fce-46a0-4bc7-95d7-435c5fa894e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 509733ad-3a24-404b-90f0-2bcacf19993f)");

unit.assert_eq16(16'h01A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #436 507b24c1-2308-4eba-bf09-e6d7a108c9b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0226;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'h07DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #437 c71d7b3c-8e32-458a-b0a9-eb7f6205c935)");
unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #437 8e7cb466-d72b-4616-8b52-8cdc9ca598c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 d965ae98-ad2d-47e0-ae51-8a10f72886f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 061d6a8c-f7ae-4ae3-9822-c6366c42b4f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 a44b85ee-52ee-4cc0-8476-1f3343884af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 533a2637-a99e-4ed7-b425-b14e7898251c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 2145a0ba-58be-4105-9b0c-87c51c83c260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 37873bea-b40f-49fb-9ede-7526719cba8f)");

unit.assert_eq16(16'h07DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #437 670cc06e-6dc4-467c-94aa-ba84147b25a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #438 ed11c3c6-8b1d-4cd5-b7fe-c52405201367)");
unit.assert_eq16(16'h0DB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #438 233e8539-18ab-475a-8b57-7b6cecba9516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 1cc19e45-d09a-4a4d-9794-e3a29a55939b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 ecbdf133-4d98-4ad4-bfc3-24e8cdad527d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 9500fa49-f50f-4942-96f1-fc4ac4d49447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 95f641ca-40e6-4303-92e6-54e901e3595c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 9afafb21-e536-462f-8bab-f6ba727cda3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 8c106518-d7bc-46bb-9012-639057764769)");

unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #438 b82cd5c2-4422-4bca-b636-916b2a63f50d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h053D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'h04B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #439 feae9f6d-0301-4599-a2dd-d180caf01ad3)");
unit.assert_eq16(16'h053D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #439 e4513726-d51f-4bfb-839b-afb3323e4c27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 dae8dd18-52d0-4637-ad08-290914a8bc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 4c3f2062-af9d-4c45-b740-3b8b1e56f10d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 39e93ff5-ffd4-44ae-9d67-fb4abc696c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 a8a92ec4-99c9-437b-9dab-965788f60c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 a333f76f-7906-4dbe-a264-528dd7b36967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 9e77a641-f45c-4512-ac7e-25a523f8e178)");

unit.assert_eq16(16'h04B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #439 38a09075-e0ab-41c4-8965-f578dc256d76)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0370;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0466;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #440 594953e0-2bac-4224-97d0-c6a5c1ca2719)");
unit.assert_eq16(16'h0466, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #440 2628282b-5635-4731-bcc5-d70e811ad51e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 8ccdcf9e-67b8-49e0-8221-6444a8f5e4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 9ee6c3f6-8aaa-439c-9327-64ff5b232438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 17733cbc-0234-4dcd-8fe2-1ee0975acbdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 3622e6c7-8f44-499c-9eaa-bbb5f60a5d1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 4b6e3cbc-b971-470d-bd28-80d95ad3e862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 f46fd4e1-12d1-4808-a7e6-1d89447ee6f7)");

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #440 242d6456-8d47-4925-813c-5c01a76c68ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0372;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0248;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h0CBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #441 35d0b046-f193-4919-a035-6df2ea5a046b)");
unit.assert_eq16(16'h0248, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #441 87c4e266-3363-4bbe-8f35-4c302c9de43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 32f58929-2500-4687-ab4c-3214fdf18b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 7c0501f3-f584-45c0-8a33-27ea8de2abb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 86aa650b-1621-49d9-b60c-c3a4cb97e2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 e99f1a0d-1294-465d-a617-dbe24f071857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 34885461-b9d4-4a6a-a23b-01a85e4feb16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 52daaa0e-8cc4-4161-a86b-bc52053e031e)");

unit.assert_eq16(16'h0CBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #441 6f823a2c-280d-41cc-bfa8-5bf9f6d85b0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0374;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0545;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h08DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #442 8dac9b99-147c-4be0-b89b-d1851495a8fe)");
unit.assert_eq16(16'h0545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #442 1669e32d-27f1-4f52-9a92-f978a62b9f4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 e6d80ade-c6d7-418d-81d8-717137836f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 7884165d-50c9-4de9-a0d3-eab9775cec4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 df05b495-6a18-42e6-80d9-c113a9586642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 e7e66b76-a27b-4062-aff1-8303f609206a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 594733c2-0f62-4669-85d0-42997bb23b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 97f39c2a-d81e-4473-bc78-dfc372655eec)");

unit.assert_eq16(16'h08DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #442 9312885b-bba2-488d-8e36-d69ae5247b03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0376;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h06A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #443 20e6d168-d537-4365-8878-d93a260dd2fd)");
unit.assert_eq16(16'h0BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #443 16075dd5-ba1b-464c-85f4-d323b321465a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 5cef613c-54f0-4343-ad20-c5d74c8128a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 38f566a1-9a4e-4dd0-b8b1-230021679358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 76ef6a3e-b479-4079-ae53-053877393e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 8b30fb64-12ca-4ca7-8641-fd883dd791be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 70dcb280-e9c4-4809-94d0-9ba33c3ea8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 a798b64f-dfe5-4ea6-8e42-a73043848835)");

unit.assert_eq16(16'h06A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #443 98e92ae5-6356-4208-86d3-fd6ec2fe8a4b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0378;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h047B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #444 003b3d39-1fbf-4846-b035-d925cae62810)");
unit.assert_eq16(16'h047B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #444 05433d3f-dfcc-49ed-87a2-a194105263a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 05103b0f-a14e-405f-bd4b-7bd376c394eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 ede6a63b-7d12-48a8-b3f0-e4aa88a9ef7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 a18f73c5-1423-4073-b2e9-721abc72b422)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 e9f52fa9-5042-4085-9b13-312038773476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 4e2c522a-417e-4559-9320-d1582cca65c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 7aad7313-42f8-499e-b635-42f89dd3b759)");

unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #444 34461701-3cd6-44af-af20-5ffb113ec6b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0279;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h0279, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #445 9ca7f7eb-f2b5-483e-9dbd-df4f92420ab2)");
unit.assert_eq16(16'h077E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #445 823e4b58-6609-499d-837d-137b0964c9c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 cd4035eb-de75-4886-b953-62f171ece9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 954fb1f0-f2ce-4faf-bc0f-e4c32041fb11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 a68f918c-6664-4d33-9127-1e57b37cec2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 e132776a-8f19-44c9-9d12-1ab1e22cc5a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 78f16204-9b3a-4385-ad93-6a6f2a8dc5c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 6251ca6b-2cc1-4cff-a561-507acf89830d)");

unit.assert_eq16(16'h0279, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #445 13042bd2-268a-4d5b-8a49-207d4722d755)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h088C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h086C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #446 f38add3a-dcb8-4a9a-b4fd-75f88932458e)");
unit.assert_eq16(16'h088C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #446 e3e39099-ad90-40ae-a547-2e5623462f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 64804ed4-f2ef-4248-8287-3b3b72e267cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 6b3d1452-1f02-404b-a6f4-3a8f2b32d162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 978038d1-e8d7-4fa6-b245-8faac3f3759d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 7c330a13-2d83-4cf6-bbb8-145cf25aea70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 6234934d-11b9-4e34-a16c-2e027dde08cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 f7e3b69f-740d-4ac6-a6d6-4a6ead532af5)");

unit.assert_eq16(16'h086C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #446 a5aa35f8-930f-4618-9a03-adb89aa57be7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h0BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #447 5bb24476-46e4-4267-a990-6060c085daf5)");
unit.assert_eq16(16'h05EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #447 83ab79c9-7040-431c-a196-98b103194b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 357a9eb4-9788-4cb7-8164-84918f0228f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 8d8dfb96-2f08-487f-9900-b44166188f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 768e0e10-eafd-4cbd-92d8-29a60009ce41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 d73b6708-e727-447c-9e13-990cd9355d59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 c4f2818f-65bc-48ec-af57-33a0d7665c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 6b898145-87cb-4673-b337-b9d725e3c5dd)");

unit.assert_eq16(16'h0BDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #447 bfe47755-8ca7-4a92-9265-474eaa74e2fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0380;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h0A4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #448 0cadc4dc-8dde-40d9-8989-e364c8aff16d)");
unit.assert_eq16(16'h0EB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #448 368b0a7e-0556-405a-a2d8-e81d3349f6c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 8ab9f503-b9ab-42f1-af42-5c4180682a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 876ec78c-b562-4e0a-9288-e42f822d7cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 d63c59b8-ae45-4d53-8247-3d4f469bf484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 a3561253-3ce7-4059-879c-ca2a0d16b6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 93f092d0-18eb-4cb6-8fef-4c6752ae0038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 5daa97a3-4f4f-4c0b-9ec5-23370e29a7ad)");

unit.assert_eq16(16'h0A4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #448 75051d48-648e-4cd2-8771-266a73d520cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0382;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0208;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h02FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #449 d10a59fc-cb46-44d9-a8d5-39bcc93b2aec)");
unit.assert_eq16(16'h0208, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #449 81080995-35f2-44ba-9980-5f690b28ff0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 df1fefff-229c-48d9-af01-47b51ba9bfb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 37994983-96d1-47c1-9062-46b73054a60a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 e68d59c4-5a1c-4ac1-9a48-8046f302a1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 88b90c91-859b-4021-ad22-5b63176220a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 8479c131-b6d0-444a-ae26-d944a694e52c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 6c1d5110-79cf-47ad-8457-15a5cd4bb625)");

unit.assert_eq16(16'h02FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #449 e24eef26-43db-4af6-bc37-f51f5761d740)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0384;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h0B51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #450 02519e99-f39b-412a-8cb5-bf68ea39ba6b)");
unit.assert_eq16(16'h0C44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #450 e13a10dc-4b7a-43fa-8144-6b484a05eb80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 d4154279-c209-40e4-ab3e-cc3f5eaa5ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 42920fd6-ddd7-4cef-9a8f-1d8d2363fa3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 3cece641-6265-41a1-9c9b-6278058ceef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 b5fd84c7-fc56-49cc-adec-99edb2b855d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 c94a0532-2f65-4b99-8eaa-c38be8256033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 591cb66c-84ae-487a-8aeb-ad8c95f57a68)");

unit.assert_eq16(16'h0B51, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #450 4b81dea5-e7d0-4e24-9938-3408f1bc19f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0386;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #451 83683b78-6b10-43b0-a779-96d65437753d)");
unit.assert_eq16(16'h0FE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #451 1a5f0dee-fe4f-4ad2-a824-1c38c299c86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 15c0665d-c5c9-4fa3-abf0-e93528ad269c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 88dcf7ef-7844-4145-aa5f-3fa21cfcc6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 31b55f0f-c1db-4b91-9a47-d90af42ddaa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 7101b978-649c-422c-998d-30e45abc8466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 de6aedd5-cc10-4d6e-bbb1-bf5335a35399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 6333750f-0d09-4bff-bd93-62563e550bdc)");

unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #451 fe800a05-6495-472b-bfd8-c0dfa45daeb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0388;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0685;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h063F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'h0685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #452 e4257abb-0c09-431c-874e-44a594465b07)");
unit.assert_eq16(16'h063F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #452 19856954-8541-41fc-955a-6c53befa2df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 6426a39f-4243-417d-9250-cc10b4426a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 0c2f8f09-ac65-4deb-9e60-f6e388d64115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 3a66072f-35e3-4f77-af72-948f8379d92a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 6946c723-5fe0-4a04-a4e3-0195c8e63170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 37eadccf-ee5f-466b-a70b-ed3f40a8f667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 0e3e28dc-5211-4294-bb09-7320ab5eb2b9)");

unit.assert_eq16(16'h0685, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #452 4d252710-2c55-43ee-933d-7c327c2db689)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h013F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h0BDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #453 18cffe81-8169-4257-a74e-1de878307f67)");
unit.assert_eq16(16'h013F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #453 b15a15eb-ed73-4427-923d-73963580dadf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 0b5a6fa0-4352-4d0f-8f2a-43ad5c08395c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 5863d6e9-963c-487c-8496-f7d0dfe2883e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 906f5cdc-c235-4674-9eaf-cbc1d8ccb7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 1091bd09-7916-488e-8da6-d9ce75b3dc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 debc64eb-1bd8-4aa2-bacf-49172ab76bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 4a69e4a6-0e40-4829-8056-1ccdb4ada6ec)");

unit.assert_eq16(16'h0BDD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #453 8be7d354-18ca-410c-8104-4fc62460eb21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0073;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h0A45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #454 891abfe8-bf13-4879-a593-cec08d090694)");
unit.assert_eq16(16'h0073, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #454 1d00a902-7f56-4ccb-b009-69c03e386fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 c17fb505-4353-4be5-9789-41bb23c8ecf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 0cf08519-b9b6-47d9-b823-7e4db8a69e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 135b6268-1400-4217-b3ea-67384446ef25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 5f3d96d6-1389-419c-8a41-f4b5298494b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 ec1dc45c-6f2d-479a-9e97-6ec1040eef9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 11a02726-01ad-424a-96a5-2dbf574c106c)");

unit.assert_eq16(16'h0A45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #454 e96a377b-68cc-4971-b597-4fe29ea6fe83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h092B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h07BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #455 2778d26a-7c8f-462d-bdea-55a12e8e2784)");
unit.assert_eq16(16'h092B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #455 a473ea99-1406-4088-b020-917cb82574c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 437e818c-e60a-4b1c-a8e4-a42b6a668dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 422cb939-150d-48f6-bc68-7003f1071d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 81a0f602-5c58-42b4-a1ee-d34564a9eafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 983f3404-e240-46ef-9fa0-ced8343a19df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 5587a2e9-dd68-45b9-92f5-da369b31e2be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 c4e6ebd7-e02c-4516-9e11-274f5e3db5f5)");

unit.assert_eq16(16'h07BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #455 d5df2fb6-747d-43f2-b478-15339f704809)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0390;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #456 c47789e7-1147-479a-a544-959a115d026c)");
unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #456 4be8e14b-c235-447a-b5f5-c7605f849a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 f6891e4d-aec7-486b-bed0-5aa024663b3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 38b68bd0-7f55-4887-aa40-603c8879b690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 3e0e741e-7fd5-494e-9a56-ff20a5c8be56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 c4ecc8e0-ffa4-49d3-a46f-df5487e1253e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 422918c5-fb2b-46d5-bb79-de7dff10fdee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 5b99eeb5-d785-4cd1-845c-28a5e7b5d2b9)");

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #456 4dac0c0e-bb9a-4476-858d-487ce19b3896)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0392;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0533;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #457 b82988ae-74af-48a2-a35f-be5c97f9d0f6)");
unit.assert_eq16(16'h04F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #457 049af3c1-2356-4af8-8f94-7449e95251f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 d73e80cf-d29b-4a54-9736-7f787e2a014f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 d21a611b-c80b-4d95-bae6-f373553d4d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 dd86fa3d-f883-49f2-9267-7e45b172ed68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 dc294765-574c-4722-bffe-15b281429fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 0b13ab32-1952-4d1e-8151-cce902c1a43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 8f3e2259-2020-4f2f-b546-67ee987a7d04)");

unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #457 5e7c4ad2-09c2-4d2a-843a-1d55f73bd3df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0394;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #458 a691df19-4b0b-4383-9a63-87ad29b45dc7)");
unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #458 d6896b0e-742a-4a9e-910c-d56a53188ebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 578897c2-6edb-40ec-8733-085c64a45d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 1024a90d-5991-41e3-ba13-18de4895dec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 7cb8c80c-20f2-4ae6-ae2d-f1507135046a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 87ac5abd-92bb-431d-b244-7c55ee06a192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 0da1e0e4-f055-4929-ad21-d93b4cb29d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 09f5a572-c75d-478a-9643-076712a3d4b8)");

unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #458 e5184fb4-d227-4db8-a489-6d1dfd5577c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0396;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h0C6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #459 ee9e1091-d7de-459f-b41d-b8a0e7bc71b5)");
unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #459 2b7048da-996b-44cd-84a9-1fb8c65f3902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 705538b6-72c6-4263-adf5-78e41baa888e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 9eab67c8-7ab6-4f33-a626-8de9c627bf3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 ce6db4df-f455-496b-9ffc-bc9f1ce2f094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 9954c541-a998-4b1f-a711-55de03c049f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 75ae305a-3ca3-413d-8287-ebd6438516f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 28ff59e9-f8f8-4730-98a8-b2a64dea6d1b)");

unit.assert_eq16(16'h0C6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #459 0b35ff2d-8b1e-4892-b13f-598520004df5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0398;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h04E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #460 c2ef2e1a-1aac-4e68-829e-2e91522aee05)");
unit.assert_eq16(16'h00CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #460 70bd2381-f994-4aeb-aa5f-2eee75cf47c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 5b193452-b799-438b-916d-a33931f1e072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 1a43b780-d69d-4aaa-844d-15222c0f3662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 4daf0e9f-f36a-406f-b330-c4adc4cd817e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 aa551e0d-3f8f-43fe-8e12-491895fe7345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 4ced7af0-11b5-485d-b864-0279e453d481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 baf3e46d-edd0-49aa-834e-7dd0c9c04dea)");

unit.assert_eq16(16'h04E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #460 61cf4607-f4bf-437f-ac56-c7b63edea2c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h01AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #461 8bfec1e6-221d-4d22-9df9-4d739a18901d)");
unit.assert_eq16(16'h0CEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #461 9398543b-3c12-4fa5-923d-5a237a7abfb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 f4d8eb64-db8b-489d-858d-b4106655c732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 09bb53a6-a05f-483e-8c41-e1bbae81873b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 383c0a87-c581-4436-a793-1e940c2cecf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 22cef731-92e3-49d5-860d-9c0b9e0e77ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 b8376906-73e0-4bd3-8ae8-ec2b9560c600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 f8f3b2e6-ef23-4b1b-972b-2d56474bf113)");

unit.assert_eq16(16'h01AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #461 0efceab8-cdf7-40e3-a5f5-4412e2be7bdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0280;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #462 e54819a5-935d-4dda-9c5e-bb4250f65bd8)");
unit.assert_eq16(16'h0280, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #462 e50d1395-f59c-49da-a6bf-2f405697fa8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 cf1eac67-4395-4a6f-b803-8599c07d756c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 28043fef-4ce3-418d-92cf-1a39d4dee6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 e2f6bb32-11c3-48c6-afb3-c54ef3efaa34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 ae493313-a047-48af-ae3d-cd8e18527b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 befc13bd-67bf-4541-a430-dedba5af88fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 56f61529-73ab-4f1d-b741-5278c4499e74)");

unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #462 a8227490-8be2-4830-8572-a8f40e1a91db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h0C21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #463 2835ca52-b511-47d2-bedb-206dbb04ef6e)");
unit.assert_eq16(16'h07AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #463 a5b1a69a-55a5-477a-9a33-8806c1ab8708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 da0603f6-9b42-488b-ab5d-d0749cb27242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 ecb906ce-0af1-494e-8fbf-1af5d00dcac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 e949e5b7-98ce-49b9-bdde-0cf1e478f1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 68c5f15b-c494-41ae-a159-e2bdcddc7a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 6c772828-4d67-4e2d-9379-9e463bb99181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 2cb09206-017a-4936-b29b-e6e3ae916c29)");

unit.assert_eq16(16'h0C21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #463 ff088ea1-1470-4471-abb1-d1216545fe62)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h088C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h009E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h088C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #464 b9cf24a2-f82b-4268-bda2-56d7bba808d5)");
unit.assert_eq16(16'h009E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #464 088dd3b7-109f-4d66-a16e-e1e647ce0ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 1aacc53c-03cd-4608-8a3d-0a938b8cbc55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 2efe434f-39fa-4a1a-989a-1be991040370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 4e236c9d-974e-4d7e-8ce1-c853e8e0c54e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 7a74c9bf-9512-4367-af01-a2335c8f713c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 64172a38-b768-44fe-a9f1-a7ef211c8911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 233df518-53f2-46e7-9f72-ca9b97f66d8f)");

unit.assert_eq16(16'h088C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #464 9541f685-ccc0-404e-a22e-35d2f6d1513b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h084C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #465 dcb0b744-66ac-4979-b273-53853586cd78)");
unit.assert_eq16(16'h042D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #465 761506a5-1fa8-48b9-b617-83f4bb3cb32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 7d2654fd-eb54-4224-9847-33ed96715f42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 214c0b84-c2a1-4122-8b39-b14f07a41204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 d58fb502-0ba0-4251-934c-dc60e38dab74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 ac4e2ef4-9130-4d02-85a8-c073893da2be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 e0ce1658-e46f-4c9d-b4d1-7e31f957de18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 67548c5e-e8b9-4b21-b16a-a3a816483442)");

unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #465 321ed3eb-d2e9-4f6b-b43f-7a83f7706611)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0400;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0271;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #466 b37cc004-c925-4b4e-a3c1-0179753d7152)");
unit.assert_eq16(16'h0271, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #466 53b08661-290e-4956-875a-abdc4f28b3bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 e84b5c87-679e-4459-9873-8713889acd91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 6fb62fd7-749a-4d2a-b864-5c244212a4c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 bc8a1747-fd0c-4862-8c41-0774ae246477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 119d7e47-9309-408d-b064-1b51dceef3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 496684d8-7a5d-4be9-8b66-d417a830b3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 29464390-0389-4138-90d5-813a939ead33)");

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #466 26ecb269-fc35-4c4e-9885-e9b7849c4c68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h0CD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #467 0e5e8f03-d52f-4b17-b055-10ee2610ff53)");
unit.assert_eq16(16'h0F6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #467 230584d8-97b0-4b9e-a127-88760d8ee668)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 2bbb8c07-599d-4f77-9090-70a3476e567a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 fb89ad63-91af-4633-a724-d5f983e47a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 83e5a78b-e97c-4fc7-8007-4260d38d9dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 0cd0c4f5-05dd-4712-9a7b-a5e6dfc806e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 baf90e0f-e4e7-485b-946b-db0aed91511b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 2b768058-a5d4-4d81-9e48-d9fe462e831b)");

unit.assert_eq16(16'h0CD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #467 430308f2-6f1a-4d63-9e14-70a2e5d618cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0456;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h0456, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #468 28a11ea7-d4bb-4e44-bc84-a0842c5752fa)");
unit.assert_eq16(16'h079C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #468 ddeda851-b5e3-4a78-a442-3d04275c86f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 7eb968e2-212e-44aa-b686-2da04e6ac299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 d633cc62-e695-44a8-94e1-54694e9c3913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 47b0c683-1d17-434c-9cb3-7d9ae756d3ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 0b5c4b7f-7838-472d-90a9-37b7050b40ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 26dc64b7-14fe-440a-9a75-bfe8f03eb7ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 6cc280f3-7975-45bf-9339-b4fb5e6db95f)");

unit.assert_eq16(16'h0456, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #468 4ebabeba-8f25-4c7c-a241-799d1e0b4010)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h07E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #469 e70fe059-94ce-430a-a7fc-06be5d04bb62)");
unit.assert_eq16(16'h0A68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #469 10494e2a-879b-48b6-958d-d8579cbea015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 13baa6d8-3c53-4c21-895d-2cc51f3b850a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 e71dee44-889a-451d-a0a1-c4f8ce01287d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 611ab67c-00e2-44b7-8785-fe6bf2e99700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 f15c58ca-12df-4e4a-acd6-a78610bcfefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 33ef8890-04d1-48e9-a308-bd6739c291dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 a5d0780f-bfca-47f8-b484-0965cdf8ce83)");

unit.assert_eq16(16'h07E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #469 c5a6a84c-b1ab-4123-a5e3-4378ffd1ea78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'h00CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #470 a800d702-28a3-4ea0-bfcc-c2d5c785de3a)");
unit.assert_eq16(16'h0C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #470 233eac89-bb69-474d-932b-b7190a1b0d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 b5478dcc-e984-49d8-9c74-3d44577734bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 971aae21-bd01-4dfc-ba11-9c43f085f9ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 05bd4acc-99d8-45eb-8344-493303053802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 7b3de5f4-1c65-466b-b35f-82d65d7a0586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 92125871-0642-4a61-a111-ab58b62921fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 b037d426-61f2-40aa-8ace-74612c48fa79)");

unit.assert_eq16(16'h00CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #470 b35e9fad-9055-442a-b40a-a71aaed0ff4b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h0DE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #471 aab49b91-2dc1-485c-9c9d-7f2e424eb2fd)");
unit.assert_eq16(16'h0C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #471 9885e440-fedb-43a2-8153-45fb978e3592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 9f3e8e57-fef9-4360-a35b-a29c44d03195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 a0842d30-6653-4fd8-bd09-ad99cbfe639f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 50f9d405-a2d2-41db-aa09-b4935d8ee815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 dde1ef19-2a45-4e85-b5e6-45cd051d20bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 614a2bdb-485f-4b7e-9178-25f0ca16f488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 b8a15f23-6469-43b5-808d-3c783229b8e7)");

unit.assert_eq16(16'h0DE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #471 fe2499e3-f6b2-4e36-a729-e1747a098f34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0082;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h0751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #472 e2b4b5be-0fa4-4884-994e-6e1a694b8c77)");
unit.assert_eq16(16'h0082, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #472 514411ca-2a0e-46de-a51d-b7d2a32e7502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 1fcf2238-9ef6-4f4d-9309-fff025d9fd0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 c1465dd3-732c-4fb2-9923-4020bf04d5b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 37d16929-95f8-426f-a8da-e3338ad06ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 7153d95c-7870-4c14-9117-3ac96fb702d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 aaaba326-d8b0-4333-be15-e5790511f4c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 91905114-1172-4e81-ad13-6d6fde60c72c)");

unit.assert_eq16(16'h0751, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #472 157b2b75-4ab7-4432-a533-6122d326ad1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0965;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h0965, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #473 74cd1d2e-5c12-4a77-a741-4f80683a65ac)");
unit.assert_eq16(16'h02EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #473 3e7e3a1b-ff84-4a0d-8f31-046a87a6d565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 1edc6b8a-5fd1-4dab-b2e2-55be03c81c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 174a7ad8-194a-4a5c-8605-690a26e61577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 156fc36e-74bd-4b00-a023-b0896ba78052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 931e99e4-1a08-4f9f-bfe1-07b5acc2d792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 512a9c96-67f6-4731-b366-3358b6a13588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 b8e3107e-96ff-47e6-b8bf-db73ce3f850c)");

unit.assert_eq16(16'h0965, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #473 206138c3-9408-467d-8c9c-e4072ad96f9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #474 6e635fe2-3750-49d9-8ad8-592002222afe)");
unit.assert_eq16(16'h04F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #474 4c189437-faa7-4fc1-8262-24aa401e877b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 cbc6f767-b2f6-4aaa-bf1c-696bf96fb3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 a3936aaf-afb0-42c9-91a5-f8107854d625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 ba896a6a-332b-4487-a30e-083d985b0878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 67f09d45-7cc4-40be-bd3a-49f59679f508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 0d40cb7c-390c-494d-9ea8-8be3cd8e7955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 830b665f-3f6b-4aae-a3dc-1e4647dccc6b)");

unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #474 fae47ad5-b954-431e-afca-716ae13b2ea2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0894;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h0F02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #475 02962ad3-5290-4763-9235-954d84e4841f)");
unit.assert_eq16(16'h0894, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #475 4ca53025-35e4-4639-933d-7f6f8901a8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 d1220fbe-d252-4a1e-9a0e-6ee78531cc50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 07eba055-9e92-4255-a060-10b45ed1d4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 71f8d6b0-3632-4245-a5d6-61c0810b0e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 13184d7f-4b48-4d35-84dc-43e9f096e507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 c74c9634-fdf7-4ecc-959d-099f6cadf596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 ffcdd540-1b05-47d6-b807-203d4a9f3de0)");

unit.assert_eq16(16'h0F02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #475 09d66a66-cadc-474c-a8a2-0162e627ce2b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h07A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #476 1a3407f0-25fe-40d7-9903-991b05cfe4a4)");
unit.assert_eq16(16'h09EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #476 c754e543-ea9a-4a0a-87fb-d2c9be868b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 6ae977a0-1ae4-43ab-807b-a5ccbf588ab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 aeeb9277-8714-4e48-9e32-15991cecc630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 3a5a4ad9-fbda-4a63-b971-4b7fe6f22fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 65d2a8dd-5d59-4e24-a880-be392f804098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 e653f6b5-72bc-4b05-bb16-838816c3275f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 2e2e03e8-ad29-4b43-b7a8-a627da9f0a6f)");

unit.assert_eq16(16'h07A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #476 03507556-07a1-4934-bcd0-95de4a4da1ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0937;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #477 ea4e28b4-7033-4cb9-8e56-71c86be4a672)");
unit.assert_eq16(16'h0937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #477 e4dbd267-e82c-4b2e-893c-11090ca9f0fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 7558a4ab-d019-4d6f-bb93-a4babbebea7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 155b2227-8de0-4bd2-a4df-acbafd39e49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 2f9bb319-85e2-4ac1-b3a6-ffb555ecfb1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 909f884c-1b92-456c-ace1-ee89cf3391dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 6e3d5795-2aab-4673-82b5-d51d83fa1a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 62a50fc2-0a12-4917-973a-b0c738e2fcd1)");

unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #477 399e5c22-d8bd-4a82-8885-ff1a96cec58b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0286;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #478 71f05514-b45d-4db5-91a5-44d17fcc7d5b)");
unit.assert_eq16(16'h0EB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #478 0708ba62-65a0-4e3a-8ea2-e3f975e3b820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 46dc9195-38c4-487c-bc7d-cceaca02418f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 423fd2e9-a60a-4df5-8c3c-c491aa9bc382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 57bab3e2-43c2-42ae-8b59-bdcee585a739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 20e97f6b-e59d-449f-832d-d0eb36ebeed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 582bff6d-4b4b-460e-bbb9-55101a410304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 28135d96-a2b8-4a5a-8c38-3bfa864f9113)");

unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #478 d789d61a-f677-4b55-95b2-f7e414aec499)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h0BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #479 239568a0-71d0-46bc-88d2-ecb022aac151)");
unit.assert_eq16(16'h0AC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #479 39836d6e-70c4-4f4a-a415-926d38aeda11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 8903ec1c-f3a0-4c8f-9774-5eb401cb3713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 c52962b5-035e-4486-b6f0-d8e9016890a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 a81553b5-7122-49c1-b8dc-fa0863812914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 b46d271e-c4ac-40fc-8e6c-347dfff27db1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 8a4e0312-1420-476f-a31d-86e0e623f8f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 7e236e4c-d9a0-471d-b0a6-1068854bddbf)");

unit.assert_eq16(16'h0BF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #479 9af9aede-5803-4acc-a526-b237906e8263)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #480 a8b4485c-fe16-4430-b1c8-29172c8123ca)");
unit.assert_eq16(16'h0FD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #480 85db9249-5cbe-47f6-a636-baf92b651a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 abdecfa7-7cba-47e6-a1ce-e3ccc246297b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 e53fee2c-4ce6-4fb3-8c4e-9a23434dc4be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 32d5c2a8-8d91-4412-9462-adf4aed910a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 9c43d750-7550-4210-82e2-cd159da6c4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 ca06535e-9b94-441e-ad7a-9490812e2f36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 8f9c8f5f-0cb2-4758-8473-2131e9d8548a)");

unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #480 936818d2-636f-4306-af5d-10baa6abdc7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #481 26407be1-c1de-4cfd-a848-9908e467fe3a)");
unit.assert_eq16(16'h0577, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #481 d3f14290-7753-4f8e-8def-1bdc5b3d15ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 9c567f2e-8862-48ef-893d-a84ced29b8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 a857c730-80bd-4891-b86f-cd494157c056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 03b1ac8a-bb7e-4372-bf19-d10c433c4073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 dc217019-f5e7-4f92-b75a-c094c8f00acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 d01f4967-3927-4d96-b7ca-63b743cf4b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 54d68541-74f8-4f7e-ba53-bf6572d7e92d)");

unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #481 378613a1-03dc-4da1-931d-03fd39d25bec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0512;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h0512, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #482 3e52d313-e99f-48b4-884a-49575703ac13)");
unit.assert_eq16(16'h09EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #482 55b7df30-84ae-4f1b-8c91-f9c6ff6d0148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 a29f18b1-f64b-4fc5-a07c-ea2e662f82ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 91064281-3be5-4048-ab87-c1e133d33bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 67940105-25c9-4d64-8642-f05040931669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 b6e03781-dfda-4341-813f-8318df0c8d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 04fb341d-4192-4e64-b89d-e21384ad8702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 fa252dc7-85f5-4ae7-a81f-3c78d3056f4a)");

unit.assert_eq16(16'h0512, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #482 6eadd752-8738-4a30-9285-13f4802a96f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h038D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h07BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #483 b89dfca2-be26-4038-902e-7d28f23ce8b9)");
unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #483 cc010237-578c-4322-8247-606be7487cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 d00d5764-dea2-4692-9d70-3ab6164dcc01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 8c527ab3-7f2f-482a-b95b-95f7274f1dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 99762f9a-97bb-4042-90dd-f918bc5e364f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 18363985-b50c-42de-a2f6-4da513392c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 92dea02d-ac6c-45e5-a510-0d4a405c618a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 fdfcb36a-d34c-415c-9237-c3ff82c86cfe)");

unit.assert_eq16(16'h07BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #483 a2ee5cf5-1b51-440d-9fd6-b2d05bc48b35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h065A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h065A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #484 014f2e72-843c-48f1-8c01-2b97d6def651)");
unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #484 99b06379-3158-4981-8209-d14b70718763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 4cbbf332-3e82-4ee5-a792-66c299352338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 4ec55d4b-88ea-4594-ba1a-b83a58c92df2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 1348a99a-7020-4296-b157-413c1ce08207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 d4c9b272-58d8-4cf1-a080-53c4a0c220b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 fcf160c3-8fb6-40e0-97aa-9f13d8c042ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 b6872b0f-de55-45f4-95de-faa74f8ad59b)");

unit.assert_eq16(16'h065A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #484 6b8eed6b-1131-40c4-a237-b1c6ed1b6809)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h0B21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #485 dc9beab8-1bfd-4e14-98e0-776cecd7099b)");
unit.assert_eq16(16'h0985, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #485 d4520fc4-7930-4bf9-a200-0dc59ebd7eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 ecc2a595-4c92-4fff-8e5d-483c9b7a0cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 718ad8ee-1693-4c92-8639-6b8fa5f5c38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 d507301e-e5d0-4377-a3a8-1eaf7befe6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 9fb027f3-a68c-44f1-87a8-171045f45321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 b41015c6-5344-4bc9-abd9-9cf456ddbf82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 e4d5fd78-9650-4cb2-a322-692c1246d7ba)");

unit.assert_eq16(16'h0B21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #485 ead8288d-aec6-4f91-b9cc-b0e44cef40cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h012B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h065B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h012B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #486 150f1bf8-7567-4129-805f-b777f5f97bde)");
unit.assert_eq16(16'h065B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #486 724022fd-1790-4572-ae74-01b66e5a2973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 9316f954-7df7-4a31-a4ff-496984bc3507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 f3669391-d6e1-4507-92c5-8745d1f3e7f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 6d216236-e1f5-419d-a823-c344767f388d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 bc9f9317-b12c-4aa8-bde3-387b18d050ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 4fae1ecc-89e6-42ce-9a8e-9bcb079e2a27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 b60d004f-30a6-413b-b080-e6f2b6033454)");

unit.assert_eq16(16'h012B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #486 91fbe940-7806-4bce-a620-30fcfe7f54fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'h06DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #487 b35aaf46-107d-4aea-b6e9-e2094ea08309)");
unit.assert_eq16(16'h02CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #487 d98d485c-23bb-4986-a035-345e1438d670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 708c1388-49c1-4c85-b7dc-a5def519ed2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 cbc2c3e7-27c3-4693-b426-5eb7a64ca6df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 e5e37cf4-ee85-460d-b9f3-a53ebebbf796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 4de33ddd-b711-4914-8ddb-7c1d8f7d1972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 6cd19a86-8e9b-4bd8-a12d-693622949d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 f09244e1-4ff8-4d77-9b15-706a64c1d36c)");

unit.assert_eq16(16'h06DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #487 6c78f269-9d4d-4a5c-b4c4-c61a21877bc9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h01CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #488 3c28dbcd-8ec0-4177-8c52-871ea6e061de)");
unit.assert_eq16(16'h0AD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #488 4835ee3a-9762-4c0b-b405-6d0f2900478e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 f3a2287e-21ce-4042-8da3-6b7cacf0d994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 6e259a40-5224-4bd9-b372-0f0f97f46ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 547d0717-443c-4913-99e1-2addfaba8dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 790c9e58-5d8d-420e-81e8-d0c371acb8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 5d603bb2-2187-4b8a-a174-2eb10254e9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 c3e0fd95-315b-4067-ba50-234091510336)");

unit.assert_eq16(16'h01CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #488 9a1889aa-96d5-451c-aa17-ae2182426744)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h0BC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #489 6273c821-abe1-4026-865b-752408aee44f)");
unit.assert_eq16(16'h0EB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #489 53e714d4-bcea-43c8-b71e-f5a6386697dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 8a710a5d-4151-4edf-8d5a-e854f80c934e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 8bc4f118-663a-4bbc-9bdb-5375444433a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 b6de9126-cae8-40d5-8465-0b9091d93d4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 28c8ffbb-af24-4a7d-ae74-154ac3332fcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 efa8dd85-c53f-47a6-8cfe-ff9bf83539df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 7157e7ed-3fb8-4852-a327-650c98fa9489)");

unit.assert_eq16(16'h0BC9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #489 fbcdd41f-4384-4c2d-9ec2-539e2dc60866)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0572;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #490 7e6df13c-ba10-4394-b397-c9fb4908fa95)");
unit.assert_eq16(16'h0572, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #490 5f9ba8c4-3638-4733-82fa-16d22d151db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 16a5fb26-6068-45a8-87d4-5e2b0ab15803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 8f9f8977-4e50-441f-95b7-917cdbb0146d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 3a8a707e-2f51-41c5-9ba7-8643ae5c2cac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 dcc70f0a-af24-4241-a59c-63a437caad8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 63a5c5ff-bb16-4fae-b108-5ffdd490d60f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 fb8ddc52-c125-4e5b-989e-01d70705773b)");

unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #490 cf963996-09e0-4c79-8dd3-aec3e782a069)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0639;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h0639, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #491 8c0a469a-fdf3-4b26-9bf0-8559597f5ccb)");
unit.assert_eq16(16'h02C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #491 5f427f7e-374d-4fc3-9230-04ce5ad1d37e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 968c1b08-cdc1-47a9-9e92-757a90ea8082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 c7ec89a7-3ebd-44ef-a7c0-29fa4af00221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 8ced7f30-c19d-4c71-891f-3e069e90eb66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 6cd5dc83-fa9d-44dd-9d4b-0de7537674cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 38298075-20de-45f1-9f48-095f2427be79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 ff668ccb-70f8-4c65-881d-d0fa220c8f0e)");

unit.assert_eq16(16'h0639, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #491 947b4722-fcc3-4aed-b6cd-5f242f8db166)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h025A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h0C26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #492 fe55d1f8-84a2-49c5-b679-f64ffd895a3b)");
unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #492 7dd08d04-272b-4f24-ba34-13b458f711ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 07f69dbc-1471-466e-9389-079a5ce30d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 2fd9f9a0-288e-457f-92a3-872a66ebaf8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 647f510f-68f1-41ca-99bd-275e4e6f37a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 2daaf58b-9100-486c-9aff-d5e87322c386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 150b1419-a3f5-42c0-8b06-eacbcbbc0a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 fa9deab7-65c5-4be7-b636-589946907aae)");

unit.assert_eq16(16'h0C26, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #492 77180032-c4ab-4b52-8dd7-c452c6453c7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h098C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #493 23530f41-43e8-4413-8951-1f1f14d9277f)");
unit.assert_eq16(16'h098C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #493 4e190f77-da51-4663-9d9b-04d122fafd00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 0eeede5c-d200-42e1-b36a-334d4e929b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 08957ef9-0f1a-4b2b-9a00-4dbb0f630dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 e1252280-947c-4809-829e-feefb0da6100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 f12553c1-e09a-459c-b3cb-687a67e86a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 134df377-29e3-44f0-a754-b11c5c86dd40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 4ecb11dd-fc00-4a7f-bab6-be42f4eef4a9)");

unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #493 aa1a7d5d-c588-4740-b71a-50faee61dc5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h093E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h046B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h093E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #494 ad13a5ec-96a4-40c2-b82a-d9422761ca1b)");
unit.assert_eq16(16'h046B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #494 3dd969e4-e56c-4470-9c2c-74a3d508f4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 5eb7ab58-2273-465c-a34d-1b00d2583038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 6f24088c-b21f-49d3-8baf-fcff6747910a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 61d3194f-1ee5-4bee-957c-c0f7609d18f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 b72fc0e7-3b38-4ec2-94e3-924b7236d9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 60ab4241-7b08-48b4-9743-1591263e2067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 047d9034-827a-422b-a3dd-bb763f494ee3)");

unit.assert_eq16(16'h093E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #494 f28437be-4336-4758-800c-51b74138f565)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0706;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h0D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #495 88e880dd-9283-40b8-a154-bb379b9aaa03)");
unit.assert_eq16(16'h0706, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #495 c8e2144e-d397-43e6-b0bf-55415b51dc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 dd36ff7e-cd1b-4842-9751-1a38d1d9364a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 dc5e7dbe-a9e3-441e-aaa5-a0ab9dc7933c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 7fda5373-72cc-4f2c-afc2-32d729704514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 3504580a-f735-4090-9327-b5c75cc6e17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 853afae0-0fd7-41a8-9480-49262f4e46ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 8ce7aa9a-3cd8-4e59-b7c2-f61c76bf88db)");

unit.assert_eq16(16'h0D57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #495 478f784b-37ae-49f1-92e9-f710a72c00f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h006B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #496 92b7529b-e171-42cd-a92b-872c806868d6)");
unit.assert_eq16(16'h006B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #496 a0d99b93-2870-4ad7-ac02-7b8d0c07b9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 639a39b4-c960-4637-a6b5-3ff54d48a954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 cba3abf0-be81-4926-b94b-6bb51aec44a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 2955a5a7-fd01-4fe0-bcbe-d94c39a4fc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 643f1dc7-af1b-45b2-9ada-11d57dde88ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 6fa3cf4f-ee0e-4285-8a5a-d68c731b9655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 6dff85fe-1bda-4f8b-829e-e30c07a97edd)");

unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #496 9aca17f0-55b1-4dce-9531-e4e9c1b328ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h002B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #497 0a03d482-32e8-4c1a-aac3-e4d3dea5705e)");
unit.assert_eq16(16'h002B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #497 c69b0425-31db-4d1a-946b-46e2f1af87d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 29c8182c-8bb0-4f58-8824-417f30c3e5bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 05ea245a-a520-4587-92d1-71b2cb47cd94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 c5f7fe37-1a33-47b3-9660-09e8d29dc24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 4f7f6f49-779d-45a7-830b-752c961daa6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 de5d723c-6214-42f7-809d-2d39015925e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 6c9b4f71-73e9-44fa-85d0-1de695d89367)");

unit.assert_eq16(16'h0D38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #497 4817c4b5-dd6e-4514-8996-ea843832c99d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h05D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #498 ef220e9d-c8fa-4334-a9a2-4c4877955bfb)");
unit.assert_eq16(16'h03DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #498 4893483e-1bfb-47ea-8fce-24ba67ab8ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 6ed2f9d3-3404-4623-9ecb-9ed84dbc9938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 28160b47-7220-4c53-a7e9-9ffdf7ff9e3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 120790db-a3ff-4bca-ad9d-a9cd6c0ed568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 08d48fef-b78e-4376-9ded-4e181e1f15b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 b302870f-cd2d-453d-9db2-7a79849c9274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 cc3c7205-7b84-440e-a896-32666591ca2b)");

unit.assert_eq16(16'h05D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #498 dd110df4-a76a-46f4-b888-40cc75a1b6ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h019D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h031C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h019D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #499 3b95c14a-29ca-4ffc-950d-65ead8d5af57)");
unit.assert_eq16(16'h031C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #499 0ca575fb-c4aa-446e-bc45-ba0c57dcf390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 dcb336a2-c60d-4856-9718-5e86126122d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 064005ff-7041-4ba5-8d70-c30aded5f732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 501c03c9-446f-41ac-b46e-7af603858bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 27f179f9-d211-408a-a7dc-d06d51600f29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 98952fb6-659c-4b57-aa43-c046237a18ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 7f42f6dd-d0d5-4f76-be0b-5861ce2658df)");

unit.assert_eq16(16'h019D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #499 90f75e3f-d629-40f9-9486-0a1950463a7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0380;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h0380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #500 c22250e3-c493-43a7-a22f-191d9f8aed54)");
unit.assert_eq16(16'h01E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #500 3206e8de-1195-47a6-8240-256b0dd71359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 7ef67559-0404-4ef7-b55d-74e9ab26228a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 64ead922-72eb-420d-8c19-eb73e0157b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 39e3ea0b-18cd-4db5-98ac-2f67c6c3b74f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 7f86c3c8-4b94-4cd5-8fbe-b99b4fba00b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 d1f6d7ed-43d6-4440-84c3-13e2368243fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 541ed74a-e64f-4aff-9e0b-e2a7d7a80e8c)");

unit.assert_eq16(16'h0380, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #500 93ab01b1-4675-485a-b5fe-a29095bdeed2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h067A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h086C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h067A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #501 81c8defc-6449-4a1b-9dc9-740866a1ea36)");
unit.assert_eq16(16'h086C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #501 864b7051-d81f-4b3d-85ac-f961346edb5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 b7a8ff8a-db02-4376-b45f-1aa6209d6a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 0ac13ad0-8e2a-40ff-893a-def00e28e8d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 7018241a-2749-4035-8a36-eeaeabaac426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 3390fe15-e72c-4fa5-a9c1-637abe54ce14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 0c1f63e7-1227-4846-a63d-49f2062bfa38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 244c14b9-0250-4a95-9474-d2f80dde73d2)");

unit.assert_eq16(16'h067A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #501 97b86693-77c5-4ec4-a2d9-9debac27bcbb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #502 38287387-9f62-4058-bfa3-86ed2069e0f8)");
unit.assert_eq16(16'h0E46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #502 b4abd958-c9fa-49e9-b58e-2b5e0d999763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 cd3cef37-d316-4006-be9c-950b92357509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 949a538d-b4d3-4fef-a792-8ec27993d925)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 32dafd00-5b6b-40eb-9358-426d933140c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 50a312f4-ff8e-479e-8f31-910cf0e0d63e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 0599913f-e270-4cbf-aa8d-3e6f6c34dae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 6b40450f-27bb-404c-8e6d-102f424c4dd2)");

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #502 ec828598-e2d4-4e7c-afb6-53d212c9b05d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0503;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h0D02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #503 b366bc06-d82b-45df-9bd6-8d88ff75c738)");
unit.assert_eq16(16'h0503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #503 c0b32568-c70a-4198-af3d-991f7a30b912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 a592773f-1f99-47a9-ac91-ecc0a0af66ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 01b2c1ce-b374-4a7e-8428-1f358f2ee1e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 635add6b-f577-4f7d-845d-d64a66c14082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 b7b6b591-06e0-4efe-8663-01f68f7b91dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 a7ff488c-f234-4a87-b8ed-2144ea5953c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 c2a80715-14a4-41b5-af4d-10604de1489c)");

unit.assert_eq16(16'h0D02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #503 92573231-7bce-4866-8dc2-df1982301709)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0066;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0022;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #504 deb0d433-10d4-4e6a-bd06-3a9e191be609)");
unit.assert_eq16(16'h0022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #504 bfd3515d-2284-4687-b89d-f22318942644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 6f4380b9-3b98-49b5-83a3-0ca311cd590a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 a32fc07b-e892-4397-829d-e9c16539473f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 99551204-1d31-4a85-ad1c-18555b6c97a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 a2996ac3-d847-4b9c-894f-bced2f6f99d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 dd6730b6-b48f-4ec7-9957-d5e30320d558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 b9b12bd8-a460-4407-9b8e-48a2398c1180)");

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #504 39bd2395-b24e-4ac5-8c8a-7299aff5652d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0188;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h0188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #505 a4b9c551-1d34-4c7c-9383-a8e1e581aba9)");
unit.assert_eq16(16'h0B30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #505 6a25ef54-fd54-4866-bccd-5c43bb82085c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 328deadc-fbbe-4da3-a78e-0ce87c533353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 f834cff8-302c-4c7d-91d5-422042992046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 fdce7561-ecb7-45ed-8ef7-51148a0de616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 f7027141-2ea5-47ec-ae14-5499e519e399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 155ef736-28c7-4614-93a7-246bd02abb08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 b8335a4a-0572-4044-974e-16eed4bd5dd2)");

unit.assert_eq16(16'h0188, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #505 f4322b3c-0d16-48d8-b086-4aa2aa38a90d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0258;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h0D17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #506 eb007103-1447-4132-ac3e-7203fb7ac95c)");
unit.assert_eq16(16'h0258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #506 a8a34581-f7e4-47ce-8dff-cbf37d311678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 0f45fdcc-734f-40ee-8c22-0d00972d59fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 eb8e64cd-6c59-4a67-9373-51d8ff02da31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 98e2d78b-5977-4ea9-93d8-5aa3db3cb8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 4ac435f7-8214-449f-8f49-38a2db10d740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 60c1d08d-49bd-40df-8fa4-1cf670bb031d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 e32fe6b4-c908-4721-8042-225ab97e5810)");

unit.assert_eq16(16'h0D17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #506 23891960-66c3-451a-9a5d-c7d207634b28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h062A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h059C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h062A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #507 291332cf-e387-4f4e-9e30-3df75ad12e1b)");
unit.assert_eq16(16'h059C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #507 7cf16b8d-11da-4495-aca9-be4d8188fc93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 af50d875-aeda-4846-9637-7d0a17464243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 966cf563-a8bd-42ec-a9cc-b01a1198aedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 a085dd1f-4755-4c07-b5ea-d53df1e31748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 c186ad32-0b0c-4469-8032-35d5c261d280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 a5c788d3-4af9-421f-8d5a-6fe5478caf36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 3406a270-b75e-49cf-a2d0-df02cee341cd)");

unit.assert_eq16(16'h062A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #507 1f2ebb76-fabb-4a88-8e85-a7099468593d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0048;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h0E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #508 7e90cfc8-623c-4b51-851f-62bdc765f5fc)");
unit.assert_eq16(16'h0048, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #508 64da9ba8-51c6-453d-b589-6122cc7388bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 34296ffc-d0bf-48c1-b6d3-ff2c0e22d314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 a881851c-06e1-43d7-830e-bb428097f325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 7096417a-9a5a-412b-9141-cd1855deefb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 1d1c8f94-ce31-496e-9a75-154670c2e83f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 b1fd4ac5-7ddc-4149-9b58-c9eecc3c4699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 e4d7e079-7af6-4f0e-97da-1fbcb88a3f7d)");

unit.assert_eq16(16'h0E2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #508 9d00886b-b617-48d2-8654-8b6c6c5a765a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0488;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h0488, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #509 5c88f358-c419-4ce0-adbb-45d0c72d96f4)");
unit.assert_eq16(16'h04C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #509 998f09cd-bb58-4983-bd27-6ce367975fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 b85d3c3e-d72f-4aec-a9d2-43f85964dc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 a12c7178-6af9-4012-ad22-f455413088b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 2ea6033c-df75-48d6-ae6d-a150090ded06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 819811c3-e62e-4a14-bfe3-5fd3790644d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 c85a5fdc-9259-49d8-80b6-765bc94e75e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 1bc20f9f-b681-478b-a562-86542234bcf7)");

unit.assert_eq16(16'h0488, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #509 4899e955-5f45-460a-9d84-8340ce6fe7d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0482;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h07F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #510 a79db4cb-9b17-4dba-a12f-cc1e124be89e)");
unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #510 13208f6d-cec3-4888-97f5-fc883b3828e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 22ba51bc-2450-4c8c-94b7-89948c24ae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 6aae69e7-2050-4b02-bec7-bea5daa4cea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 98178485-8d8a-40f9-bd5d-9eb69bd28e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 5544a2d8-0ff9-41da-bc1a-17625a9711e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 76522941-18a8-47fd-92d0-a30de4006f69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 a3d68c39-0719-4f2b-9f0d-ec3a71c4ebb8)");

unit.assert_eq16(16'h07F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #510 be98a1a7-38c7-4c20-9948-9115b8ebfefd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h057E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #511 a67495e4-d74c-4dd5-a511-c91e6f2f9965)");
unit.assert_eq16(16'h05D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #511 2e4d6322-f6fb-4961-bfa1-d084f3c3b206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 339ccf19-ebd4-40e4-98f6-2d784ee8b6cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 36150394-2de2-4939-bf74-282e0894019c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 f7b6d39b-4a71-4cc4-8685-88229d1cfc11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 556fdb2f-494e-4b50-b053-1741bf2c551a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 1d15ed75-2b1a-48bb-bd59-d1f4819883eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 d3b516f3-ffde-407e-ada4-b3ffb92789a4)");

unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #511 88e7ecd1-5068-4a08-98c7-85da7c46a41f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0400;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #512 81507402-4560-42ce-a2cb-db4ed19f229b)");
unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #512 f7bfbd82-1285-4f63-a200-a1f19577f007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 e872d642-d8b8-448e-aa30-4dcb4d380473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 c37ad640-1a50-4619-832d-4a929e9084c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 41cecc9c-1de4-4385-bd30-e24a88000e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 10bc5195-ad95-4d5b-86a7-05319326511c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 561c894d-523c-4998-bfc4-c51754144e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 3d6c1e5d-e805-4f7f-bc09-6f2f17bc37a4)");

unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #512 6d8809ac-cbdb-4d40-8d04-f117444816a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0402;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0328;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0059;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h0328, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #513 bdbb686a-c213-42f8-b90d-17cbb4ad2f25)");
unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #513 93a521a8-fdd8-4b09-8313-a25abb0840f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 91293a05-5165-4b3b-9451-7419d13ad29a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 65165dec-3056-4349-8dab-3931ec971529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 406510a2-50d5-4e23-855e-f89bb4b0d650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 a822c25e-fff4-4254-8760-5e8886b8c83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 8cf9a92e-1d8f-4049-aaf5-cd0d198318e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 92489890-bbeb-49e5-a1cf-81dfb88e96fb)");

unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #513 87912026-4a51-4011-b60c-04cada58e98d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0404;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #514 0971df8e-1662-49dd-986c-2219603b5400)");
unit.assert_eq16(16'h0B65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #514 3d965b80-5f1e-40ee-a2b7-e3bb0e19e13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 c5494232-52b1-4579-a27c-f861d4dc760d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 0a663722-9490-441b-bfae-b33f773ff0d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 77af39a3-e791-4829-bd12-c66625f9c298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 ac21ac32-474c-440b-86ef-de9e3813474e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 b7d4b24b-7f17-4242-909d-ad46cc99b934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 8ff56a23-0f75-45b4-ad49-070a2ee412f5)");

unit.assert_eq16(16'h0B65, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #514 c76bb236-523f-4667-9f55-b76635bc6520)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0406;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h0FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #515 71785349-3061-4bc9-83f6-e3d80d4530f0)");
unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #515 6a25dd02-34bc-4d22-87ff-93731f2f9fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 eaf1955c-d93d-4c37-83ec-04ef5f429ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 797c7d45-4add-48b2-ba37-b300a6d07843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 4562f5d3-8c3e-412e-92d7-97bcae7b25ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 c8cdb2ee-d833-47a4-8c93-9fe29ece4a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 7d296258-bdee-4125-b399-f205c6adb541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 a52148e3-5b9d-4632-9f83-70dc04afaf69)");

unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #515 c9ae6a38-54a2-44fd-92b4-ba9ed9ccaf18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0408;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h066F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #516 6db8fd53-9c26-440a-85f5-ac6c4801325d)");
unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #516 5bd2826c-541e-4023-8992-4e7eaacc9c33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 05d923e1-65cf-42d8-9030-7c39b861e19f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 39c0e32b-ea55-4f65-8328-31394bc0954b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 af87c2ec-fc36-49b7-acf8-f21bca8e369b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 94c13d32-a432-43c1-9057-05934a51bbf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 52f0ddf7-3c9e-4e6a-9cb6-15764066bd28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 ae70cfe5-eb64-4c2f-951b-ba61244e6dab)");

unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #516 30f8cd37-60bb-425d-a5b3-c45a7908c6e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0527;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h0CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #517 f3b3390e-52bb-477a-b6c1-1e57dc6599a7)");
unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #517 b26a62e6-0eec-4e13-8404-84410a778250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 c9a5eeda-a3d7-4416-b2e6-f8c1126bc4e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 9a29b81d-d93c-4103-b00c-7d726ecca75f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 d2fcb961-1d8a-4a59-a608-af0fe5072382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 5046a3eb-2def-4326-9b89-1ffaab50fa11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 d586152b-5529-40e4-be00-17e0a967c8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 6ce499e0-f1a1-477f-bfcd-55d50ff5ccad)");

unit.assert_eq16(16'h0527, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #517 75c788fe-5e78-44bb-9a18-e3972af7716e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h061E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h0E3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #518 7a2b47e9-a1b6-4f88-ac67-161edf454d1f)");
unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #518 e37f1935-8c77-4040-bed7-7625cfed0775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 c6cf2c1f-0ebd-4306-90d6-dbc725d8893f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 4243785c-d6d2-4226-abcb-3384af78001d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 9ec8bd6a-0d88-4b45-8976-139abafc2420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 67e4ce84-bf69-4a31-a5c8-ee52fc660d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 ad7d6541-4c4a-4c6c-b627-ecc842cff865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 b28f0b22-982a-4108-ad38-fc8a61153a97)");

unit.assert_eq16(16'h061E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #518 b4ecc79b-fa25-48e4-a1bd-40d771902137)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h094E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h094E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #519 ffc3eba3-f30c-404b-8fe3-9f91e4921501)");
unit.assert_eq16(16'h01FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #519 2c36a490-bc31-4bb5-8821-686180d1209d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 149f8511-3ece-4f93-8c6c-e6eda1dbffd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 87b0022e-a497-4a87-8df5-7a549967c90c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 21f40699-3e10-46f6-9f56-5af22259059e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 deef7038-08ef-434c-bbca-49d3249150ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 982f956e-55c6-4915-8278-4d1cc503adc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 d5c229d4-2446-47d0-8456-5a699ff10adf)");

unit.assert_eq16(16'h01FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #519 b3ec9776-de97-44ac-85e2-31113578c952)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0410;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0411;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h0411, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #520 778f8365-8afa-4939-841f-e7468bbbb719)");
unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #520 f46d6a0e-3103-4330-88fd-c9b843bfa6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 e4e62380-86e9-4080-981d-2ff5ab9a3260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 4b289161-be9c-4d0a-bc3b-9387b5dc0c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 2516a45d-9746-4e83-ba94-bb6b716d1e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 24b4c2ac-7558-4d95-810d-c41e5b603164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 ca100d1d-5d8b-45bc-8b87-b71027a6a06a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 289731ea-e589-4dee-beb4-dfc576c30e66)");

unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #520 70052696-289d-4f7f-bf9d-05c484dcad12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0412;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0688;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h0688, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #521 d1601471-1b41-4ea9-9d5a-7090fcae6232)");
unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #521 e1c11a65-1059-41c6-bebf-9dddf70d2986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 f930c21c-148f-4c7d-bc1c-5e043037f550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 067f8b6d-4651-4ce4-bd5d-a9791bf4793f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 2ecbe7f0-3d25-424d-ab52-f0df9295b250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 4f2887e4-fa55-4732-8b46-00086691708a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 499055a6-73ea-4776-9878-c182151c4f00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 dfacd75f-a2bb-494b-a5e7-daee3c282852)");

unit.assert_eq16(16'h05CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #521 444b9370-8f32-46be-a63c-a0831dd67c68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0414;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #522 fec1aa28-995b-4edd-9d53-390234cc7c27)");
unit.assert_eq16(16'h0AF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #522 da2f4c46-f7c9-4210-b2a6-edc48001e48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 35ed07ee-feb4-47f3-b891-114f8534a173)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 cd85f70a-e05d-4ef1-99f8-a31ad5ebedad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 2dac0d10-2f5e-4c6d-a05d-65ea41c49cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 87050162-5863-4ad0-96ba-af06956536b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 32886973-4551-4cb6-9302-5728be2c8ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 077058b6-589b-47a8-8da2-a7ac688476b2)");

unit.assert_eq16(16'h0AF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #522 3945c35c-89d9-43da-b7fb-f5ec69742359)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0416;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0560;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h0560, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #523 0b1ea433-4ae1-4fb0-a9ff-63cddcd19ac9)");
unit.assert_eq16(16'h0601, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #523 081d0dcc-6721-4a3a-b1ce-7c680a0b1904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 3ead4524-d389-4fda-8f7a-d6853d6a5ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 a8b615a4-2d71-4f15-b8d6-264179cccf33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 57da3f38-e06b-4b64-abe5-9a3a6dd86c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 0633085c-7d73-42d6-ba7b-0cb54c61886c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 b586311b-552e-427e-b3c9-afa9593fd69f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 ab173886-1bf8-44ad-b72c-a0168774bf07)");

unit.assert_eq16(16'h0601, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #523 a1790cd2-5405-42f9-b680-46683a7adc09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0418;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0740;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h02F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #524 936142e0-d364-42fb-86c2-f38d9c751093)");
unit.assert_eq16(16'h0740, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #524 c4bcfada-e168-4c1d-a64f-49f7a03a93c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 125ade4e-2781-4417-b4ac-06b8477b2062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 419ba0e0-740a-4990-a12e-33cb255d7af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 04e96468-93d3-40b1-bd1d-90f18b67d05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 322403c1-89e6-4b2e-a43a-826ad0873bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 5da9bbaf-42cd-4126-825c-43fea5ec373c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 063c922a-9e36-4502-8e2e-a49e5c9352c6)");

unit.assert_eq16(16'h0740, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #524 859005d9-5d99-4e5a-b06e-2c36aec00cd2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0654;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h0B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #525 420750f3-979d-4a4b-8f1b-f2166210567d)");
unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #525 61342d55-fa9b-4b75-aa4a-c408f8c00af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 304f1a62-a537-4bee-8a91-171f1ff6d25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 a547c376-52a8-4cde-bcd6-a3e44b2a2c8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 68b45c73-c826-4f20-84b1-fb6f8a2567b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 0ba4ede5-c461-4ad2-aecc-c81081f5162d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 03c72899-b5c7-4d3c-b786-abfcfb4576b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 405643b3-6d8e-4af2-a73f-4a7c396e339f)");

unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #525 b9f20618-c70a-4049-b7c6-02c172829187)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0836;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h0DEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #526 c8b444c1-d536-4e5a-bfb9-200c22382700)");
unit.assert_eq16(16'h0836, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #526 d2e9aee1-b5b0-41e0-8010-5a5225da855d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 fe943dce-8790-4fee-ba2f-55961354390f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 244ce44d-3936-4bdb-a1fa-52fae31295a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 0e7d978e-5302-4119-9312-dac6c345ac99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 fc3eb9a6-5990-4193-9540-b19e6b6b57b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 c2ddce32-d920-44c7-af5c-6276f6c7d7e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 8672e032-957c-4809-9433-6c4040ea65fb)");

unit.assert_eq16(16'h0836, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #526 0ee24e9d-1f09-4535-aafa-85b8ac92cdc9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #527 7fc34c28-13b6-49cd-b335-c8264c68e1f5)");
unit.assert_eq16(16'h0C52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #527 65695c10-ddb9-4692-b758-72b876a54da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 9897e860-17d9-446c-a79d-9a2bfc7e592a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 fff18f44-cd0e-4b04-bcf3-94ce80222e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 6973d7ab-e88d-4e41-9e91-ae330ae06dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 b4f831b5-86d9-46c6-a16f-65ec6d23ee00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 248854e3-81a3-4c27-8c29-4e7ac4592b16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 9867a674-a88c-47aa-9f98-23f3155dab59)");

unit.assert_eq16(16'h0C52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #527 6c212d85-3a70-4576-af20-089235bf7859)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0420;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h0C78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #528 f61b2073-8933-45cb-b1da-b9ffdfda0aa5)");
unit.assert_eq16(16'h05A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #528 a3923f5d-031f-496f-b483-b2bbf0ef4a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 df41ea76-abf2-4571-abc5-ba46bda039c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 ad6ceac6-b9f8-4245-bf6a-b90be9748584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 6409c7a5-2b4d-4614-9f7d-afdcd1ffda2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 72b9d647-2dce-49b7-b01e-696ec2a09e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 b5d1567a-9f02-4a72-9d64-eea765a2af14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 226252af-3f3b-4b20-a455-389e0f694010)");

unit.assert_eq16(16'h05A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #528 33be0393-1caf-4b8f-875f-08130fccfbf5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0422;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0105;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h0105, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #529 8ad3d8cd-4cc5-4bb4-b443-ef170a6fd26a)");
unit.assert_eq16(16'h01B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #529 ae636c90-8cae-4794-a55a-e9da17f11e58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 659cecb5-4ef4-4424-86b8-98a559261d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 67464b59-d1df-470c-8c65-eb60c72fa888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 6e6dfcf1-181e-4891-b338-408bcaeca832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 3cfb5edc-9d6a-474f-9c9d-7feaf624089a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 b8adb252-3b38-4948-8a1b-08f78799631a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 ade7e5d1-6a5a-4041-acac-cdb10c332b37)");

unit.assert_eq16(16'h01B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #529 65e4f623-7a81-4faa-91fa-09364e65dd7d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0424;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0849;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h0D35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #530 6dcf75c1-3cef-4ceb-b99f-edb4fe67b630)");
unit.assert_eq16(16'h0849, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #530 0dd47721-c675-4105-8528-7adfc86ad5e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 b804851f-13ff-4ca2-a52c-c957a4aa0a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 35d9445b-3288-4bad-a624-c8fffde033ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 a4ffd9d1-eebf-4b4b-a06f-12156ec274ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 cfa38ca3-dffc-411a-a14f-7fe3a615873a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 cfe2ec81-98aa-4ed0-ad9f-89850efb7d1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 5417adf3-d635-4db1-ad63-b8648a62e682)");

unit.assert_eq16(16'h0849, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #530 6a0e99e7-72d0-41fa-84d9-0f9fdb81adc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0426;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0041;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h0041, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #531 884b68d1-a305-4594-8590-8e52bb82487d)");
unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #531 6fbd6d54-3ab6-4b24-92f0-6048c0b582a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 67808d25-287e-4642-8b1f-f1069727f49a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 48cc45cd-c287-4835-be99-6863cdc8a6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 82638e2d-0644-4348-a1b3-507261a66eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 963fca4a-ea6d-410f-b6f3-396acf7d8151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 0db1f7f2-0d20-4cbf-8d7b-fa6adf51988b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 f01d0999-80d8-474d-831e-6ad40356d23d)");

unit.assert_eq16(16'h01C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #531 a01a14f3-b895-45bc-9a98-d11e14aa7640)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0428;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0550;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'h0FA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #532 588edb32-0f53-4a7b-90a7-b1d4871d7855)");
unit.assert_eq16(16'h0550, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #532 6cedb4cd-f2b5-436a-bcad-89424a3690eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 9bcbf0ae-1776-4b27-9f4e-8cbdce312019)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 0262167e-85db-4a05-88ba-47d5ff9307c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 2fe91a05-c0cf-4248-a04c-00f79ab0fbe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 0d544cc0-3418-49a1-9e37-619b14354659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 05b88e33-f580-46bd-a94b-4d95e5438380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 a5b497c5-36b0-45ea-bc3d-4f3b994c02bc)");

unit.assert_eq16(16'h0550, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #532 e75a9a16-46d0-49c2-8883-1b633db22279)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h07EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #533 15e86a27-6cdb-4d16-b2da-6d85521723eb)");
unit.assert_eq16(16'h09CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #533 728e2350-bedd-4582-967b-e41415831012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 a6e88623-a510-44c4-a7b9-d6cb381124e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 620bfd0e-1e8d-4bcd-9628-d6a2a1b1d548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 15ded0de-6a1f-457e-9318-7227d0f4de72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 429eca5b-4a28-4666-a2b5-6b867506aeb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 873b35c4-a464-46dd-b28e-eaabc477095b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 8ab3ec01-bbd7-43b7-bc9e-e2a80fc5be0d)");

unit.assert_eq16(16'h09CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #533 37d1cf18-4823-4d71-b756-335780266be1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0505;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h0505, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #534 e9e5e73d-b07f-47b1-9900-015f6afa6071)");
unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #534 7fab2f73-7f05-4ea8-9b8c-bcb52f7925ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 e8b280a8-eb91-4065-b9b9-5f1bea965564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 fba9f61d-55a2-40bf-a18e-b57f1db4a544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 ac1f31e0-2b3b-489b-b64b-9c0644919775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 14363d35-bf91-43c4-a3d2-164837e19563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 b03f2a68-e747-4c9f-857e-ac277ba52b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 db1ec41b-84a8-4bc6-b44c-f7a6613683f5)");

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #534 56354e1f-c040-4228-a31c-a1960057bcb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h015F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h015F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #535 3a6d1ceb-46c4-4b26-a6b2-6434f4d847ec)");
unit.assert_eq16(16'h0CAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #535 efae23ec-45da-4719-8289-546012149515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 64fc9c9d-74da-44fc-817c-76b150a1648d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 58d1df8a-a559-485f-8eca-261ee5b3d4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 79ec4962-6d28-4b19-a14f-4ecdc12a4503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 83785b01-85d3-4a0d-826c-074c47550d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 82116c76-7c65-4aa6-90bb-a0ac16c4ebbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 354e7005-c8bb-499d-8fea-c79e9a4833db)");

unit.assert_eq16(16'h0CAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #535 64925563-a68c-4dc7-a763-489f99a1386d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0430;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h08A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #536 7e402ef3-27cf-456f-935a-7a313d675929)");
unit.assert_eq16(16'h09AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #536 2d7a9231-02df-41a5-b7b7-99e516df9367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 e184d591-1863-48a1-9929-1eb483036fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 58d3562c-022a-454b-982e-512494ad2bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 d5b177fa-ba69-4249-915e-e452c63b79bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 22fd8ece-1a89-49d4-88d8-eb94f7f4cea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 01e3300a-a79f-444b-9528-d34205587a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 0da376ae-0add-4d1d-a1b8-3a482f9982c7)");

unit.assert_eq16(16'h09AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #536 1bc8d1e9-ad0d-4d09-9396-0e085f7b0e93)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0432;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0967;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h00D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #537 46cd8da8-ef8d-456e-85a6-3da60e0a6295)");
unit.assert_eq16(16'h0967, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #537 6e058fde-1c2f-4645-9a92-ebd3bf2168fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 1ab5bc7c-445c-44de-875d-ec8b18f1b4fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 ffd85311-278c-4dee-9475-31b8eae67cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 df13e4f2-6811-4a0f-827d-f8376f127338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 7bb44c8e-c8b3-40b1-b9c0-0d98dfda1bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 35d4af83-e2c9-4fd4-980f-5e5e7689bbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 bd8d5040-4ae9-4099-b7fb-cbbf37f9742e)");

unit.assert_eq16(16'h0967, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #537 995e6dec-cc16-4d33-b423-0b06fd6bbca6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0434;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h07DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #538 e71a4289-467e-4ff5-aaa9-6a0bf936e861)");
unit.assert_eq16(16'h0C32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #538 b29338e7-c082-43c5-95ef-40b83fd0301a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 e57f04ed-20ba-4aaa-a9e5-730a5dd8a7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 2517f3d7-e5f7-4d2a-9571-62b9be0bac29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 850c7775-b08b-4171-82b7-174f10a36d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 bab66c9c-6b75-4938-91aa-bbfdf3b8ce91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 787128aa-843a-4fe0-94c3-b2cd07d13385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 7450c8a8-e037-4499-9fc7-b6f792748df8)");

unit.assert_eq16(16'h0C32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #538 a4539c2c-1885-4f06-976f-eb832cc07aa8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0436;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0837;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h07D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #539 f501eb3b-ba98-4d1a-a2f4-e5701b7de46a)");
unit.assert_eq16(16'h0837, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #539 adf0248c-7624-43d8-a312-f6c07860bb06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 9e6af492-cf6e-4b5f-ac22-e77f918738c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 beb3350d-4ee3-48ec-9ddf-758f92320ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 66be75ea-8caf-4bb9-b1d6-17db0d031281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 13a8e1bd-efe5-4351-afb9-fb58f3358314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 2f87e2ef-9e8a-4998-9086-7d385a177b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 8401c5af-f5fc-4711-8f95-eb41b7414818)");

unit.assert_eq16(16'h0837, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #539 901c1b3c-6234-4ac2-acc4-7664905a5c2c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0438;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h029B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h029B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #540 c686fcae-fc57-4be2-af68-43b7dbf93496)");
unit.assert_eq16(16'h04C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #540 e5dee53e-a90f-4646-9ae6-b2fb9130574f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 a8ebc68a-0c8e-4ff7-b5b2-dacb2d7d2d5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 396ddd81-b4c8-4092-9673-cc1f0e988af5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 2766daf6-fe0c-486c-b2ad-78970a05d6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 e958a741-3b64-4f86-938d-f8063bb6928b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 aa2223cb-ab12-41a9-b7af-e3ee55856066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 e42ecb11-8360-4458-a12b-cff46525e960)");

unit.assert_eq16(16'h04C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #540 0610b600-7631-4891-b97f-408a72d41d26)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h0D67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #541 c0f44f45-021b-4a24-82e5-8b20259bb86f)");
unit.assert_eq16(16'h06BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #541 9da20058-8057-41a2-b642-556ae8b645f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 6846e0d9-64b6-49b8-a008-bafb950a2177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 6604a888-821a-4159-8e37-7deb960b7d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 5dbb3985-cf2d-4980-8267-ca3f42b09bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 cc3c2b54-bad9-47e0-8d10-31a9875d6b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 392c74ae-9da8-4eb0-b153-1de034f1e0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 8e122f93-f8b3-4fff-84b1-a41a2e84aba2)");

unit.assert_eq16(16'h06BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #541 831fb65d-8f10-4039-acfe-a6ff4dfa14cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0590;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h0590, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #542 1be5ceb4-b88f-4288-91e1-a657deffe9f6)");
unit.assert_eq16(16'h08F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #542 4d908591-f33f-463b-8530-a326a04dfc59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 fde6dcb5-319b-4015-8e4e-e4099697d4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 3768651f-3a84-4f59-8bb0-c8b648498e7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 893b8b6e-3ada-485a-9fe1-083c89c86759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 6334c840-f5f0-4737-bea9-bd7341af0e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 7b74a6bc-57dd-486e-a002-15e51c0a752f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 bc2df7df-ca85-4890-801b-60ef883b3a53)");

unit.assert_eq16(16'h08F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #542 8715fe52-f2d7-4b92-8e8c-46a5605640d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h08AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #543 8607d7e6-2473-4644-839f-a5ac4bce22ea)");
unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #543 d130f197-e7c1-4f0a-97a4-47687f68111d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 4b029e38-9919-4526-b45e-85b034fb0e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 cd0cc4c8-ecb7-4190-9798-428cda22643a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 dfb1c7d6-8cb7-4bab-aed1-838b3e76b645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 f93d5189-0ba5-4370-a0ab-04cbd523ac7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 e14a08c5-ab0a-4711-add9-829cb8889651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 16cec751-c15b-43c4-8d2f-43e04dd2eda7)");

unit.assert_eq16(16'h071B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #543 28f095fb-4b3f-4e71-8a22-f21fbb6b6536)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0440;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'h08D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #544 8f64ed91-b203-4853-a6e5-989635e76482)");
unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #544 0bf7151d-3dae-4e9a-bd40-210a57c59dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 ceb80a2a-1540-4f52-8792-797a37d71ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 9af3c921-cd83-42ac-b531-f352476da6d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 60981901-16f2-4685-b9e2-7aff9597b3c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 7d224ae4-717d-40f0-b0ba-9977ae39a099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 1a30e44f-0a80-4b6b-b2a6-07ffd83e482a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 8e2d7296-1ae0-4818-8a13-809b93bef269)");

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #544 ee50ffb9-caa4-4c51-9dd6-e16232862472)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0442;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0190;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h0190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #545 e18a52ba-706b-4404-9156-fbb51dbdcc57)");
unit.assert_eq16(16'h0CE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #545 b195e066-42b9-4847-84c7-3b2874cfd022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 9724efea-1bb4-4ca0-8c72-c3935f56cc2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 0bb7e52d-6f98-4c70-96a3-3bf99b9dc129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 8ae1b589-b68d-40f0-a43f-06c8201d250e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 b0905f02-6245-4adf-8fd0-d764ca5abc9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 67b50b0c-134f-418f-a2f9-c306c53ff514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 6f66cc1c-ddc5-4cdb-b855-d882af9cd285)");

unit.assert_eq16(16'h0CE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #545 c06b2c27-2737-4d08-a007-d92a818121be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0444;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h008D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h008D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #546 7a6c9d35-75eb-4487-b2c1-24ac62cec4e1)");
unit.assert_eq16(16'h0DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #546 a673ba25-58ce-41be-9652-6b1254b58b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 ddcb0584-4c87-408e-a21f-6180243b8387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 0c0ea50d-d5c7-4926-9400-f71bdcabfe06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 61fc3c91-b982-4b59-9f6c-1965c7ce3a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 941c5a5a-636a-4bac-9336-289629612853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 32c50cf9-09ac-4984-be6c-9e0c146a08a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 4496b211-8043-445f-b583-ba53de18ccf9)");

unit.assert_eq16(16'h0DFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #546 596982ad-9cd7-4862-91af-8dd5965f0bd8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0446;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0693;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h02E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #547 7faba57e-52b9-46d1-8c99-98b2c2ca5803)");
unit.assert_eq16(16'h0693, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #547 57db8c3f-7547-4b94-9a19-5cfea6dce824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 7358ff21-d4ef-4321-8a32-fc6df81f2ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 ca8b0257-95fd-4ee5-af91-477a5696d87c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 e05a7a47-3d06-4b93-b919-01237d53951c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 3f71b4e4-c461-4296-a8cb-b9160b7de9c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 c1cda79f-bb86-4006-a7c3-9a0538c45a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 cca61bb5-fbf3-41c5-9ed4-15b5bdf156f3)");

unit.assert_eq16(16'h0693, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #547 475e3fcf-31f9-4c04-a254-726a7d2eabf4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0448;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0321;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h0321, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #548 b241a85a-73a6-42ee-9499-3884d91f69e0)");
unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #548 8728d709-4484-44c3-8b71-f3b01461f2b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 ef79a92c-6698-42fd-b3e7-c2a9497a1819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 d6ae07dd-e449-47f6-b66a-524090774bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 0ea4e0ab-e045-441b-815d-8bf1c7eaf90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 4b9e9c61-a3d8-4cd9-9ab8-457ab48fc47c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 8443b0fb-327f-4b74-875c-fead3a828545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 a0aeb3b0-2fde-4990-b210-1a3bcea3bbd3)");

unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #548 d879bace-ad75-415e-ad22-789f938e4710)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #549 2031f239-6c2d-4b4a-8622-7e4336c058b7)");
unit.assert_eq16(16'h0F8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #549 712bd45a-a308-4c33-90eb-dc589a81e8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 7ef83421-b940-48bb-a631-6d63ab36b37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 0173d248-9542-4920-8e05-95cd96f87b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 4939c921-c456-47f9-8f88-fc0a39689e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 c06c22bb-e83c-4d5f-8330-a740b7357292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 dcc6c34d-acb3-421b-9edf-33920792f31f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 21e99cea-89f1-4df8-b6ba-b32b12ef5aa3)");

unit.assert_eq16(16'h0F8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #549 8ae86814-3616-4a64-96f9-6cc6687fbe20)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h062B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0514;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h062B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #550 9bdc9f8f-7bd2-4334-9038-1db186d7adc2)");
unit.assert_eq16(16'h0514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #550 fc2ac3ff-20c6-433b-9e5f-fd1126397d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 2c3adcbd-482d-427c-8efa-47fb36498e69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 0898a342-6037-45ef-8522-b3de242e9431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 4ea11c66-19bb-4838-bd8b-73b7df60b02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 4d770127-70f5-499d-b0a7-c80b7a1421ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 9ee35d0d-9426-4c66-a87b-2f1fb2fb4dc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 e25bf3fe-a539-4c06-a3bf-30947e5d3a07)");

unit.assert_eq16(16'h0514, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #550 49243abc-c34d-458a-8a4e-599e0f799def)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0938;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h0938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #551 5c59f06d-574f-4d3f-907e-d8c89e1bf57a)");
unit.assert_eq16(16'h0C8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #551 ff3954ef-cc5c-42ee-9e84-8c076719aab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 fa794b3b-9ed2-491a-a898-de823382e8c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 7ba135d2-5b4d-46be-85e6-d03377c6feee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 6bdde367-1072-4df8-8ff6-2419a449a26e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 0b62f3c7-7270-4649-89c7-4a89f9012d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 8fb32cc9-091a-4ab9-87e5-00237b6ee27e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 cbb29dc8-c99e-4747-a296-a1f25646aab1)");

unit.assert_eq16(16'h0C8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #551 67ca8955-76f2-4461-84d5-02cdf338281b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0450;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0622;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h0D6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #552 2752f1f5-975c-48b9-8c56-8d32cb2c7165)");
unit.assert_eq16(16'h0622, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #552 32b35597-d17a-4dc1-ab09-6ddd5e04f455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 a9ccf804-d77e-4862-be72-cd53e8eac455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 6d4b2c7b-1582-4065-aa07-e8885ab3424a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 4de71b4d-4740-43cb-bd31-7eef8e8e81b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 bc48c00c-d447-492a-a336-b1b8c334f06d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 5051672a-868b-4441-b828-af403be6b35e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 f96b17bf-3a0b-4d35-8661-103a28ef8f94)");

unit.assert_eq16(16'h0622, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #552 bee10652-1d2a-486e-9f42-41f98d3cf9fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0452;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h080C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h0FEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #553 4a5f9c7f-2571-4818-8527-9429f804d08a)");
unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #553 feb54342-e4fa-407a-9d83-77770878c4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 81a35767-b4c0-4bd5-990f-2c12c6f1e37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 d669b29a-f04c-451a-85c8-a10dce796fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 976a9e6e-3a65-41b4-828a-38252ab2389a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 7a203509-eac9-4039-bdf1-0cef253ca4e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 0e8ac2ec-5e19-401b-b6c9-9076497581e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 22bec44c-44fa-4f32-b0b4-103ec7e96d09)");

unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #553 0e696083-5e16-440b-97e0-e49101e0055d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0454;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0927;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h0927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #554 408dd601-e2dc-436a-9dbd-2a9fb0f5d7a1)");
unit.assert_eq16(16'h0F3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #554 1916f8af-e3c4-4f68-ac2b-74e99d7a69d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 03635ef7-a7fb-4ae5-835d-ba16b2cac830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 e5f8df9c-17a5-4e7c-ab0b-171135092800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 b11729d6-eec8-450d-a788-a96b602c1cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 71afd798-1609-49d7-b59d-abedde097491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 2582977f-5219-4329-b4a2-a3c00771376a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 14330e6b-5c2a-41ba-9dc8-e5b56b55cf56)");

unit.assert_eq16(16'h0F3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #554 10e97fce-019a-48ab-bb7b-afe5cbcd4e65)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0456;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h0CC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #555 386a9b1b-e75f-424e-8d4b-0ded02bcfbbe)");
unit.assert_eq16(16'h0E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #555 fa2bb2ed-9580-4812-a0fd-da4a9a1a8864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 0bc4491e-c82b-4d08-ac63-1f196ecf6f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 fa1de3c6-e163-4068-a6e1-587f29098356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 b8efb4f9-361a-46c4-a891-27d45f3cf64a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 f1ceb03a-bae9-499b-bc30-426b88cf78f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 d98f754c-0ce3-4475-8345-5248db468b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 0b2b1e59-5416-44b7-8dcd-91043c045a6e)");

unit.assert_eq16(16'h0E62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #555 2bad9714-abf1-449c-977d-f7cdfbd91d93)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0458;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0605;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h0D26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #556 0d818900-5394-4d9f-b062-203eb3978315)");
unit.assert_eq16(16'h0605, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #556 5329a16f-958e-49f6-aff1-d9822d4ec7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 822dfc89-efde-4b72-a073-1a754a15c02a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 4eb606bc-0d48-44dd-a948-fd6c784a9043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 ddabbbbc-5dea-48e1-8213-4bd1f7126667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 c8b79dff-6d6b-4cbb-844b-78de4853b3e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 7c7f45ae-5e67-44ec-8132-8b0954f044b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 05d0954e-2ba8-47bc-a90c-a0b94ea386bb)");

unit.assert_eq16(16'h0605, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #556 ceaccbf9-2867-4912-8166-4f04f49ebab5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h033A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h033A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #557 7576a667-ef11-470a-aca9-ea7dae2368dc)");
unit.assert_eq16(16'h0E9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #557 b22b6fa3-012e-456b-8ded-8a1fa3ba92fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 d8f2d9cc-b079-4351-a2b0-330530bd251e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 40f738d5-ba35-41f6-aeb8-7bd7e8e72af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 c2243f00-6c26-4e4c-bffd-8ba84d4a8fd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 a706ea06-453f-412d-a7a9-1b1dedfea655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 51128db9-4b40-495d-8cf4-d1ba07397043)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 9ba21d34-0ed6-4746-920f-b43ccf11f0f4)");

unit.assert_eq16(16'h0E9D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #557 3562dee2-4a96-41a2-a10d-bc268bc74c23)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0A77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #558 8d6b8aa7-fe8e-4309-8811-e0cc7fc704fe)");
unit.assert_eq16(16'h0B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #558 3d330dd0-3951-4d35-b6d3-e2f47abed034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 e19fa35b-8e70-4a6b-ade5-1be39ca01522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 f98db901-f2da-4fe0-be7b-925380a4dfaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 baac3c45-f8e8-4010-8de3-5f7528bcdff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 1e217463-00cd-4764-95a9-a47ea9c8a06c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 df5950be-3296-4cf0-9b9b-8349b199a455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 cab026b6-1e22-4b38-8655-f43a22413828)");

unit.assert_eq16(16'h0B83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #558 838f0020-39d7-48cd-8c57-51e3e6108512)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h0D48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #559 81357212-12c5-4a62-b1bd-5606a1ed3365)");
unit.assert_eq16(16'h0CCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #559 480ba9cf-a7bd-44ea-82dc-326a188f7e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 1b049e36-ad2e-4bd3-b552-2c96059b2422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 4263480b-1fad-43d7-b6b1-cc7d4077ba56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 22e6a7e4-0bb9-4838-afc9-f823326a23e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 da467c0d-eb99-4212-bef5-4a557d48eead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 b87b2372-7799-4cf1-be95-420e842f1e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 b07fa99a-685b-47d5-938a-33b49272adae)");

unit.assert_eq16(16'h0CCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #559 4f40b35d-ca95-4746-a9ac-a4d43d947e99)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0460;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h089F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h089F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #560 4c56ff78-5eb7-4cb0-8597-a0533aa87893)");
unit.assert_eq16(16'h08A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #560 40094ebd-cf9f-47ee-9f8e-d923313f3435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 391ac5ab-01a4-495b-85e6-69f1a29ca1f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 fd49f04d-5dfd-4e79-be93-fccc9e5a1016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 59137262-67bc-48e9-86c0-c7711afb1dcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 23b03b94-5db4-410c-85f4-bf8196794cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 f352c38e-5f1a-4537-b1e3-7159df59a01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 38fd81b6-65f4-4189-97c2-1fcdc39b8ceb)");

unit.assert_eq16(16'h08A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #560 4e555967-0214-409c-97fe-2ed4d24503c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0462;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h048C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h048C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #561 6bc7a198-926c-45c9-9356-ad6b04ece20b)");
unit.assert_eq16(16'h0A33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #561 42bc404c-e7dd-4331-a6bb-e5870166b956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 5859a419-4c31-49f1-919b-633275f2e44b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 6ae0a223-6570-473e-8804-51403b8a15e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 f84b15b4-4684-45da-b2f5-06d8dadf3fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 84d721c8-d278-4747-9c58-201f5a0d2709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 ab7812ed-e7d3-4064-a78b-922c6aa03efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 145abdbb-cfb7-4f76-8592-17da84262fdd)");

unit.assert_eq16(16'h0A33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #561 686737c9-1504-49c4-a8f8-c3f2c1ed40f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0464;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0490;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h0490, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #562 97087203-d09b-4fad-a681-a255f078e07b)");
unit.assert_eq16(16'h0E15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #562 75784ff3-1ec8-4026-9ad0-b92b2b41b322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 1f174ff5-d0e0-40d7-bcda-d5d34da9caea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 aa132235-3ff3-4387-8395-0091b540e7a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 3dd17e5e-9a7f-478c-ab4f-58d58b9ceee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 4076c528-7189-4efc-bff3-135ebd906e42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 5230ad84-e41c-4cd4-8afc-9d21cc75ecb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 dcf8008b-46b0-43d2-97c1-ce9218f8896f)");

unit.assert_eq16(16'h0E15, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #562 4c9d1a52-2954-49ed-a476-3821744f53b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0466;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h0FA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #563 a08ff8cc-d5f2-44de-8182-4adeafee8901)");
unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #563 7f1a3c97-e110-43cd-a84b-0f4d6bc99e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 311f02f4-d6a7-4cfd-a402-f2aae1a87192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 00b217cb-c7e7-438b-8357-6470afeb585d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 7ac1a062-3f6b-429c-a52b-1fe5fb60de73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 a448fadf-2ad3-423a-ae87-149bdadcfd36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 e1e00160-703a-431e-b078-b0e08122c2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 df4a9c51-0394-43d4-adfc-842f074eb2c8)");

unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #563 a500a382-9ec4-45a6-af55-245d89a941f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0468;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0297;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h0297, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #564 18c23cac-3b3f-4fd6-96e3-071e6c71bb65)");
unit.assert_eq16(16'h0CDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #564 757695c5-a53d-4bef-80fe-699152aea4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 900f8890-60c9-4e03-9583-911f55609603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 10b74c99-b18d-440d-80b4-4926a842f39e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 dba50201-51ac-43d1-925b-ba07062616de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 7657d582-3760-4a2f-990e-5c3849a4d380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 b3a313d3-2f0b-4408-9dfc-ae62720bcb3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 14f97baa-558b-4e25-a5bb-e61025afb635)");

unit.assert_eq16(16'h0CDA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #564 0aefd7a9-afbd-4491-b056-9e2dcf5c9fd6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h0B46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #565 66f14171-381e-4ab5-b583-73094ca73855)");
unit.assert_eq16(16'h0CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #565 51113d4d-bd9b-4eba-a083-46c65f1863de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 ddf955c1-fb21-423b-b79a-b4bf0a8c2915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 3b404a1b-f515-4510-a3f6-b38af32aad68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 3faac79e-b7a8-4ba7-8b8d-9d35c1e648fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 8d212524-099b-45e3-84f2-dc2e9c5f5b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 b62ed6c3-5a32-42b4-88c2-789b717f3f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 bbbd7e44-9a6e-43a9-b519-cd131fd81f5e)");

unit.assert_eq16(16'h0CD0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #565 61155821-eb81-446c-a6c7-20434f6ba4b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0506;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h0506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #566 8c9a7ea5-2029-4c5e-8b92-7dae3979db38)");
unit.assert_eq16(16'h0AF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #566 8891eb4e-d68d-4c40-88e9-954f344c997c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 f58f3b8a-da60-48c5-bb6d-a3d92e18c1c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 b4dae999-917b-40b0-8d14-97a5e6cdeb11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 b637d240-b980-446d-8657-89cfd250fa48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 e88b46f1-1968-4283-8cdc-40fd58cf6418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 2ebdb874-8435-44c1-b6b1-d78a8c0b629e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 83afc509-82da-498d-92b8-46b5d6206562)");

unit.assert_eq16(16'h0AF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #566 3b36a3df-5620-41e5-bb4b-26056efe71df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h053F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #567 4ecf559f-fc4f-4337-aa42-12a7349fb398)");
unit.assert_eq16(16'h053F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #567 9e9d7748-2bcc-4708-9ff1-e239b4cc81d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 239fd521-a431-46f1-b2e1-4272436f1241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 2e5965f7-9de7-4de1-950d-c28c3b67500e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 68337afb-91cb-4cf8-83d8-d6621e5ef1e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 bc8a075b-7dae-4f32-bfe8-68bbd946a993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 550bb976-6420-49ac-b49c-d90cd11ffeb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 e9f81fd3-7d72-487e-8933-2694944d5ca4)");

unit.assert_eq16(16'h053F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #567 e9d0974f-8846-447f-b3aa-e564e6f583a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0470;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h0D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #568 62e0d386-1b60-4c59-ad0d-7ef737ffc1ff)");
unit.assert_eq16(16'h08BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #568 b667da7c-012b-4c15-83e0-5b1743d48be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 0eae4451-c791-452f-a1d5-f367fdbd0001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 74b9dfc5-6bc8-4e48-b317-ec19baf2c7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 c3dcc459-9be2-4c34-b990-004fb7441dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 f5fac9e2-a3c5-43d2-b254-7ad1dd827717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 9889e82d-2efa-45ba-8c5c-412b075ab734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 e5918b4d-5eec-4d5f-9c5e-d52fa7af5892)");

unit.assert_eq16(16'h08BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #568 9611cf39-27f4-4c20-bf30-8917eb0ce7ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0472;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h007D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0185;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'h007D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #569 ef7324a1-db76-44cb-8f33-92a1feb81212)");
unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #569 40b4b94d-7bdf-40d1-9ce4-1e20268d0329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 7e7c78ff-c324-4338-bc8c-70a06cce6537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 fb754e6c-4dbb-4146-86f5-964d26b95180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 2371f8e8-86f6-46be-8ec1-da0e16ffd10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 301625bf-7209-407b-a739-4e44cfa5e62f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 b8bafea0-f04e-4de5-80d9-ffc292f9613f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 b2d96ed4-59e0-4cd9-8a6b-b1b8c41d3374)");

unit.assert_eq16(16'h0185, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #569 d7359c70-b42a-463d-b8b3-4f8d21497bf0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0474;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h008A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h008A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #570 3cce9c69-211b-422e-8253-169be531172c)");
unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #570 0d347501-30d7-4807-a56a-f77c6896ff6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 edc4b0c9-80bf-4536-b54c-77878a37c036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 7c22de71-40c7-4fc0-acfd-514dff386dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 122aae6e-f806-49fe-ae6d-a180703ee0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 14e539c8-2d10-4bbb-adbb-df3cd487057d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 17b0d715-8602-4027-bd87-e1c5487667d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 576f4665-3b6f-49de-8ebe-b853683829ff)");

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #570 c08ed33c-cb72-4168-bea1-8e0b2db178f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0476;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h07DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #571 7bf12d3a-c52c-41f8-b0ce-e04ed49efec1)");
unit.assert_eq16(16'h0A54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #571 dc151d04-95e2-4776-85d4-f6ae5f7f8ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 59da442a-7eec-4fdd-8078-adb6e744319b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 9fa51dd0-c343-4421-ac60-eba31715d800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 1cc34142-42d6-45c8-9b6f-d5be7542a582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 4581e65d-2d24-4409-b6b4-46e37a515654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 be01d4ff-eea9-4470-8d74-3e0ee3b20d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 74702e3f-4420-4703-a752-44278d696821)");

unit.assert_eq16(16'h0A54, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #571 57b45b82-d655-41a1-b051-55e9b4c4b24f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0478;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h00DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #572 75c078d1-369b-485b-8214-cc66f3a37011)");
unit.assert_eq16(16'h0D7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #572 b735584d-70cf-417c-a171-b5bd06c3e1bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 ad90b370-00a3-41f6-8bf3-2fedeeedff91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 43b02d69-c97b-47d1-8a10-0ec9ffe778cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 38fdc0f0-8703-42a0-a399-145e56460b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 10716f1a-d914-4faa-aea0-7dec5a4b7838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 ff370e48-2bc5-4cfa-9155-9ed98da34004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 6f907f63-8fdc-4942-9396-6456ba3abb09)");

unit.assert_eq16(16'h0D7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #572 d4c5f7e7-c8c3-4e93-b4ea-dc9701cc55a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h01F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #573 4e779bfa-60b3-42ed-bad7-b0f3fe66d36b)");
unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #573 7c040af3-ac4f-41f9-8f9e-59fe1c054137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 9e775835-879b-4ce6-9a6b-599406125a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 ac6e91d1-50c1-49ee-b1e9-65174337ec2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 d1489eae-8611-4b20-b903-c5a0a81f57fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 a7580e5a-e6b9-4263-bd59-a955c46ebd74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 cd9cc1b8-879e-493d-8b53-b666d6f32b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 3bbbe86a-6af6-4134-8073-1396b8c4b4ba)");

unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #573 058f19c5-8e4b-4a32-a58d-355bcc84305e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h018C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h0CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #574 067e1636-93f4-4d90-880a-075a1c8d9e68)");
unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #574 9dfa09ea-c365-4d24-a146-170ec776fe49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 e9a93de6-c62b-4535-82b9-5269b057255a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 3ffaf81d-d60e-48bd-a148-20288305af83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 f8cec8b2-fb4d-4bbd-81d8-e9cbcb32b99e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 f2fc414e-9973-4399-a1da-a0d81a1079aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 10011541-4b51-432e-af7d-9b4746583156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 11c29124-95b9-4586-a9dc-d490667a6dd1)");

unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #574 c68c59dc-b3a0-4c27-aa39-4b50e2b8bbaf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0094;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h06F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #575 a5567cc1-b550-49c1-b799-30644c873f2a)");
unit.assert_eq16(16'h0094, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #575 24ce415f-a192-46aa-80e6-c25941b43f43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 e981d2b7-82dc-41c1-a554-04afa1cf848e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 7a670cc2-972a-435e-8e21-00bf1b89774b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 f3987310-f3be-4133-8665-b470c57daf64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 27997658-af82-4da6-8dfe-0d882c7c54c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 7cb9bb6a-33ca-42de-b5ef-6813b0863c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 73708fd0-e3fb-4338-8c36-48f705e9c599)");

unit.assert_eq16(16'h0094, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #575 1951c097-9e9a-4f81-ba2b-0554947e9de2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0480;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h0B30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #576 3af2c09c-e230-440a-a63c-617a0393bffc)");
unit.assert_eq16(16'h0E56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #576 dede4ead-9d28-433f-ba12-1748515f4a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 2365c98e-ae53-424c-8093-52de48e09581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 ea2b0f3a-34ff-4e85-b56c-753ddd640bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 3ecc332a-785b-4dad-bc27-e40896f04b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 3065fffe-9427-4d66-97e7-ea494ab85daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 a76a3a8b-cab3-46d8-8187-721e67ee87b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 eb0fb83f-a875-432a-b067-50b649e43ebd)");

unit.assert_eq16(16'h0E56, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #576 e6cb068b-7641-4b99-92ab-05f10c357810)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0482;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h045D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h045D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #577 05a92c06-8a71-47c7-98f7-ff0d638e8001)");
unit.assert_eq16(16'h0E0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #577 08e27ee5-2dab-4ecf-8530-6e01b2a3517e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 e654f649-27d9-47c7-9b34-a7af5d60b71b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 f45d3a26-f127-44bc-9300-85bccd3adfee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 d943bd6d-d453-4968-8af2-be34474d2eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 cb841429-00b5-4afa-9843-265e9e04d5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 389bf30f-dbe2-4a4b-99b5-3c4335e7eb79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 1ff0c0ef-c604-4141-93c5-05bdbdab664b)");

unit.assert_eq16(16'h0E0F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #577 e7f984fe-dfb6-4b58-8d55-92bcc6717554)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0484;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h01FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #578 f215156f-dc13-4f32-8d4e-099cb00ba6ba)");
unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #578 dab24f2f-7159-4ff1-9a90-dd7e92c8852b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 bc8a7868-d541-4b6e-9b56-16b253dc07b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 ff982d98-6f91-4b4d-9639-cbefacb169d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 833ef545-8164-4500-a465-292a9f325e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 b4a07c87-6fcb-45f1-a25b-81ef50402fe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 b1c686f7-e14b-4248-a991-56db4d3a2979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 79770e94-fee2-4b04-a04f-5f1d7cb74396)");

unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #578 20cc3428-1b4a-48d2-b5f8-3e8fc65a9ac8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0486;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h0D78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #579 6d279737-81eb-4e39-bca9-1dd6d326e15f)");
unit.assert_eq16(16'h0C8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #579 76865fc4-e1b6-4ff5-b75e-63aef1d21a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 5aa5a981-17ed-44d0-bbcf-e3eee21c61ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 8e405425-4dbe-46c0-81ad-ccbf00f8c29a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 221b55dd-ee54-4ed2-8ee3-fbfda3bc7bc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 8e3058b9-435f-4c30-a74f-d496fdd35a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 210362fe-f4c9-4747-b623-5e0345f0a0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 fa247d92-a40f-43f3-b179-f7df6e4b39bc)");

unit.assert_eq16(16'h0C8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #579 a15debc9-f827-409a-a4cd-6221ba10387b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0488;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0377;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h0377, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #580 3881ee58-73b2-40ed-beb3-d4f0179fcb20)");
unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #580 0e4c6701-0360-4277-a92e-a1fb4d357b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 061cf6b7-2268-400a-8470-ad730ed97653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 3886c03e-5570-4f5a-9b10-162d52ea194a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 93240cb3-3d5d-4e7b-b207-2ce1b3eb88b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 d043c5b1-47a8-4127-bf5a-91805e6c2469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 a060ba7a-0dd7-478e-aae0-6d314c568520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 f3c64e50-97f7-4a86-a885-c06f67774291)");

unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #580 4212b135-717c-4cbc-941c-227b6f537469)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h02E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #581 1b51bbf3-b56f-4da4-8eeb-ae847f248e10)");
unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #581 9963c50f-d9c4-4b85-a7a3-e877b7c2ab4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 6dafd68b-3009-4105-9470-6740f6efec80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 0f8c59ad-a90b-4303-8296-989ae26ed8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 1b8bf5e2-85e9-4832-9169-b676f0f386e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 7a3a11f5-4625-4201-8554-a3cde30dc1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 9b8c8451-4ec0-4ae1-a697-1e3867884450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 cbc5ec37-bdc6-4668-b39e-2ea2172cb120)");

unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #581 768e1322-94c9-4d23-b995-277ec3ae0e1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #582 b3c1a72f-fb98-441d-a8d8-1cfc98ae8c90)");
unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #582 5864e919-c86e-4a8b-9993-c61059f23dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 beb3bdb2-55f6-4c13-8e3c-93041646f8d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 00289a1e-9e92-4fba-ad76-f929192dc01a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 480599dc-8ce8-48eb-a472-354a91088193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 5f3a839b-1f0a-4378-ae2c-78cc8fb80d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 f18f8219-cd1a-413b-bdfe-b3f914796af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 ecceeca1-eab2-4c0a-bef3-9176bb0ce9e3)");

unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #582 60a05492-141d-4977-a97a-758c67944d07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h0C58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #583 ba8dc7fb-8e05-4093-a795-f7124b029f99)");
unit.assert_eq16(16'h0E3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #583 1d4b4be1-3bdf-480e-9b46-276811306359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 559dc8e4-8b22-4159-9d93-1b15239326a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 2e5e1013-01b0-4aea-8fe8-399be8467699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 727898bf-6783-4ad0-ad04-3943e3dd2e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 27fbf501-d56e-4260-83e6-cf0c489f55c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 8514f7cf-e16a-4c9d-8a08-afd56fbdddec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 dbbe27b7-598b-459c-82f3-aaa9818ffeac)");

unit.assert_eq16(16'h0E3B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #583 ea204fa6-fb93-4b47-a12f-952cadcf3f72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0490;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0121;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h0F10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #584 cd8f212f-60e1-4c61-adf6-987a3fc2dee3)");
unit.assert_eq16(16'h0121, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #584 f6732ac0-be5f-4701-856f-453b98c4b567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 d8da393a-5ba0-4a0b-a2ba-b41fe5695b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 bfad693a-d966-4def-82b3-3e8871463a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 e7abf0f0-71b0-45e5-b7c8-2d8c44197c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 1dece123-5f71-485b-af4f-44cfcb1a44dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 0fbd3d31-fbd9-4283-956c-dd8165f7d10b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 83721979-a1a6-45f2-979d-fd95a60bbd24)");

unit.assert_eq16(16'h0121, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #584 656deeb3-adfc-4606-93cd-986d76a010e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0492;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0302;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h0302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #585 95c4883b-5819-422c-b359-24df364daab2)");
unit.assert_eq16(16'h0337, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #585 b47f4c2d-d8bb-41e4-9b64-4d3fc2e41c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 f3732e6c-88d0-4cf7-8412-060afbba7323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 57b3d122-0e96-4956-ac22-d4944c612d02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 5c8baab3-2741-4bfa-9c22-f6f4537b2c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 a9c629e3-7790-43fa-8325-30eb6de78355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 9eda7aac-3610-4435-a834-bdf49772b918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 782ae7dd-a520-4328-9402-eaf008005af4)");

unit.assert_eq16(16'h0337, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #585 5fd4a576-7eb9-49a5-9e4d-46694609f6e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0494;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h048A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'h048A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #586 45634659-1397-49f0-b71f-7bde47e6d9b3)");
unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #586 de9d7964-ff9f-4f94-b9d6-748c6e29d2ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 c5a57079-6bac-48cf-a038-e47072eaa0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 456ac363-c8bb-471d-9930-b252ac57c355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 04930cbc-2fe2-4a57-8d34-15d0a898b396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 91458e1f-de2e-4317-a6d3-90d0275a4fb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 cf8c8db0-66cc-40b4-bdd2-0b7e8967b28b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 d96424ba-5d89-4f73-bf80-8675e7d08bc7)");

unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #586 3da6b3b8-3a46-48c0-8cdf-5f5cbcc1c4c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0496;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0517;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h069A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #587 6ff6cb47-0a80-4d43-b697-58bc3e0d668b)");
unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #587 e22b81f2-c419-45ab-81b9-a543581b3dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 a576c203-f1da-49e8-945d-fe575ad5edfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 a58fd9c7-ebff-45f1-ad46-f0125502fe2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 36762658-0718-49ff-ae83-c1bf31a8d4f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 35d12fa7-510c-4046-b760-1eea1a5cc801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 2495ffcf-8bb6-4c49-b0a6-37863ae15455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 444d777d-c3a3-45cb-9bbb-ea0698f8cec7)");

unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #587 2018b372-a4f7-4063-9c35-8030106b7ccf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0498;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #588 c679d987-b955-44d9-bf8a-3e235ec6c219)");
unit.assert_eq16(16'h02C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #588 19688764-22a2-4a8c-9dec-984756ef28ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 28b01182-50bf-4233-8eea-e7bf40b6719b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 0a2ec127-2201-4d51-8cb7-7f411411f059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 f304875b-5bea-41e2-b03a-9f5bab1afdda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 c91e48bb-f7a7-4a7b-a601-40429e864441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 fa14fb0a-f883-4197-a031-7387200e6a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 bef6f0c2-a668-4e04-9720-e81c5b848e6f)");

unit.assert_eq16(16'h02C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #588 74aecad1-88ab-4813-b34c-4489580344bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0306;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h0F42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #589 50ca47df-d301-46b9-8aae-3d42ac0c072b)");
unit.assert_eq16(16'h0306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #589 7b77ee65-6b62-490d-930e-c2eb9a51ef43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 d7838448-8fab-4cb3-9a8c-d45f5aea587c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 2b51570d-9adc-41c2-96e4-d12a9535ef36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 0e0bbe1c-0a7a-4620-9bc5-746df5c134c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 18037921-8b7e-4a7e-aa7c-cb21161b8a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 e0ecd68a-afaa-409c-8265-2f989de492d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 7dd296fc-0200-4731-bb4d-008dd22b389d)");

unit.assert_eq16(16'h0306, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #589 ff0a7bfd-337a-40d5-b22d-9fb1f66272f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'h0826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #590 7af8300c-3675-4117-8d2f-34ef482a52d4)");
unit.assert_eq16(16'h03C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #590 0838c598-02c4-4bd3-ad80-b87415f01f68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 bc907c65-df35-4291-9797-f3a9701fafa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 4cf52e14-114a-4d1e-9ca4-22d1af9e6c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 1b2d2a9b-da75-4195-b1de-3c73356cda29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 d6ff7007-7abc-4f76-aa09-f12a3e8be184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 a88fea43-2234-4107-b143-14de80cc0d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 9b2a4099-f1b4-41b9-87b7-e2233111f491)");

unit.assert_eq16(16'h03C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #590 08f8c58b-4acd-4027-9547-0748c5799332)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h0E4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #591 3fd59452-6914-48f4-a23a-8ea5a8f5d89e)");
unit.assert_eq16(16'h0085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #591 8f19e07a-2074-4dd2-bcee-d13bb092ff05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 e495fe06-9da2-40a8-bc78-8f4b9b83923a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 be827006-9c28-45d0-974a-5ccd59d650cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 5cbeeb79-f93a-476d-bdf1-873bf7dc8335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 68d8bf01-d038-4889-b94a-1362b0915ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 ff73d563-0619-4f75-a1bf-fa76e9d58d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 79a5a755-e19f-4108-81eb-5c50f4aaeb15)");

unit.assert_eq16(16'h0085, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #591 759212b7-7a13-4f70-8f3f-3af1a652c336)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h0C59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #592 b18f933a-4ad2-4e4d-8873-b3b94bffd87a)");
unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #592 91626d76-5b25-45a3-a601-0381a1667938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 0ef63d84-a679-41b5-ae64-079fb7b6a082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 81808448-9e83-4230-a064-0693ba2f7172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 4f299fe3-f765-4b38-b63e-19893941d039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 ea52a743-1732-4a6b-a188-1ca3b8f467fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 9e48cff0-9653-4746-8ba4-c715face0ae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 45548fed-4a31-4a9a-a3ba-3dabddcf49b7)");

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #592 a930e2ba-d86e-4ba2-9796-4d7a0fb9840e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h095A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h095A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #593 ec1f2c51-553f-404c-982f-13e1715dd8d4)");
unit.assert_eq16(16'h03AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #593 c6affe39-f94b-406f-bfbe-f82c05062970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 a8ec3693-e170-4b24-86d5-d019590700e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 150b6928-9a73-4b54-92f8-3795ec894725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 415c18ec-08bd-418d-becd-b74249c64760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 29503f06-0667-4884-a61e-c9f2e2ff13ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 ef46b724-7b7d-419f-9469-eadfb49d94cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 bdc64635-6052-4227-aa20-cf33e0b1daa8)");

unit.assert_eq16(16'h03AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #593 a767b627-6834-404b-bcf6-8b78fbbee69e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h035D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #594 09579fc0-3fae-47be-9ecd-ada09c53e9d8)");
unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #594 ae9408f0-5555-417f-b51d-c96176281dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 36f75339-1249-44bd-bb08-0e8174eafc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 b2ead5b9-3182-45e2-9b84-2a96fbf9c466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 8f25a678-892d-45fb-8b2e-ba2c36ffa347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 9bb4e52e-9ba1-4e04-8476-e566937022fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 7dc8f8eb-1d59-4d2a-b4f8-e7abf66164da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 7c9a340b-1b84-41f8-9b09-5db63239b9ce)");

unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #594 e35ce4c0-cae1-4ef8-87e4-cc0234bec311)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h027A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h0587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #595 c19fbe36-8901-4600-9967-2c6895c33b7e)");
unit.assert_eq16(16'h027A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #595 ba37c521-c90e-40f1-aee6-1b454f29fa04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 f868c5b1-c842-4c1a-ba09-b4690366c0ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 c7095ad7-7a0c-4579-87b6-ba381685ef4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 21df1078-b47d-4d76-9577-b0a6d617bbee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 d8075244-1c29-442b-810b-16ff2f6c031e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 7c9ef401-e0b6-4f96-970c-586c9bd59b2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 36a4e978-98d7-469e-accc-34e20bc596ed)");

unit.assert_eq16(16'h027A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #595 55978460-4986-4af3-8999-bbf19cfdae57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h03A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #596 62954e78-728c-4ba2-819a-dfaa454cceda)");
unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #596 d3c319f5-a899-48f7-b958-79f408692ab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 48f0829a-a816-43f6-b956-54af0b77fb04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 e030e2f4-287b-4328-b7f0-d9144d08ec1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 e5c1405d-c3ac-4233-b84b-bdd5ac8283d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 efcd0468-7e88-429e-b2ff-0be45a1d11df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 793141f7-91a0-47a4-9bb6-78f32b0db1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 698f51a4-1184-4ac0-9bf2-85d4a49cf402)");

unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #596 a9e564a2-e15f-4089-b561-912979c606fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0328;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h0328, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #597 178564c7-f7bb-437b-b23d-6da80f9cf17b)");
unit.assert_eq16(16'h040E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #597 a67ab57b-6dc3-47bd-9254-b92d05585285)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 63f86e0b-6816-41dc-81d6-532a2b4eba8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 b835a8e9-bb8e-43e2-8ad7-ac582c9a7ae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 c4e93d07-3f08-4459-8100-c939abccd5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 c0f32329-0118-4033-b8cd-0c74f4935a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 f54b4c92-978e-48ac-a4fa-13ea4cdf4c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 2485f0e8-1dc2-4399-87d5-c719c8b84d30)");

unit.assert_eq16(16'h040E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #597 f1282c31-c7d3-4f5b-bf1d-ec170ad956c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h02AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #598 89d9850a-41ca-47df-9fe6-bccae8289a96)");
unit.assert_eq16(16'h04B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #598 847f294a-749c-4c18-ba34-df6386d416e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 b08d0ed7-4462-4323-afcf-0e9b021411bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 a795790d-6ef1-45a6-98fe-77f0aa004e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 cbee5da8-dfdc-4be1-bc1e-43cad67ef3d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 771cf8ba-23bb-466b-a41a-494fa177bda3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 9ecfbcfa-8782-43a6-bb6f-baa5e8daff98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 9692475c-504d-43ff-ae18-8de8efa6044f)");

unit.assert_eq16(16'h04B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #598 b45ccaa6-2e6e-414f-a561-5f7b9e6c24eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0676;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h0676, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #599 9e3be49b-3d70-44e3-80e2-06134a1f0a3c)");
unit.assert_eq16(16'h0B06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #599 e07f0693-4cc9-4afa-8d37-9c35ab9df672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 778a2b22-ac46-4a28-be16-27ae52108c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 f543402b-919a-40a8-8c99-222eb2358db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 9445b8fb-a487-4b56-946c-ba1c7dd499cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 58416349-cb7c-4b48-9e7a-e0a6e585b08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 32a8371c-350f-4fa5-8c51-647df60e20f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 3157f827-fb20-4919-b3bc-799b5c35413e)");

unit.assert_eq16(16'h0B06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #599 f706a1b9-1d64-4470-945e-91884dec56d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0850;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h0850, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #600 f910ab9a-76c3-4f4e-838e-80e3504b24fa)");
unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #600 2b1664ea-1b32-4be5-a5fe-6b32f5b323cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 3f40034d-6db7-434f-b7bb-e2b1c63419ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 b553fe74-c64f-47a9-ac87-b1c4946bf50f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 3dc8d2cd-898f-4911-95c8-f4091bc15e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 45a80d8a-9ec2-4850-a7ea-dab50e33d64d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 46afb5e8-774b-4a4d-a4aa-ba1666c09383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 8b87fd5b-b050-4c9d-9606-5c4e2f9446e8)");

unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #600 7f8d42a8-db8b-43a5-b04c-52adee25c0d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0002;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'h0002, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #601 d318469c-9b24-48e5-b58a-bfb1c7246ec2)");
unit.assert_eq16(16'h0B89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #601 8aedb02d-17d5-44ef-afde-b5df9fe453cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 f77de082-d0d5-468b-89fa-eca887440087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 14c2caba-3940-4a58-8c77-432b54c68a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 5f3225ff-bb92-48f6-b0ee-828832992323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 e3d33804-051b-491e-8aa4-7007a0152aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 d0f4c66e-5422-483b-b9cc-f9fdcd739661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 40d91ba9-e88a-4b58-b87c-7063d1661ca3)");

unit.assert_eq16(16'h0B89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #601 6d181556-7a1c-414b-a26e-18198e5844b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h0C74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #602 9ce7e1f4-a19d-4363-a0bd-4a6bc8ca5a72)");
unit.assert_eq16(16'h0D80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #602 c97b8e8d-dabc-46fd-9681-2b28115f4f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 6dcc5b0c-7a1d-4160-b724-39ee4d0a2cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 8961ab30-cfa3-4ffb-a1c6-6f12940e91f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 fbab0977-fb84-4ee9-bfb6-35d913945bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 1e275b29-d807-4cb7-9d2f-a199efa483e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 5fa8051e-1034-4d13-8eb2-baf78d8c5ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 6b970bcd-5d0d-4b4d-8479-88ab164f4580)");

unit.assert_eq16(16'h0D80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #602 9012d621-edd9-4fdf-83cd-97f31b9042d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h0B40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #603 cbf3d12d-011d-4a9d-a290-6be25cd30642)");
unit.assert_eq16(16'h076C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #603 b678c8c2-9794-406d-a10f-ec27bda1ebf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 dbccaaab-a2fb-4611-ab1d-933cce9f7405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 e9b87cd4-5c3f-4ed7-b95f-92a884e99ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 e548f3b5-9e76-49c1-8f04-0a8674da0efe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 e231cbf1-3ddb-41d3-8ce4-1be9966c80be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 09056346-a69b-4e71-8409-48bbecb3643b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 6191b463-69fe-4b32-833c-f5e0bf19b75c)");

unit.assert_eq16(16'h076C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #603 92f6fc19-c583-4130-bc9a-11f35e5cece7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h09FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #604 53322d70-f777-4271-8b1b-8f179714ee43)");
unit.assert_eq16(16'h0F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #604 83010a52-060c-4ee2-af66-4802c6217ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 d43c59d9-0452-4010-b1b2-621f8d5649f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 b6e8fa51-e022-4f38-afbc-bc9e3c059d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 2f0e4dc3-c94e-4b29-8c39-18b70cc6e76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 777f00ca-8df4-435d-b18f-92a93bdc7d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 5a8ab084-004b-4a72-ba1d-37da051eef4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 6482a4ef-6628-4613-b132-b4cbb00041c9)");

unit.assert_eq16(16'h0F4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #604 4a222a08-4d6b-4b16-b666-484baba89ec6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h017A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'h017A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #605 036a5fd1-9ba3-4446-b105-2dd99255583a)");
unit.assert_eq16(16'h066A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #605 d76933fe-eec6-456c-97ea-0be154f58420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 e7067ea7-cedf-4ec1-a447-bd94f1e877d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 4c9d6c34-5612-4849-8577-e18ad7091d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 c0bd064c-ce55-4351-9a1f-3624f6a0b498)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 eb0e7eb7-c00f-441a-80e5-8fde6fdb54c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 0a62acc4-8787-4e60-8df3-7277913e9c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 2abbb90b-7a6a-4afb-a937-818cce971885)");

unit.assert_eq16(16'h066A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #605 8f32aee6-cfd1-4ad7-9da3-0c7906bb56f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0182;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h0182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #606 124b8085-aae1-4787-81ff-57bf763a0635)");
unit.assert_eq16(16'h0A09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #606 64d29fe9-a8bf-4d17-bde4-82673cb66f9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 cbacb3db-a2d7-49d2-a555-a57dc96600c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 d0ed4d99-8b0b-4830-b9d2-bc98bec96e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 7984414f-76e9-42a0-853e-466e4783b743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 a6aea533-918a-462c-a5b7-031e9a1a4617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 d1b76cad-e9fb-487a-9fb3-5d531f250426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 d088336f-0eed-4bf1-94dd-de376fea68fd)");

unit.assert_eq16(16'h0A09, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #606 c329dea3-1c49-4eb2-93c1-86b5f20bd6fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h0A94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #607 97075ad1-f668-4401-9e91-cd271d67e182)");
unit.assert_eq16(16'h0A74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #607 0b988902-308d-4221-a7f1-b345872b4d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 d5283ad1-2a8f-4102-8cd0-73a6b6cfa603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 f8c04fc5-84ba-45fa-ba2a-a8360b283a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 3f3c3c1e-7b1d-41c8-9107-a8f03288b50c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 464aa34c-9df3-481a-a081-7d917cd40f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 616dad14-9aa1-46c1-b49a-08208f190586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 48f8fec2-cdda-4f96-b253-16fdb3a54e39)");

unit.assert_eq16(16'h0A74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #607 a1df2e6b-9cf4-4e66-b5bb-6d6f5c182806)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h0D2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #608 9734472f-2c42-46b4-ba0e-312b4f021d65)");
unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #608 00371bbb-dbd0-4404-a29e-69588b17774b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 35c59336-5999-4790-b033-4b6c8cadbff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 72987e75-9c78-4879-b564-c536cfac748e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 6b28764d-673e-4d8e-9ac0-93910126255b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 15fa07fd-702a-447e-a177-dccf596e84a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 1516b4fd-9e4a-4164-8294-63b0b0e707f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 baab7594-b3e4-48f6-b63b-67455941cf92)");

unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #608 0ee401ab-d540-4aa5-b778-bf8f058c0f60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'h07E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #609 27042cb2-5ae8-4d29-a6e5-73255792fe00)");
unit.assert_eq16(16'h056E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #609 cb9fb5fb-bff3-4194-8b34-838d144634a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 55e3497c-b4c3-4cd8-aa12-986ad3692a24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 6b5bb5ef-594e-4ceb-9aeb-d49a02b2656b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 47bfbc60-be11-4a9f-aedd-f5d0d6edd02f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 e09ef77f-16de-49e7-9bc4-93973a23cb18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 bbe4cf90-cf70-4600-8e5d-4e8003224603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 612ed6f7-f910-4b09-88fb-aca27fc36394)");

unit.assert_eq16(16'h056E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #609 40cd5560-7e33-4b08-a9ce-9f49112a69fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0805;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h0F56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #610 db717937-453c-4b36-b21c-1a54f050309e)");
unit.assert_eq16(16'h0805, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #610 1698b466-8fbb-4eaa-b6a7-00034f8908fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 db4eed5a-fcdc-4688-a299-ec1b380f0fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 21269428-d9db-4a09-9c68-dfc91c517148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 a40b0f43-30cf-44eb-979b-c1e69f6100b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 f6d4567d-cb11-46c9-ae53-bb92552c7180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 2c81c426-1385-4654-a532-acc424af0bb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 6e30715a-d0ab-438c-abc8-3e3edca64dd4)");

unit.assert_eq16(16'h0805, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #610 a7e8736e-1cca-43c9-a45e-affe75d47db5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h036A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h0F22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #611 24abe421-cdca-48c6-98ae-68bd5c207631)");
unit.assert_eq16(16'h036A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #611 c6a583df-ae59-4ae8-8ca7-ee0103d90b4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 22a5ec48-ae36-4025-ba58-cd07656a6c67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 1b3bf2ac-f2a9-452a-b5ca-accaa0d9ae81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 4b6ace8d-cc6d-40c1-a1c4-2c4a935ca852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 5d90f6a3-e07b-4836-a48a-fdd6c3185449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 e61ec512-9e2e-439e-8f0f-b11fd12b3363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 36f322cf-c3e6-446f-bc12-9fa3309a3803)");

unit.assert_eq16(16'h036A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #611 ad8415fb-b47c-480b-b0a3-abd34dd25e71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h00E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #612 ca7c813c-d3e5-419d-aa52-421ffe3a35f7)");
unit.assert_eq16(16'h0A4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #612 bbd071ab-e816-412b-ac3d-55e5e8ecf10a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 78ac37df-383a-4025-8065-bc8b90ef95bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 d9ad5c1b-add2-4e10-b386-d3df0cd5f650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 0323dcac-f5c9-4de2-9dcb-1f58174a880f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 ebfe5d6f-6cce-41b8-9471-6123135b222a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 ec890a16-80a0-45a4-81a2-203989b9b886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 be438b15-9151-41c7-b2dd-edf12e609700)");

unit.assert_eq16(16'h0A4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #612 88ee3e69-b5f6-49db-8732-3e3cc1df65b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #613 6a2ca2b0-4c23-47f6-965f-8b367b7a8995)");
unit.assert_eq16(16'h0BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #613 f403fb7c-7103-4fab-a082-96cdf6e6c364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 014fbb5e-925b-4543-8078-a47985673ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 c8b1c18a-1e9e-4dc8-b732-5f5d3450bf07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 7793b43a-05b1-493e-90d8-ec2ffcfa714a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 86dc1915-02ee-43be-94cf-9ff6fadf8dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 f2358552-425f-454e-a31d-31306255a82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 b60da2ad-2e2a-4177-b557-8e9660fac34c)");

unit.assert_eq16(16'h0BE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #613 d94dcc49-b476-49b7-a1a6-f5806db5127a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0133;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h0133, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #614 1277e558-933f-4e07-bc35-4296de021164)");
unit.assert_eq16(16'h0D5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #614 3e54540a-8283-4878-9da6-ec393d36fe9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 9aa94cb7-f87f-4af6-b7e5-9ba17d44931d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 77894eb5-b4da-4ec8-b913-49c95a844667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 0d78ca66-e799-4cf1-99ed-8855717a3add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 e6ff0b15-773d-436a-92b8-1b09152fab9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 e8913efc-e418-41ff-a74a-1962aba17203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 ace42954-4d15-4e4b-afdb-2ec949a59846)");

unit.assert_eq16(16'h0D5F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #614 1a1d2426-1250-4a31-ba26-dfd9aaeac95f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h0DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #615 260c755a-b3bd-4354-bacc-8e38a2eaca19)");
unit.assert_eq16(16'h08D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #615 612587ef-ef1b-468c-b404-b0c23e175c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 4844301d-a7fc-4e53-a4f2-41696c9eb841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 6519edc8-50da-480e-8402-f0127b096f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 475f8f0c-2ee9-4609-930b-87e3752fd90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 1336524b-41ea-444d-8237-1262cbc23ddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 da49fc6a-ee4c-4d58-b67a-abf41ba1d8e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 aa33c6e9-2942-4bde-be30-e8e2d316f816)");

unit.assert_eq16(16'h08D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #615 1e192909-8e8f-465c-adf9-1f7619fd5019)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h00B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #616 7a7cc219-bb17-4c57-9409-e69f521131b2)");
unit.assert_eq16(16'h01E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #616 12a82ff5-8144-49de-a094-2ebe7b62035b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 3b6f1179-db48-4f31-bcb0-b2ee4876e1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 ebd9afd6-d382-4774-baa4-b385510d5006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 f44072f0-dc13-4a80-9d6e-f6274a3096d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 96b6514b-ae04-49f7-83ea-193db7a8317c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 7db70550-dd62-4616-90d7-b915343112d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 1c392892-d5f7-477d-8f40-ae573dc55574)");

unit.assert_eq16(16'h01E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #616 47cfc2aa-1434-4d19-a1ba-cd9e18d1def4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h0109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #617 4d39859c-9381-42e1-bb9a-fab1f9c08e42)");
unit.assert_eq16(16'h04DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #617 d761f06f-5014-46f8-9af1-76d73ff8dc57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 157166f0-189d-4737-b731-25b198241d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 c7780fab-f6f0-4d27-9b99-72ef6dc77325)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 127441a4-55f3-4c93-9975-f367ab805729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 90bae428-fa9d-4a83-a77c-c47b501848eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 f821dc90-3570-40b2-826b-7a96b3665857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 c1513af7-d731-4221-bd0e-50a7b8bf707d)");

unit.assert_eq16(16'h04DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #617 45ac00a3-5c3a-44d0-a8e0-a94d88360891)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h05BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #618 8474afa7-a5cf-4e3b-8f58-845125a64d22)");
unit.assert_eq16(16'h08EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #618 a7620598-c813-4af2-8201-90b3602fbe38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 fce4488f-247f-4182-9aaa-6a8a27423efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 2f946a1f-7837-46d5-be7a-e03dcab99105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 052ecd32-3d0c-4f16-b3ef-843e6412f2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 11a79a2c-cd78-4692-9660-1b94e2152638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 0612a1c2-b621-42dd-85bf-a91d66ccc4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 06fa661e-077a-4d22-8c7d-8378d120b15a)");

unit.assert_eq16(16'h08EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #618 4ed5c925-1849-413e-b1e2-b877d175b66d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0654;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h0654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #619 90442ed8-a543-4978-acfc-6ab79d9cd34a)");
unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #619 319c917f-5b24-4f42-b000-415d935dbf4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 8b7631c1-0b16-43f3-9bdf-492ecaa48232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 5ef578e2-922b-4a5d-a8bd-642023b06566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 249e2df9-5da9-4713-b7cc-ffe9d1d9d965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 2c9b871e-e50e-4ea2-ae26-c43dce6a5eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 337ce97e-0d18-4818-ad13-ff3ff834acc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 e6485845-3c11-4607-b3f9-a40862cb55d7)");

unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #619 f40514e5-fa75-4566-93bc-ab756676d56c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h0D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #620 d9587bd1-9245-4ec0-bfc6-1ba91329a8de)");
unit.assert_eq16(16'h06D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #620 6446bf43-6602-4769-a57e-8e17dd5730ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 c74efb14-afeb-4b11-8b0f-8b09a67d0d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 21d68260-bb9e-4dda-a6c3-69370eb555c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 58f4c733-ff78-4416-ba75-db0fe8e5d314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 a48a6c74-8e55-497f-a8f4-f3de9b8d12e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 e638d03b-c2bc-4dba-833c-2022d4267e5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 ef6540ab-01e4-498b-bab2-aa2f7b0978e5)");

unit.assert_eq16(16'h06D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #620 f4295ec5-4357-44e9-a28b-98919e061c4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h0EB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #621 abc678c5-f4be-4de6-80fb-d49ba164798a)");
unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #621 85b3ac38-9d29-4298-969b-9f8cf0ac12c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 e9d1dfe8-b13a-4c4b-a5ce-a5fa3be4aede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 041beec6-be38-4b4c-b3d1-70aa772de578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 72477d23-2b58-46c0-8c88-3aae0985dfc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 8e35a5b9-ac9d-4867-a254-a2cfd11217fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 d2fbf1b3-e18a-4d2e-87db-aaf8e5895002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 6c4b6379-7b8a-4a0f-aa21-ba42e1599b4f)");

unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #621 a438fa95-25c7-4c88-a461-c59c6d180cfb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0447;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h0447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #622 e661fe55-06c5-4df7-8c9b-a3e8975813f6)");
unit.assert_eq16(16'h01E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #622 5e1470aa-d0df-460c-81f2-cee296114a19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 cc900997-7cd8-4451-a075-80f4cb897247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 0da8ebdb-1235-4ed5-9a7d-1c37f9396fa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 9fd235a3-2ac1-4574-9d45-e0b70dc5d8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 1a5e83e6-4302-439c-b5cf-fb64a1e1374a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 7d76a954-da91-405a-9fb1-53642f44651d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 f57ba9ae-7802-4d60-a1f0-afcb1512cbb8)");

unit.assert_eq16(16'h01E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #622 e11d22b7-0b8c-428d-b9ed-dfc522839011)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h0653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #623 885e1cda-5b51-4832-95a5-3481353c25b0)");
unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #623 5f14b7a8-4dd5-45e0-823f-bb0e0cd5a8a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 bfec906f-badd-4a25-a0b6-dcac86f46213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 18f08eca-64eb-42f3-9c40-d8a91c5b80d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 6a2f33aa-8554-4484-b7eb-1e85c9bc3a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 6273379d-4d5c-4ec1-8bef-d56d2af551b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 515401d1-c9c5-4ccb-a808-f552973f8597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 9eea285a-b09b-42a0-9a97-33bf5620238e)");

unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #623 926c83fe-aa35-4348-8072-75e2a5d0c6dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0173;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h0173, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #624 2612384b-b35a-4df7-97b2-8f70ffbb53af)");
unit.assert_eq16(16'h02F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #624 05111f29-e882-4da0-a278-e7507d5869ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 e1c4405e-5249-4aad-9178-8e3080026196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 8f315f07-8aab-4a71-882a-a66815f96500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 2c89f7f7-f7c3-4c3f-8e39-3bc25374bc8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 3d805fea-e1ba-4f1b-ab1a-32d57c28e811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 f90a3ec7-3a85-43c5-8e48-ae69cca2d2f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 8c275e1f-9abe-414e-ba2a-10cd67d31360)");

unit.assert_eq16(16'h02F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #624 b8d68595-7465-4fb6-ab84-ecd5d0d6379a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h04A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #625 bd9ec587-5cde-447a-ae43-f344288df5fb)");
unit.assert_eq16(16'h0E8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #625 f17e3561-0219-4546-84c0-cf546150bce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 de89a254-4572-4b5c-98c9-6fc084d0b499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 eea9b10a-1374-41f1-ac19-97cbb36ba5e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 c25fb971-9014-4f61-96c5-72677cb14370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 c1cbdf21-8cee-4454-b927-c345fc84d3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 14797b5a-56e3-4d62-9106-629a0e69bc27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 40ebf9ec-2c36-4113-abf6-f20dcdd61b1a)");

unit.assert_eq16(16'h0E8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #625 3568a6ad-816a-441e-88a5-85537f5f0b51)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h0F1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #626 1a67bc8e-da15-4785-9406-ac91f93a7f19)");
unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #626 73aa4142-5a79-44d1-a91d-04568d080c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 a702b72a-31c5-4ab3-a994-7f35375b94b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 119d51cb-4bae-40fd-bb0c-7761c965ab21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 93c46b2b-a28f-44e7-a84e-1f6f447a82d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 07b1a133-3a17-4e05-b444-9261dc0fdc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 b45a1333-d198-410f-9675-baf0d2174576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 087119af-684b-45f4-9627-f617c50ffc7a)");

unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #626 0738afe9-dd65-4ff6-8aeb-15d8503aa466)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h00D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #627 5e6e87e9-7012-45e2-99a4-ac482bcaa00f)");
unit.assert_eq16(16'h090C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #627 e7338393-dcd8-4f22-89de-cefe8ff37873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 3b335eb7-d6dc-4725-a736-1e5e11c380f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 d1ae10f3-6ae8-40ea-8441-d8e4b5ad9395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 fcb6f338-b916-4a73-a5e7-ace8f9f1a1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 ac481137-0c3c-4099-98ce-139295a1c6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 68407acd-d636-4d49-911b-ec185433f054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 d4659be0-2b51-4e64-b961-fd8ee16c2437)");

unit.assert_eq16(16'h090C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #627 b5076ec2-ebc1-4448-9389-a0e5c31b9bcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0874;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #628 a7277de2-adca-415a-8713-9246276a47fd)");
unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #628 a1a58476-bde4-475a-a6f1-cf4a3aac7e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 afe31fe8-cd5d-4428-b108-7641d9eaf5b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 a367d9ed-bd08-4db0-a507-4e1ebdcb0c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 c5d90df8-83a9-45ac-8520-664abf498443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 d5e8d7c6-0142-4501-9e58-6201c7fa494b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 f72c9532-e3c0-4a43-8073-ed28fb6c0d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 89ab499d-c128-4b3f-92e9-b5ec320a3c55)");

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #628 f969b068-75a5-40a8-a3c1-56eb3ad85ef7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h08A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #629 01546e72-74c8-400b-bad4-4050de8e3970)");
unit.assert_eq16(16'h045D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #629 7a797f91-b405-4121-a6e6-7bb74097a506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 9cf68476-4374-4507-8d42-d3f643da4fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 4c434f59-a454-4bb8-9704-6b3009614602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 e65ba94e-e828-462a-8d51-92f28d3d5e76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 43b74670-0611-48b9-b7fb-8e32b6af9daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 aa92c56e-acd4-41f9-81c1-0e358f3832cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 db72b965-043a-4d38-bbf9-1b45c7b249a7)");

unit.assert_eq16(16'h045D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #629 a6cbbb60-3a26-48a1-a909-08e5e21ae923)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h03CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #630 ccfa18ba-8024-48d6-8f2e-53e68388b7f7)");
unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #630 79e5ff0b-bd9d-444e-b7ef-32672611620a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 37a1ce68-5691-408c-a1a8-c39f9c4feee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 2a4d8e90-9389-40a2-a9b4-d88e5a314563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 a42ed34a-9a88-4231-b113-9e82eed94418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 815f36e4-01b8-4664-8d32-5b03f75f633e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 145d1168-7a25-4f7b-a832-43fabcb4ce5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 06b23ed1-8e67-48c3-bf78-127d7f3e2587)");

unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #630 39494caf-a9c2-4ca3-8b24-73058481836a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h03D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #631 8cb4f5ed-cac4-4def-b7bd-1ecbef612f72)");
unit.assert_eq16(16'h0BCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #631 5b17f443-7a4d-4c26-b56d-40b28258e9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 4bc754c8-b01f-44f2-ad9f-a4044c710d56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 98462a95-8f7e-4df6-8733-57a53041435f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 f4ac4eee-1740-4480-9555-cce247d131d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 95f4021c-6ff8-4619-a4ed-33f4e584afed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 8e9f3b3a-a37f-4e2c-9305-df0e4e98d088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 51bdc560-c9da-466c-9083-eabfdb8fc6bf)");

unit.assert_eq16(16'h0BCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #631 afa9e387-b01a-4bd2-8aaf-554216f68dd5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h0F06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #632 8c2b7365-1a1e-4a71-a556-14b186bbc324)");
unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #632 1c273ca7-1857-4c1a-838d-76281d460783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 e442c859-5a44-49f7-8bb8-474153848850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 e8e67365-84f0-43cd-a36c-df23db89863b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 43982ae8-b6ef-4e6b-81db-0126e8cddc33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 4be95748-d9be-45ec-a929-22fa98191c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 4306c368-dce1-44c8-bb97-f5b0a3a2cd62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 b9f09a3d-5e1a-4ac8-b34b-177e4d8ceb26)");

unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #632 7b7f18fc-300d-42fd-bb8a-b55a2bbf9b0a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0221;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h0D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #633 211fd4ad-6a66-420c-9c39-d4c986661d82)");
unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #633 28eeba90-ab13-4fa9-9fc5-a0a86a36e738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 9b63b528-858a-4807-bdf1-9bfbad7e7d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 19401c6e-d4fd-4574-9362-0c31a225e58d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 7b16d9ba-7468-44ce-afec-2f7aaf0c54df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 08dc73a1-89af-4d77-ad6a-161a29bf93a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 833b4fd2-42c8-4d53-8dd9-34858f4c18df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 ed9f93cd-003b-49eb-b8f5-74bab5289397)");

unit.assert_eq16(16'h0221, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #633 fa09c4a7-d46d-447e-b418-341ba0015199)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #634 f9ec0189-0dea-4b94-86ab-23f4848c724f)");
unit.assert_eq16(16'h0498, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #634 244fdfd0-8266-42a1-9222-4a1385503ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 a802108e-684f-41d5-a0f8-0c7bd10d123d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 da238389-d1d1-42ef-a46d-5303f386c646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 f92ff810-45e0-480f-aff4-a7927b4547e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 069b213b-8a67-4f25-9d3f-42e9475f8083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 594ecc12-5ad7-4eb1-88ab-b2f3bdafa734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 173b0776-aac5-497f-b24e-62f7995f138e)");

unit.assert_eq16(16'h0498, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #634 90258acb-05e3-4e96-89dd-6d652f502f06)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h069B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #635 30e92a77-b709-4a2e-80a3-b6df57406779)");
unit.assert_eq16(16'h069B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #635 7d4d733a-f033-49d1-9c6b-5a5441c1dee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 69fd3a52-5dfe-4fc6-82d2-c894e1f1d41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 e582b760-253f-42f9-a3c8-57cfce8def37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 0e778dbc-2a81-4e6b-bcd3-648565a24f94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 9d80851a-16b6-4277-8bcf-f7da7a9c6321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 f837e921-e792-4300-b3fa-f6f758c5851a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 6159bf86-390c-4548-9def-78b2e041b1c0)");

unit.assert_eq16(16'h069B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #635 adb30971-74db-4b19-86db-77834264cf07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0759;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #636 c1bc3d3a-c3ae-4985-a1da-396bc76a3140)");
unit.assert_eq16(16'h0759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #636 732eb686-fb9c-4322-9d8e-b78664b8a69d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 26d9d9ac-4e4b-48b3-9966-6051175fd085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 bcd06f7d-4a9f-42ea-a0b4-7e78c80a100e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 de5f0571-2587-462a-9401-5b23b6e8e9c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 77fd8b92-0a7c-44c3-b8bd-b8954f99f8e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 b17b826f-059a-41f7-b49f-840db9d80858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 7f8e6f5f-dd40-48a3-ab43-998d3525e06f)");

unit.assert_eq16(16'h0759, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #636 f19ee17b-7c40-411c-a4be-daac3a7120e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h086A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h086A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #637 27f8ab2f-ae33-4a52-a8b8-ec734bedcb72)");
unit.assert_eq16(16'h0C15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #637 e79c89d4-6813-4335-801c-28ec5d9edbfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 6b35eff3-6ab5-42a8-be26-d393c69a5e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 a08d30b8-8930-4f1e-bccf-98a6a8bfeef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 831eb53c-4cfd-43f1-88b9-1ceaed1977cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 ea7ef432-f5fc-4819-9c1d-56870a68f2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 6fceadf7-a256-48be-967e-b861e77c9313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 cf406f11-2002-4abc-b4f3-c03084e3534b)");

unit.assert_eq16(16'h0C15, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #637 c2e1e6d9-fc43-4eef-8c7e-2cdc276a30f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #638 e3edeead-cf8c-4566-bbbb-9e9d065e71ec)");
unit.assert_eq16(16'h09D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #638 6ecba1bb-738d-490f-abed-dafd2ff924ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 dbc3a3d9-54b0-4a14-b2d7-f0fc22f3b01d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 f4b0e9a9-8dd1-4e4a-bf93-a878eeb76111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 1ee3d711-1a4c-46d9-ad0f-b2301021cbd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 37f56da2-80af-4bc1-9a2a-ecb152222a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 bba475e0-8451-42f6-a452-16e2ec1dd629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 142034f7-3906-49df-ba0d-fee25a25880b)");

unit.assert_eq16(16'h09D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #638 5012cd8c-0dfe-4527-8677-fb29291f54ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h0BF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #639 92563ee0-37bf-4485-8bd4-e5f21a2379c2)");
unit.assert_eq16(16'h09E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #639 9d44e61a-74ba-4069-aa35-069b3550cb56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 2c80c3f4-05ce-4b42-8a8a-4bea8c31a7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 1a93f93a-23c6-47b7-b630-7f56631b0db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 d33269e1-e6cb-44f3-b549-e72b5d94c745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 1164fc3d-91ba-4833-80f0-7a2ab7ed3340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 8d835ea4-9e91-4ebc-8381-d71d456e2209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 45178355-59b8-4aff-b424-f58f1a0b4287)");

unit.assert_eq16(16'h09E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #639 e8b07d1f-7e04-4d2b-b81d-6fabf99403ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0500;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0765;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #640 6ba7dd37-b500-42fb-9a90-9cf17dca56f4)");
unit.assert_eq16(16'h0765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #640 f1c0c4b7-b20c-475f-9f17-3f8e7e0ab54a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 0e14e9b1-9f68-44a6-ab60-e268d91756ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 6048ac0d-455f-4023-b5f0-2e53aa14f941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 156f00f5-7f05-4680-a367-2ab910f98036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 dbbd67a8-a8d3-4b81-a1e4-9674a561c4b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 52cff7b2-875d-4a01-9559-cdf271cfd540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 088f3a2e-0204-41e7-b794-cc95c9ef0d06)");

unit.assert_eq16(16'h0765, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #640 cd748711-91c4-4663-95cb-d1732e11ebb2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0502;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0249;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #641 4ddeaa3c-0f9c-4b73-b49f-c1f6f26dd652)");
unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #641 91c827a7-223d-431d-9400-c3688c093abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 22402f5a-752d-43a5-bc43-b1f54d625368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 bdba8687-7334-41ff-9dd8-97ad6d0ab8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 7096c6b5-a777-4c2b-827d-53c08b0fb412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 31ec8f56-ac06-4021-808e-6296314aef9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 2562e65a-995a-4271-a5f3-037f9b18f00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 aba71aa3-969c-4bca-84e2-18ad30524c56)");

unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #641 d89d88b6-a377-4d38-9fe4-7119c029876c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0504;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #642 d67746b9-1b53-43b0-970a-2ca94aeb4a85)");
unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #642 f8f1f7d7-6b81-4ce4-ab0e-ba18f00a2c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 70e20a98-09d0-402c-a9b7-83d7337bb3ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 51a1ef6f-46bc-4e36-8acc-37d0227cce03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 32b14b73-79e5-43c7-9356-4d48ea100017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 188f7927-a9d3-4a69-ab5a-a78bee981c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 78a6f900-4547-4755-874a-a0f192b779dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 45995915-3a44-4be9-a5ef-de9481fc9595)");

unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #642 d72380e6-6037-4d72-8003-8ee80803110b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0506;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h0D85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #643 c8d50e1e-460d-4487-b87f-111e50b9c45d)");
unit.assert_eq16(16'h03DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #643 c0874ee3-ef2d-4e83-8636-41fbf7433506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 008df07c-cdc7-4836-afb0-135d1849d614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 eacb528b-bf0b-47f7-9043-536fdf813a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 24fbf974-4ebc-4594-8e32-bdb2d5a2228e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 c79573ec-270f-45de-b76f-caba8ba70b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 a98037a7-e35f-4c82-8bfd-9c83e06b09f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 54cfbc57-27b1-4292-9279-94e5b804eeb1)");

unit.assert_eq16(16'h03DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #643 3d1edceb-bc2a-4510-8de8-f931b44b60f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0508;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h0A2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #644 933b2854-e247-4836-8370-2225239f9b4b)");
unit.assert_eq16(16'h06D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #644 34ed9b03-5413-48dc-bd7a-2e75b6c07d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 4207c16e-d3ba-4c20-b050-be0a5749222b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 40e9f3d1-0c67-481e-a3e0-0fb46e348773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 96900f5d-d583-44bc-842c-8d8ccf6c1b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 30d4930f-8038-4c8a-b949-5e28e5a80ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 fda825e8-231e-4ff0-b653-6c5a20fb176b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 9e8a9724-c38a-4724-9944-a8deb6a2e559)");

unit.assert_eq16(16'h06D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #644 840ebc9f-1b14-434b-8854-fa1859133170)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'h0CC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #645 cc78b171-b28e-480c-afa4-a7ef886bd4c5)");
unit.assert_eq16(16'h0A2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #645 f9af6782-b0b9-4073-a23d-69654e9ae504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 e11cc98d-ee1c-4dcd-8b4f-7fdcef35b0f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 45be7fac-4383-434b-8794-b79b64a83b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 b99e7ca8-0bb7-44d0-ad64-7615ab5ea139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 db81c8c0-159b-4f40-9504-ec11dc237d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 0e3feff1-e94e-4b6e-b18f-5d124d7c5b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 82a7534c-9245-4d2b-961e-a05429e506f8)");

unit.assert_eq16(16'h0A2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #645 bd6a553c-540b-4ccd-85ec-e4b5ac95195d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h056A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h0F34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #646 2ca7ee27-4af1-4ac6-9a0d-ed1c39577eb8)");
unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #646 3cf6cd8d-d691-4b17-b533-892de84de18c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 994eac68-fb7b-4118-863c-ccf398d215f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 c33cbb4c-cedb-4851-b98a-34ad986223e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 97a51556-8cd8-4acd-8362-79937036d4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 23959945-d8b5-4705-9ef4-9f6b1b49f795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 dadbecad-75df-48f5-9c5e-f899e31a72f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 ebf9f067-1bed-4d51-ae8f-a1d9693479a8)");

unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #646 f93842d0-132b-4f4f-ad44-a6756dd272ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h0A56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #647 085266e5-9ef1-459d-8c55-e2d0f9d72f5f)");
unit.assert_eq16(16'h08EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #647 63ed6bb1-5c9a-472a-bcbf-83da3ee9f3f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 2ae89162-1e11-4b54-86a1-44b599b7ef42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 713e3cec-7d75-410f-8c71-97342a4264d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 7156cc10-1828-4da9-8384-95a6f8b70292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 6bdc6c62-73c9-4a93-916a-5bfa124e2504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 3a7edbf1-58f0-455b-9afe-34a081ef121f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 9bf79d20-0b79-4de3-bfc3-1947d7f921d1)");

unit.assert_eq16(16'h08EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #647 109d1fc7-a5ad-47fc-ba7c-9d6949e08735)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0510;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h0CFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #648 7269c866-15a8-48fc-ac89-091338d56580)");
unit.assert_eq16(16'h0F9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #648 36c894c4-d64b-404e-97be-643f68d86b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 95dd5df2-153a-4e5e-83ac-7ff95b30f59a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 b4f3139e-73cf-4c4c-bf32-17ea1714ec5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 107e22f6-7227-4e3a-9c6f-f95ff15f7535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 24fc08f9-b1e3-48b3-b4df-3a7b55b361cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 51442a74-2e4f-4053-b253-65cdd7a6a773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 d9e50df9-d919-4633-b15d-635292c4a60d)");

unit.assert_eq16(16'h0F9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #648 4bbc7998-6026-420e-ab7e-76d403a238e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0512;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0320;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h0320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #649 c69838f2-2b95-4a50-aaaf-ce51e96ba3e6)");
unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #649 bb4c6ce2-ac27-4d60-a30a-0efd7bb20959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 5ad2bfbb-fb87-4401-b720-d2fceb4b752d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 371ee80d-fc54-4a81-9797-5382ec717ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 70cf6f60-f804-47ba-9723-90d4fd4cbb58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 4a7af1a5-0cef-464f-9c1d-a20536560a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 399fb27c-6494-4187-b00e-09358a9328ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 c89ead3e-1c54-4982-9d3b-7be1d56fe2c0)");

unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #649 7b82db2c-2b43-4001-bfa4-2ba06833bf4e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0514;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h013C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h013C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #650 f590ec82-5081-431e-af1a-da91b981c4ca)");
unit.assert_eq16(16'h042D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #650 2c0c0f84-b95e-4237-bd82-039da1ec64e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 b4c9f7be-2dbf-4b25-b4e3-67690b7c5fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 69fc7dd9-71c1-4f3b-ba09-af60cba731a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 abbdc7ef-a1ec-4d42-806a-6c16a9d6b2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 47526a73-dff8-4ecb-91c1-80b1bdbd16ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 8d0d2b6d-322a-437d-a3f6-85b0769092ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 183e4942-102a-49f9-a9bd-ce9b9003e214)");

unit.assert_eq16(16'h042D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #650 a523ee3c-9b88-42c1-9a89-8bdc86f931ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0516;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0013;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h0013, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #651 5688b8a3-4e59-4510-874a-509d99738a12)");
unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #651 90d806ac-670d-4c68-b136-51501e8a0852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 e880324f-ea01-40e9-81b6-783c648957fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 219dfe46-5817-4498-bd14-b503f8af6536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 9ddf14a7-f143-459a-b66f-159b42378d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 9118d23f-46d1-4e4f-b2d6-b81af545e147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 6e702c7c-9694-4b0e-8e6d-0e1cb54cee35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 930a05eb-02b2-4b44-9a95-b9bc048e0b9c)");

unit.assert_eq16(16'h0A5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #651 74c7792c-fefd-4cf8-b476-b3870dabf61e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0518;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h035E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h00FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #652 d8b08a81-1460-4243-b3aa-c6db964a8385)");
unit.assert_eq16(16'h035E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #652 b46b1607-48fd-497e-ad77-3bf07bd58b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 bc608533-f1f0-4dd6-9fcd-51573d71cd3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 bd40d523-9ff1-4dbe-b4db-63bac9c2d284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 22982f6d-4f98-4898-b470-1a15595b3ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 95fb7dc8-8189-45ea-a975-696b28bd77ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 b3c435e1-e355-4e1a-90d8-d993bff69465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 53c5aa33-9e17-46ee-a3e7-ec0ee436d251)");

unit.assert_eq16(16'h035E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #652 90b228c6-742c-40b0-a28c-2f0b9ebf9a61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h0D4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #653 1a81f630-dd13-4065-9330-5680b347c75f)");
unit.assert_eq16(16'h05DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #653 34c794ae-e20b-4b25-a9d7-317a7d1d8d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 040b0957-4242-4aaa-9ab2-eb7f27e2cc1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 01df9126-c435-48b9-bf62-9f698961a7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 bb6ae882-ed36-4d6d-9022-9819f3d0c223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 0c4dc325-0676-4a13-9359-3966e3af8b1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 49f22bc3-ccc4-4948-8ed2-d2e989175091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 71c81c5b-818c-40ad-8540-3cd39eeace75)");

unit.assert_eq16(16'h05DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #653 b713ec26-84e8-48c1-b8f9-1a301212e9a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #654 cba06f26-b634-4df8-92ea-aa31e92c2e28)");
unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #654 fc722870-a0dd-48f8-b61f-1d7d5688507a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 05ee38ec-3b50-4cd1-8963-9040bbf9035a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 5fb37b60-8956-4b48-86a6-e7a49b36fb02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 acf60192-f919-482c-a1db-b87db23dec28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 e6c5f653-b7a7-4a45-bdeb-750a678b4ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 5710a90d-e1ed-4851-bddd-37c623075c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 8c507046-5689-4633-bde4-79874bf50d89)");

unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #654 99bc0b1d-5fde-40c5-9c98-c564db9ad174)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h091B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0569;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #655 c33969df-6834-46bb-8bf2-e66920b6bbf3)");
unit.assert_eq16(16'h0569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #655 de52f7d8-affb-4973-824d-951c4529be0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 ed2ed92f-3dba-4808-8e16-03c31a50d6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 30313766-9a94-4da9-873f-10ec6dbbf669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 771c204b-79d2-4df8-9126-aed651c7fda7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 4141a7ee-82c3-4485-9188-76e2e335b8d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 5ec74652-4386-4ae9-84e4-51bc28fe5e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 c9bfd69b-efab-4f98-8f6d-0f1a9aa2cbfe)");

unit.assert_eq16(16'h0569, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #655 ba0c6ec2-62b6-43df-b15d-d99c9a778b81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0520;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h08D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #656 7786d010-71d1-437f-ac3f-f2f361d2632a)");
unit.assert_eq16(16'h0225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #656 469fe922-0744-4e25-9409-b86daeeecf8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 08bdfca7-3b17-4199-8634-2e9458faea38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 6448329a-3e2e-41a7-9c3c-ce6ddb099f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 f5627026-f9c9-412c-a333-a0bbe0dcb219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 8b3383d4-25c9-4019-90b9-a3db668f6956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 ce4d08bb-56b1-4f42-86f0-6f0128ded7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 9d2285a9-899d-4f3a-b5b2-5a7c280003b0)");

unit.assert_eq16(16'h0225, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #656 cbd089b6-d524-49dd-8a09-d31f39056535)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0522;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #657 b81427c6-04f5-45cc-9ad7-ec2cc351ad1b)");
unit.assert_eq16(16'h08DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #657 fafb7653-6e6a-4bfe-9f54-c398b9b9f7fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 2080decb-ce05-4df8-a16c-ab4dd7a0a546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 2d59fac6-5c9d-449a-9cfa-a0fc4cc617ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 ed9799ab-f659-42f2-a1f2-db0772a469d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 1de09bb7-013f-412e-9c7d-d79396066a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 0a5e4b19-9656-44ec-a043-c741dd5a22d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 99916be0-e964-4c9d-859a-75dd7f8d317e)");

unit.assert_eq16(16'h08DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #657 265f412d-d471-4fef-9c52-a65cec6e77ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0524;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h044C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0721;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h044C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #658 8edf3908-3f19-4bdf-8b27-daf4cf5ad49e)");
unit.assert_eq16(16'h0721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #658 f075e882-39e2-41e9-9323-e3c0d360d8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 b2ece45a-b832-4bac-84b7-cdc5230d7784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 3072cd84-2d4b-492d-97f0-c3eefb815c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 94899b39-c3ef-473b-a503-7398c16bf449)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 493146d0-7d71-4fcf-a24b-e4e343195f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 c4df045a-0b9c-4519-a8dd-896d2c8eeb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 7dd0caae-a9dd-4e86-bd5b-0221232ee13a)");

unit.assert_eq16(16'h0721, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #658 ca308071-6515-45be-bead-b7e0c0cef607)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0526;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0984;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0719;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h0984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #659 d333a3f4-225f-4ea2-b5e5-ea95c252f92a)");
unit.assert_eq16(16'h0719, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #659 d54b9659-52f4-4d3a-a2c6-97a9e631a8ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 ec9ab1d4-1ba3-4c35-9e8a-a1f2d4302197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 2676b7ae-f902-4420-807c-d424780d3a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 26d4c7f8-54b1-412a-8760-a3f55f71f11b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 19108b83-ce11-4714-92df-d693e48d6ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 c41fdc11-6019-4e9d-b392-b1e8522ce233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 29b0fb43-529c-4f35-b68f-27c3c8ea0fb8)");

unit.assert_eq16(16'h0719, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #659 0c45bcfc-e101-48eb-aee9-0ff5cd6c41e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0528;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h0C0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #660 1170e8b9-8309-482e-8af4-b4950ff74b75)");
unit.assert_eq16(16'h0FE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #660 10a38dfd-8c3e-4dd7-9340-2ec879f1b089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 c3d5419f-af8e-470a-868e-6d27e3b4f957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 b7fa4394-f773-4db0-94b2-398d58eb642a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 2f8cf6bb-2f86-4d59-8e7c-c5b712cd60c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 9f371130-7372-4305-a729-2f26bf820625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 3adbf028-0240-4ab7-96ad-834bdf7c18c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 5f1fad78-7f13-4735-aeaf-16499e584ab0)");

unit.assert_eq16(16'h0FE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #660 9e53e044-b920-4996-aa8c-26f21615e650)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h00B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #661 0f9f3d67-b7ff-4146-86d4-2cd81c75bb52)");
unit.assert_eq16(16'h03BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #661 382d4186-89d2-464c-b9c3-a2dac940548b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 cdae0cae-905d-4eb7-a5e1-5cbcc5208d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 0007206c-f197-46ff-859a-5b02b1edf547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 fb01dcd6-77b8-486d-a521-afa917330808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 d71431e1-8701-4693-ad3a-8ca39b5e46cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 48492574-1776-4207-9e4e-c87e62ec178f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 47749f38-3a85-44f2-87f0-b8beb17f33a9)");

unit.assert_eq16(16'h03BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #661 8990fe33-aa09-4b25-ac02-1058bc9f4c5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #662 91f2b89c-6f36-4867-bbf3-8656a1309b72)");
unit.assert_eq16(16'h077E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #662 9d13f023-6371-4ff4-a84c-309cf26956e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 f0f57d9e-8ec0-44f1-9b26-53432a3deac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 4b250ffc-0f77-4fba-8f2b-fc0f4d5d5bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 03b3760e-7193-498a-abf0-cd1af67ef21e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 9dc6f21e-35ff-47fe-beb8-ca03da274f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 d4063c94-1902-4e10-bbe4-321ee479e9a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 fca32aa5-afc0-4b93-839d-fd43d8786814)");

unit.assert_eq16(16'h077E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #662 20b784b5-6127-4b6d-8853-212a22837b0a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h08B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #663 abb69c6f-9978-492c-8ea9-e0561d505e6d)");
unit.assert_eq16(16'h07E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #663 b964ef10-0d56-4f51-91fc-4a293362e75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 59a4bd2c-c85c-48e1-a64f-dac17daff23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 a615f4f6-4235-41aa-b176-f0fc9e2654b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 f530913b-1a92-4129-92c7-f57bb5f0f640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 9f08687d-53a9-45b0-b3d7-3b8c7c5c6d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 8d79fa11-97f0-458b-a1a9-f9ce25876db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 c92e17d6-0729-4268-90e9-cadf307d83a9)");

unit.assert_eq16(16'h07E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #663 f6ca20f4-ad88-4fde-81af-a2d5ec86d7dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0530;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0484;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0753;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h0484, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #664 991b89a3-7711-4fe2-b936-ed43f5b77cb8)");
unit.assert_eq16(16'h0753, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #664 91cd13ef-f258-4b25-84e4-34e5667a055f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 3c94e131-38cc-4b53-bcd1-a1c97a863bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 321a0285-d126-407a-83b4-993b767bfecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 449cfe99-f2fe-45f7-b46d-c7dd424bdd20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 2e38323b-9c48-43df-b789-feb08f6f9331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 1ba2e8c4-428b-4685-bf1a-0be18dab0dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 b608cb69-d121-44d7-9c60-d639c446f96d)");

unit.assert_eq16(16'h0753, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #664 0793c704-060c-4f27-9a17-a5f464bf768e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0532;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0577;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h0577, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #665 9acc7278-7024-41ee-99b7-d5ec2ac76ce0)");
unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #665 5e13b39f-9d7c-4b7a-8d14-6cba5f29f653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 33602913-324b-4dae-9b4d-0c1123937fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 c3169d15-a7c3-4fe6-aa6c-31c0e60ee310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 71d2ed0b-1839-4670-ba6c-84132b31fc45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 ffdb81c5-4fc7-412d-9502-6f39be696cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 22662720-45a2-4e33-a8fb-d670152ff4ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 ed5ca6a3-498b-4741-92d6-594f289dfeb7)");

unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #665 34498922-048d-4b31-a6dc-27fc20d28593)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0534;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h01A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #666 9cad174d-e972-4ee4-81f1-2d7552f95ff7)");
unit.assert_eq16(16'h04AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #666 dd0f1a7d-6f80-4086-b5eb-64a30980a1c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 dc4d3849-eaf0-4b91-8cc8-9a72f7fd33f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 32dad146-e6db-4892-a258-ee55fd3cc1b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 6740c8eb-f717-4e06-888d-c17524070c11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 42e39fe0-3920-4c5a-b20c-c04465bdfd7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 ef6ff547-b4c0-4e64-b859-6c17596f5a78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 eb3b47c8-bd5f-4f5b-9008-fc0009c2820a)");

unit.assert_eq16(16'h04AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #666 d8709049-8e5d-465a-8d95-ed9dc7e0f3e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0536;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h094E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h094E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #667 3a8f91a6-56e0-45be-b034-3627becc822d)");
unit.assert_eq16(16'h06C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #667 af41d0dd-35b5-4c52-8fd3-827516bd5549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 e3f08185-bbf1-41e8-b756-0f31b870c4a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 42e2e5e1-9716-4b12-8af6-f700adfca305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 b17cfcc8-5ba9-4001-9339-bca4c8385db6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 3a3bf50b-b4ad-45c3-9016-d7f0ec428f68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 304e521f-2a66-421a-88b4-867543dc3727)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 fef164f9-1eea-44f5-8878-c83feb6224a5)");

unit.assert_eq16(16'h06C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #667 3b3b9c5a-db76-4daf-9bda-b1feceab060c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0538;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h08BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #668 9a003952-dcd0-4b07-853c-d2685a54e1e6)");
unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #668 f847796d-6bb2-4383-bc08-b1daf19c4e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 d0bb3814-6bd2-4796-a362-0b06aa3a04ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 13475e19-cfb6-46cc-8317-759944b3b865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 a38dfa73-855b-4adb-b8e0-6fe9e781c7c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 588133e8-461a-41a0-8f55-04c6bfb6e775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 2bdd5fbd-0ff3-4ec7-aa41-2bb0ee5947d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 82b310c1-b5ab-4fc0-9521-e9f9961097dc)");

unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #668 801d1b51-afc7-48c3-b941-5d26c049a0c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0155;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h0155, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #669 3f101e48-2c66-4026-a595-cb11d19b294a)");
unit.assert_eq16(16'h0AE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #669 8044a742-ee33-45e8-b297-0b03526a18b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 441e4c0c-ce1b-4052-8afc-b36c2eb13370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 e9be2a93-4764-4e87-b403-be0a5fc2981f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 57e76e0f-eafa-4445-aecf-3de2080801e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 601d92bf-61b2-4647-abaf-ec53b840a65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 d6807ea1-c051-4a84-a772-20a962f72032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 7360b5be-79a8-47c7-9377-4de026c2ae90)");

unit.assert_eq16(16'h0AE6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #669 79611a5f-8a90-40bd-829e-1387b5d96e9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h092C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h092C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #670 b074aaaf-7b48-484f-9ea7-f72321126815)");
unit.assert_eq16(16'h0E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #670 90565d66-8a48-48e4-ae69-21d017d1e5c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 92c14223-4f6d-42db-97ef-2a680d52c42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 c07d01a0-2233-436f-99dc-8ce6b7552f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 10d47df1-012f-4545-a266-94c5d3fc8d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 886796f9-4b72-46ac-8713-b9ebcc5e648f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 f52552cb-0a72-48ca-a5d7-d3f6738db204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 21d3c46e-3a44-4490-81c4-ef31de67b2d1)");

unit.assert_eq16(16'h0E9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #670 e9f35ab7-95eb-4887-a3fb-15117382513d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h00B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #671 ed81ea41-fd83-4948-bea2-8975e101d8fd)");
unit.assert_eq16(16'h0EEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #671 1e39add5-843b-4e96-af24-2c2e88cfb8b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 fc0ebb8b-e885-4a76-bde2-3b0b0420700e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 dcc28946-b573-4ed3-be60-a41ddfcb4164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 55804f86-ed1e-421a-ab25-6fb762c8d772)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 a8b5f91d-b871-499f-b829-ccb745e63724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 858358d2-b34d-4bc6-ab7e-318dae4e727d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 eb02fb67-cfe1-4f8d-94df-933114a6d617)");

unit.assert_eq16(16'h0EEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #671 aa7999d1-c953-4095-80fb-2baf0b20990e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0540;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h06AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #672 66cba33d-eb09-4f69-bbe4-65c8c78c6e04)");
unit.assert_eq16(16'h00A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #672 d1a59f73-6aa9-4df8-9a7e-beb4e0ca4c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 04a3cb7f-5d5e-470e-8aa6-8dfde4785a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 e1ee17d4-def5-4a68-8d77-11f4b5cd7244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 34455709-10a1-4123-b6f7-a5dfe1295ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 0806435c-6d3d-4251-8855-33d2ac3e03d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 822729b3-dfa3-456e-bad6-21367a9a290c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 2efdadc3-181a-4f79-837e-accb1b7e7d7c)");

unit.assert_eq16(16'h00A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #672 f879f3cc-dc1c-4370-918d-feb0c0b63671)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0542;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h09DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #673 b1ef6a33-66c3-44f1-8567-383dce5aa6fc)");
unit.assert_eq16(16'h0BF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #673 c0efc42c-1cfb-4e73-97e9-88d583664e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 a0698f00-2b27-4902-b025-eabcaf4c70ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 df6e5578-dfac-4e15-af32-93aa1ef9e3f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 fe37396a-1401-48fb-8bb1-b9e01f0e38cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 9783cb13-c5ca-4a73-8dfa-561b0e6aa455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 21230f6f-2a09-4d5c-9a4e-609f04de73fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 a13dbb74-4440-4150-b18b-f29a803c3abd)");

unit.assert_eq16(16'h0BF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #673 4185ef2a-8fc3-4419-8713-6470ac66cf48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0544;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0706;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0902;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h0706, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #674 0187783e-0441-4f3b-9387-3182613124b7)");
unit.assert_eq16(16'h0902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #674 40be4707-3a39-4bc9-933e-445e88dda876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 b81e49dc-08f8-4747-88df-4b748828680a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 2ca8b763-f6ab-4f81-8885-e2abef4fb034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 c68fde2d-2a1c-41a3-862a-5bcd0ef031ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 e5a9babf-28d2-4149-8604-67f637cf7343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 8598b89e-5532-4301-9d0c-287f44154271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 1ac02f8a-5d5d-4f27-97c7-e74c2e3c03df)");

unit.assert_eq16(16'h0902, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #674 c56af3b9-56d4-4665-9441-daea717214e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0546;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0056;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h0056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #675 b31689a8-415a-4d3c-a8a4-be3ce266c86a)");
unit.assert_eq16(16'h0C20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #675 5e6995d2-1d8d-4bbd-9c68-dd11618bcc2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 f5cc3809-043d-4622-8adc-e6e5b84eb02e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 cb65fb3c-8dab-4674-b285-3aeda1b8721f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 b4bdb4ef-f827-4918-aa35-b246630e490b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 5a054422-f467-45f4-bbed-8d3c3e471b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 f5523dad-f2d2-47b4-848f-52b11618c412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 3c23257a-b84d-4925-bc28-ed1def560097)");

unit.assert_eq16(16'h0C20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #675 0736c556-9a93-4f1d-94af-307a99615201)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0548;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0401;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #676 68d73270-c161-41b2-803e-872934c1af99)");
unit.assert_eq16(16'h0401, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #676 34687f74-85a3-4460-96e3-297864dff1c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 b5d903a0-17a0-41d8-8f31-bf6928749068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 17215d86-1dc4-410e-be90-43daecf9263a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 8465105a-831e-44d5-83e8-dc96843d03e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 aac25ae1-1f93-4389-9b45-6edd43280431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 d2362f58-02dc-4957-bb9d-bbbc5a9681b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 fa750423-c190-4ca0-bc2b-6bf5d7552b38)");

unit.assert_eq16(16'h0401, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #676 bc5d6248-b342-4a49-b008-1546a66206dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h097A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #677 356fc1f5-aa84-425f-b5cc-95fafcb45e6e)");
unit.assert_eq16(16'h0F79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #677 4fa6e5af-5304-4d23-8bbb-151d9755e9a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 944e56af-cf5f-4988-bb7e-e03967f976bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 9b488955-0c47-4a0e-9e90-33da7550527c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 cf1421a4-7bb9-48ea-ae47-9ee3f98f4e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 9e03905a-3841-4499-a51b-3b347bfdccda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 5b6cef2b-831b-47a6-acbb-f8372ec7f5e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 35be2d3f-ee8b-4500-a6c0-dd60bdf37375)");

unit.assert_eq16(16'h0F79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #677 d4082270-48ae-41f7-a0ff-df454d45a1ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h0C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #678 f8cd0915-9744-41f7-b9e1-477ac010f42f)");
unit.assert_eq16(16'h0F24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #678 97376caa-940b-447b-a478-54fb68002f49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 2c0a5be4-8571-4f58-8849-5d6b4df7af88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 1d2a51fe-ff15-441e-aacf-321e2a6b35c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 306bdc15-490b-43a5-8232-264b0160c17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 ede4f2e3-2387-41de-a29a-77cdb0acf6e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 1034a4a0-7c2d-49ef-8d1a-b038f30fc0c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 2287dcec-b51a-4848-bf91-cac15fcabb3e)");

unit.assert_eq16(16'h0F24, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #678 df64dc14-2334-45f2-a7e6-bd322017049e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h030E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #679 771824c4-adb1-4c28-aa55-d9ef54f70d2c)");
unit.assert_eq16(16'h057C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #679 64e65ec9-1108-4e0a-a89c-87de1ffe1777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 9d677651-c2bf-4fc6-8970-b5ce89345ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 5d8232c3-7cda-437c-9bd0-e684249c86e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 9c6bad9e-eba7-43be-84bd-62750b617295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 0e644453-c1b5-4226-8136-93edbe7e30f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 d67f3498-6c10-492b-983a-fff67176d178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 b80cf676-6188-4a6c-a556-6dcefb4fc221)");

unit.assert_eq16(16'h057C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #679 3aa58887-2294-4c64-99e4-8e930d424425)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0550;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h073C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0650;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h073C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #680 ebbb7616-0d97-4ffb-9f09-40a7a165ed59)");
unit.assert_eq16(16'h0650, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #680 3e3738e1-d9b2-4f8b-a804-7c2f92e19ea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 b4526191-c8a6-40e3-8172-39eaa000a139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 ce5c16f4-6e11-4cd8-92da-f686c466f90f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 5d5a33c6-37b8-403e-82d4-09312e223ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 3a98c3be-5ec3-41c5-973c-d32b6834dfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 9e9a99c5-3ba5-496a-adb4-fdc3bd603921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 3f356e41-02b0-4d6b-ae61-1027941217ad)");

unit.assert_eq16(16'h0650, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #680 3b6f98ca-7929-4fd9-a0e5-3da5e2bb2962)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0552;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0254;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #681 6c09c57e-7adf-4d44-b288-35c4aca58e42)");
unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #681 3931c75d-b797-4c86-9b76-b8a5cef04d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 651d4baf-9af5-4688-8684-f0caada21fd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 37300368-ad0e-4364-b34d-b92299f9c2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 0e0d2a91-50d3-4462-a173-86b42a40f3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 ddc6999e-eaa6-4be5-af0b-d346fa051153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 83f4de56-9394-4b8f-97a4-46e54396afaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 dc76444b-b623-4d64-bd42-3fca1b5f3f25)");

unit.assert_eq16(16'h0AB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #681 5169c0a5-df9b-49f7-aec8-eed74f3643be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0554;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h0BC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #682 92a8e43e-1e21-44f4-8536-bc8027816aca)");
unit.assert_eq16(16'h0636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #682 66717699-3ecd-495b-83fd-93fe72659875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 946ab00d-fa8e-4752-8d71-6d1f4df38834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 2166b5b6-9573-46ee-8b59-de5c91aaedeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 b6389c75-7762-4547-99a9-5ca399e2552f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 4c8ec319-ad1b-4ef9-a2e2-5a6ea7b9e903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 02120f5f-6c85-4397-bf4d-aac24b892f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 0eb7a3ac-9df2-49a7-9f1b-0a162fece041)");

unit.assert_eq16(16'h0636, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #682 bad9c008-3733-4c9a-816e-72ac9c40ce96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0556;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h046F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h046F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #683 8f81a7e0-5e50-40a1-aac6-b9b42ad4a059)");
unit.assert_eq16(16'h0C79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #683 294bb69d-4391-470c-a92a-fa44429081fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 e01a1d14-7049-42c7-8818-f70a38383a41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 eb708546-0600-453e-8f8c-9c5b65edc4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 3082fa13-bff7-461b-a134-eaba29f705ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 df5f4dca-0d82-426e-9e3c-9c41aba52099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 9272c3d4-5ceb-43cf-a838-a13c86642e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 fe14c6de-5ee1-4287-bd50-6faca60f7e7f)");

unit.assert_eq16(16'h0C79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #683 eb07f8f6-a640-41a4-b648-805c9d78bcdf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0558;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h0C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #684 942da337-4c1e-4009-957e-8001adaa3db0)");
unit.assert_eq16(16'h0D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #684 4a09ecff-bd6e-4224-b95e-f4b454b9588a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 18d949f0-f803-4ae7-aad9-5092ec8154be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 0493cb5e-5cca-43b0-bd38-689b38c879e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 fd0f5b9a-2bb8-4733-ae3f-ff4ba3b36f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 7b7a11ed-d22b-4973-8f9c-06f7283f1acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 c2bd8e60-3f3c-4bcc-8e5f-ca8868dcc9ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 aec2f033-8d89-4fcd-86f2-2a8162802c6d)");

unit.assert_eq16(16'h0D37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #684 fd5474df-f768-4036-a5ee-d290871771ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'h0A92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #685 bafeefaf-cccb-43cb-a8c0-48d26589ee42)");
unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #685 09655bdb-0b87-4dc4-a3f5-275366d6e0bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 e5aaf186-9178-44a2-b8e2-c1dbe9da4dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 216b9129-2f9a-40bf-9a19-c0a0d42d9bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 06ddcf64-a7dc-4b43-95a3-c1f491e05549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 451b71ae-1560-40e6-bb84-ab1d9740721b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 2856605f-e988-4d7c-b716-45df5587b0b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 0ba1abed-962b-4b8c-8d48-e21312efa304)");

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #685 79aa4e04-95d3-4375-8f1f-06933f2759c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h0C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #686 57bdac3f-76fe-4438-a67a-6209e08b1cb6)");
unit.assert_eq16(16'h0B6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #686 b8bad82f-616d-40bf-9d0b-124f833fa6cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 32f99ae6-27ee-4a06-a559-ec1d78e01bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 e3089bc0-4107-497d-9668-38ee5b69e073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 4c17b630-1742-48db-8d6c-66e4c27adbb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 a8b7f9c7-9acd-4a96-90c7-f74ce125d8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 65c4eae3-05b1-4372-bea3-2e62391e11e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 1f548901-9bcb-4e09-bf66-ed50c9a006cb)");

unit.assert_eq16(16'h0B6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #686 1f1974ba-2e4b-4978-9b70-63449584f593)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0889;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h0C5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #687 6312721e-f39e-4adc-9100-fa3922c2d43e)");
unit.assert_eq16(16'h0889, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #687 6523f8c3-5845-4ba0-b389-bf84d17a21ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 a598197c-07e5-4ebe-89e4-dc9dce209d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 e32a9df9-a206-41cc-8a60-73d29203decd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 fe6557d6-d26a-4a7f-ba28-fbb24e9bbcc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 076dfb95-2137-4d2d-a1f6-a8b82d85183c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 f1d02eb8-4ac9-42b9-80c2-9c32b15504eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 3384b817-681d-4437-8f57-77efde7845a7)");

unit.assert_eq16(16'h0889, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #687 871d2b6e-fee2-41ba-b036-0b513e4ccff8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0560;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0873;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #688 a5d539c2-a4c4-43be-b766-9baa43e47b7f)");
unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #688 432978ac-e5e6-4b1f-9638-b4ea213969cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 f364407c-bf38-4e33-82df-760f31945dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 ea808180-4b48-4f46-bf5f-af4f171b90fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 8d1a85f7-c5c8-4f60-a3e5-d8728a1bf197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 e5fd5b72-262c-46b3-b5a9-dfcab183d5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 d22bce52-2327-4f24-bf27-4a38a6cc903d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 807cf1dc-43de-44e0-a308-66f886f09e01)");

unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #688 fb759cfd-b3d8-46c8-ac9f-f2e93c396aca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0562;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h0198, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #689 f0a64538-43a1-4d25-94c2-946475f35f84)");
unit.assert_eq16(16'h09B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #689 6873fd6b-7d66-461f-8023-fe48acb093a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 2ae458c3-adb6-4e90-9bba-6649500775b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 7c448b62-5da2-4d40-b127-3a5a4be981d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 e9349c2d-ae2a-4240-bbe5-5454b45fa372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 5781ad88-b070-41ac-be06-f813c2dfb96a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 8514e5af-4ffb-41c6-9203-ff23991bb9bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 c0a1540b-5afc-4d0a-964f-f569087e78bc)");

unit.assert_eq16(16'h09B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #689 24728146-b95d-4dda-9534-00d76fef8aea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0564;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0858;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h09A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #690 82b34819-f829-44cd-93e6-0abcccb28667)");
unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #690 487eed3c-45f1-4bec-80c7-29fcb456e0a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 47d33078-4a2f-43ff-93ed-c286747f7d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 c18cae96-d509-4a3c-b0cd-8e38377709ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 0497a986-ff7e-4750-8f67-29dd5cee671c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 1bc5bf3b-d63e-47cd-a3f5-01161fb04a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 c6c9ab3e-78dd-4182-bbeb-32b0043dd510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 e8ce6789-be9d-49dd-b083-f5164b076b2c)");

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #690 57ec3bb4-3618-45a5-a079-3df1923fb7c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0566;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0601;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h083C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h0601, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #691 b91b0aaf-13e2-4f0e-898c-864bc139aafe)");
unit.assert_eq16(16'h083C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #691 33fa051c-7587-4291-8c14-dff1a4d17f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 37dc73cd-575b-4c32-bce7-8fcd3e2a932e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 090269a4-34bb-4d62-84bf-7b575e2faf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 4c3cf674-eb34-45a1-a147-429e500e2cac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 0f64aa62-3f76-47ee-b584-4186bf416f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 74775b44-1003-48d8-b994-adc736c73ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 a6cbceab-1fc8-44f7-a5cf-71baa7b50d01)");

unit.assert_eq16(16'h083C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #691 74dc0a23-dc0c-4555-971e-15dc76755018)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0568;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h0BE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #692 4dae7952-34af-4a15-964f-fca4ede7c859)");
unit.assert_eq16(16'h03F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #692 a5496eb0-a7f2-4902-91ad-91c7239e15fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 d6b916c7-56a7-4ed8-9c29-631991b7e927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 7271c323-d4ca-456c-924e-214285f92cbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 535ce554-8aae-4ad2-8b55-d5ff9eb7004d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 a50f8689-4769-4da5-93d1-172de469f3b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 5e353989-a9df-4d87-8c4b-44430de55508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 976823c2-c8ea-4f99-98a2-15292b976bba)");

unit.assert_eq16(16'h03F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #692 6bac90d8-18c1-4ef6-b0a4-254f6b92d36d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h0E5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #693 30a5329f-5ef0-4a57-9fa4-40265dee590a)");
unit.assert_eq16(16'h0B4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #693 f067f78b-3fa0-480e-ac0e-2c153800c195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 e24c5cc9-66aa-46b3-a650-d0acc1d78414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 076c145a-f292-471d-aa67-a92e56768a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 a13690f4-ac53-4791-b393-3311a6f23910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 6c9225bb-587d-48ff-aaf6-32e33502a7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 367287bb-b210-41af-a0f5-0af87a633332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 2085b151-4339-47c9-aa3c-7a8fcedf8b0e)");

unit.assert_eq16(16'h0B4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #693 379311b6-15d6-4eee-a4b3-1aad884b103a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'h09E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #694 bdb30625-5037-4b45-932a-97b49f7ace9a)");
unit.assert_eq16(16'h04A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #694 7d42f46b-a7ae-4122-a50b-7b719b99a309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 20b9bbba-9fca-4e43-aa6a-445bd1269a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 fda25d0a-83b3-4839-8d5d-101c40ea29b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 ba4d1aa7-18e4-424f-a0d9-3b8778c6c022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 2bc052d3-22a1-4fba-b236-f3221545f02e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 0785c951-a0e0-433b-b1fa-ef1e6894123e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 91b2f7bd-1cfb-452c-bd49-69a556196f65)");

unit.assert_eq16(16'h04A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #694 31d9854f-2904-4787-8b8b-2e0764697092)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0414;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h0B02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #695 587c2e6c-1bad-4a46-bc71-14f0c7e31e02)");
unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #695 46ce0612-43dd-4948-9435-c953e77a43a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 86be735c-c629-4dad-af81-8dba6bbf6551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 850f2722-3fd3-4d3a-b3f5-8a399e449695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 f2c4cb3e-4dd4-427a-9166-31013c71fc8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 864c4ca2-024f-445e-bb78-2e248b6e3bb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 cd33d138-7da3-432a-aed2-e856d37fd736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 427c2332-04b0-4ec4-8f32-ed9f0ebdd4f5)");

unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #695 9f7e7ab8-57bb-4254-a227-0c68a8268660)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0570;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h09B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #696 2f7ab6dc-45ec-460c-b257-c4d77bd384e8)");
unit.assert_eq16(16'h0779, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #696 a169f332-1735-4de2-a6aa-d1b8b0493734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 e3e8566a-af1e-454c-8bbe-56679e379a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 a7d51fed-1460-4caf-ab53-5b93bb95c30e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 c84dc7fc-d62d-4fed-b2fd-79be0e6ce481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 2ab40180-2be5-4af7-a7af-8df006bb2e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 8426ec52-5b68-4326-998f-5c76f593fe9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 e8ef6b3f-eb57-4148-92f3-85334e02bef3)");

unit.assert_eq16(16'h0779, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #696 51ef9824-b1d3-435c-b9f6-87879798794b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0572;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'h0CBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #697 ca092fed-78fa-44df-b103-1f6f2a8f7b46)");
unit.assert_eq16(16'h0C04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #697 4f2926c2-b87d-4237-89e4-f09282cd21e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 7f883785-847f-4456-8d9a-4869e824e781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 deec7857-6489-4f9a-81c7-2c65effa8e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 01a7c6b9-03cd-4b51-8f0f-0702f94443b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 edfb4d01-7e18-4fab-9b3b-0b9305e32f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 bc38d25a-8755-42f3-8e7d-dfac8c489599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 6c6b603c-61ce-4174-92d3-bb0709ff97dc)");

unit.assert_eq16(16'h0C04, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #697 c2cd22c0-ab2d-4c1d-b283-1f5304e0359d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0574;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0183;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h0C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #698 63aafac6-e7e6-4c19-b284-6309ae448d20)");
unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #698 1bf91394-c0bf-41fd-a9b4-7ecbe1bee236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 184fbde6-82c6-4072-98c8-2572fc19d61c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 d64dc681-953b-4104-832d-9a0439c460f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 7e0ee4cd-4ab7-4450-8062-4c4fd4b5eaf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 d2a1a777-c479-4727-aa80-e80376cd4463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 217c6c44-8f75-4cd4-9b0c-abcba51f1514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 3b6ef14a-1b2e-4c5e-b408-eccc995d5562)");

unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #698 920f4d09-9605-4679-a4b6-356da282f2cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0576;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h068E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h0881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #699 068783fb-5b82-4d6d-aafc-7423ad81a9c0)");
unit.assert_eq16(16'h068E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #699 9a0df2b0-85ea-42f7-9dce-9153e264302a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 538b59ee-495c-4b8f-9c91-0d087c41555a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 def87b3d-f7b3-4021-8b8b-d2d1d6c128d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 4f9685e0-b0b1-4a95-a8f0-a80589b87e9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 fb7aac9e-dba1-4999-8d4b-cb3d583e2f1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 53fcbee3-fc54-44ad-8c54-87550cc34da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 c26dd9e7-c722-4d08-9e17-d19d70033b89)");

unit.assert_eq16(16'h068E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #699 655a8253-f128-43ba-8a50-0c3b8a781603)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0578;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h040B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h062D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h040B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #700 a698852d-1c36-463b-b34a-46eace76b180)");
unit.assert_eq16(16'h062D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #700 b2e6c39f-3261-4eb7-9372-763f47cec39d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 684b58b5-a227-4469-abba-9e4730544217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 328d39d2-45ab-400d-beb6-bb770d1d7ab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 64c48bca-7b4b-4a42-8383-3367abe77ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 982b94fa-9bd7-4f7d-a8ef-c0be7e668e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 0f704a9e-6f8a-426e-8281-c575b5aaf795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 2ada9c87-7f17-4d9b-84a1-2fc69b5e1407)");

unit.assert_eq16(16'h062D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #700 f534ca31-b5ca-41d7-b7e9-5135124244bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h062D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h0A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #701 75bbfdba-d42d-4d73-96a2-7e7b4d7bbeab)");
unit.assert_eq16(16'h062D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #701 8a03ad72-d91b-4209-9663-d3989d4307c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 a9030ddb-ee94-4821-a545-bd84ea1b1f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 eb339839-965d-4014-b645-1db599db2654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 ee5f0083-c2aa-4572-bbdb-efefc6311af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 b916a61c-6074-498b-8b69-8d0c394e47f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 d53ee4eb-e8ad-4ba9-bb19-debeba1b93dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 fd7204eb-446a-4173-9b82-a0760a790a1e)");

unit.assert_eq16(16'h062D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #701 35d92d23-57be-4ea9-a265-3f54526ce74b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h081D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h081D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #702 bdc21fdf-2869-4c92-bb36-ad6866a2df97)");
unit.assert_eq16(16'h09E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #702 a4d479a4-5007-4fd7-a984-e913d48dc52c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 156e66ad-d00d-4059-8605-2e6c59a040a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 1140ccb6-c9d2-4dab-a1cf-34276a9f2e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 fe4ff239-5f16-4a8a-97a3-9ba72280e7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 b52f4c4d-9af0-44f7-a0bd-3683ec3c8d39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 35bbf74f-800e-475d-8b89-9b9458ec379f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 83145023-5fff-46cb-b38a-9045e4819c2b)");

unit.assert_eq16(16'h09E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #702 9b2287b6-0b85-44ab-b43d-9e284aad222f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #703 0cd8d8f1-1163-40ee-a8da-c8e7e46100a6)");
unit.assert_eq16(16'h0E58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #703 3925acde-06af-4844-a9d9-b6d726002ed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 dfe1cfa3-7853-4945-8c1a-acb915c3f41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 47237ba8-cd3b-4879-9efb-0dbb37f98c77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 5913b61b-2ab1-4b0f-8258-7988dc972154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 718cf17f-a228-43d0-a35d-e668c14ed98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 71dc6210-ec38-4876-80f7-8a7157fd6ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 48ce527d-578e-4abc-9c3c-e8fa8d10ebe7)");

unit.assert_eq16(16'h0E58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #703 a6b0513c-996c-46c7-b8ef-508a5d783b03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0580;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #704 271648c3-461b-4469-bf1f-bb8d0576175c)");
unit.assert_eq16(16'h0CC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #704 f168ea46-6d93-42b9-ae2e-71686752b76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 78813969-36b5-406b-8e51-af95cfd08292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 d70a7958-70e5-4b85-9cac-19332adbaecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 22e43077-eb49-43c0-9ea7-51460a0c9e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 feb5f58f-22fc-491a-95be-393d636671d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 ba7960bf-2be9-4255-98d3-868a768abc40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 7c2ead9a-8357-465d-b350-f90563ea8418)");

unit.assert_eq16(16'h0CC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #704 dc7b98f3-9e5b-40ce-bd3d-be59ec7655da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0582;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0897;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h0897, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #705 6f5283e7-ec71-4ee4-ab6b-8719d8e1f83e)");
unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #705 e6c0f0a0-c91b-4226-8f45-6f62f5746658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 98461aba-34ad-4359-96c1-6f7c28232ee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 0a902a0b-27fe-41c5-ba8b-6c5aa1fc18c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 f52b8d13-59df-410d-aaa9-682a65bb00c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 4d90bd13-c6c0-4a38-868b-d1b3b2e08799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 05484d5d-36ed-4981-90f9-4ed3219c1879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 803c1216-9a03-4b50-a6de-60d755c7d5f3)");

unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #705 0bde5d54-38d3-462d-985b-c5d99c7bb3b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0584;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0030;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #706 6caddc88-3068-4855-ad17-9c6456ee7b9f)");
unit.assert_eq16(16'h0030, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #706 5fc4932b-1b41-4c7f-a2d6-83c03c1832d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 36fdc843-385e-44c8-8910-7f8585b41cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 aa5360f3-8260-45b3-80b8-d292039fbd0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 e902e614-96d4-46d8-a83e-461dc08e1778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 585c3f26-870b-4d92-b48f-b19ad29c9e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 1b085774-ea5b-4bde-a98c-23a7f05dd4fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 d7aa09e6-fdea-45bb-aaf7-80202123a936)");

unit.assert_eq16(16'h0030, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #706 f61bb3bd-eafe-47da-ad50-f889f35bd9b3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0586;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0883;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h0CA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #707 be3450a8-8ef7-4120-ace0-51df50241daa)");
unit.assert_eq16(16'h0883, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #707 599cf44b-6a4b-410f-905f-9684fbff4fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 421d804c-367c-4679-b714-65ff6627d0b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 176ad60e-2171-48a2-9a89-5d02c3a8a786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 263c392d-6817-4f79-9b01-5c3436c1caf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 a1c78317-195d-4d0f-8e29-304939938fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 91e7389d-f49d-40ec-a565-5f3fa8b32902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 90424744-b88a-4c6b-9a98-80d69a3d4839)");

unit.assert_eq16(16'h0883, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #707 13011891-94f3-4f30-a49a-dd1e25ffe7d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0588;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0643;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h0C39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #708 3a404fab-641f-48dd-b294-3850aadd7b51)");
unit.assert_eq16(16'h0643, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #708 21dec44d-d49e-4c07-a508-b3345f83ab25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 54262ac4-8f5f-4938-b5b9-6633971d0639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 f4eb1378-3860-4e93-a807-d662439d1c0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 849a2a5d-5613-4ce6-a25b-c35d9e8c348e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 3a1f10c8-b09d-4a3b-8531-fe36d550cde0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 c297cbb0-902f-4ab8-9865-edfac90154a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 8c25c9ea-aec4-4228-90c5-a4fac44640e5)");

unit.assert_eq16(16'h0643, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #708 c01e6178-69c1-4f1b-af23-22422624185d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0082;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h0082, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #709 e6c7ad73-2727-4a33-90d7-f088288462a7)");
unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #709 c3bf789f-c879-4b0a-9cdc-0e7c60f295ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 6892eec2-dda1-438c-9fa8-3882448f1a8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 9ac85afa-3706-4ce1-aab6-efdf779be56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 9c702392-e73e-4603-9f90-b7b2bee752f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 c0262bd2-9bab-4da5-92ea-cbff0c827922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 3d744f27-0b9e-469c-bcf0-db9c1fb7483e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 f94ac616-5a9a-47fb-a66d-71e293146ac2)");

unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #709 4759e04b-38e4-48ef-be33-7af8a6000abb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h023C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h023C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #710 7a49f3db-6613-4c39-8a5a-a30086135278)");
unit.assert_eq16(16'h0A32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #710 bd7f650e-1110-4032-863c-5d70e27c289e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 7126b77a-c449-4965-845c-36115e078973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 63cc36bf-f47f-4460-9297-0bce1180a2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 309cccfd-505c-45c8-a3f7-c5b67f244318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 4c80b6dd-97d4-4307-885a-7da346fa4437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 d6fa0f4d-d729-4336-b1be-fd2a06db2a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 a3343b7f-aa1d-4b88-89b1-ab0760e79a89)");

unit.assert_eq16(16'h0A32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #710 06b77c47-c847-4cae-b609-010d47875c61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ADE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h0ADE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #711 6f7eb273-8420-48f4-8b11-6d09445660dc)");
unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #711 84fba612-286f-4ae2-bc3c-5f3034c16061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 12942cdd-217b-459a-8dd0-38a7b9a5d271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 3405f90a-1e64-42b5-9a45-451b12a29fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 5ddcf54a-0538-438f-ae45-b17608e7dd2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 f58b6b8e-9a59-4d78-b675-ab2c2c123c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 7cc3521f-7a48-4dfa-9c69-f8f9c70fa3e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 fd53b4f0-c164-4eec-a067-81727fd6692c)");

unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #711 4770a924-6a80-4b5f-903d-f8dfa57401ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0590;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'h0F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #712 335e156e-b0d8-41e0-a635-11cb6c7471c4)");
unit.assert_eq16(16'h07DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #712 fdea8e7a-4601-4a03-955f-134ff40c25e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 20ccb414-6d0a-4fae-a36c-b6e29e97ec6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 5e1e8892-146d-4069-b1c4-e78164e1bf50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 085c7ba7-215d-4491-9a3c-d3e5e199e84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 d713ce91-1fd1-4483-94fb-02bf30002da1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 96bc5335-5573-4f55-a661-d32f75975231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 7f865df3-faeb-433d-a585-401a9d3c8359)");

unit.assert_eq16(16'h07DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #712 7c47380a-f1b5-4cf6-8cf0-1389d627f92c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0592;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h06EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #713 adbaea6b-52de-4d55-9487-92c7d03c43f0)");
unit.assert_eq16(16'h0D46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #713 093c9919-a244-4c5d-b1ab-12998201e559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 bd108af8-6d85-410a-986d-64f089af4802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 f20065a0-a8fd-4d01-84c5-63242fe9a72b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 e1ac82fe-bc59-48a7-8b21-0896b535836c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 2145a507-f4e9-4b27-a101-b32a37567f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 b190d5b0-a464-4d1d-a756-36d4f1031e4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 d7e0718d-0d2b-4519-b05d-bf31fbb9d6e4)");

unit.assert_eq16(16'h0D46, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #713 3f3bd015-ecba-415d-8d4c-6e97221c55e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0594;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h057D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0163;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h057D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #714 1de2c5de-6160-4445-9002-d933585023f9)");
unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #714 f4f4ce1e-f2ca-4027-a380-8bbdfd623a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 e674ea45-ca97-4112-ba5a-ab34be4901b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 290aaa1b-cf9f-4f6c-90d5-3f04dbf5eeca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 285772d1-cd06-4109-be20-6637e4c13123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 07fd98b2-831c-4e80-b15c-d63d75eeb1dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 30eb238b-1f8e-426f-86a8-08d1f4093b3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 e628a559-b549-429e-91ce-82243bc10ef7)");

unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #714 908f3ba0-1f55-436b-b549-331de7ced557)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0596;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h0CA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #715 fcdc0aca-add8-4426-b4e4-905fbe8ce48b)");
unit.assert_eq16(16'h00A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #715 a2206f96-f12d-43ac-9c7b-300ba6f5596f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 ab7659df-96b8-45a2-9e4a-ab1e58ece6ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 4eff1f8f-3219-498e-b7cf-ed1a037273a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 c84ba559-cd9b-4585-a3b0-7fb01fb0cda0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 b48df2f8-7e23-4685-abc0-b5c65aa5138d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 3fce57e9-2a01-4738-9e72-70609f8d5713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 086a23c0-213d-497b-a960-d53f27345a52)");

unit.assert_eq16(16'h00A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #715 18d2bb4c-cd3d-48ca-89a8-05a200674ea4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0598;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h09B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #716 64e94b07-6ffb-4f6d-b56e-a49c9e4c6775)");
unit.assert_eq16(16'h0DA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #716 7e63e651-bac0-46b4-bb6c-9593a5795910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 8a6d6905-aabe-4da6-818c-1550da665b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 7135562d-86a3-4785-bacd-174f95942071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 a46d8fc9-7a8e-459e-b453-0b0f85103087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 aa052bf4-9150-43e2-9408-758dd94180a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 84b1645b-8068-42d9-a793-d5969c7a202b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 5ee11daa-47d0-4ab3-92f8-91b47846cea4)");

unit.assert_eq16(16'h0DA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #716 f586b46a-bb3c-4584-8e97-ec88fce05fa2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h001A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h001A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #717 617147a0-b25f-4fe4-9b9a-2f0a0fa8624f)");
unit.assert_eq16(16'h0DC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #717 a0bd37e6-eb75-41ea-a33a-032f531bef16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 d5657627-8714-4b40-8dfa-6823ddafb90c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 e402a752-dcf3-4321-a788-f2abc0eeab9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 aea71c03-7674-4f26-9664-8cfc57cc1606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 d0468645-ad00-453b-a302-1803d3ece4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 9029083f-8d33-4a70-b60e-4ee6c6363c15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 cea3e5d3-287d-4f39-a04c-2652678fa1c0)");

unit.assert_eq16(16'h0DC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #717 47388d89-42cf-425a-8441-dd31efcaa34a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h03B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #718 de97c939-f6ae-478e-82d2-f5027a6d69ae)");
unit.assert_eq16(16'h0EEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #718 887bc498-02c7-46fb-b8c9-09856d04ec8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 f2f72d99-949c-48d8-b325-9aee44a6cf15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 8f16be27-0cea-461f-893f-73d5f07dea75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 890465b6-defb-407e-9648-35ad910705a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 f2a0f9df-67b0-40b9-967c-5342c214d90e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 2896a4f2-55dc-4dd0-aa3b-e6012ec6d03d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 7603597b-e9ee-4024-85fd-a956b9226858)");

unit.assert_eq16(16'h0EEF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #718 cf0382d0-03f0-4468-9b3e-f46d1bfc314e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0522;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #719 5f61d829-b57a-4c35-bc96-ae96ba89108f)");
unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #719 bc7a9d0b-8c89-4246-8ff1-89c557facc2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 d324f808-74c4-4aa7-b7a3-f51054004820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 aa905cd0-1fca-47c7-84d5-e8ba6caa61ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 d7a9bbe0-3e75-47c8-9429-31f9162c1a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 d38acdf8-8e73-45b0-8b2a-8ea6fc3b92e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 f29e6e01-57da-4039-a3b3-8326fc57be3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 ba3e767f-aeb7-4d15-9c6d-f22a184a0f7c)");

unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #719 805cd820-c3d0-4790-a132-04aef2621c39)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #720 3b76eb7d-ad52-4dc3-b0e5-48c112d115d9)");
unit.assert_eq16(16'h0FF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #720 644714a9-16ca-4016-bab1-6b576f658698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 33a891ab-f87b-4cc9-8fc9-292d57efe84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 3061c7cd-3145-4c59-831f-fafe2a2cf9c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 0806fc86-a88e-4108-b82f-0d528508158b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 ef1149d3-8309-4481-b13f-02dba64cbfcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 1c8d5781-a3e9-44ec-85f2-d57ce8a3dbb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 bc3b8b8a-0a16-4ec1-a126-7ee92bdcb85e)");

unit.assert_eq16(16'h0FF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #720 955023c9-6654-4762-9676-aa2d48d18ed6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h08C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #721 8b093c94-b67c-41a6-8db4-bcfa63c90b53)");
unit.assert_eq16(16'h0B12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #721 7fdd3e72-7ecc-4d65-a1e8-265ee09f168b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 a6722d5d-7777-433f-b051-142445e0a63f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 e1040c77-2222-471e-8ee3-dbb53911d232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 feda42ed-ce94-41e2-b859-0f8ac87df05a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 7fcb8adf-854b-40f2-a244-0f2255006dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 4cd22ac3-5f1b-41c0-952a-7a55eb638958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 85213875-7e62-4d13-9b6f-f93adace5adf)");

unit.assert_eq16(16'h0B12, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #721 b00b04ea-bf44-4923-9334-61aff341dd6e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0077;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h0077, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #722 2d310a6e-2ff4-4fb6-bc54-94bb119b1a85)");
unit.assert_eq16(16'h0D84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #722 fedcedc6-1634-4e69-a849-77bb445d7a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 87a88fd2-6963-4475-8336-22cfab170f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 fc891a5f-a3b8-4888-b1f2-ed5ebc545ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 f3eff13c-8f15-4277-a8fe-5c111b49c8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 1bff582f-dc93-458f-ade4-cdc1c10d3f32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 842f4819-2a40-4f00-b4c3-090410afd982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 a116f764-9196-479d-b126-d0848acfb3bf)");

unit.assert_eq16(16'h0D84, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #722 87151a6d-ed33-4756-802e-2903faad6847)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h0B01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #723 d971d65d-0aa9-4c8b-8122-6d5197c9113a)");
unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #723 f98a4713-a31c-4277-bcf9-62c3f8c7c7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 a337788f-c828-4bec-95fa-2680aa079102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 d4cc2c0f-6237-4768-a4fe-33e01c299ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 f49b6458-9019-4c80-86fb-4c87865cc8cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 e020af07-dfb6-42e0-bc0c-3d0bf049e01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 f072c7bf-aee9-4eae-8d63-3ba5b1e62d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 4a7b6af2-3f77-4834-ae01-b8bd6f57dbef)");

unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #723 4cee5fd3-46e4-4611-91eb-6b30db32499e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h09F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #724 e574259e-3aa4-40cb-a101-fbfa1db006d4)");
unit.assert_eq16(16'h0B4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #724 52aec228-7b6f-45bd-913a-5dd471d56bc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 212e48a9-6c77-499f-9259-c7312ac0be91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 9d8c0f5f-ce92-47eb-9945-575d7049ccd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 8c83dd74-ce54-4343-ad9e-34a4a4832b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 48b37f70-5a58-4f3f-a24e-166e2b1e34b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 4a8d72ac-3b02-45e7-95e7-a2ae986d5394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 1c50d11e-1062-4571-a79b-d4fe725e2282)");

unit.assert_eq16(16'h0B4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #724 3e0f7f9e-28f0-4b7f-a835-30ab508a7a25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0651;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0037;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h0651, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #725 c598a910-de4e-4c4c-8f6f-2b46b20a49e0)");
unit.assert_eq16(16'h0037, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #725 f1672e30-ae17-47e0-bf42-08787f734efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 e1cc0b8d-d9fb-4c99-a530-18c7f35be5a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 8bef8809-d286-4936-b41e-d7328efde522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 5b378a66-d6cb-48b4-aa90-76b5c9e71bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 55468685-e823-4c7e-96ed-771cd31dd15f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 cbbcb898-c536-4e76-9ece-96458b309d77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 6d6a837b-5b09-4c81-8f7e-0a4554d3c76f)");

unit.assert_eq16(16'h0037, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #725 ed35375f-d742-4485-94b0-97abfc9cc592)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h004B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #726 c2615dcb-05c5-47ae-9d75-ee8dc35444f5)");
unit.assert_eq16(16'h004B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #726 0c803c47-3a94-4485-96fd-992888c66199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 69e5d0af-0a98-4c82-8690-e4c2ccec7d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 b88e0d42-65e0-424f-88ee-8a15d947c9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 e8fbdf5a-e83c-4a91-8a93-d18ea777c10e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 7ee13a6d-e7da-490a-a17d-e5d1be049898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 cd150cb5-6055-4722-a2db-6b1407adb8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 d021f56a-1e75-456c-8eda-6fcd75aebeef)");

unit.assert_eq16(16'h004B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #726 bd3a7fcc-d7e7-4244-b66b-85a61b9f42bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h0D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #727 619616f6-2dbf-4885-9c4a-8f143fee3106)");
unit.assert_eq16(16'h0A91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #727 a9466540-2008-4f9b-ae37-cd2ecbb35afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 ca0781c7-35f4-4827-8ba9-7ea7e41f62a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 c58faf4c-262e-4bb6-aa48-f747eb1e372a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 a57bfa79-3d98-4089-a344-a0c8b2ef39d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 991c04b7-cdbf-4295-99c1-7ce269066a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 e12bd7d9-4b28-4635-92a5-4033bd4f2112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 986ac79a-76ed-44b9-b4a6-9460571feadd)");

unit.assert_eq16(16'h0A91, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #727 a2837f7f-1d19-4ebb-aec2-df729279822f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h0EF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #728 ec34015c-465c-4b5b-8ee6-c2eea7173bd1)");
unit.assert_eq16(16'h0DAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #728 d8202198-9298-4604-be15-91b1828ff3db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 0e8c9b21-c0ae-4a62-b2a4-631e986d37d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 c6d15d31-d814-467c-b173-71c0ed446c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 12c18c74-ed31-4b49-b901-ccf2c4847bf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 9281b5a2-d294-42d7-8e14-0a61974bfa3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 f7fa6885-3891-473e-a2d0-a32b6454355e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 9b252985-0803-43fb-8dc6-38c39a92be85)");

unit.assert_eq16(16'h0DAC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #728 24da8e27-844d-44b3-9435-3714f8119384)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0285;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #729 b3cd0a83-9a22-4fdd-ab23-e80672363992)");
unit.assert_eq16(16'h0E05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #729 2bc88f5c-a69f-403e-858b-362cd7aaf448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 422171dc-d08c-47b4-bc32-8a78e18b6536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 b23b7b7c-a712-4866-bbe1-f1e9e676bf99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 684d3840-8770-4206-9096-5721dbae5250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 633ad5b3-98de-4ea0-8b66-1df9717506d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 2669f425-1cc5-446f-b8a4-33b1aa1104f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 e4e16ed8-12fe-4769-8a2c-4027cd224399)");

unit.assert_eq16(16'h0E05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #729 ea8dd902-265b-42b3-bc05-53e88f310d72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h01B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #730 425ffe9c-b6dc-4e29-b368-36a34a10e60d)");
unit.assert_eq16(16'h03F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #730 0ac2cc78-d77e-4f95-82e9-e4e2acfe818c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 a687c911-307d-444b-bd76-60646b9d9dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 c0b17a25-1973-491f-a56e-5c5bd6e0baab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 68e25d75-fb7a-4b7e-a606-a346012e1337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 8aa4ebb6-cbf3-484d-ab57-00c8f25e65c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 99923ebc-c591-4e7c-b140-4b3ff131cb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 22860d72-5d23-4c22-98c4-a89a228f5a3e)");

unit.assert_eq16(16'h03F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #730 feb4921c-122d-47fd-b0cd-6e6678933133)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #731 c35e4d2e-2000-412c-8c81-f13d9661f11f)");
unit.assert_eq16(16'h0EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #731 3cefec33-8cb9-4471-9ff7-a549b6c92919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 dd50fd2b-4c65-4bb4-a4ab-c470c1adc80b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 33e7a821-da34-4d99-aed0-222632b12fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 f57dd720-7d83-4664-914f-60977e622dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 a0e467a1-5efe-4067-9eee-a4a297feac7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 9087c557-4d32-4e6d-ac82-e720ebafd268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 42f11f77-1f4a-4905-80b9-07c983376465)");

unit.assert_eq16(16'h0EE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #731 7252bf4f-67bf-4037-94f7-698689a5601b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0928;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'h0928, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #732 cdd4e2e8-198b-491e-a164-21ca0d7e4625)");
unit.assert_eq16(16'h0D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #732 410ee25d-438a-4cf8-a940-c3ce3716ec92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 a044cd62-da82-43fa-ac5a-bca8d3e96c84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 a762e529-23b9-4623-8392-89d89adbce37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 9f31429d-168c-4893-b699-9ec8b307738c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 baca2364-1580-43a6-bddc-935d6ea688fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 94315b1b-4ec8-412c-9d48-372e4ea94c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 f66a3501-2425-4335-a8b0-05816f26037d)");

unit.assert_eq16(16'h0D57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #732 13df92fc-ceaf-4163-b753-88f1a2bdff81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h050F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h02B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #733 96fb2be9-bd8d-43e0-8189-a8a0c7763ff7)");
unit.assert_eq16(16'h050F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #733 1765da50-d54d-4bee-922f-4c90dd43e6b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 627c3d15-67db-4241-b419-e7203ee6b7a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 b19f614f-2d8e-4eda-90a8-4d12fb50a3da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 27ad4b01-5c04-417b-b5e5-3c799014504d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 de3efa5b-861a-4516-a3df-b7923680580a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 c93e3f0a-48f9-4065-b75e-d88afe62434c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 91efe949-eef6-4e36-aa1b-7998c6878e5c)");

unit.assert_eq16(16'h050F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #733 7d41fae9-ad89-4fdc-b0f6-96dbd173330f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h046D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0131;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h046D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #734 c478018d-c2c1-4f14-9081-a1aaf2e10ce9)");
unit.assert_eq16(16'h0131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #734 c5789435-83b2-4120-acea-18cb040a7368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 db430d54-805d-410b-9061-3ca81b74f719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 7534a781-63af-4b7c-ad9c-2510157ec167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 9e95cd6c-389d-493a-80af-ae16f18c9b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 addfaa10-3cc6-4a99-8e9a-b90faa23c12e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 3cd5a9f0-b4ae-4d95-b11d-af05608ee544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 ae7e0cd2-06ae-4ef7-ab0f-ebb0ac247dab)");

unit.assert_eq16(16'h0131, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #734 b5c8ce29-a98b-43a3-9b03-71f16fee6858)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0252;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h070D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h0252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #735 c6aa4c80-4df0-4e84-bc53-28ae20bd8b02)");
unit.assert_eq16(16'h070D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #735 0340066f-b8c9-4f72-bdae-6186acf2ac1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 4aa6e7e4-5685-4858-982b-5b64986d2701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 a3b125fc-628a-4716-af5c-f1367b17ea0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 0a249fb2-8f6e-4c5f-9aa9-0fa2663654ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 12997bb0-540f-40a7-8f07-a55dea151c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 7652ec66-88df-46ee-b3e6-e73daf04e7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 ecb85756-f1ed-4e52-8c1a-9332d9fde7da)");

unit.assert_eq16(16'h070D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #735 34bff6c3-099b-4a9d-af51-73e3a57bf653)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h000B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h0826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #736 da783a40-a83b-475a-848b-12590879e90a)");
unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #736 7a7da75f-0ab9-41fa-86ca-43886a24b2e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 321af2e7-39c4-4e40-a91d-dd956fb23054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 30ae237b-3169-4057-be96-1d5e4e8091af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 32c71736-ed26-4f2a-93b5-5d336d8c53a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 45d083dd-5beb-4c77-99b5-c499ed53ef64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 871a9c1d-cc32-4f35-9f2f-a5e92cb94888)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 ba921cc0-ea7f-438e-bde6-f5a2d2d82640)");

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #736 b8e5f46b-9282-43dd-b21f-50d315d829fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ADB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h0ADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #737 54307d36-4dc9-478c-accc-a61d1ffccde3)");
unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #737 5125ca12-7c6e-4bbb-9227-d19d69d3b29e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 caa24c0c-8585-4967-9487-65bed409e0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 434eb82b-e0c1-46a3-a848-db41fe86a18f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 174ad2aa-5460-44ec-bfca-848396d9395f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 9c2e8fd3-51e2-4e59-8779-a58301401611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 8b412094-8153-4c9c-8a19-4b466e15efcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 5004377f-eaa0-4353-af7a-e4736363d1ff)");

unit.assert_eq16(16'h04CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #737 e9b8e823-1ed6-4890-a33b-a135d31297c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h071C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #738 c29000fc-504c-4a31-add9-da2141b4bd30)");
unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #738 d577d496-6b89-49f5-9e99-0e8bb72046b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 7336beae-d5a7-476e-a1da-2a1e91aec771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 c5b62177-d6bf-4908-aeb8-02ebe5ce3ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 015d0b04-6aa5-4658-b684-001ab09f6b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 56897f33-154d-4ba6-9536-aef43f50e874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 e190d8d9-e8b9-45b1-ae0f-b157a5bd0f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 1a4a40b8-991c-4726-bc0a-e62037c24e4c)");

unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #738 2dffa248-03dc-40de-8904-6cbacdcabd59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0585;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #739 ae361530-2b62-44cb-b74a-ea662ebcff3d)");
unit.assert_eq16(16'h0585, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #739 2da1d1c7-d4db-4827-b655-642f52b5b484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 c811a020-fa16-4253-ba2d-02f2c1b7b44c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 d23fc276-d4ef-40bf-9936-3a5d94f97dfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 6b4e65b4-93b5-43a4-9c15-04009951ab81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 7c37e0ef-37df-4c44-8714-fb8fe552f831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 dcd90fe4-a9e0-4867-beb3-4c1fc75eadd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 9aa25472-2497-4423-ae21-d3835e874af2)");

unit.assert_eq16(16'h0585, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #739 b464fab3-a4ac-4b7e-a8c2-4b67e4b2def1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0834;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h0834, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #740 1efd8cf8-fa97-4848-9db5-124cde75ddea)");
unit.assert_eq16(16'h00EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #740 75cc3413-5e32-4b49-bdd9-a627b850160b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 8ec6cc4c-22f2-4442-84c5-35a87db5d0c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 eaa52459-cc11-4551-b42c-d6149edcd66e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 efa13099-ffea-4c53-b160-83341c400a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 81c060fa-f063-4fea-b24e-6de22179d9c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 f6479d76-fbce-48f9-bad1-25613611c8f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 26ed80e7-d73a-4b47-82f9-f2e35083fece)");

unit.assert_eq16(16'h00EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #740 3ff8e7b0-a98a-4b1c-90fc-efad8dfcd6d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h0BED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #741 b7679e5a-82f4-46db-a190-3a0461e23a3b)");
unit.assert_eq16(16'h00A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #741 90c26127-668d-4840-ae3e-c2588813f90b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 89c008a7-4952-42c3-9e48-2c39b444ddf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 e1ac046d-9837-4c97-96a6-476df7586787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 29430b94-2ec9-4fbe-857d-20a6417d0702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 e4277417-8024-49be-a243-18970c8f4451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 c7368fec-2513-41ea-bcda-712e6bb874be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 f4ab9714-729f-4d3c-a780-b7013fa327b9)");

unit.assert_eq16(16'h00A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #741 5db1f3e7-6dc0-4aa0-b0c4-06d8afa87f42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0058;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h0058, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #742 4f8a9fe5-2b7f-4ecd-a056-3e5151450526)");
unit.assert_eq16(16'h0D1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #742 be03e2f1-ae44-4fca-8685-44aebe5bb70b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 95ee9bd1-f8e3-455b-af26-e5007a5cb7e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 311f7e45-3fc0-45b8-ad39-b75b1b585b9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 70b2c91a-86f0-495e-b782-d878837fdfec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 d84f09d2-d691-4c2d-b0dc-d7ba0464dd32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 963c4ec5-6ae7-4079-98f8-9729fc6ae113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 ae3ed0ac-e8c5-4af4-9837-a80f81d5ae8a)");

unit.assert_eq16(16'h0D1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #742 e1d8eb5a-9975-40f0-9341-32ba48eb3adc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0757;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h0FDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #743 d1fb37f8-600f-4695-aa96-afd04dcf7627)");
unit.assert_eq16(16'h0757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #743 29c50122-44c6-481c-aa0a-c01482426b52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 f0f6938a-9793-48c1-9cf6-cb2f43dddbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 21c9a19f-3f8a-472c-9c0a-5ffec7651334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 507fd52d-335f-4806-bf67-a67177c6747f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 0fddc7dd-1e6d-4965-bf93-4597712db5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 37c90ac2-7d3a-449b-9406-c3700a0e0605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 ca2b529c-6cd3-4f08-a56d-c65bf22e98fa)");

unit.assert_eq16(16'h0757, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #743 42d6e86f-cf1e-477f-886c-108796fb4f1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0660;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h08B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #744 ef2f0004-1951-4aa3-a67e-e0bef90921d7)");
unit.assert_eq16(16'h0660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #744 3b99ae5e-c966-48ac-a5f8-eb78f23fb9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 8e528579-40db-446b-a2d5-92faedde80d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 59fea1dc-c9e5-4e2e-a4df-8cb1091ddc34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 5ac99716-1bcf-4422-b022-3ad96ebfdd5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 293b660e-cf49-4620-a7d5-83bebc9c6b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 8e360f0c-7d88-4aef-8969-73c26960fef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 77aa6fc9-9bed-48c2-9e97-4a942f48b541)");

unit.assert_eq16(16'h0660, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #744 17bbd72f-8c1f-488a-b9da-7944b6287f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h0C54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #745 578bc551-6753-4ca9-aece-6ec66d6f3eab)");
unit.assert_eq16(16'h0FA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #745 66782e27-8efe-4b32-8447-ae4cef6b455c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 d3f004da-7bf0-4f70-a8fd-c3bf80b88b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 8c4edefe-0dc7-4740-a175-90e4ffed9685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 d6941fe6-0865-43ee-be78-f78e9211ec35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 1c847cc4-8f04-4188-81ba-5e0105b723ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 33988968-7881-458d-bb31-0bc8f6cfa20f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 64bba33a-816c-4a0c-88b6-35b215b4f61a)");

unit.assert_eq16(16'h0FA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #745 f1bcc048-e705-4705-ad5b-bbd69c187919)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #746 a18c959b-1b95-462b-a398-433946c5c95b)");
unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #746 3d49da52-fba5-49f2-b924-155388e7128b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 58f07b77-9cbc-432e-8a85-f26813c785e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 9420f3fe-5399-45bd-9cfe-d5601a4756d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 6f8981eb-7d63-451b-b190-59cd4119d8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 51e81478-be59-465e-b773-cf1d13472f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 c2569ae4-4fef-4811-a44f-ae2a8e0f1d74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 42f4adcc-6f82-421d-9e43-b3392f3b9ece)");

unit.assert_eq16(16'h0AA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #746 0029e995-1387-443e-b029-e2d076b50f3f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0495;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h0BC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #747 113e4465-d95a-46b0-aad2-8f7a6a88f2db)");
unit.assert_eq16(16'h0495, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #747 a6dfe0f7-306a-4301-a7ed-7a8839a1b8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 79405026-8198-4a1f-a4b2-b47907bf9905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 fa6be20e-1468-4b1e-b7de-6a446baf492e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 c0f03848-ce42-412d-a82d-9b6c2604ad5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 c72c7efe-ee71-476d-ac01-f9a0afb8aa53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 39b56d10-4e50-45c8-a8f9-ca0c5980e2c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 726acd68-bee4-4229-9156-c12bf5633df2)");

unit.assert_eq16(16'h0495, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #747 e2d322da-2b78-4193-a94c-1323e53d3cb1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0107;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h0107, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #748 e85cdb94-57aa-4f0c-a953-9a011610e686)");
unit.assert_eq16(16'h00D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #748 83582e9c-f0fa-434d-9b39-b3a4deaa76f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 9124f2dd-0f64-4ce9-8ccf-7261a760ccfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 c4912842-3661-4209-853e-500924e35ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 cf112db0-dab5-4dd1-a13d-f937c7f34985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 abf07eb8-7111-455e-9876-02de815e7b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 efe6186a-d533-4cd4-a39e-4a3b7e1f8b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 f31107e2-9f65-41ef-94bb-8de1c2c0f6e0)");

unit.assert_eq16(16'h00D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #748 1451a29b-b744-4aa0-a79b-b0aece0fb18b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0774;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #749 fdb04d8b-c533-4999-8cfb-b8a733fd16be)");
unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #749 b1f1398c-b199-46ff-bb22-8f1f96157d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 06715eda-3fc5-4407-babd-bc6e8a2dfb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 bffe2137-2b90-4198-8655-e1ff9e436163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 813819fb-3996-4f87-a1cc-1cacb8165981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 cb55639f-faab-4f69-8d43-87262ed20707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 de2acc56-a03c-4fd3-b593-75f4bf4e6e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 ce8e12aa-1c4d-4186-bbc4-dfc1883d2c46)");

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #749 14565641-6150-43b4-9d72-564b6c8e05d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h0F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #750 f1d38806-d4fc-4c1d-85d7-5990a8b506f1)");
unit.assert_eq16(16'h01B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #750 cf09eebd-0e4a-45f8-bcf4-6dc5942f3976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 bed1baba-0c6a-431c-aabe-46825857a81b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 30870f90-66b8-4009-b001-7bd0502bc982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 5c7a4c67-14c6-4f9a-be48-e9c47299ce8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 a2941590-8803-4f31-9edb-18fbc5a4800f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 ee7662fd-9327-43c7-b5d4-c0eea090f00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 bd93ae3e-f3c1-4576-bf13-82ca17f8b463)");

unit.assert_eq16(16'h01B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #750 620f66bd-d0ee-4d07-b024-2efc3abc0e4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h0C19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #751 2f5a0535-2681-4271-90e8-f825a1d302b8)");
unit.assert_eq16(16'h06A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #751 02d29195-ae87-42fe-afb8-abfb81884960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 c4e782fd-6222-4b62-b5f4-05f01aaa92af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 c0eaeac2-f673-419e-b8c6-0e05d17c3f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 ab5a89c4-30ab-4e01-b092-6f23072b4cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 86c3b1e0-7617-4b15-b10c-1bfc4890d2fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 809b3e5d-4937-433b-85af-dcf9141c252b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 a5e7074b-7676-4341-9a35-5e53ad8e3c79)");

unit.assert_eq16(16'h06A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #751 ad8a2308-068a-4e78-acef-a1d2787f14aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #752 780ce6c9-fc59-4e9b-8004-116ef87f0b84)");
unit.assert_eq16(16'h0E14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #752 a7310c07-c761-438d-9d76-c33c07ba0ee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 4ef71c95-cbff-4139-9f04-c5f5b005360e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 0ef64098-aada-4ebb-8ad8-c5468616e6ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 10ef2a13-3f3e-482e-bf99-9d9ddbad3eb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 e8642c42-da61-4e7a-8910-abf3146f694b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 d2eadb49-0ad5-4e26-a44c-d34ce59b4df3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 3108dbe5-eff3-4e19-ab73-cfab6cc5e3be)");

unit.assert_eq16(16'h0E14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #752 c7820ec4-5ee7-40aa-bb7f-6fea31ad5962)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h0B4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #753 b53fb2ba-2c1b-426b-946b-259df08f51ce)");
unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #753 5fc573d5-7269-495c-96c9-337c535ef16c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 1014c615-9212-4b5d-86f4-1c5d16772b9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 d6d61db9-c8df-4c05-b4bc-4afc5a4e4f00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 aef8b4c2-2c0f-4c9f-aac3-9cb7607d98fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 f6674342-423d-49c9-b9bd-6dd2481a2774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 36c5ef71-f079-4a89-b49b-dafa8b9ca8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 e5da449b-6487-46d6-bdfb-8eae5fa525e4)");

unit.assert_eq16(16'h05A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #753 3b94eb3d-caee-422b-8561-387dfa953345)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0256;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h0256, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #754 76417c93-0293-4d15-80cd-65e9a0f81ce3)");
unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #754 5b6018c1-3f30-4bd9-8fd6-26d9218cb803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 2c0d7d4d-62e6-43c4-8db9-86103066e4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 c717ee0c-7c23-47c2-a0d3-c1d788b3e6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 c5ed7370-9499-4cda-89bd-c12ac96eb279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 b6d9ae7b-fbe6-4901-9532-9f4d7f1c578a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 18924930-64e4-4bfd-b9c7-0a8b70b88426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 4cd5a880-9b3d-4089-b821-d3651bc18dce)");

unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #754 280218ba-d412-4708-ba3f-ad36125386db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h0FAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #755 2f956b70-f27a-41dc-890b-637e1581cdce)");
unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #755 2a558e6d-23ff-40af-a16f-d2c4b28820b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 b8c3a00e-7c85-465b-9aa4-1fd2e2a7e142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 52d4dd76-a1ca-4fa6-b887-3a8d6f932836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 b3da74e2-f278-4728-84d9-a7b539bb6aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 2662e44e-e2f0-44ee-8611-fc34178c9fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 c6551ded-88de-4f14-b4d5-cddc720385e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 05af025a-a03b-4897-863f-32aa777fab64)");

unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #755 2dff3aeb-7885-459f-b13d-5ee978c6014c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #756 efd7f9a1-3e88-40af-ab39-0a4f5a1b942c)");
unit.assert_eq16(16'h09AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #756 dbedcaa4-0cb1-4901-8ff5-aae158353ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 dcc8de00-620a-4cac-a42d-01092061dacf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 e0e5b62e-0a06-437f-a5f5-4ca48e4dee61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 bc1b7578-585d-4762-a4ed-d2b3c39d9e75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 5661e162-6fd1-4221-8616-d3b00fa48ad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 c4965517-e8b7-4102-a105-80759193c3da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 0b6a4bc4-d917-4f65-80fe-2c8a86e9ecdd)");

unit.assert_eq16(16'h09AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #756 72251a55-5d01-4f4b-a2a0-1658830e5d96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0703;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h0E3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #757 7cf66bf4-d6dc-4094-807b-9e2272cf05ed)");
unit.assert_eq16(16'h0703, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #757 4a573e4c-cf94-4fb3-a2dd-e17865aec10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 21199af7-c769-4afe-847e-48d24900795c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 145b6ecd-dfaa-4ba3-a05c-59774405840a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 9944d36c-faca-4ece-8136-1892f03d82aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 f28687f1-beb0-42ae-a9ee-48dc5e523346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 36bfe1cb-48ad-46d4-8b8d-ebc380761b6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 6eeb1020-f806-4ae8-b3ce-4099eb68b9b9)");

unit.assert_eq16(16'h0703, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #757 237edf3d-9404-4f2e-ac32-b7a72844e475)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h0BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #758 8316486b-a938-4f6e-aa96-e05a2ea58ae7)");
unit.assert_eq16(16'h0BBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #758 561e3aea-3d1b-44e0-959a-e404516466b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 226ebd09-1671-4e51-9cab-3f76ca76ffba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 5b0836f7-1997-462c-9d57-a1851647da75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 cca147f5-d9f1-446f-b1f5-1ef775a26439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 f03caf4d-9ccc-4a65-b21f-2a2ace661681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 7828565d-bb3a-4cd9-8fb8-8d3178e56948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 7a833730-1c36-4f36-8da5-6a31e3ddb016)");

unit.assert_eq16(16'h0BBA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #758 8000abf6-35d1-4489-840f-1dcdbfb5c07b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0817;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #759 8775676d-2682-45b3-b5f8-580b842edd66)");
unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #759 6074912b-6bd6-44fa-aedc-ad770296692d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 3e4d16a0-9a0b-45f3-83f2-2362a541b541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 b8ae9c17-f377-4768-afcd-f527ef0cc69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 b4d300d4-191e-4d7e-a685-3c99f575c5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 51194afe-fd62-4f60-83f8-c707926751fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 e8b0620d-6088-4861-9af1-326ecb32520c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 79e20ac4-d469-49d5-a667-c8d94163b431)");

unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #759 9b4ca8ae-a45e-49e4-9393-b5edb2cada50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0961;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'h09EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #760 443ae8d6-07e8-4f3c-af9f-b3348d649f29)");
unit.assert_eq16(16'h0961, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #760 fc70b3de-1ff4-4f7f-b3c4-c4fc71e42d65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 2a991b69-0609-45b2-b8c4-88b6db95f92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 8736641d-12a2-486a-8d9c-73e2df485c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 c523992b-a2ec-4f46-8851-7657282663c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 971c617a-c669-4669-afce-f7329293dde0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 6ba2c250-76f6-47f9-a204-c3bb429a1c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 40fe223b-8d9b-449c-8d9e-a6c83dcbe734)");

unit.assert_eq16(16'h0961, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #760 a51194dd-b12b-4dae-9edb-d554c0da562b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h01C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #761 515a6c60-98fd-4de9-8ccd-4c620da42c27)");
unit.assert_eq16(16'h03D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #761 7d57a027-ae63-4f79-82ba-46d6f47b70a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 039117a0-9560-4aee-a1d6-79477fc31df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 88084159-ad9d-4c66-8fbf-6ca839286811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 95d52d43-60eb-4549-8377-bcf8dc762667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 c628b6e9-7d98-4f8b-afae-d50a4c60bb68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 df1b3ec0-6b0e-4ef7-9484-181fec5ebd12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 b6343db5-043b-4624-b529-e030a235da42)");

unit.assert_eq16(16'h03D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #761 141c1495-e2c4-4850-a3f4-81a413178648)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0275;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h05AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #762 443e2829-0ab7-455b-b800-a815e7bfd4f0)");
unit.assert_eq16(16'h0275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #762 bc46d38b-a5c4-4de1-bf01-14a8404b9523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 406d498f-bb32-4747-aeb1-1e33817df0be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 3dc52885-4746-4bd0-a523-dcf6a38609b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 fb7ba6c7-2969-4bf3-9c0b-81e431ab32f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 ee8e1bd2-fe7a-48e2-b6f4-cfeedfa0c3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 b5684a80-3719-469f-ade0-23730c341151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 5ee46700-121c-4aba-a4cf-3f5ff80a1e8c)");

unit.assert_eq16(16'h0275, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #762 5e6828bd-2329-4a6c-9327-35171343dd9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0376;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0692;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h0376, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #763 2414cca4-9e7b-418e-9244-6f7c026c376b)");
unit.assert_eq16(16'h0692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #763 f57452ff-7584-412c-91c6-03cd46e5e091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 f8494f33-18fd-4219-85af-834972bd48d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 27ebfa54-3311-44d0-975a-b333df2dad76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 b0291785-47e7-4199-9d0c-78ea39d649d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 a1f588f6-ff42-4135-b458-871ab34e8b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 f5c84c16-62f4-428e-aa3a-483d5a2d26d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 cbd838d5-72d6-4ad0-917d-d4d79074d9e1)");

unit.assert_eq16(16'h0692, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #763 6a6e3cce-3cb6-4749-a7fc-f24b702ccc7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0565;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h0FC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #764 d3a2ca1e-9a08-40d6-97dc-a8c9212cd8b3)");
unit.assert_eq16(16'h0565, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #764 11fb8c87-1574-4f13-941e-df65bf406be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 c66c3919-827a-49be-86cf-2eac3f80d488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 6d69c3b7-88d4-4cd5-b7cb-2f81982cd9a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 85e9f5c8-25a9-4b5e-b245-c4547ef39319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 a6918300-7013-4bf2-8c0c-cbee93262e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 127892c6-dc4b-4577-9a9e-9d10313c8029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 f5aac69d-7e54-4de7-9f89-17978aa90745)");

unit.assert_eq16(16'h0565, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #764 a0cd5b21-5418-455c-9982-86c645a61fe3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h030A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h057E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h030A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #765 cb489f64-6c15-4e12-862a-5e7e59f05e30)");
unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #765 85526ec4-7922-4934-bbcd-aa7b1b5af1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 ba4c4a0a-8582-4f46-bc55-c18d29c97544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 91e9aad1-1965-4fbe-97b3-9c5166f5f6e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 b8921a9a-8c67-4831-b6b4-749201616209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 4287609b-3486-4e3d-84d5-7c601e342005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 ed009272-cb1c-471d-b1f7-9255c72478a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 765c45a7-15e7-40d7-ba5b-b8afb89cf8d9)");

unit.assert_eq16(16'h057E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #765 a5a0c392-d965-4819-b33e-e0c29b0a46f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0473;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #766 b658335f-6ec9-4dca-b19f-fb687509b587)");
unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #766 17137c82-e608-4361-93a0-ebf73c0c3c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 c8f3cd37-10b6-440a-b95e-34f1e6eeec0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 88dc5926-6546-449e-b11a-91216a81b619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 5cc00de3-0707-4b72-92db-c0519df41ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 f91d8bc9-53d2-4e09-bdf5-155297448d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 f1e89527-867c-4be6-b480-7eeffc579849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 7a3c0f0a-2a9c-43a8-a260-2556fd99aea3)");

unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #766 7a0975ee-1b7e-4b3f-be20-0d7f21e1ec67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h0A3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #767 c9bac065-8e2a-4378-a176-9d087935adfe)");
unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #767 13e7d436-fa75-41ec-8dbd-059dbb6cb49e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 a4b39ec7-74ea-47c0-b7e6-82cf2eed90ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 f9cc216f-9e7a-4fae-aac0-3677639b60ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 e80458ec-da51-4788-a483-c1a3e0bc95e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 64941f45-36a2-4e9c-a52e-8360ffee6c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 f3292e15-773c-49ad-9647-6e6198397ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 b04430d5-d230-40f7-9065-4923a860da92)");

unit.assert_eq16(16'h0EA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #767 9ee9873b-7d87-4f67-af24-dfe6196ee592)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0600;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0983;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h0D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #768 33f65b8c-de2b-4ba5-8a49-8a23c38e35dd)");
unit.assert_eq16(16'h0983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #768 d2df03a4-36f8-4d15-88a7-44848478b92a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 6909ba18-57a1-4091-80a4-4480a84b94eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 ed3c3df3-91b5-4b2e-8594-d2a6dbc1ce63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 620f8eb2-939e-4752-aaea-2ea174aff7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 2ccf010e-ddd9-44f1-af2d-508335570283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 8388aff3-364f-4bdc-82ee-57381400fc26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 f025b640-f015-4871-976d-ce2423ec8e66)");

unit.assert_eq16(16'h0983, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #768 6919b620-4970-4b49-a989-f3899906fed2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0602;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h0C3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #769 953614c0-d906-4bba-ac15-9407a5c920aa)");
unit.assert_eq16(16'h0E76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #769 d69b775a-aa53-47c5-99c4-b12c3c211cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 ec924a61-bd89-45d8-93cd-c919c531002f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 17c4cef7-cd64-4c77-b788-be895547d1aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 9261b171-b99f-4f00-b65e-796db3036c11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 f207da9d-03b8-4277-88de-ba8e96234ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 5542a28f-1173-4ee6-b772-332b6130068c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 e433808c-167a-4c06-932b-363c93fcee73)");

unit.assert_eq16(16'h0E76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #769 9cc586b2-28f1-4d17-a433-950a6ea8bbfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0604;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h0BF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #770 46b12557-daf9-43e9-a066-a437d96816a1)");
unit.assert_eq16(16'h0D1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #770 bf50a5ef-2239-4ed4-8a20-27a71167c850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 ee42eeed-7a97-40c8-b377-f1291bd34e98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 98925b10-54e5-4f35-8f21-2f31f6adcc0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 4e9e8b25-9838-4dfd-a950-55fc11c00e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 7c30dab8-6e40-4845-b56a-c48a3c6452fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 c16204e9-9d5d-4195-9693-1d371406f629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 336726f8-9fdc-487d-80ba-4ab6be963c22)");

unit.assert_eq16(16'h0D1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #770 c6688c4e-4d23-465f-adba-f6a48db006e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0606;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h0D54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #771 856ec75d-f66a-4ea1-9d18-0159710e3aeb)");
unit.assert_eq16(16'h06B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #771 6fbc988d-1bc2-48b3-b329-793abd9abbd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 b8b3f721-8b31-4122-a9e6-3925a9a8361f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 5a7c9450-fdab-41a6-a38b-1544b4dad84c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 3749bc97-51b4-479b-b8ba-7629d3316ea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 115ef948-23a7-4db4-8329-4092370f3b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 9d4f2164-427c-44f2-8269-c21155290291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 a852ebc3-a14c-4ca3-9c3c-395841352df4)");

unit.assert_eq16(16'h06B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #771 048646d3-3b43-4264-a1b0-22a1c11072c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0608;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0125;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h0125, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #772 a963cc04-65e8-4487-8b62-631075947683)");
unit.assert_eq16(16'h0F09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #772 513174ee-afd2-4f43-a0d7-5aaabd80ad76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 9cd7d01f-a42e-4165-bb0b-e714770a4c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 96db9a7c-756e-4953-8a79-94427fdde0ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 a0ffe6c8-ce07-46a5-b9aa-4e4debe14f8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 38742165-f4b8-4c15-ae14-f77e8bd090a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 73c59e08-ce32-46bf-9b2f-423eb06310ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 c7d28a43-5fb5-43fb-b8a1-46f950107896)");

unit.assert_eq16(16'h0F09, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #772 7a34d171-3ab7-407f-bcb3-ad04742326ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0716;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h06C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #773 bb074cd7-75f3-47a1-a615-909174c1a5f7)");
unit.assert_eq16(16'h0716, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #773 d9060cc9-e4fe-40f8-a87a-384ef7d88f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 73b92656-d382-4207-8c16-351c95f8ea48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 07bd4fdb-a431-4e03-8629-64fe5d3543bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 d39c92fa-3b88-4ac9-b3e3-e43e1fe52b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 a8f6054a-d4d5-420b-8d54-59faf83c53b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 2fda6bdc-8436-44f6-b17b-01066d343102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 789d50b2-f444-4034-a7ea-d7b3b7b12a1d)");

unit.assert_eq16(16'h0716, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #773 ecb13e95-3a54-4e0c-8e40-1c942eedcc5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0552;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h0552, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #774 3ce98c78-7ba5-4ac1-841c-3645a78188e6)");
unit.assert_eq16(16'h01F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #774 fe13398d-ab97-4fd9-91e1-860a9478a9d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 19d91e04-c516-43d5-8952-7d8c79fe9ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 45c604ad-f274-4385-a650-05a535ae46e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 7bbf800d-8dbe-449f-b83a-ba9c130ccf4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 bb7142c9-8c72-4488-afca-deb2b8550a93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 6d6aa491-5ec3-4fd2-b52a-4a9a6dd2f7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 48723c3e-720a-4e65-8700-7c9ab5221141)");

unit.assert_eq16(16'h01F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #774 4405c36f-4bbc-4d96-87ee-245426f6733a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #775 c4c807db-04a0-4ce6-a404-82eeed81a6d1)");
unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #775 4e5838ef-3c7e-41eb-a315-f500292e040d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 1c25a97b-7f2f-4b3b-9437-17f70dc963e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 ab9efe27-6aaf-4c6e-83e1-fed30b3438f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 1bff9884-bc9e-409b-ac12-b478c7d01d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 e963d0f1-8eb8-46a2-8970-4ef99c6c48f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 a9008670-2db8-48db-881e-c88ac2c2d554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 619b9bea-58a7-4759-ae64-5d91c7a16ac6)");

unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #775 25d9ec5f-6661-451d-9bce-7289d0e20c89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0610;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h0FB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #776 4cb381bf-74e2-4c53-ab73-8fdc995f46dd)");
unit.assert_eq16(16'h04B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #776 a99ecebf-340f-4e67-9fe0-fac107266f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 866da0c8-2842-4354-a40a-1e64dc305f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 445c4025-11df-4951-92ad-14cfa3df365a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 cd53e292-51f4-4291-8728-ac0851ea94dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 3f45350e-44e8-482a-9e6d-c22306d7fce0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 25e4769c-3cbc-41f5-a296-bf73bb0175c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 94671b7f-c4a7-43fd-aef6-1c6c5806ba71)");

unit.assert_eq16(16'h04B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #776 c4b95c0b-20c9-4d22-9785-c45ae314260e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0612;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h0B6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #777 379d5098-45b9-47e3-b720-c86022ef1809)");
unit.assert_eq16(16'h0B2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #777 fa0179dd-4fff-4c87-bcce-2176311d68fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 91635a0b-8ebf-4520-8b91-2253b1fe2bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 79c7590c-1938-45a3-95a6-84a5f60b1e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 757015c9-1373-430d-8086-171978da3b49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 f5880705-1393-49ed-a2aa-fd510b9d33f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 30e2a086-110c-4e2c-838d-5afc5ad9fe7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 a397b4f1-383e-4622-8f26-3ad236fc8784)");

unit.assert_eq16(16'h0B2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #777 dfb8fdb8-ecf4-4205-9e1d-2c111f87e8f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0614;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #778 c76f2807-6aa8-4dac-a677-f1d41e0eba8e)");
unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #778 3e719c9a-e0f1-4d8b-924c-89cd9070903d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 0ac539a2-d710-4097-8ef5-2ecd6ffb7558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 79746fc2-8306-4da8-8c44-77829bf18560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 d113d65e-5cf7-4d13-85f8-c9bbe738f1cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 151d0d8f-0d3e-4e80-811b-c7e7d1d65f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 f98db731-339b-45cd-aba9-f11f5dbb39f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 89b40f19-543f-44f6-8e0b-4d791038cc96)");

unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #778 4e782406-ba3c-458f-b33e-028e07b05df4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0616;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h09D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #779 840fe035-0207-42c4-810c-c63ec565f3d9)");
unit.assert_eq16(16'h0F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #779 4be73929-0fd7-4309-bbae-36ca523b6c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 bf9f55ed-46d9-4063-af5f-4dfd49a9c804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 5ba45ab3-c000-4ce1-bd61-aabadd04deb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 9223042c-adc9-4762-863b-866d44d5cf08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 14fee2d1-ffeb-48dd-b281-d13ec4ffedd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 1e5ca78d-88ee-4ca2-b44e-8e92291937f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 d3a671cb-1d83-4517-ba73-157ac5cc810e)");

unit.assert_eq16(16'h0F64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #779 f6b0f328-3cf5-41e0-aa6b-d8fb74c29a83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0618;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h0FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #780 1a38b87b-4d5a-4dd8-ad52-d843907feb07)");
unit.assert_eq16(16'h07DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #780 4c0d231c-33f6-440a-9e2c-dee08a0b31cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 d269e910-44d8-4123-8169-c6edbd03657f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 22c01847-273d-41ae-a6c4-fee61685632d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 5ec6325f-f5e5-4711-b97b-a3383134b25b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 ec91a40d-03a4-45ca-a61c-0fa9591545b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 b4fc3e63-66a6-40ef-a35b-70963e1a8823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 ea973bdc-386b-4d62-bea2-e7c95f26a2db)");

unit.assert_eq16(16'h07DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #780 d4b2d6d8-4572-4a01-8cde-b8d70a70b9e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0655;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h0BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #781 b617d6be-5f8c-4550-8bae-baade4d560d2)");
unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #781 b1dee20c-c7ae-4347-b7cc-240bfe5096c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 4de2dd95-c1ab-427c-94ff-bda55bad3764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 ecdc9870-5b09-42c0-a632-966e2a15621a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 2fb246e8-e3ba-4910-8d63-21259f0073f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 6a6b6733-b695-402c-8ef0-f6f2aa1e490f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 812158f0-adab-4248-88f7-3e90451113fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 ee6c4024-8aeb-4be8-8d23-026560717a2d)");

unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #781 aeefe91e-37c0-4ece-96c2-85d1781e5b24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #782 1d3a4d8e-bae8-4064-b784-396ed8734cc1)");
unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #782 6882f5a9-f8fe-44cc-885f-3aa8d91beac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 4d873d20-8ee7-4fba-800d-3dc5cacbc3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 7b90a376-7c6a-4acb-ac71-f9301ab0da5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 e6e06723-0b85-49c0-92c9-09d4040dd56b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 fd232a28-861f-4438-9f4e-93bdbe98ad1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 84e004c2-fbad-46fb-ac96-d74a0a66e0fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 5a4208c2-5b62-4db2-9bb9-ca5813bc8359)");

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #782 9e76f461-0dc9-4f53-8f07-b408413ce993)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0725;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h0725, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #783 4da35f7a-ccdf-46e8-a0f5-a8e7aa81aff2)");
unit.assert_eq16(16'h0B26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #783 09e74ae4-4f41-417e-a169-b94b66ab6c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 9aa27045-350d-45a1-926d-34e5372b7646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 bc05cc43-f395-46d8-beae-3002c52cb704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 b367f461-35b7-48a0-bddd-bb71f85eb47b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 97e1e05f-7575-491b-b69e-ff87ca40bfd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 102adcb0-7d2d-4ad7-9a86-d188e51d3f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 c26ca26f-c1a9-4259-9ff1-82bff6f0947e)");

unit.assert_eq16(16'h0B26, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #783 813c5e88-f17d-4602-b987-655f3e132ab3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0620;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h0F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #784 87a41702-ec05-4400-b0b4-c7301ab59a07)");
unit.assert_eq16(16'h0D20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #784 46a82ce1-7935-4ab2-ba48-cf1eb695909c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 aee3a617-abc9-4886-a2e6-3a413d2e6daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 abafaeac-a102-4248-b359-816b001077ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 422a9342-1bac-4d72-8e47-766f81d14f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 1516191c-49ca-4f04-8a45-4d629f21557e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 7efa0c3f-fe21-45b9-8696-c95c4a109c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 80185100-fff6-45b0-ab86-d04b8ba17bfb)");

unit.assert_eq16(16'h0D20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #784 f1986c5d-8158-495b-92db-08a54fb63d42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0622;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0612;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h0D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #785 dddb1f7d-a7e1-419a-94fe-e410e1da6827)");
unit.assert_eq16(16'h0612, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #785 072478a6-341b-4da9-8417-33341bf6e61c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 fa9ae517-2220-4872-a20b-729541cbdf3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 f3b3f629-2657-4b10-87f8-9ecf10720e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 0ee49a0f-d324-4664-813f-0744d701d061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 d4d8f6c3-88c8-4b6b-b28e-cac9b210f57b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 425ae66e-0178-4cfc-85b1-aafbd2d35598)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 4b9c65d8-b98c-4896-b366-0f810d2d3c4e)");

unit.assert_eq16(16'h0612, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #785 2c30c0e9-9b53-41be-b620-7491e7c5cc6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0624;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h0D6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #786 32a0ac9e-f837-422f-a46c-2e909771d91a)");
unit.assert_eq16(16'h0D93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #786 3d2448f1-a042-47b1-bede-64cc1dbc47b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 b7f413fc-ee4c-46ec-8e5e-86e4d07a455d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 72f4e938-add4-4dc4-8afb-f53510cc2eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 b6e96f27-e107-4d54-a64c-77182b736139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 affbf380-ef55-4299-81ff-d98d5ed89e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 195d5aab-eddb-4019-9ce4-72e66e6d2591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 faec3f18-90ef-42fe-8c02-06915a1c2302)");

unit.assert_eq16(16'h0D93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #786 f05c628d-59f0-48b4-a706-b06b37b72d05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0626;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h004C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #787 d218ecc0-c2a5-4a35-9dc6-aea030e255d6)");
unit.assert_eq16(16'h08BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #787 ee53ae4a-b5a2-4859-add3-a2006d1f75d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 36afadb1-b2bb-456b-833e-49020d44ebb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 3b0899be-a5e4-4bab-8985-d49e292fcd9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 50ccb03d-c18d-4dc8-a47c-2535f5c74c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 90d33c75-39c2-4164-aa5e-ce786ea76b81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 0bc99d1b-8d07-4541-951c-b13027f289a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 72fad671-2427-4ad6-8b17-ca1600cb8d8d)");

unit.assert_eq16(16'h08BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #787 6c057919-9a93-4b9d-a711-504508dbe311)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0628;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0817;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #788 6c02f2fa-0b83-4787-b837-dc5f09726caf)");
unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #788 07ea3e84-57b0-4d56-9757-4d0a72ba8e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 f72d048e-03e5-4555-9f41-335748683d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 b6a84b86-ee0c-414d-9abb-a27c37abafa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 fd18bd7b-ed16-47a5-b4fe-0785fa6e19ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 a7613351-184a-4150-a08f-0d4d5453a8dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 7710c849-bb86-4eb0-a168-31fd0eef18f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 159a29eb-8987-4ce2-a218-ccc2962e09db)");

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #788 ebc7fd74-830b-40d8-9bd2-6d55fa8ffc82)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0145;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h0145, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #789 7b160384-4e3e-4028-9145-3166d08c8a33)");
unit.assert_eq16(16'h0FFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #789 36d76603-48b0-4808-b83e-182cfd914e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 770b6b20-87cd-4db8-8334-d12a6cbe9081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 5ef896d4-6000-4740-8f0b-b2fa07c3d231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 553711b6-e485-4e46-a78a-113148c300dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 382d5224-5da9-42b1-a0a4-672a64d8a585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 8b236a73-a342-44de-8cc5-87c096006845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 4865ad46-331f-43ab-ac73-c7acde58c989)");

unit.assert_eq16(16'h0FFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #789 f98e826d-ac78-43e0-80a2-97bda2b6ed32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h0F6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #790 b4ee49d1-a1aa-4dbf-b925-818db1b6ff25)");
unit.assert_eq16(16'h0662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #790 bb0ab0be-4fdd-4ef5-861e-65004aa17d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 a3e9efc0-8e6a-405c-8d69-dfc285a9b2a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 2e99916e-59f2-4e03-b0ba-fd5e8dfa9e44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 1a999229-1787-40df-b3d6-353239f46459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 2931a9f2-45f7-4c21-90a8-0a6c2bed999d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 80fcce8d-57e0-4763-bf01-ccb7fb13658c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 815b027c-d165-4d1c-8b56-76356fbf3b3f)");

unit.assert_eq16(16'h0662, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #790 836e0022-1937-4749-b1e7-000ca42cf3eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h02A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #791 24e94663-1b50-47e2-a4ec-48fa27fde62b)");
unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #791 42c8c7f4-6765-4b1e-9524-551ad692321c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 2fe6ef8d-c8c9-4b39-b723-7ff7d3d85785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 1d9eb6d7-7833-4e41-bc8c-05744c436776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 0a52ffd1-2e0f-4f3c-958b-e8cc1c59d590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 994f3d08-5091-4947-b5ae-546b669b16f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 3cdc88bb-1233-4e63-9453-51b6a07d55f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 3952eb4c-77a0-4693-8c11-7714a989b5c3)");

unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #791 f360ba22-cd2e-4294-b4cb-a990857626fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0630;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0975;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h04B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #792 8bec740b-c4c9-4c2e-86a7-f78a27860cec)");
unit.assert_eq16(16'h0975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #792 8874e11e-e9bc-4692-9985-c504bf568d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 87960fb3-44b0-4e12-ade5-05b0d01462c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 49eb4d35-0b63-4458-8384-0909cf03e6c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 3b5f19a5-cb4d-497c-8284-70e62cbf4f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 5ccbc109-a6a5-4000-9695-cf3284459484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 32effbca-ab5b-469c-af8e-abd5687cb499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 d1cb1bf1-5017-4b27-b667-75a1b3e48c54)");

unit.assert_eq16(16'h0975, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #792 a8a227ac-c5d3-4654-a29b-8e34bb229a67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0632;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h0A84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #793 0bf3b999-26be-4d26-9619-a38e9e3310ed)");
unit.assert_eq16(16'h03C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #793 5048d55a-5573-4fb1-8c36-99e385876af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 3e14eade-59d8-4159-989d-4fd4706a163a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 4bc50174-ad05-4134-9a79-2416678aa9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 2e1d410d-f27b-4022-87cc-a3af3cb93f4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 4cf68fe8-3a6a-4518-9122-5ac6d10b675f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 68f123bf-c5a1-44e9-b656-0ae8f8ab6778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 01a7c5ed-7bd8-4635-b8b0-40ea6929fac3)");

unit.assert_eq16(16'h03C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #793 c8992bae-8c4c-49bb-a211-6e199def7794)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0634;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0933;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h0933, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #794 e188d691-d460-47b3-a058-865758ba9de1)");
unit.assert_eq16(16'h06AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #794 3291da87-d30f-44d6-afd5-7fb335850681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 7c41cdda-19c7-45f5-be49-789d623d6b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 aa4ecadc-6c87-4cdd-9246-e3661409334e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 cebee0c4-c417-413c-95dd-44124be60ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 6e7b4817-ee19-4006-a05f-3d62c8bda7e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 f9eafb20-c0ec-4763-ba15-e5d77c841f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 55394b41-7605-445f-9faf-fd476331cd00)");

unit.assert_eq16(16'h06AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #794 e95f736b-80f8-4ab9-97af-f93e829af3b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0636;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h08CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #795 97713b97-4a3e-41c4-ab5b-a2de6303880c)");
unit.assert_eq16(16'h0B22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #795 34f0d1f5-6a96-400d-8c1c-fe80ac485110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 3e9039b0-f9c9-44bc-b9f0-7564f81416c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 e1fb5f01-840e-4a38-a521-744e7f308704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 9ba69752-ea95-426d-8506-5817ef22b92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 36417298-6b5a-46af-97bd-a2ea8a62cfad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 4f355909-2e1b-4afb-b0b8-a0e07498e9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 c9950cea-1a5d-4b1a-8d9b-5d993a66014f)");

unit.assert_eq16(16'h0B22, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #795 f9b09e55-dff7-43ca-b4c3-668610e7664b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0638;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h0AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #796 c424fa8b-5d3b-4c28-b72f-505d3dfb9ced)");
unit.assert_eq16(16'h0C73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #796 91c4e509-a48b-4263-86ff-6097d059a7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 793ae1cc-02d3-4270-b452-ab51b34dfed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 ebc53234-06cc-4b88-b6b0-cc4f86036a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 bc82faaa-69bd-4fdb-b2b2-b832f77b7b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 489477ab-b213-4f32-a1f6-18294b8b3b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 0b96531c-da6c-47e8-b648-b5d0cd63d9d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 79952348-2a28-4069-b6c9-95441cf3ee6a)");

unit.assert_eq16(16'h0C73, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #796 e13dc271-12d9-44ff-a7c1-8dfd90fd4189)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0905;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h0905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #797 88c551b9-f438-4ac3-8134-0fae88a1482e)");
unit.assert_eq16(16'h0B4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #797 248889d3-a04b-4ef1-aeed-b95cb5421a4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 c6a4a3ac-1b61-4ecb-a3d8-dca002eaa605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 11fd9e6b-31aa-4b3f-b7c5-f613fe1dca31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 409acfac-9c07-4bf4-8ef7-3f9aa5edbb20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 6624ae15-6540-4cba-afa3-4a1b2a752cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 8d76592a-58a2-4e67-8e89-aa6279fbebb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 e536e815-0883-4501-b310-13f16678f2ad)");

unit.assert_eq16(16'h0B4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #797 4246b2ab-42b9-4242-887d-22eaef6c953f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h01D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #798 4ee6b455-c5e0-4ba7-bf3d-7cbe5e3aa3d0)");
unit.assert_eq16(16'h0D0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #798 6bff59dd-d3f8-4362-92f7-5ec7f742a25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 e1fb271a-5e44-48d5-ad44-6ede6b838e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 adb525dc-bb1e-4968-bffe-ca937738b3b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 f94b511d-fe02-4e61-942d-6476df917398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 079d012b-1aee-492c-bc3e-a4feecd393ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 434a4c66-975f-49fe-a3b2-7963fec30eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 a815ab12-105b-4f03-af99-bcfa7a1b8b60)");

unit.assert_eq16(16'h0D0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #798 aa48c072-dc1c-40de-8c95-d13e78b5d747)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0774;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h02B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #799 af7a44cd-8297-4d1b-87fc-ab27a6910a1a)");
unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #799 3547da50-f42a-40b2-bdec-b59816e95239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 e187f2de-1c39-4509-b2e9-970ebe41bf2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 2322b3d2-6e91-4708-9dd8-2f6f09e2d258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 b7740110-42f5-42f1-96c3-fc5e08708712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 6ad52ddc-9f55-4cb6-af4c-849b6ff4c361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 386a0693-1ffd-4832-b103-94b67905aa98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 93b7cfcd-acee-407f-a6fd-9e706a615f1a)");

unit.assert_eq16(16'h0774, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #799 3001b590-561f-439b-b41c-3cb4b81264ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0640;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h0E54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #800 bc0458c6-72d3-4461-90b3-a637503f041c)");
unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #800 51e1fdf6-dd0c-4a17-81af-71a898523107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 e375e1c6-00f2-41e3-9db0-e7c4f5a78eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 21edc53e-cafa-430d-8808-4da21ff95a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 7b645c84-d6cc-4b05-bf03-fecb78ec577d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 6983b0ce-4842-496c-b0dc-673c65c14207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 320b07cb-a06b-4e93-854c-54a5edbfa75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 5939c43d-7668-465f-8e37-5360f81eb196)");

unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #800 301a9615-374e-4ab7-9b84-dbec6ceb2fb4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0642;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h015D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h052B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h015D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #801 28683cdb-2bd1-490f-8261-1105389f2788)");
unit.assert_eq16(16'h052B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #801 e9468698-12c9-45e5-8710-6519ea38de3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 0f3409ea-83ce-465a-ac78-f8edb97d8013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 2187cd7e-e2df-48dd-b80c-bb850f5d896a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 266ab2a0-9727-4cb7-9e91-4ec650b30e5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 0696a54c-1633-45da-a467-ec2d89a23917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 132b2db9-0a60-4e80-a6d7-2f147779e60a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 e0367822-79b2-4707-b8ad-ce8610efb0b4)");

unit.assert_eq16(16'h052B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #801 87835c25-4e06-4578-8d22-1df01500a22f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0644;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h063B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0167;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h063B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #802 1c12477f-8bdd-4607-b1e3-362b4be128b0)");
unit.assert_eq16(16'h0167, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #802 fae4bbb0-2567-4ccf-8852-8e57e9fbdafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 052871c4-fedf-4900-874c-d0322f713b68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 d1cad775-5c77-493a-bed0-544da894eb00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 35451208-1b2d-4734-bfd6-b7015539c27a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 04582b15-e652-478e-8908-afdc6a771bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 532e8606-0d6e-49cf-9711-6318d9b47701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 f59e2d40-f3e1-43ae-a124-90c5691b8bad)");

unit.assert_eq16(16'h0167, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #802 5707f307-56c6-48ae-bbe8-a863298571e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0646;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h0A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #803 007e3706-8fe4-4c53-a9ce-6957289adbc6)");
unit.assert_eq16(16'h0176, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #803 c66d2f3d-6cb8-48c9-9d41-28223c371955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 fb835c40-357e-4d66-b7f5-ee1e73fbbda1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 38b3b61d-5ac2-4a25-8752-74bd240da643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 01851781-eae7-4640-ac0d-052bf2f6adb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 bb1b0571-5137-4f33-a7b1-7d2b966795a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 65c370de-1af2-4aa8-8e92-305aa24a5df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 447af283-4483-4b09-9a34-9b5621b13ab2)");

unit.assert_eq16(16'h0176, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #803 47bd9641-5d19-4eae-af20-485cc6244a70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0648;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h094F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h094F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #804 74f6a4b7-a1a3-49d3-99f7-400e012a5a39)");
unit.assert_eq16(16'h0B89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #804 8c7bb24f-7818-4a25-98b7-4674e2329c94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 0afd1951-3b5e-46a0-b815-ebfd39c987f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 994a403a-8224-4c93-b07c-485f5e2e672d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 4bfc4c69-4c1f-4381-990f-608c30e4c38a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 1f8da6cb-b0f6-4f82-b4a2-ebbb312dcce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 72d6256e-a9e2-4895-b1b4-9231ac35e925)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 1b5c1885-7bb3-4142-83b2-ca1a0bb21da5)");

unit.assert_eq16(16'h0B89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #804 2cb3bc4c-4a03-4a3a-8e80-3b2443a2ee01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h047E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0260;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h047E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #805 3bcfd7d0-5097-49f7-9271-f4fdf51956bb)");
unit.assert_eq16(16'h0260, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #805 637884d6-7cb6-4918-a0fc-37bed2f388bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 7636403d-f1f7-4f9f-acfb-fe4463805637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 e0e4d30d-b88f-4521-b9f6-4ead9dcbdc97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 4651f12f-237f-479a-8718-9e02a48a53e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 02ffcc03-393c-43f4-8d3e-310ca12eddd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 9c2bc4cd-8fca-45cc-9bff-1cd259aeb530)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 ede36a88-3e61-4fbf-8ae5-314052bba57b)");

unit.assert_eq16(16'h0260, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #805 4017d455-c4a2-49e0-93e4-91c41d413f15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'h08F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #806 76bb0173-0875-446c-849b-a6a93fb79f0c)");
unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #806 b73e7e33-91b0-46fd-b66e-09b815377821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 5d3d024a-d04d-427c-b3cb-17bdef4d59c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 bdcd808b-8396-40f5-902d-c79df9b4b6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 a3adba3c-5d09-4e3b-8bf4-9cce35a3cb25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 a4fb3070-cad7-41c3-b8ce-1ac126608606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 31c93313-b9bf-40d0-83a9-a4ce8bb1b4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 669dc41f-fe1b-45bd-ad9e-7f780c84a09f)");

unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #806 9448738f-dc8f-493e-9c81-ca65fbe5458d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0465;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h0C22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #807 9c10afc4-3986-467c-8782-1c1effd5764a)");
unit.assert_eq16(16'h0465, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #807 f037b1df-194e-4ca2-a438-1b262cd3faf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 7dabe9f3-0e2c-400b-9869-910e51b0b8e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 6f8706a9-49ae-4812-92a1-685eddcf4312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 8d114f85-5d18-4fdf-9205-5afd209759f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 d7b9b842-3540-4566-87fe-8acb1bed7b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 f188f540-3070-4553-b426-956dce115ada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 09383e9b-8ced-4d22-b68a-246bfd60e907)");

unit.assert_eq16(16'h0465, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #807 df5fe5a7-c97f-43b4-b181-6ed17b139b07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0650;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0873;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #808 aec28d03-a72f-49bc-b170-95baa54c52ba)");
unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #808 df16c94f-5f15-4769-8e50-ae59da8d9584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 d612cbce-11c1-4ae6-b638-ae20416940ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 5b318f18-cc1f-4550-9b42-cae7a24457ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 2c70364d-9208-46f8-ba49-67f511089ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 61df8822-6727-4d19-9e00-3be51b27f8a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 70a3ec89-f526-4358-a975-46f86935e414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 f7704706-9e68-4bc5-9634-88a5d49e4ddb)");

unit.assert_eq16(16'h0873, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #808 88076c35-ffe9-4f53-8e5e-05523b188f29)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0652;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0686;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h01C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #809 52eac833-f121-483a-8bae-3d8cb03d770f)");
unit.assert_eq16(16'h0686, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #809 bba6a95a-cd54-4136-906d-93a6e64100da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 3d2b81aa-22d1-4779-af6c-d208b5897c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 12f62a95-534d-40ef-9c77-dc595b612003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 113de6fe-ace3-4974-8e7f-8fcd78939a48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 0115da54-3c1d-4982-b41a-23c791803dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 adea3771-1f37-40d2-8d0e-ad54a67deb3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 88db2d72-5afb-478f-b212-a8a3eede6d5d)");

unit.assert_eq16(16'h0686, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #809 bfa45240-bdce-42b1-a850-2c4e46781262)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0654;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h02FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #810 41e7015f-5902-41c2-8f09-c4f4ab98cd65)");
unit.assert_eq16(16'h0B03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #810 dae6f275-93ae-4a7a-91a3-29a75963b073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 af82015c-3e7f-4eba-ab9f-bb9db3a7a308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 8d710e34-b708-4c25-8c7d-8d075da43c49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 4c9ff144-fe8b-452f-a83b-44b3aef9833f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 390f51a9-5e52-4f36-bf7e-e9ad8d621f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 63834b09-e532-4c78-bf3a-a081974c8afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 b17ae53a-dbdb-471c-87ec-ed34b47910ff)");

unit.assert_eq16(16'h0B03, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #810 69032278-5c68-46cd-bd78-b56207eca4d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0656;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0011;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #811 3ebfee67-416e-4ff6-bc84-0383dace8c4d)");
unit.assert_eq16(16'h090E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #811 4a23da9a-ee73-4103-a4bd-e8c9cb842300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 ac000279-90e1-46d0-9c79-600219a21347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 f9513076-b3e3-4e21-8dd3-e1eb2cb6a313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 13565d13-5dc5-4891-81ce-58f1dbea611b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 e3b63d82-f489-4a03-9a34-37284bd6b0bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 08ea4dc5-f1d1-4cf6-8be0-60f869a545ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 3ad648db-040c-41df-9122-87db150a20dc)");

unit.assert_eq16(16'h090E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #811 98ac6049-9e9a-4181-a0b0-ef7e40becbe0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0658;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h08C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #812 6c31074f-f437-4a07-a6e1-f768333f5b9d)");
unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #812 b948ce82-db0a-481e-9961-704f53b9a93e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 f24a5b0f-a074-4c14-bb9b-f635e98596c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 d55b0636-db63-487a-9b57-d8de7a352dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 ce33ed1f-287e-45b0-aa7c-03fa87ccc690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 796b3d1c-5bff-49bd-9e5b-828e658f3d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 172ca713-d0da-4419-9a8d-61113c67bc0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 7318b87e-e74a-4cd9-a415-ab3dda92974f)");

unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #812 891cf320-276b-4a45-b8f9-216932d1b48f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0598;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0874;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h0598, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #813 38e07cfd-c986-40b9-a28b-f067dd8649d8)");
unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #813 1b0bc73a-ea17-4a0a-94cb-f623abf6e4c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 520b5fa8-c6a3-4c18-ba3e-239ad7514403)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 3cafdb88-20be-4945-ad0f-3d1f8d348e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 901c69ab-3cac-428d-8558-778d8a8a8580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 a3505368-0ce0-4da8-9e23-57162c1e5d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 24da48dc-cee7-4b62-9905-423844276886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 17a17c29-510b-4a47-b09b-6eb592f073d7)");

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #813 7e5a9089-a30e-4c34-ace5-f3feba5233c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h04DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #814 182174d2-9a74-4e6a-9336-2198485a3c39)");
unit.assert_eq16(16'h0F99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #814 1b2aa0b3-2e02-4b36-a9c0-7f1e32730b99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 1ce75632-8065-4ed0-ac35-47996d1be682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 a8f0eaae-3636-4a60-9fc3-5b7bfce32b36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 166df166-e5e3-4edd-a1a0-766bb0b36595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 5969cb9d-c60b-4992-b094-d85f7a46bd0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 a4da3f49-20aa-4711-9455-fcf794b4c21f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 296e6039-ff5b-4318-9ea9-54f1610b0ea8)");

unit.assert_eq16(16'h0F99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #814 1820f1e1-f2d8-4ba5-b49b-170556b85630)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h0881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #815 34ceeac3-7a83-47e2-b82b-3db17474df08)");
unit.assert_eq16(16'h0911, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #815 880e0697-c88b-4f6a-9ffb-0126e2a740ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 b3014089-a4b9-4873-b089-7139d49de27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 1d58f25a-05cb-4045-b7d5-419f67f78166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 322a14cb-ae86-4236-a21b-d1a5236e9d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 85803025-4750-4b60-ab14-5c98811c0306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 1d62bed8-8a12-4b87-b831-dd10a8b11633)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 494796d8-e5b1-4001-9a11-388af05aefe8)");

unit.assert_eq16(16'h0911, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #815 8e07103c-f4f0-42dc-8247-d7e0ea2f8e2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0660;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0834;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h0AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #816 9fb65137-3c19-4b35-a210-b8399d8a8216)");
unit.assert_eq16(16'h0834, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #816 0d3213e7-3287-4d3d-ade1-96b272aad067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 790df058-2aa0-4a27-96ab-c2d331ded70b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 f52e2e6f-69d1-4647-bf03-6d31cffca249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 48f15884-8ed5-4c88-a622-d6ca217c7a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 32ab2e80-09ed-4ecc-bbb2-45a30b68d922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 27945bed-954b-4cc2-aa85-a6919d3a1d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 47ed98d4-31a1-4e6c-930f-a10bf19960f5)");

unit.assert_eq16(16'h0834, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #816 a579c632-a36b-4237-97b2-0f4d16550c58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0662;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h0F19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #817 2166ad6d-0c49-43f4-9973-f215ce3f034f)");
unit.assert_eq16(16'h0172, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #817 7bb357fe-fe3d-4fd2-8dd5-d58d83cab8da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 63462f77-4a33-4c6b-8767-16c2873081db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 7a8e6b37-9f96-4174-bbd9-64f38505bd0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 2bf83581-ba4e-4ce4-a9d9-cca1c3f0732d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 f1859d3b-5017-4e0b-9d4b-d38acdd18a21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 247c0bcd-d87a-4ecb-a6b4-85a9c19d463b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 661df445-d2b0-4ef6-8854-f7babea6067b)");

unit.assert_eq16(16'h0172, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #817 3a844c2d-4648-4aeb-af51-1a040253c4e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0664;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h020E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h0C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #818 b1acfe13-5a36-4db6-97b8-9c7a22b5fec7)");
unit.assert_eq16(16'h020E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #818 f5f133df-dbd5-4500-8418-b204be3a414a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 a9e97545-9816-4d59-b584-58f19c1c9397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 4c5806a7-9776-42a7-a14b-dd995a5e991d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 7c800806-ff50-4a3e-afb3-6f07fb20fa46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 d25de67d-3553-4b3b-8127-e6c2c318319c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 d0e6b798-ccbf-4df9-a3f6-adf47e979600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 37df1991-c4dd-4863-9fc3-0024dcf55ee5)");

unit.assert_eq16(16'h020E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #818 5062c743-0eb2-4040-80e4-1afcb865ee4b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0666;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #819 30f482ff-0853-4cb5-b500-9133287c2980)");
unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #819 d8f7a484-82c0-43bd-ba90-9f1adc2773e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 c05b7a16-6a6c-4ec5-9bf3-3f4e53da0353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 e5a181e9-215a-449d-bb32-697f9573cbc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 3445ccac-f4a9-499a-b4a3-6dfdadd23748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 bef3b92a-301c-4fc1-994b-cf8aa0925c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 3835214d-63e3-4235-91f6-21eb17daa8ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 4c1c38c4-d538-4452-8653-67fbfd3e8727)");

unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #819 5f8b0ffd-21b2-45a3-8b71-57e25797b215)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0668;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #820 fe3cb987-f18a-46f7-bdd9-7782e3f45c00)");
unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #820 162a15c0-56c6-4031-9aee-c480552735ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 1a4bcbaa-f011-4b74-9486-98b83b53dfae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 6e1e45cf-deb3-461e-b7e4-f719c4f0a796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 59a05c15-f6a4-4d65-b5f8-40f3123f50e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 76f8ee6c-29d9-45a1-9401-9ac4368f39db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 31cb266c-07c2-4b62-93d4-fc543eb271cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 9ac53729-9942-4552-b3ac-eeb0ad509e93)");

unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #820 a0def565-54b0-4574-a472-6e0979c904d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h0D0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #821 22857649-0d91-4bed-997f-c5157a6bc9bc)");
unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #821 f2c7770d-3610-482c-9fe0-cc5fca541701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 e8682cad-fe71-4eb9-a816-64879cac0570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 a912d02d-6dce-4bb9-9a96-90b174baf59b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 06948119-9f63-4d21-b3c1-52c4854bf40d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 ecbb620a-e569-4658-9969-2eecc2e9dcfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 8276fc9e-80ea-4fa4-9583-829562425e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 7d424375-09cf-446d-983e-f2f0089a247f)");

unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #821 bab405ef-d43d-4173-8ed8-3e417d13deec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #822 53de7611-7d52-4e7b-8995-3faaa0ca8fbc)");
unit.assert_eq16(16'h0BF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #822 95e1836c-6f27-4ec3-bf4d-a4fb103ff289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 5b3185cd-d624-4a08-ab68-1bc224cf4cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 146b66df-b4b9-435b-9abd-deee51f08921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 73551492-4297-4ea7-a851-6b74cf1b8c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 b8a7aae2-9117-4f74-8539-8120f7ad2ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 c1550cbb-e4e1-4af3-803b-f81dffd9325f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 01dc4d21-03f3-4220-b7b3-969c986ddaca)");

unit.assert_eq16(16'h0BF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #822 4cd6a433-7638-40ab-881e-576af2631e35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #823 fb8433ba-ad39-463f-b79f-e2dadeb07b45)");
unit.assert_eq16(16'h0B5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #823 a11e7b03-f54d-4929-ae06-5e28a970ff62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 b1889161-d10c-481d-b44e-25bd51fc168f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 194f6039-70c2-40f7-8fe8-3ec29815232e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 5b663cc2-793c-4a98-854e-ad22c1131199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 f6fff958-f4ec-4dce-85dc-2956e420c230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 f2a0e1af-e9c8-4f3a-a5ea-11db5f2bde8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 1bb84b4c-8a85-4239-829e-e962091c3a05)");

unit.assert_eq16(16'h0B5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #823 f7f23744-7abe-48d4-99d2-6158210b1e01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0670;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h027C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0410;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h027C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #824 0fc2296e-2f8a-4b13-8db8-b129d5438935)");
unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #824 d289c199-ef21-4b4f-b816-bf3f0fbcd958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 f8389d08-27e3-4c93-9e52-d5830270c6f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 ef40775b-8657-47de-a551-4c4929369645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 f64490db-3b5c-4f09-afe5-179ea5beb9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 a2561188-542a-4d8d-854a-318ba92ab0be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 bcc86b8c-50e8-47ef-ae31-f69b029668ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 63141d64-6bd7-406e-97e5-01447f4fd121)");

unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #824 50e0c551-58f7-4a00-8ed4-50f859531dba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0672;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #825 40256a4a-88f6-4a69-96d7-e6a6e39533d9)");
unit.assert_eq16(16'h0245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #825 acd7265b-7e44-403c-877e-cfe2e89099ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 e5730f0d-f316-4cc7-bdbd-328602419a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 0d59381b-248c-45af-825e-7ee26d613bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 c18370a2-65bc-461e-957a-b2b7892a608f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 963f59b7-c8ec-47c2-8b9b-f6563b5a8f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 25b3c20a-2ec4-44bc-adef-2fc95d252123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 580a772a-9a94-474d-94a0-1677b1260c7f)");

unit.assert_eq16(16'h0245, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #825 884b4483-896b-4f8b-a0fc-5d693a298f36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0674;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h046F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h046F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #826 3d8b6458-ae9d-4f2c-92d4-a9dce3c80103)");
unit.assert_eq16(16'h0DEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #826 74d0beb1-33f8-4593-a054-a1e9d1c7bc2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 d7aab9a7-8fb2-4911-b7c9-a1e61ae88a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 5062562b-d365-4e9f-84d8-5b55583a1207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 7d867bd9-fcf5-4013-bdb5-0462c3d15442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 988d8cd1-26cd-4407-8224-4e8418eee70f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 f2f0e788-42d5-4721-ba90-6b127311ad0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 8d544c55-0460-4f66-8797-be17370e914e)");

unit.assert_eq16(16'h0DEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #826 a588465e-09aa-469b-a885-10141a73f646)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0676;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h0BB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #827 4281d8ff-7711-4fcf-bb70-7dbdeec25c34)");
unit.assert_eq16(16'h0DE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #827 585e12db-067b-4d9b-a2a6-08258ea672d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 014f804f-317e-4f2a-bceb-b611875b7aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 271f2fc4-f080-49a4-80ec-26833827ed07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 811d4a94-b147-4426-b608-1b1046baa6e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 3da24abc-f172-4a8b-8e78-5d1c06c46464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 0ccef532-6fbb-4a4d-b20e-26e16b7befc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 5c181483-fa05-4694-b6a8-c9d7789f67a3)");

unit.assert_eq16(16'h0DE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #827 a8578716-ea5d-46e2-ba5f-80e68da239df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0678;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h0B57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #828 653a4e2f-3782-489d-88b8-c020f243667f)");
unit.assert_eq16(16'h02C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #828 b0af3ece-3b8d-4544-ab96-837f477b0d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 138e34c8-6bf2-41e8-8ce1-c483785164ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 56b05f78-ef07-40d8-b770-e5d98c545f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 3f5d1aed-9726-4721-a0ba-2dc8978bc4d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 a4f20449-304d-4424-8210-e6be97e4b980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 9e622d41-539a-4452-8b54-242e599197f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 1e8b5fe8-a277-44eb-8f1a-cb61862457e5)");

unit.assert_eq16(16'h02C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #828 79ad5224-868c-4f85-adcf-a4f27fe19eeb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h0DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #829 7eb255f5-4750-4fd9-9d49-0eea6f68014f)");
unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #829 b4bfa69e-a4ba-47f3-aec9-c96714a97ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 17ec0541-87a7-4a0c-a78c-20675e453436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 642ba324-c54d-494b-b5f4-9be0d30e08a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 b92679b9-021a-4b0d-a32a-dc707458ba2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 86b379d1-52c4-4eaf-af8e-586f1ee28817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 19cbf110-3c15-497e-b8ea-2f12ada91572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 092197c8-0dfb-458d-b469-872fe811054f)");

unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #829 a7900f7b-f8e5-4eb3-8515-1de158f98a69)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ECC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ADA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h0ECC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #830 fe5a144b-9525-4113-addc-84bf0b14d820)");
unit.assert_eq16(16'h0ADA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #830 da5bedc5-6a04-41bd-bf2f-374e48bdd278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 45741cf1-fe41-4c0b-9f1c-2124a61dd3c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 dc56b718-a3df-4c80-9b7f-7ea4cca896c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 953f12a6-08b0-46f6-95c2-fd330d13cea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 e4b7d398-1c7c-42ce-b8cd-c10bf7a78592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 0502de8c-0742-4873-bafa-16e0903f6a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 3e23d256-1822-435a-b34d-473ed1b19bf9)");

unit.assert_eq16(16'h0ADA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #830 e44832db-b52f-45ad-8807-8905f99e06c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0986;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #831 fd7088be-6abc-404c-8250-6285f57ffeb6)");
unit.assert_eq16(16'h0986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #831 a3358a4d-c18a-410f-9b31-58079c3a37f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 1621fa5a-2b1a-4843-adf1-c0e5c1c053c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 0379d4e2-8d06-4358-9318-53830a78093a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 fd02a148-fab6-4385-8080-c952fdd4593c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 90aa9364-e201-4b1f-be2b-99ed4e7a8eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 469661b9-6363-4fd3-b2d0-19edce90da8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 923d9646-0c15-45c5-bff2-bb0b68188c99)");

unit.assert_eq16(16'h0986, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #831 c11a2614-6060-4596-a638-eed493480997)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0680;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h0E06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #832 734f9970-7562-441c-987e-ec3a6e147776)");
unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #832 f198899a-cfa8-494a-b8d9-4bc880604adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 e935665a-2a62-40f0-82fa-af9d064b9038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 3103bf5b-d34c-43ed-888d-00fd69fb8826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 fd3f5b46-0dff-4904-87a0-24e2632c2e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 1df403ae-0106-4069-8390-80f4fcb5e391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 ba3310c0-33fe-45bb-8db8-0c06fbd638b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 875991b4-eec6-4557-b9d8-083fae3c86f3)");

unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #832 7d8f4e00-f870-41be-b8a9-0e76125892de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0682;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0730;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h0EBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #833 ffe84538-59d2-4c23-8cc3-52759507dc59)");
unit.assert_eq16(16'h0730, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #833 5adb363c-f820-42fc-bc73-3195581ad713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 a8a58ad3-b46f-4421-99c9-7e9e6101c968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 7a525d91-060d-4227-92d2-550882870f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 dfb894e1-c850-42f2-a3d5-260dc4975303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 5b43041e-2e81-4e9e-959c-94ce713d5449)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 3ea9310b-993d-4cb2-993d-d622edc12107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 3b1379eb-56aa-408f-9bf4-05c74292f880)");

unit.assert_eq16(16'h0730, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #833 a096eb44-1d44-47dd-b05f-c91330c6ca60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0684;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h018E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0614;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h018E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #834 bb5c9ca6-cbd1-40fa-983f-932200297f8e)");
unit.assert_eq16(16'h0614, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #834 2870d0b6-f895-4f65-a0b3-ae28188c3825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 312717bd-303f-44b3-9017-41f09a70d91b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 b38f6dbd-7aac-4ce6-9244-6bb902f9afa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 29e121a2-1133-47e9-8598-55661b832754)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 b5f2aeee-0380-4bcb-bc94-079e5ef513c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 1841807a-030b-4277-9cae-3421e91ed6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 665002b7-218f-4164-b562-6dae7e363517)");

unit.assert_eq16(16'h0614, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #834 af7c3548-b075-4670-888b-53b2338a304a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0686;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h0E03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #835 e56bfd82-3dad-4d3b-b00b-6f594f87f1d6)");
unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #835 6eecd8dd-926b-459b-b39a-23e0fd0ebe4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 2553ba47-6fda-4084-aacd-344f59624397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 788af2e3-7596-4c99-8c43-214ad682f593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 214cf7ee-c114-4e75-9c97-49d690b30d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 6e46b1aa-5085-4703-b983-fb02ebbc0c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 38107436-0470-4761-b054-99df3bb7eb66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 ccf7b55b-5576-41ca-9e59-4c67ef8b9fe7)");

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #835 f66bc987-6843-4894-acba-aef169fce2f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0688;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h017E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h017E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #836 5e71da90-8ee9-4f08-9244-35258f2d1f01)");
unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #836 da128772-f897-436a-8111-373caf510223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 66f14945-b1cc-4cd5-958c-c41fd1645340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 a05dd5db-cf28-46a1-b85e-96494002a56d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 ab6b9ea5-7128-47b8-a8ba-57c08e51dfa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 a89f9192-1873-4f1d-a818-112b376be497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 b800c1d8-33bd-41d0-9801-d9f561a9997d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 3514e26d-dbf6-4f94-94f9-936077cc661b)");

unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #836 71fa4934-7d5b-4bfb-9efb-7852dcd19fa5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h0C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #837 949971a5-0df7-40b1-86d1-be2527bda04f)");
unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #837 ec64dd7f-bf58-4397-8d20-d66bda6c8470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 22d8fb8c-f546-4030-b7f3-940f2d035115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 e67933a4-1a43-44a7-8038-77da6fb9beb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 735939af-9780-44ba-b578-ff7e4b8b1903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 43d4e0cd-d7f9-4437-9f6b-b28b950e2d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 847cdf19-6a8e-4d6f-86d1-f482065e87ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 e19e4b06-312a-4960-9bac-76b314b9569c)");

unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #837 3bb73427-e552-4fc7-8527-27f33c0001da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0517;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h081C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #838 edc29ed2-73cb-4f29-a9e5-79d38f440402)");
unit.assert_eq16(16'h081C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #838 5a362a16-634c-4fdc-a16f-afea42d68911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 cf0161da-07ae-4b8f-a31b-5b0eda5443df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 d50326d8-9715-4750-9549-48c421e78fa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 6b0c0a0d-03b5-4686-8baf-d33dee74c9b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 89dc881a-1b10-4915-8971-2b01a09b8a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 057d620b-1e18-418f-994f-de3ca290e6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 21891280-e56f-436c-99fd-6fb8a14fa0b4)");

unit.assert_eq16(16'h081C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #838 7c65d347-cc73-4d68-a609-af2eca5546e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h036F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h0AB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #839 98878f6d-72fe-423b-8916-295296e2e5e2)");
unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #839 bb8c2f07-2f12-456e-a6d5-1ad70aa0b915)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 eb2fbd9c-5728-4b5c-8b07-d3ef38f98df3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 7d1eec75-c214-44de-8672-510e31f40e9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 282e303b-2e4c-43ca-9d22-69873045b227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 81b59d2b-8734-4bf9-b5cb-2b10b3389ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 0d354e25-f258-4dad-b549-5b29e9caa619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 e08a691b-3c35-488b-b9b9-52400da632a4)");

unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #839 2720c219-391c-4fa0-a689-5ff992cf61d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0690;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h084C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h0B56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #840 4b721d92-5201-4540-863a-191f1f6b0999)");
unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #840 0b41f6b0-ddda-4a35-aec8-6720e1cde43d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 01702170-4e29-4b11-a542-6e6675c7162c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 665b7d2d-446b-406f-9aad-7898511e4b00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 5afdcb92-7338-4635-9099-a859152d3016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 68706047-da09-440c-9e6d-f7cf4baad151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 308cd510-0bc4-431c-aef7-8f8729aaa609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 54118771-b104-4fc4-9bee-ef41a2f4a338)");

unit.assert_eq16(16'h084C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #840 c91f78f4-485e-49c5-af00-9cfb03e3a3c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0692;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h071E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #841 a56d4598-5d29-4813-ae9e-2e06be9294c4)");
unit.assert_eq16(16'h071E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #841 bfe7768e-c54d-43b2-9525-fdf939f80977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 c9917edd-445c-4b84-98d7-fef569dfc8d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 474410f5-5a48-4e5e-9928-67c8d7fb9905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 bdddacff-f7ef-4959-9a62-15e14c81fb26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 eed0e617-d4e2-4552-b930-e51cb2d87dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 9a24319e-ddbc-4ec9-9d0d-f0e0a25d037b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 be21b874-5cfc-42ee-a7f6-3e316619850c)");

unit.assert_eq16(16'h071E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #841 2136c3d1-cf07-4397-898d-90528ebaf1fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0694;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h0E81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #842 f65917d8-c58c-4d56-9d5d-6643d5bb1f3e)");
unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #842 7a18349a-3cd3-4758-8a9b-346f1ce31551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 d0ffd1be-af54-48ff-a7df-f63605ac5dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 9a28ee21-05e7-48e2-b2ac-1259f0af441d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 a0759aae-21d7-4a05-893f-18fdc45e1cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 c03a0ead-a458-420f-a862-84c3e2f5c1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 79793664-645b-4599-839e-b999170f2ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 0e46c767-ae2f-430c-8a1a-1634841677d6)");

unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #842 dedf4b62-9e9a-45ac-8e1c-af8d20a95355)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0696;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h03BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #843 2989d5e8-0b61-4c01-a295-7ff348febf21)");
unit.assert_eq16(16'h0CE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #843 8dc83af3-fae5-4f97-a13e-856c2459cca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 bcb484d9-dcff-4f33-808c-b2af67693478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 c7034b8c-c32f-4219-a7fe-34c95d0b589a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 81c7bed2-007f-4b9c-8677-9c192d27c253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 10df111d-eeab-43d6-ae29-f6eec35a7613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 60b89668-891e-4aa0-9fec-6d137fd3f913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 8acd811a-6f90-46c9-8d10-93768a7aa4ad)");

unit.assert_eq16(16'h0CE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #843 dcf07cd2-1eea-4870-a310-1e4c9067f1f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0698;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0751;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'h0751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #844 d98cd3d8-9027-4afe-80ed-04849aa17dc7)");
unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #844 05b59d11-ae15-45a7-9f30-d4876db8e3ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 152513ec-ebe2-4881-8868-ea028eda9b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 4750f14b-4d5f-4388-9f5e-fe2117e418c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 e830f21e-b7cd-4dce-a193-7dd69c16e8a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 9c65b7fe-cbb2-4dc3-8384-6bcfcf471492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 90b88721-8c24-4aac-8dc3-6a21b9b62d80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 c1b481cb-cc3c-4822-bec2-3015a4d3cc37)");

unit.assert_eq16(16'h0B79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #844 b90da591-368c-42ef-ae2a-5157e66e93ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0412;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #845 ce31f5f5-6f32-42d9-b6bb-1857a60f4c86)");
unit.assert_eq16(16'h0EF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #845 03ba1633-a66d-4492-b97b-b87996599746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 b153f1e9-77ab-4f04-967c-64300bf3f6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 a868d485-b986-487c-b345-ca96359e6579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 48f7bba6-0282-437d-aac7-e4f1860b1840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 e072e74f-a8c1-4df8-be20-d914fa42c997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 695715d8-eb1f-49b7-9a2a-17f1bdc76a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 e4b76300-173a-44e5-a02e-2db70278f605)");

unit.assert_eq16(16'h0EF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #845 b0645ca1-3c27-494d-92e6-26703d06e83d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h02EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #846 cd02935d-4081-4d05-a524-90a434c5a4f8)");
unit.assert_eq16(16'h0D6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #846 48e83379-a2d7-4a75-b304-fbf69299a098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 b535a2c8-6873-428c-a86a-a587008f8a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 00ad660b-7c31-43ad-9832-056d4370600d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 d60618d9-7fe7-4315-a73e-392f42c705a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 ab8c1932-f053-4f97-a471-4c64d657cb7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 86e95183-5f2b-4fa9-850f-a5e73e7a058f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 e603e764-b3a4-4034-8629-cbe0e4a7fdc4)");

unit.assert_eq16(16'h0D6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #846 76057dc7-1d94-4dd1-ba73-1480046d7554)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h033F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h033F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #847 a7ad0263-a748-499c-8693-8e595ce18fae)");
unit.assert_eq16(16'h03E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #847 7466b094-68d8-423b-9755-75af40d24603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 ca78cb6a-2a23-4654-b440-a72458c008a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 4c5316fd-d046-42af-9e7c-f1345e79b705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 ad1d8917-4315-4093-b6fc-732b8d762f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 d326e0d5-e772-48b3-8a23-46bc9c107818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 6391369f-bc86-466c-a471-73b6f218e688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 67f712ed-d6f9-44c5-b989-9fc19d902266)");

unit.assert_eq16(16'h03E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #847 2ae30892-be92-4143-9034-cb242c901e48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h0D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #848 f39b5633-68ba-4cae-9736-92d086e8d6f9)");
unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #848 6aa25b59-b90c-4ee7-bc63-fa8770358699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 c7be06fa-8cc2-4f82-bfc7-7269a0b56bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 35f27a40-44fe-4c3b-8ae9-d021f2800b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 5758ee21-a166-418f-abf8-bbef5a9beee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 d2d01e65-cbd0-4b64-9493-c4ba4f230261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 c70b3a8d-2755-4a37-ac3d-d3521e969590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 2902c3f7-ce1a-4939-923b-a5f0deef130c)");

unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #848 74a7a998-697d-408a-bee8-f0e538c930d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0842;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h07A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #849 c7ab9d31-7eef-4cba-b0ef-8211d17ad8c9)");
unit.assert_eq16(16'h0842, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #849 9353953b-a406-4fa8-bfeb-49529b0f0356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 9c4f50e6-50f1-48f2-a9d9-b610d979ad65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 2e2de44f-63ff-496b-adb2-f070df72f75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 75866b71-04d4-40d7-980e-bf7989d631f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 4706c2bb-6dc0-460f-8b79-335d2361742f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 cb3655d7-b319-4e34-bb90-45917065d3d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 0acb53e6-c3b5-4665-ad92-cac76e6ba35d)");

unit.assert_eq16(16'h0842, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #849 89d4f267-035d-4e5d-a345-e467dbcd462c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0146;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h0FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #850 bef423de-9b5a-4ba2-92a4-9b107cbf3b77)");
unit.assert_eq16(16'h0146, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #850 d9e4c266-ba8f-45a8-b7f5-c7737ac2848d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 1c45d97b-5a71-4fb8-b8e3-33c3a3fd8809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 a1d22df3-bdcd-4ef0-aeb4-23f3b849ba3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 f424d4fc-a505-4359-9d83-cfcbc1c887af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 9931ae14-aea3-4a4f-b787-b1b833dccf92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 924e119f-97f3-4adc-9279-c01f5d92e618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 4f4190ff-eb0f-4375-a588-ed7b9c60c0dd)");

unit.assert_eq16(16'h0146, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #850 d00da23c-78f0-4fda-ab8c-d5aa4b7b15a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0027;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h00B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #851 4d2f91d4-c0ab-4f0a-a9c6-18215af0977c)");
unit.assert_eq16(16'h0027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #851 9a5bc947-3fbb-4ba1-a919-32450d5c32fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 dbd058ae-3741-401d-9ce3-ba2565a83450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 29f94eff-836e-42d8-be3e-65380751b5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 42395a6a-e89f-45de-886c-f0e013e8e842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 5bd39f87-3645-46ee-bf1e-8fa7a194bce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 f81ebbfd-dc99-4704-8b2b-646f62ef2c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 36cfa440-71ba-484d-8755-6da33ee0666a)");

unit.assert_eq16(16'h0027, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #851 b1451524-709b-4f5c-9784-61ce8222a3d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h021E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h021E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #852 9d9107ad-8019-4e64-9001-9d35ee07142d)");
unit.assert_eq16(16'h0BFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #852 5cc6e3f7-10a4-4236-bd28-b79c7e5de49c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 171341f3-af2e-4ade-964e-05c017d36971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 44c789cc-d402-44e7-bf05-575bec64a5a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 84b63893-252e-4b2a-abb6-695ee25aa375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 50826062-e67f-4b82-8975-a9ebb54d7996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 ce28ae82-25b3-4464-b415-b5ee608c28b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 86e9739d-3a96-4745-80cb-ab504ac0911c)");

unit.assert_eq16(16'h0BFC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #852 f7d76dce-e80e-4b25-a5c9-0de57a538622)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #853 9ac0f356-ff3a-4f3d-893c-590596f8e27d)");
unit.assert_eq16(16'h0EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #853 f0881685-b2f5-4731-9590-08ea5da12d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 efa1df07-3994-4699-95f5-22760b11cf83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 e84a02eb-42c1-4d4e-a77d-722fbd7fa21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 153f1629-f728-4128-8ab6-e6e3ade231f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 33872dea-56b5-4daf-93fa-ae14a4dc53dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 b048ea6f-0852-44d0-9af4-5d3501128dba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 6056adcc-78e7-40de-ad61-d2f2cf2de2e2)");

unit.assert_eq16(16'h0EF9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #853 13ac862b-c4ea-46c9-b5c5-ded50cf3301d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0151;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h0151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #854 1595265e-1565-453f-8c54-9ad4e17f96df)");
unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #854 c28ea439-2252-42fd-a43f-04b901d1121b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 e374ce8d-002b-48ca-bfda-f4b9912cfb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 16435422-2c51-4d3c-8cda-3b747ed34a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 79787977-378c-42de-90ac-830e7bfc289b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 5f37230c-dbcc-43ae-8fe2-4adef62f31b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 49c64abb-e8a9-4823-a28c-58bf0c59da19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 48c95132-1c3a-41d2-8a2a-17e0729cb46c)");

unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #854 260f5367-379c-423a-b409-c2f629f9e960)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h09A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #855 e85ab958-ec12-4a72-858d-f30f183c680c)");
unit.assert_eq16(16'h0D78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #855 b5671807-def6-42e3-8f7f-2ca1f855bd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 a2600230-f8c1-4f07-b207-eef613befa7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 8d819c22-5a38-4aaf-9779-b0df8b4104ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 04fb7f1d-29f8-4ce7-9f1c-61f341c3c387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 85b5766f-b86c-49c8-b45f-40d3ea8da67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 45fad3b0-493b-4bb6-ab62-6182a72dd13b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 1268c621-3ae8-4565-8753-1bac0f1b76bb)");

unit.assert_eq16(16'h0D78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #855 d2bb2858-0097-45a2-9115-c6b6445aa91a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h048E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h0CBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #856 0df6b69c-6f76-4522-bade-1a2ebadc6848)");
unit.assert_eq16(16'h048E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #856 462c1a70-9275-4c53-997d-e844d8c50ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 ddde1fda-aab8-4008-b469-4d092569c38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 8666b388-9903-40df-8e6f-7c98ddd372a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 fd09bb7b-5f16-40dc-a2c9-ce16e4a74377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 3bd19c60-bf4a-47b4-9711-fb8002183901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 f460dcff-e6d8-4eb2-82b8-f46d7e9ed827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 53772372-012a-4272-bdc5-23684196b31c)");

unit.assert_eq16(16'h048E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #856 5e5e989f-811c-4166-b1dc-b704d2a96730)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h00B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #857 f51cf4f7-d479-4b20-af8c-559439e3350a)");
unit.assert_eq16(16'h0DD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #857 57e5d61b-2b52-4bac-90c1-8b64ef8a9294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 80f597bc-f036-4521-8696-a399a6093127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 8f4c3e35-2898-480f-af97-e9a85b234763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 5580b170-3ed9-4d8f-a53d-ee252fc8cf7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 9645fb67-ff1c-4f55-ad2c-f35a0abd93a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 ca557c5c-3321-4be8-b3ce-392ee2e5c87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 2f4ef025-9b0f-476d-a5e6-f78c27e6c8c2)");

unit.assert_eq16(16'h0DD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #857 b1e7ca02-dc46-4548-94c6-ab9a30fbe77c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h0CA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #858 d7ceb8bf-4586-45e5-8b56-516bddc19db6)");
unit.assert_eq16(16'h00A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #858 7aeef346-f8ac-42d7-89af-855e90cb0846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 80db48cd-fd68-48ee-978b-ce56fc937e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 d139c488-833d-407a-a5c1-24cac8aa2520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 7eae1904-80c7-449b-98ca-13ee0e70c8a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 5489e1ec-6104-4af8-a21f-413b67b2f93e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 85c5a8e2-1640-42ad-bd04-d5809d7bc08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 578a4d84-488c-4874-87ff-2c6c62008380)");

unit.assert_eq16(16'h00A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #858 6d13ccb4-6d6f-431b-bf54-9a4e7d19b3b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h056F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0270;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h056F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #859 0dbb166e-cd5d-46a0-a135-b50e4c811c60)");
unit.assert_eq16(16'h0270, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #859 5650b9c8-b504-45f4-8c97-2c9ff97b04e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 787e28f6-2e44-4946-8fc2-6beec4530302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 7582e253-e153-4c63-bb02-34bb5b7fc1fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 cd6ed199-5f42-428f-b276-de556a91960e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 86631877-57f2-44c3-8c82-78e251e09a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 51e445eb-61d3-4f29-b92b-c56b034552ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 2889c9b3-32bb-4bd7-a369-b81bc6765033)");

unit.assert_eq16(16'h0270, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #859 57a9c2b6-4140-4903-8d15-141520488ba9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0792;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h0792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #860 806cd806-bb0a-48de-8756-497693f5a183)");
unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #860 e0722ffc-6fae-49d9-8375-aee3a007e3d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 7bc504ec-c8de-4765-9218-a425b98f1d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 c22e2f24-4d2f-4086-9bac-446b0b765614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 14eaa3d0-be08-499a-ba55-1e827f32941e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 78744b33-6827-4d1d-b1e7-5895d3efdc4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 9128e4a1-529c-4c86-8f9a-fbc906d2d34e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 055c981c-0e6e-4c21-99ee-315062f31266)");

unit.assert_eq16(16'h05A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #860 2642b697-edcb-4183-a592-baf4b1b782ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h04FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #861 6d206b73-2563-40cf-afb9-2698e34462f9)");
unit.assert_eq16(16'h09F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #861 8631f5f0-451d-4ac5-a595-af0724d72b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 7880f522-e2ab-4e0d-ae27-d214ded06ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 d682a2da-7261-4a09-9a02-8354b646f422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 33a5eb0b-beb7-4d8d-a533-b81a7d3a65d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 6f97ae1e-fd33-4bab-b3e4-57274550b9c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 c03b5ee6-dd38-4f40-8b0e-bb34ea894ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 0d6ac0b7-72c5-46c7-a531-63a35a6f894d)");

unit.assert_eq16(16'h09F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #861 c52b7c38-c138-4a43-ab0f-42b1383ce369)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h017E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0302;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h017E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #862 4807dde8-90cf-408e-aab3-118277ae34cc)");
unit.assert_eq16(16'h0302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #862 e691a8b6-e50e-457e-8bcc-f4d05a83d507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 0df34052-474b-4a2f-8567-98b686efc710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 17817531-3b54-47d4-b05d-e469ea2acbd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 3b4c810a-eaa7-46ed-b452-07179ef53991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 b9e714c7-93e8-4e6a-98f4-25efc427d3ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 8d4d00ce-8ae5-4cda-ba48-1d545d3cbb77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 50d3b250-df3e-4cd2-8338-59c0db308420)");

unit.assert_eq16(16'h0302, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #862 560b3ef7-25f1-4f64-a1d7-8b918f3f6347)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h013C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h013C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #863 bd558ca2-6c1a-4a46-89a7-bc81d0304785)");
unit.assert_eq16(16'h09F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #863 1ac951f5-6c1c-4b8c-bffd-6c6729894ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 3fa4a209-1d51-49c6-92cf-d0e406c734e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 f44c23ed-b2c4-4423-995c-7ad2e55ec6f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 64f3d7dd-854f-4f23-a771-fbc4a69740e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 70494267-3554-4269-ab7c-df66760e2600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 516364df-72a8-4e0c-8ea3-4a778bb0658d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 b4fc06ac-c924-477f-bb52-2d0ff7a2af35)");

unit.assert_eq16(16'h09F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #863 5fff7ce4-8709-4893-bccf-ff4a3c8eae36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h0D43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #864 357f5838-9398-4e1a-afa4-6f37d74ac55b)");
unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #864 591d0c52-f9a4-4f56-9c32-40f4cb4e488f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 0037befa-7ad3-4e82-8bf0-9360f88d7255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 33b00870-a4ae-4431-ab32-4f468cc14d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 d07c020e-b3ec-4c3a-9241-167aa52e90c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 a4e87a10-c8ca-4fa6-be13-6268b5aa4a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 3b47a26d-140d-48d4-9634-b2efc1907973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 b48c703c-3662-4dd2-b91a-9dfa84c4c217)");

unit.assert_eq16(16'h09D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #864 29fbdde0-dae9-4131-a7e2-eaa6ad1f3f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h0EC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #865 d5b00538-9112-4dc4-a3ca-a6a166c610e0)");
unit.assert_eq16(16'h04CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #865 ded466fe-f1a9-4291-95dc-afeb44b2c534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 2ac22b3f-3292-4d1b-a00a-39e3dc59801e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 7e59259d-efcf-4df9-9f04-c84674aeaed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 e96d48ab-ea2a-4365-b2ae-84ad39c479a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 c9211494-a1df-4175-a38d-486d9142c64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 47d2dd55-97f4-43e5-8f38-ba12e15adf29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 8689b7e0-842e-4468-8ced-4b7c110aebfc)");

unit.assert_eq16(16'h04CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #865 d55bf447-3c20-4c06-905f-5e99141db774)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h025F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h0B76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #866 10a48b28-8990-4822-abb6-1ebe81ab19d1)");
unit.assert_eq16(16'h025F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #866 154d2032-8033-439f-a7ed-a920ecb2ba8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 2590cb01-ab04-4430-b0cb-b10b6b8e9587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 0289028b-317a-4fe0-a3ee-9e0ac0227e83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 628f7807-cb12-4942-ac2c-61543294ba0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 8641d032-2364-4cd2-a27b-8fbdb1afc9f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 e5876dfa-31f1-4d3e-94a8-56aa61e8cbdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 54d03bd0-a2ee-4ec7-8bfb-7a98269d7216)");

unit.assert_eq16(16'h025F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #866 f0d5b430-9df5-422e-8bfd-2d1aab1550b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h0AB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #867 1baf1aaa-3938-41dc-aabf-919e237b55c4)");
unit.assert_eq16(16'h05A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #867 fc2903f6-5d9a-44f0-b82f-e850f7560ab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 9d6b9406-0dbf-4bbe-9c89-b1bbf191bb0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 b1b6f6d0-5f12-4440-82e2-f51b4c38f1d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 50ba3fda-f016-4a9e-be0e-7e057468e785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 f5307e58-f1ed-4b55-ba63-7442c2d34a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 f92b3d3b-e780-4bf8-99b0-1cdba50110eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 56666ecd-5cac-4da3-8dcc-5502b086ddea)");

unit.assert_eq16(16'h05A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #867 2381432a-043e-4c50-8a46-1abfa7ad8c96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h0CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #868 ac9dfabe-2577-484b-b41d-0101bec93d97)");
unit.assert_eq16(16'h0DB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #868 766db3a6-91cc-452b-8bd6-5988a04fc9ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 75a4aa2d-402d-40f7-983e-074f22bf0f5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 bce737cf-711c-45b9-b944-298db1590562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 0d6a5b6f-e206-48c6-92b4-4c7af5aceade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 1cd8de93-4053-44ff-9df2-15982aa6739b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 ec638a41-a534-471d-9b6a-d8f75568a9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 4fc3729f-736a-419d-8271-fa3331100fd6)");

unit.assert_eq16(16'h0DB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #868 f70254a2-bc88-4a1e-b791-964dd9c76064)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0971;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0624;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h0971, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #869 d79a2d09-042e-4032-9ec0-16ad08445967)");
unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #869 545b34c3-74e8-4934-90e4-e5d5bbb5c4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 0d16df97-ec5e-41e1-b413-b21ff5bcdde9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 b4250307-e56e-4f52-95e2-ccc75ad3853d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 f7efde84-2748-42b7-b750-fc0ca9477559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 f7cb41da-b188-45f0-9f70-261a257cb034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 bc8ed8f4-317a-4b51-a87e-e8cdeddab5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 17fb9b62-2b58-4d80-b1c9-82ecd726e8f6)");

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #869 c320d625-8385-41d0-b637-3d9867eda410)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h0619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #870 50aca67b-e980-4e4c-abd0-215cda70553b)");
unit.assert_eq16(16'h02FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #870 fbbd0c63-18d1-4033-ad93-0ff395e2a5b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 b6ab7ea5-47ee-48a9-a51a-e4b7f76ac889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 adb42802-2bf4-4cf1-aeea-120675408928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 26f36a18-8443-4ded-89a8-6ca92cf3d69b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 bf172473-34db-403a-b181-300f25cb2aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 2e351701-0f2d-490c-94ec-53f352f04445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 f674d5aa-5be5-4ea9-83a4-6735bd5a2e27)");

unit.assert_eq16(16'h02FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #870 33b61fc5-b58d-4c5e-aab6-5e2452316372)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h058A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h058A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #871 c286565c-ee5b-4521-9fe1-dfb4495d276c)");
unit.assert_eq16(16'h0CAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #871 bb14a301-d27e-4afb-a207-60382dcdc41a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 d6c23a8d-76d5-4b5f-87b1-40ff19b7b8f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 51a31bf9-b9ea-45e4-a52e-0ad3781245ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 e83308dc-9083-4aa0-9ad4-83d258193e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 cb486a33-1b54-406f-9f0c-6b75ec16a269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 6c0dafd3-9a0d-4418-83b2-ea518ad19cde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 f44704be-2ce8-4ef6-80c0-f55273b98a1e)");

unit.assert_eq16(16'h0CAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #871 ad1a23aa-530a-469b-9814-f7bf6aeffe5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h0BE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #872 84cb5e8f-a649-4747-af6f-2ead2deaa67e)");
unit.assert_eq16(16'h04CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #872 24bf91c5-2af1-4c1f-8547-b340615381f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 2c7048f1-403e-4855-a792-ca13f5c4ea13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 3a773998-40b8-4fa1-a803-fd81af2ef20d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 d8adf23b-b314-4771-9368-35e7634cc85a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 6fc0be75-9396-4127-a17c-5fdc3ebc5fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 a2effff2-3cac-4bc3-9ca7-eb5135a855d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 26f25b80-75eb-42fd-9a56-a9234e008976)");

unit.assert_eq16(16'h04CA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #872 954105e9-bd51-4e18-82ea-237644815b44)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0998;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h0998, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #873 96669d9b-1570-493b-bfa3-b40ba587251d)");
unit.assert_eq16(16'h09C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #873 6e47ff1c-8874-47bf-b83d-4960d32a136c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 a38bffa0-1530-4887-9a43-d3c411dbe061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 291f4d38-9803-4ef9-a614-43c54511daa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 2e5009a1-131f-435b-93a8-3016825ae89a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 b4c41844-26db-494b-874d-0607390acef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 f3026568-c627-4d08-8432-4ca2ea6cec2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 6db6ff3a-5e46-411b-8ccc-1c59b05d23a3)");

unit.assert_eq16(16'h09C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #873 d86e6efb-1f95-4d27-9da0-7c4d02ff8805)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h038D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #874 52342018-9483-4557-aba7-44c084163c7e)");
unit.assert_eq16(16'h0E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #874 dadcb7d0-e019-43bc-a64f-da7b74673510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 d9cceb53-4806-4a83-875d-ee69cd29e4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 6ccb8441-f7d0-4182-9356-a17d764ce2c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 efc2614f-58f3-46b8-a7a3-be800d7c9f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 e1adbb8d-927d-43c8-af48-d91596035184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 68126a03-cb67-480f-affa-d62499d341e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 057f9b3b-adbc-41d9-9dd1-0ee0f07f120c)");

unit.assert_eq16(16'h0E01, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #874 411cbb7e-e8a3-4ef5-ab77-07e178cbefaf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'h03AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #875 cf5ba749-1db8-4ae9-8082-c85794678913)");
unit.assert_eq16(16'h06DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #875 cacb1cc4-0643-46e6-b7ac-2a4418f96330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 bf19e71f-fa2c-4244-98cd-fb8e70a6c487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 559a9bbd-1d8b-4a44-aa19-239d8bbe7b74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 12ddbc87-86ad-43d0-a41b-3400d64b104f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 0ad609c1-e90d-4ae5-9f8f-fe6a72a52e70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 c1ed5225-81cf-4a0a-800b-6e1c941eac0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 797a15c7-3503-4c0c-8d83-a11ce71f4b55)");

unit.assert_eq16(16'h06DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #875 99d3ab4f-3959-4d2d-8766-2f19a3dc694c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h00BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #876 1a232bf9-bf8b-4ab2-a8b3-9ddc3d44a8cf)");
unit.assert_eq16(16'h0E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #876 615231dc-b976-4919-8fd3-9d0806c4e9fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 1b42fb72-cfa4-46a7-843d-98071890a54b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 5b3231e7-de58-4a5c-90ff-ed9a38225448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 cf73840b-a596-47e8-acc4-e23b410d1bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 33dbf820-c4e5-4569-abfb-e50e1087d16e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 9e62f996-c7b3-4073-9a4d-18c9cc4b0b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 ede205e0-ceed-4f56-b41f-e536d5ab394d)");

unit.assert_eq16(16'h0E17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #876 fbbe6757-d04b-4a40-8c4b-5905bdcbe6e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h03FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #877 9ce549c9-c748-4dec-8819-e868ce99db48)");
unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #877 0429a587-7945-4b86-9e2b-36e34ff568cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 9ee0d2e4-6445-48fa-a793-11c00e9312bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 ff3b8eb6-f760-4655-a080-d6909e571713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 c80af23a-5e65-40aa-9ffd-b49f99729757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 3a7f485b-d629-432f-8bc5-283634a30966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 e64e2a67-0f94-4cdd-8ba2-f17020697f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 c0958b89-3703-4107-89de-23dede960462)");

unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #877 f0bd4e96-525b-42dc-bb03-a1dd05fae0f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0811;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h0C0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #878 931ab1e1-203a-44bf-8b55-f8bc8fe520fe)");
unit.assert_eq16(16'h0811, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #878 dfcd2d66-2028-4cd8-9839-5cfbf67ef959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 e5728ca4-bb0b-4d94-9081-55bce8e733c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 42716d5e-0ade-4baa-b353-c928aee51136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 0b18e0f2-0429-4d33-a588-85a80c4013f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 23ea0f57-2453-47b7-867e-a9d1f4ace78d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 d02a6848-3349-402a-9ee0-d221ba9a593c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 e58cb3f1-b9c9-484a-af5d-e9f7fac3c23c)");

unit.assert_eq16(16'h0811, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #878 5e0553fa-46e7-45a1-a09c-51dacfd25ce4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0395;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h0395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #879 5d186ff1-b987-4dde-9fc2-285fba676dd6)");
unit.assert_eq16(16'h0FD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #879 13b2b680-a1d3-4523-bf29-43fe1b9410ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 00dfba9a-de33-463e-a745-9a92b9563076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 a56a3ed4-ee0e-4496-906d-1c80512204d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 68f7859b-c7a3-4bc7-809a-9291aaf6ffa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 66e05282-c0ec-4819-b4dd-e46b724745e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 5eb94568-8da3-4cca-a925-0e33e1168375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 00de3171-cdef-476a-ac0f-40d0b422d985)");

unit.assert_eq16(16'h0FD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #879 cae9afbf-6f46-4443-97a7-45f86ab10f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h071A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #880 ab1f229d-c216-4e76-8d22-894f74bb899f)");
unit.assert_eq16(16'h0AF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #880 236a8ccf-9753-48f3-8f91-501ead49e059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 a578b2f6-3467-4822-b513-59075f82c4ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 3ec3939c-744c-464b-8693-7c7095e49a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 bdb54722-863a-46ad-9842-6414d4ee89d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 4edfa27c-e761-47da-84d5-4b8da5b85105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 a033e634-2f19-4801-bc5d-bd823c05b2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 85bd8cf6-a3e9-4422-b4c9-821afbb8094e)");

unit.assert_eq16(16'h0AF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #880 2de39352-2dc1-4840-8639-0a68fd583802)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h016E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #881 39168af4-d732-4c3b-a03f-6faa909b4311)");
unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #881 9bb6fba7-1bff-454a-8eaa-9d8c942b82ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 0f159a85-22dd-4f52-a174-8348804b193b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 5e6dacb3-aadd-4903-a9e1-b84b8c69177d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 91b757ea-d28e-4e66-9d7e-8047eb8da353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 286c1aa8-6b7d-4f4e-bd22-b8350fcb3344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 6e5432a1-b44e-422e-9b32-d6b433af85cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 84e93c03-ac0f-4553-a846-8b844775c2e1)");

unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #881 87e95fd1-c22b-4b5d-8aac-270337a23f01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h01FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #882 b68933cf-07bb-4e58-bf32-00759927c7dd)");
unit.assert_eq16(16'h0783, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #882 48705aa2-03b5-4307-b9eb-6c4eb847f033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 805c33f1-cbc4-4dde-b54c-faa9e69bb836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 98247d7a-98d9-4bba-9c2f-ef92be5039c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 1eb2f9c9-2249-413c-9d09-5a8cb93157ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 5689101d-471d-465a-8f85-9deb82bf2087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 7787a61c-235c-4688-a11a-d5f7584f04b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 d2a9dc9b-992a-43f3-a0f6-617f4d259af0)");

unit.assert_eq16(16'h0783, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #882 c4b535a6-f9e1-4184-9141-3cdafca1d3c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #883 e0a96cc4-f7e8-4b76-948c-7af3919801bd)");
unit.assert_eq16(16'h0DEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #883 d42693b7-0b30-4ab9-ab1e-10986be7b7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 cb9a80e2-7543-4792-b1de-96c110917268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 00c61f3b-fa01-4e8f-a453-43950b4e325d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 7e6cb9df-a1fa-4bc8-89bc-237edd6e5b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 8ac2b116-66e7-466f-ab7f-3290bcf6f15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 378078bf-372a-4a88-a045-9e8eebca1a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 717b15a1-ba0e-490b-83fc-4a7bfce228a6)");

unit.assert_eq16(16'h0DEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #883 abebc223-f41a-459c-85fd-bd6f4c03c09b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h05B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #884 ea4c8ead-8a14-49e9-a0bd-500d2fe71a53)");
unit.assert_eq16(16'h08DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #884 3e079ea5-c05c-4174-9bf1-32cb79d4ea30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 90d455a6-981d-4a19-ba83-00968f236159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 084d8a12-2561-4781-87d5-8748c5669de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 17cf3a6b-8c19-47cf-9329-355fbfad67b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 6d8f0ff5-8fe1-44a3-8b33-fe50e25fd5a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 65257339-5ade-4f85-8053-bd19e5525e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 b2d603d3-4d27-4446-8cd7-f9016dc3cae9)");

unit.assert_eq16(16'h08DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #884 5b6f8aca-f082-4afa-b9f5-f33905c3b34a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h0017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #885 6d588805-04f0-43d9-9a8b-058fdf61b6a2)");
unit.assert_eq16(16'h0F7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #885 d27ee400-3fb8-447d-a79f-c6e0a4efc736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 ea8839a8-9184-4237-ac65-bbb1c5084012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 c84c9954-f8d0-48ce-88a6-6109cd31c92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 203e0d7a-f352-4a22-ab98-06da8861d250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 0b68853e-740e-45b6-a308-828eb6038b85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 3c60d5e4-6f11-46ad-b50f-9f5c208b7616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 597278b0-c11c-4263-986f-b28f806aafc2)");

unit.assert_eq16(16'h0F7E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #885 75333ba8-4487-4915-9b10-2df56a280133)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h0C03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #886 0b9554d3-a538-48f2-ad43-edb9a11d3d07)");
unit.assert_eq16(16'h0B63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #886 50e44ff4-f539-4080-bc52-ec0e5719e784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 95e62829-9d5b-4484-ba83-986e19fe8394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 389096e7-0791-4778-9377-b631c27a673d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 55be9012-38f7-4033-bf44-6491f683d143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 67962a5e-f705-44a5-978c-101557757763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 efc1608d-e628-4ca2-a79a-2102b075eed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 1bf0bb02-2942-4b9f-b659-816a39543590)");

unit.assert_eq16(16'h0B63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #886 d71d5f04-15a5-4332-a08c-e61fecfbb7d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h0CF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #887 108802fb-f487-4585-93ba-5f233346082f)");
unit.assert_eq16(16'h07AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #887 9d5b9e5e-344f-4961-acdb-6f70d8919943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 daf148b5-2068-4bac-989c-e39f57227350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 5417542a-7a4e-4354-8a32-446b59f6577b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 579b873e-ceeb-47d2-bb07-3b2b74d28ea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 7f7be422-e71f-4d01-9e92-7e1c80c78f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 c6d7dac2-5893-445e-bb1b-9e7305ef57c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 89a5285f-05eb-424a-952e-538195ae695c)");

unit.assert_eq16(16'h07AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #887 cb8ec82f-f250-4c5f-a2ff-83feef9b6051)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0523;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h0DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #888 0d983c21-c8cf-4b74-a308-db746db15a07)");
unit.assert_eq16(16'h0523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #888 459a6c97-700e-4994-94ea-bbc36ce5a5ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 c14509d5-be40-47fb-94cb-ce6967f2ca87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 7c686454-66e2-45d9-b891-6864e17423b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 6f4ed0cd-14de-42ba-86ed-cbc3779d0c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 2b2dbd9e-ac8e-4948-a3fd-eeec376dbfcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 452c4455-d9c8-467a-9db3-5250eeec5daa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 700de5b8-a085-4802-8a75-45d5605123ca)");

unit.assert_eq16(16'h0523, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #888 52b3d561-1dc7-4666-9d41-2b5975e5d27d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h0C44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #889 2f2c1bba-58cf-4b1a-970f-2dbe6aeae4f3)");
unit.assert_eq16(16'h0E7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #889 518769e0-0d2a-4ca0-a2fd-f5645e169801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 b2aa8599-ef40-4660-93b7-b4877b747bcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 8a031217-1289-44a2-a041-3be05c63d152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 900dbbff-b2ac-4d1a-8f28-9c19ff0f4ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 8df8752f-6482-4e16-923d-c784f73ca2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 a09b6baf-5a44-4c16-9565-725142286aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 4c00429f-cced-4738-a5e1-8b3dc679e71a)");

unit.assert_eq16(16'h0E7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #889 2ecf7399-f453-455b-8a3a-c290ac89d99f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0059;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #890 0c1b2887-225f-4e3a-8375-17f03418d6d6)");
unit.assert_eq16(16'h07F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #890 1272a418-756c-40fc-85db-14871827d255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 72540510-ba7b-4b8b-bb8a-9c9b7df97253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 1217c111-52b3-4fb7-9354-9704e64c1c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 406c9194-08da-4a03-8837-0cdd7500f4f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 b12b4a5d-40fe-460a-911f-70962ead6584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 57990fdd-d53c-4dba-b793-6810900f25b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 9feaead0-8f99-41c8-990d-901618be5267)");

unit.assert_eq16(16'h07F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #890 a5bfaefc-53a3-4b61-b80c-89ce105daae5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h0EEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #891 faf75b0d-7cde-4779-adfc-d124ea4d3626)");
unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #891 52469651-9cf7-4789-976c-fcd6375daabf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 a2ad045e-ba70-4ed5-aa97-5862f94ae9bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 42535922-f4ae-42a8-ac09-0bd3b635f5ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 600c7bcb-2405-4f47-9760-195bbbcc80d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 fb349413-8d9a-4333-9389-a07c6b8dfcb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 fd80682b-2de3-4919-96b0-8773bc69d93a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 a6f4df6a-31b0-4d54-80b9-1710c9743ca8)");

unit.assert_eq16(16'h0EEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #891 b1070fc9-72e2-415f-8e83-5bb5bfaa5abb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h0AFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #892 6b1ad93e-af0d-49b0-9f00-944ae512dc64)");
unit.assert_eq16(16'h043D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #892 297c7b3d-b074-4b0f-8099-77a7a90fbbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 84536dd1-a9df-412b-91a7-0010c8164f24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 b3bbfde1-4aa5-4805-875b-192c28b28fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 892d4cfe-4c4b-4e0b-b7b1-1024b1dafc3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 c3b34cda-bb5d-458a-8236-1003d8f7e5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 58e2890f-2b92-472b-962a-a75911d9de36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 ff37a5cd-b119-4a4d-969d-e206e21d6a4c)");

unit.assert_eq16(16'h043D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #892 a9fc9062-bf9b-49ca-83a0-af0606a92f42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h0FA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #893 f116fb70-e86c-4c0e-ae43-d990e668401c)");
unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #893 048f600f-b2b8-41b5-8a08-e967aa748573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 2fe91f63-36d6-4d24-a7b7-a58f3f8e8ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 8eae637b-ca64-4d01-9360-6af34755a426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 9fac9158-74b9-41c1-b41c-bbafa2284cb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 1f6b2e51-3456-4458-9252-d9c94f768eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 1f76680d-f01d-4af1-8764-c816331fc1b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 3db6db41-a0ed-47cb-adcf-32769190ee2e)");

unit.assert_eq16(16'h0517, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #893 e9b1f6e7-b06a-464d-abed-087e207c5978)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h00F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #894 e4397fd8-c81d-4b3a-a068-2d27803ecb95)");
unit.assert_eq16(16'h08A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #894 c90ecb35-619c-4998-bab9-43bb14c2e8b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 090166d3-60a9-4044-8262-cafc8420800e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 29c1565b-f3b1-45d4-bd34-7ebb15191dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 b38b7c3e-d378-4b01-aec3-22f0a0a1554a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 85d76d91-c747-403b-abf0-b004b1e21148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 9491339a-e882-44b1-86b4-514e104bda00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 d840ce61-218e-4163-8bc8-554c38bfd89e)");

unit.assert_eq16(16'h08A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #894 97f034b5-836d-4361-941b-7b7372d46bd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h0E4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #895 c83cdc3d-2623-482a-bc1a-f6928aacc999)");
unit.assert_eq16(16'h0CE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #895 1c1eb32e-41fb-45e3-a3c0-e246b04f26c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 499ba47f-1d62-46dd-8c5d-00e4827a3974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 a728c99f-6e13-4116-929a-8d0c910776f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 f3aab365-8102-46a6-8f49-1c3c4dd450f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 c88bfb5b-1fc8-46fa-ab65-f3a537c57d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 d501d158-f517-4934-80fc-45edd2473303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 5f372df6-9fb7-4271-9a6f-76a145ddaa30)");

unit.assert_eq16(16'h0CE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #895 fc189536-bcca-453a-bc1a-484a069f5814)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0700;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0201;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'h0C57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #896 f6ca173f-4427-43d9-a1b3-8c722312f420)");
unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #896 a927deb1-26e8-4948-96c0-5daa2e0417b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 af474167-b2d7-4c6d-9b37-e7a4b4924e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 7b8cb19c-53bd-425a-9d5a-1458f334ede1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 eddd6695-4603-4b43-9164-e95d57d2b1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 58462b50-2538-43cb-bc09-5414fea24567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 89464c91-f2bc-4d09-a809-28d9863e5cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 4802ec2f-321f-40d6-86eb-50131c872b96)");

unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #896 46faa1d5-0ce2-4c8a-bc9e-7f216d94a03b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0702;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h0B8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #897 f20d0a94-bafa-4c86-8af0-91fb01daacef)");
unit.assert_eq16(16'h09AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #897 b19dd787-f853-42b2-8947-a9428a6c499e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 3ca4f201-1cc4-47ae-a3e4-bcd0397d2db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 3468d9c0-72ab-41c7-8d40-897efa34f9c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 40208b3a-5e53-465c-a7fd-3c08d3bcd735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 65cdfa9e-4bc5-43d5-a4f8-fd9bc1aadfa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 72af9f4b-e331-480f-8031-787253416bdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 e544ae9f-c334-452f-9399-8bc3131bebb9)");

unit.assert_eq16(16'h09AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #897 4e7b0f55-86c1-496f-a141-3b892537ae3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0704;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0000;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h0000, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #898 167e763a-b02f-445f-9a1f-f44b61e3356d)");
unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #898 7adf4bc0-e80b-44dc-be71-747864be808f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 3a5a3490-690e-42de-bf0d-24dcfdc0f686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 ef3071cd-8c60-4d78-ba8a-8fb1cb49d71c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 4cbfff79-648f-4921-be1b-3d8fedfb8ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 37ca5a6f-27ee-4555-b6ad-4c2d623fd9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 bfb40adf-fd75-43c2-8d04-498c2f403a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 a7e679ed-f91f-45c1-94c4-ec9dc86ce0ef)");

unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #898 08665725-4048-4ca7-beae-52c643724734)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0706;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0048;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'h0048, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #899 edeeb674-ded2-4e33-803e-fcf999ebea6e)");
unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #899 aa4e7f8a-7649-4f69-8d07-abc34c077b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 6ed417ce-ba42-4fb2-bc4f-436362cae0e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 48d80f56-1a1e-4c2b-88c1-de154ff91de3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 d3be79a8-c9b6-445b-9750-0bcb4ebdc381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 c08a5296-d4aa-4155-ba55-748b26f2fb54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 d9217a50-bdb3-4938-a1d2-084151cfa3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 64dbc2ca-6b02-4393-afcf-916df79a0e7b)");

unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #899 bc3134a6-440d-4324-b563-50bae8309fa3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0708;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h0C5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #900 0fda5650-a426-411e-8df7-94985f8822e2)");
unit.assert_eq16(16'h06A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #900 86d3cad1-71e9-42fc-a904-f1dc3cbcb199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 5f070242-c135-4c8f-b803-0895912babcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 8b078886-f267-4e0c-ae79-da3d3ce21eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 e54b8e48-72d7-498f-bbfd-5a9bd6dd804c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 d28d6cbd-e456-4e13-bd93-c4f517fcf8c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 c9b82bd9-1a12-47b7-bd0e-f922e22589ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 aa34c405-8838-4dcd-8337-efd9d6388b9b)");

unit.assert_eq16(16'h06A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #900 b83ea252-d9a3-43aa-bd69-78aaea47f992)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h000D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'h00EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #901 153096ec-0581-4df9-aa5d-e921da532e9d)");
unit.assert_eq16(16'h000D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #901 16b2ddf8-d7fd-4b0c-a2b5-7892be40eb86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 7a35f562-069e-495b-8ffd-b992c284ed66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 96f92bf5-2192-4c67-8c4f-cb9fc3dde211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 57274458-4cef-4ab3-b9df-0d059e293db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 6cfc17fd-4fa5-4727-8832-608845f64b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 ca5d1def-cda6-49a5-bd30-40fa2e4e6dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 beb4b8c3-3c39-466c-9fbb-6246d2c58a43)");

unit.assert_eq16(16'h000D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #901 56825fb9-d1ca-44ce-9a93-befb6dcd73b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'h08DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #902 26754ba5-f406-4aa7-b42f-947dccd7139e)");
unit.assert_eq16(16'h0A1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #902 bd19e5b4-f02d-47fe-bd71-7f05ac2e6213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 f7b237bc-3d36-4a34-b5ba-b8688621bda0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 316a2da7-db60-4209-afb2-959feafb8c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 48b4cc90-b8d9-44d4-a834-f3464fed2360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 a6566707-cd7d-453e-b145-ecfc474d9c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 8376201a-c295-4c42-9e82-aa1f7309974a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 537c35cb-5e99-43ff-b00b-808614af7ebe)");

unit.assert_eq16(16'h0A1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #902 51e18e87-20b6-4f6e-813e-bbbf97ad213f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h02D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #903 2b4fd37b-6b82-49b8-863e-97b97702e56f)");
unit.assert_eq16(16'h03DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #903 fe786e40-5099-4de1-bd99-63c794e80dad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 148db39e-4b57-4abc-b3c3-bbdafad89b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 abab2347-9510-4df2-8108-fc1dee3049f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 19635714-63e7-4672-b0a5-85a0e15d9ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 b0527632-f994-4388-a336-67206da4d093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 dffa65b5-282b-477c-8c26-efd10033721c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 0f20163b-ebd5-47a9-a275-fd489ff6426f)");

unit.assert_eq16(16'h03DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #903 421f0344-b6a8-49d5-aefe-40be7e417de0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0710;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'h03D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #904 8d85233c-543b-420c-956a-7fc771d44d46)");
unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #904 2b87f7af-06ed-4f85-b66a-63b2f5c45cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 5c6fff5e-7169-4a51-bc76-b29880756211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 138eb257-3ded-4b3d-8fa0-3050014ea495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 362d4341-0a36-472c-b52f-db22faf01031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 db56914b-41b9-46cb-a385-41cd4199d753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 67e42140-7606-41f7-81f4-ccf4acae1717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 66787501-baca-4dae-9518-4427ce82e02b)");

unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #904 5f6875e6-04a5-4d4c-b3c7-774f721df228)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0712;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h09E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #905 a30cc543-e82c-484e-a0e2-38ec81025818)");
unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #905 4873766a-fbe8-4798-adf8-bc47eec8ebdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 3a4940be-5902-497f-9045-b778486d697a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 274912db-0d08-4282-9ea3-f5eda845fcf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 2fcdb9b3-72eb-4fbb-a4a9-a70dba72c616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 5518f805-0247-45cb-ada3-51d6c16f35b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 ddc2632b-6918-4941-8407-8be85c1de6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 8b629202-2cf8-4a74-ac57-fa95941cb156)");

unit.assert_eq16(16'h07F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #905 afe806df-4fd9-4eab-a340-842f191d0983)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0714;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h0BD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #906 6c7a336b-771b-43a8-b6ff-689d93cdf3a8)");
unit.assert_eq16(16'h0CFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #906 9f52add2-2cfa-4f20-8d77-a5975d1ff147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 b34e05ff-1e06-46ee-9b25-8b72d8ffd905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 c73063e9-5321-413b-b789-04d2e1f25051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 307ab0b9-c65b-4e0a-9429-00d562a80080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 f8ec763b-8cac-4788-8c5e-6b9e3c5b8262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 2bae184c-b5ca-46d3-9af9-1d7356a4d671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 769d1261-e512-4e46-8efc-ab677d41ccef)");

unit.assert_eq16(16'h0CFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #906 fcb79dec-fff3-4317-9a63-57798c42e64e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0716;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h0DCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #907 e18aba6d-bfe2-4ceb-b6f6-83fe2dd35a6f)");
unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #907 28b96e93-f09f-4d98-84dc-8683aa65437d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 be5c1dfe-ec91-4301-9546-8b0156c38a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 8e4532b3-e78c-4a47-95cf-4c0b86527573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 4896f72b-44b8-4adf-8bf7-7d0adcf1cb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 93a9e3a3-2bc6-4066-af33-8a530e046893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 217ea8ec-a2d2-4125-af2d-64c2b5b2be3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 5e87c4be-5fb6-4fb5-8ebc-239f232207c8)");

unit.assert_eq16(16'h03D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #907 4a375534-d7eb-4f66-b6b3-e1cb550b30ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0718;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h064E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'h0C00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #908 428f427a-4b6e-4e00-a41f-29d3ddeabe2e)");
unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #908 2da7a9d5-6dfc-479d-9eee-23674b34d956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 df2fa751-e087-4310-a3d3-59e400ffb9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 6fcbacb6-5cba-4b27-9e61-25347e410f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 f1375038-e8c5-4b41-ad10-197b11e77287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 4a28b760-6000-4b9d-9c54-b46da3da082a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 f0d2e5f9-9316-4c24-b0f6-10d8086b8ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 09d0d16a-1242-4e8d-bcfe-8ae0220b70b1)");

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #908 db10eec6-8b04-4b2a-825e-0e0ef385fc89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0213;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'h0213, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #909 10a9ce43-83e0-408c-ad1e-98ed325a3af6)");
unit.assert_eq16(16'h0F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #909 abfa0c72-4e02-41f3-9395-1e396468227f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 39ea8e04-8fec-4152-b076-cfbc24a9ae31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 901374d4-39c2-44a9-bcb0-cea3252ee6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 640a773d-3422-401d-9284-3417981b6ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 e0cdb7b3-301b-4843-b434-be31becf6d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 929d6eb8-7ca9-405b-8814-5bba54a3a521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 529827a1-f602-4c7a-9739-58e929b57951)");

unit.assert_eq16(16'h0F7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #909 7711bc87-624f-4025-9571-2df03fd19693)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h0DF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #910 8f838ec6-3312-4ff3-8509-70be3da2be0d)");
unit.assert_eq16(16'h06B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #910 ed587b43-2349-4928-8440-48865cc455c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 5541c55b-b541-4a06-a674-f2164daa570e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 a2da5b98-b831-40a8-b87a-62159c89f560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 3eae0ed7-46fc-47c1-873f-ba50c00223b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 d491011c-47f7-4163-b9b6-c9b19e17e0de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 64f0852c-35e1-407f-bc91-27f44a34b4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 f54ffb63-32cb-4ff3-ab2a-56e192851fa9)");

unit.assert_eq16(16'h06B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #910 c5855744-6a7d-45d0-b162-f31ef0852b1a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h0C3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #911 579310e7-aab3-4dfa-8707-f3c77c1cc0e3)");
unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #911 4ae13312-63e4-4ddb-8f13-e6beb3fe7ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 f1b11639-b341-4b20-8d4c-c01cdb934ba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 7a0abb55-6abc-48b1-8c67-1d8b9e6a8869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 f6d5baf6-593b-42a7-bb9b-d19625e689aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 e4dd602b-1cdd-4c5d-a26d-71a8dff0f5ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 4f888c22-0b43-44f6-a896-b617bbee834f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 35b70c7d-4a77-4cfd-83bb-e3d6fce7c200)");

unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #911 e1f24088-5d84-45e0-9e7c-4a403dfdb551)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0720;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0030;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'h0030, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #912 1a3a3635-c37a-49e3-b65b-01c80b5d4419)");
unit.assert_eq16(16'h0B8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #912 4eeb6236-1f7b-4b9f-a9fd-8f88b2456079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 207bd99f-0259-4100-af1e-c93848d291d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 444b0db0-898e-406f-9000-79e61b6f8da1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 ae44a7aa-bf9e-4f93-b829-ece6cbe5d4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 a4e940a3-75b5-4c86-9504-8263ca774ad3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 64b5ae43-ff89-40f8-8131-38379c24347c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 3dfdb238-04e1-4863-93d6-56cdb3d4ff64)");

unit.assert_eq16(16'h0B8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #912 bf16334b-9bd5-438c-a3d6-cf4a60aff60c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0722;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h01CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #913 32c68280-d25b-4151-9e66-9e3115caaf41)");
unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #913 0dced74e-1015-45d1-b5b6-17fc2a04d632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 86303cfc-6818-4ed0-a237-57a5e119e8a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 f2b7e1ed-c48a-4fa6-ae78-6c2bdd0f41da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 f25eb332-747e-4bb9-bdb4-9b88298b4779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 95194b79-65ca-434f-9cfd-c60199f4eca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 f42e45e9-4634-4160-bd24-22e50596f163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 31b1f6eb-7d69-400a-8cf7-bd3113060fb7)");

unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #913 17099c3d-e154-4245-8e26-42aaa98cabb8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0724;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h061F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0273;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h061F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #914 efdfd100-be25-484b-b941-7e9745f7e83d)");
unit.assert_eq16(16'h0273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #914 117bc779-7ace-4e2c-aee0-78d9f59a065e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 1d24c53f-4e46-4c34-b5c4-bb1f0f31e60a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 a5b92858-3352-48a1-b9b2-a4ff3cc2124f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 ab8410a0-c429-44b5-b22e-354e0984c3d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 5636da3f-ede3-49e8-beda-9b214d1d5171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 f2f69057-0f0a-4b49-84c8-3f24b23177ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 d0b141b0-36d9-44ec-beec-2e12d1f057cc)");

unit.assert_eq16(16'h0273, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #914 78b0509f-cdf6-4754-9d35-625fb8a93b62)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0726;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0983;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h0983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #915 39276ced-e7c3-4ba9-8743-953ecf5c2ccd)");
unit.assert_eq16(16'h07A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #915 ea1c7ea2-d77d-4d8c-911a-f9ca21f3739d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 dcf8351e-0428-43e8-b880-ff342a981d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 bb672cfc-e7a1-452c-b940-7afdbba4b84b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 1644fa98-9a30-4936-9182-b9441d7295dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 254a4b9c-0253-48c6-a377-da12acca4443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 7583a8c8-9b7b-44a4-959a-11c9b8298e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 70a32bf0-9619-4138-a81a-1b90776cf84d)");

unit.assert_eq16(16'h07A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #915 dd64e4c5-6692-46a8-9cec-99867921aa9c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0728;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0217;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h08D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #916 e2d526e8-a13d-482a-b89e-de577f206a24)");
unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #916 69923e91-603a-4293-b7b8-a729f7ce6b2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 f96fb8ce-5ede-4ff8-b139-4b8ced50e37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 68635f77-ddd8-4007-ab9b-06de5ba47f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 49099243-93e0-4fd9-84b2-3f05c17c0c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 2d79408e-d05f-431f-9ae3-0b08d19cf4c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 ce732ed1-1683-4519-9e5a-c46e2282b5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 978286a4-207d-4e97-b28c-0fa99aa0a357)");

unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #916 bceee6dc-2012-4601-a43e-ad6c9571abb4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0737;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'h0737, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #917 e67efeef-199e-4aa2-850b-067223b21ce7)");
unit.assert_eq16(16'h05E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #917 9c6225f3-65eb-40c7-878e-941d0f00a2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 babb92af-e3f5-47b8-bb08-1fdb1a051f32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 9062c984-c9a6-4c2e-ab6c-d9988b37ffc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 936cfb38-62da-40c7-8987-766ff381e090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 55ea0d89-2869-4db6-983c-242f29c00d66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 ca76a883-2df7-4c88-b3f0-0402ba295533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 fbc58fbe-9935-4d58-88ef-50687e27e80f)");

unit.assert_eq16(16'h05E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #917 e4658083-0c0b-42d2-bef0-286c6ab64234)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0845;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h0845, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #918 b79a3b31-d4a5-4aae-a4b5-12f5685ef011)");
unit.assert_eq16(16'h07CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #918 7e4892d1-fa61-42e4-8f79-297f6ef27246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 2071bae6-908d-4251-97ac-cceeaa0cf2f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 9cee42d2-431d-43a3-8e3c-a557768d505e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 989ff8cc-30f7-4f27-830e-53bde9fef2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 ea11c21e-971a-417a-bf18-48057025b358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 9ac51c1f-43ad-4490-b6bf-c901a644458b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 5877357f-59c0-4061-83e4-db3e10ea4bec)");

unit.assert_eq16(16'h07CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #918 8170c6f5-54f4-4145-9184-b4f026775d27)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0048;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h011B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'h0048, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #919 238508c4-163a-49f6-80be-939f5d2ccb53)");
unit.assert_eq16(16'h011B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #919 65367538-77f8-46c3-a975-82d0ceac6768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 55f34cf4-3ca0-4ade-be66-9d9a29914f5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 76aebd64-b78b-4ddf-aebd-28ab9f21d290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 9635ff22-9c70-42c3-90e0-0521c41f759a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 20c8833a-5c00-452d-8889-54b897f2100f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 27ec91e5-ebdd-4b01-99c0-848291d780f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 a186e77b-835b-43e2-a3d7-780199d7fcd1)");

unit.assert_eq16(16'h011B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #919 4670ab92-215f-4690-ad39-ebe89ebc9782)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0730;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ECE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h0D0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #920 8a0d8972-2c78-4371-9a1c-ecf5dc5878e2)");
unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #920 34b618cd-12d1-4b8d-8979-5b0428df9e61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 a4f65fef-b147-4b75-9b08-469f436a9407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 d1ef4d05-71a1-4f12-9d0d-c42a22e3a6a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 f4ed6d2e-41b9-46f5-905f-3c132ac7cd9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 7c7cb284-71f3-4900-a9fd-cdf8285580e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 a5674c10-901c-4f20-8f37-c72beaa75c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 e1954c6a-8e9c-44e0-9f4d-db1de5f116d2)");

unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #920 54eed079-2d66-4d7e-9dc5-a9e23dcdef59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0732;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h072B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h0F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #921 791bca3d-21f0-4a38-ba9f-22a61029657c)");
unit.assert_eq16(16'h072B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #921 bffc0348-ba1e-48e8-931d-db23b161b7ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 f1542b3f-6494-4fdd-a135-4c5bddda8253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 c0a970cd-4e7e-4aff-b5ea-7add3203fb71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 af4f8cf9-38d3-4966-b97b-41a783ac62d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 7783b5f0-25b2-42a0-8965-4363d2a5783e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 62ea67ee-1330-4731-83d6-bcf12260c331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 277463d1-b6c0-4e3a-8638-6ae4c0850a82)");

unit.assert_eq16(16'h072B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #921 41e3ad86-5703-468a-bbe0-67a95068b340)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0734;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h0D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #922 24945a88-eb8b-4d68-9c4e-44fbbf05b264)");
unit.assert_eq16(16'h0F1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #922 d40ec2aa-4116-46e8-b8e5-051d5667a29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 39e7cee5-d463-4ea4-9efd-bf51b1a379b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 03c8ac9e-f535-4318-977b-4d8ed1cb9038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 c2fd06d5-ba93-4c5d-9cd5-ae92c9e9d4a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 0ace5f6e-539c-436b-a299-72b807e5774e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 2022b910-c777-4b82-9c71-6ed4948dbc99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 157e69a7-9834-4968-ba69-e09dc8ae3ea5)");

unit.assert_eq16(16'h0F1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #922 85fade3e-0b7f-41ad-a3f9-dcba383266e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0736;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0254;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h00DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #923 60a8bcb6-639b-4f74-9e52-87579cd9aa40)");
unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #923 ca4df698-30be-46a6-81df-b98aba8ca6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 d445c056-9aaf-4ab5-b231-cad3dff8d306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 744291b8-7c69-4748-9eb5-248a28a17ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 c4e6703d-a576-48ad-9fa9-7afd331c4e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 6d408991-2a02-476d-a37b-1fd8c6da8204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 9c8cd6b7-744b-476f-ac35-4baded5f5f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 ff97b364-9802-4e2c-945f-83c319f1b1c2)");

unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #923 0801a1b9-377c-4418-a53f-b651b47a9345)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0738;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0726;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h0726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #924 853a41d8-a5b0-4de0-bd13-78cb62790d91)");
unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #924 ba056aef-c5de-403b-93da-d6be75582c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 b819c27d-f973-4e76-91b6-3c6b1588884d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 9473224e-4ee1-4f07-bcb7-50ef7194958e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 7eba76b9-244c-4586-a4e6-74fe28ca32c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 458a4b2c-1b41-45fd-984f-b42197608d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 32ff2d93-c380-41db-859b-5cb3f0aa00c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 b1fa07cf-eab7-43c1-9ce6-8f03201a50c4)");

unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #924 a29f2cb2-dd28-4ca3-ba08-8140ead598bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h03E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #925 461dadcf-7af8-465e-a303-e1d1307ffb9d)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #925 b48a2bf4-1249-43a7-9e3b-4dd5ef0aca9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 4dc6a9c6-9d71-4564-8fda-3ffb29ff9303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 47368663-6cdc-4c9e-813a-2715d3d8dbec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 71f115ac-33bf-4205-afde-eac6d6859bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 8cfc22f1-ad32-4aa0-a180-14d5b58c77df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 0c13b2ed-0ee3-4599-b619-93c874a67fbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 d72442b4-6861-4e9b-8c9b-993c1e6fb8c5)");

unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #925 53cfa8dd-a232-4fa0-8433-ab931da13f73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0704;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h0704, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #926 d0a0c352-e856-4ac7-9f8e-a2e9e9b913d5)");
unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #926 4710febf-0bdf-4326-86fe-795ee33227d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 7a9771e8-40f7-4903-9240-ba573f8958f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 96b54daf-5297-4c6a-b682-2f245e0cc44d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 bf0857a4-ea37-405c-a7bb-1a4cb36697df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 090b39c4-e361-4642-853b-e424d9815c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 888046ee-ae31-44aa-849f-1143802c8306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 2cc75cce-bdc0-4765-8acf-63546672c5b0)");

unit.assert_eq16(16'h01DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #926 219ed3f6-fe66-45c5-b98d-f2afc606071e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0106;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h095B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'h0106, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #927 d6963273-b842-4c2f-b1e3-41acff54388c)");
unit.assert_eq16(16'h095B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #927 147bbc44-491b-42da-b255-3b0d5f7fef21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 e166ac4c-76a8-48cb-b4d7-d5e642ff114d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 b91c3b29-584d-4122-8969-8218d9ed40ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 d75e660c-aacf-420d-b6e6-28141c1cf444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 3f72f79f-9a8d-4767-894a-07d808cc181a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 46782c7c-19c4-4d85-9353-485ff2ed7932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 785eef5f-05cc-4f75-849b-57f1ee87b2da)");

unit.assert_eq16(16'h095B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #927 0f99c7e3-f087-4522-943b-57b3493df440)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0740;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h0B3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #928 9c2e0e91-2a5f-43ad-8328-f30b93aa15ec)");
unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #928 686def93-5d83-4e30-b4cb-c47d5e55ef77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 bf8c4225-5f80-4461-b1ef-7524508203ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 60d6578c-e83b-4b0d-8c68-ed3c9571a556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 64b242af-eba9-4ace-9620-bc781da89ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 f63de94b-7788-4c52-964e-bbde6ccf6ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 d1a42530-42f3-437d-9d5e-880bd9b51909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 171a98b2-44a4-4281-870f-7114c3fdef84)");

unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #928 ce66363c-25d1-4f32-8468-ebaa72cc43ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0742;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0499;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h0499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #929 2280a6b7-b59a-4863-9c32-adebc02fe0aa)");
unit.assert_eq16(16'h0A9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #929 fa476e32-2fda-41cb-84ad-3b1034f1155c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 3d31a329-1fcf-463e-a1ae-58ef03acb58b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 2fd74ab6-6f04-4631-82cb-e637711b3653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 777a156d-22fd-4c70-a35f-419c33926546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 00018006-b07b-4f9f-81ad-5736a7a1e2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 456ddecb-cfd9-4cd5-954b-cd6967e4420b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 19afa7d2-6b3b-4b37-8b00-f0d5fecdc610)");

unit.assert_eq16(16'h0A9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #929 47d75696-ba3a-4f26-9b87-b2384042ef59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0744;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0599;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h0599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #930 d98e1b88-69f5-4ea6-8e6c-496b3a785ef3)");
unit.assert_eq16(16'h06A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #930 bc38715c-1538-4d36-9e75-d21979ef7060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 fe3b9e7d-6bc0-4126-8057-da20485f8975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 dede9428-5278-4c7b-bb45-532e45f77cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 6989fd73-5c2d-4341-921a-03e4404e1079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 61abebea-0bc7-4c8f-b788-b33e8654a960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 ca137d41-1027-48d8-8058-81e81c9bf57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 3ead2d5d-4846-4aae-bc30-4cdb240c3e2e)");

unit.assert_eq16(16'h06A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #930 6ac292ba-516b-4380-be79-e53536f2165a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0746;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0312;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'h0312, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #931 e5fc638e-f398-4e72-9654-bddec6214d45)");
unit.assert_eq16(16'h02EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #931 678c4822-aef8-4fbc-a1f0-a00355eb3e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 d42295f6-af2c-4d65-add0-a4be69b4c520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 4387550a-9f72-42ce-a067-4a658b5fae56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 982f68c9-da58-45a5-83b8-64be6156675d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 a1836408-de7a-40f7-958d-8e341934102e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 b5172017-bf05-42b4-a1c6-c7dc818300f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 521c7cfa-95be-4191-828e-d60c919126fc)");

unit.assert_eq16(16'h02EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #931 a28ec0be-cddb-4f68-a1dd-5dc233c843c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0748;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0254;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h00B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #932 34f13588-a983-42e7-81f4-4d8a4cabe586)");
unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #932 55c17854-05ec-41de-91ed-286026975ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 721a4ee5-9334-428f-883b-45dad4ceaebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 1a4ffdce-902f-4487-9e75-8408f8a5e27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 fbf47780-648e-4b29-8e7f-04470e435ed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 186b7603-fa7d-4f54-90b6-949db3f86d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 e3721986-44cd-4738-afd6-17cea62e31d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 0073b4ce-a6b4-4d93-bbd0-d3092db58ae2)");

unit.assert_eq16(16'h0254, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #932 1f9367c0-bf71-4da2-a420-aa2163c9568a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0217;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #933 bce9d51d-2c9a-4989-9703-51920219b5ab)");
unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #933 4d471d0f-3dba-4f63-a7f0-fdc76d4c5ed7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 459ae4e5-a3c0-404b-9bcf-0e93fa530c11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 5eec6303-59dd-4305-94c5-2ccaa3660ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 a53e0c56-a23f-409b-9416-5f0c994e4c72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 72bc4051-d129-43b0-ac86-1cdb023a9ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 8c1d21d1-5731-492b-91fb-3b7bc9b996e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 7ae5128b-9381-458b-ba22-d010de8cdb08)");

unit.assert_eq16(16'h01D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #933 9aaa915a-8061-4714-8fc2-9a70d51677f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h00B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #934 ef68a2c7-7784-4348-bfc1-95d5518a4300)");
unit.assert_eq16(16'h0A68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #934 66307047-d327-42f0-8662-a4895b078076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 5222dc6c-cc55-4ff9-b24a-6077986d8ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 b32d6ce7-0d81-4437-a025-b966b910dbc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 8cafe8aa-3b4c-4f11-a2fb-317177828243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 803fa2aa-d9e0-44e4-b7b2-8d4608630454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 4b6f1e93-9e62-4136-83c5-5f3cf5a6aa3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 9eb9fa5d-266e-4d94-9e26-7b38fdf37359)");

unit.assert_eq16(16'h0A68, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #934 19300853-f715-4372-8bf9-f78fd0617c12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h052F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h0B43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #935 018f55c9-00d9-4aab-9c09-d61cf4df5af4)");
unit.assert_eq16(16'h052F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #935 a28ff984-bc95-4ef3-b6ca-cf94f8882015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 169bd9bf-35d8-4f33-9cc9-4d76f05f5eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 4af16024-cc59-4c7d-8aad-c9e7b11b4f1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 f7ec2cbc-2299-4028-888e-aa08f918bdc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 682f2817-fb6d-48fc-8d14-f83bbb0b1d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 6b281d5a-22a0-4606-93c6-28b0e4a28492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 0134fdcd-ec7a-43e9-ac9f-b30d68370a0e)");

unit.assert_eq16(16'h052F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #935 7cc7d431-8a7f-4fdc-89f3-1ac85a14e99c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0750;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h0F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #936 c7688783-13fa-435a-94b4-394c64c1ad5a)");
unit.assert_eq16(16'h03FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #936 05f8e86f-7169-43b1-86c8-718f59d3bfe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 0dec9d1d-b627-441a-b114-f93f88ef2953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 992e8a10-2ada-42fa-abf3-94f8424af6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 cf535f0e-a25c-4ac1-aaa6-37b323a6d09b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 f9893c0e-f4d1-44d0-bb8e-457914fb3793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 470a4e2d-5e5a-4178-af29-de875c2c1666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 ef6e2626-cd82-422e-b035-25a150187be7)");

unit.assert_eq16(16'h03FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #936 0832e2b1-e3c0-40c3-9502-0f862fbdf715)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0752;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0770;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0942;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'h0770, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #937 3b442241-afa6-443c-808f-d3e9419f1656)");
unit.assert_eq16(16'h0942, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #937 918efd08-9e80-45d1-b3ce-3f42d4b76f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 a2833d19-1822-4a0c-ab4f-bf05a168b271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 2c497549-bf9a-4c5d-860c-6c42bc4dc3d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 e27ab5b7-580b-45c8-95c6-783c57d6ea92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 179d48b3-2320-4d36-a1de-d4926dd2d8e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 6408d6b1-397c-41b6-9bd9-3006f99bee78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 db4d807f-8db2-4ff8-9dc5-5b712d2c9ab9)");

unit.assert_eq16(16'h0942, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #937 cba45ac0-9b16-49be-8afe-843203ead5d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0754;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0497;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h0497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #938 10f1ab38-0287-4e91-9b15-57909bdde9b6)");
unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #938 6c47ef26-4cb4-4938-8752-627e498f4391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 1db22da8-1b4c-4648-b7f9-948308651e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 0f0717ad-e15f-4889-9bf1-177a9a64c682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 d8b658bb-d72f-43d7-b0c9-6e5c7dcf3e2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 0d693c04-8931-4703-94d5-9885b4e4d52f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 41ade508-1478-48bb-950e-88003fc995f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 a2ac302c-6cd4-4076-ab75-99aedc474831)");

unit.assert_eq16(16'h0FAB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #938 b544c4f2-e372-4516-8b8e-31b1150fe201)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0756;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h0B9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #939 88f2a027-f39b-4bb4-97ef-1fbe67376c71)");
unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #939 aee46727-295e-4f48-a975-ddf8c8d6472b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 b02bb744-109c-4e4f-ad46-2eb6e3229a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 03336957-2926-4c1c-a08a-4e3b16640522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 75f7d28d-80b2-458a-a697-9bbde57a9bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 9e056b95-2d21-4217-ad0c-fcbb06a46401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 2dad17c2-b5c4-44df-83d1-8bb3872ae102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 4244d4ec-590c-46c7-a5c1-e9a8578b59fc)");

unit.assert_eq16(16'h0B7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #939 f887afac-ad44-484f-b183-f7a80134d1af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0758;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h063C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h043A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'h063C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #940 d4d08799-ec78-4777-a16d-d7a2825db139)");
unit.assert_eq16(16'h043A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #940 86e343ee-b598-4edc-a67a-7a501347e3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 8f78c89f-0f8d-4f6a-84c0-0787778c03b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 9347d71c-47d2-423d-9e08-040c8f477611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 01f440d9-e708-4230-a6e8-bc060e39ce88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 857f58ff-8a8d-45f3-8696-d6a66c3f7e6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 115de3f5-fed2-4e91-9a18-c68ce12f39a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 35417e4d-2bc1-415d-b59f-757d277e2b23)");

unit.assert_eq16(16'h043A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #940 aa4af211-7eb4-4546-bf4d-dec039b68393)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h024B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0442;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h024B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #941 d37fdffd-b031-4c1f-a999-3e472c7afbc1)");
unit.assert_eq16(16'h0442, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #941 14af1407-3eeb-432e-89ef-a5a2f9d2243d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 01e7ed4b-8cdc-49ad-9c32-ad6b9b7c7d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 6c2c8948-b181-4bc2-8d21-d7db917f7c45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 7ea00e98-06a3-4eb7-8e61-fa7d16b822d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 f66297e6-fd19-4bc7-b100-62d53050edd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 f37cc42f-df72-420b-8ca0-96a91e50c61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 f53cd87c-4bde-44ad-9586-c1abcc26d5f5)");

unit.assert_eq16(16'h0442, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #941 e15041fe-3ddd-43be-9336-529deddadba4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0716;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h0716, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #942 98231bc3-50aa-49ef-bba8-787333fd9fd3)");
unit.assert_eq16(16'h0C9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #942 666d0339-c8f3-4daf-b2bb-a972b2fbdc92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 4f3b3c2b-0b13-46b4-b2d5-ee4ef80df6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 fd0f4035-3235-471a-a1c2-172f214177de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 bdb54950-3842-4d7f-b23c-9196da695b3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 72c7c8c3-3d0d-4584-92b6-a7627b31b737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 b9078b23-eaba-4d14-b27d-45c8b8e4b3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 bf3230e1-a567-4e24-a29d-0d7659770855)");

unit.assert_eq16(16'h0C9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #942 fb0d6b71-131d-4fb1-9da8-f9beec3e5e2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h026A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #943 0a6db5bb-d236-49c2-a340-bc13bc094b0b)");
unit.assert_eq16(16'h09FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #943 c19d084a-3a54-4fc9-a76f-c6f79d0ec555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 b26bcb59-5cac-4074-a001-8f25802b671e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 18be1860-33b8-42ea-aefc-5f3ab264bbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 02eb2db8-eabe-4691-8cc5-3e00f31758f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 7bc61321-dec2-417b-a822-ba50b101348f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 1bcc4e53-df27-4174-8edf-2dd5c472c02b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 f4958759-4060-4f71-8187-7e1a5180f240)");

unit.assert_eq16(16'h09FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #943 b92ea43d-6638-46c7-a4fb-6398a4e134f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0760;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0112;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'h0112, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #944 2b97ef67-9e99-4ab7-8691-0d5e192c3502)");
unit.assert_eq16(16'h040E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #944 31e932da-4d63-46e7-98e0-0148a87c602f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 ea721064-6aa3-4adb-817a-b0d8254b3e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 7208333b-1614-49a9-9836-24c7b7d366b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 958b0b61-39f9-4ae6-ba30-927919116ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 e767e7c2-b932-4a47-9162-5a41bb4ebcea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 0a051337-281b-4a67-9f15-7a1b198934ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 db74a430-b95e-466c-b652-cd50c53ad448)");

unit.assert_eq16(16'h040E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #944 6d822783-3d35-4401-a604-673e8f7636aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0762;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h019C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0664;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h019C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #945 9c5a79f5-7aa9-4b5b-9f11-6ed311580104)");
unit.assert_eq16(16'h0664, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #945 fb23584d-0417-4180-92fa-ce2e39cfd455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 079fff9d-762d-44af-9158-00e8c76cf609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 9175ef82-51c7-496d-87b5-a16d69e7b3e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 dd99fc65-1d53-4f96-b72a-8077c1e93b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 4d8072e5-62d1-41ce-b9e7-3820ba66504f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 d5d9e89b-8ed6-46a7-90c7-b58b3bc1eb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 aac8f69b-eace-4df8-b1b3-d4571aa5915c)");

unit.assert_eq16(16'h0664, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #945 177f5e27-32d8-48ad-a7b6-32ad02726f63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0764;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h0A79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #946 8e94a894-c19f-4464-b84b-b908d7d5d297)");
unit.assert_eq16(16'h0D25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #946 9097357d-51ef-4acc-8aee-56f0e771b16e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 62d1a82a-7420-4cd0-848d-ee57bd68c111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 75eab859-11ed-4be3-b4fd-d2baa84a03f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 56718a51-eaee-4c1d-a874-0c848710b1b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 3f916408-d528-4df3-8645-f3e7e9268d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 b5721484-c700-4a1e-8170-ac137a0756a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 584c8352-83cc-485f-b3f0-2ec4ad347732)");

unit.assert_eq16(16'h0D25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #946 8d44ba8b-95ad-424e-b1f6-a4799c32fae6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0766;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'h0AD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #947 35b36ea3-d96a-414c-9f05-4c60b7f4cdb6)");
unit.assert_eq16(16'h0C50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #947 2c7b322e-0eb3-407e-8a38-b41d96d6c401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 2ab02d06-ecbf-4a49-b92a-e324a237ea1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 e1d2f531-45c9-4579-b1e0-a89d981e6f1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 44c3f1e4-03e1-47cd-9b1a-d62fe0ccb2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 36e0463f-d04a-4e06-bfe4-0218e4ca345f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 c42087bb-7215-4110-b3e8-a7ea632400b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 d9230777-696d-489d-8d48-cd5efffad537)");

unit.assert_eq16(16'h0C50, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #947 92f0b6ce-4752-4ae4-9ff0-b6f408f8f341)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0768;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h06C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #948 f382ac73-aca4-4fcc-90c9-dbbcfd7e4d75)");
unit.assert_eq16(16'h0DF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #948 d3b84fcf-725e-4f5d-8e65-ff8c3c318faa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 203bc304-333d-429d-afff-8bcb7569a438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 c25fe7f5-c626-400b-8881-f636f1fe04b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 4d018c05-390f-4008-bb85-44c2b8cd6eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 127071de-cc07-4ce2-bd70-9603aeb3b61f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 ce8f3f19-c4a6-45f4-a9f4-0e35b8472e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 523e0d3e-5316-450b-bfd3-32a910e6d0aa)");

unit.assert_eq16(16'h0DF0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #948 bbac5b14-7892-4c6d-8ad4-2109f14c9a1a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h081B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h081B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #949 5c996f8c-e8c5-409f-8236-24894df785a3)");
unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #949 804ab537-897c-4dcb-aa51-5ddba10ac882)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 039ba2b6-6692-4418-8578-aac233d3ff0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 e7c75edb-4db0-4076-beed-6ad8a62f3724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 be317c2d-14a7-44e5-be66-eaada68a2483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 a97d7663-e16a-4326-94d9-4a8d37ef9908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 0ea9cef3-ae3e-4f62-a696-6fed06bee4dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 0f934650-67eb-4bf3-a32f-b119a2f6e00e)");

unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #949 838a5819-8d71-4092-8bdc-8aed9fe386cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h04F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #950 680b79aa-9a03-4477-bfb4-abfcb5bfd58a)");
unit.assert_eq16(16'h0A4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #950 88c7ad8a-c5b6-48f1-8c8c-e98db8e4ef2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 4e687455-b3bf-4c1a-aab5-ac0b8d10750d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 9814a00c-bb71-42f7-b18b-6fbbf3bb66cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 56de753b-ab50-468e-a3fb-af3e159708ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 f6c9b0c9-a1c8-49f3-9c61-e194d2d55380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 476b8f6e-9371-4b3d-a6e8-39f5223b2e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 2bb3ca06-f7b3-4b53-b483-14979292c10f)");

unit.assert_eq16(16'h0A4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #950 b600bc9d-0be1-4239-ae4b-c72a0047d695)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h0C65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #951 0cbc357c-0c78-4c5b-86ec-8ca35fa3fd0f)");
unit.assert_eq16(16'h0BD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #951 84c5dcbf-f5a4-4ed9-a2c3-862a4b294e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 38ec23fe-3418-4345-a7f0-d9fc340ea118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 b55e2948-1b03-4f30-b44d-86da1b9b178d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 47ef474f-825e-4187-a2e5-86283386d421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 cac86b14-8d25-4305-a1b2-454603cff14b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 fb506bdf-6f7c-4bfb-926d-3850bb1a55dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 a668d3b8-92cc-49cf-bb99-fd4648a4a417)");

unit.assert_eq16(16'h0BD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #951 6e9a980c-e8fb-46f2-ab9e-2d22dbd690e6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0770;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'h0A89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #952 dbaf78c6-8a84-4339-8b4e-35e726ba2cbe)");
unit.assert_eq16(16'h04E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #952 9bfd131c-ed8c-41b4-9746-af771a83cc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 7a21ddf4-d2df-4b7f-b616-3b6f13390c48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 a5078eb4-0fbb-41c3-b806-c43b445ef3dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 5971254c-b54e-4210-92c6-9d818c328003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 a09e2d38-ab6e-42e0-8ec3-8838437cc1f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 2db5fc9f-d792-44e3-a0a9-75fedfc3281e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 fdf9183a-df04-4beb-9269-b98f0ab55452)");

unit.assert_eq16(16'h04E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #952 f6ee75c6-5072-442d-87b1-7ce2246ebb07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0772;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0112;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h051F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'h0112, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #953 3120d5b3-6eff-4e12-8604-a2f927d9bfc7)");
unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #953 5ecc006c-6189-4f86-bab1-a5040b5d83ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 0f95c841-b14f-47fe-ae4b-e8dc88c91479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 ff2254b8-2160-4d5d-bb45-c73271ffc6bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 792a02a8-bd56-4582-9398-956bc1f5fe58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 1a88a552-2215-46f0-b643-766a673d6bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 d7a63c58-a232-47b6-a72f-28d243c64463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 1784e010-42ab-4f1e-abee-8b96098dcb39)");

unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #953 cdb13343-c60c-4bf3-ab4c-b4e315217d82)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0774;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #954 7c40597f-8864-4a3b-8565-1b7085a793bb)");
unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #954 23cf7b0f-4b0d-49f2-ac3c-e4d56895ce3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 d7d82256-8bb5-4915-823d-4664c5df419c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 56f48231-3d1d-4a7c-a788-320a956b215d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 53bed6b5-00f7-408a-a90b-98ccc125f69e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 4b437024-afc2-4f5a-b5cb-b9515399e8d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 922f9bd0-b763-4c82-a597-3269cccd2989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 e2919563-bf6e-4264-bf42-180cf00cc0da)");

unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #954 e966c5ac-55ad-4dc6-a09a-831b01887aed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0776;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0669;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h0CC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #955 210c8ac6-dfae-40a0-957f-113b6a426349)");
unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #955 1df970cd-2d0e-4b0a-ab24-ba567121fbfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 2ebcfeac-26a0-4294-a012-7116d2f2dd66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 3559c25b-cc23-40ab-83dd-52cefa0061b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 eeb900aa-c814-44f9-9abd-3685644880e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 1aee9d2d-d612-4124-bb76-c5e42d5ea73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 418f6773-a96d-4ef4-88c9-f9ae7ba02a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 8ab922c8-94f2-4475-9d8e-3b05c43d5f56)");

unit.assert_eq16(16'h0669, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #955 d9c53f77-fca9-4dc6-845e-3776ac4288c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0778;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h03C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #956 ff2476f4-40e6-4579-9380-483556131936)");
unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #956 cc82feb2-2740-4636-96fa-14612a3d284a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 765bfdfb-4fe5-443d-b9d8-812398c5b988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 67d298c4-2fa5-4e9a-80af-10a2f286fe1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 1bcbd389-5574-4550-ab50-b2708673a9ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 0fa7be71-55da-4bb7-8483-f340b15a41a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 04da418e-8dc5-4b87-92db-8d7cfc17c7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 b72aa979-5d88-4bf3-b8e8-72368ea04709)");

unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #956 a25a275d-ed11-4f2c-9828-4c4c3f19da8a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0141;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'h0887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #957 49f1a485-fe21-45e2-9d74-114f8b8df648)");
unit.assert_eq16(16'h0141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #957 90351539-8e3a-4ad5-9c9b-2b61a3f6f404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 d1d53f86-a937-479a-af1d-2a975df32ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 5b936879-affa-4d74-8a5c-6e24e006fcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 b7c00202-4e94-40d2-a63b-8139838bbdcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 6191d5de-7ca8-4be7-9212-fc4482410a62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 922d2287-284f-4fd1-86a1-ee2d31612bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 7810c6e2-0cce-4ede-a69c-23a98a7af77c)");

unit.assert_eq16(16'h0141, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #957 6e274417-035e-46bf-8d14-c1721b1494c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #958 52e9faa1-7857-43f5-8ad8-d314adaf06dd)");
unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #958 8c9f6796-607a-46a5-9b4c-e34d76787122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 6b89a201-0332-422d-b813-d4fffaed6bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 dbd4618e-27c8-471c-805d-68d543862fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 13ffb5a0-0249-48cd-a30f-503226a37b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 8350eeee-3c51-4336-b33d-e316ad96bd9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 831452d0-6cf9-40f4-9ca3-0f65424f42dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 0dc80de0-a591-4409-90f0-28b3aab4c6d5)");

unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #958 9057b2d8-7382-4467-aab4-d240deec0ad7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h0D4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #959 fe274a85-5de2-40f9-a2d3-09258423fbfc)");
unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #959 909f45d3-181a-4871-b29f-7815f490280b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 203b6f41-804f-4cab-9d8c-6828401a1eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 3ad13482-f846-4b7c-b93b-e31271834e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 ce9a7ff8-c0a7-4559-aaa2-9671118f9005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 7da6a4b8-e201-4b1d-97d8-62d2129e3da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 c54aa709-6879-4863-bf81-cf9177803ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 d77e0927-3474-41ca-9fc9-a68714ac6328)");

unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #959 929d461d-eb1a-47ab-9ab8-052b7a2b92ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0780;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h046D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h046D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #960 fd525b06-a430-4683-94d5-31fa94606d3a)");
unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #960 dcff916d-ee85-49e9-8945-951c654c0928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 b4982f0d-42c4-4b6d-a6b2-ba1433f2da82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 1441abdc-9614-4591-8bb1-2124b8087c3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 2ba851f9-c473-40a6-a2ac-9c3cf9060ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 12dec06a-363d-4a05-859d-d2fc96442e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 dc7b75db-74f0-4ad7-aef8-916e47544d5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 e1f70994-714c-4edc-a2e4-5165ddfba738)");

unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #960 612ead10-584e-4c1c-acf2-fc6987afb6d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0782;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h078F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h078F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #961 a54684eb-5d07-4a11-87a0-4d7fdde80541)");
unit.assert_eq16(16'h0F19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #961 c9e3977e-40d4-4e87-818f-9da43e701d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 23ccb215-659a-4ec5-b48b-17d5f409a79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 e92b93e8-a808-404f-bcde-e96dc8d8b6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 1c45411d-1e7f-46a4-8da7-20d943b01a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 11f44e7f-3df0-41b6-9115-a1555d6a483c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 34d7f588-c5e7-4937-af25-8585620a8213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 a514d239-5148-483e-946b-1e6cdc760c7e)");

unit.assert_eq16(16'h0F19, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #961 d1446db7-9490-43f1-a590-3bac01db5326)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0784;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0313;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h0313, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #962 003ae23f-b1b1-4ea5-9a0a-c4a2d06b5fe2)");
unit.assert_eq16(16'h076D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #962 36e3d51e-30c1-495c-98ca-b9fad134f1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 447a112e-b2b2-4d42-9d9c-fbfdb469bcaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 94daa406-e9e2-4608-832e-7cd1555e755f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 6903c306-b14b-4fc9-ade6-4d6846dd964f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 ca831341-ec69-4dc5-9620-bf3560a21b9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 25515844-a8a1-403e-a248-2c719d16dff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 545d8ce7-0793-4497-8066-4e4fcba60217)");

unit.assert_eq16(16'h076D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #962 4ed08ce8-da94-434b-93b0-a7a14f730d4a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0786;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0321;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #963 8cce3524-f77d-4d4b-a283-3b101fee9fa2)");
unit.assert_eq16(16'h0321, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #963 8720e6dc-4fe8-4329-bc57-e250c0e3d796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 1f407d8d-208f-4808-8b95-1e809b71187a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 e03bdea2-c47f-486f-86d8-dfd37e41a2f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 0d739a34-b5a4-4d5b-8e4b-7400e1c50d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 90ac1b93-68c9-45dd-8b80-1d5b480ef1de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 b0212b8d-e102-4b09-b04e-c8e39f1d5284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 3ecbd519-c258-46c8-ae5c-1f701bafe7d4)");

unit.assert_eq16(16'h0321, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #963 92fda307-7167-49d5-9e88-b8197f1db1d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0788;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h0D5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #964 69fb0f83-2500-4cd7-b8d4-c36ae44d06e1)");
unit.assert_eq16(16'h03AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #964 4cfe5ece-aefc-4b37-90ba-8c75c391d304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 82685418-ada7-49ac-ae6c-38118ad7a9ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 d366f86a-d772-4bd5-8a9e-d006f274e53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 909a5f56-2def-4cdb-98de-6e873190c620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 f80718d8-0f3f-471b-940f-958e995f3cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 6e0a4c42-0846-4364-a443-b98519f8af9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 7cfa62df-ba51-404c-962a-480347b31525)");

unit.assert_eq16(16'h03AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #964 3f05e5c9-532e-419b-848e-f2782e85fe9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h039C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h03D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #965 99a77870-7e87-47eb-bfd2-9a1cd8523c0a)");
unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #965 92b291b3-5113-4ea9-b3e8-11e1846c3b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 afd61f7d-b078-41e1-a102-10924be9aaad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 cfd3213e-14ca-4e07-a201-75fc93a94226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 0413d766-6f0c-44e5-9f74-ebd48ae720f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 5c1569cd-fe39-4502-a01f-3517858bc0ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 17c07493-d694-4c7a-800e-a0fed796ab1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 e0cb4376-8f5f-4936-9651-342fc2a6fe67)");

unit.assert_eq16(16'h039C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #965 29aaef45-3ff7-414b-ba42-3d4ea406cd55)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h0C0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #966 381e00de-8e80-46a0-a097-3c57c268da88)");
unit.assert_eq16(16'h09C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #966 c3662eb7-9aa6-48d2-a78f-c3926730a1b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 08410c3d-4908-4106-84a9-8fbde4c04380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 21cb5729-3185-467b-9a95-5cd9fa3d2a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 9096f613-11ea-48b0-9f94-dfb77c4c7261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 a7a41d13-f0d1-4832-ae2a-a8d411bfa311)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 280d870e-84f1-4976-a411-5b12e6791b6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 55df977f-60ea-4287-b893-3b3d12951e62)");

unit.assert_eq16(16'h09C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #966 9862bc7e-2c5b-4810-a7db-ecfbd1207c5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h0A86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #967 7bd859b1-8a2d-4c6c-8af1-e3c6448f6f6d)");
unit.assert_eq16(16'h0F2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #967 ed41f1df-32c5-478e-ad15-b4e2fd1f4863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 77ca7f1b-ba62-449d-b413-f77daef9b3f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 06437acd-cecc-4b8b-8978-51914cf1e28d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 44e9b968-0d19-47af-b840-dc8e631798c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 ff959ad3-972e-43a0-bd3e-3c8b5b030295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 31e6f300-5cef-482b-8eef-58b36fb85f35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 edf4128b-5cf6-4325-ac50-d9666d67abb7)");

unit.assert_eq16(16'h0F2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #967 1c3ad643-2cbc-46d3-ac9e-143fe82b8424)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0790;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h080C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0861;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #968 d5405c34-fe10-40d3-a241-fedcf5d21811)");
unit.assert_eq16(16'h0861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #968 075d4f70-9a21-4203-b5d8-91ee85a8d9ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 af836c24-dbd6-44e3-b37e-5a2f13564690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 68f17980-ebc5-4d2a-b457-d7e69044b9a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 872912a2-e9c1-4f60-bbde-8ad99247f235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 df207a50-6552-4dc0-9378-709b1d5a18df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 3b3e23b8-7cc3-4ae6-bd3d-a0b28b508b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 4a1b4c87-daee-4873-bbfc-90797667d343)");

unit.assert_eq16(16'h0861, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #968 e32f03b0-ee68-4a34-b997-8699b2aee5c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0792;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h0D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #969 3fe780ff-596a-4418-a40a-5353fb603d3e)");
unit.assert_eq16(16'h0FB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #969 494476ad-5e4a-4d14-8904-f05fcebac560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 e96392ac-e376-43ba-b286-309c8de730e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 9ed60f85-cd93-4f42-8670-963ae28d17a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 cd049fed-4d88-4497-91b2-fe5f034236c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 4af29476-702b-4b0c-8e38-79c4f8e0d486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 424f87d4-474e-4b3d-9d1e-511f9e49d731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 4c47f5b5-bbad-47d7-b5d9-a154e2100b52)");

unit.assert_eq16(16'h0FB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #969 53176197-0bb6-4a81-9d31-656cb1e2268b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0794;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h0AA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #970 310cad8c-036f-4055-afd8-23028f085525)");
unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #970 ad5d0a9f-3b59-4b65-9ea3-21529b48462c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 b48febe8-fea0-432b-9b04-f0e014004a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 44f5e888-dce5-40b2-b02a-665d3d22ec42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 57e92410-5309-429d-8c14-44eb236f91bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 25ab4c63-c831-4d27-9e3f-dc00c090e7de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 52fe4c23-fdcb-4cab-a1a1-e72ff5d32f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 df547ae2-9834-4035-ad4d-c81b133368c5)");

unit.assert_eq16(16'h03B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #970 2c277b7e-2927-4d7f-864e-fb9ab1f6d508)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0796;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h058C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h058C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #971 2f275510-9577-4ba6-af68-fd8d6385cfad)");
unit.assert_eq16(16'h045E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #971 65967bb1-222e-4875-b24e-2b8b5240c104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 c4f5393b-b4c8-4e30-a401-b0bd322e4fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 6c066c52-40a0-4e6c-aa3c-e4865c53e527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 3134739f-cce3-4c7d-9589-654c17988eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 00a46145-53cb-4cb4-9c5e-58a85c16fb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 5a57720a-e03e-4eb9-a2e1-fe844b2f83b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 b950ef87-1189-4f2b-98ea-9bb30f4e8d1d)");

unit.assert_eq16(16'h045E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #971 94943f34-c166-4358-95df-38395a6b5b66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0798;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h0AD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #972 2d8b972f-47ac-425f-abd0-feda4c21f4f1)");
unit.assert_eq16(16'h0E0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #972 062b3ade-b09f-4fc9-b934-46ca4bacb61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 28f7ed67-1746-4c20-bc72-edcb0d39bd40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 8aef95c1-5620-4cd1-8dbb-160bb97e20c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 98fd6d07-7736-45b3-9b9e-b8021dc094dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 7540f937-3f60-43d4-aeb5-60d1b3867ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 d514a30e-f4b6-4b5b-ae0a-08eb7f788093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 03a6e7c8-e0b2-4d37-bfa2-f43c359ee305)");

unit.assert_eq16(16'h0E0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #972 3967e39e-0e70-4d52-8328-90afefd5be95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h0DE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #973 d599176f-a9f9-4535-88fb-4e8101bca656)");
unit.assert_eq16(16'h0D4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #973 a5e5729e-9b19-4f2b-a3c5-91080f1d0fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 0b1bcdbe-fc4a-426c-bbc9-0fded47d1c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 b0d9c2ba-73b9-4ab3-86e8-55a93422b204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 134ea5cb-d8ac-483a-82f4-295944350aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 ad9e1647-27c9-44c8-bd20-e656560612ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 4790d293-79eb-4b75-af65-3bd9cb9bfd7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 44bd6156-49f7-43e7-b18b-434e126e375d)");

unit.assert_eq16(16'h0D4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #973 4d5b4bd3-9555-4701-ad4d-7215cbe92f2d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0691;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h04ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #974 38d50422-17f1-4057-9b3d-7159e677b23a)");
unit.assert_eq16(16'h0691, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #974 b7f40f14-9a51-47ce-9bf4-abace61294be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 db2ed15a-3e41-477d-844a-f73c443f8dbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 1b02e1d3-9df2-4035-8b3b-169c250310bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 92887524-56db-4a80-98a4-febd07fb2299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 4e60cbb6-d03d-438c-8fbb-eaaf9c439fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 e7d51a6a-3c4c-4ae7-b7aa-1e532fda3f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 6b644d1d-003d-4d27-ab2d-39ca91ad6f3e)");

unit.assert_eq16(16'h0691, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #974 a80b2999-e2ef-4ef7-a59d-75d4490f3525)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h00CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #975 57a7ea5e-27b8-4ea9-a821-c5f4a836be1b)");
unit.assert_eq16(16'h0C55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #975 583e1ae6-0b0d-4bc2-ba74-4fd68c97771b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 6079c183-76c5-4e93-934c-a92a1f507a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 51f01b8f-abda-49c0-95d5-15a0bb7d855c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 2558a2a5-72fd-4f2c-87ad-3db03d0329f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 e11fbc8c-c502-45ee-9481-96978104e6c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 62f5449a-55b8-4530-baab-ac09b50c8c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 9402cc39-6cb1-4894-8856-870aa5d6350b)");

unit.assert_eq16(16'h0C55, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #975 15b0eacc-88cb-45f8-a8d4-9a20d69b2270)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0417;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h0593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #976 4749c848-7fc6-4b08-a294-55ad59baf191)");
unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #976 419c0032-d6d3-4946-9438-006c302a800e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 2c4de263-ed0f-4ee0-8248-fc00536f7bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 e0f58b7f-5b24-4db2-8ca1-98419d064569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 6028d10a-f2f9-41da-bbf3-8daae96edd47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 93b42e2d-6008-4036-94f6-c6a19cfd01c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 98ffae3e-b542-485a-beab-1de294b278d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 a7f09362-af3d-42fe-8840-f8965ac9e7cb)");

unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #976 c0b38186-6ea1-429f-bee2-3deb4e212be1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0009;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0798;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h0009, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #977 3130654f-c2f2-4cde-b1fd-bc391aa5961c)");
unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #977 e373476c-311d-4b5d-8697-a375214e0d47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 d483a6d9-d94c-4c27-b152-172b3fe251c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 877ed7ab-87c8-40b0-8863-c68350cbc33a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 a1f750b7-9bca-4759-abf2-bb322dd7be5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 2eeaa7e6-a28d-4b54-aabc-2ec293c26c7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 79a29228-f66f-4ddc-b0ba-b0bfef9e0312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 1d76bd27-ec6d-41a8-afa5-fffcdd345ac5)");

unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #977 b8457a12-7d90-4e65-8aa8-e7a9ac155cd8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h079A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'h09D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #978 308d2450-0162-4049-bf04-67f02bc98827)");
unit.assert_eq16(16'h079A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #978 a985e00a-eef6-4fe5-9c85-a45dad160105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 5dbf544e-cf66-44cc-bd05-7c9c64eb7e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 ee47c63b-8ed4-4126-8db5-63867c16d9ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 8afe49a3-8833-4c9d-80a0-df916c67b48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 4efe7d1a-2769-45f4-aaac-f648a0d2abb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 33ec39e3-fe6b-41cc-832c-6f110bc22533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 3e0e4701-59c0-43cc-999c-b48410585540)");

unit.assert_eq16(16'h079A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #978 8417c7bd-d923-4d26-ad80-b69c9cc14a9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h09EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #979 42232436-91df-494d-868b-bbda4b289433)");
unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #979 3176aa18-9af4-4fab-b0dd-24ae4419945f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 ffd8bc17-390a-47aa-abe2-384f8fe913c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 2225e542-d7f4-4a46-b285-f84c1ad342db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 399a4413-37a4-44ca-8b26-a8a5929b75de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 3591d0dd-fdb7-49d2-8a32-3a969879025c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 002003db-98eb-427b-b7cc-96ad43e406b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 b8eab8b1-dd31-43f8-b620-6fda91f6ae0f)");

unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #979 ab740131-92db-46c3-b00e-1dc91880aef3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h0DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #980 d342e9da-10c9-499c-8849-f5654dd1a487)");
unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #980 94ddfe8b-6c7d-4624-9877-6ea216ae521e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 3ae9ff52-6c2c-4ba8-a814-82c06e19b4c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 b5470d95-dbd2-41fd-b4d1-660f7a8845c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 c1ee02dc-21f1-4698-92fb-ff43cb29c53c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 5753e2c0-fc19-4816-819d-00cb05321e9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 883685fd-4faa-4d50-90fa-a0a9d314ccab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 ec06517b-ff2c-439a-8131-d009289456b0)");

unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #980 544f5bb7-de68-49f1-8b26-fa51e0aa324d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h090F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h0D70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #981 9c3f1121-9e9b-489a-8d67-2f5b786c6e0b)");
unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #981 61764628-38f2-4569-bbd6-ac327a3a7865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 8b84d247-bdb6-427a-99a8-eee280ef038e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 59d5f951-f82e-4e31-ab19-e0b4ac8f4876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 ce3aa653-ffd9-4858-b865-2dc9f660eb23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 67efc645-20ae-4905-816c-f5326d6e7d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 42137da5-f1b7-4974-a0af-087810e9fb27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 f87f87a7-2ca4-469c-bd44-4d2e5bffb472)");

unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #981 03c76204-4791-4353-b4af-471a11019643)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0702;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0411;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h0702, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #982 460decbe-826f-4779-9eaa-b9640703b58d)");
unit.assert_eq16(16'h0411, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #982 bf569206-0883-4cd3-ad98-0d479ef7e5bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 622dfc1a-7f6c-4f1a-aae3-2a7e0d4718df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 5dabe43e-6f47-497f-8159-fb32b25a2e77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 359921b3-c074-484f-a84a-997b96917b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 773e34ef-8d5a-41e2-9235-4625c1a0827f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 3caded6d-aed1-4355-8308-9814578b93e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 a47b693d-e4a6-44fd-ac2a-77f0a9ed868a)");

unit.assert_eq16(16'h0411, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #982 58f499e3-5352-4ce2-9409-d31d6f3b5415)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h098A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h098A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #983 62fcaa36-174b-4c07-86f6-af4dea1fffe5)");
unit.assert_eq16(16'h0CB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #983 2bc69544-3fe7-453b-af2e-ff27d5fe4e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 39404b08-b2a2-4fe0-9473-688e18ca79ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 70659f43-bbf3-413f-bad5-dd5ed4486b69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 96938e25-a49f-46bc-b315-569fdef9dee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 e0052d96-6118-49c8-a0dc-7056723248fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 406a3265-06f0-4825-a9bd-698562ebf36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 1173f4a9-c9d4-4d74-9e1b-f57d3e694927)");

unit.assert_eq16(16'h0CB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #983 c439c689-e015-4f60-a7e4-01120980fe7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h0D30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #984 98a6d8a3-63f4-4bad-9be7-880df8b1611b)");
unit.assert_eq16(16'h00EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #984 f93a5b95-3e2d-4f35-a7ad-8a03acb9be6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 b2655953-64cd-4109-a725-644e830bb991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 40f100f4-5cc2-4ec7-b221-ee41cf92e570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 be2488fa-5f57-45eb-ad1e-14c426e0d33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 3ccb4def-3a2d-428a-b680-b23106f50607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 2432471a-592f-4a25-b429-c1e3e110c2b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 7a400db0-6202-4b47-83e0-b49ec56deb77)");

unit.assert_eq16(16'h00EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #984 6ec947c9-e011-42c8-92b8-47a2de6bcda6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h076E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h0BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #985 7f33be42-7b4b-456a-a33e-0281654e6b1c)");
unit.assert_eq16(16'h076E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #985 0e8e6a8d-91ad-4f8b-a06b-0ae000392167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 4ffff582-66f5-41b5-a9c2-c8331aa71178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 572d9b83-96f9-4e3a-8dc5-0fc631a8186f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 d5a90721-405e-40a2-badc-506928c7a19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 cb136ca3-a0e0-4baf-86c0-99c06468a534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 bf9622fe-089e-4408-a20e-197eb8c5982c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 2c52854a-78b2-4ef0-95f9-a3f8a159a092)");

unit.assert_eq16(16'h076E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #985 a82590e2-d242-4e00-8004-4752d49d0223)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0237;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h077A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h0237, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #986 cf8efe7b-f500-47d7-b50b-37c87455cdc3)");
unit.assert_eq16(16'h077A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #986 b2171cc9-833d-4f15-b5f6-65d81bb74731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 8bc5ba4c-8c47-4cbb-aab6-7474819c31a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 15ce102e-1165-42eb-b5b6-a7fad7044bda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 e781e9d2-0789-47da-b838-c35625847260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 ac816888-e4e6-4298-9710-ebe3484ebeb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 c799fef1-4b6a-4870-9f49-535569ea1b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 65197647-9004-4f4e-9d0c-37e5512d750b)");

unit.assert_eq16(16'h077A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #986 af02b279-1201-42c1-9c50-9bfa879cab40)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h041D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h0DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #987 773cc8ec-778b-46f8-8c3c-55a8f3030a23)");
unit.assert_eq16(16'h041D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #987 d1a8da64-c60a-4726-a3ec-7bfab6b9931a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 4b576ec4-555f-44bf-9a21-4a62c4f4ef77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 9e970a31-064c-41f6-8a80-9812624ddd1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 60e0a1db-79d2-4f01-b2f6-a65a1f3a0edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 a16e6050-0ec8-4f3f-9276-5c099ca1eed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 eef0256c-0b51-46ac-b561-4984b790a5f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 ab0ffd55-3f07-49a3-a61f-a7dcbd76455d)");

unit.assert_eq16(16'h041D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #987 f0ebd0f1-1f23-4b89-8e6b-57c6b138a06f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #988 cd76de04-2758-4c35-866a-d2ca899d1957)");
unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #988 ea1fa843-695c-4f79-afa0-cf7de2fa580c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 66ec3ea0-ece0-404c-84d3-8df69438de7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 ab438b0a-bd8c-450b-8b79-4389076f1212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 ff4b35f4-4015-4c7a-9041-3ee0695b9ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 5bcf377d-b04f-40e9-96ea-2826e3eff3ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 e23346a7-8c4c-4c23-9880-3decd7edd8e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 e33a068a-b561-453a-87b3-e40a56d1aed2)");

unit.assert_eq16(16'h0AFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #988 35d43553-1a26-4ecc-aaaa-3cd6152425c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0313;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0624;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h0313, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #989 0deb0d1c-075c-4b5d-a671-28959a508ac9)");
unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #989 f5bf5842-206a-48c9-933a-cb539302699c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 7eed659c-eedf-4ac2-a77f-8e73d86b093c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 c73cc7d6-35e2-4c6a-80d0-699f3b890143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 7b92f20d-1c88-4d35-afcc-b1df0aec9ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 b8d6725e-5f9d-46e0-a912-5475ca089cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 abcc774c-75fa-4298-9545-9cec04a23c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 d4272081-eb26-4f2c-be48-2c7452076674)");

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #989 1541d75a-6e1b-4818-b5da-5067dadbf4d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h011F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #990 ac24b4aa-9745-44d7-84b4-61da7c410c24)");
unit.assert_eq16(16'h0AF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #990 da12fc72-4b48-4d4e-9c0f-702321b6faaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 9448ab4f-3b5b-491e-8042-43aede15f6db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 57d14cf1-70a0-477d-9269-7899051fb4e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 0d413255-838b-4d27-a98c-a4182d2057bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 bbb1a0d0-2413-48f1-828e-fa5989b0ac92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 5bcc6c73-46d4-4a4c-b164-17ef7e5a0255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 cc854afb-60c4-490b-be12-9cb45fd17ec3)");

unit.assert_eq16(16'h0AF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #990 959b6844-84d5-417a-8cbe-7fa72f9775ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0297;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h0297, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #991 9df7e790-9037-49f4-bb39-eb007bcd7fb2)");
unit.assert_eq16(16'h0EAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #991 aa232f3b-875e-4e0c-be7a-f0642d0783f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 a1d07869-c485-4f96-8773-508a1843f3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 053e81fc-4a8f-49dc-9c4f-a5331df93731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 6cdb2683-5f0a-4a0e-8b7f-70b5474c8d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 4897dece-556c-487e-98c8-9c47abc3d8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 ac74c699-7c23-4d46-b6e2-68cb175d8ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 3b64daf4-4d5f-4273-b67f-311d1e4846dc)");

unit.assert_eq16(16'h0EAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #991 91cec2d1-6460-46c2-9b0a-2210ae9f6667)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0181;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h0181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #992 4bfec088-fe9f-45ed-9425-0f8417fdfdb0)");
unit.assert_eq16(16'h07BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #992 972a923d-12a0-40c3-8fb4-b1866beaf7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 0006b7b5-7b2d-4ba2-a4d5-d9daddd870f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 94cd99b9-4b42-46d5-81a6-56cd1fbb3f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 f46aaa60-edf3-414f-be9c-fc0ec725f03e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 01edefc7-fcbf-49e2-80b4-d774f0d6a749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 85ba1e7c-14b6-4f00-b84c-06dac6d7b27a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 0b860866-c8c2-416c-bf73-e3aee21758f8)");

unit.assert_eq16(16'h07BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #992 885aa57a-caee-48f2-a8be-e41831c09c3b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0509;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h0C11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #993 3dfa5137-9219-46ab-a666-40025559f231)");
unit.assert_eq16(16'h0509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #993 d57953a9-3776-495d-b63b-c8f257c2ab49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 1c614435-780b-4b7b-9550-f2fd900d3f69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 07884190-19fd-494b-989b-ffde229f767e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 6b326dd3-f544-4060-be8c-2f547c8c26c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 3555a518-a0e6-4f87-8f69-219db15d3851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 ea6b161c-a695-4820-95ea-ed5abcf8a382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 94d3e878-4d04-4617-9d67-7a60f3913fdf)");

unit.assert_eq16(16'h0509, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #993 9238e62c-9c0a-4e6d-a881-3621f09a1d90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0218;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h0218, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #994 98522856-2a9f-4906-ae93-256aece8223a)");
unit.assert_eq16(16'h08ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #994 9a2a345c-a016-4370-9f5b-c1bc5f7acb7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 f44b93a2-79d1-4d5b-be99-d1a3afefdcda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 151f6ab5-8223-490e-a27e-c47825045769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 120e3c0b-6408-4b7c-9e61-d23e7d65055a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 0fc9cfac-3010-4fba-927e-7bde90d740c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 3e6aa3fb-e276-4435-8593-d296d84061e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 de965328-77f0-4441-a0ca-07ea45cfd502)");

unit.assert_eq16(16'h08ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #994 ffd19be6-75a7-4554-a84f-59acc0907618)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0765;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h0765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #995 97f3a247-940f-4a11-91b0-ee2a0d04f114)");
unit.assert_eq16(16'h0B70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #995 77237d4c-f6eb-4684-a3c0-a95b44ef5d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 403a08e3-1c9b-4da8-857b-9a0ea311b8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 bc38a1c4-91b2-4cd1-9ab4-36f98a572f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 095b4b7c-a65e-4039-8d4c-aa16f83faf7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 dc92f745-479e-4a18-88be-e1c8eae7737e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 44ca1ee6-52cd-4263-b14e-f1e7114a926a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 b3590b1a-42f7-45fd-bb54-cbedee60b4a4)");

unit.assert_eq16(16'h0B70, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #995 959191e2-13e7-4288-b728-772d2dd338c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0734;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h0CBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #996 6a6e0c8e-2871-4103-95e5-64d1ebd54ba4)");
unit.assert_eq16(16'h0734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #996 1fa98a61-3834-4160-a73c-49372d728756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 aa5da0a6-b736-4b04-a7bd-b6ec305be106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 5ebb1254-cd3b-4e97-9448-d7baee47cf89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 940f203d-3761-4a57-945e-1790d8d5f8a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 0360a645-6215-4a16-ae8a-e5e51f9b3350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 7ed9bfca-cc82-4866-be80-4fd309f59512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 39347096-fc21-430a-8048-adcf932ce608)");

unit.assert_eq16(16'h0734, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #996 cbe95b23-ab97-44cf-90f4-e0449a49fabc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h042B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h042B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #997 6328dafc-ad14-49be-8ab4-78ff4810b985)");
unit.assert_eq16(16'h0ABE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #997 a48a2f83-5ee6-4421-b970-8a03b4b08ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 b6950955-37c2-4568-a700-494e0902abeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 05f6ef8a-7df2-4997-b55c-08c011d76f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 e73726e7-0b85-490a-bdfe-ef67b475392c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 479c638c-cc8b-4aa9-af71-043b64594f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 9f93935b-467b-47b4-ab2f-82d580710c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 2cc38328-d52e-4bf2-af62-dad9c654d612)");

unit.assert_eq16(16'h0ABE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #997 65dce890-731c-4b32-9286-52696e648043)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0893;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0764;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h0893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #998 ca4c8eb3-0787-441a-88c6-bc725960207e)");
unit.assert_eq16(16'h0764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #998 3a3d69f1-74fd-441a-b0bf-630e3eff4772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 40afd1f3-9bb1-4ad9-9b66-7dcf1c87052a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 d181bafe-b0f0-456f-ab64-f4c89213bdb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 e05ff6b0-95fe-414c-92a8-3dee1ef1cc7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 d0ce3fdd-a1dd-4d27-895f-15b69a78fcb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 2498379c-456d-49bc-971e-0e367fbfa2a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 9776b6a0-689d-47b9-ba62-75ee16a48d28)");

unit.assert_eq16(16'h0764, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #998 6e25c35a-5a24-4c4a-8a2c-c2194c12abf9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h0BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #999 f3a40128-0268-4fc3-8728-38af27d73bbb)");
unit.assert_eq16(16'h0F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #999 53b4d275-61cf-4dce-87a3-0a111dc03ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 ee759913-6031-42e3-beed-80d2e3347f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 3cf50c64-b7f7-48cd-bb33-c5bb5fe2179e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 ff1cbf7d-d073-423e-8c0b-bd7b3639797a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 34527fab-97df-47d0-a2c0-bda186b35007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 325c61d7-a467-4762-b6a8-d75eaff56ca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 e79c0ff4-8c5a-4a20-9058-2e3b79047b8d)");

unit.assert_eq16(16'h0F45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #999 9dbb7a14-707b-4ae3-a2da-2cbb531a7b76)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1000 7282abb2-7f30-405a-968b-789d0d7a3ff5)");
unit.assert_eq16(16'h0E69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1000 5052f086-c003-4afe-ba94-edee93be9a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 11fa1041-93fd-467f-9352-a7e029a7bd43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 0aa2559a-7c30-4c88-b991-a01f37b9bea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 7a9e2632-b0af-4a58-aaf5-8a93bd95ef02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 162781aa-11a9-4405-a72d-4e7d6d5e3cfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 da5d2dd9-fcc7-4cac-9e57-e3d995a79a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 7534685d-cc88-45b8-bc08-206578f35a6b)");

unit.assert_eq16(16'h0E69, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1000 db6835a7-1cbe-42cc-9f90-adadd7205601)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h029F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h0F5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1001 5ad9a576-0dc2-4e37-99f2-d81020628f61)");
unit.assert_eq16(16'h029F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1001 ae8d78b1-8b34-4f2b-aae2-c984e0d8bf7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 37b145c0-e5fc-48fd-a2c5-fc8f8e79d308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 6de8df34-2f4f-4999-98b6-b2c057998e1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 a585e328-9adb-4ac5-b06f-1a1ed219e439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 19df71ca-f477-460f-8b55-92041a1ef1b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 242f1098-e7aa-41a2-98e7-60549bcae229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 ccfa5f5e-fc24-423d-9192-26fc2a7cde17)");

unit.assert_eq16(16'h029F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1001 6ab9fe41-fb18-4feb-ae7e-c304a00a2252)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h022C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h0BB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1002 08b423e8-f4ca-40d4-983e-696508e84d85)");
unit.assert_eq16(16'h022C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1002 ed914df9-8420-45d6-949f-177dce5905f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 22c785ce-ff3a-4f81-bda0-9891989eb94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 a89463c0-57a7-4ad9-bc49-7b46a3f929fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 fb84a94b-38b1-4437-8fa7-e0a85d0c402c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 fdfe8e47-5027-4ec3-9463-d11a4d4617e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 821d943d-1d11-4d33-bc31-e90a29336646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 77fa4f13-9c36-48e2-9539-4883da3eaf09)");

unit.assert_eq16(16'h022C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1002 166717b2-e419-4faa-9069-9c35fe863046)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0067;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h060F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h0067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1003 5643fa1e-4195-419d-b770-45cedfb8c22a)");
unit.assert_eq16(16'h060F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1003 4f586d8f-e9b8-41c9-b33f-408735626d40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 60888040-b11e-4c62-aded-e7373ddc4d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 f913e01a-52a5-4b42-b1b8-305815e937ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 74bbd53e-6f28-4fa5-be91-3aa5bade1ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 1e635f26-3cbb-41ef-b1e9-8f9f6e226b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 03c5b8eb-9227-4e08-bbad-d9ff097d30c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 ef58a788-1f19-41d0-a54c-e238024220b0)");

unit.assert_eq16(16'h060F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1003 659b470e-3121-45d2-9303-06c8cf030e02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h058A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h058A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1004 edcb52c5-eb3a-4c54-a5a7-2431a2770832)");
unit.assert_eq16(16'h0E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1004 698b1e2e-aafa-4a9f-8d89-612bd46ae1cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 d56e2515-1950-4b7c-837c-25b05bb98503)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 e615031b-cd34-4440-aba7-c706708123b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 1fe99798-2fcf-48b8-ace1-6476241cd973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 2ddd8ce8-100a-4d1a-ae23-b447b54ca3d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 4ac63310-9abc-4cac-99b3-e05958fc1db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 808bfd4c-1413-45dd-bb20-df86172b6d33)");

unit.assert_eq16(16'h0E6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1004 4e20437a-1e81-40a5-a6a0-5e77a1bc48de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h00C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1005 ad457252-c061-463e-9187-e0586c7bf88e)");
unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1005 0aed6409-416d-423b-878f-aca14e30e9f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 5c02ef3f-7d11-4981-ae8b-4df980011ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 1aad714b-ac87-423b-8c99-79116da4a82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 46c95026-cfe6-4bb3-9ab3-866d5b708afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 e8614e8e-303b-47f7-99b0-f974857153b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 aa4d9b9d-df54-4ac6-87a2-e561a438acdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 9e76e4c4-e1a2-475f-89f4-837b9d680283)");

unit.assert_eq16(16'h0CEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1005 45e6f3be-0d36-4633-975a-7f9753d00b81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0499;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h0499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1006 5ff73ecb-2356-4ef8-aba0-3aac0b4b20fd)");
unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1006 c0510575-d9fd-47bd-811a-c47f45ff858b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 ab4751bd-cabf-4642-9181-d9bdfb03e0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 9863ccdd-3115-4a04-b711-8429eda82c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 218ddcac-ce3e-412c-8151-84faeb6969ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 764cc0d1-96b8-440b-84da-437b8ba03e9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 de7626ce-32c2-4360-a641-2711e9bf359b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 c105eced-5169-4853-9c7a-c21c319d410b)");

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1006 86a3fb9d-32c5-4b03-b19f-42c900c657de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0412;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1007 fdb4e79e-2b83-475f-af04-f980909e6a07)");
unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1007 8cdb60d7-5c08-44fc-bdd6-3204194ab590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 2bfd1c56-198e-43b5-ae21-9774224e02b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 d7314a67-2f38-4882-86f5-fc0834f0390e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 865c32ac-69d7-4b3f-9571-325382e6e603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 4fd997d3-b80a-4365-b66e-da8daaaf7c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 1ef3aa9b-34e0-4b20-85e5-a49e03fd3b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 e15d982f-faef-47ef-94f4-f9614d8e640c)");

unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1007 906a13b4-9f08-413a-a463-3b7eef35bb14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h084A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h0509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1008 0deaa7e2-d504-43bb-b2e4-4dbbc11f61f7)");
unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1008 08cfb237-906b-4e89-a5c8-8f4e0364c5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 6ac3f495-481a-4513-ae3a-842b5da0e729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 74f4c305-7089-447d-9bbb-0a01b49fda81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 9bf013b2-3837-4a27-9190-aae7c1b6a863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 70dfa53a-a613-45b5-82d9-fda075385d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 29a0e171-2b8c-4002-bd9d-8ecb0a7377d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 2b9a8fde-32fd-4223-9405-3315fb787ef4)");

unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1008 01d98fcd-7066-4b3f-a1cc-06c006e2fbb4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0201;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1009 875a89fd-4ac1-404c-932c-19c64d60752e)");
unit.assert_eq16(16'h0F58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1009 2c667290-8cd6-403f-a78d-01c0397ab492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 32356178-d330-4b36-812e-fb7f0d3105d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 58fa8bc8-262b-460c-97a4-16d73fc272c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 f0b977ee-ebd0-49ff-8dc4-095f724aba0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 ede3dc7a-6c58-44bc-aed2-2937fbf0d829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 353723b6-36c7-47d3-ab5b-01dbc456e8b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 31092026-26e7-462f-93cf-0d253c10f8fe)");

unit.assert_eq16(16'h0F58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1009 9b770d75-d2ef-4254-a318-a3fc69e22a73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h0A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1010 3a767cb6-4057-4ded-b237-09eec8b4cc21)");
unit.assert_eq16(16'h0CB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1010 db9f96b2-4e1c-407e-a1a7-84b7b9726b40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 c4b4e626-18dc-44b9-87af-7691fbcd827c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 a847bb4e-83c3-43c0-8b7f-f9e78bd3cbbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 90477b73-5c24-4f66-b015-f2c19e88f1f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 253fc496-4c4f-43d5-b9d4-5e01b8d5ad33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 279306e4-035e-4b59-9c46-7bfb1806689e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 3294754b-7673-409b-8a1a-f051c0e605e2)");

unit.assert_eq16(16'h0CB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1010 5df55ea5-c65c-4a10-97f4-3d054baedf30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h004C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h06DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1011 aee331ed-92e6-41cd-9349-1ff4a999d8d3)");
unit.assert_eq16(16'h004C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1011 fdab79df-b5d0-4d59-9da7-22942d39d3ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 05142292-33dc-42bc-b290-984b4aaa7a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 da65e464-ff43-4e50-b255-7c51018de398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 76c55621-f279-4d9e-9a7c-ace4051428d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 a8a484f4-988b-44cb-af04-0ba09ef0e79f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 ab24c1de-303f-4a95-b257-0fbef62e9e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 d7e1b7b3-fe78-4417-89d9-55c6b2a6e46c)");

unit.assert_eq16(16'h004C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1011 819c9e55-c6e5-48f3-98ee-19577ced7529)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h08A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1012 01ce0390-0bdd-4f92-ac0a-3f48ba0cacca)");
unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1012 445dac62-4bd8-4071-b06d-b74f44b9b08d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 32d0a4b1-7fa4-4b2e-a192-b9a1dd5b36ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 efc62212-e0a2-4fa9-a8ba-4e8b33d48f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 60f53215-0dad-49b8-a53a-748440814761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 d1733435-c3c0-4e6c-8ba8-2b5cb1c53fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 e11300ee-c072-4f39-be89-b67628483e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 45456ae2-2654-484e-b21c-25dea3d26d92)");

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1012 ea8e5b66-be4b-414b-a5b2-89d84d12b1f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h0E31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1013 4dc691eb-c1b2-4cc3-ab11-47358eb2ad3b)");
unit.assert_eq16(16'h0B14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1013 987a33d7-3cd8-45e1-a0e1-66f117049b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 59dca08b-5321-47d5-920f-7b859e441b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 8ff2b7c6-b17e-4622-b974-00fcee8c421d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 2f6d32f3-e48c-41a3-b571-357298ae5f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 25a4c76a-81b4-4b6f-b8f0-fc035489a54b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 30a1cacd-5c93-455b-91af-63a374a32f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 5a809416-6d11-4074-8b2b-610690e8e580)");

unit.assert_eq16(16'h0B14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1013 ba31cd23-af31-4099-855a-9f7981dfd5e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0615;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h0615, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1014 630194cc-f9f1-41ea-9cbc-d628ec96616f)");
unit.assert_eq16(16'h034B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1014 c876154b-c133-4fcb-844e-50d887e7ed3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 d2981401-8d4d-46f6-9ed9-a2d585de1887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 6bc0af99-6a71-4a22-8eb6-ce3a0dbe2ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 937f42d6-3b76-4ebd-82aa-677f32c35118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 7233be09-7c6e-4190-9887-569c77773c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 0d8f194d-756d-42f7-b768-ed58e5904c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 01c38cd9-95da-42b6-a8db-7ea9eb432e83)");

unit.assert_eq16(16'h034B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1014 d5082989-884f-4838-a8e2-20f9d51e35f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h08E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1015 bb7b832a-57fa-46c6-91a1-5cbbe5b9afba)");
unit.assert_eq16(16'h08C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1015 94e07539-e754-42cc-8e11-be8f533c2282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 c063f7f9-706f-4725-b4d2-b3da043aebb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 b130f147-7a2d-4269-8619-643ac55cbf43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 377d7f4f-3e0e-4c49-8f7f-6daa4726de1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 8e6f89c1-2c7f-496f-b8d3-9760cc7c9270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 adbff7d7-3c32-4315-ad9e-14b951b72f19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 3868f93b-0ac3-41aa-ab61-c041125c16a6)");

unit.assert_eq16(16'h08C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1015 142497c9-62e7-4f65-a403-2cafa2dba153)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h081B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h081B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1016 db0a6bff-fae0-40b8-877a-2a795457063e)");
unit.assert_eq16(16'h02F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1016 167f3906-12f7-432b-8c97-8f67fa350d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 d400f93b-0fc3-420d-8dfb-587882d789fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 73f23d29-d23b-4588-879e-d3146f6d288f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 c8325b59-6130-4923-9b38-21bbb25c8bac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 3f8fc1f3-5be5-4581-bd5e-d8d0b65deb32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 6c2569d0-be2a-45d8-9eb1-03fafba6a516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 281c4b5f-0c4e-43f0-9df0-0dc9bf36a512)");

unit.assert_eq16(16'h02F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1016 33f1afd9-2b18-45e5-aaa5-bc86acc54357)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1017 f5422d47-1d54-4661-81e4-ac2b13090eb5)");
unit.assert_eq16(16'h0DD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1017 7ac57220-ea2e-43df-94b6-70ceeb7999bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 d989deff-661b-44e7-8137-c6ba189c27a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 f63874a6-011f-43cb-aef1-76d95bcae038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 ef8af0e0-3e41-4adf-9add-76491e041001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 d3c5f3ea-2628-4210-b39d-260888ec2872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 14ede7ab-59b6-4832-8116-684f031b6f95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 97c84106-3543-40fd-9c7c-3644d041f533)");

unit.assert_eq16(16'h0DD6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1017 c7660c8a-646b-4855-b68f-ffbd49296236)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h0BBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1018 83d626f9-f083-4eea-bf67-84284de1b1df)");
unit.assert_eq16(16'h06E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1018 95bd2b10-ca2d-42de-8474-3d35ba87588d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 0baff24d-6573-45a4-8b5c-25c569f429bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 39f20600-93c3-40ec-9c80-8b84e9745ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 316d7c85-6e80-429c-bfc8-18ed2c727e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 2bcaaff6-7810-4b99-b5fa-07de08130c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 d619ce0a-a49b-4793-a913-07bdba13a9d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 6ce91f98-74d5-4bcd-b709-71075f1ff8a7)");

unit.assert_eq16(16'h06E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1018 fd00a38c-020b-46bc-a4c7-1a80549d3aaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h06DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1019 588a5e0c-4b7d-4544-b325-cbc90531cba3)");
unit.assert_eq16(16'h0EE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1019 30fca308-4dc7-4602-b6a9-2a0945ce3bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 36695454-f105-4159-99a6-9ef72ca0f908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 943c3fc2-fa56-4d62-a13c-033195d1d212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 9f6e748d-f15c-4e35-86c4-1042398dc129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 4921aeb9-0ffa-4051-bac7-640c5bcc9d1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 480f5424-4c53-4d62-8349-c5139f7f4a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 fe52902b-2b32-4f61-978c-afcc47631a74)");

unit.assert_eq16(16'h0EE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1019 9e8bb4e7-ad3d-42ca-8a8e-6c56818d3c2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0378;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1020 82799fd7-7563-479b-b88e-884ae79e1463)");
unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1020 e0b69e85-43c9-4b24-b662-4fd8eee6597a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 6be88307-d57d-44a3-a42d-086727f8a694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 e913d9dd-01ea-41e4-ae32-bcb0aad0858d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 071fb696-113a-42df-9418-2ba1e9b688aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 978057e7-2f9f-4e96-9593-8d7544977d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 c93243d8-310a-42f9-9c07-36697bfe1716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 2339c041-4401-47c1-9b1e-25b1b7f8d233)");

unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1020 528be7c6-7fa8-4990-a162-f3dd05ba3c07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h0E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1021 efb0d489-df21-4a3e-b6e6-823bb76f14c0)");
unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1021 9de87eb1-5f2b-432d-9edf-e900068c0dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 01516f27-a2ec-4d69-8dd5-1e6afd4f8c1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 dd734e6d-f3f8-42c3-ac7d-8c67b16eaea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 f9aae850-2583-4a50-a7b7-163629107390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 caa81a23-45af-4ecc-a96a-44133d31d92a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 0b5f164b-0e73-4e89-ba6c-1fb1f2b515ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 d63e8164-d9ef-49e9-9866-543360820090)");

unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1021 7dc587a6-4715-4093-89d7-b786f6b2b0fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h073A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1022 c44fca9c-e8ec-4bd4-8400-809d7d96dd3f)");
unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1022 e421fd3d-1b1f-4f86-babf-1212168ac417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 fecd7f7b-b3fc-47cf-875d-7aca97651e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 8052e38d-8388-458e-8705-4c3f57e3a15f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 9e50c411-df2a-4916-a410-cadfc8ccaede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 37d67695-c242-426b-bf08-946e42e0a72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 1640bb22-e541-4784-a419-5e109fbda0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 5274bd8f-e251-45d3-b372-17b6ed0aa62d)");

unit.assert_eq16(16'h066C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1022 c3f0e5fb-d4c9-49ab-ae6f-64ad4e4a7984)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h062B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h062B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1023 2367f13e-bd15-499e-a605-7359815436f5)");
unit.assert_eq16(16'h06FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1023 64d68e8e-3c7d-4f5a-ba73-a47cc4701ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 a2e79251-4c58-4fee-a9ee-2e40345abd86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 3a44f57c-5e80-46c0-8ea2-282e5304dcae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 5c303a36-9d1c-45f5-bba1-b90dc51a1cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 14702f58-14c1-4ae4-887b-05076cb9eff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 4b2be148-be3b-44d8-9c1d-926632fdaf25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 15ca4289-8842-462c-8419-99ee0bbecc3d)");

unit.assert_eq16(16'h06FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1023 5c157cce-712a-4f4b-bc63-1b95767a54f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0800;

#(CLKPERIOD / 4);

unit.finish("jumpjpixiy ('JP (IX|IY)')");
