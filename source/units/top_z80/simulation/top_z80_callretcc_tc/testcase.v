unit.start("callretcc ('RET cc')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0191;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'h0193, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 a22af933-6fbd-44da-8c5b-7b3729be446b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 412da838-1afd-4046-873b-62ac38f1f802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 58bc57ef-3d02-4a70-b6b7-90d5ca01dec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 00122ceb-1806-4e8c-9e75-1d6202a2b126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 be575f53-8f65-4c40-b9cd-c7d5abbd3ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 1bcdcaf3-6883-4b8b-bf56-3e9c58b379f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 f5626edb-afa6-4b0a-8d3a-df989f1dcdf5)");

unit.assert_eq16(16'h2514, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #0 c33c271c-c2dd-47a8-9fc3-4b6e1254b40d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0001;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 f292d3fd-1ff9-4113-bd35-cd4818104476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 e7f53bff-2614-48ef-b6b6-5f49b62e8e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 29a1917b-bc89-49d4-b2b8-621b58934074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 ee6fbce1-72f5-4e74-b191-6dd20aff169f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 7ce551a5-1b68-47f3-8679-908f7a582d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 14ce18a7-dab7-46b1-be35-99c3df1f6a8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 7c909732-6e46-47dd-bbc7-2c7b9daba51d)");

unit.assert_eq16(16'h0002, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1 5d42460b-99c6-4b50-af26-4c1eeca8006f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0002;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h0F0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 7c45f2bd-b203-4d59-8231-6300a8c58a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 146363e9-309e-4bf0-ad22-1dc8728d54df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 10bdcab8-12cb-401f-b09b-cc79a8e21ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 f8fa0b8e-888b-4242-ad67-a935b7c48f22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 e4e1e4e9-7de3-4380-a9a2-e06da5a1255c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 f6545b9a-bf88-45e0-9fa4-0f1f31c44cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 0241d04d-261a-46fe-8d10-83a651729a65)");

unit.assert_eq16(16'hAD7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #2 f10dd0d0-a5b7-4f32-b522-6fdd82f8f3ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0003;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h02D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 31713c09-f432-4c54-9d99-63b571104b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 3f75936f-c507-452f-9993-128e0af0c007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 18fe5f01-5c8c-4eca-9c86-1eb30bb6808d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 e908c678-f37d-44d8-9082-b403b2ee041d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 0e1a1a0d-e4ff-4f50-ac3d-01fec5f83d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 6e0b39c6-af4d-497c-88c8-13055cea40d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 80b7279a-ef5a-49f6-a232-c46ca6d6bc09)");

unit.assert_eq16(16'h0004, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #3 b8e6f876-052e-4777-9c8f-48f838fe4d7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0004;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h038E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 c7c30796-c17a-4a2d-af5a-634a4142f796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 f1c66d48-558b-472e-adcd-5d9be2ac9f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 078be8dc-ce4c-4aff-a697-48e5547bb220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 035602b5-923f-481d-8180-cfdd550b828b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 a85c27aa-bc63-460d-903a-c63583ca695c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 102f9ca3-20c0-4553-9673-2c90de54276c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 58d1c432-7cde-42fc-9207-ab744556edb0)");

unit.assert_eq16(16'h6565, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #4 aced0041-5a43-434a-a365-af80ebfa2982)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0005;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h0A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 53f26f2b-b5f5-42c1-8343-0afb0994c4e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 7e8ef3f4-9d45-49f0-85bb-0b5a342f28a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 921a2fd6-9831-4390-a646-2e51a04c891d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 8089104a-5d51-4127-8d83-a8fac1c8b9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 4225b0ea-60fc-425d-83a4-dfeeb9aeedd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 b3b7a362-137f-4b60-80bc-da891462bf73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 83d7b74d-3f2b-4cdc-add9-12625d4f613e)");

unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #5 fd57b8fe-2350-4952-8370-ebc208764361)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0006;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0972;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h0972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 ff4ec541-c392-41b5-bd0c-22f009ea3453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 996cdf77-398d-428b-b10d-b5d418632b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 ff56b591-3fd4-40b5-9188-f7d27770a8f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 52172de4-133a-42a4-ab9f-120a30223a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 59bebd81-bbdc-4b05-b55d-e9a4252bf987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 60f23c2b-c2fb-4af9-ba63-0eb1348a6c69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 1c04c8d8-343f-4ff6-8329-792532f00a36)");

unit.assert_eq16(16'h0007, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #6 cca8f4b3-ef78-400f-8f9d-fea877ce030a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0007;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h00B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 c9cb8f0e-ac64-4267-a2e5-3672cd13952f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 da468549-62ce-4e68-956b-2ebc614ecbb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 1b5c1f58-5bbf-4fef-89fa-13ab4884c240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 a032f699-1df3-4422-8e17-ff1ef36555c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 0ff689d9-6a54-4265-9915-1a3f5960565d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 d94d5c41-9c4f-4fc6-8e3e-b671dc2a17c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 c61763b1-e8c6-4a07-bfc8-b0223ccd8420)");

unit.assert_eq16(16'h0008, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #7 d5ec4f13-6e0c-42c1-9a76-37e3b857618c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0008;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h0B02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 20653163-c451-4a3c-8575-27e7640e5e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 754ef62c-f3f3-4072-b65d-6f6c1bffdb96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 c1a1e284-b674-4b47-b07e-1678fdaefa7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 0ade5fe2-8a2f-4319-95cd-f00bd69bd6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 2e8d7c43-31b4-4600-8781-e8e126b250b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 a8912554-322a-4f97-b33d-491cb56f5fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 9a86a98c-430d-4e22-a925-dcd61f5a3f45)");

unit.assert_eq16(16'h0009, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #8 ad984071-e8b0-4180-8eb0-50bc6d9d75b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0009;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h05F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 9a5d901e-5912-4cda-a60e-1e898cd5f4f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 ecc75ba3-6240-40d6-8e82-3e26925c0b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 b4171e85-699a-44ec-bef2-b4c1190d0b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 622e5e35-f9ef-4088-9007-25dec5b6289b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 a40428ae-3d79-4148-8fdd-5d574149bec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 8692da37-d155-4adb-81b9-54c1895389f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 88ebabe9-96cc-4660-8469-4358d2a9d998)");

unit.assert_eq16(16'h000A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #9 70744b14-ef6d-44b1-96e9-0c073e0692a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h0F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 ff279eb4-998f-473b-9815-0ec84ba633f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 f4ffea75-6ca0-42af-b8fe-3c1acc4b14dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 aa2c0402-c8ea-4f31-8056-85046a7ada4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 65b66e7c-6732-49bc-87bd-c8db099cadc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 da24eab8-7b8c-4de7-8495-ae7be218cfbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 df6be41b-af58-42e8-a790-bfe3348058e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 a4bb7aed-409c-4eb0-9e30-d056d01843fd)");

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #10 c6ff3239-38c3-42e1-a95c-2882a97f0dee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h070E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 2909a630-d2ee-4b15-90c1-a14d6a09c2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 45af641f-4f1d-422e-b4c0-750f2b3d930c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 c41c04d2-f1c9-4310-848f-87a21a5b0f74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 1955d7d2-8857-425a-bb3b-8a796d45c5c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 8bc957be-271f-428b-90f3-9c43fb4103fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 03b60096-c871-4d04-807a-cb832f879c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 04f9823b-5daf-4d47-b988-8f8f7bc12d0a)");

unit.assert_eq16(16'h000C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #11 f5399e18-b0db-4934-9124-14f15a5978a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h0EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 05aaa215-2088-4ca8-a84f-d340e88efaeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 e779bd26-782d-45b7-b359-87ca71b17eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 cf17fa0a-76a0-4862-902d-1f916cf78056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 a5d90cff-62df-41cf-94ba-43315c41067f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 49c7cebc-81aa-4da2-9a72-0e96586bbc89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 e1828883-a899-4f8c-bc20-3b5a636b907c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 378d624e-de30-4dac-a911-bfad15aeee8c)");

unit.assert_eq16(16'hCBE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #12 4d8d38b5-ebed-436b-8e55-0f856d2eb864)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h0947, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 6763b724-5d71-4585-863e-6635517ad37e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 c5313480-8139-4e99-9c54-64106a4e74ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 48713b0d-9604-4afd-bfa9-b9b610ca42f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 c0fee218-5e6e-48e1-b225-89d058e6ae46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 88b004a7-2aa9-455c-b8e6-28a6c7feaf92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 095e2578-5d0d-444f-a6b5-bd7f1a4a6b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 ad10036c-30e5-4a55-b16c-7c93264093b2)");

unit.assert_eq16(16'h837D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #13 dccae3a2-fc0f-4892-85e5-40194db3bc25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 59bef739-8292-4bab-9c59-ffbd1ad161ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 538e1416-07e4-49c9-ad32-32bfe59215b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 6c3faf87-266e-4e0a-8afb-be757eded5ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 09527f47-803a-4b35-8f1f-b62cde97713d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 a4eeaa30-0a77-436a-9c92-933f4b6454f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 199f1b38-f2c4-496f-b865-1134a598ff5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 7919849b-3324-447c-86cc-f47eb3d11700)");

unit.assert_eq16(16'h1CB4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #14 fe2b1d3d-ec7c-48bb-8a80-3f9b510a3acc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0346;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h0346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 5965b355-975f-4e2f-81e8-73947820105a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 beb3142d-09cb-4234-af42-8756ec84b81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 d025c0e6-b645-4a8a-a5b6-c130282f64e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 6fa2e3bb-9d9f-4681-9f80-79b49dabe656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 f76834c3-312a-4626-84d5-e686f596ce29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 8a5aae8d-52f9-426a-8e17-6e5d1ece3977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 6d0483e5-ca0b-44bf-8d1f-876bbe1ec25d)");

unit.assert_eq16(16'h0010, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #15 fe594a44-fef0-46d3-ad22-d78f5df3bb02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0010;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0575;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h0575, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 cde51c03-d8ba-4ff2-82cb-fc1db79915c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 0863dba1-f70c-401e-a41d-b459e16ad699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 64b177bb-564d-463e-becc-278fdf22efbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 c21baf68-950c-416a-8ca7-dd0195cfd10a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 ab37e318-e36a-4c26-aadf-bc88ba3d0ee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 c602e6da-521e-4f8c-a010-2ff2c4f268ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 04b8ff83-5b82-4f62-a5ef-346ba5f71abd)");

unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #16 dcb17abe-44a2-4b04-ace1-691a1c4abfb7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0011;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0093;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h0093, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 03324927-112b-48eb-a199-e0d67a0d98e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 11267148-9f4a-4a89-8d46-cf0912f9913e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 9716f194-0c08-4395-beee-c849e18e7f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 925ebe6f-82c3-4a11-9572-b414e772c32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 8ee86fe3-28f6-4d3c-a580-03408fb21fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 7f9062f9-97ed-4e86-9aaa-73f12c67a287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 499b7054-501e-4966-88e7-93bf7ab0f980)");

unit.assert_eq16(16'h0012, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #17 c1e43d56-15d2-4735-b38e-4d14b1cc1528)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0012;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 234c21fd-8b19-4fc2-8e1e-9e8c529110d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 59b5c603-41f4-4611-bf21-5806ec2b3c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 2394412e-879c-4d82-b6aa-0036a2d0eb31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 de7d96ff-beb4-4b95-94f5-f82ed55f8a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 82101e4b-ab6a-4ddc-a74f-ef71eb391f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 ee128aab-27bc-4bde-a814-906d7c08c0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 0821d6a7-a157-46ed-88c1-07f7971c524c)");

unit.assert_eq16(16'hB14B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #18 1905f1ea-7d03-4028-8f99-c112a2545e15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0013;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h090D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 5665d3a1-083e-48c8-a2fd-75ba4a14c3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 aeb0d873-fb06-4adc-89ff-ea3a671d35b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 1cd6bd18-56a2-489c-aca0-d7b4d99b3cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 09e9552c-a0c3-485c-a80e-bc0873926a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 a6be8ec8-656f-4e45-bb47-aeb87033b6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 36065763-5d5c-4fe0-b7b2-4c39ae31c1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 cf237870-aca5-43c8-b6da-58ed51ef7f1c)");

unit.assert_eq16(16'h76F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #19 db7dbe0f-a176-4849-a8ae-c265f46f0e2c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0014;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h0A61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 a8c8bb16-b64c-4875-80ea-3df97eec819c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 033827e5-2136-40d1-a1b4-d6e7ff115394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 6e67ff59-101d-4bdf-9197-31d56c153b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 f905f1fd-6f4b-40aa-a316-a90d6d335aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 e7be39a2-430b-415d-ba45-1986acd287d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 8ae04076-1f55-40d8-b173-b641a2c83b24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 675c033a-56d6-415c-9512-572e16491576)");

unit.assert_eq16(16'h0015, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #20 a2388177-136f-4ef1-abe5-500009874471)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0015;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h0D7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 855af99c-cd4e-49c4-a506-a8ebf3c76d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 08b9ea6a-2a34-4abc-b5e9-dd9d4df5891a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 508276cf-1eb9-4c63-aa3b-fd0455938060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 450f4916-493c-406b-8c23-18c49e2e8155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 33979226-5b11-4699-b8c2-a1cc6e319fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 77c1f590-6c3b-414d-b23b-0e2e779de034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 0f8525a1-4992-44ba-adc9-cda799d015bf)");

unit.assert_eq16(16'hDA53, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #21 db2382a5-ebc6-4749-a2f2-dce4131c2273)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0016;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0499;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'h049B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 357b9300-010d-46ca-b476-50f1a1a623ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 707bad1d-1c8c-409a-a3bd-08bc0092372d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 65a4e3d3-31d6-4a0f-90a4-0e08d18f5070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 91098dbe-38f8-4e7a-8fee-b8210b146206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 8a989d72-2194-4f15-862c-d7bb22057d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 90186eea-1743-4308-a516-184838a91cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 0cff7355-f7d2-45a6-8ef3-de38776e4c0e)");

unit.assert_eq16(16'hFF07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #22 71e0d87e-c6db-4802-9b7a-eeafad98c7c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0017;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 6398521e-d377-4132-b11e-37f5716f845d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 52b30dff-dd62-4a02-86dc-9c13da4675a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 49a6e71a-f2af-4958-87ed-99dd421aa384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 4919c4ec-bd1d-4555-88ae-8f2a6842fc5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 73c8332a-67ac-4809-88c2-931c6a3f0f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 731832e0-1177-43b7-966f-11a32b177f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 6e00bdf9-148a-4487-b90a-a36559d25d5e)");

unit.assert_eq16(16'h0018, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #23 12c2f4ed-0426-4720-9e2a-e5b943d72a39)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0018;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 4c9372d8-e452-4848-964d-96463c34f234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 2eed2b03-6608-49bf-a368-a68f7cb517c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 e8a6b393-3564-4b52-8514-049f97316132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 609907f6-c9de-4227-932e-aedd2588ebb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 a8779212-7852-4dee-90be-6521628cff68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 49869571-4bc8-48c8-9f9f-580ecf048222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 c0b86d3a-d7b6-4d30-bbb9-06fc9bf5748a)");

unit.assert_eq16(16'hDBC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #24 ca6d2b9d-b44c-45d3-a1d9-3a9522fffef4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0019;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0907;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h0909, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 a3ec286f-6199-4ea1-a2ea-d17e49880f90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 7f9e6ccc-e39f-4ab3-b082-51df4428c2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 15223554-8f91-460f-a746-9252956ffc3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 c5b4c0ac-6594-44e1-960b-8cdbe30d56c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 32f8bfc8-f5f4-449c-b973-c53f54fc3484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 2974ef15-38ac-497c-b9c3-64da40d96ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 036401a9-5da1-46ff-91d5-a3198ef2bd73)");

unit.assert_eq16(16'h59DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #25 81282873-8c70-453e-b096-2db30858313e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0134;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h0136, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 2df272ad-d233-40d0-8712-a347194e86bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 745b48e2-9182-433e-93f0-11a82ddb8b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 21832e1d-1e15-4ab1-8f3d-0c05870cfce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 d9a76e3c-b4cb-4b67-af43-91ab1e56ecdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 fe52c704-7c56-4f88-b24c-cd8a34a35e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 6ff39238-35f3-4e3f-93c0-12d24703dc46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 db7a7206-e7bf-452c-869f-1ee42463e48d)");

unit.assert_eq16(16'hD815, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #26 e19ec5a7-1942-4593-bf3a-aadd42ae6be6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'h00B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 845171c1-1304-4142-8d26-1aa0453bd753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 4850de14-a111-48aa-bc4f-4cb8d8519c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 fdd61d2c-12ad-48b2-ac5e-655d18a91558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 2e15f8ae-ca92-42ee-afd1-0c2dda002c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 c006f6ae-8145-4c3a-869c-27730328f42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 75012cc4-e10e-4e97-b22e-20ab0ab27897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 18c457c1-c756-4473-b573-36a856a4be3b)");

unit.assert_eq16(16'hB816, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #27 5e40cede-4d58-417c-ad83-dbe7b7b2ae1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'h07C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 04ca7ad7-9386-4f1f-9718-0048e01a7e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 d14cd35e-b063-44f7-ae95-4beb38c2d174)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 fdfb931a-5146-4d3e-8b14-93246833b53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 9fe7393e-493f-446f-97f4-0a48c4315171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 a156a972-ca6d-4e21-8a03-f3b84df3e529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 7120d3ce-f98f-453b-a7c9-b1d06ad0723a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 e6c83e49-3dbc-48ac-b6c4-694f6a2c93e4)");

unit.assert_eq16(16'hAA90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #28 e9c9aa90-734f-4c3e-9a69-9004691b1bc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h0178, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 1fd0733a-8b93-4e2d-bec7-3a2d1c7ef07c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 45ae629e-d09e-4848-b363-7f77ca5ba67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 cf44e0ad-7604-4692-b9b6-987944147b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 7cfcee84-0079-4913-a4e0-8d1779606e37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 d342c0f6-c1f4-4be8-9d88-76688d8a9c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 c85e2665-70c7-46c6-8d46-a46bf09f88eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 4610d2d1-7483-4b32-a61a-2ea9ed505517)");

unit.assert_eq16(16'hCF89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #29 71493b56-4778-49ea-b4bc-5cc4411c67f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'h0851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 c0d3c58b-459f-468c-8f0f-ee8018942329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 1e4d5c26-2888-4c4b-8fe0-da9ced7e811a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 8e10106e-71d0-4ecc-9514-812aa603f13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 8989e902-871a-4949-8730-bffa0dae53c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 c42923c7-43c9-4e93-8ec3-9d9d143dc9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 08aae201-d41b-42cc-a29b-8cfc4483d390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 b46e4f00-2387-4ab3-a296-9f8a30934d59)");

unit.assert_eq16(16'hEBBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #30 efd4bea4-7be9-4b67-b9a1-61644c7b968c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0572;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h0574, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 9dabfafa-67bd-4f0f-81d9-90f2d02c3b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 f093ed18-f834-45e3-af63-0fbec6149b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 e74a5152-4bef-4e38-9015-e99fb5ce0fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 2d93af68-b546-401f-b176-621c7c20b9f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 a7fc400d-c6bb-409d-a3fc-f78dd8c3570b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 f518b409-290e-48b0-81d5-fb3b96a88c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 352ddfee-d2f3-43b9-b455-91eba2b808de)");

unit.assert_eq16(16'h4D6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #31 00cacbd2-1a8f-4cd5-a53b-b5e285944b3f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0020;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h08B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 917d4053-2b01-4c59-a91b-26f8f8439a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 d9bd1c59-b465-4ab0-a54b-96e3cd1c0955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 8a186dc9-6b19-4934-bf8c-1ea851aaa184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 b4df840d-2838-488e-8907-938da52645e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 c86376ae-0451-4c0b-ab7d-2ac8d84c148b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 3c1b16d4-2e8e-4079-ac46-fe7f395dca36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 3eaac5f9-68b9-47d1-a482-2b0467d301e0)");

unit.assert_eq16(16'h0021, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #32 e1267aab-4152-4311-b02b-3bf51c56b5dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0021;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0349;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h0349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 07f8d926-20d8-489f-9400-6ff0526b0062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 6be4c157-4496-4f70-a645-bb3973c898f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 33e13f26-f38d-4cb8-84ed-fe5ca4615ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 f8d16e22-1105-4e4e-9281-5d9eea24ddc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 87908d60-212f-4814-a42b-c266ff9f6cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 3fd9073b-cdcf-4081-b0ae-2d61350cbb21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 5d992381-74f0-43a0-9310-89f9eaa63a8a)");

unit.assert_eq16(16'h0022, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #33 f3fdf729-5dc0-4cd7-b221-07fd3637ba68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0022;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h045A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 55ac9c49-0be6-4298-b27d-3525f43532b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 8b2c3d21-f24a-4072-90f7-0c754e153700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 179f1419-1e63-49d9-b457-05d005fb4fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 83a01d90-9737-4088-89ae-ca0123c41615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 c7c972b2-569c-4fc7-8b56-4b5a3dfaeae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 041f792e-2d47-4873-ba0a-c215d14468dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 d6f78257-db98-472c-b4de-79e0d3ee453b)");

unit.assert_eq16(16'h0023, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #34 5f0329ca-6609-42f7-ba68-445033b064b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0023;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 d2aea516-c304-4543-a842-3f654caaeb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 148c1d6b-7f79-4dd1-bed4-85666f371d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 7d270976-e4ae-4f0f-a4ba-fcd7b628f7e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 11dab79c-dd08-4a43-8887-f69a3ba89951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 a65b7632-8835-49e1-8794-7d25f74d23bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 f3df4750-000d-480b-acff-6d6f2d12f732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 161255f0-f099-4f14-af9d-1a9d7954fab7)");

unit.assert_eq16(16'h0024, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #35 79c761cf-3a54-45ea-8797-675f08fe2066)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0024;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0483;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 e7678d6c-1181-4f6b-bec3-d17019ff4464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 dbc97310-f8fd-47eb-9bf9-3d92c36202da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 a15a5f28-c7e9-4893-aac3-a79c4eb25b81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 967ede89-4d41-4151-945e-7d27b3fe4618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 5e92f6d4-065e-473d-90f6-5d47f5200abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 0fe03e68-6afd-4244-bc24-ee72e68ef806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 b3b637d4-e098-4f90-a6c1-13f317c0585a)");

unit.assert_eq16(16'h0025, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #36 580fc65f-117a-4c33-bcfc-c23569c692cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0025;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0076;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h0078, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 43573f2c-9855-45dc-aa83-677a135bcc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 ceb3002e-264a-4819-8a3e-2303e3d1a7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 3f094040-7284-41f7-9f0f-7f94446f7244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 9fb35bbb-b962-4b18-9d9f-69c9449587a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 45bc816e-dd19-46a7-b867-e532df8c5d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 d6d85bbf-6690-4be5-9c0e-83b1d4533492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 7052d4b3-f130-4f2f-845c-5bcc135bfbbf)");

unit.assert_eq16(16'h4433, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #37 4b89fd6d-0ca2-4f2d-a9d6-4383b035540b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0026;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0139;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h0139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 19ba66fc-9473-4e76-8912-568c662645e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 f1710d69-2dca-4505-a348-e58412b92510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 461bc7ab-fdd1-4223-8389-53b3e6e484df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 4be7e55d-cd1e-4be0-a9ed-9c1f4f4bf14f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 9b04a32c-7a55-4dd0-8582-abd9a0b0878c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 10ba615a-4705-4aba-9476-0a572e3a5e5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 3bd967c2-14d0-4351-a31f-954ac195e549)");

unit.assert_eq16(16'h0027, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #38 1cf4b889-1ca6-4a40-a83d-2eb8c12eadbb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0027;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 afede473-b3bb-4b56-a29a-702818944953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 18b34e94-d0c9-4695-9e7a-ce1bb819e732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 7965a8dc-262c-4819-8f63-0d11cd1c7e09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 9af015dd-b2f2-4d46-b0c1-ae1db99ac6e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 1637b35b-aede-4c6d-ac44-7eede5ccf76c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 c1507989-b046-40c8-a320-5c32c6bf4fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 7c9a1808-9da1-4a93-b46c-ab5cfafdac1b)");

unit.assert_eq16(16'h4D47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #39 84eae871-5738-4f0a-86fb-607184a843d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0028;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h0FF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 a04ecb2e-37c4-404c-9e5f-f7ae1c1b2c58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 7cc20334-e986-409b-a4e1-6910a5f4e16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 2ae0ed18-f8c7-4390-865a-08666e8ca9f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 d58657d6-8e9e-4a9a-a4c0-db1e658a509f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 244242d0-44d2-44b6-b06c-3019596d23e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 daa0fe8a-eb33-4774-af5b-842de66879e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 78b5da49-e6b0-4518-a9d5-481d70bb8e60)");

unit.assert_eq16(16'h3FE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #40 b34ae66a-c3b1-4602-a5dd-88d1d2d1332a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0029;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0607;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h0607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 4bc4dfe8-7297-402c-b5b4-551ae9ffa0c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 f4accdc2-aef3-46ba-b096-1f1f81f7fcfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 6bd7a36b-c1d5-4a4d-8a91-c499dbab3688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 587738c8-846d-41ac-944e-e766e28b9b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 6a77e0a7-0d56-4d91-bc0c-f5828718ce88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 be61524e-aea4-420b-8589-4d7106101b07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 f54216a4-6622-498c-9e99-f745731f487c)");

unit.assert_eq16(16'h002A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #41 db584589-091a-4b91-985a-586177fcf751)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h03AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 454d09f9-4011-4030-a2d7-428b43a213db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 86be4503-df30-44b2-8e35-1193ff67be33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 6b0d863a-3322-4580-a83b-e0c376650100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 0e069e6e-75fe-4d69-9748-6d95c1b7d6cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 ba9bf492-6aba-4280-8b66-a3518b3cdbb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 57e897dc-966c-44b7-b580-6918e7f1535f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 deae926c-9835-4cb2-a959-6a7ba5be0062)");

unit.assert_eq16(16'h12DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #42 a5503c34-a7b1-48c8-ad4b-2574e9f2ee2b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h0C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 a1627f37-ebd1-4981-843b-9509268cd17f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 a5719d4e-3c20-4f23-9418-a104aaa0039c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 384b9f01-db31-4144-a1c0-f60be39f23ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 e90ac828-83b4-4cde-ad63-f7a24d95b171)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 ae88d4cd-aedb-49ce-803d-996f994c8551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 d2c9437c-de6c-4b67-8e12-7136539a859e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 aec048a8-b93e-467e-8946-4f44063162ea)");

unit.assert_eq16(16'hC0BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #43 9bb962c2-3567-4182-bee8-bb0782a7f073)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h021C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 2d82dd1b-a8f2-4a9b-be58-88fbc8dbacee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 e19be516-2931-4494-ab4b-7bf456e211a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 2f778a68-f1d4-4bc1-87eb-0e51cb332a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 3910e9bc-6e32-456b-8e54-7d9bceb24352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 1ef7450d-954c-4012-bd20-fe04c80e956b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 81c9f835-3e2c-4057-a868-0bf8e149f7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 e5e41a2a-9c2a-480c-bf8b-39eeb7e411f0)");

unit.assert_eq16(16'h2F6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #44 f52a4696-a2f9-4c10-9c57-01fabfa256ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0D74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 02090abf-611e-4bd7-a9fc-93989292928d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 9273da4a-d450-45cf-8fbc-1fa15711a019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 ddcab4b3-a4e0-41a8-a973-c3f86056bc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 81819dd8-793a-4ed7-bde0-1d28432eb5c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 f91e6424-84fe-4b13-acef-afb220e7b1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 f7430551-8894-4c58-9f32-4d2c8ddf8d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 15e38214-03cb-4c62-ab3c-2e7512918df1)");

unit.assert_eq16(16'h002E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #45 8105d26e-ff34-4dc5-81a6-d1e0d08dfb32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h0B94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 05997320-e1ad-4f0f-98bd-ef7f7f48e23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 e6e906f2-da57-45d8-b665-9dcbf19cd4a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 ac85bfca-56d9-4ae4-b1cd-703dc1e7591c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 28ac723d-89ff-4f62-b1df-1c4afed750d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 739fc42c-c9b3-437b-94a7-42a3af73331f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 0e294580-54d0-44b8-b693-d436dc2a1666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 1d250b01-965d-4b38-824b-a5c49d197893)");

unit.assert_eq16(16'h002F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #46 b0fb95b5-1177-427d-9f9c-46e1ab5d8973)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0189;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h0189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 eb5747aa-bc79-4973-809e-3fb29eeed73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 296c0811-d7ac-4d6e-819e-1ee80298f632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 b6336b29-6c49-4b15-ab3e-fa030de8fe9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 1a549326-5461-4770-9530-554dd9609890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 54659e36-2f30-4d3c-911c-c1801c02ef0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 0e969a5a-8fbd-4e97-aa94-253d33d91c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 8c9ea515-c655-49b4-98d2-af3d7fa8b788)");

unit.assert_eq16(16'h0030, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #47 c0975d2f-6968-4db0-9efe-e1288cdb083a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0030;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0442;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h0444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 18e7b6f0-8010-4b0e-8db3-3f2042cd7273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 d0791654-69f9-4127-a7ef-247854b9ccae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 6b104d5f-e84e-43f3-b5e1-c51dd3e3ebdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 b230634b-6822-4d8c-aaf0-af573f6da3d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 773d2112-16c4-4cfd-8444-0649f271426e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 4699891d-40e1-419e-b571-a70845fcf06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 0c1d3afa-441b-4df0-9f21-d3bb61c1ff49)");

unit.assert_eq16(16'h95A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #48 ce009625-1bf0-4cd4-ab06-221bc1659875)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0031;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'h039D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 937be7a3-ac1d-4d50-8687-776ba6c53e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 d1454fc0-fc3e-4508-a3a4-986fd684d0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 8097c66b-08fd-4bef-aaa6-9fc3698c73c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 aa15e577-060e-4114-b7ea-f48aacbea951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 7d4e3c91-addd-4474-bd40-0e7833a63d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 974aef99-7ff1-4cd4-98ed-54cf7d5c5c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 e343f756-6cd9-48e9-98d2-a6a7cb592bba)");

unit.assert_eq16(16'h0032, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #49 9939c15b-c16d-46f4-8e5a-783ac03368c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0032;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h046E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 fed2f5fa-0ffa-4b42-ab93-1c7843f19da7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 0f9366db-516b-4762-a9d7-944e1f8060f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 35aec831-2f7f-4177-9904-c3ae27c76c01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 9137d01b-9a25-4a3e-9189-35468624fbfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 9d19bfe2-1c5b-47de-a863-95d6b05bba78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 611b4007-0d7a-4c82-aeec-7ea85c128a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 1da584f9-c5b2-4a28-ab7c-d3da4092547a)");

unit.assert_eq16(16'h0033, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #50 5f223b70-c45d-46d7-bf3f-21b46c1a331d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0033;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h0A0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 92e676c7-2452-41d5-8609-7c44465a568d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 34fa83b1-a48f-40ad-9f16-0b5cf660c529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 54e085f3-0196-438f-879d-eea0eae5d65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 ce0c1544-40d9-4ac0-8882-c3adda84278d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 a72efb6f-7b3a-4294-9b99-09d3f3405c94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 88a617d3-d435-405d-a537-35ed924a00f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 e1b36d2e-b64a-4e69-ba0d-026e4be9bd04)");

unit.assert_eq16(16'h7FD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #51 53d79a74-99ed-4141-8239-ecf286e6a679)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0034;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h0FA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 d251f088-ee95-432e-9f58-79cd12dc39ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 2c4fc767-c4de-4e87-af09-8775ca68cd87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 f28e8b42-a0a7-435a-bfdf-47c11f09e480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 beb061ca-b935-4dbf-bfa8-96436e10a0fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 f5656e22-781c-45cb-83e7-5d9e181ab92d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 c7caa852-a337-4ed1-9f25-60a8eb4da888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 f4cb5d08-3296-41e3-8cb1-18c3626f587f)");

unit.assert_eq16(16'h7ADD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #52 a71b138e-e122-4f9e-9a41-2d3685115edd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0035;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h0D6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 d24f9f78-0703-421f-9e77-cbd65b958756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 70393398-0a0b-4a14-9f61-a3ff7e26b721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 0590f66d-a2e6-4423-a023-c9ffba0a3182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 bd2e4bbf-8c1a-4cc7-b7b6-0a77d59a4807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 e8499bef-6b62-4a4f-bfd0-affa4c6ee95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 24534b03-b1af-449d-a8a3-78a307e40752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 278053c1-0321-4f03-ab85-1b38f1d434b9)");

unit.assert_eq16(16'hAB77, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #53 74e55412-f6d7-41b5-ac96-774aba87a64d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0036;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h0EBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 7a8f223d-8e66-4b9d-9203-4a03cfb34fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 56c19c49-5254-4c3e-ade4-f6b55466efa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 4e8af24d-654f-4f9f-aa50-7e0999353922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 5c857c7c-7755-45b5-8e50-052207f4b7cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 db447aad-0f5b-46fe-8f17-f54bd7d3c928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 541d52fc-6046-411b-8d46-8f0129553ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 7a42cc15-c7fc-4ccf-a743-21649b503e76)");

unit.assert_eq16(16'hD9D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #54 06c67a60-250d-49e8-82ed-6054df6deb8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0037;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h0247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 cdb53e4a-e6d3-40ed-8d1b-f3aeccd2f778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 cbff62bd-357d-4c8b-b1a3-5fd4af92205b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 1bf1de68-d17d-48c9-88dd-3024ca7e7fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 62ed9b92-f455-461b-abd3-7f452e54ad47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 d06f83b6-6218-49b4-8717-3579e4f1a09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 6188e91a-c589-4669-900d-bc5d816a5751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 476135f5-d597-4404-8bba-561f25995e17)");

unit.assert_eq16(16'h797B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #55 c2ed5fa9-ac1d-4ec1-8b55-8e4b6e541c96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0038;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h0FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 ed1ac0b7-a611-404c-ae85-be2c55591981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 e4863883-5341-4581-af9e-f6e11899f724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 99beb218-f85b-414e-8a33-8eb7a9863b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 6aa29fc1-cf69-4df0-b69b-18051bc66836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 acdba3fe-d549-48a7-b5f0-3a28adab825a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 aa83ac43-68ba-490e-a9de-2673e62b4eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 346633aa-3f92-4309-bc89-4be90ce15ced)");

unit.assert_eq16(16'h0039, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #56 34932b05-1342-4715-ade7-b88555fc3109)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0039;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0923;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'h0923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 4617fddc-333a-4d00-b0c1-bdeacded874b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 27b2969b-7131-4584-bd6e-9eb915e52aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 2959a7e3-884e-45b1-9b2e-a6d59c41bbbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 39684c99-fcb2-44d6-8834-7150194985ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 ce8fee9c-0de3-43e0-ac50-7c8390e123e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 a60b6060-46b7-443f-bfdf-f3fbc1732721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 74ab2a18-d203-4a9c-8cf5-3b5f3ef3e6cf)");

unit.assert_eq16(16'h003A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #57 1dcfa6b4-5740-4e35-86f4-c3ff1c41b75a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0350;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h0352, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 a158286c-034f-44ec-bf52-035c4806a83f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 ba33ed51-819a-4d96-9b24-d40f7cfe36b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 60246d0b-e6de-47df-bd29-dc326383b9bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 2866d263-46c6-4100-a497-26f7eacbcf76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 44d64a1b-efc1-4b2f-83fc-a29646388d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 53eb94aa-5a23-4648-92d7-10df9521303d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 f66e30e1-880c-4eb8-8dad-9346fc789605)");

unit.assert_eq16(16'hDBBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #58 4b67fda1-1e32-4026-b77e-d7f0b5668aa3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h0ACE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 7c5884c6-b7d4-4f1c-9cc1-f2ea6c3cae9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 b9302ddb-c729-4f70-ab35-2aa02854ac10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 4e3414e2-fa90-479e-b3f4-a12c6770ab7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 da267e2c-8567-49c7-9b50-33f199a56437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 070892f6-5d24-446d-b89d-69bdb48177ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 de173ffc-477f-4389-b542-d962d5392597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 702b3e1f-87a0-4e27-917c-1ac0811cd61c)");

unit.assert_eq16(16'hBFD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #59 64c6dd70-d3bb-4282-9ee4-9dae28b78a4d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 d36a46d8-1038-46e2-8c92-5d49b79462a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 22b6c55f-cbcc-4021-8de6-64941c563124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 b1c11a31-343b-4300-8cee-25447cf3f426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 f0505669-78ba-4822-99b3-6752fbaf2827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 fa8ce71e-545b-41ec-970d-c706901f98ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 dcbd6b0f-4b5d-42e2-95ca-81507106abbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 8adb631c-18b0-40fa-b63d-ddfe46117f54)");

unit.assert_eq16(16'h003D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #60 5454e6ff-543c-4090-84fd-833fe4c2c12d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h0A9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 5d01cf84-440a-4101-825d-9cc00840c38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 b5cdc5b3-0d15-4825-b0f6-3fa0e212990d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 0534e7c3-bb92-4aa1-9432-1cb9ac4600c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 c3d3a289-a5b9-436f-84da-9b3812697677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 81c86467-88e4-47b9-8b98-c1becc63af10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 8479c6ff-f64c-4c47-bafd-0c7754efcf4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 5bb5719d-d5ba-46a5-b3e5-2031c9c1315c)");

unit.assert_eq16(16'h736C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #61 77cbf387-24fd-402e-8d13-e1d47112c012)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 356be711-ac14-4cdf-885c-86403a28c5fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 1cf5f6ec-979f-420f-a053-ce69c214906a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 f3f510cb-1384-40ca-9e48-8ee2c4391735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 936006e4-7d54-4f06-8c8c-e0b1913e5d65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 b8207c62-b8c6-4aaf-b510-10b4b1e1317c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 91037a56-a1ba-42a3-acfa-8c98d9e839c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 c147dc60-d475-4128-85e0-ecf606744f78)");

unit.assert_eq16(16'h003F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #62 bbacf11e-8283-448c-a45d-27f56c3f628a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0746;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h0748, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 724dba4c-def6-4087-a406-7d9bc721ebd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 1e2e4493-a769-4287-888a-5b9918a58669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 1544787f-d741-4fc1-a2c7-b7bd594a5bed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 11ea6c80-0028-4480-8418-795a78b8c519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 18b99fb2-ad7d-4680-9ab9-d586de309912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 4848f01f-b838-476c-bd53-f8ef118873f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 260c3041-ed09-4bc4-988f-e14e3b8a480c)");

unit.assert_eq16(16'h2CA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #63 96bd2b54-6d8f-495d-8299-4888efa461b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0040;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ADE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h0AE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 38a090e7-774e-4d91-81f6-6ea253076071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 0f85908f-834a-45e3-a8ab-6528eaa8f133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 126ded70-9e5a-4592-a72d-e8c08c872a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 de99cf37-918f-4713-98fb-07fba0e4f4e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 ffb789d1-2efc-4fd0-ab02-8dc9831afe8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 58941390-27e4-4965-bc9a-b3b1a2d90e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 eabe5501-3706-4841-a228-8880ce0ff68a)");

unit.assert_eq16(16'h6708, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #64 22354be7-ba0a-4246-8895-cea5843e17ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0041;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h0F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 6eff6a1d-a17c-46b7-be6a-4246a68f126c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 0cc0d2db-2b97-4578-b405-f752147d39d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 8084daa9-763d-4e79-91cd-1eae85796216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 95a95807-5a0b-4542-80cd-ca6d40302ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 4637953b-66c7-4f55-be6e-82040d81c4dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 afe6d6ed-5904-496d-bd4f-56b7b7531688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 c14669cd-4817-4965-b1b1-3c4aa073c669)");

unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #65 e6d44946-88bd-4811-8f4b-a6e5bb5304c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0042;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h0CCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 dea0fdad-2228-4568-ada6-90989d64ea90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 d244565d-a631-4403-b787-d53198893a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 a0aedefe-c5ff-417f-b2d9-cf8ef57dea4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 ab024e20-40a9-4799-87a5-7f0e6af83266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 dd1c45f7-95df-47ab-9913-362d55f44124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 c9e4cfdc-bdfd-4cf8-b0c4-18dddd6f2ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 18f71a36-7467-48d0-8a3e-340873a2aab0)");

unit.assert_eq16(16'h7488, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #66 0ded3749-36ef-457a-bb85-66a1d802c22e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0043;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h02B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 85091cf2-49f6-490b-9599-f0526ff4dd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 cf51b68f-ef7f-4b0a-be50-156484fdb2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 e09c3772-9dbf-4376-a55a-ea71916aea87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 682471c1-a6f5-4b05-b389-979426b13afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 8c58390a-49dc-4f14-846d-13f721ba7574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 6f435955-11dc-43e0-b02d-dbc62c5a472d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 7f3109e7-42a1-41a7-bf00-51b1491ced40)");

unit.assert_eq16(16'h0044, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #67 40becb09-eff7-47ec-bfe3-8361333b3289)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0044;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h0DD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 39325bc9-0893-4cda-bc47-457c68154571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 c558c660-70e6-46eb-ac66-5c13ba014490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 00611910-f6a8-497e-aa98-7161ab7b2921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 2c3ba99f-620c-45e2-96e7-e10023ea851e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 5ada388b-ced5-4189-93b8-f3a4653751e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 6eb335d6-4d1b-4d9c-8f9b-68647c4a9408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 2991e687-bc58-4ee5-850d-74c921e32e7b)");

unit.assert_eq16(16'h6BD5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #68 a13a052f-f652-4e88-87ba-ea0bcc83f4f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0045;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0557;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h0559, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 e83fe4ae-30f4-4382-9d19-ffcf455d196c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 147b5141-a0af-40b3-97b4-b162200a5288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 91207467-e145-45fb-bcb4-324dbb33807d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 5c1b7f14-9b7c-4866-95d4-fe6ac9e9b3b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 40408416-f8d6-4f32-a002-d5ad9b4e931a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 ffd5e57e-f997-4b2f-b7a0-a7e13054225a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 2e22cc93-1c67-48a5-92df-8e9ec6984c48)");

unit.assert_eq16(16'hD41F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #69 6a770fb7-8440-4c44-9600-08b8f30ae05c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0046;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h03D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 1a0d1c8c-5f96-4fe6-a012-9765992d996d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 f75cde0a-dedc-40ff-b722-e39955edf086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 5388fd3a-7d4a-4680-ae9d-bca1f1bbf522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 6b402133-6733-4343-807b-ade71c5a35e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 cec97699-3762-42d9-ac21-880e55a19d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 d6fd5385-4ba9-46cf-9649-f2ba56c2ba79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 042e7ea9-18d3-461d-9819-5362a9f177f2)");

unit.assert_eq16(16'h0047, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #70 9087b7c8-5075-478a-9bca-0e4953ecf336)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0047;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0984;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h0984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 0a05c626-6f87-495d-960c-757d21500e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 94544c7b-9c8f-4529-8078-ba5503db79ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 67ed845e-bd15-4545-a6c6-7ee90e7cb063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 5f1ae020-fdd8-4513-861c-ec1405760146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 3b0ee65b-68d9-409d-97c5-1b808c073ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 041ebc03-50a1-4598-9458-69fcb0b2b9cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 cb868152-7453-4cd1-a58f-171b06f7fadb)");

unit.assert_eq16(16'h0048, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #71 15e63ee3-ab85-45a2-b204-c080af1e9146)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0048;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h04EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 7c3dd173-70f0-4b8a-b494-c7803b9b5338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 3111ca9f-67cb-4604-9c99-1dd84e5a704f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 f725c96a-ea38-45d2-be48-627a12fb194c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 5412daff-e013-4917-a231-c0d0c47a0bce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 174f4213-22d6-4c18-9efd-a4b91938bcab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 7003eeb7-2827-4bfb-9419-dfe893cc817c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 6879b34d-11ac-4abb-bd6b-edfc53f70eee)");

unit.assert_eq16(16'h0049, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #72 ca430c5c-b185-473b-ab3f-5ccb80c8fd97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0049;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h069C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h069C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 3aa9169f-da66-43fb-9e44-f603a7f25cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 1fdc2beb-689b-4745-9fb9-36b4376eb5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 15ba60f0-f953-4b39-9879-6c311519a46c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 c6a4decf-2eff-4c27-a242-00cbd353c40d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 8482386c-6c25-47c6-8c9a-eb1eed698dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 a0f23920-c7ca-46e0-8629-fb1df6e6ca82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 d1253de3-f81e-4894-b4c6-4633bb09236a)");

unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #73 436ff104-7b67-4c5b-997f-847bfc2f83d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h0B5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 88b7ef39-574d-4243-991b-997141b11cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 3e90ad47-3f5e-42aa-80b6-ed0b6f6ed6cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 8807e0ad-c014-4cc8-92e5-a8ee31841865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 75108835-9317-408d-99f4-ab45ae771f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 fd624438-8a95-4afd-9545-8ae15e9267da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 578b70ce-289b-4610-934e-2f8b97661605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 a2e2769b-fe68-46f1-b436-fc805378c661)");

unit.assert_eq16(16'hEE31, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #74 c0575311-df2c-40f9-8b5a-580310aa66b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h08F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 a151d792-1e0b-47f9-82bf-8ef3d913907c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 d16d61f6-eede-4ef3-9a3a-957062a0f669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 fab7ae49-5803-41c1-8522-eba1fa57941b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 714e65e8-edb9-4352-b173-50fedd261ed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 fb8b8c90-d960-4386-b967-a980d0e8e7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 1f7e6854-75ae-4aba-8ff0-d268867ecf91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 1f9e0441-0f51-455e-8d99-17e61d504d0b)");

unit.assert_eq16(16'h004C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #75 4641a341-3c48-401d-8a2f-8a07d2cbac67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0588;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h0588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 9fec5d0f-fbb5-4fe1-aabe-f4e483c7066d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 cf19db6e-6c98-491d-940f-c99bc4a18df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 74d5a66a-9d7a-4e31-a20d-ea8f9ca0c838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 77122f2e-e187-4661-b9d0-ba8ce631bd38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 2d7b6009-c684-4a61-a2cd-f64dff158a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 01f0ac21-8d5b-43a6-bd33-ffe28bf1d9b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 1cc8562b-b59e-4375-93f6-841401106d34)");

unit.assert_eq16(16'h004D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #76 a18198e5-09f6-4710-b90f-70face9dec97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0638;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h063A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 ef555338-b1be-4dd4-b69f-258d81911677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 1098b6be-becf-435f-8f2a-7a90347a31d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 7b2dde4b-e6b8-47c3-b1c8-1845431e94e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 cc947ca2-603f-439a-875d-ce012fa93c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 019fec3d-272c-4051-a3db-08e840677169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 103d9a86-b0a8-4d5f-9833-6782d8438d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 170128e0-6cf9-4995-bb9c-7d931bb485d5)");

unit.assert_eq16(16'hEB21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #77 871334f3-7c25-4e32-82ba-23f3f555445a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0632;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h0632, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 5bfc46e9-96f5-4349-89b4-aec18901b280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 afa9e534-2714-4855-a4a6-98902fa6aeb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 74952b25-209b-4663-95f8-775bce08ca43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 1c37beb4-104d-4206-948c-91066c7aeb3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 def1c61f-1307-4b6f-9a1a-b9325caef29d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 30b7c6d5-d6f6-4594-abcc-b80ac55c499b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 224cc126-3790-4f3b-963d-6d4bdd6659e1)");

unit.assert_eq16(16'h004F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #78 fdb2e85e-5e0c-42f4-8e9d-f6f13dca5de0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h0CF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 e4e7f5f8-c28e-402e-8c27-6b7d52e1b991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 f9c778da-c60d-4c73-a3e3-457dfc904c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 79382382-8fc9-4faf-b831-52f238dd297a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 3a003c22-6847-4a1d-a614-b94403a875d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 00d96eb6-7323-494c-99e1-4ab370181a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 143ecf4a-1e05-4354-81a6-627d7c129d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 e8822571-4597-4f8a-a009-1324c9e1fe7a)");

unit.assert_eq16(16'hD10C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #79 fc8410e9-45c0-44f1-bded-eb3eeb7aef3e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0050;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0393;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h0395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 52baa0ea-0406-4c5e-88bc-5858aa702300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 994b728f-30ad-46f7-95b3-c2abde70fdbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 dcf57d10-846c-41d0-b0e1-de1aec9725c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 14419d7b-2a74-4b06-b796-fbdd0a956a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 fb99d84d-f8b4-4ef9-a9a2-9da65db785b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 1e73df31-d8cd-4158-8026-511057cc3907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 770dc108-00a7-4366-92ed-7864583fe92c)");

unit.assert_eq16(16'h859E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #80 a47d55ad-21e1-4a38-ba95-e83a5a6877ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0051;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h0CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 e922a04b-beef-4e01-8406-576c28d60ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 4dc5751e-5ed5-482b-b99b-edb4477d1c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 bcdcce89-d0c7-4e15-b491-f57113562c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 59183b4b-6c1c-4ccd-a4b7-6208fccc7793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 81884ef2-4e3f-492c-97cd-48ed8227c0ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 ad2315a9-b505-432f-a116-98451d54aaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 a66e6d84-cf01-4d4f-833a-e29d4cdd5a5e)");

unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #81 e9024ddb-9266-4bf5-90ec-514bbc4f84f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0052;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h0B51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 c8321c46-793d-473b-87f5-14f1449d4cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 b625349c-0430-4554-8f65-70e07164ecf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 e0e1189d-dea2-4001-9712-b841edbedc13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 549e7968-a625-45ae-abaf-a819d6686a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 d04306e8-cf19-44bb-8ed3-d8578149c06f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 a265879e-0ded-4c32-b618-2bc8fd0fb11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 a8313fdd-aebd-4749-87a9-a3e6531ff001)");

unit.assert_eq16(16'h51EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #82 000411ee-7536-4ab1-a747-6ce040203de4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0053;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h027D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 90cf59f2-dbff-41dd-a711-bc5a2aedb3eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 0a9cec75-d434-4fd8-8fc6-2a2cd9d816b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 1f9d43a6-b87d-4a90-a111-7759336fbf93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 f0479e61-5572-437a-804c-3fc99e08eaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 2ca44abf-5e45-4634-bc04-5969c0f316da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 bcca26a8-d044-4485-802d-9abacf1a7bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 9cf5e9d2-ac0c-4b31-b394-6424807f6a19)");

unit.assert_eq16(16'h0054, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #83 9a389f45-78a1-49b1-b5ff-66df71cda3be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0054;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0854;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h0854, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 fc7cfeab-dfb9-4ae3-9001-e9fcfb091c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 dee36c5e-7126-4d29-8ec4-40792499d389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 24564645-6cd7-456b-a1b4-8613db2cd56d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 6f1c0858-12e8-4c2e-8dcd-3f549c963322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 58954780-26fa-4cc5-9408-e0e9ee6c8ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 f6355319-7c87-4e3b-9e07-005ab0859fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 c9d5ee66-77db-4c8e-96c8-2f674fff2763)");

unit.assert_eq16(16'h0055, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #84 533d7ba3-4c7e-4127-ab98-7ff28733d237)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0055;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h08DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 c2b0b0c2-2938-4d1a-8fd5-ad61c1d11745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 8b6f7e1d-4f2a-4812-a05b-59730aa215ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 8966840b-077f-4879-bba0-55e8a22770ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 98d42c76-f932-4356-a2c5-058b8d09ffb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 ca29dfbf-7b7a-47ff-a7a0-82a1a3862855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 82dac534-de05-4f30-bbd9-a7d5eda0b8a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 7a83f290-76dc-4f1c-95c6-40d4d660f03c)");

unit.assert_eq16(16'h7192, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #85 8cc0af04-a3fd-469e-ae76-82a0594141f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0056;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 7837dff7-e86a-4b06-b678-7c5324d2ed1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 2b32e3d1-57c8-4029-99a7-e24469864952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 12aa2abb-13ae-4ef3-9808-b74d9abd1f17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 0f927eb6-1592-4f62-8d75-2708b67e7e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 72c10f89-ec1e-45a3-8728-c4d86985be2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 00e8de39-0279-46d3-a49d-e98a1c8dfa9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 7dd3c507-4e05-48c8-9a14-80879ba43aeb)");

unit.assert_eq16(16'h0057, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #86 8b0662cd-7370-478c-bcca-aec788976167)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0057;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h0DBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 dd811026-c079-4114-8cbe-3a56de4c7631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 d74fe479-10ad-4496-b0ff-fd5b24445ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 774fe666-c8d9-41c0-b0ca-7b4d30cdeb9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 d5a2ae2c-a6c0-471b-88dd-500319263984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 d6fd7480-08be-460f-ab41-d9b8ab72f2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 372ddaba-76c2-49e6-b1cc-f824d73517bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 75b6cec6-f66e-4af0-941b-42ca75c9f450)");

unit.assert_eq16(16'h0058, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #87 0fde0cc9-9b7e-47fb-9506-a452d0bcf712)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0058;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h040E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 eac77b51-005c-49d1-bcb7-094dbd995a31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 b65477b5-de07-4c88-9418-70f493439bc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 8602a675-03aa-467e-9c03-ca77df7f83a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 4bc0091c-81f1-4a4c-9b11-bfa915aae2f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 0d669421-c4ab-4812-b8fc-625a1ded8ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 6efb9af6-a533-41f1-9b4c-9f77d89961ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 839b3a0e-4415-4f6e-844c-f3ad33e175f0)");

unit.assert_eq16(16'h0059, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #88 acd88230-6c04-4038-853a-2b47f0fecc30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0059;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 91125979-55a1-437d-b036-51beea279247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 4968d0d0-0ac3-4fc4-91c2-8a69116e15a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 4da31368-e032-44c4-b401-9033892a2fc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 1128be7d-6b83-4217-9a9c-11f711434bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 e392cf3a-5823-495d-857f-872e68e5d877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 2c05a18c-9347-40ed-813c-3710c1f67866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 66a56fc3-599e-489d-bf9f-fd22637e63dd)");

unit.assert_eq16(16'h005A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #89 af22af03-519a-4436-bf5d-118255a59a03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'h0F0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 e7421d0f-2ff1-44a3-8b1b-313dab31c27a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 8affa726-227b-46bf-b9ad-df0aa5e8c000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 39575348-0b31-42be-9354-79cadeea248d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 7d53152b-87f4-4966-beb0-d641b7e1c83a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 6570d05d-a108-4492-91d4-60a07e193faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 19203912-d4e3-47fa-aec3-ca9396f4b146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 3ce53285-c9cc-4301-90d4-9c35091a089c)");

unit.assert_eq16(16'h005B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #90 60bb8d18-913c-48d2-9213-3b114fc273b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h07E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 abc56d8d-012f-4197-81a2-e42a58573b62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 d92b78c9-6a69-4677-a601-8ad2559a8a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 d21e1f90-8798-4cc7-b695-50382504a6fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 a53bbf2a-129e-4e53-846f-4a2d5660683e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 7dd8ae05-7e0c-4bf9-a64e-ff253f5f4e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 1aed4997-d75b-43e4-a4d9-de09caab92ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 f06758b5-f166-4753-a2eb-c9fba1362302)");

unit.assert_eq16(16'h7A35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #91 651df47f-f228-49c5-9275-536ca1d47ced)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h0A62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 bbd2e44e-36b0-4ad2-b519-98ca785ebe48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 5d6cf440-b557-475f-9649-caaa1fe85e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 544c6b9b-387f-4e4a-9fba-184caf812b21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 44d42c4f-05e4-4793-8453-ec681087d7ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 c94e9897-da9f-400f-97e4-6a4cb229f8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 3727961b-5446-4466-91a6-eebc3b65769a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 dd2261df-aacd-446c-8f09-3a656978c78c)");

unit.assert_eq16(16'h005D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #92 38b454d9-edb2-4c14-8301-53582da077df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0622;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h0622, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 a621a7ac-9c6e-4e6c-8c04-717d34144bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 0b70f87c-6827-4bfd-ae41-6da4c7f00d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 ec469aad-ddd8-4336-881f-dde98cbf0f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 b973a945-3aca-4bd2-b77b-dc23bf1ce9aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 985ca172-66a1-40f0-b44a-2ea6895e5d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 8da86f73-5acf-44fa-b050-684faca1fe02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 0796a418-f05b-4e3d-aa61-4b69d08995db)");

unit.assert_eq16(16'h005E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #93 53e4920d-d515-4128-b0aa-dac200581313)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0122;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h0124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 79dc1ad3-9b88-478b-ae6f-e1edeb7a7dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 616c6b72-bd29-4ca4-9dbb-43341a7df0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 60a2436b-281a-4c49-980b-d1e243192b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 bf8b5b3c-8bbf-4862-b35f-4ac8708f61e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 c9c55dd2-f383-4fb1-8ac6-97e6adf9e518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 776c745d-a881-4399-ac52-035d9fbd3ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 337ca290-47f8-4a64-98b3-489feeba997d)");

unit.assert_eq16(16'hBCD5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #94 b896ee23-e9ba-4fc7-8fdc-ad5909ea4dd4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h02AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 f1e0401b-90f8-4fb9-86c7-1913a44e2cd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 35974ae7-b387-4c6f-a446-eb101bf31f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 5be8abfa-dbce-4338-8b2d-585638374d75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 24a2d658-6d4f-4a8c-bc29-63d6dd71f4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 206ca31a-6f42-41a4-a47c-1e4fdf27c00c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 78d47154-5244-4df5-9f2d-c020a6c95614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 588681ec-5d07-41a9-bdc2-ba27106593ba)");

unit.assert_eq16(16'h3223, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #95 3402534b-3b29-4e6b-bcf2-b44c8ab6e9f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0060;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h0B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 f16a48fe-ade2-4617-8448-134d8d44d26f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 92ae06e6-22c9-4594-beae-3fac51a49cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 72cfc941-76d4-4b1b-a87a-2b71d429add5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 5800db61-4f1f-43e8-baa9-38d07fb6725a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 f6fd544d-cca4-4858-b894-b0cd585cd4e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 6036e094-6565-45a9-a498-43823e1e592b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 76ebaef9-f109-4b55-9254-cc918cac6cfd)");

unit.assert_eq16(16'h9A41, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #96 ca16064f-a9c8-48cb-b094-1cf1cf8141fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0061;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h0CAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 83ccb2d1-ad2d-427d-9b67-dfe3973097b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 590e8065-26a4-4843-a215-59c38a66ed22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 4cfe917e-2b07-4b4d-ba43-6032abe84dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 cf8cc732-c235-4071-9c60-e1def73bd501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 299b8165-5f92-46e3-97fd-b970ade6ed2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 3d1fea77-adeb-4b4e-90f9-713cf492ffef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 54cea3df-7c6e-426d-8d4d-8ff04eadeeab)");

unit.assert_eq16(16'h0062, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #97 1b0e8bb6-efe0-4783-a829-e37101210737)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0062;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h0DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 e2ae51de-a3d9-400d-be51-ef17a9efe364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 035e4725-65c1-4a0a-9588-141416cd8abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 f04fd490-5c92-49ff-b490-079285dd11c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 3c5b267c-aa2e-4309-94d9-d164ce7d86ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 46972c57-47b4-4b56-bbfc-e12345a86db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 82c4c14e-9d38-4d7f-8f73-dfd27aba1011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 3ae0d24c-d8a0-4dbc-965a-cf7b810fe178)");

unit.assert_eq16(16'h0063, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #98 062b52dc-09e9-493a-afd8-71c2475290fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0063;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h0EE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 68dbff74-4d6b-4068-89ca-2a61cf34ce7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 5c86bf03-0512-4023-a448-8e06cf43b9b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 017637e6-8301-433a-a84d-ac04ac0ab15c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 e79b07f8-76c0-4e94-9c48-52ad3815cefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 5b6b2deb-47a9-40db-a680-a191e06417b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 e57d34b3-df46-4d86-a2b3-1118defa569e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 d2492d52-dc98-405b-a90a-53203f3ee6c6)");

unit.assert_eq16(16'h0064, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #99 336bec14-7dc1-4974-b6c5-2a2dff5dcbc5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0064;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 42b4a5e1-6a6e-4645-abe4-2843b78a63b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 4a12c3ff-8846-45e6-a2fb-15e3730ac974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 a723b701-52bc-4447-bd50-979d4d0d2ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 3e82e21f-6508-478b-b384-d7153f1ceae7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 15fcaec1-8c3d-471f-85e9-67738bd6d6cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 beaff4c9-3e37-4049-9e9f-ff0751c44ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 db7cee39-f021-4ad8-8d3e-cb9e375b6791)");

unit.assert_eq16(16'hB479, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #100 1d6a8d14-fd97-4832-aa6f-40bbd7a1e9ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0065;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h04E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 03c8035d-d96a-4192-bc35-863192c2e8e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 94ae6ed7-9a90-4224-8141-e265a7f20632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 552683be-0321-4cb1-8830-27531b08a757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 be604aae-60f5-4b7d-8de8-f606d328d7d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 7fbf28e4-38cb-413d-ad5a-e7d96e15a50c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 8ff6a8f1-cfb3-43a5-a403-3c9c9625b37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 7db9dfcb-3da9-4fb6-841f-a251fa1baebe)");

unit.assert_eq16(16'hAC76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #101 5ef9168d-9bb3-4cba-bbff-643e6b49d195)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0066;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h0F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 fc62fe2a-0c34-4a4a-8a23-8e5478098f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 dd323cb7-4e53-4830-85bf-4a5cd493772b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 10fb0562-8438-45d0-8804-9c6ecdb4b120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 9ddaec30-054d-4879-b880-0b499f9d32a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 071dfa5c-5a56-45b6-aefd-b4914aee661e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 1435f6b9-dd19-4201-9f6f-c4ad9a36522c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 eaf86ac1-03b5-4a31-8294-53a7d6ea52f3)");

unit.assert_eq16(16'h4089, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #102 a63987ed-5807-4215-abef-6bc3b3d4968b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0067;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h06BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 e18a65e1-1ea7-426b-905e-aa0cb6f38e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 846fec54-edd1-4bc5-860a-b4e6437d6ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 e1947f24-f5ce-40af-b5c7-bed14b2bcbe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 cd1f616a-44e6-4363-958c-12f469239bdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 690f4605-e719-4500-bf7d-a43aeadf2a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 367e2d55-85b1-427e-9fd8-1f48adec747f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 12435b61-eb27-44fc-80d5-0e6cdb47f9e7)");

unit.assert_eq16(16'hBFB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #103 1fd501e3-76f3-42cc-9049-5f5f0c662651)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0068;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0735;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h0735, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 67f6ce26-19b2-4965-b642-759ae8884735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 116b10d3-145b-4a68-a34c-ea3b2d6ff35a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 93d634c7-8d04-4e17-bd5c-17f40a790800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 7e1caab3-43e9-4e82-8690-6b2de3d760ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 c9de4555-0bcb-4952-8656-0ac1beb5d426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 49eec153-d8cb-4d2b-8aec-e84cb63f6a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 a5f94495-1f69-4c93-b7f7-06d0ad2bfc84)");

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #104 c39c61e4-0467-40dd-8cd5-e0ce87ce83ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0069;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 172ee1f4-6406-4fbd-bcc2-a64c601903bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 77fbe087-3508-42e1-9230-27a23a78f50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 5c044f8f-f4f3-4322-9e9a-9444efd1128a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 b9f6c9b0-6543-47e2-a8e3-ba2146b28295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 f0d1abed-b3db-4dd4-bbc7-7c6ab748ec91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 a1d5b81e-17c5-4aa2-8653-9ef4b33d1e68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 5e980674-fe83-47d7-8eba-8232a1e194e8)");

unit.assert_eq16(16'h5114, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #105 c4e47f69-8fc3-4da9-8456-d9aaeba6ce9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h03BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 664b7546-32f8-4fe4-b04c-e68ceef7d9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 9d59b05d-f907-4475-99d7-a0417fa30976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 ef436660-727a-4a94-8712-61e715f8304e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 4d317d69-4207-48d0-aa23-1f6143567a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 9f63fa5f-888c-4be9-bbe3-ab7ac4cdd788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 c1b1dc81-c162-4e63-ae36-782855c2a671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 9bce4d15-0a77-4326-bfac-343a0fa58cf7)");

unit.assert_eq16(16'h9A82, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #106 04c6f175-555b-4416-bc5d-f73f7cc0ed61)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h0B82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 0068a16c-8999-4b47-a6f4-8be70d952bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 6d52ebea-99af-4f29-91c0-fc54e5490a00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 2b33ca67-1437-4f14-ae12-d43cbfd09127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 78626f1f-decb-4ab4-9ef3-a008737a1a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 0b47cf54-46b7-441e-8685-9a7dbff11538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 8e34d5e2-ebc9-476b-bfef-774cd82e5570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 cb3c86aa-9cc0-4629-9bf1-37e2c7ef53d8)");

unit.assert_eq16(16'h006C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #107 027658ce-8673-4fe4-a685-25cf2d186ed3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0358;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h0358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 2157b8d4-621e-420e-8364-e0bde51c8c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 491a1bdd-136a-47d4-88b5-f500df31195f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 6d29e84a-dc72-4119-91c5-5dabc0600497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 af2573bc-5faf-4638-8023-3b363a280179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 7af6beb1-9a4c-4f50-8f7d-0ca5c19bc517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 c5597f8c-9b3c-41ce-b006-19cb52cfe22d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 c55aaad2-4589-4b5f-ae94-a7be737f2dad)");

unit.assert_eq16(16'h006D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #108 5c153c38-932e-4879-8d17-982f5029b7cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0762;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h0762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 41fe3076-ac81-45be-b996-7c309aae9b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 1019c14c-7259-4701-828a-101e8ea5720d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 514149f4-a4f0-416b-8d5c-1dcfe384946d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 01a57525-ae02-42c6-99a0-89e4af7df1c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 79a02e23-a81b-494b-b04c-dc379a4d0424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 5fdb0486-ddef-46e7-bafd-5f7a56986961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 50982492-df9e-4b6a-8bd4-4c7a207b405c)");

unit.assert_eq16(16'h006E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #109 09eac8a2-e560-46f4-9e66-f27a5d2e5c58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h0CEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 c0b93155-565a-47fa-8556-5ebab1c4d158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 4e14637f-da79-4431-9d7d-322fea70a7ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 b6ba4903-663f-45a8-9ff4-9811125398ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 b226f643-f544-4a1c-85ae-06b2317831bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 82531aa4-c1d7-4c01-b847-0f9d2faf48de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 0e2cb086-acc6-46ff-a200-88007bd9b9d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 c4e8d7d8-680a-4f2d-ada0-8411e252ddfa)");

unit.assert_eq16(16'h3B48, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #110 98fb5017-1ad3-4039-835d-e6aa891f04b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h0FD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 9a568822-a502-45e8-8cab-6be024f4ac02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 1814f9a6-604b-4224-8aab-1f4fad6940e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 ae780c57-24e7-4b9a-8fa8-43c33c21abee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 5f39cf98-37b1-4a9f-b7a8-a246eb6844f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 8694ef06-bfb9-4628-9851-575ef534a56b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 f9b26465-9d5f-48ae-b922-986312a2fde8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 39622b52-a891-4ef7-ba43-7a03b6081d46)");

unit.assert_eq16(16'h0070, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #111 d300a867-606c-4b3f-8701-d362ff2be9c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0070;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h0D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 eb2c7e04-17a8-4bfd-a071-bdcef90e85d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 164e4b68-9766-4d22-a47d-c4b79ca73fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 748d06a1-dba6-4399-b90a-719d4f212d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 67a6ad4d-4dd8-4a59-9b78-8306e99add71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 08e72b3c-7827-4cec-be6f-01bed9297629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 dee2c44d-b351-4a12-9726-2c2f4839c2f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 e89abfe8-cf26-45e9-886a-4555d592fbfb)");

unit.assert_eq16(16'h0071, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #112 71ffbdf2-cba8-4c65-9d3c-0585427a65fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0071;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 6ef9b1f7-1157-4489-b89b-b16a84d11132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 7a628fb7-fc73-4a91-8ea7-a1934c5c5efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 ef395850-0888-4d46-a9fb-8e8544c6c076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 5013fa4e-9a33-47b6-876a-0a8f3c7093fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 567e8ad4-6a09-4d7d-826a-575fa51b4778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 bd8d8bc8-fcc7-4d8c-9f2e-21cde3855e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 516b1eef-4800-4b0e-bb29-737f55c2f21a)");

unit.assert_eq16(16'h0072, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #113 7c8ff8a8-4ba2-48d8-9072-da60e3922723)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0072;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'h0A71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 8cb03a1a-35da-40d3-b6cb-58ff4b2642a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 d0859520-5b02-41f0-b140-37e7795b8d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 09a1a5d6-0ffb-4c04-9116-e9b758298ccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 326abc36-4e49-4eb0-9738-bf70af2fbd57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 741b2bad-cba3-4f44-954a-5e16f3604e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 6dc56c42-79c6-49d0-9cd7-27748fc96c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 a016555e-d053-40ef-b4a3-6be5c4d03a14)");

unit.assert_eq16(16'h0073, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #114 703ccb7a-78b2-49d2-8c2e-be1624410a64)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0073;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h09D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 2fa78693-4f5a-4371-bcd8-b35c26f7f92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 fbd84bba-f941-4dd1-a58a-bfa3418ca77c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 fdeff4cc-80fe-4981-93e1-0f26492a71c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 3c3c86e9-fb79-4a12-b16b-ea7185f2c43d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 a229fe3f-49b9-4bce-b3c5-ad2c8b157676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 1858f0ec-d4a3-4398-8e69-947c3305945b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 faa7a3e4-fab1-42a2-acdd-e78810babdeb)");

unit.assert_eq16(16'h0074, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #115 307686a5-9e25-4d04-ba9a-487561da8c60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0074;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h0EF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 b3c66ecf-4418-4875-a7fb-67721f640aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 63cdbbe4-3c92-432a-871b-393de9a757bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 453ed407-2063-4b19-91a4-8b7cc080f3e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 2a4e041a-f5ab-4651-ab5a-8a2257485f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 63648e3a-2342-4547-bedd-ca7012e73986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 b1be0eda-9a7e-402a-befa-0220851daf3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 5ee052e9-161d-49e6-85d0-528ed72e7f9e)");

unit.assert_eq16(16'hAF25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #116 a4ce2cf4-00df-4c3a-804e-69c431bad80d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0075;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h0F95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 fd4fd06b-8468-4990-9d21-07e216605be1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 5dc35f40-e947-47aa-83d5-f922982ae24f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 9c1f7552-8a3f-4dc2-9db3-77002ed7dc31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 a9170ce7-1a61-47f8-8297-5721ba11f2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 ef4f0f26-3131-4cdb-96a2-55e3cbb569ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 e7ed56da-c791-4abd-82c0-9ca7bbbaffce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 15869ca3-7f66-42cc-a962-6fbcd9e5d719)");

unit.assert_eq16(16'h6BDE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #117 817196b7-2300-4724-b198-4a251fbd6d75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0076;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h04B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 0ea3a6f1-c76b-4317-97d3-d00320859f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 3c85ae53-266f-4a8b-bfc8-1ea51b31e65c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 1fdc3563-4e87-449c-be0e-e5505c2cb639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 942be4a9-2ce3-41f4-9fe2-95da638a17d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 5a8a5442-14fd-4311-97aa-ca9cb116bfc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 43a64fd7-2e0e-41af-9dbc-cf2d820b0984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 a42555ae-8b24-4aa2-8421-4da8baedeba5)");

unit.assert_eq16(16'hC4AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #118 ecba9e18-6a98-460e-a7e5-7bd49e16d7be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0077;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h0C3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 00b87d87-a6f6-47c6-9e03-c587c7cec958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 168574d5-1e07-49eb-9ca0-9945c2987727)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 7445e3d7-e61d-44d6-b44d-57823535734b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 547eef0e-8892-4423-99ba-232749702175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 86aebad2-a1f3-4db1-9eef-1465a69a519d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 8343d51d-96b9-4d4b-82fe-dd3f4643230e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 0116881d-6e19-45d7-873d-5c1be215faab)");

unit.assert_eq16(16'h0078, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #119 b0807bd7-e7b2-42dd-955b-42787f97d6bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0078;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0125;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h0127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 eda2e802-5a37-4643-9744-30a3c489526f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 1c9825ad-990a-49c2-ad0b-0440eae4fd85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 c0d57991-3c85-4252-a559-ef2f4b44548d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 2716480d-26e3-4869-94f7-a10d0c52f1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 645d812c-c47b-47a6-b5bf-0b240f25911e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 b1042ce6-e0d4-4c62-997a-d608a2103400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 ffa6bbbe-4182-4cdd-a5e5-c9ffc43e3123)");

unit.assert_eq16(16'h9411, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #120 f2254259-9508-4868-864d-0d199e6fad06)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0079;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0150;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 ebbe0a33-5205-489c-ab14-75c4151cd14c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 9edcc567-14c9-4227-b2f4-28e2e49d6353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 cb8f667d-f65e-4240-90d6-598411d54837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 1093ef0b-118b-493c-b36b-d1e4512a3066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 72fabca4-510e-4042-9dad-45d671905f7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 ec7877fb-6425-4866-8e2d-3d70a00ae43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 fee7984a-1f66-4d93-8407-aff9afc45922)");

unit.assert_eq16(16'h007A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #121 c8ab6e23-2957-4252-8db2-d8b012a934c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h0581, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 4a809eba-4cd3-4440-b3bc-b37429a9a3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 8fac1765-919d-4982-86d7-bc918ee91677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 669a2a9c-4b7f-4dbf-afff-44d51541b825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 2cd5a08b-6059-49af-b7f0-1740d595fb31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 133ec333-147e-4560-abc4-e70f59b75ffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 c7f3c58d-ac6d-4914-941c-a1f8e6f54904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 ebeec724-ae5e-443e-ac18-e1cb13ed53d5)");

unit.assert_eq16(16'h007B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #122 04c1320b-2d5a-43ce-b66f-19f2f1529a91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0882;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h0884, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 c153f087-81f7-484e-ab84-ead5b36764fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 2901aa2a-8830-4932-a39a-aa66bb745b5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 d8f92556-2f24-4c9d-bbf0-5b500a07d083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 98ce5906-78bc-4709-a9e2-212aef7e20e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 e3b6649d-8cb3-4194-bade-434d3b02f262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 adad70d8-f15a-49ef-bac7-fa32d593ac44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 61727f15-e481-405c-b48d-d3c5bdbc98f3)");

unit.assert_eq16(16'hA319, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #123 db8ee82d-6516-4690-bd39-d876de72d48b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 b620a58e-82e8-4d8a-86f5-307f71bfc936)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 bbfcc1f9-fe24-4673-8dd7-b263a8bead8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 4c6e0d23-c270-4c80-9a1d-f85dfa013eb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 f99b1a45-7e0c-4000-a3ba-bad04d931c25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 93009339-b32d-48b0-abf9-f9e1b008a353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 d8ede37f-218a-432d-a347-e4e715ff920d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 23f7d41e-69be-4a80-b415-22750db73107)");

unit.assert_eq16(16'h007D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #124 22a663d7-45d1-486b-9bb4-2868152ffc35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h0CD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 1f1a402b-b24b-4667-9304-2a7ad420ad03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 f90b07ed-2c42-4f20-855d-8a79afe224a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 0b5bb2d2-729b-4af7-b0d6-9949273ac8a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 a35b4cda-6f40-4446-871f-1dab8b369424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 cdb632dd-ceaa-4055-9766-64faa6cbcb4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 7f20b3e6-b923-44e6-8aaa-175bff39d420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 04a9a518-6972-4306-82e7-c022f5b1c9f7)");

unit.assert_eq16(16'hA560, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #125 c158f65d-5d66-4e1f-8dd3-e9d079391784)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'h0AA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 df7af449-333e-40ab-a02f-2f5ffe215368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 49c25bda-4687-4410-b787-8ff18c825411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 1edc7940-1e15-474d-ad01-1954c14e2a5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 0e695617-52b1-42f9-afdb-63b8db21c544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 86865966-9dc0-4def-b156-5e44aab6b635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 d633633f-3d76-4708-a1bf-12547b4e0311)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 cada1332-2d89-4492-8b1c-1f3740ca4e6c)");

unit.assert_eq16(16'hB74F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #126 0722c0eb-ba95-4b84-9966-a4215c52daba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h07A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 fe0431dc-bf77-47c3-a59c-307aeebb0437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 8435709f-404d-4fda-b4d2-d7a3c5be69ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 8aaf24e6-f12d-486d-b95f-45b9f58970ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 c0027afe-980a-4ab6-84e1-d44ca78022e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 d3f4f0f4-c892-4468-8082-3d6595262808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 7e62107d-0150-4349-a38e-8f3e67c8b0bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 ec02cf3c-4833-4f1a-8005-c32cf341921c)");

unit.assert_eq16(16'h2472, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #127 567aa177-2bdb-43a4-afeb-881369ad9743)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0080;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h0E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 a31fc342-2902-4a5e-98be-d44b29c1e490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 bdb1d8c0-6d74-4036-b9b0-b3a05db5b41c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 2def3191-88d4-4935-a13a-e5b187803786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 530c29f1-e072-4045-b5cb-c02846175454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 2faf4e98-1448-4841-9ec2-2b7198ddf05c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 d80a3ad9-68ae-4e88-8132-c096cef05044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 0f9576fa-9dff-4700-9b50-ba401e4fd4d1)");

unit.assert_eq16(16'h0081, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #128 912f58a3-b2ae-4ea9-8fca-bb577d62ce10)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0081;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h0F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 6b78b176-9982-4a7d-8ec9-0ba8dfd89c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 c0a38b2f-b174-4501-a975-cdcc36b34bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 279a22dd-4d6a-437e-9af3-029fe530a03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 faa7b2f6-06f4-458c-ad87-7e8ffff0cdf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 67daf924-bc86-4541-af13-21e0eb236c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 8ca15cd5-6072-41ea-ac30-3c81a21a215e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 bc2d8abe-3f4f-4ab7-aea2-45774667d6ea)");

unit.assert_eq16(16'h7063, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #129 12c37acb-b35d-42fd-baf1-64e94aaa6771)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0082;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h0BD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 f11fc52e-d938-49e2-81b0-903dd86e2300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 bfe7a77b-81d7-47ab-a8ae-e17174b0c34e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 f0a47d9b-7891-4506-ace6-8036686cf562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 671c8eb0-6c5c-49e3-be2e-d6bef38c1daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 fb6d055d-92e7-4bf7-bb18-4821c6c98e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 692a8556-76d5-4baf-b9b5-d74aec391d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 ca29fa5c-f16b-4f2e-b0d6-5b006f3c0253)");

unit.assert_eq16(16'h68B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #130 86c2c8cf-9e5d-4c1b-a074-6d9720877659)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0083;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h0638, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 b75832e3-d34d-4055-a309-7a2f277297c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 179a4cc8-8a56-4d1f-adf9-5090a6a27c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 0ae5cca1-9b07-4b48-a358-17af90625792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 14c14a1e-85e8-40ec-95c5-00f76cb9974a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 a97809de-f5a3-417e-b821-635c5de0b7a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 91928f14-2fa3-4863-ac5a-779830ab2975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 447bafc7-d964-40f6-a91d-16350e5d7adc)");

unit.assert_eq16(16'h9FDB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #131 fd1334b9-08e9-444e-9e9a-0ffd3ef68017)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0084;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h0AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 c57fc87e-fd98-4b32-8f76-3c3401ca23f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 b46bc477-bce5-4120-b5ef-bf4d5b0d109f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 bb348429-319b-4a9b-8b0a-270ffad1926f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 6c8343d5-f139-4c38-b02e-8534acfa1317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 e7391dfc-000f-49f8-a20a-c8768a0d4a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 732961ff-9ca8-465c-90a2-44230267d405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 86591b25-a308-414f-9419-4c97fda132cc)");

unit.assert_eq16(16'h4FF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #132 a6699cf4-f6b8-4cb0-a9cc-50ca20b037f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0085;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h0A53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 95adff8e-7bb0-4698-873d-33d14397e8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 fa6a6ef5-8520-4357-8286-0241c26487a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 dfde5a1c-4feb-4459-9bcb-40d6776c463c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 ce13ceb3-b259-433a-8066-cadfc8c995b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 973eaa2d-db0b-4964-a6e8-88fd74de533c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 79e248cf-e39e-4374-b47c-b4ad8a57a691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 ce43d40c-a922-4ae8-b6e1-aef884246729)");

unit.assert_eq16(16'h0F29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #133 c92b147b-8f2d-4637-b8ea-9471537e5672)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0086;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h0E5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 3f1a83f3-d778-47b6-b6a1-5445f6566472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 b65fc907-22fa-417f-8c40-016f8f81a88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 687d9781-9b33-4745-bf9c-4f84b0845a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 713493c3-2d79-4cae-943d-e73588353346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 dbd0650a-24d6-4e36-b7c2-1ea46cf87c21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 90dc6aef-f4f1-40bb-a9c2-d023c565fff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 f20db9b8-e40b-4640-ad25-363dfeda92a1)");

unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #134 11643d52-62da-4454-84e5-e88f27f834f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0087;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h026C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 3e98e04a-414e-4331-87d8-3b9074bf865b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 7328118e-6d2b-4383-9943-c75d4cdaef3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 20d2e652-6591-4307-8899-2f5e2241f9cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 92694141-aa4e-4c37-a999-6f01be7f0818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 dc98ddc9-b9e8-4a1c-9cbb-a017068a9cdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 4af021c7-735e-45df-9713-7ff521958b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 fd2291b2-3352-4b4d-b571-a8f9ee12af92)");

unit.assert_eq16(16'h9065, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #135 fec51713-f827-4e5c-bd90-d1afe17bbf7e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0088;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h0BDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 e5a1bf25-ca5a-4054-8515-86cdfae2ea8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 0278d8bb-2487-4644-9266-669fcec760a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 8e2133a2-002d-409a-a4e0-a51e1d825fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 c94730dc-1398-47cf-94cf-ad2179fb3625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 47ea8e4a-5bd6-45ab-96a4-e64274881c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 3cbd12de-f798-4ea7-8c40-51281fb8e84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 899c753d-ad91-4f85-9ac5-9c1bc6049fdc)");

unit.assert_eq16(16'h0089, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #136 436370df-c299-437f-a8c8-dcc16f07428f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0089;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h0B6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 b9266e64-678f-44f7-b9ce-e2e8084803f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 c918bedb-a693-4ab9-8e39-a1e32ab3fbf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 f5bc6468-1960-405d-afbf-9c41a86e1f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 8b3d0567-cb76-4555-bdfa-1a469b997732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 a688f440-726d-487d-bc35-21ac56e7aae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 52cfb09a-c19c-4d17-9f34-9da6c48e47b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 7a1924f7-c2b0-4594-bdc8-eea8e0c8b7fc)");

unit.assert_eq16(16'hD6C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #137 d4c205ed-2b3f-4b43-9d37-8f1f8d97d374)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h0620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 bd78dac2-3116-4272-8a21-8388b2be979c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 3e20070f-5583-46d2-9418-fe8f61a2a9f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 2d27d857-e94e-43ec-acd3-987ae0a44375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 76c66a18-81fb-42e9-b1be-b670ee92cee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 ba9bc765-9dc1-47ef-a4d5-9367571c3401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 5f6f2c6b-be9f-419f-aa4f-91cfaf7ca7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 c7625851-7e56-46db-866e-abcc637ad67d)");

unit.assert_eq16(16'hD7D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #138 29066763-e88a-4743-998d-1bc13e5e7669)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 c9fd1eaa-f868-4e9b-a45b-e9177299cc43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 86ca98b7-13a0-468d-bc91-af2fe4bb92b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 23637061-232f-4b07-80c1-ade5de2d8935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 4506b979-6f83-46f1-81e5-76f1cba7ae29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 c14bcb2e-2328-42f9-931c-c53ebc5746c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 737ec40f-04bf-4d80-b7b0-78e877046920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 f812c6fb-333d-4130-88ed-87c943f254ab)");

unit.assert_eq16(16'h16B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #139 386aa5a4-c05c-4068-a176-96d0aa944bf1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h0FCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 dac47754-e028-4b06-9187-92a193883d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 84356491-b339-4bdf-8132-af71ec8094a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 b1e5d17a-5282-4d02-8cf1-73a58845e6ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 20ffc6c3-9a5a-4835-aa40-774826266f1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 4b4196ff-6a2d-4085-b2ec-0123591825e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 db782b77-795d-4e3d-b2ad-849a40c5a491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 85d850e7-550d-4348-aac4-269ab7676304)");

unit.assert_eq16(16'h7A7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #140 e032d1df-1305-41a9-bb42-e40cc1460d18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h0C28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 aee2953b-5969-4269-8062-b0a4618251e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 ffef3039-94ab-41e2-8372-bdab3eb74ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 43cc731f-d47c-44e1-beb9-8d23ab24b4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 61183d0e-2066-4c3f-816f-98349c734391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 21d28ec0-c0eb-4b00-ab12-22f34fbb5838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 f89d81f8-43ff-4cff-b705-5512743c304e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 ead9c32f-9ffd-44e5-9b0c-041832e3c290)");

unit.assert_eq16(16'h008E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #141 eb09e562-197a-42de-90be-73de7a0f9413)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h0AEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 29e27c02-3ad0-477c-ba99-a81b4d82891f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 da169813-6951-47cc-8686-77273ca7d038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 02de78da-ec54-4121-aac2-4c5aae1d43e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 f8fe068d-f2da-4eb2-aaf8-53e2eafb0f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 dd2b9881-8421-417c-a4aa-e015f6036a5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 ea24a183-1495-46ee-aa64-45d84a9b6d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 9ded1289-3267-426e-89bb-4b8b5a37499c)");

unit.assert_eq16(16'h8694, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #142 43865e4c-dde5-4891-9727-6b360e8b7fa7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0620;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h0622, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 223dce84-dda3-48f7-acf2-7c451d467dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 6ff16b72-c98f-4513-ab25-0490e47cb44d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 822ad086-00d0-4316-8917-744818e9c729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 5061d553-945c-432a-8796-116a39fc6b03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 42d3aba7-b479-4f52-ab46-e3441f18de99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 302311e0-ba06-460e-b6d4-ef795f651600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 2f8595ee-8ca1-42ea-9004-fbf6d1c841ff)");

unit.assert_eq16(16'hF10E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #143 f57b1f57-1a0c-433a-9482-85ff695376c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0090;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h04C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 6d00bf31-9025-45ec-9a91-4dde27a11d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 fcc6253e-acd7-4de1-9d04-38734f30fb1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 ec2c6a4e-cb2f-4315-8fe9-22807b0b367e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 6b31a2c7-5403-4027-8c76-6d7e7740d8e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 4c4a8c5d-8471-4efc-87ab-d90375a449b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 0280a21c-6b9a-4232-8415-4eb02e991a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 ffc0f2b3-6e81-4e1a-b285-b31027775987)");

unit.assert_eq16(16'h2DA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #144 f6ddf2ac-a4ac-4fd8-8970-120f0bc1e762)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0091;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h0F80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 47edbd1d-798b-433c-aaa6-1cd0af1ee234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 c78faf8b-565f-449f-aae8-92090e88bc9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 851b48c2-cf79-4528-b3d2-5f0acfd9a7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 2b511a70-830e-4ffd-8d9d-a06edea227c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 f465ecca-f1c1-4838-bfda-0c5e45d88ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 ce55b10f-1ab9-42c7-95b5-e4e5244423b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 335de5b1-ab23-4c96-aa9e-0de359ae03a3)");

unit.assert_eq16(16'h0092, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #145 c1e43a78-0347-4d68-ac0a-f86e2882bc47)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0092;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0074;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h0074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 a381d5fe-4f4f-47a0-b124-397ea119e790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 dd15d59d-3443-4036-a244-b7b70111e467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 41f67fba-877e-4210-9936-45819fbb835a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 88a927c2-c029-46bc-8f0e-782ec9db444c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 5c6d1bce-0e84-4fb9-97da-ce9ea4de998b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 a6a3dd41-1a91-4e6d-b7a8-ef39f214c313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 70cbd4d8-779f-4247-98a0-4ba1c9e3bc3e)");

unit.assert_eq16(16'h0093, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #146 7cbbac53-8616-4d91-ba83-1fc63f02c2c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0093;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h013D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 043d8752-dd20-42e9-84a0-a27f745a5a2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 b06398b3-7d82-4db7-89c9-4af3feedd42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 b54b85e5-4c12-4f09-8565-f88ef91c96a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 beb74587-dfa1-4668-8a35-195d1511b31a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 17b53c2e-6874-433a-9cb5-df5d32fa3aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 8f97e9f6-8bb2-49ef-b086-1cbf1755c5fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 fa50eedf-2656-449b-8224-75e0bed0e61b)");

unit.assert_eq16(16'h0094, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #147 14b6e5fe-6067-4a8e-8e95-3c18bd21e23b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0094;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'h0DB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 6c72c50a-b2d2-4085-b9de-4a9f8defea1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 78bc7ced-8c1e-4c1f-b7dd-f87e1938c1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 8e8425c0-9944-4ada-a58f-ff0e17a531dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 496a2131-628b-4c3b-8150-4534cd9a2490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 1c57ed63-4949-46c5-90a7-8a88e1c65de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 d2b41c99-59da-4611-be06-3a919f748b15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 a14d6248-3ddc-4e21-9092-d4307f9a09fe)");

unit.assert_eq16(16'h0095, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #148 36a9aa88-7cab-48b6-9619-e9ce9eda1fa5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0095;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h027D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 9bfac6c1-738c-4544-8975-bdc124e85607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 3037168e-6d36-4439-8ec4-23b9eee4c083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 ffb5ad94-5f2a-4d5f-9ae9-428792c87534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 d26b2e35-87e5-4f63-b1e6-201189abeb83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 22ee6826-4975-4483-8671-3097cd3e4d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 b062d931-5cbe-4046-b0f4-bd8cf51fc72c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 87ea251c-2d63-4925-8e8a-1e5c47d369dd)");

unit.assert_eq16(16'h0096, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #149 7b140e0d-7a84-4871-aab4-190f8e628837)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0096;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h0A69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 861d7f22-a7e4-470d-8e60-307fe9339c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 ecbd1148-7f9e-4da2-becd-0e7264985b2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 904855f0-fef7-4c29-8322-7bc56f6e8c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 00debd19-daa7-49ea-966d-858287216c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 9024f196-5d04-4f55-9e22-badfed7ad6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 ac625d1f-b90a-4d75-8ed8-ad46fdedd4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 70e2b796-09d2-46c8-a6b3-a2e05ca2618f)");

unit.assert_eq16(16'hEE80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #150 2f68e120-b6a5-4ecf-b9da-36c2fde6e6d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0097;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0434;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h0436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 8c3f67af-1401-4527-b07e-2d17502ac714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 319cca0f-9d88-495b-8614-bfe990180968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 7920b58a-6c4a-49ff-adb3-c3f977957406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 63ebece1-0912-4323-8269-66adeb64a6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 6d237018-373c-46d0-8f58-d1d9c2b829be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 2648fde9-c1d7-42fd-8884-82d9ac36a608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 af300cee-818b-424d-8b9e-e0b1850bac19)");

unit.assert_eq16(16'h8A0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #151 45b48ab3-483e-4c00-aef1-ce06489271d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0098;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h023E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 30f35409-86e7-46af-b473-50014a3674b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 f8be979c-37fe-4e48-8a30-7361ae4e4ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 aa48ff6a-fd93-4be0-816a-0ccb6566aa59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 94b67992-e3b3-47ad-9827-0b3764470781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 c98912c9-c629-45d8-a8a4-037788b73a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 deecc9a0-92c0-4d03-93a1-21cf0aefa30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 f8b589e8-811f-4235-b30b-86fb35711e4a)");

unit.assert_eq16(16'h52F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #152 1224ba1a-761a-40e8-92ed-8b294d9f69c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0099;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h0E97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 b623bdd5-b47c-4120-b365-3235786cbece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 12a4bad9-738a-4855-8c05-f25c648a25c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 9c2c7613-7e61-42db-bd2e-d1309d5a2d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 ca25d9af-8fca-4baf-8548-ff22c1365728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 a42e9d64-8162-4088-9cf5-c47e569e1d66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 d5f1176f-4619-4bda-8e25-38c48f11df8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 9de87c5a-8e60-4faf-bbae-2b5908722c35)");

unit.assert_eq16(16'h009A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #153 a121c0d6-c73b-4eee-bba6-31ba4b2718a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 073cad01-2d6f-4c82-885e-67b74f5eb118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 e5febbd6-40f9-4090-80b4-5504b581b55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 e1f9c6a3-8cca-442f-b27f-38cc71e7c674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 48a893f0-b79d-46d7-8e74-57550520e87a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 7c6e78cc-bb54-4585-aaca-0f00c9e754c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 201bf4b2-7404-4fc3-92a5-1a5de1ac4521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 00361a6c-671c-4c9e-b10f-9099089cde68)");

unit.assert_eq16(16'h009B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #154 b2b916e3-64b3-4b31-aa00-d566b4dd15e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h02CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 c95260a3-68e1-4958-81ee-8ae0c1bebbe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 abc914cc-c999-4010-a01d-bf385b80e02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 1ea98a8b-c33a-4040-97b4-adf0579798b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 fc9892f4-566a-427c-83df-90c7ea0332b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 c7200068-6690-408e-8784-240ed99c2244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 72a690a6-c6ee-4f4a-976a-31fd2e9b771d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 b7988160-1763-42e7-a1c8-51f4276ce5f1)");

unit.assert_eq16(16'h009C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #155 845ce2ed-4e51-4bf1-81a6-b649280baf07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h0D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 922d1a8d-b010-4099-b0dd-0ef739298e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 bce6d093-02d0-415f-a608-db6e45553ca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 f8581c90-cdaf-46fe-a798-926db341eb0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 c7c5401a-18cf-4f60-99bd-a0c17566ccc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 8f91e31d-8e2d-477f-b610-b3e0847f9994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 14cb1b21-d49f-4e31-aa2d-daea51d38d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 9b10cca2-4cc5-4c3d-b2aa-1d3b3afe9dce)");

unit.assert_eq16(16'hF5E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #156 305e6da0-aab8-4c05-8b54-1f475a44a21c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0801;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h0801, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 18dd3fbf-740c-4b4e-a9b3-bf5be07e3403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 82fa93b0-1d7a-40b1-8ac5-51857e189057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 bf88b986-a0fe-42c2-b583-9de5b60b4cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 943a7928-52cb-491b-af5b-32c35bc0640f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 342d6e9b-8736-482b-8a95-0a53fca535b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 b20e21d2-2ecc-4fa2-a1f2-30a1978b42ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 a0dfc532-8ede-4b03-adeb-0a499b1471f2)");

unit.assert_eq16(16'h009E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #157 78c6cf24-cc6d-44aa-b73c-4f450e95bbe5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h06CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 b8b559c4-3621-4bf6-9bd3-07290b535333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 6db673b0-6b9e-4dcd-a1e0-6581c8cd8c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 a7dfda44-1757-4db1-9f08-c71e9268007e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 77c98411-5283-473b-b398-1be358660c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 aed405da-3610-4404-8f2b-526ec2c3fc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 16bc5047-0690-42b9-bcfc-08253a5e9724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 9338c2c1-2a53-4392-887b-f671e4338f46)");

unit.assert_eq16(16'h05D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #158 b9eb0791-5ab8-4e04-8bff-0464a3bd3d18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h0091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 8858b1c9-17ff-4e06-b48d-87278832df93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 0a918947-93c4-4a9c-a571-0c96be362337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 c79a34bd-685c-405c-95d0-6cc45e8f0e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 c39c92ec-d25b-4ff2-bc04-fb7828cfd2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 7fd8fcd8-92d8-4613-8113-c7e80614cebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 68b28bfd-5269-404d-9809-3867b9c770cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 64ea8f15-1ca5-494c-a8da-2fe77861e252)");

unit.assert_eq16(16'hF1E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #159 755ec61c-c787-4429-a8f5-68f23d16956d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h08EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 14428488-85ff-495e-8aad-49c0284f9e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 20209e71-3bc5-44e7-999c-d73a80d33a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 54092e60-1077-431c-a77b-d34f86de772e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 4925a975-7b06-4058-9bfa-1a425347400f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 033d40aa-c74a-43b0-a93c-4cd332fca993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 a6180b7f-5961-4ce4-8c6d-30b8909afb5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 f69e52eb-dfdc-44b8-a1a9-3d4d6f26e0b8)");

unit.assert_eq16(16'h00A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #160 71e202ff-d607-41ec-8190-3111b7924c4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 5b05ffad-ddc7-453c-a849-bcc51d8e458f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 a425a9c8-2a7d-4496-b24d-e228b6e99f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 c7458a50-fa39-4619-9d30-ecbec6c3d48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 c87f70a5-17f3-4084-b53c-945202646d72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 7edc4725-d494-4d80-9a64-f8c717fafd38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 9ca007d3-3c41-4888-8853-03300bc80f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 616fa791-fd94-42a8-927f-76eece50fd68)");

unit.assert_eq16(16'h00A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #161 bde3ada3-44fb-4f9a-86b0-fb2b3930c948)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'h0E10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 ce898620-3dde-4e71-9efe-6553d6486478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 c1380556-7272-4cb4-b897-a5ad04de607a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 3fa9de74-f0b4-4d8b-ba4c-f08eba81b925)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 f9ec6a6c-a80b-4a7b-b0ff-051857e68c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 88df4075-da9c-46ef-9d65-0b988133b1b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 6501b25e-8f81-4492-b6cd-e66e41afe173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 eeac0837-e31a-4fa8-be5d-f77101ff5b8e)");

unit.assert_eq16(16'h00A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #162 c9c71cba-10cd-4422-9c2a-c6d38a875f7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'h0BBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 fb4d579d-f75f-4998-8836-c5e09c27b0e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 a9a118e3-1731-42c7-ac99-eb961254dad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 2bce06ae-e1da-4c39-b02e-2ddf301c9b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 59f22ed1-7b43-449d-8c45-2bee3589071a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 12eebe1b-f510-4ef6-a4ac-60228fe4d6d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 1be1f42e-f6fc-4d3d-8875-571c1ada12d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 f9b6ede0-9edf-46b4-9c77-354120e23e19)");

unit.assert_eq16(16'h00A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #163 7d8d023c-2036-4f18-8537-b2d17f2d13dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h07BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 8a45bcdd-797b-48b5-90be-e19fb1c97e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 c10fda6a-6d49-444c-9253-a97db1641e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 62dd3182-5fce-4845-89a7-9ac808faac52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 d1fc3957-85d2-49d8-ba7c-3e7d903e0e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 9d182a0f-9ad7-4612-9a3c-e31d7540fac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 32f87ae1-c999-4884-b879-1669755dadd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 cc2f748f-b657-4645-9259-51d83af8480a)");

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #164 e23b0832-6277-43c0-a382-e962644b78fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0952;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h0952, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 c76a1efa-567c-4226-a585-1d1f8905075b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 37722014-ee41-45c8-b1c3-d584ffb34d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 2c65cabb-8629-4447-8614-6171b3a0582c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 5b36d2e4-dc1b-43ef-9533-36f20df6501b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 cc76aac7-d2fd-4b28-be79-3df55546f3e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 b8fb1fcf-9c74-41db-80c4-5cd54d1971ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 e8291337-178e-4b84-9f23-cd85ada59b48)");

unit.assert_eq16(16'h00A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #165 f3d64be4-0432-46f0-9a63-7569da37b5e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h0A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 af2fd902-cc61-4f21-9b2f-dada6a58b925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 f233892a-c9d1-4654-b3d3-78ccf0ebdac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 f7aa8ea8-3e84-4ae8-a1e1-fb780a906df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 ebbe1721-a431-4bd2-bd22-a77bbabeb95e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 82f273f8-e3a5-4d35-bf70-98cbfe31e551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 91433157-63f4-482c-96ac-86c71da3d254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 c090c22c-ab18-42c5-8d28-3e4c9ce44fd7)");

unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #166 08ed281a-d2bd-4ec3-82aa-30fc158698cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 5f849d82-d353-438c-9b57-513e78fd7780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 18a6626b-7011-46f2-9acb-0b46b56c0ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 1e21cfe2-e33b-4216-8488-4f5bbf3bb76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 1f1c9544-ca2c-4fa4-9f14-23c0bc056bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 8bfb0364-b298-4f72-8f7e-33be3cb979b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 557d6947-7288-4b67-9594-efe78f71ee01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 e46cc503-5269-444d-a39f-b8dd1b0946f8)");

unit.assert_eq16(16'h9A44, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #167 a5f67ec2-4bee-4958-8583-93845bd4f389)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h0C73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 ce488ad0-c2c8-4054-9455-66112059070e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 e9e6332e-3306-4916-9ec1-48d713d3949e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 fbce65c7-9313-47e7-b57d-7b2438bd31e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 f410e7f9-c4d0-4a8e-b806-adaeab572ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 07b8acee-9db5-4e5c-a097-d228fbf6a959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 92959dd2-640a-4576-bd56-7d3c58de644a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 2b9ad448-ee26-4213-adf7-2d3f4df25943)");

unit.assert_eq16(16'h00A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #168 4782576a-6907-4281-8536-4522dad3a682)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0757;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h0759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 ac94fdfb-5aee-4772-b232-586d21c06309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 e4a65a59-4240-4b0e-8a6a-560acc3a79e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 54a97f36-5524-4de3-bbf9-9180d1e24fc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 eca4f896-ade3-4570-ad3e-e5827070d9a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 b94a6da4-f708-4260-bb0b-7d045bc3487a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 9fa834b1-2e84-4576-b54b-e986d3261fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 01d329ec-00d2-44a7-aba8-724a8281961c)");

unit.assert_eq16(16'h8ACB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #169 c0a87c0a-6b5e-47fd-9e28-6f0b97aa990d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h012C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 636147ed-f14c-4ce5-b7db-5d21fc28cc88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 65f1b686-f704-443b-bc26-e12c87d3ade6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 2de58fa4-a890-4dce-bb08-18089cbf9cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 e3291be0-227a-4fe8-83e9-e5bd4a91275c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 1495af1f-65db-4bbc-b324-fef73c3041fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 d726e8cd-5a2a-47f2-b5c4-def4c7e1af71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 f31dd8f2-5597-4ee3-8f3a-cf92e3566372)");

unit.assert_eq16(16'h00AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #170 723f0af3-4500-45bd-8640-143147ef7c54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h0914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 2a0b8ca7-7d30-4119-8e36-20cfd19b0f29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 0ba0ea4a-792e-41ab-87ba-381beb5ac9a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 f119e732-8bc6-42dc-a84d-1896a4a8a50e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 8170fd4d-295c-4384-ba1e-a831862ef6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 8d93ace9-8f34-45d5-bc82-674e16d1550b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 3ab402cf-7359-4382-b2d5-94a47344e923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 a71089a6-c047-442f-8c45-ce468f6f3f8a)");

unit.assert_eq16(16'h00AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #171 9643baa9-f0f0-4892-980c-8eba5bdb28b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h084A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'h084A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 1532b76f-1e0c-4c0d-ace4-6a940f3d07fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 829b4614-7df1-42cf-8af6-24061ac72508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 034c2ad5-0557-40ff-803c-13bb50fe9f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 995ef5ae-d869-4d0b-8046-201c2e1af48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 36025ac3-b427-4657-863a-7c77095dd6ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 0ff5f558-144b-498e-9b03-3d2056e03000)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 6956a84f-ff2e-4ffa-963c-aa7cfc0abd01)");

unit.assert_eq16(16'h00AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #172 5aa13623-aab1-42fd-ac65-a8d81fb60b6d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h0BE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 3621d82d-8c68-403d-a20e-69a512af010f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 5d96e766-35bd-44e1-aa3d-08cdb005f3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 95d5006e-54cc-4f26-a234-8856499ffde3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 a733d6cb-1de5-406d-82c7-4f2d8ed21b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 bc169121-6249-4d62-b5e3-8b0376ffbb5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 f5a6004a-de93-4f9e-b902-d7a9a48ef2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 e73575d8-0288-4e08-ad36-2d6f989bc256)");

unit.assert_eq16(16'h00AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #173 297bd3a4-9ba5-4b62-ae5d-95065981a50a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0734;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h0736, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 0fedfac4-4b5f-4755-8142-51d068e319dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 6219e088-b366-483d-b5cf-f72c122ceccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 9588f26f-5a46-43a2-8f03-27081bfaaffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 bf36e008-e8f9-4a69-afc8-fc995febaa17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 006febde-9108-4509-b2ee-e61dcc5d5fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 018b62b1-79cf-438c-a500-9de2cc29fa13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 36eca357-02bb-4cba-80be-393b37aad524)");

unit.assert_eq16(16'hD477, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #174 63d7f330-9e12-474c-95fb-87e9b026c52a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h05C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 2e423edc-130d-4c30-b211-631c3eba69d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 c86d13d7-fd29-4531-bbc3-19ff2f732c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 c5ec1b5c-0973-45b6-8fc0-ce00b8dd1789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 16cc6ff3-df02-4ee5-b252-a2045a38fc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 288fa80e-39e1-4369-965b-5f40ce4a1f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 684622cd-25a2-49d3-910a-8ba7a7646c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 6018b068-df45-47ec-84ad-72cc91ced0d5)");

unit.assert_eq16(16'h304A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #175 8044dea1-5de7-4a8c-8a7e-ec9be10c1268)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 5ef2c550-a290-4294-81b3-6de9a8ac3946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 ff34dd4c-fbf8-4e44-8555-575019321c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 9d58f29d-282b-4ab1-9a7f-02384065ae60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 e5b0f0b1-6b58-4c5c-9da5-822afd44e1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 cd629528-be74-4167-9a08-52f9a078bac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 e88df5a6-bc7b-4e60-9439-93aa804d52c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 19c5d574-e701-4bd5-bf36-0edc6ccae266)");

unit.assert_eq16(16'h00B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #176 3b70a5fd-ed86-4516-878e-53a064317dde)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'h02C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 eeba7657-8912-4849-8f5b-77a6b2558b47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 c123b673-5a42-4a26-9eef-9a423f16b57c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 0ed7ff22-4a60-45f1-9ae8-d9b8afc36b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 54554c1a-4810-48eb-8cd8-24aa0585f75c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 469e24c2-97ce-4fa1-a77e-4ec46e8e6585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 b516580d-6540-4d6b-8519-73d03849526d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 e8ff2708-b9ce-470e-9896-1d29012d2b60)");

unit.assert_eq16(16'hE310, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #177 9960e2b3-6447-4a4b-9fb7-0ec2ac7834da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h0D4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 63368523-b07c-4386-86d8-ffba5e08078d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 547285a3-4043-4d63-a655-a4ba4d5feb87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 ad784479-7cfe-44d3-ab89-d1f9b523a956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 96aa4e74-2248-4440-a422-35b4e2e1aabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 c6642873-e5fc-4427-a573-2a3346e6eee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 69818e6a-fc27-4ae1-a81f-8b5cd77fc535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 21d6f6fe-16a7-4475-958a-3b600e2d4c55)");

unit.assert_eq16(16'h00B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #178 c960f087-f644-4455-83a3-7eab0135269a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h0CC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 aab36dc1-081d-49f8-bb06-c94dac5f7481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 4dfbc383-f6e7-47f6-86b4-3aecdf798ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 32bba905-79f2-4384-8728-db147b3ea4f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 0af51cf7-794a-4a94-934d-8781e5128b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 4a9f608c-c978-4d21-808d-c2d37de1be2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 72a1608c-33b7-441e-8326-0e007e070cc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 431c258b-0646-42cd-afaa-b61447c998fa)");

unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #179 3b753a71-9bf2-452d-ba0a-4125c498e4a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 f352c209-e05f-41a7-b550-afc0c2cc2bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 fc37980a-5c0b-482e-b18e-369c43b1f594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 a3a692d6-23d0-43f2-8908-ade0eeb4d67b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 f930ab7d-f9ab-42bc-b4e6-51f544860cb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 cee55a16-d54d-47e6-8fe3-c4f58eb0259f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 dde1abb4-d2a2-466f-ba7f-1bb09d54eac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 4098ea96-088c-4154-b62d-1f7441fb6cf4)");

unit.assert_eq16(16'h00B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #180 2b70e183-0f94-4630-b6f3-f7fe446a9752)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 145febfe-8c01-4c45-bd0a-a92dfd557353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 2d5ee575-4170-4e98-941a-a15db37d4ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 8e9e407d-0ede-4037-a078-f7be3748ad70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 7c2fee4c-e6ad-42c9-8e5c-d16c3fc2d545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 a922a638-4ef3-497a-8466-9ce81fae2266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 0deff521-e643-402d-a687-1c6df266a667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 727ae696-7822-44a2-a76c-761392563475)");

unit.assert_eq16(16'h00B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #181 e0f75198-2611-4166-a303-732941465e24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h0599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 2ca8e5c0-cf3c-4396-8e14-fe5d2a5d6f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 65a82c84-d259-45a4-813e-a1afe8471b3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 e66e979c-225f-40f2-8e53-a3dd44464dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 306a55a9-1a36-47b1-a2f4-7256376fca5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 cd20b618-ebb2-4ae8-9eae-2ff81469f037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 a588e792-e2fe-4adb-b946-3f78e7b5dc6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 159275dd-373c-44d9-9bb9-083d6c22a9b8)");

unit.assert_eq16(16'hA676, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #182 14d203b4-8ac6-4d01-b8ca-c928be396e3b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h0BAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 bce55606-ed54-4f1a-9526-af8258ec7092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 a2014adb-7765-4fca-9874-0ae8cad2659f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 f22c434f-7141-48cd-a1e3-dded581f36f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 1d51fcf9-70a3-488c-a2f6-38676203635a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 90d30ee0-a747-4408-ba0a-ebdaf8817123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 dfab4e77-ec51-4c19-891e-6fc7392d40ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 c01b4eb9-e163-4e7f-83cc-e19dbbf8b4d4)");

unit.assert_eq16(16'h00B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #183 c11edbfd-2760-47c6-941e-326be765d71f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h03E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 c1a8d189-cf93-4258-a425-3cd5766fac8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 a4970c86-bf44-4f23-a06a-5d1406b41d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 186bb135-fd6b-4bd5-b286-1c8a5f03696e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 3095f989-747f-4781-a386-a45d4f0449c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 439c03cd-7461-4683-8121-989277ae77f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 a448382c-d055-41a0-980b-0e012a1e937a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 26932b4a-f863-4b27-9f52-41ca4e38d883)");

unit.assert_eq16(16'h00B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #184 ad4c1975-6b96-42c6-b0b4-f545587350aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 9f4f86c9-eb7d-416b-8c9f-6724fe8e1eb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 ee330aca-d151-4da0-bd01-ceadebfecaf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 bed904bc-4fa7-4e0b-a040-9403db01dbd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 2130243a-aadb-4b84-bbac-5d79dafc7556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 360f232d-2ca7-4366-9255-28aa4387a416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 25c9e066-f9d7-492d-a985-400b0a361382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 e1d7fa35-a9f4-4a92-bab8-dce7ac0cf8e4)");

unit.assert_eq16(16'h3B0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #185 b8b87510-7a1f-4d3f-86a9-8755a28097fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h082D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 68386abf-f2dc-41cd-a0d3-5af5f4fb756d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 57a93906-7d86-4897-bc1a-d49d6aa7c308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 8a1f289a-ab92-4467-ac3f-d9ea4841bcdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 7f092dc0-667f-4ea5-b97e-bf416bf633c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 84c3eea2-281d-4e2f-9247-69043573b22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 fb5cd4d7-b10f-4f10-bf6f-77d7720dd4eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 387b8346-d27e-4494-9525-633fbf44ffa4)");

unit.assert_eq16(16'h00BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #186 c20ff05c-1896-45ad-90c6-049d6b9bfff6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 b9854c49-6ef0-4c1a-92b2-d901081cdb33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 3620f448-4eb0-47f8-a9b4-fa8ff3ba0625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 06da2617-5a21-4c95-8fb6-165e9a64f1bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 3067c07d-86da-4acb-9a5c-22b74e3ee37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 8309a29d-d9b7-45aa-9dad-96a7482f2471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 5a81f7ec-d380-46bf-8f44-f911a1c5056a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 db1f41e7-c26e-4315-9357-e41d13b03dfa)");

unit.assert_eq16(16'h00BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #187 4dfa2f62-f460-40ac-971f-e9a50d34225a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h0F62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 10369897-0143-4b2e-8c45-3f13889e570b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 3a74789e-33f9-4091-9cef-c19f77849de6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 f2563345-aa07-45ad-9d25-6c2b26690d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 ceb5419c-cea4-45ee-95ec-417872bb0c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 8636f4ae-61e3-4fae-9461-f9736582bd10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 5d469be9-d53f-46ab-bf2a-d1022cdd2c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 7a4808a6-3c60-4e05-9f3e-9cef1912b407)");

unit.assert_eq16(16'h00BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #188 2891ebb7-e582-442a-88ee-80019b38a373)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h04DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 0a8bd3af-345f-4ac3-9e75-9499ebe18024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 f501b456-2952-4f26-ae71-21a0b03e1306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 33b33671-021d-4ec8-b116-e6745678747c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 8a319cd0-570e-4270-bfc4-8bfe8131f8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 634ff98f-699b-441c-9602-b91877aa7612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 2edaabe9-1e50-4f58-8367-a90040591e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 19853fd3-176e-4849-981f-547ceb817762)");

unit.assert_eq16(16'h5B2D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #189 6de7e95e-732b-49ec-bbf9-f81d4892aa86)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h0FCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 92887bd3-f8a4-4cf9-ad0d-386ccd82efa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 cd93c1a6-a4c4-4dd2-b7fb-facb08d6fb55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 32ee93f3-7318-4bc2-989d-78e891c017c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 b3ce665f-6914-48f6-8d6f-841313233aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 7f272400-e2ad-4d03-8041-ac2841638ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 100acd06-09cc-4a6f-8253-cc55556bfb41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 673738ed-5f7a-40fb-9206-fc5550ddaf40)");

unit.assert_eq16(16'h00BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #190 39dc20dc-e4c1-4651-8c57-b66606112d32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h00ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 12ea3039-d887-4bc5-a1f9-03eadc798618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 00075559-bab7-425f-80d0-17323abb04ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 89aecee4-c202-49c9-9702-d4c2b7e9de23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 c50aea32-4ed5-4abc-96cd-27d2db7a6c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 9b7c4650-2e26-4210-b331-6a54c18941bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 56aa2a8b-a931-4769-9e1a-d0a8930d75dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 c9b92bc3-226c-49bd-af33-982e54078707)");

unit.assert_eq16(16'h0A86, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #191 f47ea8ba-bad4-402f-b721-61a0ccb6526e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h0FA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 19faa25c-efe6-401b-b2c8-71d0119e1c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 824a8667-25a2-4f28-bd56-aef5e54f4554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 5510e81c-ba97-4035-b6d0-593255bcf201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 ad531d69-07bf-4bc1-8f3f-447eaf03605a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 d0d59ae8-57b3-48ca-a528-af179ac173ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 c5d5d053-69ba-4fae-b85c-bd273594e983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 3576366e-21e0-43a5-8674-cd04e3298606)");

unit.assert_eq16(16'h120B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #192 c07b3736-7d1a-4d44-a61d-5fe15b4b0a35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h021C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 4fcd2d5e-5dd0-4998-8397-0b2b2b52ef50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 c1f2957d-81e9-404a-8524-0aa64de0859e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 fa2b186c-d2f4-461f-a233-5e7da6f540b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 9d1fd262-bb66-4bc6-bf61-5032e067452d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 038b6c17-617a-4c7c-a8c0-81ccde00cab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 7b5ce129-b69f-4e7e-874e-136893786bd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 ca95d50c-1538-4dad-8e29-e35f35192181)");

unit.assert_eq16(16'h00C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #193 f47f2fff-4076-406a-a98a-295d8d011876)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 ef5cd5f5-6c26-423e-ab01-e5a70b831ec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 f361a7fd-0b39-4281-90a3-15a37c9c6a4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 2c274ac7-0126-4a72-84cb-fd580d9275ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 1ae3f479-8526-401d-8b4f-2dfc027a31c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 f35bce96-8ae5-4bd1-934b-e44690d545db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 7366974b-82a6-4e30-902d-35be22bb098e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 3442d07d-d5f1-4dfe-a08b-c060b09e05bd)");

unit.assert_eq16(16'hC787, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #194 45d3eca2-e112-4755-bfd9-731f0b3cde2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h043A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 03fc69e2-2b44-4e1e-9b97-a476a732acae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 cfdc926d-8231-4ba6-9fa1-f3a7e1a67b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 5aaec719-36a8-48eb-987a-b1724df4cf24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 bcab19b7-58dc-4df8-a7e3-3a4727ab506f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 fe7e48a5-e910-4177-a85f-572b3ceea2c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 a977cb8f-b78e-44f3-a264-139b287b2e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 bb0b0c55-13e7-4f2e-9786-4ca58e4c70db)");

unit.assert_eq16(16'h00C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #195 94e8bea3-3aa6-496c-91f1-b8e6191d878d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h053C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 cb4a9140-39b4-4979-9b93-c55af177a1a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 fd43f476-b1c3-4718-82ff-810fbb961cf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 fce23410-af5f-4f8b-9efb-56b9617273ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 cc1bba5f-6297-47d8-9d25-7f154a0b2212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 7c247511-739a-439b-9494-0ef4216a2b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 171f595f-6661-4622-8ce0-a02f31e3cdd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 a0dc413a-f394-4f77-a971-0ea194ddec9b)");

unit.assert_eq16(16'h00C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #196 ed040b2f-24b8-4862-869f-ef42ffd62b1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0473;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h0475, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 c931a0bb-6fc8-4f1c-ad3c-5ad4e2e37101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 1f694b5c-0354-41e8-b56d-5e152bf27c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 a6c19541-d466-4860-a61c-79e4b12a55a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 5c53f37b-ff83-4ec6-81d0-615b9c0fd01a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 b34d3d0a-0810-43d2-874f-1daa98c935c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 f6cab8ab-c16d-4877-b100-757f080392da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 4ea0d9ab-a5e8-4fdd-bba2-f6f555e29d73)");

unit.assert_eq16(16'h9216, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #197 d48e67ba-df61-4a2f-a89c-35ec5289e8b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0769;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h0769, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 01f294c4-e1a3-4504-820e-3d13e300ac29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 864b90f4-6b24-4962-891c-28309d0ffc28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 09c4bab8-b1d9-4096-85ad-8dc74e434512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 53bf428c-375d-4cff-81c4-e3ebbfee5f8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 0626a652-26da-4570-9ff0-107915cc2c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 e137f933-0b26-4f7c-b2a2-db8eb7fe0908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 3d810dbb-1ba0-433d-bc05-541cc7db1d76)");

unit.assert_eq16(16'h00C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #198 5239a4e2-4814-429d-b825-a776a9831d38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h0C5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 47f2ab20-79ab-4c64-951a-2815010b676e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 d7634f76-ac79-467a-9d1e-0fa01e579ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 60db84c9-10bc-40c1-bf42-01829974a5b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 5e257fca-54c8-4e0c-bc05-cf65c341e2a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 731d5827-d611-42c9-a80e-699ce79ed5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 11bd972b-64f3-4431-8d8e-0e4e52c3267e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 1ffa3053-1735-48ed-b87d-b8d8d685afd8)");

unit.assert_eq16(16'hA09F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #199 97710300-fc68-42c9-b23e-98f3f79ee54e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h085B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h085D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 9011d519-ba01-43fe-b940-98f7325c5f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 cca47ba8-a2d8-45c8-bfee-3694b593c06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 31f59be8-52c1-46f6-9201-cc20ba612262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 489de8c6-ee49-41f0-b9e3-0a5942498380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 3127aca6-e294-45ff-9b3d-e7af5aa1062e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 5de0fda0-1d8f-45e8-9ad2-8faaaf26e1e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 ebe8aee4-bd73-4490-b609-16008bec9382)");

unit.assert_eq16(16'h3A07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #200 88a24c22-4094-4d16-b4a7-fa60bc9943c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h0F3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 db865fd7-90bc-4b2a-92df-ae66ad01fa12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 5151bef5-79d5-426f-9e59-668d5607bc86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 e4d4a028-d974-47e1-8ee1-428c8e91dceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 d7b17325-9ca7-417e-8c28-1d86b89fde1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 416636bb-995a-4132-b6b6-ead5174c3e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 7102e2f1-10e5-4d18-86d4-c3f5cc3d06f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 ca292af7-1b74-4662-9e32-3abde31c96b5)");

unit.assert_eq16(16'hDE92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #201 20ee16fc-7541-4221-b3d4-3bb9276141a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h0A81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 20f070bc-14fa-4f3b-9e77-899ffc23b42d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 48f2dbdf-7516-4102-b13b-519e9cd56b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 82d49ce6-1607-4cf6-ad84-a6284fc320f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 7ea946da-9bae-4aa1-81a1-457c67f4c0ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 61572f4d-1beb-4dfe-bddd-38cddc30fae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 b67d31ff-004a-471d-b7f3-44557be8efaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 07ff2f40-0812-4b82-a9a5-1b4e09fe4ddd)");

unit.assert_eq16(16'hB99B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #202 2b9b7b1c-79a1-46ec-b78c-165534e1b428)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h0C37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 c67e0bc2-a841-4c32-b8e8-0c4360bad722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 551281ec-f331-45be-b912-617655997bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 8164593c-8290-41da-a696-89c20f2be058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 78b85035-6625-40a0-93bc-eddcf4edaf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 a303407f-524e-45fc-b391-fd16f9fc134f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 625cba57-1006-4ba1-8ec1-8a4afba70aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 99b01584-0c2f-4f61-a479-9953c24d5f5a)");

unit.assert_eq16(16'h00CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #203 e1a2a17d-cd92-420f-826a-9816eb26b8a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h0BC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 44527066-3754-4b87-baf6-beaa9a7a63fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 c4b5c360-9f7d-4386-b6ba-f12b65bc33ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 756cf222-7298-4576-a01d-9b41bded1e21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 98b388e3-3087-4a6c-a640-840bc48141c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 4fb69442-ddca-4012-a48f-5bf32e3d1baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 431d7f9e-f5c4-47fc-bf37-f1c724dc8a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 d387f194-9af6-4c3d-8cdf-0f36461d7c4c)");

unit.assert_eq16(16'h00CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #204 4d96325b-98ba-4a56-9aae-7d25d3a4de43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h09CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 d4ec8ac3-bc17-43af-8597-f063a19ce165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 955e32c4-5fdf-43ce-9486-c9edac39c0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 5ffc7527-c3dc-4f46-aa00-34c62bb126d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 df69ce1d-8d6d-4b0b-a9c3-c2fdea0f04cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 dbcd7e21-e94a-42d6-a22b-aa0cbd74fd5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 b1f1e195-8454-4109-aac1-df559bfb2749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 cb84cc18-3343-43f0-a1ff-6a34721aa301)");

unit.assert_eq16(16'h00CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #205 cfc0ec93-3298-47a5-9a86-8c214901051b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h04F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 2785d1d5-c2f5-4a50-80cd-42ba0e366af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 9ea67030-a1ff-472e-9052-0cefce91010a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 dd7e3b41-927c-495f-a1a2-20f638ee3e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 35377711-9c7b-4c1d-bc60-74a2077224a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 9f1e05a7-daf1-4d8f-b52a-8418cfc950f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 d640fcf1-8c3e-4c93-89fe-12da32389491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 8028b43a-ce43-4cf6-9cc8-f01a02535f05)");

unit.assert_eq16(16'h00CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #206 6f08c4a6-f52e-4603-a4ee-799fd3381b83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h0E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 ae1e9619-fbdb-4f87-815a-349c344ef44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 572911d5-1c34-427e-b9f9-5508ffdd6cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 9371e19a-b047-49cc-a797-3ddc51a0d135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 39827fbe-398e-45a9-af50-dd4a3ef0b221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 2dfb689f-8d67-4955-a328-df6332ba54f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 5bf56dde-2667-42ba-b27f-09cd6e32b88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 c4b2b50d-a719-4853-a2c3-b0d7d0c9b5ae)");

unit.assert_eq16(16'h00D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #207 39af97d0-ed8c-4229-be2a-3fd5d675fdf9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h0A2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 166d724f-c043-41cf-b1fd-c569006cd4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 9613229a-fc38-48ca-a2be-a8a4913aa984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 a2411c42-874b-4212-b50f-973496db1f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 b125ca54-64da-4f1a-b95b-329fbbd68b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 48c3f884-2cb8-4065-a126-d67407c38bc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 efea794e-b4c7-41f9-82ec-ac5c5c486fd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 66df72ba-7ea2-41ad-b539-2091e522baee)");

unit.assert_eq16(16'hEC06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #208 78111362-a95a-4aa3-8f99-c4c6f2ee80e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h00E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 4f1a7a37-b2a0-46d1-bf15-f92e83049c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 9b7c56f5-7ac7-4bdb-9bc6-4c2cfbb43e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 577d80d7-1a9b-40ef-95ab-a86d28e1941d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 2b914b25-dbb5-4c8b-a051-2d3f7ce9d35a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 bcdbb4c6-18a4-4540-ad61-5564597e858a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 26e46d1f-5ddd-4a3b-a7f3-1f6024639ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 5e5d357a-44f7-463a-b6f5-549e4e4eb2fc)");

unit.assert_eq16(16'h4A52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #209 eb5b2508-a8e8-4779-aaf3-5959c48b973d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h0229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 733cc855-d600-42cb-89e7-33781f026a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 6dc44eb3-50db-4386-bf88-c20f4e1ef48f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 078a45c7-3357-46a3-9fc7-9e98276dfbe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 9d60c58b-85fb-448d-9455-63cd79c63e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 b048bb96-1785-4b43-91b9-9662741b0ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 25c7ee99-3ed6-468a-bacb-326282303df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 6c92efe8-59bb-45a9-b109-e777c59f3ae6)");

unit.assert_eq16(16'hDA1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #210 d538a77d-13da-4916-9731-50ee72a41ce1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'h0FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 6c49b11d-0aca-4d17-9822-81170ead1258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 9a94eeed-fbab-43ca-bb1b-cf8a9cb342a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 6553fea7-cb1e-4009-b087-67cc93ffaf93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 876511f8-f484-43ac-8e9b-97f429d147eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 e8cdfab4-1008-4c47-b4ec-e19bd149aee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 e0da8b2c-6786-4906-8d00-bf0575cb9c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 b1c74ba4-dd8d-4d5c-8f3f-0cdaca19a2eb)");

unit.assert_eq16(16'hDDE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #211 241cc857-b5c1-48a6-bb77-12001741fcfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'h0DDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 beacb7b9-6fcc-495d-adc0-cc28e7b37468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 164f5089-968e-48d0-b9d6-542f835e6269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 d6b77855-35b1-42c5-803b-8d29e115ed31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 ba56c53f-f9ad-4d8e-b003-553f9fc8c069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 d5e2d3e4-92ef-4f3a-a091-a83dbea3f099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 deba9102-26a1-4883-b5c7-da85bbd61681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 423905c2-13bb-463f-867c-5ae1ade20617)");

unit.assert_eq16(16'h57C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #212 b7e7341c-db70-42b0-90a2-d0e76c8aadcf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0193;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 b04960f6-d4fb-467d-b1b8-e4f0455cda01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 3e8fc679-6fcc-4e84-86a3-11bb0d9305c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 63ec3b9c-1f63-4420-a450-2729bc558cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 5550c22d-2892-42e0-8a68-8c1691942ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 3382c410-89b2-42a0-8d85-c6223ee44d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 1a9d5d43-f999-427c-b477-bd5f2c452a99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 d82038dc-a666-457a-9f0c-5f226fdc40f9)");

unit.assert_eq16(16'h95C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #213 e5158347-9e0e-4130-85e9-48cea2284909)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0041;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h0043, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 962ea87a-e03e-48c1-8079-cc4ee4532b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 d02615c9-10c9-4a84-a3ea-ed965f401b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 6dfa2aa1-32bd-47a0-bc0d-1b2db6d7f38f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 b6eab01f-d322-4b04-a85e-eb77224f8fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 d5847d21-6764-4b41-b139-d26a45b1e0b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 eda26571-4d5b-4d0b-8834-f54c66c52a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 07f64e10-8b60-4e0c-86e2-f9e69ef879f8)");

unit.assert_eq16(16'hEBCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #214 53852351-fb2d-4112-b7e6-23bc1740f19b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 ed7777b1-6ab3-467b-b8b9-b0d748a2d7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 bdf85ceb-c277-4c3a-80df-cfd05a3917d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 57297bf6-7b88-46e6-8431-0582832fd042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 35be9fe5-6e1c-4553-a5c1-8b8c18290b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 c4fd4287-5ab1-4ad1-a3e8-21d25c05aec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 9426b590-713e-43c7-91cc-546fde9ccaeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 d7dd87b3-49cc-4b78-8618-fe23280c21a1)");

unit.assert_eq16(16'h2813, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #215 cbab33cf-28f3-4a93-a479-fa9edc3ba88a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h040B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 b306e181-38d5-44e0-acef-f422810c9e70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 be80f7bd-1d4b-44c5-95d2-2be5b1fea59f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 df23f04b-b3ac-4306-a87b-277908606ceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 ee754ec3-5be9-4aba-a357-5ed25bdb82be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 dc5f2600-d2a8-4f87-aa9c-f215be7ab267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 7fbbf200-4718-48d5-8312-e1996a275e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 2dd6c7fe-4771-4b49-9623-30c0b4c27cd5)");

unit.assert_eq16(16'h00D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #216 e760d8d8-8ce9-4b31-8cb2-7d66c6f94d57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h0CAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 515655a0-1712-4839-9451-16e815350025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 8e869285-47fd-4c70-b0c7-5a53dd0cfeac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 b6a568f5-c076-46d3-b6d4-14187c2ed56b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 5f629374-3ac6-4692-bf4c-3a0d603f7c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 2b8b33f1-b434-4c3f-a9e9-073adb9b0cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 cec0b415-b25d-426f-b5c6-19a8d33ea892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 9d6f3f5c-262f-46a9-9ed0-a221431cad36)");

unit.assert_eq16(16'h00DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #217 594a0176-838c-447e-95ba-d9e33d1ea4b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0302;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h0304, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 eba8bf99-bbbd-4e08-98ff-1f513bfd6856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 c939acf6-16a5-4010-970c-64b11e1dfa0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 1d46d4f0-517b-43f8-805b-5618e6b218c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 50658190-26cd-46a8-a7ba-2a9d111abcc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 17d753cf-3f4c-4dca-9d95-5d0b83bfbdd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 8de2920f-dfc2-46b2-8a82-bcd049757e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 f8c76e91-b277-4638-81f1-0b308d262a36)");

unit.assert_eq16(16'hB507, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #218 b8b84979-0eb6-49ee-aee7-bac4fd3085be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0034;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h0036, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 03c990dc-b8e2-4b8f-a5f4-d1e607d8e942)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 ee65defc-badd-4850-aae8-b8dc133f84a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 5739e62f-87ed-42a6-a094-7f113de0fe3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 b9351576-52f0-4dd6-a5a1-7438b092e162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 df6924f5-f73d-48a4-9aac-47b7727bdd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 e06a846d-15dd-44c2-81ef-9f1d42b22d97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 1e395343-7f76-425d-9caa-69a5dce4d702)");

unit.assert_eq16(16'h1B15, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #219 1bc3ec28-e923-44fd-93c5-87322b921c46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h01F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 9ec067a4-e293-4d0a-bc45-8092a5b5c6c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 d8fb76c7-1bc6-4bcb-ad88-a6d6f492c76b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 95777f53-6259-42f1-9558-5ed17ba53c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 274fcd20-f13a-4fca-9f8d-3d683b4732ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 c0d7119b-b3bf-4e8a-8b48-9c4400e4a389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 85022a85-9dd2-4778-9825-9e0e7b0fe570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 48e67b6c-1363-44b0-bb76-445a6953feea)");

unit.assert_eq16(16'hB1F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #220 3e076206-769d-4886-9b45-dd2c51d15a70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 7a5de41b-6781-4581-a727-ab27c8657190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 9a876d9c-0418-4b21-abfe-761f9b46466b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 396bc150-27e5-4f52-8c9e-a1bc516ff2bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 e549dc69-3481-4442-8d45-ff6f27143cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 73d4fd44-59d4-4bfe-8d1c-32242a548b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 168e0142-fb3c-41ff-99de-68cb27a27bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 3329fa69-e657-4334-86cf-d7f97880f2df)");

unit.assert_eq16(16'h548D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #221 6009290e-de5f-4e5d-8e42-7f2fad77cb01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'h0BFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 a7a2c5ae-13a9-4639-9e5c-70370b408bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 ee338774-97c1-43e8-854e-c1b77c52da89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 2ecbbd60-3d15-4ca2-ac22-848ad29a6024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 7c2f1417-a050-468f-83f5-283ae38bd0ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 f70c5d27-c21f-4eb2-b7f2-0b72998df53a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 4ac369b7-66b5-4a14-9927-578a3e27a90a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 b34188eb-b4c4-4a47-8d35-f3bb5f657f85)");

unit.assert_eq16(16'h00DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #222 9014e2c7-f3a8-47ee-9c77-ae1ca4781b15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h07C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 0a3ef4b8-e6e1-47e4-b4b6-89076522fae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 761f1346-5d53-47d1-b573-3b1a71c1e93c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 520e4853-6b64-4b84-98e3-46fd800f649f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 90046fdd-ee8b-4218-bd37-2891190e954f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 c8c34bee-81c1-466e-ac2a-453404cbba2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 4615921a-ce35-47a6-9df6-c740a319e908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 e7bc0f22-82c9-4251-8615-15f25922822e)");

unit.assert_eq16(16'h00E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #223 a68b8f44-6661-4316-b9c6-8cd98967bb90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h00A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 003c2b50-5894-4868-a935-1449fdcd9500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 a00a58bc-1416-4ddf-946e-920a185fe011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 74575300-2137-4b3e-849c-30d6da88cc69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 822acaef-bb40-4887-bbef-c3a255eb4d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 949e331b-44a8-46fc-9e1a-87cb2b3f745c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 9253d3eb-67ea-4e74-9313-127fe0c44fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 4814cdf2-ec29-455d-8afc-a7a8167bbee1)");

unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #224 b0d60bc5-fb27-497d-b2ef-09bdf23a6d05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h06AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 c98ce3ca-78a4-4191-b62b-01b6187ac339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 95a1754d-cb2c-4493-a702-3abcaab67979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 ad8e3dd6-a656-41ab-84e6-c03758200c5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 e8312867-2144-4896-a99f-d62616e43538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 bb088c26-bdc3-47ec-a78c-6359503e255b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 7369223d-c846-420d-9ad9-bfa114098a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 676c6bf3-52d1-4c30-9638-a69bf955acd1)");

unit.assert_eq16(16'h3718, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #225 b19ab567-7a48-4be8-ace6-eb529c5ed7ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h097F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h0981, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 3ce76b70-62ea-4b97-aac5-7958ca641b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 6306f01d-f8aa-4a68-ac14-445232a052dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 f8729d38-1c7d-4346-a09f-55d77a088286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 a7beaea9-561d-4b5b-a162-bb0d39282b4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 20856eec-7124-4f3a-854b-97889bdcbe00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 95470aa3-6c3b-46c5-860c-199a60316ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 c4dd0ce3-7935-44a2-815d-646f0738c1ae)");

unit.assert_eq16(16'h0140, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #226 ca637fff-c900-4dd3-99eb-00a22597b36c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h00A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 a697f8e8-4bd0-4455-bf93-df249c653a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 51b201e0-9e55-49b1-9494-61f6cf2fdda3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 68dac2ce-b986-469e-acf4-6ad0cec77b75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 5e777558-5057-447a-8128-cabe4b3713ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 a66d28eb-0af2-45a5-9fda-d062f05f30b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 79321e70-41cc-41e2-a64f-c1f1221c970f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 3e8c5a15-bcdb-45b7-935d-6b17f47d71af)");

unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #227 cdfcc03f-4c26-4784-8e43-925be6d81ada)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h071D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h071D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 bb37c2bd-b06e-40d3-a630-79b102af0c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 f43b70d9-660a-4038-a439-60ecd545da98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 ec2db22f-a4b0-4c5e-988d-fe5b3800f83f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 c28c4567-f074-46bd-aa80-3548d8cee56f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 2a48bb55-5e09-4c71-80a5-1d8214e416e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 5c2c5ac0-7a90-4deb-8734-7ad31f1c9461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 c6a462aa-de5e-4f5c-acd2-015e05812520)");

unit.assert_eq16(16'h00E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #228 e495d673-5f12-4d7a-87c6-0f0cbbca0da0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0624;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h0624, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 dedf8acb-562e-40b7-ae9e-a960663b5e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 9ebee5b6-19a4-41e2-8ac1-4f140a74559d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 b13c6f99-1251-440b-9b46-de11c2f50cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 e88b69d4-0050-4c37-89a6-dc926078fe62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 dec1d5e8-248e-4b86-b668-cbe1fdeb7416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 bdcd4652-1265-43f6-ad40-685072046830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 a0699fdd-e13d-4a7e-a6b2-5c925c0d7b16)");

unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #229 c9845a31-c55d-4407-a1de-abc7ede0efe9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 aef1c7fb-04d9-451b-bb53-6946c944546b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 4e2314a2-6cf4-402e-b988-8cd04ca83811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 43e7b081-b1a9-43fa-9c82-c4a1ae27beea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 dc4e66db-5dd9-41a2-be21-5a30a06dbe0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 75fbb12f-cbe3-403b-a04f-aa831f1894d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 d2dbd3ef-232d-4551-9c01-e9f151476b8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 c7dd4332-e666-4c88-8075-ce9ecb485dcb)");

unit.assert_eq16(16'h00E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #230 aef4cbd5-6054-46a9-9fcb-d17ad3b0bba8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 0096a906-e27d-44ae-a292-578343fe23db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 215793d9-f0ef-444b-8f45-b6659764871c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 22b8a231-2194-4120-adab-55a8a4f7fdcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 4f76c96e-f6af-416a-9322-2b7bef5d9b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 726680c6-b3c6-4283-941a-3156f37f151d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 1387130d-e3ad-4e9c-935c-a309baba2809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 80629dad-d71f-4586-b4f0-1ca0e7aa392d)");

unit.assert_eq16(16'h00E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #231 0f87373c-33bb-4984-8d3c-6b2aecd7a7bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'h00FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 1294553f-f705-4119-837b-bb4bfb5c410a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 afdc9515-5b20-422f-a9db-938ea391ef57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 6a32e028-efa9-494c-965b-c40f27ee2b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 fbc685ca-d228-40fa-9492-1ccdad12b908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 64a84705-cb14-4946-976c-d55edd09e2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 cf7f8f24-b7a7-4a1a-bb6e-5dd436633c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 7a14d664-d0c3-4d52-8c3e-36b5c86c2446)");

unit.assert_eq16(16'h00E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #232 8c9281fd-a989-44c3-8cf0-144f571abc1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h0593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 8e048a9b-c6d3-4713-93cf-44ec701f8316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 58f2c313-d515-4eb0-8643-8aecf79eed15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 70831bb8-fdd6-4fb2-b0ed-57ceccc48fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 d7d5c169-51ed-4fe4-9960-785575afcbfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 6b2aecf1-aba6-4462-848c-30d9574c70c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 ffb055f4-4972-4d8e-ab7b-894c17892c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 ffad6c0e-e412-4107-aa2c-233bad14cf0c)");

unit.assert_eq16(16'h00EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #233 11fba4e5-71b9-4f0d-bfcc-e3647587a17d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 4afb473e-9b95-454f-b4e4-3542c5eadd83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 7134d8e9-3bfb-44c2-84cd-1fa546d3c26e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 f1aeaa42-637e-4b9f-ba88-70f1ffe45a4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 ce9309e4-ff9a-4a51-a1a9-e3177af1c329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 c697b68b-af4e-4675-a459-b71f77d0720e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 922b12b9-201d-49cf-b98e-edcb2d28cc21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 529d98a4-8a53-4615-81b3-9d2bdc2d202f)");

unit.assert_eq16(16'hCDC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #234 c782a65c-108c-4eb7-914e-5076f993c116)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h004E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h004E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 f8257707-30e8-49da-99f5-20e0bb22cde0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 7eb154d9-ba3a-4f84-b997-e39a1c270d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 48f0be44-2ecd-44db-82d2-20b2a8d6b138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 48ec2390-e1a6-4c50-b408-2643a138ea0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 75ce0144-1523-401a-83c2-7751bceab647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 ac9e8b80-5456-475f-8173-2cbecd834f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 ed5db36a-c05f-433d-a522-fd217f1ab0ca)");

unit.assert_eq16(16'h00EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #235 d6dfface-2ae3-4f09-91c5-5043762b2972)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h050C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h050E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 fa2a239a-0f91-4e54-a78a-d673e41f7152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 a1f92ee5-9bd6-4466-a317-b3ae620da42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 219ad6d2-28dd-4aa7-a5bc-4d85480fb739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 172055ea-7244-47a0-ae26-ea30cdeb9459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 a5f992c4-7248-41d7-a1c5-53ea7610fd55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 cb981896-3b8f-40ef-8c62-e0fcf52b1b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 9f166748-dbd2-4e7b-8c7d-80b91f5d46bb)");

unit.assert_eq16(16'h39AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #236 b196f050-0255-471a-9e4f-2a8f2e6b4812)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h02D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 3979151b-c3ca-4c14-b194-564ae8bb223b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 d2feaea0-7097-448a-bfe8-7b499a26921a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 81315184-0a53-4f91-b3b1-8251b6168b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 13c20607-b755-470b-9d8d-088c264e3537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 9129fdbf-c84c-4c50-b2a4-57e596dfcefe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 7096acaa-f7ca-47a7-9ee9-c23c8ccbb7d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 e4a20389-476e-42d2-b7ce-b96cae545a08)");

unit.assert_eq16(16'h00EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #237 40884426-ea94-424d-aeaf-2433ebd2829b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h000E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h0010, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 88f02978-adf6-48da-81d5-38b2e0e41a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 86e3d980-a7b4-4636-8584-ad2667b19fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 c51d34a8-ba87-4cad-b0b3-806041648f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 052bd1ec-6073-4477-824c-979cd2990603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 beec566b-9ee4-43da-b5de-e2ae0e0fd911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 6dbafdec-9ab6-40dd-a74d-0d8074cad0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 3d235758-d785-4402-8435-34caf492ad66)");

unit.assert_eq16(16'hAF1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #238 54ca2a50-0901-4af2-aacb-2c99bbfb1951)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h0B0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 a81477c0-56c5-4288-8e3f-0aaeac1cba5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 30d5c675-1877-488e-8c0a-41f944b040ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 4b38f2cb-d6d5-492b-a0d8-6a6bc2c10f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 725a4848-8be2-478d-81a1-1ec329147af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 814a9202-0727-4aa8-8755-b6ea6e5f3e5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 c0d22c17-f6d3-474d-9ccc-1cab09062fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 817bf1ff-99cd-41da-b17e-9c1826e6fd19)");

unit.assert_eq16(16'h767B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #239 97441d6e-fee0-4b07-bd43-cc7d72e2b6d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'h0E8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 3b15013f-7d0b-4e71-83c6-56cb483395db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 797ac78e-50ec-4b0c-8cfb-1241e7f60041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 11d5f770-a472-4ddf-8a99-00586804c022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 fe9ae93f-0789-4518-88de-96515a40b815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 eb2aec44-7729-45be-bcb8-c521ea4f1f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 e458adac-2b7c-4f67-962d-2f1b274a3c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 3282308a-81ab-4bd2-a7de-1d2cd7653114)");

unit.assert_eq16(16'h6CBF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #240 907290e5-c440-4acf-bfb9-6b3071c3e16e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'h0A9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 748ef0e1-3970-42e5-8e9a-e4f15af63134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 384f9206-7119-4a33-9d8d-f8655fc346e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 85dc2aad-203f-4894-a60c-965a37f4de3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 de9ab239-6a67-4acb-abfd-e27075b00827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 efd3e888-d896-484c-af18-7c968272e821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 aba23ba7-aaa3-41dd-a90a-aa6164296f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 4dbb64d9-0361-4e7e-ad29-aed19e0e1134)");

unit.assert_eq16(16'h939D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #241 4d7b1ff5-103f-4054-b475-1d9d505116ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h03DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 004cb142-27ad-426d-9202-55580e675f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 883fa1e6-27eb-452c-acff-0d861b5d197d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 6c7d6cdc-dbd7-4c0b-bd3d-82d1c327893d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 b378f583-ce4b-4a34-80ea-fe33c5f57e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 e580daa0-c6e0-4aae-9a79-867fb4713c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 a615914b-5e79-46a7-830f-4ed1bb990436)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 b14d1dbc-8c13-4fe3-9e16-e482e162bc79)");

unit.assert_eq16(16'h0AD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #242 e4d99ece-ec3c-4d48-b519-72b297d0b52f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h0BB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 c03ed939-8afc-4122-bc30-b184ca26b81d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 590bd06a-90ce-4279-937c-fc37a719dd58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 9231cf58-6070-428f-b6b5-3174d41089e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 7b92a5bf-b2e8-4c88-a871-396038762910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 ae53808e-05e7-4795-bedc-a1ec2d35380e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 fe182b47-a4f4-44f5-b959-b4ba4888a92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 95530a77-8e4e-4ed9-a68d-cb7a02943117)");

unit.assert_eq16(16'h9323, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #243 f8561e13-d663-4d5d-b6e3-ba9e8f1afeb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h0F0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 03938a1e-080a-4441-9dca-09f80c89e404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 805eb882-7452-41ef-b82d-537779e1c1ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 0dd391cc-913a-465f-8750-16202527c7fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 91fbc927-bf22-4762-a64f-07a392c75426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 e6188397-6964-441b-8186-55bfa7260f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 7661dfea-fbd0-4510-b1e9-5a96bf45fe38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 b4ad6de2-598e-42b5-a45a-a42d383b361c)");

unit.assert_eq16(16'hE5B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #244 815a0d9c-51ac-4bef-a845-544ab01baa4c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h0F42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 90fe7f8b-beaf-4f72-9298-26bd5537b6ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 801a8837-f3c9-4901-9363-c435de72c6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 afb43c2c-bd8f-4d71-ba64-177adfaa05c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 01c4a45c-0280-4078-ade2-42bfcc893092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 c9542683-40c1-4718-940f-ffb7831775a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 afc01882-9f22-49dd-9d15-f3b644e3f989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 69325ad7-5eac-4160-9f82-3c7f7508f3a4)");

unit.assert_eq16(16'hBEF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #245 188c0f39-98d9-42be-b698-6a4a2ab64563)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h0CA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 0b91271c-3bc2-4567-8098-a8ab02cb84f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 7a894e47-3430-4128-852f-04e55fb66f6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 ba486e8a-3617-4b3c-a436-f3ab9e1557c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 7ea1ef15-8d74-4765-ae75-d9ebd514c107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 25aab4aa-6f7f-4dc6-8b49-ba2c3ee07b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 3d5545d9-5c31-4dea-9af7-bbc6b9f3d6c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 6a15c131-2b49-4672-8d9e-aca7029d8904)");

unit.assert_eq16(16'h7793, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #246 5aa0a25a-8724-46d3-874a-6e83f79d42ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h0B63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 492138d8-b0b7-4971-86b9-f09d67df6f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 3ae01040-efd7-4bfe-8a78-7c958592767b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 75c3e576-8ec2-4261-b103-d17311ce5b52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 33f3e1f6-2b5d-4200-b2a4-5ee1b18e0ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 f30f67a0-e57e-464a-8aaa-8629f3557300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 55456c81-72b5-4e2c-855c-913e4eccc2b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 7274bce8-15f2-43f6-af93-d90bf0df580e)");

unit.assert_eq16(16'h4DF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #247 5c73f86f-f54d-4e30-97cd-b6d6b7e0711c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h0DAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 f5dc6487-36b5-4ee5-8dd2-fe78a9d1b917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 d3924d40-5d7c-42fe-8682-ac13ad6b9460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 36b6cee9-ee50-4b31-930b-23ea6cf875d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 65ceafd2-083a-49d6-925e-1e76cfefa891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 297a1f28-d071-44fe-9f42-70031a6d1616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 f545f5c3-5d18-4873-ba84-41d40ac8e5d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 a7511df7-19bf-4def-a5ab-cdcf108fa177)");

unit.assert_eq16(16'hA888, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #248 9383b962-2f10-4a33-a7f8-317725f57b2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 d878de46-a467-4a73-8abd-0817932abc6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 c515ff11-6abf-400b-8ea1-4e91181ceda2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 3efcbf72-1e73-40fa-992e-cfa0e54959a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 ca3b05c7-270e-4416-b7ee-cdabe90342f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 b2a3adb4-394a-463e-bcfe-0b5a400b1a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 e40c4ec2-e478-4e5e-95b3-ae3fe0b179c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 06e6333a-2d41-4ad4-a323-44a5163fc995)");

unit.assert_eq16(16'h3590, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #249 5a424e6b-05d6-43bd-affe-babf05d229d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h0A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 580c7c68-fe20-44dd-a832-4b897c539dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 06455182-31ca-4f42-9106-73ac8c08e68c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 bb22f00a-1c09-4e6d-95ed-64973c738ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 0399efcc-6efd-48d0-8504-96144b67092e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 6f2585b9-8d2c-45ec-8aef-6b16e3863952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 b9952755-1faf-4c2f-9a88-63f2f6a4111a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 a9abbcf0-a795-4edc-ab88-ba46c6b0f401)");

unit.assert_eq16(16'h2C2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #250 209cd4f0-4051-4073-a6c3-ac454089a040)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h0ECB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 fc288842-d374-4454-8414-7351900eb203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 d96a0751-5d4b-4a46-9f0f-02d67b0fb780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 0f87f41b-f570-47d2-9568-a8cd03ea6ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 ed0869e9-2f4e-4389-a551-f1267db60b7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 4e8ca46f-a795-4a0e-8aa1-3f33a2ff394c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 fb7324f0-60ba-40bc-8c6d-ca01a8d6c105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 709d0f3d-60a5-4c6f-bb84-3ea1b77458ee)");

unit.assert_eq16(16'h00FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #251 6dccfdd3-6ca4-498d-a04d-acb92453330f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h0ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 64cc5a47-25dc-4b94-ab67-2cb8271a4d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 eb4fab01-8e71-4600-986a-98bee36d850f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 e768bdc4-a9b2-4386-9b3e-2f40015205fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 ebb75f7a-c84e-4895-bc9a-6fd0eb987210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 55fedd40-8a5c-437d-8b5c-17af27359957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 0cd7294e-aa37-4986-8524-f760c1b5c19e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 77b6b5e6-dd29-4972-8e3e-eb0f008525a4)");

unit.assert_eq16(16'h00FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #252 def41d38-3bc5-4b85-a7d1-29fa937fe53e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 ddcc2bfa-1e4b-47b8-ab96-9dc18882166c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 d628abde-f351-46a9-a557-45ffcbf581e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 44af26c9-e7cb-496e-9281-a06b482c3b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 e9aef1ec-316b-49b8-9bce-2eacd847ef49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 418d80c3-d7b8-4e28-b495-803e3274fbe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 d1f4d357-461d-46c2-8b30-523ef4ec54d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 b736779a-89c9-4c0f-af09-1478887ef271)");

unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #253 a006ca7e-0e6c-49ff-8187-b31fc5a6689b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h0CF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 43f5f945-d2b4-4f50-a104-2833f12f1d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 f05add56-91bf-4f8a-9d41-069492a51632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 63fa4246-c452-4240-852c-287de8f3a72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 61bcc96b-7814-4db9-a47c-31b54f493101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 14dd1d5b-c41d-4deb-9a22-d5026bf52647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 f6ea1c00-0ee4-43fb-ba1e-77f51ecf08d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 c4e123f0-c06f-4dcb-b7de-18e7334edd3c)");

unit.assert_eq16(16'h00FF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #254 7fdf9db3-cc09-47b5-9e63-1537bd386026)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h0D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 299ddf75-dfd3-406a-aa70-11b6ef86a49c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 03dd12a5-eded-4492-b773-015b024b2e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 087e0662-4f92-4485-bafb-5e4748ed579b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 dfc98803-5ff3-48b1-b8dc-22a30835f36c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 7c43a7ff-8a86-4e90-8ed3-fecf5d0df9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 8631f5e9-5ec0-4803-bcae-52de19bc5f8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 69cf22bc-e02e-4428-822a-39c8c7029061)");

unit.assert_eq16(16'h0100, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #255 156327b3-088a-4f29-903d-42acaa164b31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0100;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 424f3e82-2252-4bff-9bea-277ed56a7582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 375b33b9-d4d2-4b4a-a8d5-c62a1fb0b333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 ccfbe0df-88ef-43af-90ed-dd5337945642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 dff4c43f-d16f-4ba5-b2ad-40ed956184c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 fb6ff6e6-99dd-4deb-baf6-c77daee48f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 9824eb51-0f75-4f89-8229-1ba789d2bb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 a244d58e-8320-4ddf-816d-77dc69643130)");

unit.assert_eq16(16'h5A2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #256 949072b1-8240-422a-a162-203450c7c4f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0101;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0765;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h0767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 d4470a92-c374-439a-a78a-db683c1287cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 3b09ae64-7068-43ec-8475-a8d2ae6cae0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 447ecc74-0862-4116-8d04-8ed59174f023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 1f30f09a-32c5-4592-a5cf-c3707201a04d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 a77b93ca-2a9a-4356-9095-c37cd5bfd478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 294233aa-d753-4e24-96e7-871f99cb90fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 0c9683af-e3fa-426e-8a9f-4f8a90a3cc0c)");

unit.assert_eq16(16'h04AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #257 0d2e48f0-6bb6-443b-81a8-e992329ac03c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0102;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h0CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 61c6ce2a-f9b6-4712-82f1-e34e347a49c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 15816fd9-fd1a-4426-9b8e-053a444aeb95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 e826f99e-62fa-4330-bab0-a7a9ac672895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 ec94623b-84a8-4171-bea6-f2437275915c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 503320f3-fbd9-4885-9026-4b545612f8ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 ad300366-5de5-496d-91f9-c43893ebc703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 e8045500-f5d4-4f41-a1ff-3e65db8eb2ef)");

unit.assert_eq16(16'h0103, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #258 1e93f920-9089-4734-8913-3ca8462ccaf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0103;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h0F0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 893fe418-eb51-4ebd-a287-31d04f8b34c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 8decdf65-110f-4b73-9c4f-55ddbaec2cfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 53d27b1b-008e-40ae-b7d9-5262670b77b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 1cce6f04-1cf7-4768-82ca-2797715fa6a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 67ffacd2-a2c1-4fb1-ba73-3a0051be4c6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 6d03eac9-58c6-4a0e-a746-93356923f2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 3f4189b7-3386-483e-a625-f85466b3e491)");

unit.assert_eq16(16'h0104, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #259 811e125b-bf70-4b2c-b57c-307499eb37f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0104;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'h0D5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 425591bf-3a2a-4117-b729-d900455fbb35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 4d097e9f-55e3-428e-88d3-f038732c6661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 bb27419b-c711-462a-814f-9a495bb91088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 b3270235-582b-4da9-b94c-2efc59d9e901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 dbbef4f9-a76b-4b8c-98d3-108f847229be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 72cec5d9-c649-4132-9dc2-b514bbd771fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 f0e105fb-2495-48b3-980d-a1dc6e01cd5f)");

unit.assert_eq16(16'h320D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #260 89fa23b6-47d0-438f-b630-fc916bc2d390)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0105;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h0AF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 23d5caf1-174f-4bb7-9c66-c44e30cc8725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 5420f5d9-f9d9-4eb9-95c7-c74cfcb4af2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 40f698c3-faae-425a-896f-840d88ac2697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 0702dcbf-a426-4577-8934-699be5c28bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 183fd85b-9e93-45f6-8c3d-84ceed60b568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 8c132af2-0e82-4bc3-b6a1-37eb09e84fd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 13ccc0fa-d93f-42f7-bbde-36337245be59)");

unit.assert_eq16(16'h0106, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #261 837a6d71-3cab-481e-8463-eea2c8f3a20c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0106;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h0A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 b15b1749-0ac9-43b0-98e3-6cb7660c8fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 8fed9beb-5a9a-4eec-ae52-e824a7937fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 ad63cebd-3cd8-4b0f-8993-d70146f1ce75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 38e7a082-77ed-4151-b58b-7dd94734778a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 cb6df4e9-91aa-4bb2-975a-cc495c108664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 277b2d84-1d0f-43ea-b6cf-a86964c78077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 d4ef8c17-b795-4bf5-ae3b-5693000079ae)");

unit.assert_eq16(16'h0107, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #262 f09cfe9e-04a7-4f5d-8418-ca2fd5b796e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0107;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h060C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h060C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 c6861d08-0bb1-4520-8600-29638d507e75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 e456652a-b63d-4031-a854-93a01926addd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 2c044d82-f8af-45ca-9e27-57cee752582a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 d2931cf6-cd50-4754-97af-b08521d4b354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 8daf6f66-8bc5-46d7-89c5-8bb76fb35bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 c5b7280e-d439-48b2-a75b-3d225e8ba1c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 451faa22-3544-4dc8-8f2e-e5d5abfcbf52)");

unit.assert_eq16(16'h0108, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #263 d644ad96-8684-4e45-9373-6741f2777636)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0108;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h0AAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 ca4e3a11-2daa-4c0e-80b3-52ecec6f4271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 e9f8b47f-f01b-4a7a-8bcd-3423732b012d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 3276fc6f-41cc-4806-9ddb-38fb51423022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 f1757a86-c3b0-4813-a6fb-0db20e42c25d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 d98d1b7a-c484-4696-9e62-52b68cf88cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 74cc5277-3e6c-4b75-a11a-cc111050a491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 b8decf4c-db6e-41de-afa2-58c904697668)");

unit.assert_eq16(16'hCE7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #264 e66cf56d-f2df-48d6-bcd8-259ac58efc43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0109;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0287;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h0287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 5b196b3a-c20b-4171-aa04-2de1db6343f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 8b65a723-221b-4291-a865-2808e24a9ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 c0f67e67-1889-4460-a74b-43489c6703b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 f4b57d52-2b5f-43a0-a62c-6127a7348a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 58d5dd13-8410-4343-9d34-da4b388e1c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 dab08e3a-4dbc-4c23-a869-f257fd1048cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 630ed5a4-e55d-4a9a-989a-591bf9761524)");

unit.assert_eq16(16'h010A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #265 02b551ab-877b-434a-80a3-a43976f959d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0653;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h0653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 68b19ff4-4116-495e-9c29-72bac83171d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 27d51024-7be5-4998-ad9f-7ca035be6edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 4d4f8731-f826-483b-8d7e-f9b91ad79439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 3f22993e-6ac5-4537-8a41-5354c830f6ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 4fc2789a-3b78-4756-9690-7f4880b440db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 2775a0a7-19b1-4bd3-916f-e7a7415b612d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 c4f86f76-976c-4b5c-a88b-9888e3170148)");

unit.assert_eq16(16'h010B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #266 e534d4d0-b150-43d6-b14d-d0f24eaeb09d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h022E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h022E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 4c703099-53f2-4cce-8e42-106e7f58d1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 f3aa74a6-1a69-4a92-bed5-74d1801285ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 95c83011-b026-460a-a79e-414f23383289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 9ab5af07-f6e5-4ac1-ae47-954724619b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 2befa1bd-abff-448d-a2cc-a64b4053cb3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 2c736d4d-b90f-46b9-843f-ce4d9e28d6e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 351b0d0a-4928-47ca-bdc3-86a85d5db8b0)");

unit.assert_eq16(16'h010C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #267 e3bab50e-9931-4083-b04b-9168b41f165c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0640;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h0640, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 9297ddb7-4b33-403b-bf0f-18ca6230aef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 203240c7-c9aa-4ef3-aa1a-0a5bacfc851b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 3dbf39e3-943f-4589-bf54-8ef25bd23b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 fe07231d-527b-41ab-985b-7c0ce01cb00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 841cbb60-4e2e-426b-ad02-3f82efabd3fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 dc82e564-f68b-4258-8fec-ca80186a27c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 3f3d88bf-a43e-4a01-aa8f-2f9e16ff1946)");

unit.assert_eq16(16'h010D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #268 030a0086-001a-43c3-8333-ae110936125a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0881;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h0883, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 c68fe678-bfdd-4ec5-a0f1-de7150158f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 21218c1d-1d2e-421a-b3ca-8b1460a20ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 7961863e-125a-45dd-9f9c-cd31ec046e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 851a46f1-bbad-4628-9d45-dd06d4f27f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 a0b0aca1-3a27-4dc0-8d56-ca599ed57969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 ddb01e12-3e7c-487e-8666-8f358eafc5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 32d4c6bd-5606-436d-84be-aff31eb65ed4)");

unit.assert_eq16(16'h19E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #269 9a3e410e-23a7-43e7-b203-b56541cb497e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h0B6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 523043b2-d66a-4f50-9ada-7010c50b94fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 ccd86e6b-27ec-4638-930b-0de7fc1c22f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 a9c5fc82-9290-4d76-a0e7-abe0f1e26c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 de82a7e7-9e99-4b1d-8399-473d17052ca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 04b47968-e365-4bc4-8309-07bd66d1c19e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 0d51fb47-721a-4b66-8b82-35ac803509cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 8606c613-f9d9-4a9a-b892-7f92f959d97c)");

unit.assert_eq16(16'h010F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #270 75526834-399d-4a37-b5fa-4bb698c93bfa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h051E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 95bfec3c-7d92-44a0-a83f-b75c01e84868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 240eaedc-6c05-4fd8-8e47-4853c90fa42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 9e3adeed-bbaa-4197-9580-f79f303948b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 a34ed139-f269-430e-a36c-9cbcc7261297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 fc851442-6835-49b5-bb06-2a00c5972585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 bfca9d60-54d0-407a-aee2-dc3b097f6fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 22ebadc4-3e85-4cf7-941d-40c26af7dc37)");

unit.assert_eq16(16'h7019, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #271 50c60319-6bf7-469a-929d-76818789ac54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0110;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h0C7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 c95caba5-f5e2-40a3-a6be-ab30babbc4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 2771ebb5-3d04-4080-982c-edd0f0c8ad02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 68cbac23-a081-4926-b22f-52711371f451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 5a5e6a1f-a4c1-40d2-819f-a36a29dda5c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 8f0e0355-a4b8-430b-8cc5-64cac2805680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 8cfbb927-af5d-4e27-8506-13b3e658ce54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 12affe8a-19a5-4238-bef3-495b0ca62d85)");

unit.assert_eq16(16'hE6CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #272 178f08b1-5c39-4d85-b79b-bdc35c1deb02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0111;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h086B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h086D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 43c7a985-04dc-4be3-9565-02bb29d4a807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 14021780-aac5-4d5e-9e21-d03a42a41029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 3ccf2d51-74e7-4eff-9f30-8bf030a1cf31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 a2d5ac24-ad33-4633-970e-c5def57ee777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 c62ba734-ad9a-41df-88e2-4f03722f07f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 e00eaad2-87f4-4d17-a13e-cbb2bc939590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 a5437369-cec8-4fbb-a916-40f46fc3d79d)");

unit.assert_eq16(16'h0D75, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #273 d367238e-c208-431a-97a0-df7501e23790)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0112;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h096E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h096E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 5e6be213-5884-48ec-b38f-8ce59b030682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 c7f935a8-2146-4bc3-a055-b7af406eaf5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 a36a90d8-7d8a-44eb-afc7-c074880395eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 48fd0976-6666-4320-bba9-5c5688db4396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 0d6b858f-24aa-4b09-b401-3cfbbe16af98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 56c0b218-8904-453e-b994-46db36052a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 84f30069-7ecb-48a8-98b1-3acbccafb750)");

unit.assert_eq16(16'h0113, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #274 2eba1db8-b69e-47d7-a64a-7fcb6cf21a7c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0113;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0788;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'h0788, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 909b7371-e795-460a-8469-8e6ecac1a499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 88d31131-54bf-4887-9d97-51344f3c5f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 4c237c95-2ef4-40f9-bd0d-8daa1f4f65b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 3b4e0bc8-c94d-4809-9d42-9ff235e56fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 1bf07534-54eb-4b9a-97d2-3d0f83340de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 a49c6138-1f49-4a36-ae35-30271a6645cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 78f797c7-960e-4f70-9feb-caf8276a2473)");

unit.assert_eq16(16'h0114, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #275 7f9b6a0c-8717-4bac-a142-f9ca6b6b765b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0114;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h080F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 c7f4bc37-998a-465d-9266-81c8d6b99a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 61eb1d7f-f1b1-4d89-b650-e03b297ea3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 65749630-9090-4110-a9e0-42d2961c3f24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 ea851496-da44-4d58-a698-6cfb766863fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 3e61479a-1cba-4920-917c-98963eb39f1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 b2f67e5e-567c-445e-957f-580c874be317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 7415abf9-ccf4-48d6-9334-a7e01ab5c7da)");

unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #276 7f89994b-d882-4678-8835-4edd614a6bd0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0115;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h0B00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 97ee0bc2-5bb0-4d38-bdf2-37c57e984848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 ea9e0896-5084-4ffa-bf79-853114998ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 8729e807-76a5-48d3-b182-f4767c71d5fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 9aab6f6f-2b0b-47e2-a0df-5e1f4bf58b39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 a9074d12-69f5-4b84-b706-4b68b7ff53e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 2193a2a2-6d07-4384-8673-463e9ff6bc01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 ed4db3f3-e0c6-400f-a60f-a4688dc1a9bf)");

unit.assert_eq16(16'h0116, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #277 b5327be0-eece-4e46-ae4b-4976faea1d86)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0116;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0193;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 a890f7da-8575-49a8-93ac-0394367d9662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 b5e4d5bc-7d52-40de-a6b2-8d00730b0a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 1143bf4b-3844-4eaa-b0b5-4267d94a3fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 31233a63-60f7-45ed-8923-8a52761ff72e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 ddfc3a79-0d29-4572-9fa7-fd1101e1204b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 fd96edf9-0f04-4a02-8a5e-21ed601a8cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 2df07cbc-5940-495a-9c45-a07c75a959c8)");

unit.assert_eq16(16'h95C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #278 24c0ff3d-c812-4830-a282-181f85ee07d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0117;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h0ACE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 3ed7cb70-b21a-4c44-b16a-006205f1a42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 4b36d045-9ad1-453b-8e1d-b106d0d5e18d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 5a86ca53-8384-49d7-bd10-a76667bcee01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 b89a7052-f5c7-4a81-8d1b-5523b12a7147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 341e2838-c13b-475b-be10-d41e410c0182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 076fbe80-9317-4e16-8340-bad06c4d3c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 c7957f87-3db6-416e-906b-917441315690)");

unit.assert_eq16(16'hBFD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #279 bb80d7ea-4dae-47ff-8ab9-f66e60e34c6c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0118;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h02A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 d8a76d1e-cc69-491b-9a2a-fda86ed446bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 95cea915-8366-4d9a-945a-b5164c33a772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 fbbc1dea-5b98-4435-8b4f-85e54e4f6a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 1c6cbe03-d058-4551-882d-0643f71e0101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 a5142f0d-18c9-4132-9e96-4803aef12eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 4ec1ff30-4c39-44d0-825f-5268e356143b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 c6b255fe-f52f-4824-ab82-b66eb6e7e0a1)");

unit.assert_eq16(16'h0119, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #280 21cfb3de-a6ed-415d-b27f-71b564301077)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0119;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h0086, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 0d60bee0-d18c-4ba0-b520-8a88e8adae74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 2c8cefff-b20f-4ac3-941d-666d5ab8ebb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 1255607b-80e6-43ed-9619-b96636a1f242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 47172308-1328-4e7d-88bc-e9802a9a4c72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 49cdc5f1-f4c9-4719-a94a-ab5525960708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 e8c5f588-d894-4d63-bbb9-7d2143d8b0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 80dcfe49-b1bf-4775-8700-c373d2a0e9dc)");

unit.assert_eq16(16'h138B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #281 9c056965-2dc9-4339-876a-0b81583e473e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h0EF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 aa330383-eda1-482c-8b0b-9bef68319edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 0aacb31e-4995-49f7-aa14-0fbdda21e3b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 8d7f32b7-cac3-4061-b090-eb5cf0ae98b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 d73f2d48-6b31-419b-973c-531368fdfbd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 d8348f52-c2cc-426b-80d2-1c0678edde20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 8999a8a2-027c-4e1a-8b5f-e73f8ca2b3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 1dd9f536-5cc4-41f3-8e3c-c9d0bf3936c0)");

unit.assert_eq16(16'h011B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #282 04f4d4d8-7a91-4441-921e-a6c87ffbfe74)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h03C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 f8d41e79-7f98-43ec-a62f-51d5495a71ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 9aa3b7d3-1d1e-432b-80e0-7a649bfbe189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 4e350a5c-fea4-4056-8d86-894b8624526b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 ecb379ed-d6c0-462b-9fea-11ecfb4c99a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 27db3b38-3f08-49f6-a6aa-738c89c0c469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 228a3cfb-f630-4bc1-89ac-6bd985034d7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 74c470de-8507-4b9c-a5a7-76f1362c0866)");

unit.assert_eq16(16'h011C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #283 9dd5557a-9cf6-41d2-b4b3-034cd1a1ec6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h0BF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 79ae9d37-24ca-4d21-be47-acea5d3f481d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 faa2232f-850c-471f-ac50-ed03b7e84cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 860d50df-d003-4bad-8c28-c4b08c530982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 97bebaa3-bd7b-48ad-bec8-d05d0b7376e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 42fe3341-e0d6-4822-bd82-4130120b9993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 3636e0ee-abf9-4063-957e-7d0bc78926db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 87bf0763-32ce-4fdf-9edc-c302ea3d1193)");

unit.assert_eq16(16'h011D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #284 3ee13809-9952-426e-b097-fa8bb0a7abf7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'h0F6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 2ce63c3c-bca6-4c4d-baf5-ed3548a13cd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 35a32678-67cb-4b08-b7f7-dd418c19bdcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 5583eb18-7d0a-4d6d-9bd2-4f930c8d512e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 73422bab-ed20-4282-ac5e-b27aa9807cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 818eee19-0423-4b2f-bcda-30b726f54af2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 4de1150d-6242-4cda-9e40-afb8c7d3635b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 690e80a0-a4e3-4a4d-86c3-9ec9b4a5e613)");

unit.assert_eq16(16'hFD22, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #285 a5096b9a-91fc-4639-89ce-202c94c06b64)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h0DFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 bd6204a7-ebee-461c-a6cf-37f13a216dde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 b21fc1a8-d4de-4c26-9d6d-fadbe25480e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 97051653-8732-4f9f-9cc7-bb7a86b63f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 77aa900b-4652-49d6-8801-dd8f7d0a63d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 4065191a-890b-4b16-ad19-d782534369d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 d57b4cb5-2d59-419b-bbae-cec98a5099b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 6f81e121-ad03-4ec1-ab89-32876562a9e1)");

unit.assert_eq16(16'h011F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #286 77e94b20-2710-48ae-be0e-4605b9dda0c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h0F72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 0a0895fb-dd9a-44c6-b855-453f1e1d030d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 218e49b2-b4af-4183-a2b9-bc2c5eb9b4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 91f16afb-ff0a-4bb2-b607-43e1cf1e2d55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 a9cb047f-195b-4ea9-80ea-cc9485f54e85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 fd6de162-b5d4-43dd-96a7-dd1b363a7728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 b1ee93a7-7fe8-4b79-ab91-61b55e903029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 1cbcd169-2688-4ab8-975b-8a11ce6ba2fe)");

unit.assert_eq16(16'h9174, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #287 7b3a42d2-e284-4503-b0b9-a3386d5e1f5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0120;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h0E2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 9b5ce02a-4bfe-4efc-a463-edbbfba4eb9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 57e6b07c-2421-4624-8084-cbca88dd5976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 2392ac8b-149a-4e46-802a-11b28f66719c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 6c238e55-5674-4533-ae45-38ec63fe93de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 3f7b9b57-2337-456a-a7ee-4dbad1872826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 7b2c0cff-e77e-4862-8aa9-8a9eba155b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 c438947a-be97-4948-b1d9-1b97d2d468f0)");

unit.assert_eq16(16'h40B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #288 4710aeb0-ba99-4cf4-9df4-6401b924bdab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0121;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h01CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 15b538ae-13d6-4d6c-b46b-7a86b21cd721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 555fe634-6f47-454a-afe2-0b1a16b8312d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 f0f71ca8-729c-4ee7-a140-ca77be663fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 68a01009-5336-43d7-8ffc-9742a19b1e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 146244eb-6f78-4f0a-8dd0-516d6f9d8c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 2b4b5e0e-3e4c-440e-9f9b-e13249893397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 4b89fb72-39fd-49a8-9cf4-852e8af7303b)");

unit.assert_eq16(16'h4025, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #289 671074e0-b667-4786-ba89-df773e329b07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0122;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h0CA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 f0f10209-5e6b-4212-beee-7017eb929571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 84e66fb8-af10-4263-b386-f8c4042af69a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 b48a47dc-bcb3-4a94-bb59-75f9f54522af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 e5de8f6d-49a8-431d-8d76-982d36e1ef0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 34ae1ee0-41d4-41e3-b787-758975304be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 b6f1310a-2bf6-4ab2-9f83-7ce84e56136d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 32e2fa01-314b-4116-849b-dbd3032203b0)");

unit.assert_eq16(16'h0123, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #290 c4dffbc3-73da-488a-84f3-7f3a857efa2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0123;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h06A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 224b9b6c-ab0a-4712-b9ab-94058136c8c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 4cbfcab7-0e7c-4636-99d7-98c19ece8e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 9dcb79a2-7450-48b4-b408-a3bf8ee76322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 5f955ba7-d38e-4410-b58c-8c654027b06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 50db1065-05a6-4bab-9ca5-604034827f62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 aa5375b1-76d9-4cbb-9af7-3cdc2e62ee05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 4539f28c-bd82-4b84-bcfb-ff14f4f5018d)");

unit.assert_eq16(16'h1B9E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #291 44da9d62-8da4-4267-a2bf-045bf70d74c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0124;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 5b216c4e-45d5-46b8-aaeb-c35f373aa859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 15aa7c38-cf7b-4c01-9b69-d4538914ac00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 32181105-4113-433e-916e-5b80dc7d8703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 5b01ff3e-7c55-4380-b8a2-e129f180bb46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 4f2d7777-658f-4569-b8dd-b1b54c829487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 8077ea3c-96ad-4307-b519-2b9db337d419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 69d64c2c-016b-4142-8097-707a4242ab20)");

unit.assert_eq16(16'h81AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #292 024d5e4f-ce02-440f-9d5d-682270815293)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0125;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h017C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h017E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 3bc27d44-8926-4341-8846-f3eb02097bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 4658be11-47f1-4dc5-bcb2-ee805858e046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 cb177911-d768-448a-935e-8a211cda01a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 5b21ff8e-331b-4f7d-a40c-b001e0a5a8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 c9987e8a-07f1-4b4f-958a-8dd84f8c27e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 a6a15951-fcc6-4e68-b786-dd58c761ac11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 4340cab0-e855-4bfe-9ef4-c487b8f88c9f)");

unit.assert_eq16(16'hFBF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #293 d9083599-b871-44c6-acb3-810d986596fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0126;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h0A9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 dec14775-2f88-4a5b-bdee-ff776fae4c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 9fbc11ef-2865-49eb-abf3-4209c8891db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 f8ec3e14-7e3c-4c98-8b98-3a788c18843b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 a41cab3b-f62d-4039-9eca-bc312b11368d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 87e73b62-14fc-49da-897e-399108e4f4d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 641ed2a0-d31c-4aa7-9216-13ec61edbb8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 716c0652-10aa-4630-8360-d43f944d4c01)");

unit.assert_eq16(16'h0127, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #294 4f698d05-8757-4407-bf8d-72b7fbc22d0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0127;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h0A13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 f6b44fde-ab52-4772-bfe5-32a4dfa3544e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 ba6242aa-809f-4010-94c1-56609fd2a725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 9eca8199-c4f1-4e71-973b-315c19367a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 7679ab49-3f53-4cb2-81f9-62e494cee49a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 33ff6b59-bb06-44b4-a888-1a73c0cbe4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 5104fee9-6e12-4604-9707-d767039a380e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 b41e6a68-7233-40c1-871c-58b9796c8b21)");

unit.assert_eq16(16'h0128, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #295 de0d97a5-75db-4d65-ad6b-7a942820e958)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0128;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0759;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h0759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 15d7fd75-b173-4b09-8e13-a2570f43976a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 2a167ac6-64a2-49f2-8700-d86a390c24f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 53f854e5-e253-43c3-b702-941b188f7443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 e220cc13-b9b6-4e7e-aef4-61c2b15170b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 ba872746-15bc-452e-9631-58237a3c1fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 f269b859-12a3-4925-a68a-03ef49b07d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 38ab5a9f-bc65-48de-9c6a-f9d96b5af4cd)");

unit.assert_eq16(16'h0129, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #296 14f8562e-7668-4da6-adc7-001058854d50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0129;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h0C56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 3e9f1427-b6c8-46c6-b094-9b56f4da2563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 21e7cda6-f504-4fc9-8da2-6ce044b676be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 3451f07e-a6f8-462d-b907-5d751d6c67d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 5a9ce824-43eb-4cf2-8d69-b5c54f22c829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 6e79b92d-f68c-40ce-8622-af0c3be86cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 fb44716e-74db-4381-9231-0093110e81f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 679e6a9e-9036-4c0c-8a4f-968b9c7429d2)");

unit.assert_eq16(16'h012A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #297 26d29b82-2cf6-4b40-bf91-12da79a605dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0455;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h0455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 66900541-c6a6-442e-9e80-c944c7bec807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 cef66d31-46df-4d0a-a512-f1d621ac67e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 4dd512e2-df7f-410e-8d83-4269f8f8ba34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 e32d6b28-20a4-45c0-bafc-a60b8ae404e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 d234bfe1-328e-41c3-81a5-8e4212cd0f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 412478d7-62ba-4133-918d-17a52730a96e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 61b3ebfa-b632-4d5e-aa70-9ad89a357303)");

unit.assert_eq16(16'h012B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #298 2adeee59-54fa-49fe-96bc-a2ce7441e355)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0400;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 2f7ded76-665f-45c4-9692-6c69fe9aba7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 abe7846f-679c-4206-a196-87c6371a8602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 1d32c701-b7e2-4c6d-9927-147e4d69654c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 cf077366-3b7c-478f-8db0-b5f566cc5dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 2c762f89-a795-4267-901e-4193b29120a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 a8bfe3e2-479c-419d-a15f-2d14b1048a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 eb4859a2-bdda-4039-b7bf-9058255bcd3b)");

unit.assert_eq16(16'h012C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #299 8cb72784-796b-473e-b93a-fc91720dd3b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h09DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 05a76768-98ed-4513-975a-2d4b3daa1947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 14950295-fed0-4d77-9890-71aea2f541df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 7c4bb47b-4891-4311-b036-1bf3ee3145f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 e6b042f3-81b0-4496-aafa-227830ff555f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 b40a2cf8-8861-48c4-a5b0-3ce373f0dcf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 6288458f-b071-4d12-a6f1-82716cd55297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 a5002859-e69a-42fc-9541-2310b97156a0)");

unit.assert_eq16(16'hDEB8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #300 0986ad90-962b-4363-95f5-ffa6c20ff371)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 e34050ca-7130-408e-8238-c7ab9d612ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 b7b87963-00c6-4fe8-b2ae-114c415e3bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 5cd8660e-8f54-499d-8100-72ff60181a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 f441a3d5-4a1a-4ba9-8740-77cb2da56968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 2b33b5d7-1138-4339-9b1e-c273a5040776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 58ac321e-2eac-4dc6-b44c-6f1d7ef29b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 85908955-d536-4372-b113-0785637a674b)");

unit.assert_eq16(16'h1A76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #301 3d15e15f-3fe8-4cf2-83eb-bfe370b4830b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h08FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 e4f0385b-30d2-41ee-8c16-6e5288054583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 139edd02-29c0-4001-a4f8-1ec11e508f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 abbef696-2f40-408e-8265-3caaa1dd5f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 90d5f9cb-d3dd-4b44-a564-48da763aaebd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 5a5fda41-3cc2-446a-8b06-c865ad93deee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 d0ac807d-212d-4f86-8dd6-bf03af607cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 e98c604a-16c3-4abb-978c-1066d9465560)");

unit.assert_eq16(16'h46D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #302 16214c2c-4faf-4cd5-8694-ca23107d27e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h0470, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 c5f90c67-2134-4ec5-9a6b-c91bd1d6e96c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 a98ed774-bff6-4cc8-812f-d548aaa79db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 ad42398c-c8fa-4f7d-990c-3e98773b4741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 aae2223c-2b62-4afe-b67b-ed867c9d96ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 34ac4141-517b-42a4-bacd-ba89fa68fe75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 a360dfe4-dcdd-4a97-897d-7059e69cc7b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 7e5fa98c-d7b7-44db-aafc-8dada2bce67a)");

unit.assert_eq16(16'h705C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #303 f82c6b7b-facc-4346-9ad6-cba9d4ec74c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0130;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0887;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h0887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 523bec63-de5c-4b3b-86b0-8751e034916c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 06822308-6a65-48d5-b0f8-c67c521942f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 ffb8fc1a-f894-468c-a9a7-19d8d58b968c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 d9c21cfb-b003-4035-b696-bc723e6fb142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 efcc7917-3254-4522-ade7-0bc52f7f24ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 85b956cd-bb66-4c3a-9ddf-bb8bf32ffc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 19f03404-1db0-4123-9920-24842d2136ef)");

unit.assert_eq16(16'h0131, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #304 b221ac78-91de-4dfc-9979-25f06388c3f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0131;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0932;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h0932, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 8933538e-8551-495a-afb9-6ee2f1618aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 e7aea72f-371f-488d-99a4-bf4c42a025b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 ba92bee3-55d0-4c52-9044-a4a7d3970928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 80f0bd16-1b16-44ea-bb28-3ecc882f2f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 34fc1062-e9d3-4fc7-b564-5c7280acb417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 e62ab056-b4d5-4960-a799-850be4b74f9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 2fddb237-5bfd-4ff6-87a7-36aad323cd99)");

unit.assert_eq16(16'h0132, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #305 ba922482-036b-45d6-82f9-60ccf6d52797)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0132;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h00BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 06d32aaf-9628-4279-8a68-111ed5fedeeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 5d41ca63-b36e-4a3f-98a7-8500796b3db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 236beb94-74d1-4a28-8c01-206a21e36985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 200918ec-383a-440c-8139-d4977e7317b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 786342cf-ef36-4565-93db-771f9d50ff50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 1a29db74-c4ef-4997-abeb-6755be3b445d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 5567beec-62d6-4dad-889f-7482c60bb720)");

unit.assert_eq16(16'h0133, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #306 633cf959-075f-4ec3-a4c1-9901f8c3f544)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0133;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h01F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 e1695182-fbad-4cf9-a15b-48d98fd5c665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 2572e82c-54b1-4c22-9ecc-e7532851cd09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 f89c7b56-17b1-44c8-af3d-932e5b845fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 c3407bc6-9ef8-425f-bf06-d7133da57fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 54c93082-cc2a-4967-b550-d277376e461f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 c419b261-3aff-46aa-9399-2a3d343e2983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 3bd62433-c11f-41d0-b0b8-e5520593e1cc)");

unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #307 f7614260-74ab-4cf0-a314-5748a54d2a51)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0134;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h020D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 689e60fc-a469-428c-a8b1-296d78a16ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 8d75c280-2f40-448a-a0a6-487f21048b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 e23861ae-2fb1-41ee-81a6-fc44e0b934f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 9f088fba-72ac-4ccc-8834-33be2dec4138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 9d5b7440-59d9-4810-99d7-b0e4667766df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 bc03dea9-70ef-4fe6-88f7-c1ab64ebe90e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 0303cec6-8bcb-4474-91a1-64f7151aec19)");

unit.assert_eq16(16'h0135, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #308 95957e5c-9980-4d4c-96d6-07a2e5a84743)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0135;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h0D65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 6d2d4a0d-2bab-4e0f-b70d-42f5d8d6d100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 e7d77c73-cfa6-4f18-855a-3a5f7b71f1bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 6ad40023-82f4-4f53-87e7-ec37ec42c5a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 9d46f1ef-1303-4ed1-8727-ae9cfd92425d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 976469f5-47ce-42e0-88ab-d7b5d271f1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 4de6e5eb-2aa3-4602-814a-21dca4ab5af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 07001540-5f8b-4098-974a-db90c06e89af)");

unit.assert_eq16(16'h888F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #309 e34f2b57-0958-44ef-affc-187db9d8efd4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0136;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h0C83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 c6c545e3-ef18-4a99-9748-423aeac20b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 c68605f9-ca60-43e1-a974-dff72a457c1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 ccdf59a2-ee75-438e-b9a8-e93cd4b09510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 e2cd73cc-7a9f-45ba-b656-390e770fcfa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 30a4989d-7f1e-4628-9878-630b64793948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 628d0135-9220-4083-b2f2-ce28bf852f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 0cad50da-3528-4a0d-931e-4101b1b248e1)");

unit.assert_eq16(16'h0137, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #310 cc05e138-f9b3-4f32-afc7-1332578a9334)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0137;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h0D70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 fcffacac-0b69-4de0-bbec-053388151d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 a3ead945-98c2-4bdd-9178-c267cffdedaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 f7608008-066b-43f4-a20f-256c92b95525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 c55d0c34-e023-4993-919a-53cab46fcd01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 05913e7f-424d-4d3d-95ad-4329b5dc4d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 9a155467-c70b-4747-ab49-0c0da472cffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 48089d85-17f6-4495-b5d3-3859822c4b22)");

unit.assert_eq16(16'h4448, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #311 ecbcea7d-0ebf-4c4d-8bb5-9d81b3ad8e78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0138;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 c7002635-c989-48a0-b02c-beda6c901eaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 3549a7e8-b692-4d5b-ae71-7f076a89257d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 f4b9d63f-04ab-446c-9687-151e8493a075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 cd4562b3-0d8a-4260-9898-8e348dea6f40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 c1faa401-aa8c-474f-a9ef-bdf33d92c445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 2d64a9d0-7d8e-45d4-9056-0ef2ba2f2bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 e3357792-e584-4a1f-bd18-d2d2e75f9f95)");

unit.assert_eq16(16'h9B7E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #312 a12baca3-6c1c-425e-a423-b22e304ee2f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0139;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h0BDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 834a5ab8-fab5-4ee1-8ad5-ccfd353b72a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 90d4ba5b-3ee5-4c92-aab7-ad9cb5a4e5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 ffc8f2a8-5bc8-4db6-9e61-c40b95e4f386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 d342ad93-8ed6-489f-918c-4214cdec1af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 119987df-8d39-4d55-8202-181ba6cadecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 1ecd907a-2fc1-4384-b5dc-47593a8854d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 eba2e84f-2483-43d3-8a13-550c3b741310)");

unit.assert_eq16(16'hB22E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #313 f9192628-d7b4-4a43-b7e0-1e8419b83ac0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 237d095d-9088-4ddd-9de1-23ea1bac34a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 5acdc9f0-52e3-4b82-a656-460e0db59182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 47f0a576-6793-495b-8a1f-09b79fd5d32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 edddc1ca-ae0e-4e54-abdd-9a01054157e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 3c0d553f-e724-45bf-9647-680211a37c4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 492696fa-1871-4bf8-a6b9-053b87b55e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 5e528f33-3509-4a7b-a888-7696a85df142)");

unit.assert_eq16(16'h013B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #314 d801d830-caa8-4783-966c-f2433c49db23)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h0BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 c5603aeb-7c97-4f17-a1ce-657c471479ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 a7da8fce-74fa-41f5-bd75-ed1848713219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 ad6cd46d-ec28-4e64-8a17-32e669b60d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 f7abb2ec-37a0-4d8e-836f-1795339b0fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 2f3d239e-7488-416e-9fd9-908be32c434f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 36049077-190a-41b1-b0d0-5f31fdda40f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 83c53bed-3760-48f4-86f1-93d9b3e2f4ab)");

unit.assert_eq16(16'hCEE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #315 a86ab923-2934-4ba9-8fae-e2502ca8f28b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'h0406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 21b30e8b-f035-40dd-8524-6d118dfd21bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 6953ad6e-8ea4-406b-bef5-cf488086c63a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 eb79271e-b511-4fa9-a534-c981c133ebb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 2996c44e-15de-46ac-857c-57460ac09bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 df8ce143-2b91-478d-b6a7-d39230783ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 c0acb58d-7c4a-4856-9506-bb5b53f68f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 68a7ee17-eaed-4f7d-b76c-ca688501bb5f)");

unit.assert_eq16(16'h013D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #316 a52de5f1-a927-439c-9119-14c3407bb0ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h046A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 69671a56-6e8f-4abc-b1f4-08aa2944da71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 337c903c-5f12-420a-9941-686e72166a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 8fc3d56a-bdbb-4218-9657-6b9750c6930a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 8c28f1dd-bfdd-4bb0-a570-fc11c03171f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 c938d6c0-2744-4bbe-80e6-9c5ad21abcd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 866d2baa-18d7-4d1e-acbf-e89ab6e19586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 49586044-cad2-4601-aabe-037b1bd86b59)");

unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #317 96ed9e27-3a05-45ae-bb99-801368bb51dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0749;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h0749, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 743b2305-1755-48da-bba4-6f2518fa8593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 4bb272d2-495f-457a-a060-c3f759bed836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 9a102ba9-d36b-448e-ac50-1ba12469a0d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 56678216-c023-4041-84c4-27137399ec40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 8fe2c7e8-2268-4957-b71c-2d84bf8a55cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 1bc582cb-345b-4a9e-9478-4c86543ba1dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 73dd55dc-d2e0-4202-9ece-f95621d6ad74)");

unit.assert_eq16(16'h013F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #318 e594da67-b07a-4634-b999-285fb68cfa31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h0A10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 b584db94-a07a-42ce-bdd8-9e016d119fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 6e7ef140-3155-42ed-a72c-288fd903bf2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 09a8a248-917c-4b94-a520-89cc768f745e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 b3351bfc-610d-4f0f-b26b-64253f57d652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 b2f820e9-8777-4d90-b60b-610d5e3589c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 aa150287-5636-4b5f-be49-5d2f5dd2109d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 8aa7bd17-13a2-47eb-ac7b-41dcfa3093d0)");

unit.assert_eq16(16'h44DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #319 4c0896e8-bb77-4e8b-90cb-927a5dd98f1a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0140;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h0A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 4cfd8bce-4472-4003-ae14-591e79721519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 0f34603e-f7d5-4b89-ab45-8f820a400aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 7656e9bd-c8f0-42f5-ab41-d132c65dc490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 d574d6f2-595c-49c5-b0b6-82ca1bd57d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 e881cef7-fb98-4a99-af43-9c84f66937a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 b44186f9-1e86-4f41-9a18-f38313a4b7c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 1d4ad5a7-792c-4953-80a8-b41d0dd0867f)");

unit.assert_eq16(16'h42B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #320 51228fa7-8fc4-4e28-a897-55a0576f721f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0141;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0639;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h0639, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 e2d47fac-ec8f-48ef-b04b-c95d50fcfa85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 6adb035f-e553-4b34-ae36-bcbc454d5b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 6f13f3b3-8e5d-4dc9-972f-8260abd21979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 2b959f03-95b9-44ab-987e-efd8c2559329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 f5a8cd5f-1bb5-4f0d-848b-adb041015d33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 d066cd54-daa5-4d5a-ac66-fd1446c2acaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 216384f2-38cf-4bea-aa2d-e621d150dd91)");

unit.assert_eq16(16'h0142, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #321 19285296-37f6-4a73-a6f2-3f2051db29ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0142;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h05FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 19c5ceb4-435d-4e5b-a9e7-b9a4993d5f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 2df3918c-1963-42ad-b3b5-65913b60e0cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 258bb05b-51c6-4883-9512-4d436bba602f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 99ca7a4c-0b53-48df-ab1e-12b3726e6537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 27c971c6-9846-42a0-83ac-77dd4db62a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 e125712b-4e1f-45dd-861b-13506b282ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 8386b6f3-8449-413f-a526-d7abbccbbbac)");

unit.assert_eq16(16'h307C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #322 175d7705-029a-4cc2-92b6-24df525b2978)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0143;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 e62eacd0-ba10-4696-b3bf-5173203b9729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 9a86523c-1551-4378-8455-679756378a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 673d3832-fc5e-47e0-90f3-48c7adfc2c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 00b606cd-4206-4ed4-bc6a-b23d23ccab22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 fbd702a1-854e-4ba1-8422-a89c02bcd0db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 d4500a48-eeeb-4b97-89f3-287bfca9d3c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 002d2c77-6c47-4e77-b7d5-3d5882575743)");

unit.assert_eq16(16'h0144, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #323 f9df26fa-1253-48ad-8b6c-244f903b2fbd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0144;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h0F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 99a183ce-f2c9-4577-8cbf-19ef9bbb03dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 2d92c557-1d9f-4370-928e-bcc55feb4ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 f924d677-e231-453a-b8a5-e4c5ca30cd47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 df2f296c-f45c-4fcd-9200-f5cad670a0e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 ce6b97b3-807e-44b5-839f-72d018d222bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 d2269dfc-2f37-4039-a7e0-a1ffdbb1a48b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 5d80fcd4-358e-48ce-9b62-7c35075cc023)");

unit.assert_eq16(16'h0145, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #324 818f0d43-3741-43d3-883b-69bfe086eeae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0145;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h07DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 44fa3b61-db24-4dd0-bd25-4542e0d07cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 b5ed3066-39c5-4b87-8dd1-6c05e7fece4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 fd5b2db1-e157-4ce2-8b64-5c88c7e421a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 0e7aaff2-d928-4890-a072-422a52e56cb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 b3a821ed-b53a-4e6b-b306-e3571b52bb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 74606766-fbb4-4af7-a0f5-5db0539c003c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 fbd15ea2-a1a8-4e1e-9e0e-2968d28b77ad)");

unit.assert_eq16(16'h0146, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #325 aec4b729-93d0-40d3-ba6e-a2311fa948b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0146;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h0C96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 edf95f9e-5b2f-4351-b586-a68e40384521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 71fba12a-3880-4766-8e3f-6228dd7b64f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 e4ddcc3a-ca3c-46c5-8a8f-4361f99b26e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 9a9b2242-4087-40d6-a14f-6d7a174f612c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 257eef82-f3fe-47e6-8be2-015fa6b3e9f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 68e60143-d04b-406d-93bd-1c08b3cffc43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 fa969bc9-bd00-438b-b924-973542accda3)");

unit.assert_eq16(16'h0147, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #326 bfab5e9b-8768-4d59-8d21-8e715ded63c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0147;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h0DB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 735ce609-79f3-4252-9e97-a4cd753b41ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 78252440-a255-4ee0-b51b-3f68ea281253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 657e1bf3-76a3-47fe-8bda-13847222c806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 40f7957a-2cf0-41b1-bf49-41d01828862d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 cab0f194-3529-4f0b-a80c-8280b5712953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 6b7e72c1-f6bd-4283-8a52-2028a0657d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 b6420e96-f71c-405a-bc3c-5ccd7ad22ace)");

unit.assert_eq16(16'h0148, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #327 1237db5d-6155-4c76-99f4-d58a7bfca0ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0148;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 1f1a0d2d-3055-4216-bf24-0195d435e201)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 359bdd77-48ef-4ca1-aed7-5c3a5476b330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 4d7e08f1-01df-49a3-b00a-df11710014a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 07796281-422f-45e7-9015-448408500322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 b2314f28-5f02-4411-bde8-3372fb5eb890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 00565537-94df-4300-846a-b92365640177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 8931f98f-373b-43f2-a7e7-b780075e808a)");

unit.assert_eq16(16'h0149, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #328 55153217-027f-41af-8fea-f4166cb43c42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0149;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h093C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 90f494a9-9bcb-497e-ac4b-02c63bec0001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 7b653ff8-ae90-4548-9b40-8eef2a50752d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 59657196-2fc8-4f03-8456-ba8899f31a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 355fb312-a46a-425f-9447-cc673f2bb75f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 d3464928-2a71-4a09-b7ee-6a3ae7ff7cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 b6c64de9-65a2-4a8d-b273-2d7ef397b57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 70d17df8-83ee-4850-93bb-861bd9a7fcc6)");

unit.assert_eq16(16'h3300, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #329 03782d7f-627b-476f-87b6-d9ff56190624)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h0B23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 08c4c802-fa8e-4b74-86b7-ab48ef36e78d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 9a7030b4-72b3-42dc-91a0-8f3f9dc85069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 e2b1f491-c812-49a4-ade2-c612dc9f7e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 f59d2f78-6fd3-4017-8a9a-b5b89c7b6a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 7888f52a-45f8-426c-8ca0-ce6e68dfe995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 e7de76bd-73a8-454e-8d34-7ab56b8de927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 cb73a9e0-1f4b-41c8-9d51-c7b85638cecf)");

unit.assert_eq16(16'h014B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #330 54eada67-6443-4418-a0ac-e72591619f33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h0D00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 40cf72bb-40a9-44dd-a885-3cd42ca0ef7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 a76e5c70-5df8-4753-9c63-97d952d54c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 488103e9-3feb-4a53-96cc-61b50279d96c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 6a70c55d-4c72-4eaa-abbb-2e5860cf9bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 8c273aef-4192-4b8d-b8ae-7f787a7378b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 ae8ec928-989b-4d23-bc99-06d5f4c40e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 ab6e6f86-e3f2-463d-8d51-0f41de07dec1)");

unit.assert_eq16(16'hFE9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #331 73981eca-e12d-4b28-916b-53915e1eb03f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0247;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h0247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 e3c03cc1-67a4-4a34-aaef-ca84a4db1189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 ad22297e-d731-4db2-adb4-b90970220bd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 05c61e61-f67a-4aa7-8a91-f6d501fb1e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 1eea2fc6-7d42-4cf2-b664-239abb675ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 ff26144a-342c-4f7d-afa6-de1d269b4f26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 c074b082-309e-41c0-83ca-99d2d2844233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 6b7fe656-ce51-4da2-ba5b-8efdb5d1a859)");

unit.assert_eq16(16'h014D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #332 75c06563-d0f0-44fd-a79d-2b199a2c0cb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h01F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 19567c8a-071f-41da-a133-eb5b71d1ed97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 94f9f8f1-fd6e-4d9c-9ad0-6dfc24d9a5c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 91ef8605-7d15-45c0-bc8f-889f7885ed12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 6e1e980c-f6fc-40f4-b5f5-ee246e58b992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 57634bd9-876d-4f51-bcf9-20e0ae9e7e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 4c551a9d-8a61-4e94-88db-003f20bb29b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 7379c852-35db-4f9d-8fef-bb76c3e5b1cd)");

unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #333 f7e17e71-f9c7-414d-ad66-1262426fd853)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h00B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 990736a6-f207-4034-b7e0-c2bfe5004cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 b1d527fc-a015-4039-8885-f60468cf8b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 1d50ff95-6c1b-4d0e-bde0-835f9bb31d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 5621d7e4-350e-447c-bd06-558ecbf1eb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 194780a9-cc35-488c-89ee-8ae34723993a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 ba507287-b4d2-4ad5-b180-7413d67c47a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 eeb434e0-5d22-4781-99a9-334d675757ef)");

unit.assert_eq16(16'h24B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #334 df415d89-ee6a-4173-8e0a-442ad111f04f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h078E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 c441b950-fd5b-462c-9d0e-3cab2ce979d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 9600d977-93ee-4bfa-890c-d54f605d5912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 90b5b507-d80a-4347-8370-d87d43ba5db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 a5cabbff-2ca9-43df-ae89-7213b8e5a77f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 425a5f8f-6fd8-42a7-8c2f-3fad2946944f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 cc41d59d-2eba-49d7-b60e-a91a5dcba997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 413d4b94-7ac7-44c4-8742-037e6c2ec61f)");

unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #335 7b47953b-e49b-4f62-85bf-7fa1d6ddec52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0150;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h01E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 0b1aec37-de7c-4f60-b9f8-3a8064a094a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 b1ed55f8-0bef-4862-a0c8-ad7e031d92c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 f395f6c5-b3f1-474e-b864-e10b1dd356d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 cc634a84-a0c6-43dc-bec8-f9405f335398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 370f434c-9d5d-4311-ab29-d14c6787c215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 a71ec79f-225f-4949-b6a0-44ca431972f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 16658330-603a-4c8c-abad-1d331da731db)");

unit.assert_eq16(16'h0151, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #336 52a25d6a-1c36-4f5c-8a3c-6b1ff88199d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0151;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0325;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h0325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 f8b4333c-a296-41ac-a9a9-b4f8c1b232e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 77f276c7-c84d-43d6-9b9e-738ddc57b9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 d6f4e9e4-1552-4e45-93cc-29efbe7d26b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 fe762c1e-3312-4d9c-b9ff-ea840ec1cbcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 e74214a0-d85f-4158-b677-2832118f75c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 a963e5fc-7910-48d8-a80c-5d205a0cabdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 7b712ee3-e9f2-4838-a1ad-7eae5dfadfbd)");

unit.assert_eq16(16'h0152, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #337 69b514dd-1dc4-424b-b1e0-60b1dbe9fda0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0152;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h0DA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 7f867d8a-bfe1-45d6-b2dd-29ce70b3e4bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 322450af-b22d-4122-b5e2-5e7bb2560792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 148d0d87-cc3d-456e-b182-6a4db1bcece8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 f3c0c991-e53a-486e-9e5a-b16708d64fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 c78c75da-82a1-4c96-86e7-590336b43946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 47c2a376-8838-4367-b721-94ef48e4680f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 8bfaae01-7e71-47a7-ab9a-532c5b07d651)");

unit.assert_eq16(16'h0CC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #338 270630cd-1b90-4de3-a5c7-371ffec8530f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0153;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0395;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h0395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 5a65087f-c680-48c8-b420-f871590a4538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 1b8ff2b4-ed12-4c56-805c-4d975823743e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 fc2fdd37-b827-4b54-83bc-27316e5afb88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 3054155b-9d43-43fe-8d63-5c21c0338405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 8ae8cbe3-e1a1-4630-805f-b16c13796f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 d39cf981-2c84-4893-b96e-13be92b29f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 5ce4bed6-28c5-4c0b-8be2-2bb2f75bb8da)");

unit.assert_eq16(16'h0154, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #339 3925da6e-742a-418e-913f-e4d9879da28a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0154;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h0FDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 a5d2bfa9-7428-4f47-8511-dee5d81fccdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 b02628cd-e791-4d4e-b193-03835e607997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 50b1c739-f336-41b2-9848-087f365ecfb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 2f19052c-b8de-4a3b-9e8e-68fcf288b468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 0866ff17-a8b3-4e3e-b2b6-fc902addd69a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 f68ec448-f6a6-4cc5-9fbb-7df8c3339fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 bc487d66-dda1-40a1-9409-0a31682c151a)");

unit.assert_eq16(16'hEBA4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #340 b95e8fa6-dd37-4669-899f-c18f975b7f63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0155;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h0D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 377ac6ab-b694-4968-aa02-435c7d501b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 7da7e047-ce55-408e-9e02-5375cd128610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 322a580e-82e1-4bfe-ae58-c69acf99c5b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 a00050f8-bd82-4d48-a80a-7d5f9b7f9d39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 f19fe7cf-bc29-4a1c-b8ae-1194dbbcb68c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 d3c09bc1-7fb5-4021-b4bf-d4c61dfd00a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 64124faa-52eb-462a-9434-ae181af49bea)");

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #341 8deedc0a-5e6b-42f6-9cf0-7f4a3227935e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0156;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h0E1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 060332e5-52a5-4316-924f-84b5bb626c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 0113b184-077c-4c6f-9faf-928c5d6d9b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 fd21117e-8005-4868-8065-e72958e685b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 2067b123-061a-4e1f-813f-29e017ef3d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 e561aef7-0ffc-44d6-a016-bdfc4dcc69ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 05e03459-87b1-427c-b4d4-bfd21d28b9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 7db3d0a4-0d74-4afb-9fec-b0fafd802e46)");

unit.assert_eq16(16'h9DA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #342 5a31e1f7-b240-4e3d-9899-0bbf21b66376)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0157;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h0E52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 d5fe8fff-8f56-4107-9009-e73de054e329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 06383778-fae2-4045-a38e-01ad5b560439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 34664386-22c9-4162-9a58-d6ba988d79c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 3dc65a0c-81ba-4591-a6e6-c8d8b7fbaf8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 bb9758ea-f966-45de-ad55-67fa1cc68838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 e7ba8ab5-e70f-4fe2-8184-4cc23f9d0bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 ca7638ff-e769-42bb-af92-af7c1df3dec4)");

unit.assert_eq16(16'h0158, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #343 69ab1397-a5b0-4b19-8660-e3859bafa732)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0158;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0936;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h0938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 31a57d6e-9abb-4823-9c98-45205be74b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 dc75e383-9e6d-4ebe-97f5-cdcc07b974c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 dbcce294-6be2-41a6-861a-5d7c78bf28a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 33064b62-660a-4949-855c-356a94bce162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 9181e5db-7c46-4fff-ba6d-1f590d5c3f5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 58fff0f7-a708-4f36-be7d-7dca97702f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 a28417fe-252c-4463-b96c-0ff851f2dc70)");

unit.assert_eq16(16'hD164, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #344 6c88f6c2-e03a-4838-ae7a-68d3af9fba71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0159;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h066B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h066D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 cdd877a8-8a19-4580-ad3b-e1595cda02d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 ab92b979-64f6-4594-a2bc-2396cc8c1aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 b257b570-b4b2-4cdb-877b-21cf49972156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 bf68788e-4bc7-422e-acf6-91865deae25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 0c6812f5-896a-4a23-b6fc-f41b13ec876e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 d237de62-8732-4051-881e-1253b7bf32ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 81430ab3-1fe7-47a1-832a-a0e69fcca9cc)");

unit.assert_eq16(16'h800E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #345 85d006d1-4a01-4c88-9b73-29b3bb1f4738)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 364b9714-c46a-449d-a9fd-939507565ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 c1ed6876-aa5a-487b-9c4e-ab7cdd708d57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 97de21b0-d147-43a4-96ae-3d33fe2a976b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 05778886-ff40-40fa-a6fd-2c8be5816c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 e9e57625-5382-4cce-9731-c7ea4f65ef03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 78f4f5ea-930a-4bff-98ac-238ba640ffc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 e036493b-1db0-4243-8433-e779abe62f33)");

unit.assert_eq16(16'h8D08, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #346 b95e192e-3d21-4443-b151-d8a1ef42d661)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h0B6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 77a67ba5-5917-4a7e-9da0-5943725ce37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 3d2b9c7d-5995-4dec-9cba-c88354aa1f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 6ca8a776-54f7-4faf-b833-d91b8df4f3bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 fb10adb2-6a0b-40a9-9ec4-bcd8c7dae481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 d3ea64b4-2b39-4416-8675-c71ecb77f916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 1cc54c83-b2ca-4161-97be-b9fa1112bf51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 aba92ed2-b27c-46f7-89e2-4a27e28440f1)");

unit.assert_eq16(16'h015C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #347 a4231731-95a0-4d48-bd16-41f2faa0ac67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'h0E44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 25966177-31c6-4e48-b531-b1c07614e689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 4cc6770e-28a6-4484-bc34-9cc986efe79f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 4f8dbfa5-82c1-4de4-a27b-89201c356c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 14fc90c8-75b4-4868-87fe-a95c41ccbb68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 0888f4e4-14c8-4ed7-8ec1-59e9b746bb38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 8f1d2d11-c37a-42b2-882d-a5ca1e29259d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 e348faef-841f-4735-9214-bc523eb976b1)");

unit.assert_eq16(16'h14E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #348 32290bf0-dc20-4dfa-9595-25b9c505cdc4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0803;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h0803, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 0aa72858-05c4-4e9b-a9ad-19a98c29cccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 dd99cb48-fba4-4064-983d-efd5ba00d1eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 9b542e4d-038d-4172-9a3d-bbf475a0d245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 cecba6cf-3547-46c9-a8d9-32c07e82fdde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 afef795e-7521-41f6-b76c-afc95d950f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 aea6e870-2ce0-4c7b-b60f-283acf9e2b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 5ac58cd3-985a-462f-9467-78341bf2f493)");

unit.assert_eq16(16'h015E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #349 bc6d82d5-3775-4156-999f-36e093267961)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0168;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 467dd5fe-605f-4021-bd03-a611394a5411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 bd6333ff-e777-4d13-afcd-dfb4b386506c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 8aaef7ac-8099-4699-98bf-e865bf60529f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 2dc7ec75-a40d-4b5d-aa67-f543cc5f8585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 37491756-f886-4544-aa1e-f3971482ef7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 d8681f2f-8e66-4cbb-b4f7-8cb9ab520931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 b4a88bc4-f57a-4957-84c5-574ab6dae6cb)");

unit.assert_eq16(16'h093B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #350 f525e6aa-9950-4489-b08a-929747100db2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h063D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 befa7277-7922-4c13-8e3c-0b534ceac330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 08987e9f-4903-4731-ae1d-a2f582b0bcf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 b087f860-35f8-4d07-b579-cfe9b51d54e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 c8b7e0ae-76fd-4101-84d5-9b8d94029314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 0186208c-91f6-4482-94f4-5078b9aa8d81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 0b5a63fb-5739-446a-abc6-53b0ff879473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 0a4b4795-aad2-47b1-8152-87f778ea0cd5)");

unit.assert_eq16(16'hAE8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #351 77541b26-9617-467c-948b-59e2ea30b924)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0160;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0491;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h0493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 65463aed-5f18-419e-8703-1fbe7ce0e2f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 2dc08844-d71b-46eb-be79-892c8c0591f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 b3359f0d-a350-4bb7-869e-a55d27946d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 94d10cd6-7e9f-4bb3-a688-30de04ab5476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 83167809-4036-4fd1-9450-af2f01242576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 9e0023e7-3df8-4396-a0ff-94efdb5e5003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 eb3a95f0-e9be-42af-81ea-0eed9f4ddc44)");

unit.assert_eq16(16'h60E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #352 d5aee2be-af99-44a8-9828-8c39395d1482)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0161;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0988;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h0988, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 3ea45f44-cc3d-4430-9eb8-d7ecd14611b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 32f1f7d8-ff9a-4a5f-bce9-5788a99cecb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 d585b0a0-729e-4dfb-abe6-3b63e418c1ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 43c3a186-f728-4cae-8a98-e6aeca50f375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 2d52d5c4-440c-402f-903e-236bc57091d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 2799f38d-31bf-43e0-a43e-b690db3f6c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 27662899-767c-4df6-9d81-30af75673016)");

unit.assert_eq16(16'h0162, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #353 6d1a996b-9973-49b9-b941-40a7fa5dd1bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0162;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h03A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 f8520f9d-1e45-4473-a162-0de419d8fee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 13cef8bf-b661-4434-9078-30ad80521a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 575ba5b2-2277-4a2b-91de-b8c16c9a351d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 564047b4-bb71-4057-b7e9-71a7066db07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 88d980ef-b36d-4394-84e7-39d402fdac36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 4581e769-1901-4c20-a98e-f567eae10f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 2e3484e6-21d0-402f-a1a9-3b1bb42f3d9e)");

unit.assert_eq16(16'h2A20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #354 f679824c-4763-4ac8-bd69-03e34016cef4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0163;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h010F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 5df3e792-ca13-4b33-8cdb-7de726bc5817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 330b0a0c-fbb2-451c-b5a0-d2903a20cba2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 ae622e4c-35d5-4b73-a48c-5aedbdc6dd08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 c64d18bc-f69d-4309-89ee-33299b031dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 fbe8c470-40be-4305-a036-3533b621bc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 ba91fd33-8818-448e-96aa-169902d63144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 46fba73a-f3dc-4469-a1e0-ae85420d82cb)");

unit.assert_eq16(16'h0164, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #355 e2a155ae-54c2-4bda-8271-5c4ec2bb64d0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0164;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h061C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 2c0e287b-7f77-4273-880e-10532bb4418d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 fee59a38-88e3-496a-b713-e82260b5412a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 64fc9ab9-6ad2-4f77-80f8-3af67f07a23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 9bce8d3c-a140-4c6e-9bc6-d7148b549ad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 994a1a9b-ea2e-4f76-a576-8e572ef109be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 a7e39c84-35e2-401e-a4fe-0a87b17a94f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 e8e2226a-62a6-4828-b616-aa207fd14e04)");

unit.assert_eq16(16'h0165, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #356 605ef135-aef4-4ab5-a3cf-2e917a04288f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0165;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h0F4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 7c08a535-cb1b-4a69-9afa-ce07cf3baa7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 edb176b2-a51f-48c1-a657-d015d148e6ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 224d4d20-22cd-4524-ab7b-1217938a3cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 cb766770-0f6d-46df-b006-f3915b95e19d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 3acd6e41-46b4-49bf-a4e5-07fa21062a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 9e5e9b04-1d59-404d-878f-1ed1e4d075b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 52eb0241-d79f-409b-8e33-0e0dac4c63cf)");

unit.assert_eq16(16'hAEDB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #357 501816f6-b405-43fa-8807-ca55df1e221b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0166;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 836d27fc-a141-44f5-aefb-bfe9694a2588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 0996808d-6828-4b0d-a569-51f874e0ceaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 efcdd3d6-95c2-46db-b0a5-fd9b641877c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 5b185809-c832-4d90-8736-f8087b7762fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 88a5b7be-b432-4a8f-8585-49f02366bfb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 c78387fc-32c4-456c-9050-82143eebcfa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 9ea42df2-5a81-41e1-9f3e-abdb530a2e4d)");

unit.assert_eq16(16'h3D5D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #358 90e67978-be27-45ba-9d12-6fdeb0a30e18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0167;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h01DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 1bbfc0d0-088e-4f4e-b240-172101ab17c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 f2cbef8c-4d76-4b74-a8b5-14e6d333018b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 83514c2f-7fd3-4037-b7c5-24988f9c2ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 23b4173c-7f14-47b9-9a97-55dd47a595b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 a787c59f-ba8d-45c4-8ade-fb266611c4c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 32400f3c-98ef-4240-acb7-7d7e71414f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 2a74bd09-d2e6-4b42-8463-d926b1e70f89)");

unit.assert_eq16(16'h996A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #359 91227a07-50a5-4632-8e23-bedc4dfdd225)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0168;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h078E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 bcf1f8fc-4c1d-4002-a70d-6ea827728aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 589cad24-9001-4ecb-bd4a-81a856c78b5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 24075c7e-dc5c-49d0-aadb-895fd91884ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 aa09d41a-8b8e-41e6-a39d-dba52a7fd7dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 1f0f0194-568e-4b2b-91fd-1ab276e0de14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 a78ee3a1-a80d-4ef5-910a-1ed316ff5f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 5b7e938d-8b0c-48dd-9ff6-4bbbb0451745)");

unit.assert_eq16(16'h0169, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #360 e1202f6a-666a-4321-8ce5-677a53375289)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0169;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h0EBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 b2d5b4c0-e1b6-4482-99a7-81a0a091f4be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 a2bb9fd1-e727-4d1e-b225-450448a53f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 19c7652a-06d6-4d62-a9f9-77fc730e401d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 fbd00021-c0fe-4089-9a53-b95f91f19181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 bf7d79ad-508f-4efc-87f6-4d092be9b521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 3284dbe7-8494-45d2-8040-69f245c7f7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 10bb4076-be23-4e26-a989-3d7de9e84d5e)");

unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #361 15ee0fcc-579e-4cb2-9f63-207d6036a5be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h0E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 a55f2132-ffa3-4bb2-804b-84d75b5b982e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 400c184a-9710-43e1-9adb-e510996534f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 e5954b68-5f33-410b-8a7b-b9c1837e73c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 a3ae06f4-b489-4c0f-b0c2-47ac05afc11a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 91d035f6-b781-4513-9e42-e4f0f816ba29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 a063033b-4d2c-4262-a3c5-6b768770e0fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 66c924ed-4d49-4697-9788-7569fc4d6454)");

unit.assert_eq16(16'h4904, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #362 e50a93d7-29d8-41cf-a11c-0d5495aa8d03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h0AFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 d2fa2f6b-2799-48ad-b8ce-f7c808ee7674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 9acb5255-f9cf-473e-b1a1-a73800268b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 27871921-b7a9-4f8d-a412-ac5b855570da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 2f4857f3-5281-4b9e-b6a1-1e440c5a7d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 27bb8b96-ffe4-46c1-bbc4-ff79d3f82e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 fe3294e5-6b88-4d0d-b977-042dfb0ebb7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 d67c0e0f-ffa8-448e-8a9e-4b4f2772beed)");

unit.assert_eq16(16'h016C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #363 c7ef2133-0063-4420-830b-277f455b658e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h0637, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 c24b16e8-b186-40fa-b600-7a9e7d7d3bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 0419411f-b98d-4981-9429-5435673e844e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 2da715ae-5222-468d-bbf9-a8e22768a531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 620e8d63-9429-409a-a3ad-ac063e54f523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 4e4f7843-7e56-478d-aea3-24a1ec77d724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 c627c3a8-a071-4081-a8f6-d9973150810f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 f80a732b-1f80-450f-abae-aa5c13e8e381)");

unit.assert_eq16(16'hDBF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #364 99ea5ed6-b376-4e2f-81e0-52b5afb6e379)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h0DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 78be9e93-84cd-4b8e-b1a2-67dcb75d230e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 e9fab994-9324-4599-a52b-a159340eec0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 1b1c4a4d-62f8-4684-a1d4-379cc0727b6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 1c08ed7a-eb1d-4a0b-aa8e-90438c3f3dd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 49978bb0-0028-47f7-973b-beafac94750b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 59dd402a-5557-4882-bed2-2121e6872afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 5063eeb0-1674-4bad-9451-eb226179f724)");

unit.assert_eq16(16'h016E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #365 9da4c83e-7a72-4b9f-8476-49939f183d5b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h0F2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 7b91ac24-01b8-43f1-991d-805578116167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 9e96eb62-5d7a-4431-8f10-9c437667e46c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 87529318-be63-4355-b389-9ab24e8f3e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 52bfd988-41c8-44dc-babd-a279eda1663a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 76db45b7-728f-4de0-aa31-5a0ce826176a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 b17055a0-6901-4d1f-adac-cf624c6a795a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 c4a7627d-19cf-49f9-b148-b5b92c165fb9)");

unit.assert_eq16(16'hD2CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #366 56e9d8f7-9837-41c1-b59a-ac3b1d8ad4c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h060F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'h060F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 e26eefca-66dd-4965-a808-6451212bfaa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 e5634e9f-7d52-42a7-919f-eb7a6e721273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 55e7f826-310b-4ed0-a6d2-828297b93075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 4be17e22-4b4f-41cd-9a55-f7e396d28e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 33e28bd0-a003-436b-90c0-6d5279f4ce38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 a28ea133-599c-4097-870b-a7d7c8d04830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 54f634dd-4b29-4512-8ab5-74c771b158a0)");

unit.assert_eq16(16'h0170, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #367 eb5d474e-8ec8-46b7-bd0c-aa5ee6696325)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0170;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h0F10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 17d1d393-3f9a-42f6-8a13-8ce88b79c47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 5e000745-8155-4d4d-8751-d8a275477564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 a952cf0b-72af-4eab-a206-76149b33b53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 76d5b7b7-8814-4f60-891d-141f75895f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 15d2b358-e385-48c8-a300-06b4699dcc4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 063fb34a-1ea0-4026-9a6d-33c08627a9a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 2e5bc0d4-623d-4d2e-8ce6-20ba917728e7)");

unit.assert_eq16(16'hE1AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #368 e1e8f225-97d6-416c-b7b7-b7eb8ed11bad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0171;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 4acf3ce0-221a-4cf8-9f92-1a61e42a25a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 3c2c4fb2-b427-4286-a2ea-a02d59e1d492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 672577e5-3e69-4099-9627-27f984924d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 f542098c-bfc5-4b8a-b23a-696b4e8fba77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 027fdd32-d5b8-48ea-9ffd-8e09b8fc5883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 ed8bc55c-598c-4975-a514-66358c289068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 d85b3bc4-e055-48f2-9642-258253a2b0ac)");

unit.assert_eq16(16'h0172, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #369 23860d4e-8c3a-4bd0-bade-d26428273488)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0172;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h0A7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 65ac1623-e364-4fa4-a028-30d68be7bcff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 bc1ca834-0695-4496-82d5-67f291f182c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 39dadf40-0391-42c5-a653-28d307620e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 7a05eb18-4b84-4c1d-9f36-56919c5ecf1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 e63d45e2-d49c-4b1a-b56c-a3ac271f4a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 6cad206d-ae32-46e4-9b1a-893dcfe399a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 64402b4e-51ea-46f7-acaf-f8b2059de048)");

unit.assert_eq16(16'h0173, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #370 35728daf-523e-42b3-8c27-b24984e67f38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0173;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h0B03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 295c029b-6421-46d5-afc0-b8862d5251d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 2a023910-228e-4a5b-ac53-85d9b70e92d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 751ca19f-53b3-415e-8038-002c883796d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 13de4cc4-2b5e-4b90-8ab5-071de85d7637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 d9d91d21-2757-4dfb-9500-e733ae85a924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 41b78008-a7d9-487b-92a9-92bbbc7bb8d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 32893386-aa35-44a1-aa5f-1837d66e8770)");

unit.assert_eq16(16'h0174, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #371 f5766703-9eb9-4676-8ab7-77ffc3e2bf19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0174;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h04BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 4d2438e5-0664-49b8-a06e-2dca0d2079fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 ca7c8dfa-3b01-482e-b795-3964fbfc2414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 0fe8bb13-0ced-44de-9bb2-823ce56cd839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 d87de5e2-d045-43df-8b27-07993a0d3b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 e4374b9c-06b3-4c3f-bf55-271142d9d425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 674ef151-789e-498c-a968-5aa6088899c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 db1ae493-ae4e-43f7-a5cc-c70f65256985)");

unit.assert_eq16(16'h0175, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #372 5719ffbe-8828-4e54-8015-fa47440e982a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0175;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h0870, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 6bcbc5a1-bfbd-487b-ba17-eb9e5773bff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 040ec5f5-c2bb-40ae-b5d7-dbce13fc4886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 4dd5d4bd-a105-4c3d-8dfb-278adf342f5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 c85b201e-06da-44c5-9e28-aeb8b7193b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 1783f747-4320-49bd-9319-72f63b326efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 bb92493a-d107-42c4-b649-e47d3dcac9e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 71eef646-bb6f-427b-a3b0-5d234265bab2)");

unit.assert_eq16(16'h0176, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #373 47ee845e-4891-4fe6-aa23-ecd108ddd09d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0176;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h086A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h086A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 ed439ff7-3847-4d50-b476-e4efa8287319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 6018c42d-d495-447c-b07a-e95203d7062a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 105d1b13-fa65-42df-ad94-e72462628eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 ff1a26e1-b246-4b93-b74b-36a83c9db60e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 cdff4c5f-4916-4c68-8eb2-743f08f154ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 a6d36a21-9489-40f6-9be7-d4d9c80fa246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 4a2e61d3-e018-4729-99ea-c1b26dc82c34)");

unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #374 077f2678-e241-433a-920a-a4cf170ba824)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0177;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0929;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h0929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 ab43dbf7-574e-4c30-b89f-1d0ddc624e55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 d6259689-4ecb-42f3-ae02-678a0e23edb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 43f957db-d985-4eeb-a15e-9f5dc6bae23b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 5f48cebe-7ab0-4151-83fc-e6fbffdbd8a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 808b585c-7b3c-45e1-a39d-9d6e83d5e373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 b1a7d6b4-4a84-431e-97be-b175b43973de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 ae6394fe-bde0-405d-ade1-56c7f51a6f3b)");

unit.assert_eq16(16'h0178, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #375 10ac2b95-3a9a-46a2-bcf0-f0cc136107ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0178;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 62293753-225f-4e56-9c9f-c8c405cb48b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 7dd110e6-424a-422c-87cd-4493044c0e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 1bdce0de-8a9c-4154-ad76-b1921f5ac21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 17a03fcf-81cb-4198-afc5-98554c4114bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 06c2f75a-83ba-4388-9749-b1cb768e778e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 db200f4d-5f1e-48cd-b6b2-3602089c46e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 dced540d-1763-41ea-8cf4-f76d4024db4f)");

unit.assert_eq16(16'hBB00, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #376 bf4b6ebf-03b5-4563-b324-87c950df9eb0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0179;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'h0635, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 78679a52-502d-4fca-82c1-f1d14fff847d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 84eee4c8-e80c-4804-a16c-6755b9898889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 812f8126-9c8a-4f12-b843-59573ab1fe9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 0731fe85-0086-4986-bac0-468b853e5791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 37558a75-3c10-4ba6-bf1f-c6a11a069151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 cb86d1d7-3186-40d8-acfc-a968ae250607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 b7eeced5-4381-4fb2-a360-29be94066d78)");

unit.assert_eq16(16'h017A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #377 2aa599d3-ef90-4499-a0d7-f92f9e4162f8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0162;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'h0164, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 30f3724e-77ad-40b5-8753-f1b1dcafd5c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 907c1c53-b273-42d0-963c-4213a2f8b025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 64902642-c094-40bf-b8bb-0a1282ae9bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 d9f190ec-12b7-4cb3-8e2a-be6321540f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 1ab5dab9-b024-4c30-8e62-620af664c437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 bbb34864-bdd1-46f6-a50d-4be02ea04db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 4e9b5888-1f96-482c-84cd-f8e594ab901c)");

unit.assert_eq16(16'hA38F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #378 757c3017-ec4b-432f-a4d1-96fbe6b5b42b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0110;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h0110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 e8d7c652-a485-44ac-9a45-947f44d939fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 15c03684-a09e-4c4f-870e-7506092fe0bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 43f44724-5bcb-4b7a-9ccc-ab4df3606b00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 c1c4d521-3ec3-49e8-899c-7d7d5fae6438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 6dbb87d7-f772-485a-bdb1-394ad2a938cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 b7b684c4-75a7-4d67-b07c-337d35ff7001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 756532c1-a043-45cf-82a1-f7d000e76381)");

unit.assert_eq16(16'h017C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #379 fa131250-3149-47a3-b6c3-0959b141a3c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h0E18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 80dcc8c4-c6de-409c-9f72-d2786d9c3b4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 5fe1da40-06c5-4de4-a9e4-d8374c965c0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 b6556478-4c2b-490d-a1b3-5f855dea4273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 5b1a9e70-4bb2-494a-b9b3-3c7cecb21561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 80b8e56d-9ea0-47d5-bd5e-bc2cd5273f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 8fb6db70-3e11-42f1-b659-45c0cfacee02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 f09c0dd8-c81e-402a-9c79-7cca047efcf7)");

unit.assert_eq16(16'h017D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #380 d3cad147-40e9-4e9b-b67d-3e54ef009321)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h045F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 36194c34-0a52-45e0-ac6a-d8248cb76b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 3c252bc0-f75b-47f9-8864-1267b2f82174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 9723fd2d-7d53-4c14-9666-1c0e7a1243b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 1d0eb461-3f93-44e5-a93c-b868468d3265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 59338a8c-d8c5-4d38-a49a-4ef0a730f234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 f7846c64-2da5-4307-b8f3-012808106acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 e574d764-6456-4c54-9dcc-212649f4ed8d)");

unit.assert_eq16(16'h775F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #381 040e349c-e863-48a5-9c3b-da292e391405)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'h0FB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 efb91ce0-b183-41ba-b5fc-a06a2e871784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 06e1e0aa-270f-4ceb-af03-ff4b8821602c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 10f9bd57-ca32-4df4-93b7-e1b4ba16214e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 28af2645-5027-4323-ac86-ccb850b64965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 9905e7cd-6380-4a12-afbb-b34d5b82c700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 0c4ae62c-36dd-4a03-a27e-9a2b17078ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 04d1d155-d444-4bf4-b93b-76ef28fd4fc4)");

unit.assert_eq16(16'hE428, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #382 495701bb-1b32-4b54-bb66-b0491d0344a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h05D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 fedfe1b3-8d3c-4bce-9063-4c18353c94d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 392aa177-1be1-4aed-8a87-300aa1daa280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 08ddf129-bbae-4b96-a0de-26b7c4811385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 50ce9353-3a35-414f-b98b-8a461f2f7084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 a4ca66fb-2062-466c-9436-17c88ee51085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 5b04ab15-a22a-4e75-8752-042a175535fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 39ab95b5-fb53-4387-96a5-a4dc65e9d361)");

unit.assert_eq16(16'h0180, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #383 64475ae1-fc35-4d9c-986c-db2085fb94d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0180;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h0E8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 34758d7e-1a56-4b40-8df7-3264f3cf47b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 048db7a0-c708-49a0-a2ac-6c549aadb8fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 49072d47-e3ff-4511-a778-6ae183fbf571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 32ef59e5-8ccc-4430-bf42-06de1d033837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 aaa16226-6ba9-44ca-bc41-3016b11701ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 d6a89153-4aa4-4759-b27f-ebb064573b49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 a06914a7-7ba3-4a20-9f35-5f163dbd706d)");

unit.assert_eq16(16'h130F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #384 e385a336-6ef6-47b2-a4b1-d78f46889ebe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0181;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h07A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 3874bbb5-4075-4ee5-9d5e-d313d53e552c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 03f65909-c296-41f1-b05e-90061905cdc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 2decdc0a-dc6b-4007-a928-4734c3445774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 fc68feb2-fce6-4bca-90bb-33d74498e118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 2b019b2e-afec-4405-b014-f0d2ade21fc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 8ee56f05-b8f8-4ad2-b45b-4ce8727dc863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 615fe269-36e9-476b-a19c-9392933c1479)");

unit.assert_eq16(16'h0182, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #385 f626ab8f-3710-4cba-aa09-f66de17dbf5e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0182;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h0E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 a8e4a58a-7331-4b2c-9ada-6439b1de0956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 d50c4097-4eb8-424f-9bf3-da1f997729a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 30840973-1f9f-4808-9ff9-05b4db93d8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 77066968-8049-4e19-8632-df3e9ace7865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 39943afe-6d83-46f6-a65d-3f6e59263050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 07c197c2-40c3-460c-96bb-de98dda93459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 762ad0b1-dcd8-42f9-bbf8-48a9c2ae445c)");

unit.assert_eq16(16'h0183, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #386 4cf9832d-6744-4906-8496-a9b822952fba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0183;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 12086b84-ca67-4963-a247-ee1b11171207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 28834239-819b-47df-8e39-9b20dd141e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 7b48622a-56a8-4390-aec9-0db18249648d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 9435585d-f64a-4b24-ad65-5a240aea3642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 c1d63dd3-7249-4670-bf60-d4cdfe14dc12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 b7190e09-2994-477b-9499-f1de5d38e884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 5d790a8b-a4f3-4dc1-97b5-ce916633be04)");

unit.assert_eq16(16'h0184, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #387 e9b495a5-1bd4-42c0-bd13-7cc8ba02584a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0184;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h0101, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 0d699b98-032a-4fd2-86b8-5da07d044612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 8d6cea21-aeb5-4ebf-8a4e-67a01fe3d44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 d0465a7a-fff6-435c-a2a1-1d541ee861d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 8474f4f4-85e7-447d-8c4b-6211a0875f36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 436c333b-968f-4e17-9d43-c273e0cadd0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 e526b5ac-9448-41c3-b54f-c100565c9e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 2d4b0d1e-2707-4e0a-b0ac-42f49381ada2)");

unit.assert_eq16(16'h9FE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #388 09cff6c3-d66c-4dc1-b52f-7e7fc25c276b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0185;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h03C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 1153c75e-006b-4c53-8c78-40bc8457fd75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 cd3996fc-6a3a-490f-b48a-e31ba72b19cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 9196fdd4-dacc-414d-ab11-b21538d2fc92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 3d62f46c-9d6f-4ed5-b6f3-c970f685425c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 5295af1f-bc04-4e9e-aecb-b1ed8019b657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 0e5e1760-a53b-4e00-893e-a8453b54804a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 e312ed19-b477-451b-9b5a-587c1cde82a5)");

unit.assert_eq16(16'h1287, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #389 010b5e52-4e60-49fc-931c-371fe142bf1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0186;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h0C73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 7a12720a-527e-407d-8b5f-858d38a7eb69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 4202acde-13e5-4deb-9beb-04b1fe712488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 a9a503f1-8fdc-4bef-a813-ed9a54769ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 2b1d697e-bc0f-44e2-b45b-63edc0e391d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 3425ef38-85ba-4cc2-a78f-8a778c92ea76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 0858caaf-bbbc-4b75-954a-2394a1e8daea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 4ab858be-15b3-46a2-8a13-8ed26ad1bd49)");

unit.assert_eq16(16'h0187, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #390 1cb810cb-fee0-4548-8b45-dbf20e4b50a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0187;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h0A64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 96417a12-7e89-4f49-8560-eb298be667fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 9e922087-61b3-4618-8c15-1e2652d27693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 586bb1aa-bc35-4576-b181-f272bba19a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 6fbca859-cd3b-49cf-a0f9-67e3db5e9460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 3e1913cc-067b-419d-a249-30ec1211e8b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 e6439f37-79e8-4191-8fd0-bbd0c0f2d41d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 4d618b4f-8dd2-4aa5-b1f0-610823a0da42)");

unit.assert_eq16(16'h0188, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #391 5d01451b-f744-4728-b762-93b1178538d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0188;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h0EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 51b0fedb-6f4d-4da0-af94-14384c33ff04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 6b8b4555-86dc-413a-a6ab-c37d1b98551d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 0f393f19-242d-4713-bb51-496bc2b37d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 62d9c4b8-b044-440b-8bb0-8cf47ec69a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 3075ed0d-46f3-4f5b-9766-9b4b88a05eb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 d249658e-6143-43cd-a385-b44db1b70f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 3c23092a-1ea4-405c-8946-213ca9dadfcf)");

unit.assert_eq16(16'h9627, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #392 b9bd3cfe-7d31-4d62-aec3-329c52f0761c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0189;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h0A7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 4ffaa744-02f9-4583-8f2a-702cd92aebe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 53632973-c5f0-4d22-804f-ddb5d01dc6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 2859f5ed-e233-4f41-872a-d5fa4883dc95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 aa83df64-9813-4fdf-a165-11f753c243b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 a96b399a-0d30-4c0e-a445-b94e05dc38a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 d2a27859-77ee-495e-92be-ab9221675110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 e3ecf680-7ab3-4bfd-ad6f-d5b6b13a3af1)");

unit.assert_eq16(16'h1B14, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #393 632fc727-6855-4c1a-a5a9-495d0763e3d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 ac75e460-ee19-4fe9-b953-a93d160db456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 8bd5abd7-99b1-4dc9-995e-b55709e0dbac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 8c485ad7-1b68-4693-bada-fc8b359b6b00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 f99bf4e4-4ea4-44af-abec-63ba50e8e9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 01e6aa52-df26-47d0-9969-9d602647225f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 2397f5d3-dffa-4fd0-bcea-7507a261fa3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 ce8e1fb3-b696-4e4c-8b90-5d4c5547da48)");

unit.assert_eq16(16'hE5FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #394 7bfd0859-f9c8-4f0f-9d43-565357a70b12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0011;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'h0011, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 a507d41a-d233-492f-9e08-629b19a6b429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 0b6fa34a-93f8-4b40-98f8-c0fea58bdb03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 cc5502c6-052f-487d-a9a7-8d860a93225c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 c71c7141-ab58-4fa0-9b81-9e53af86ee7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 84b5e090-fdb5-4f5b-8447-a5c2075ffc5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 28c46615-e0f2-415b-8da8-85bbc6d9bdfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 c29e6b1b-0e5c-46ca-a075-a69b05bab352)");

unit.assert_eq16(16'h018C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #395 0f661764-7e0e-42e8-b986-c1ca01551cc3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h0D8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 2277779f-cf46-4087-a825-36a06d9c321f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 96e7fe7b-1800-4e74-80ab-33c868594402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 f4fb5425-375f-46aa-826c-dbb88eb1f93f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 dc1df903-df7c-440a-aad2-4e8135e918c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 da2c3565-50d8-476c-9a6f-78bde222ad6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 7ce6a4ae-82a6-4346-a9e7-040f660099a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 070515b5-ee85-4acd-9374-a6e53e0a387e)");

unit.assert_eq16(16'h018D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #396 a52ccdac-ea56-42d2-9d48-cf05c1334b31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h03BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 1c329c28-d3f2-4def-8b42-b7bbdc4f2cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 c0652ac0-c0ed-430c-bc20-15a461d8dfa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 f1836e56-de0b-48b2-9a1f-6595fcaf52e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 155875c3-245d-4f3f-a1ef-18e1a568b6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 57358d54-98f9-4507-afab-9bd1e32c0467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 b5497c19-d6e6-415e-8d18-0fe009196ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 aea8c50a-e3a3-40f1-8102-c30d8631abd9)");

unit.assert_eq16(16'h018E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #397 7b8bca58-2d2a-4c77-a752-387c91e9598b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h05DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 1cd7c488-d3f6-4f84-8269-044480ba2d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 cb6a33e1-2b2a-4cc0-8723-8dd13889abcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 5b90f8dd-efdd-45dd-86ad-459d68c28e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 78c42129-5fc9-4319-8774-b43b7f1a6de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 d4db6011-1301-4e79-b2bb-0603764e2fd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 11d1ee57-fe70-45ca-a776-9b0b6b75026c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 12ec97c8-1747-4d8b-9ee8-ef6343f09791)");

unit.assert_eq16(16'hA8FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #398 8165e122-0a2b-4f65-990d-e25b66d63032)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h08CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 de8dd398-efd6-4ff3-b1ba-39e7f6ed3804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 920dd1d5-29e4-44f7-8642-0ab237076853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 62fe8024-8960-4125-98fc-b120a18996ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 f3f8af53-c889-4bb6-b01d-b53dbb191828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 00fccc8c-3fc5-4d6d-9b9d-eb707ceafd53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 ac8ea225-c5c5-455e-a5fe-181bece5ee02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 907ee9e3-cd45-4326-9ec2-b6fa3c3927e4)");

unit.assert_eq16(16'h0190, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #399 19004969-cdb2-4f56-aa15-966103cf94ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0190;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h0B72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 dbd8fc4f-1e1f-4784-89cd-71866e1661c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 8a98ffe9-ce2a-4179-9061-fd1e4d5bc432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 279e045f-213e-414e-91bb-d5896b1aa124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 386d4029-93c3-486f-bb81-07c761f2a74b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 5e04cdb0-fdb8-483b-902a-1fed0737aa2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 8adf50e7-2a67-40f0-81b7-fb3f6fa7d934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 663a6412-0cc1-4094-8f8c-d1cdb2877acf)");

unit.assert_eq16(16'h0191, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #400 234a2ab7-70d8-47b0-b8b6-b62a7d882b35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0191;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h0D59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 5a9b461d-d231-4617-a199-3469ea6ea524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 80b22774-728e-4476-99ed-d71dee13ad0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 14c52666-69cb-4099-bcb0-db79e89ef4aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 c45b0068-951b-464e-b66d-4a98aa249c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 72a0e4a8-f76c-4edc-b41e-666b90c2db7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 8b7f9e11-f55c-4d6d-88f0-4c739acc55e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 ae9e9ce5-2cb4-47d1-b9e5-7ac5e9723359)");

unit.assert_eq16(16'h1659, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #401 559b6804-2404-4958-b161-6387c4685763)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0192;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h0C55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 90e0d706-dda3-48cb-b7dc-7e055e31b3cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 40d43f95-6d35-4aec-a8b5-d83b8cbcdba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 aeb4ba65-0d78-4b66-9f40-8d20063cd74a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 d2f87f3a-a7a9-448b-9603-d40bbb61c5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 b659a032-0a5b-4d2d-a3d0-34c1df182bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 79718930-4868-4ac9-93d5-bd9aec878340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 7188da06-873b-4ed9-80ca-f822e8698547)");

unit.assert_eq16(16'h66A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #402 4e1b47d4-4ebf-4723-b7e2-075745fb5602)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0193;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h0BD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 38891ae8-48f1-4a5c-893a-3b53488ee45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 f094892e-f2ac-4d2c-9c44-ae7ceeb5f591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 deb78ffb-0aa4-43d7-8b4c-03e461d59192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 ab8dc1a8-3b87-488b-ad88-039bedad1c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 645d1f87-7152-4b26-a423-985e49d88133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 a0dea3f0-ebd6-41be-a398-05f275ddd6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 0b5add8b-4558-4dde-9bdf-dd733f8e9b32)");

unit.assert_eq16(16'h0194, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #403 1ab54010-d612-4216-a8d8-d6182af76224)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0194;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h039E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 06514b19-1a7d-4c20-90f3-0ab87d0deb20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 94a0ca47-b2b5-40f7-9f13-ff9d88c0fad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 c0564ee1-d434-4fa5-a6ab-48e11a9e4d3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 1062686d-6b06-4ede-99fb-b51b78987c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 a99c27d3-044a-4344-aff6-cc52519e5e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 2e6bb2c7-6b17-4fb8-8295-c79cffcd21ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 9ee2dbdb-6417-4534-b4e9-ac099019edde)");

unit.assert_eq16(16'h0195, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #404 c42f7915-954d-480a-8248-188dc3aed7ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0195;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0754;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h0756, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 bd1ee77c-2db2-489e-9060-0a7cf7022d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 9f96fd43-bb82-49dd-93c2-2551f6969eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 ef345034-119c-4ca9-b46e-c72fabe21d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 036da579-fd03-4311-ac54-54fa424c5921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 fabb1f6c-4a62-41fd-a2fd-a06eb7530d30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 81187192-578a-45a3-abfd-4f7c7d4d3c53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 4647a883-4ab7-4576-b68c-e206deec843c)");

unit.assert_eq16(16'h8A87, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #405 ec09714e-4218-487c-93ef-04585f99e047)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0196;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'h070C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 7e907be9-4af3-481c-bbc3-c7103301663f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 bdf83a22-62c0-4d91-9173-83a52527fe67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 fd8605b8-a46e-4519-8c72-1ba0ec8c54bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 59a9799a-bd34-40c3-bbbb-1e321c7d3b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 33eb604a-5c91-4795-ba72-5ac63693e16e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 8a653817-d873-4d52-a528-d1d13a95b8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 da786261-03ca-4502-97ee-8a053de8001c)");

unit.assert_eq16(16'h57A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #406 b5d103ba-9634-4576-ac3b-37081dda6ef9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0197;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0496;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h0496, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 4fdc4350-a24f-4761-a3a1-981fb8a11708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 1386529a-591d-4626-9669-9a3159023a8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 f4aeeff5-c211-4a2b-a658-fee4aa59edc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 4ffb7c6a-206e-4919-bcf2-9fe40e366360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 3a25500d-db3b-4839-a041-fce3feb9ab9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 9367f00f-20eb-42d5-970e-a968a06113a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 1a322898-6dda-463a-a431-2e2fcc2e6036)");

unit.assert_eq16(16'h0198, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #407 6adc3090-28a5-407f-8fac-613e36960266)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0198;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h0D06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 769dda36-824b-4fe0-b132-992f3cd191bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 5cc5d333-e5e9-4e41-bf3c-dfd5047bb6d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 9632c7f7-d077-4149-b5ae-834b45d4f7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 0b0136ce-1774-469b-a1ac-4d34fa0d8a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 5768d80b-be52-4210-a74e-84306bddd0c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 bc98a4ba-5c74-4804-b156-8a03dde1ca3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 420c898c-b3a9-457e-bfa1-dd9b9c54a524)");

unit.assert_eq16(16'h0199, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #408 e77495b8-969c-4927-8ac4-18b8bf6b3615)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0199;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h00F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 8214ca7d-471b-41a3-8699-5909a7631905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 a03b2802-d426-4aed-9b42-d0a396aec6db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 c6f3135b-7114-4be3-93fc-c65562b8218f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 ef1793eb-4d2b-4fed-ac7f-20b8a9640856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 66000c45-ed21-462f-b198-c3df3f93e99d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 ecc6beee-458a-4461-a3fe-534ed18414b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 932c1e41-70ef-4b91-ab26-91b65eb69869)");

unit.assert_eq16(16'h019A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #409 7a56ef72-f8a3-4c13-b100-be2069abd867)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'h0BCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 9eae456f-7399-432e-9cc6-086daf5e10bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 ab13c59c-55d8-4b68-b738-e9278d4433e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 372294e6-352f-4045-9c67-638e069cb686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 792e78eb-3d1e-4447-b8a7-12359dd6e1c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 d8ad8f42-90b4-46fe-9b85-2b77f05fa23e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 036e3dfb-20ab-4a2e-9edb-8dfed0e55665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 c31faa75-5996-4f66-8c96-f977fe759b01)");

unit.assert_eq16(16'h019B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #410 aeaf4333-6aa8-4e16-97a5-fa4bf57743b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h042F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h042F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 1a432810-d829-4c5c-93ad-050492241564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 37a05747-3d06-4afe-9b23-2156c80ef6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 61efcab1-e6cc-4635-9333-13ae58437e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 a9c4c80e-900f-425d-b059-18f31f9cc003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 7f7e0751-868b-4753-aa1e-5bb3f5a0db08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 99a0e4a4-ed3c-4507-8eff-29476d7c1f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 a762a66e-ed7e-48f3-9354-aca5222ba067)");

unit.assert_eq16(16'h019C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #411 1130cbb2-0100-4ddf-a9dc-503cd0e80496)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h06C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 c23d4581-ae9d-47b0-a294-93094ee658aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 c158d79e-9712-4192-a5ce-c2a208a8abd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 42c56b4f-73b7-4647-b1b3-19553623038f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 7bfc95c6-0482-4b7a-95a6-afce85ac0c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 a8ca2be3-b974-4afc-bdfd-7d109563506d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 52f8d6d4-6705-4f7c-9777-90f70f21434a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 0522be5b-f7c3-4207-9bd2-44ae6e0e6a68)");

unit.assert_eq16(16'h019D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #412 863c2be2-b90c-405d-a069-de179f062c89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0886;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h0886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 763ab83f-56c3-4ac0-ba16-2926cb10a3d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 64eef3ec-b816-4f55-8faf-d741df68c6ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 92076d86-bc1d-4a18-9a97-3926074e10db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 427cf045-f87f-4ac4-b80b-c8c3b949047d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 b8164920-9472-4106-8230-a16fb3937e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 8b5ee5c1-e914-4f55-adc7-3732a591c63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 a887a063-0fc1-4ba2-b76c-279bbe3af8c0)");

unit.assert_eq16(16'h019E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #413 ee79a46c-af9f-4e23-be33-f6555c146d0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0482;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 92e4c08c-91aa-4d1d-97f4-20ebeb3db966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 acd3493d-f731-4e51-a92e-1804a5964018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 c7c18f49-a7da-4797-87bf-81ff1cc7d1e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 0b6a6931-2dd4-4e20-af2d-07354a5219a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 66987bf3-5c8f-4d50-a25d-4d6f0a62785b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 90d218dd-cc6a-4053-8ed3-8d2c7039429f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 aac6fc34-f173-4fce-b0c4-a457d9ff0df1)");

unit.assert_eq16(16'h019F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #414 193c31ba-1ae4-4086-bab9-f47b6c01f35a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0515;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'h0515, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 c6af503f-65cc-4e81-bd8d-ed8ec99cd449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 852c4d83-caa0-4330-ac56-2f5fbf854029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 047e983f-d49a-4bdc-ad1a-70c7c14d8531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 f323eedc-b255-4d55-b36b-667b75471a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 3c294136-5835-449a-a77d-48a163a414d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 a7557086-7344-41e2-a246-4d7064feeb99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 b46fdc0c-d824-4c22-b04f-3e6fcc121852)");

unit.assert_eq16(16'h01A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #415 bc5a3f83-090f-487f-ace5-608d817c52cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0799;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'h079B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 7ab66abd-3d36-436c-a0ba-77571dbc5e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 01cc6585-8f64-48ca-b5f7-93636f812538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 95a1fcf0-468d-46f5-8274-cf832b94ada2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 89dd8ba3-f81b-47b3-8653-5b82a03500f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 255cfd67-19be-482e-92b7-31ec867d5dfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 ddcfbd55-6dc9-4c96-b86e-0f474520adda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 ddb22fcc-5ba3-463e-b2b2-a5eac9d7a982)");

unit.assert_eq16(16'hDA42, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #416 f892d19d-5bd8-4655-ac25-702993f030c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0810;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'h0810, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 80e9e81c-3cc4-4cf8-907e-6ed086b881bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 d1832f32-3c6c-4c14-8556-a766e2661fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 8ec2ee18-1f91-42c4-8d77-305ca7549aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 6461de82-a95a-4b0a-aa63-101c8192ca32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 56a0bd1e-110f-4be2-9405-44bc14d88f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 b3b9f0fe-89e9-4766-b17d-41a11a7c8091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 199381e1-b8bd-4b70-89e0-28dd4953f861)");

unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #417 979faea6-2af7-4252-936b-749daa419bee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h0FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 b1f5e64d-5f84-4fab-8918-142b3874be8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 306cbe85-9490-42de-8c01-f5b5a746df12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 ce25289e-18a9-4efc-81da-98297674a34a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 41c91b62-b6a4-48b6-bce5-9844f3b98253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 3b987fc8-1074-443d-96cc-06159b7641a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 6a0aa1ec-54ef-414a-8a69-7297c1e7da25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 34217045-94a8-4b36-9f85-4b7207cc1a5a)");

unit.assert_eq16(16'h01A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #418 2b411ac9-cd99-4995-9a44-d88325b378b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 8c554161-d9c4-47f7-be08-e66169932143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 cdef6d5f-a731-4d00-ad40-adfa1e554851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 f51ee62c-ddb0-4094-ba82-f849c98a35de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 6c8b6798-e5ad-4e92-89a5-c1de95783ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 c98a646c-dfeb-49e8-8439-75eeb421cee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 10a2c814-ac30-4d49-a091-0e9ec2b1d379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 735a2f1e-f9a3-4ed6-88d6-9a44c97ea267)");

unit.assert_eq16(16'hB14B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #419 6f8180a8-d7ec-4432-a517-e14e6fed0f01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0632;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'h0634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 eff7ea0b-bd09-4a42-874e-1e6b484574b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 8900eedd-4295-461f-92dc-14a1aa1af1db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 2a6fd9f7-1e44-4c86-9240-2c1645227228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 83f8623d-4e6d-46af-b22a-f9d541a4185b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 1badc424-a328-42d9-8aec-8950225e2216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 16c21185-83c6-427e-90fb-55022fefa2b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 9a7e86b4-b2b3-4494-bb04-958ab1036144)");

unit.assert_eq16(16'h8D7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #420 06aa7d0d-22ab-4f1e-bf1c-d66e766b53a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h0B6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 d44f1371-8d1e-4727-b2ef-b5a84dfdbb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 fd86dd13-1081-487e-a79f-1b50254ba3ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 bfb59d59-db1e-496c-a2b8-9edf4af7443e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 5012d898-a153-4eb5-a3c4-8d9797ee9790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 a748ddae-a80f-4f5a-b472-9d5a8ef17cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 f899b07d-b784-4d10-9dfd-ceb028593e86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 d31d3865-3c41-4c2d-a3da-c1266096fc94)");

unit.assert_eq16(16'h01A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #421 03954cac-9c5d-427e-861b-78c94bd95d0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h02BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 afc21e0b-5320-426c-afc6-ce81a3d4eaf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 bc5327c6-aed8-40fb-bc46-8803e247f144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 bd2d1b66-2a1a-4c85-ac7f-b2bc83be5c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 03af9958-9a57-466f-91c6-46eaee4220eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 e548f25b-ec2e-46ad-a4bc-ae00be922c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 8fccd7f5-a07c-4c11-8b90-4390aeb0e2fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 1e3ebcc4-5217-4a4c-a855-f228ced876c0)");

unit.assert_eq16(16'h01A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #422 88b1cdcd-4434-4ecd-b7e6-cadc4892d0cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h0D9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 347935b6-7b46-476b-bc15-c1be975ab7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 6cf6ba9f-0b7f-412b-b98f-e06961215e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 9890a3cc-820e-4bc8-ba5e-eb07ffef4677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 23cc27a8-d373-4578-9334-ae6a6e0c8453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 e910818d-5c3d-40a9-b5ab-58986dc6794c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 2f4e3e3a-413c-497a-b0f3-c4690121677a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 3ee6c1b7-d27c-435d-8cc8-baf9fa7226f3)");

unit.assert_eq16(16'h2D79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #423 14dc487f-124a-48c7-8e91-832bb54bcfe0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h0C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 6a4ebbc4-d2fb-4f0e-bae0-0ac4f780a6fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 727db241-cecc-41eb-93c0-53087c876d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 d4329aea-aa9c-44a8-b29c-46d16e289cc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 3cf433d6-3ead-4983-be2d-73d7348279dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 18748def-895c-4cdb-92ee-b5f82ea14a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 9da87305-c600-44ec-8100-672f91c3617c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 e4be6d16-5980-4901-98dc-9a50836b5df1)");

unit.assert_eq16(16'h8E87, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #424 5e85a869-4051-4f13-bc2a-6ab598290f2b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h03EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 a5a97960-d0a4-4df3-872d-253374e150b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 805d8c2d-9a13-4b93-b016-b14beb27fcb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 da4d6ceb-6f4d-46b3-90bc-bfc3dc43c654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 a0ecd360-9c27-4d9c-95f4-8c5e3f708cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 fc602150-a835-4a97-b172-e4a918dfac17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 cdfa200c-c51c-4929-a19a-458de224ae2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 617430b2-1cfa-4cd2-96e4-211fee47613f)");

unit.assert_eq16(16'hAFAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #425 de00202f-274b-43ed-b119-0b81b1354de4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'h0FB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 baa2d368-45a9-490b-8900-c2dc26ae47e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 b950e2d2-f083-4da8-992d-6bb23d6a0d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 3d3b8424-7a91-423f-ad15-f610f22e5f7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 3148a2a2-986b-4c8e-930c-5964627493de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 e4a541a8-f6a9-43b3-b091-8a92b2ede31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 efbab5b9-fc7a-442d-b656-55d3df4c013c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 760c2cce-dfdc-4b5d-b662-c7bede177691)");

unit.assert_eq16(16'h01AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #426 a16bffd1-3840-4fa5-ab63-b70d297401f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h0C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 cc5eb802-e393-4516-b511-4a384677d8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 33ca2966-25e3-4048-83dd-f7c21df6f739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 8dc5818e-8755-4c9f-9580-d11d3df18f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 90cc294b-db66-4f1a-a6d1-8043cda1e573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 6487b7a3-b301-467e-ba6d-d6435aecf21b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 fa81d3b3-b931-41af-b682-d4a52a483866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 5ecc731c-b6da-4c7a-8ddd-00d8951bfe95)");

unit.assert_eq16(16'h5B3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #427 60e26c29-fd23-4742-8f57-c8e66937e38c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'h0B1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 d5d664a4-b59a-4886-9739-bcb93429c7ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 6ede7428-0581-4fa0-b7e2-8a7b3c347b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 a5a894e2-1382-4f20-bdd2-88799ff5a90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 e4fc3fba-64fc-421b-a923-69792537e809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 98aa41a5-2f01-4cc2-9d9a-fb26bbc1c010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 0ed60228-3d9a-4312-b7e0-81fbeae5f1b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 e17d0344-ebb1-4029-9a3c-ca96e8b4b052)");

unit.assert_eq16(16'h5435, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #428 b1cc42ef-612d-4630-9f5b-b7e169e09a8d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h04B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 c84672cf-bde5-4f4e-99da-96e2f702897a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 99456e66-a54b-460e-8757-c937ef490cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 0401257f-2880-44a3-831e-fc73575e7646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 e7197943-a70b-4adf-9ba8-ba52a714c2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 72c21010-719b-455b-a1a7-bf7273c24d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 5dd971ed-f526-45e5-b279-a08967defd3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 9a8e2320-fd81-424b-b298-531295b4c301)");

unit.assert_eq16(16'hBCFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #429 87b09494-595e-40d3-b587-4c0ba6db2a50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h08C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 346064c6-947e-4e08-b6ea-bc800deba5cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 5a90413b-5437-48cf-9da4-61b0f31309bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 6c7b79c9-1684-4e7a-9ae4-fb24258a37ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 989b8177-b864-43be-8085-347f2e09acb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 e92bb0c8-9fc8-42be-bb9c-4eda66072b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 24a0c261-0e15-449b-8ac1-173023c62411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 82521068-f296-49a2-9823-5d7b290d31d3)");

unit.assert_eq16(16'h01AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #430 7963add9-24af-4cfe-8f9a-591820c808e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h09A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 bd72014d-3a49-4ae3-a180-eacc56163668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 ae605ad2-7afb-409d-ae4f-c92b3f57d18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 6320ac9d-b591-4ba7-a439-2c5c12085a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 18f5e1df-f9dc-4d0c-b55e-d2ca3f36a89d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 fb0ceaa5-590c-4fbe-bcbb-dd349b10e223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 784cd3a4-bf22-4652-a969-e3318dda3143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 b496af72-2a85-411a-abf5-106d88c1b46f)");

unit.assert_eq16(16'h8AF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #431 1de25611-1dd8-4932-97d5-2c656124acdf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 f0b3b79c-d9ed-4b41-b5d1-f9ccce2d82c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 39391466-b6fe-4f6d-98b5-1014af9f92f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 79197c99-b5d4-4402-8ca0-fd947d34bb58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 a05ddfc6-827c-4bd4-a5e3-cdeb75041df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 4f8186b1-792f-48c6-8263-e136aa6a120f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 3528da7b-cf09-4698-bb75-3adcee70135b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 79c666a2-9666-4b5f-94e8-daba7566f18d)");

unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #432 bc3f1669-7c5a-449f-be57-018cbfca305e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 90ed0319-e45c-4bf3-844a-c54d7def6bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 3255b329-fd48-457c-a320-c1fb1e3d2262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 cc36aa54-0ed8-4206-a861-6c500129cd92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 89a66a3c-3770-4091-9134-1d69cae87c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 7778e02f-2b33-4c71-abe7-8ae9fa7ee869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 9f60a290-ed97-4f97-9e6b-b0e7d038bfa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 bcd5acc3-3bd8-4c34-b158-89c3324ef28f)");

unit.assert_eq16(16'h01B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #433 9a7fc993-e7a3-4a4d-b179-789ca6261bdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0680;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h0680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 768a3a04-f24d-4391-be72-220523952234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 551d9904-4a9a-4eaa-a359-b038c9ce0494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 f47431f6-a776-48ce-bbba-7941626dd286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 1e66ee02-bd4d-41d1-958f-b0f8371646cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 ca5a4196-6b87-4ad6-b75b-c63e355959df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 aa199593-3245-45f7-9b9d-8f420ad76a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 08493915-3fa6-4fb6-a076-4308d0635672)");

unit.assert_eq16(16'h01B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #434 b0679f9f-5ce0-4208-a050-2be47fdf6b31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0526;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h0528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 d7d05c51-5208-40f0-9828-69b43f5f6181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 adc77851-5801-4bb6-aadb-4f7f5cb50053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 7fd4ccc2-b8ca-4ad2-ae02-1fc7ead7c0b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 2c5f1da4-4bfb-4b85-b2ce-4ad3470bb132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 7c7f1acb-c874-4223-8d3c-e6ded2c01b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 96ece6ab-0eae-48ea-8022-40e4d1f406ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 eda0d4d1-224b-466c-a017-ce2b721240e7)");

unit.assert_eq16(16'hA181, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #435 1c9722f9-fc95-405a-a19f-64c51443cb0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0524;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h0524, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 da7193c9-5f8e-4e7f-ab00-d7aa2be7c7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 bc53db5c-0655-46ec-bd42-1d3bcf0848bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 ca685971-7d03-4b04-bf81-36b0be92d4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 e1d5aaca-b85b-483b-a03a-574f8626730d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 fe93a277-3425-42a3-8901-3d37b0592c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 94fbf2cd-ee39-490d-b2ec-d6ee096f8300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 2862fdac-ebd8-4ea0-9973-5f106ab741b3)");

unit.assert_eq16(16'h01B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #436 b2505d0d-8752-41b7-ab2d-62462dad0c8d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'h01F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 22fdc42d-9579-4812-8399-7a5e721ea9c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 26b466bf-421b-4bff-955d-1076f518500b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 4b49c168-083e-4d98-b3f6-3e98361279e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 c9a84c6e-44aa-4005-bc2a-b5c6c8099902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 4da21b54-7e74-443f-aefe-4f15756040db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 228815f9-d99e-4574-9384-6de1ca4cd7c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 cfbb510a-e350-4ea0-b613-de72baf7b9d1)");

unit.assert_eq16(16'hC835, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #437 fc7895fa-ef65-4153-94d5-107fd64e63f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h0C5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 b38b1f41-7555-4283-986b-cede646db894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 6bf62dc8-b0a5-4787-a5f4-749340b05399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 30aa172a-ae36-49dd-91a8-40260e1b4948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 918efa93-6a8e-45eb-a3f5-d34963c29f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 302fbfb4-a441-4b29-8490-2a78753b3727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 f72e5316-73e2-4762-b3e3-a4a2fa21b65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 66e972ed-8ad2-4762-949f-8829aaf8cde2)");

unit.assert_eq16(16'h01B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #438 078b6dbd-37e8-42f2-b2cb-f482a6b5c692)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0386;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'h0388, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 fa695452-95d8-4161-be9d-2b69a16b3764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 12d53d12-39d6-4d53-8e09-bce14470477b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 bf6e09aa-bb2f-47e2-a1ff-c977aa93acaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 c85bdcad-269e-4f68-a741-4e2eba26c6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 45c99bc2-1e13-44cf-9864-c8cf7242457d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 35ad5869-7b99-4d72-9276-4e0a1e5f0ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 98562ab9-4f5a-4fbf-9cd4-19c4ee1cefd4)");

unit.assert_eq16(16'h6DF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #439 36ed2afd-a221-443b-aebe-bffc2b1b13c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 e7f3226b-9e52-4a4d-bcdc-c92982277fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 fed02933-cbcd-4dd5-8e88-cc56931f72a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 0d4ff7d8-566d-4129-b741-64aee02fa745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 d069d3aa-69d5-4bc4-99b3-1620422e23dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 3e3c0e40-2639-4e13-975c-b09d944b09da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 4fcd03e1-842c-4561-a5be-06d30734b9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 3d715caa-62ad-4899-ba5e-58b69652c320)");

unit.assert_eq16(16'h01B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #440 df6a9195-9e5b-4568-aa4e-a05e43669bc3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 00b2c39a-302a-4b08-993a-bc70b9e1043f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 edbbe27c-83c2-41cd-98d1-b4024cec3402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 d20976fe-a4a2-46da-97ca-7d7874779b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 a0f82f51-de61-4f97-bd18-207f928f8076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 19120c38-81d5-4d91-8355-b88d17a1fad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 6f5a496c-b932-4f05-9b88-dbc9c968dbbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 bf0cb577-54d7-426a-bea4-04e0ab858e95)");

unit.assert_eq16(16'h01BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #441 03436f7a-66cd-47fd-a772-98efb02e2ceb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0740;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h0742, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 2d559b4c-cd09-4d42-8ab8-a60ca66faf31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 b2193ba8-665f-4335-8a04-b3f49c962061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 6eb03bd5-7164-4f79-a7ea-f019a0dacd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 440f6464-465a-4764-8452-b2c9bc0a117c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 05407060-7a53-4148-abd8-9931cd38e75a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 b51e7a27-f741-4028-bc0e-9bd8210b968a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 2065df8c-17be-4de0-98b8-fcabdaac97a1)");

unit.assert_eq16(16'hD21F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #442 7b322c89-1372-43f4-b27e-eb648435ad7d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h0E50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 dfa39f77-5041-4c1d-bca8-78532692ab43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 51ed66ed-cf1a-440e-9a5c-c0913c26c6f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 021186a3-1c39-4e0b-8dce-498bb03421e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 d93e75b9-66b7-47e6-bf50-cba0ddc73a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 9f84be89-ccad-4c6f-9570-60b438f13b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 287d4526-aab4-4360-8675-88d8ccd497e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 9c02eb90-ffad-4410-8b4e-1d71307feb9b)");

unit.assert_eq16(16'hE366, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #443 d7bae7bc-5a07-4cf8-9fd1-c5c14066a181)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'h0597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 27dc3961-e548-4417-88ca-7134ffd828d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 8225c153-c5dc-4fe0-893a-952fdb62c03f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 558b1613-7dce-42d8-af44-f223b59ba638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 1c08a718-3e60-4619-8797-59d35ae86fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 9ddf4cc2-317e-40aa-9365-bee4c50995ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 b719ec42-2f67-407f-b4f5-36a1fb68bf82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 5cac7079-ff87-40b0-a081-716813f01de3)");

unit.assert_eq16(16'h01BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #444 a9fdd86a-53e9-4c66-b183-452190f86373)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h0AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 d4ac3bfc-5bc0-454d-a0c9-7d117f6b060b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 8c0bfdfa-cb6e-4c3c-8c8d-8c8151a55e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 41831787-f3bc-44b1-87e2-853e4cb44927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 3e008515-ba81-483b-a61e-1062667fc80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 ccdf859c-2ac7-4d48-9235-f85cf0a92364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 4fd00755-66e0-4308-a358-a49f13512e3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 fd58feca-4802-4296-9b58-f2cb1e59233e)");

unit.assert_eq16(16'h4413, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #445 eb994d2c-4af5-421b-8b9f-01fc0e231de1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h0AC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 08b09056-0e6c-4229-8728-7a0ad132b5ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 2291d19a-0791-46df-af8a-37649b1b1b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 7d6577c0-e430-47e7-a955-5914d50e7da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 2fef704e-f265-4301-a7ac-c32175d7183f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 d3a7c0ed-cc55-443b-a83e-388e8a140bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 4c54ef86-82dc-49da-a715-93e69d91421e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 cffe7fed-7ea0-4553-8ed2-b38623772aad)");

unit.assert_eq16(16'h01BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #446 56eba069-c574-4ed2-b46d-deda2ba54c05)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h0BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 5fb900c7-2d39-49e3-9b34-fde0aa3b322b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 685e888d-d39e-4cf4-8ae2-ece6e8502997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 3d562e55-4a52-456f-87c7-3433f38b411c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 4f7292f7-d417-4aec-8dc5-37fb33023f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 aa1edb99-849f-4016-9213-7e47548188e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 61491c48-ed81-4749-a2fe-1d0c8e25b5cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 90e8c351-28c5-4b7b-85ec-2c359fb7dad7)");

unit.assert_eq16(16'h24FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #447 88e7aac7-4579-4435-8fdd-3d8f890e39fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h0150, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 da7033d7-e2e4-417d-8467-d6ec5de9ac03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 087f2fc4-42cd-4629-9215-89038a62bbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 894020c6-d047-4908-a91a-95dea380b9b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 beef3222-d549-4478-b594-33829bdfd8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 e070ac4d-a7a3-4fb2-a832-a22b8833fde9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 cd41782a-ee2f-4595-b82b-a2d92bac6414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 4994d2d2-bdbf-4009-9461-96a2a244a7f6)");

unit.assert_eq16(16'h184D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #448 8bef06c5-cd1c-4f27-a6db-6dea2dad48a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h0D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 b50eca05-a32c-4c07-a7bc-df49c20f12d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 a87ee587-f082-4ce2-9643-17765b99ff87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 60d67ade-b0b2-443f-9584-29c1f446d0a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 b5ebd972-0178-4165-9bb9-4042a75db257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 495059d0-27a0-4988-8d52-936a3d2da242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 5e8e7c2c-d9d7-4f9e-b9d5-ed824fb7b402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 eac59cb6-61b6-4291-8dcb-783e70ddcb00)");

unit.assert_eq16(16'h53C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #449 f978060d-2072-4189-9440-c6608f0dfe02)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h0EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 c3eb3531-7f32-4122-8ab2-7f4223717f78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 ca95f24f-4c0c-4afd-8f68-a958bd5cbf14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 cd036323-600a-4e03-919c-88a178407d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 61ec4aa0-94fe-4e4e-9281-9f08ce9c105f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 490432e8-dc81-4539-a446-bc7017369f56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 0ddab69e-f7c4-461f-ae65-6a2b02e18853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 eb45d71e-26c0-4c2c-be8d-c2afa0d81cf7)");

unit.assert_eq16(16'h01C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #450 35347d5f-478a-4441-a5e0-b8d593150527)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h0143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 e25cf68c-32ca-43ab-9da0-b159aed9c376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 e3ed9c32-b4fe-4a40-af75-d86b42b844b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 9a9f261d-0dac-4a72-8413-89e331499455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 299633b7-569f-4218-95db-ec57fab59abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 e947958e-45f9-44e3-9966-53da37581817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 fc2bbcfe-16bd-4325-9d1f-3759718e902f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 aebd2de2-9182-4044-8fca-fddd17f5c2eb)");

unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #451 23e4ab68-28ad-46dd-8d62-c2946bb5a430)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'h0DEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 6bfda112-bea7-4f99-a039-ba893b0538f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 9cfb6ee4-42de-4bf2-a5a1-9dbef8259adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 402ae684-05ae-49a6-8300-3cb7940f2ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 82491b01-df89-4294-8a87-28fedf17c60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 86a4a252-8222-445b-a177-904022952595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 56b23674-d1a2-41bf-bd5a-1cd85835226c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 c00ea88e-9503-481e-a51f-c93597d94910)");

unit.assert_eq16(16'h68A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #452 53023c29-dfcd-47b6-b993-f41e8b154080)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h09C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 f7cb76c0-c76d-491f-a2f2-13ac53715a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 5daa0e6a-5263-4cbf-84b6-31438e1db93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 2f34482f-39b5-4fe2-8ab8-6e188ec05652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 1c49e3ef-b51a-434e-a5a2-f6c6b1c677d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 8d0f894f-377e-40fd-b816-528b6bfdf7ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 88ba34c7-f359-4446-8e42-54c44a61d2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 2b41e196-1524-4b84-b86b-3e4856784c6d)");

unit.assert_eq16(16'hCEF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #453 579d9845-5c04-4479-833c-133e78923590)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 39bb0951-a060-446b-aeeb-868bf8b26bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 ea0931fd-38be-4480-a328-551ceaea4998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 e761dd2c-6c5f-406c-b64d-c16f21301643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 f888e6fb-a788-4241-9756-9f4fc893bfa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 1c08517e-afeb-43ed-bd02-a24c7f6fe0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 c85097f8-6d25-448a-bb97-054638ae7209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 05dbdb11-640e-4e1d-a018-a766ca2d5cfe)");

unit.assert_eq16(16'h01C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #454 2d8a782a-832a-489f-9412-12c7bcf9efdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h0B93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 112c7124-edaa-4bc0-81c5-4df2511ae4e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 8449980c-5a00-4716-ab96-c3167150e51b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 fc030c06-44cf-41d1-b926-0dddf2cd018f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 f1e24694-0e6a-48dc-8ade-233636ec6c53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 facc6a4a-ddd3-4821-bf94-968aba6afb82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 36442ff7-aefa-4885-a8e0-93dd520d0c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 e8c1426e-f28b-4b72-b314-3ce80670e27d)");

unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #455 e664b7dd-843c-48bb-aa96-6c69b86af7bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h051D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 41c73465-1e1e-4981-a500-cf1c7e2de8dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 763c2302-95d6-4684-80b4-1c78e48d9d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 6ccc4860-4b00-4383-aa8a-dde447a163c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 67b6b9de-ecdf-4c7d-a117-d6d7a2445e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 29c5c705-514d-4c53-a286-7c7ea2606f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 74c888e2-f051-4990-8b45-8237ef4596fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 dee63383-c039-4a38-bf7b-e10a8222a3e4)");

unit.assert_eq16(16'h01C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #456 05dfc62b-bb72-4447-9313-cce9f3f9fa98)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h021E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 6c29ea05-ac89-44dd-8fd2-42f4b4899929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 602d93a5-f2a7-4e1d-b822-4820af0dc1c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 1b0cf406-bea5-4811-917f-0ad71844a591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 fdadd457-1598-4e22-a19d-0a1e1343a18e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 5fc0dd2e-2f89-4048-809e-3c339f23f2f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 27aa2121-8798-4d04-9e48-2ad067e91b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 6669a257-8b11-40c6-b3e3-d4696cb9d445)");

unit.assert_eq16(16'h6225, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #457 114301d2-97e7-484d-969f-541946740123)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h09EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 ad28503c-867b-49b0-8270-ac4d4410415b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 a711c7fd-c765-4f83-a664-924f7c4c6bd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 8fb12818-7885-455c-b125-729fe43166e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 6da96a2c-20fd-4e94-8cde-4425e92663c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 bbbce6d7-7e75-40bc-84d6-5b8cc5a0a61b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 3fab1e86-9c9d-478b-91bc-4c8da10769b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 c4c86b59-1b6c-45b5-8056-b661dca70a08)");

unit.assert_eq16(16'h69F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #458 f7bfc38f-ab48-4f3a-ad9f-e57580c46328)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h0FE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 5a196692-4691-4e9b-bc41-b149b1f57278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 aa822f70-a18b-4eb2-b111-8d5d3c4d5903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 1df992a6-5feb-4ef1-986f-1b37ebe8b965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 c7a7a305-db95-406b-b653-23851f5a1a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 c4fbe978-d1d7-4b87-b3bd-fcc4228947dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 a43db738-0477-4d82-a3ea-f6d9d04722c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 64272bff-b9d2-467e-8f23-f52b4b4f552f)");

unit.assert_eq16(16'h01CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #459 ce964317-ca53-4ff7-9cc8-40ae2c95fd0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h06AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 d3809ff8-d479-47f8-a028-686e78d97862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 db89b24c-9cab-4c5f-965d-912721656612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 adb0c407-5fa0-47ca-9f33-b15ede71c4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 f98bfd45-49e1-4bc0-b5d7-0862f1eae65e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 9a2170d0-565e-49f6-946f-179480cc2ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 565fbe51-0230-45ae-9d4d-7fd569e93e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 f9f32a91-0506-42f0-98ac-5a9783668346)");

unit.assert_eq16(16'h01CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #460 c8e00566-d7ba-4d0e-a415-47bc80a98849)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0145;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h0147, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 3df0bd50-a9e3-4dfb-bcf4-31b8a4d9fc87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 53f58d6d-fa18-42c6-a98a-391d89945d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 56b4c6f5-7572-4a04-b0a3-90d797088187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 c5efae32-3efd-4997-a7d1-b3833144cf72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 2d8fad8a-131f-45dd-a735-5e80ce5dfb42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 b74b8a64-9bc4-44fd-96e6-4697c7789934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 edccdf81-f89e-4291-b3f3-80bb16b51e39)");

unit.assert_eq16(16'hF472, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #461 02d1d3f9-20a4-4912-9f48-c377087dff68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 25590677-ad5f-44bf-8b0f-bdc00f12b5b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 75b47558-6931-4531-903c-325e37124bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 f4a20a7e-4f72-498e-9e85-c120bcfdb8e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 9265ee3a-dad2-42d8-9fc5-83aede62f2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 a7ed257d-504d-4df3-bfa3-99f97c94bdda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 1a679539-186f-4690-a038-c2ad0024b47e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 b406ef64-0bdf-452d-9489-6da8303b5d78)");

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #462 2baf6547-f08e-4e97-b6c3-cbe72785a394)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0052;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h0054, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 020e81ab-46cf-49d0-bdc0-f23742ee07d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 3a37f9d6-b09a-4ef6-aa71-5e9cf0c76d0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 1a39418c-0fa9-4d91-8110-6d2b9cd82c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 048f6f62-9d71-4918-84f7-3559070f1954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 6a3c7bb5-a6b0-4d5a-84f4-55ae36dc7d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 dad29ef8-5f6d-440a-8d4c-89aa50f872bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 cceaec22-0a47-4825-bff1-44c550f66307)");

unit.assert_eq16(16'hFD9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #463 2f793130-8639-41ed-bb64-817a3bba34ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0360;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h0362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 823e8d9f-242d-419b-8dfe-951bdff93cc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 f1920ba6-d65e-46bd-b576-8adae7347185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 76f5ea5a-ac7b-4da5-bec6-a598d9c561ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 4ba3aa0b-787e-4168-8263-cd93071a6515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 2952d8a3-dbd2-4c87-b352-608c6e89b7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 cefbabe1-bc08-4156-95d0-3f7f3fa05e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 be6db1e7-449f-4190-9749-a3a18e5a6578)");

unit.assert_eq16(16'h7993, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #464 80c90f04-fdc6-48d7-a10a-80a1c4a21964)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h04B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 c2009788-c03c-47da-b00d-99a54d505876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 a495ee3d-33f0-4a28-b050-98b891462a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 a5f611fb-5586-48e9-9b34-237726cbe9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 97cba671-6823-4d48-98fc-17e89fa21e44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 bf408e0a-7d25-45e6-b90f-5cd0b579cf5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 2d52acb2-00e8-4ae2-8132-ff5a62dbbf55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 0b1e7cf9-24e1-4646-ad6f-2e4b6a3cce17)");

unit.assert_eq16(16'hCDBC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #465 98d5edfc-c836-4e75-b260-9e49094811fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h0131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 62773c15-7cd5-4c8f-9e6a-37f26dd23f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 cbb140da-0c9f-49fa-939f-216e32ca968e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 59c195f7-81ac-4336-a952-085e44b95307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 aae4bba0-7d9f-4aac-a1ac-a879445f5b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 d37ed44e-ad1d-4816-9582-3dfd5bb020c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 83766bf6-c4c2-4807-9eb7-1e22fd5d94e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 4fe3d9ad-5bc8-4d7d-84b2-9cea197549b8)");

unit.assert_eq16(16'h362B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #466 a631dcbc-a780-4b08-bbe9-091837f0c8e3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 87bd6559-0fd7-449f-9a33-0aacc41c8ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 5d8eb478-1735-4d4c-ba95-671aee630189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 d23b58a7-0f64-450d-9e62-84f162968601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 bf2f51a1-1787-4f20-9c0a-611553f86e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 023a4767-6512-4447-b364-5927fab9f54f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 45a223e5-6435-49c7-8752-6af284870cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 8739d6fb-7d2c-469a-80c1-59faf4811a67)");

unit.assert_eq16(16'hE935, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #467 46030de1-d1ad-4b1f-92e3-cdbe93659b42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0115;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h0115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 0d4e3357-9206-431c-95e6-18a1c51c3639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 621a0e24-770e-4f6c-88a1-47b0ee3f8626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 1d56a760-02b4-47dc-a197-37faa8dcbba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 fd76e293-7a02-445a-80a8-ca7d518cbd76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 8f3e67f1-9dec-48a1-90af-bc928162db81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 ae614203-9dca-49e7-a778-46b82578e31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 e5b05f2d-b93e-4122-87a5-ccd912900bd8)");

unit.assert_eq16(16'h01D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #468 851b328f-45bd-49c3-bc6b-dde5403299b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0692;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h0694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 dd007924-246e-4af8-99bf-098dc29382d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 acdc09c5-95b5-46dd-8a73-1c74a63b334f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 3d750c24-74f1-4361-981e-ed2cb86a4993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 994e27f2-7bd0-49d5-aa7b-f0c4df2b8ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 72c5c15c-3109-4a66-b1d4-5cf3fd2f72db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 4329c543-4173-4aa6-b298-0d7879eb375c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 8c64f44c-f969-4f6b-be8e-71f32e5d34ac)");

unit.assert_eq16(16'hCD26, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #469 f34eb5a8-8915-4ccf-aa28-850959b4855a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0421;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'h0423, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 13060140-cf87-4a0c-940b-a5b0dc2a087d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 70dd05f5-9844-4b55-85d0-2252207edcd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 b7a50a4c-927c-4e4b-9dff-20f3d1cea60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 034596a2-393e-4657-9d2a-6b0bf5f98331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 4f4387e8-dacc-4183-9b7b-61869b475d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 7801b79c-5918-4ba6-a390-da879e85f2ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 f08e6da7-2c31-4780-867b-7fd73294be37)");

unit.assert_eq16(16'hF57E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #470 1e221068-2bbc-495c-bc13-315618b743bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h09FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 95002355-e4c4-48a9-a9af-4ab4ef0cf798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 11fa289c-3f6b-4e56-b7b0-f1269cadf2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 e10b8ad6-9deb-484f-a39f-33e81a4d76b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 7e4d273e-2fed-4287-ae45-a22fb89feb35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 a453786b-5c99-42bd-8137-9b862d194c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 61067865-89d6-4b95-ae94-e205d9559d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 cd96f2db-6067-4654-ae44-4d746164cf50)");

unit.assert_eq16(16'h01D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #471 979792ad-10a2-4a32-be9f-370198c21274)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h0F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 d38b5b2f-4b55-4b81-a73b-76ffd5427e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 d93354e2-6d30-457d-b6cd-03b38dcc5882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 a266e852-8971-4ce2-93df-9fd09f52e545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 e43b724f-038b-43d2-b206-7819ac536c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 a1e57287-896e-43da-b22a-4d6665cc035a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 fe51f792-212d-4fa4-830c-87d6c166b66a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 bd8d0afc-da04-482c-811c-b9d1d755fc97)");

unit.assert_eq16(16'h01D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #472 a3ad43e6-8fc0-4f5c-89ef-92589f867650)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0098;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h0098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 8a813b36-5eb2-4a24-bfce-115ac85caf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 b9f6adf6-18a4-418d-9354-f3359cd9dd10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 cd3e0e2d-5e25-47a6-8d94-53d54afeca69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 b0b877aa-af0c-4853-9604-96294ffd6cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 6290e2ea-b774-4f79-aecb-5ed1a06fff3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 c5f094bc-dc8d-445b-81d9-cdb3d7a21aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 67a6c693-388e-49ec-937a-1468d6c2e4c3)");

unit.assert_eq16(16'h01DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #473 d815d8b8-ab12-4d73-abe5-cec1092f9623)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 13d0c10d-4923-416b-a5f9-1d2e73b84c10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 8441d546-8e8b-4742-97a3-1855c48300fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 e4ee1bda-bb2f-4a25-9b8f-617d2fbad02b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 632f1eb9-3bb7-49af-9005-4efd9e68ed78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 74e5f8e2-f2d9-4f05-b704-cddd6c863b9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 41d924a4-8931-46b1-a139-e78d1150fe55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 59ce1afc-d2e7-4658-97de-c7fb050a21a7)");

unit.assert_eq16(16'h2D8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #474 e154ff5c-61a0-4de6-a679-8912dd1ed608)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h0E86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 a6f9324c-2ec1-4da3-8f74-71ea44976cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 90f525ad-213e-4913-90f1-20afd5054f32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 66334a8f-07fc-4c60-b62c-c668395cd06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 01618da9-35fe-4de0-b132-0df7e34a3625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 d49deb6d-fbad-4bc5-9662-aa58a2ff9c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 93096139-b1e8-4990-85e3-09014b21d9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 63fd5406-7136-4685-9fb7-851ebb741a6c)");

unit.assert_eq16(16'h0274, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #475 0e54a8d4-bca8-4e76-83c8-77036ecfc8a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h0C23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 eb16b9e2-2b8a-4ecf-80ee-ffb857fabe40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 393e254a-d99c-4820-8db9-a8d6c4c55267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 510f7b67-9eb4-450d-8b3d-50a973a4381e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 7686ea9c-dcf3-40aa-a2f1-41cd644551b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 bd5d5601-027b-46ff-95cd-a202d1d9c462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 54aa5294-032f-4cf0-be30-fff42ef86b03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 840ba949-0d9f-4308-80ed-628b9afc6090)");

unit.assert_eq16(16'hF8E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #476 e4994e85-8104-47b2-88e4-d5aa7fa9d198)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h031A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 aec057a9-738e-4b43-9535-ab37b0afb0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 89e1a611-1af7-4830-805a-0c2de900a86a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 dbc1d03c-a2c9-4962-a24f-da87dc4159a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 b027fb83-9ec5-4302-ac1f-34a6b1e0aec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 b33e876d-658f-4a15-9503-aa3e81ee9ca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 7a6323a9-f3f0-4031-9de9-5557f107dcc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 0c655a37-45cd-4555-9988-051e87fd9cdb)");

unit.assert_eq16(16'h01DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #477 ca371daa-01c0-4ec9-afd1-80470f28dc27)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h03FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 2e88ad09-f577-4b87-8f18-badac3d4fe1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 cf0a3dff-1b22-4cc6-a2cd-eb111e5d29b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 555d2da9-85e4-47d9-bca1-9cb74c6f8729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 43bce60f-51bd-4b94-8499-8308ab9b662a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 c1d552df-32de-4545-a81f-1c38d572dcdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 8570bf40-6d9a-4145-a41e-209e35326050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 fecca153-edad-4c9c-b696-0399ad14c326)");

unit.assert_eq16(16'h9DE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #478 fe8aa94c-d111-4bd1-a68a-3a15192a9097)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h03DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 400f43da-52df-44ce-adb1-427db9a69a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 59915a2f-68dd-465c-aa96-0165a23758aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 1dc2c2cc-b06c-4cfa-8ada-0c5ee20013b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 b1bce014-afee-47f9-9ce0-0680f0a12f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 a2128111-13e3-4357-9d4f-b54a5ed1a2e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 4405e645-2bdc-4583-8676-5dae076b6cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 949573f6-2b4c-49c6-add3-dcdb46962aed)");

unit.assert_eq16(16'hE10A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #479 836f35cd-ae5c-4ce2-ae10-6a20245ce54a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0869;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'h086B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 a47811bd-240c-4511-a282-c60673e5a3dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 0ae7ab9c-b8ed-4645-8cae-2afbb2e54da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 074b1c9f-408f-47bd-be1d-77264cfa4c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 596cf1c2-0f3f-4de1-a3c9-dcfd1df1e80e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 77500564-f48b-460b-8090-4b2356013618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 08c4fe7c-6230-4a99-b9d3-85383752da89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 baae77ee-608d-4b6b-8489-bf787372dd4b)");

unit.assert_eq16(16'h83BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #480 4f611bbe-b6a8-4169-83ca-2d1a7d4dc03f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0365;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h0365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 5f46a543-c20f-44f3-9a22-a52f96e98f00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 0affd815-a455-499e-b3b0-57a1fce5d2ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 b96c33a3-b2cf-48ae-881a-1b583596c578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 424372c9-c17f-4104-8d14-e8147f3dfe47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 5ba1b2d8-de44-42b8-9757-a492aab67878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 224767ca-672e-472a-a71b-7c6a14da9e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 35a46cc3-9819-4030-9bc5-9ea792236400)");

unit.assert_eq16(16'h01E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #481 d610fd42-78a9-4c2a-bf49-27c5cf7707f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h0C90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 61d1560d-ce75-4053-877d-d18c0d5ee7ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 f9224544-ea51-473d-97c8-eed99a01b9dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 8e61f300-8845-4829-9157-14782dfb0894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 cb37dac2-84e0-4e9e-8693-335eb4aab5f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 b2c22b99-d691-4676-b5f8-cdcfd0fc5017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 8276240c-7412-4f9b-b069-38716fb2aba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 a7a61ffd-f08d-4524-ab2e-875a6dd10699)");

unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #482 015d5ca3-c7ce-4b6a-9173-eefc06923baf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0548;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h054A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 ce79470b-3c1f-4fd2-b1b8-499675ede65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 58a5bc4f-8db4-4953-af39-79d6671620ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 aea9fe49-439b-4c93-99c6-2dfaa3f93c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 97c6a01c-e86e-4fc1-a844-4c9261dc9bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 8e138460-bf63-4231-9088-4f3948ac42b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 32d3a37c-85a6-41d5-89f2-d188c7c3d2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 ae74e4b3-1ffb-4b36-893c-bbf75f9d8c31)");

unit.assert_eq16(16'hADE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #483 60350f57-c71c-444d-a59c-360d9e883b56)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h064E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 9ea5bb13-0b2e-4c19-9a6a-26cbdf8d507d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 4214a982-d6ca-47c4-afa1-094c313b569b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 872a7cd7-bba7-4981-8c62-ef1def18ae9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 32ba7a3d-efe4-47c8-add8-45f9f8069210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 f84dd18c-7e8b-479f-b336-371ee16ad1ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 a053aa41-f807-455c-8ce4-156bafcadeec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 30921a46-535b-4a6f-a70e-a5d330adc510)");

unit.assert_eq16(16'hC172, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #484 87d21607-d01f-43f9-8e20-580d9e86e97c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0655;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 28b76556-4589-4000-95c9-5803e84afb16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 63ba5b93-588e-4d86-9beb-12e2f73ccaa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 7a9362df-85b2-49f9-9651-8576639f5f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 109b3c68-87fa-446f-9bf4-8d31d9b4e50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 ae7ece37-e40b-4498-a420-440fdb33a491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 051aa116-2b00-424e-970c-e16d48372faa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 195542f0-cd55-4089-80dc-3804e4a2b515)");

unit.assert_eq16(16'h01E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #485 56c64077-ded8-4401-821e-1e23ad0346b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h01D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 9f3bc4c5-a6bb-4028-9508-f5c3fcc3badd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 67c6e43d-58ef-441f-a0d4-bfec12544de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 d6196256-ef22-4db9-ba24-6d142e21a9b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 dc9c6ee8-d602-47bd-9855-7a50c01bb910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 c349cac6-e458-4021-b562-67030d30edf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 13f7292a-4b6e-4e7f-8ac9-d4fc543b3f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 c20a9855-245c-4507-a0e5-0c757c5b3463)");

unit.assert_eq16(16'h01E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #486 cae1f9c0-a453-4ec7-9a5e-0851ef7b78cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0978;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 b4e5840b-1c82-41e3-8c0d-5b1515419959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 8b59cf5a-612f-44f4-98d0-c4acbb092929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 f54d4ba1-bd4a-4ae3-9671-1cce859b383f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 bca3b16a-17b5-43f0-9b09-cb1d15c84b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 f522f91f-c65a-4e9b-a92b-2661701f8738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 7a4b4ea7-4943-4ae4-8f1c-15919fe2ad92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 eb3cbb6c-e0af-4976-b20c-8b1431913707)");

unit.assert_eq16(16'h4138, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #487 69a0f370-3858-4c7a-8172-c7dd77c47740)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h016A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 a7b154ae-2066-4fc7-accb-ca131527f4a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 aeeb4425-a673-4d6a-9014-49c91c67ab0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 8134317d-af61-43a3-a402-d611c0f7d3d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 d7a2217f-02ab-44d0-b325-c23c66d62a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 ce47c7cf-5203-4336-a0c7-7b53e967a58a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 dfec1d69-da03-43cb-8237-a80fd5332935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 c8ced256-d78e-4433-9bcc-601f88155b79)");

unit.assert_eq16(16'h01E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #488 3881d455-ab67-40cf-a754-2539f205fc14)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h0F16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 91f26697-7eba-4f91-af79-7c432f1a1b10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 7d94acb4-90ba-4980-a99a-c8cca596fb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 e434269f-68aa-48a8-9f87-183fd884f106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 d9ebb6cc-9b5e-4518-ad87-a33d83ee8ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 47cb179e-e447-4fb0-82a2-b686338302e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 4875f397-94ba-4ba6-abb6-ca91e0114065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 0617cec7-da34-45b4-8a15-0c3d4b64222c)");

unit.assert_eq16(16'h52F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #489 497f35b6-5a8f-4b13-9b49-f7ce6b979816)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 a22baa89-99d6-41f7-a97a-0b2dcecedec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 dc7af1c4-fdff-42d6-bb65-67b4c09c4eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 8e5bb470-e674-4521-9b10-31be924963ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 c9711983-828a-4be2-935a-5b199bbc29a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 b9703676-2da1-40c4-a2a7-e45a3c1c6027)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 c8e2fd73-14aa-427c-a9c8-d01520d3c283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 bcf4148c-2e8b-4f2a-872d-8397b2bb856d)");

unit.assert_eq16(16'h9D6F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #490 f8f49245-a9fd-4960-af70-b126afd0335a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h0F83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 26306115-befc-4f11-a5d5-c1b7ff0934cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 2330e428-7dd9-48c4-96bd-25012326b545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 edb08c2a-9e53-4122-a662-53b593a5c765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 ab3efbea-6049-4126-bc44-7c71676e6e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 b4823a49-4d3a-4e73-a211-932bcdb7ac64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 fb6fbc73-5533-4d62-af90-761ac77dd653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 9678e7d4-78f9-4793-8e05-040fd34b82d1)");

unit.assert_eq16(16'h01EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #491 9acb9e1d-f061-420f-afb4-e8182662b800)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h00F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 d85b9ea7-d946-406b-92c9-5b14b97180cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 f8e2ad4e-a664-4e5b-a580-e5409b2a143c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 39099c38-ca19-4d58-8887-9d53bb6d0351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 b6c5783f-7845-4fc5-a28b-84bfeea5fea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 3cf4b39d-b17f-42b8-9a6a-7cfc129a9299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 27c510a0-a77e-4261-904d-0ada7cf73587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 f67f39c9-5417-4927-921b-2bf758f33f80)");

unit.assert_eq16(16'h5D90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #492 1148d688-1b8b-4ade-9cdf-12965f98bf09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h013E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 b5aca5fb-ed10-4a70-8d40-737de2eb833f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 d6df1ce0-7052-4f88-8148-444e02390c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 83d7110a-59ba-4ea9-95fd-07c034827712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 c9805d36-fa1c-4b31-8309-26c9fe695392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 0d503abe-9244-4892-902b-b5b17c283e47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 82f7bc71-ad85-4450-86d9-5666c75c2886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 a06eb31d-2b4c-4288-9f82-539cc8da0f86)");

unit.assert_eq16(16'h01EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #493 fdc79616-cf2c-4d44-8033-8f0258575c56)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0935;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h0935, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 603b2738-86dd-4fe9-a179-c271fc6f32da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 07f78767-57a9-446f-ae8c-58b9348c8d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 be782e3a-ae6e-4aad-802c-81228285cbbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 74259152-3e89-4861-be1b-7acf20f18cd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 76c6e95b-a82c-417f-bfed-29f17dc10cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 ffe06133-8c5f-4db9-904f-ac848f721842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 e39a4167-51cd-40fe-9f32-716da1b96e32)");

unit.assert_eq16(16'h01EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #494 bef644aa-0ff4-4841-81b9-5160da38cbac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h0F8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 88a7870b-e574-4130-a4bc-e0d5a9ca29d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 ba50dc38-56d8-4755-ac26-3e10b866d8c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 d7033ad5-7d0a-4d1c-acc6-34de9b9174ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 fe6563d4-7955-4b5b-a4ea-0bf7b1a8fd02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 85e0ae25-e16b-4d9e-92aa-bca073ad75df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 026a9e78-806e-474c-a744-d7104f6b703e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 62325210-328a-4c8d-b371-e91658301789)");

unit.assert_eq16(16'h06F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #495 46b565e4-705f-4480-be01-8d24fffc7c38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h087B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 8dbf3b7e-f246-4d6a-aeb7-81bedd3ffed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 9594e8fb-0340-4188-aa50-bbb409d19bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 eb56ddd0-b13d-4316-8afc-4097616bb091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 a00c5dbf-3b01-457f-b63a-304903efc8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 7fdddb17-d4ba-4095-80ef-701bb6c49dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 c54643a9-20e4-479c-ae1c-7da47548273a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 1bb935db-8538-4bd4-a93b-b42da162feee)");

unit.assert_eq16(16'hA3EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #496 5d3769c1-d7e5-4366-9f32-af3e4bbc351b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h0696, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 b6a8c2f3-31fd-41eb-a8fc-1a73c0e4e7f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 d5f38843-ba62-40cf-adf8-538c0d8f618e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 8041f9f2-a739-493b-9ce4-b095b12bb60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 97128277-8a76-4bea-b258-f1c3bcec5da9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 5d78bce1-0edb-41c6-978a-11966ed14454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 b387a55c-90ff-49a5-a79b-c92a73172a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 7dbd7e67-14ae-4628-b72e-150488c68385)");

unit.assert_eq16(16'h2DED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #497 b3575d73-68e2-453c-a5b0-5113ba47e2d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0584;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h0584, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 46425621-d667-4ab9-97ff-a25bfb25240d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 d71f672d-090e-4d3d-b56b-7edeb1ae448a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 fb46ba2c-cf42-467f-a5e3-95d3bbcdfd8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 91656d0f-569e-461f-9ffb-b970573a034a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 324fb3f7-50c3-461b-a4f6-ab780df33da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 feb956ac-2bbb-4890-8645-a55fb5626a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 950e4329-a205-4e41-b95b-7057b9bf8728)");

unit.assert_eq16(16'h01F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #498 ff4054e6-ec42-4cdf-ba7f-a13e1f0de1c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0979;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h0979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 ba1d68a6-4871-4329-ae7b-68b046d8f292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 565b8766-9fad-4b18-a0d3-a2c67d17dd2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 6a0b1629-be76-45eb-a2cc-643eb7cf288a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 d6bf48fd-ff01-4b78-b5d6-440ae899413d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 fa86bbfb-986d-4fea-a738-88abdbb87233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 d67af10a-eeec-441f-87d2-04acfea3a43e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 528042bd-347d-49da-8576-d9682ccde443)");

unit.assert_eq16(16'h01F4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #499 cb5f32a3-e021-4b9a-a45c-3de8b886bed1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h01E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 9b499bc7-f45a-47f7-8992-3839a2d20221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 1449d519-7d8b-41e0-a4ec-88195802f55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 5c8bcffe-b784-4372-aeda-52fefbc8a819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 c24041fc-63f6-4499-bdf2-dbb71aaf122c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 1fb1f19c-9c78-471b-b4ae-984984736370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 ab1d4059-e32e-4e72-b9fd-b348fdfcaa01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 b56946c6-a868-4f40-a519-99e459e1db0a)");

unit.assert_eq16(16'h12D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #500 b3d6072c-4bf6-44bf-9d21-ae16758518a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h00E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 bc859f92-2c72-4809-9ae8-753498d07de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 7ebc9ff7-2e88-45db-bdea-5e422b680808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 1e3a2cb4-5384-4885-949a-5ccde21ca805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 af9729d0-6227-4ebd-a709-e94aae38ee6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 6b7d59de-c7ce-48a8-851c-ee38e2211373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 31aed5f2-54ae-4a7a-8ebd-3cda0d6d7a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 48df7724-6f93-47e5-a8f8-409627d8a6ff)");

unit.assert_eq16(16'h0C35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #501 c627d146-b6d7-4765-8842-670fd132c01b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h09D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 0e0449e2-80fe-4537-9a2d-b5a3949cb34f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 4315740f-36d2-4ba1-b1f8-be6615940496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 2db5c633-2059-49f9-bb0e-32c4b16c234e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 f118ecf9-2233-4b2e-955a-d5ada3a22d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 59fd9046-32af-4ded-a17e-966c8e7ce5c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 f45c148a-7a5e-49c0-96b3-e4d3a7a2e6f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 6033339a-5448-4252-bb84-6981a9f8dcab)");

unit.assert_eq16(16'hA8BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #502 f7c468ee-b230-4da8-9113-068de8d23d9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0372;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h0374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 4600e641-87f5-41ff-86c9-6a6408819640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 6aa86b42-012b-4b4b-9c24-4d19aafa2fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 fc22498f-507e-47f0-ba9f-e93bdae9699e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 5554a6df-9439-48d8-a2a7-aa55563335cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 277a1d8d-0ae3-43d8-ac44-f84a28dcbb68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 c27b0b33-1c08-499e-9093-86eb57f29ed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 4c2d18fc-7b5e-4deb-95b3-25cc60e7f520)");

unit.assert_eq16(16'hF912, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #503 7fddcbfc-628d-4b53-b2ad-339e0a8a13e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h0B34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 b6267e6f-2098-4aaf-9a9e-a049f2205c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 661baa44-2259-4f4c-b35c-3187421542d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 29093fa7-ea85-4b65-b819-788cca9faf60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 881e718b-eb66-4179-8915-c71c318c85e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 87add1f8-a9f9-41ee-a8ed-dff0b629f00e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 91b911b6-2911-460b-a4c3-3d8159610de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 25bb7734-294d-471a-938a-ffecbd6df9df)");

unit.assert_eq16(16'hC3EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #504 cf41bb18-a772-4ef8-a99d-113b3b562429)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0094;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h0096, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 830e08d9-eea7-4788-b025-84267de3e504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 2cee6404-6cc6-434b-895d-2138ba372059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 2f3ef0bf-5e92-44af-aa7c-0e419bd030e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 37f219d4-f16e-4e6f-b278-dba20388601d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 a047174e-f2f7-4aa4-8a16-7c7147dc9f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 3251d6c8-84f3-4ab9-bbe6-fcc31c2285c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 7d10a9b3-e199-4a21-9650-c5bda403c728)");

unit.assert_eq16(16'h0A35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #505 b21456e1-9fb1-4633-94a8-ab79d5bea55d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h0A2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 dc409be7-1992-4865-834a-a06c5c5c0722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 92dd9b5b-6b64-4fb4-b7bc-e5ad4491d221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 a62ebb90-7340-4ffb-b64f-05a23b5fffec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 d96e0ecd-eff1-4334-bc27-8b522c287d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 ba13fcfb-6f83-46e2-9887-8de8780e29c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 fe4f5642-9fae-4a24-9e97-4fefad6917ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 0336623d-f768-4080-ac02-55994088e589)");

unit.assert_eq16(16'h0660, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #506 1763e160-e5e5-42d4-b4a6-747cb2170d65)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h0C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 48287735-584a-498a-8920-3e72e19e82ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 3a7c6b30-6626-4ddc-b354-392d16cbefcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 f72514a2-f6a9-40b6-ac44-99fcebba9482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 e4105613-4913-452b-89f1-2e14d3b3b629)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 450dadbb-b278-4857-b8fe-ed4d6271bd60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 11bef5d0-0dec-4710-9217-1381b04566ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 e270be2a-992b-429e-b05c-c3813f1b20b5)");

unit.assert_eq16(16'h01FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #507 b289e701-f7e0-4302-8bd4-c5c006a2c7bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h04E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 f0d964bd-0e8b-480e-bbd1-a7c129b50dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 8bf926b6-0377-48f4-b3fd-349081a4435f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 1458d39f-ef80-4fde-9133-1aa3897c1a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 ec05fdfb-cfe2-4194-9b57-8bca71ccbf15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 f7f80cdf-a0c3-4b14-9303-ba69f200b191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 31f1200c-890e-45d9-a88d-7aed4ca5ddc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 269b48ea-262f-49e1-b96b-198b69321927)");

unit.assert_eq16(16'h01FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #508 ac557088-e189-4699-b7bd-8bf57e37a4b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h0BBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 a8bc8f66-9bcb-4d15-be78-0580fa68be8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 ee1991cb-0135-4824-b8ee-b0066bd16474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 0b10a935-c8e5-4895-88cf-65edbf3dc660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 1df10cf0-0a72-4e3a-8e00-b61dfdca6562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 2c7756e8-34e9-4dd6-b991-e8f02e1e10eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 2584dea1-fe00-4274-9b3d-2e802209fd76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 8de2230a-00f9-4f77-95a3-2f2469251ed9)");

unit.assert_eq16(16'hC070, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #509 ba09a14a-9fa2-4c26-9081-755417e5cf6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h04B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 c12e7346-6273-4418-8af1-01a09a2c107a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 fe5f49e7-09d9-4de3-9b20-0d4008d06e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 abd59b78-c2ed-4f72-bafb-4b428fbc9425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 2f8f1325-64c9-40e8-b6b7-b2be3f4217d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 791c6908-917d-41cd-b8c0-40659d7d83ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 b51b7298-8538-4b2b-a38a-f0111fcd9c81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 71160b2d-286a-4b42-853d-d3aa1f3d5d00)");

unit.assert_eq16(16'h5D00, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #510 86e78939-79e3-49ac-ab37-fc21376f47db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h04D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 3048b57c-3375-4a41-8919-b60679224f46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 1253a3eb-eca0-43a8-b1e3-63e50378a8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 31d10860-fa3e-44b1-9001-756d4ecd0c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 cb662541-f0d4-47f7-92dd-4acd0b88b179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 49079848-84e3-48e5-92b9-a2d9f6cb6410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 9f4be4f8-a12f-48cc-8855-87d28094981a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 395fb0a0-155f-4ddd-b095-317b499df9fe)");

unit.assert_eq16(16'h4C25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #511 78cb9c0f-291c-4bec-aa8b-eb8bd7125c4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0200;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h0B1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 539d281e-fcd1-4ec3-91e1-2dde42e39a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 9a02d167-a041-42af-9657-b5725d0ed19c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 6ae20923-4ebc-4fd0-91ff-b5f1c0fe5bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 fae6f8ce-f1f8-44d7-956d-01f495c5e2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 4bb61dc3-7bb4-431e-a14b-421a1f8f4cdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 ea0c974f-4539-4949-8485-98fcfccd8b3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 2f062c78-787f-4894-969e-7bb44e5619d3)");

unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #512 f3283bd6-b0c3-4e6a-9ced-9f021654e770)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0201;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h06C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 9461dde3-fe18-4f1f-b51a-9369e608182e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 611e1ab8-4878-4e95-a3c2-94ab4c1bb238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 6b702002-b0b1-4af0-81bc-6a6829fcbb1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 e6d8e106-a099-44d7-b6c3-d3bb96d7004f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 9e903009-2d51-4e2b-8dd7-54bf165bc11a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 b599ce0c-c893-442f-b0b9-c9320ffe2810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 923214ca-c317-4837-84b2-d6ec75492909)");

unit.assert_eq16(16'hDFD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #513 f97fbea2-442f-4d97-a487-253e0b2c21eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0202;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h0D03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 5f8ea943-3704-4608-aae0-42aa34a14d48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 cbfda635-886a-4768-969e-5309aa663ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 77c185a7-38ff-4bff-81f9-05c5bdb0cf7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 82044dc1-86b5-48a3-aa62-5a855b4984be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 a321ad6f-e41b-41f1-a79a-f9b102d3f322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 df86b6f5-8fe6-479c-93f4-0b91d2f14813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 97615cd8-3ebe-441b-9fb3-8931fa19e79e)");

unit.assert_eq16(16'h64D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #514 e17bafd2-eb22-49cd-85cb-c76aa2d88840)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0203;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0907;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h0909, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 a6c13c21-cdb4-4732-9eca-39d4588f3347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 71a542f9-46b4-4a56-8de7-83ce5e471c49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 ef3679fa-96bb-466c-812f-d805ed0d3e84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 2a8e13dd-e513-422a-a2ac-e5dde0adae43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 946c9a26-5ded-493f-8fd0-e13c49c42ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 83762cce-02a1-4e34-a3bc-5625e987f405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 6f5fab85-4dce-45a3-9930-119a91456aa0)");

unit.assert_eq16(16'h59DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #515 09e21519-c71b-4348-803f-759c8c32c686)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0204;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0107;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h0109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 4925b015-d470-45c1-8242-5e0139255db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 5694c5bf-e844-4a23-a132-0eeb0ce833cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 d3bf4104-389d-4246-a8bb-b1d93d257bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 70843369-b42c-4cd0-a864-15aa92af5654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 93353adc-5b57-4f93-b1bc-6d6d6a12c88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 6b028842-8a61-4e29-baae-40f1714ce2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 0737bea0-023a-4fc7-bc49-1c0d26d35717)");

unit.assert_eq16(16'hAC79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #516 4c3d9166-27d6-4a7e-b088-8879e2f3ce81)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0205;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0902;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h0902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 4a1ff8c7-f20b-4bf6-be9b-ea6195958170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 7ab7134f-cea2-4c01-a6ee-5874d3736ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 92a069aa-cf96-4952-86ce-05e7e9de24f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 ee78a108-06a1-4f8e-b7b6-f0d368932eec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 07128436-708b-4366-8e7c-74f205875e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 0e5cb06f-1bd2-4d0c-8699-80a9975f79f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 3638a548-e560-4c1a-aa86-9d3edb5042d2)");

unit.assert_eq16(16'h0206, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #517 f7cf45be-b7de-454b-9cb7-58a3612fd1a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0206;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h0C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 968e5ed7-a49f-44cc-b498-bc81a21dcdb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 999ed41e-798a-4f12-a7f0-2ce93dd86ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 16de00bf-1ef7-4c36-830f-c49afce1e53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 d77778b4-b7e6-45ee-adc5-5b90878db5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 effcdb6f-a163-4c51-8ee1-71f4fe6c0814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 bb40bca5-3b6a-41e7-a54b-e0e8cb940b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 86b015e8-af02-4634-86c5-13fda561f56f)");

unit.assert_eq16(16'h0207, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #518 38ac2c5d-40be-4298-a180-d5161235db98)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0207;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h0C53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 15d5febc-b7ce-485c-8402-7b4e2de89c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 61526d4a-2d67-4188-9433-010644c14350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 1953a113-178a-4fe7-bb29-6bdcaa46640c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 615f32a0-c7c2-4c59-96b0-d58a62c03494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 077f3f50-2567-4240-844a-1afa2ef06c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 b72b54b8-7cb1-44de-9058-7ed25e4c81f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 76059ca1-003f-4f93-a288-1402081f6a12)");

unit.assert_eq16(16'h0208, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #519 ab94673a-3e36-41b8-b3dd-7c7f7288990f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0208;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h0E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 9538de5e-210f-4115-acf0-9d35cbce3921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 694d26d2-270c-4672-9db1-f712f72341fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 84fdc4ca-09e5-49b7-8955-7a1917bad87d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 4682d205-8060-4393-be08-2123dbd2a2ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 fb6eca0c-3ede-469f-86f9-6b59aec40332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 fb153f72-d46e-4642-9b6b-46172a04e2a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 d4251821-0c7c-4069-9f23-d30dacc05693)");

unit.assert_eq16(16'hAD38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #520 c09c8c6a-4e9a-495c-b2fd-77cecf9301ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0209;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h0E35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 e1092ae9-55b4-44d9-8144-acbc729146fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 7d298845-952c-4bdb-aed1-077a686075fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 577088de-354d-4c5e-b156-775a731f58a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 02022e1f-f878-4543-acef-a3ef0140490d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 37c333b3-1e89-4b4e-afbd-8a7ddd4f85e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 3cdf1b39-321b-4497-9eb9-684130fba748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 e6906094-0ca4-46fe-bcd2-711a3f2b5df2)");

unit.assert_eq16(16'h020A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #521 f406eeb0-53a5-46c4-bf6d-9cd85fe14ce0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h0D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 0d70b404-6765-40f0-a85e-3b4f68b9d7cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 73bd6cfc-2137-41b8-bbfc-15cabfd73d4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 bb9295d7-c29f-4652-a15e-2cb857278a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 a590d5dc-9d41-40aa-a824-ba86007ac9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 f25734e7-0b1c-4022-b8df-5e17248c983c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 51046818-7025-4311-b60c-0aa79161be61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 44be6eb3-851e-4a80-8282-0a2375731741)");

unit.assert_eq16(16'h020B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #522 73067202-ba17-4fc4-ac14-4deab4576087)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h026F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 d99368e2-c0ef-4bf4-bd13-1426845e1a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 2c9f1648-d5ed-4679-a2d4-35dd48cbdb5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 f3ab8a73-37de-4ede-a85c-ab9612bb67aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 53cc164e-8e0d-40fd-85aa-4a4232b4d74e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 cf9854e4-7e83-4030-9012-e78c1253d2bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 3af937d4-1851-4fe7-9696-af13f39af7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 0874260b-d416-48b9-8f39-bec10d8c1432)");

unit.assert_eq16(16'h020C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #523 9a4df013-7035-438b-8ebe-f7a7b186df9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0714;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h0714, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 de103965-6a25-4e04-afb8-ee1c601647e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 1696d535-9882-45cb-925a-e0f1ddeb961b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 4953bbb1-811d-4c22-a3a1-7ef2dae42010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 320b792a-b765-4d46-9956-297256d6abb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 8e707911-a512-49d9-8935-e7f056eed2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 9a9b4ecd-2814-45b5-bc4f-fb2525abbdc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 18faae10-206a-4841-9a4b-a38a0a92cb62)");

unit.assert_eq16(16'h020D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #524 240ed1f9-8658-42fa-abd7-9218a9566c53)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0555;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h0555, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 c113c715-4f7e-465c-86c9-56814763f46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 3b34303b-8661-4161-9712-f0e9a07948bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 67d9a9c4-a70e-4f34-a75c-7bb2e9bbcaf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 7d4f1ee8-d280-4ef8-bbed-9ce4d004b19d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 0c02be8b-4526-4bd4-b14e-7455c3249e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 1cd0f851-cb23-4a51-bb70-c9974fdf4801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 cfb3952e-fae5-4783-96b4-b336c77aadcc)");

unit.assert_eq16(16'h020E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #525 e03efc52-e55f-4b3a-84bf-961c9b70847b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h008E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 393690c0-5232-4f47-9464-0cd7afc9c41f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 a1116f9c-8324-4c61-be84-ef15615dd23b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 1dd3a547-20ff-4379-a556-68c69830fd64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 1b391d86-4f71-453e-b198-95c984a71fdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 2c0c494f-1d89-4faa-a5a6-8bcc6a8887b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 3cff8c0f-e8e8-43a8-9ba5-468753832396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 5f7b8dc5-73b0-49eb-b7f0-bacbf2bec7fd)");

unit.assert_eq16(16'h9622, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #526 a5e2f05a-a339-44d7-ae4c-a98055d3290c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h0F1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 0049defd-5c7b-49f9-9ef2-b4937fafc93d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 b07df36a-b0f9-4823-8dc2-243478b4e217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 0f169bef-8298-4598-952b-6add5d6e630d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 85ddd67f-a592-4e40-8762-1b060f39e4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 4164d2fe-e839-4b9c-8bec-f2cbcb39ec5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 cec37516-c2b1-4b32-8018-eed18157a4bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 b7cac50c-0f8d-4726-beab-01a5771893bd)");

unit.assert_eq16(16'hF1E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #527 92859e3a-0739-4366-b0c1-f507148fab8b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0210;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h0DAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 d21e5e43-6bf9-4e4a-8c57-257dde775872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 3c713eb6-248b-4c93-a053-1b0f2073110d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 8ba451c7-54a6-4173-a6cb-752dbfb14358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 6722c6f9-94fb-45a8-8df8-6f74720286ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 dae1aa5c-454a-46e7-8488-9fd23027708a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 f2b98f45-011c-4411-b60d-cfabf168c3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 e807c4ef-85ef-41b1-9701-8035333ad16e)");

unit.assert_eq16(16'hE5C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #528 c2d96e20-1939-472c-a5d7-b491ad97d4ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0211;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h056F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 bf34f39b-5c29-43c5-a15d-e453bb9dccb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 3580e94d-e970-4deb-b1c2-4faad34eab7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 a50cf458-059d-44a5-b5cb-dbec71766407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 cf453207-eec1-4788-9f5e-e968848497aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 351c88f3-2dc3-41fa-b62d-2156c818a381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 d9d09166-ebfc-4fbc-a37a-144b82c610fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 2054be04-a4ef-4c1b-8e3c-ad0c27993464)");

unit.assert_eq16(16'h9D30, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #529 ccfb8bf4-26e4-4d56-a18c-fcc5a8f3eb43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0212;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h08F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 f36e2eb2-1093-4dfb-acea-00992089bb4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 84d61cbe-03ed-4657-9e08-b615f7da36cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 3d85fb3a-916c-49c7-a217-a8d48d1bba2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 a5b3da52-9360-4e89-8aa0-8cc41c174206)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 071211bd-598a-4617-b2e4-93b5078b25ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 8c0b8357-d0ff-4c5a-9f79-406819f1e69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 845412bb-a25f-4db2-b6e2-423f4a3d68d3)");

unit.assert_eq16(16'h0213, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #530 3731f6c7-9bf6-494b-bba5-30498293e7cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0213;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h0CE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 f3dc4325-48a6-411f-8934-b4180918934d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 90cf3659-cbda-4fbb-9668-921ea5a01ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 5042e7bc-e7ad-4973-bf17-25f3540b4be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 a0181ee0-3b8e-44c4-954d-52d0f0632136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 216c6bfd-6a7e-4882-8033-5c8ceff66da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 8f81a6c1-f8b3-401c-8471-6b6d7c31bc9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 9d05a6f3-67d7-40db-9d8a-e0893ded7511)");

unit.assert_eq16(16'h86B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #531 9217f845-d123-4dc7-b1f6-97980c293b58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0214;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0873;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'h0875, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 76434b07-f17e-4bea-a6a5-849e747bb667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 105e3ed3-f5d5-4b1b-bf2e-fb62ed6d7cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 7c2695ff-85ec-425b-bd15-2de978cb133c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 f12da202-510d-4f3e-a10a-25d8f7a3bd53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 895d79bd-b058-4a6a-87b2-9233e614d4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 6371cdba-56af-4b3b-a435-93205ffac6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 57010007-602c-460b-a42b-add8394488ac)");

unit.assert_eq16(16'h0795, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #532 854ba9f2-263f-479a-ad8b-5f0df2521522)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0215;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h02A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 e7a94fb8-522a-4d1d-aa41-f209336771f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 1ea32219-a56d-4dc1-95e6-7308e03df6b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 9e98be78-4b5d-49c2-b19a-0da13589f0e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 1f1382e4-cf14-4115-bd11-cec595f9ac0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 e1fbdf51-3fc5-4f84-8b2c-d63bca4c0d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 e87970b0-c5f0-4b1c-89b3-9c2bbb41e9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 387470d5-0e62-4572-8653-f559e17df72f)");

unit.assert_eq16(16'h0216, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #533 2b7a5281-dc61-4d94-aa73-620275a69138)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0216;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h06EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 3f19c54c-8367-4a1c-ab0b-1abbd7bb0b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 50def078-c260-4f02-8454-8502ed72c9b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 5edd76fa-7804-4441-81db-ca36fdf75198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 95b5b123-8a6b-41ef-b079-d24c660dab20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 74127bf4-d83b-4b07-8a0c-3656f608a693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 60e8c809-3109-4779-9787-09ceb25bace3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 a57bd375-07cf-431b-82f2-fbdc81fddc29)");

unit.assert_eq16(16'h0217, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #534 59788f23-0e4f-4981-98d3-22f96a19f54c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0217;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h08E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 c47d7e61-d712-48bf-a665-c2fa81dc923b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 4053e4c3-689a-44dc-b3bb-d8ea587d01bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 73055f56-71cf-4c8c-bcdc-8f45ddd339cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 d34a41b9-369b-4af9-9237-6cfba569b92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 d929a915-2d72-4f1c-9a38-241fa802763c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 a11832fd-6797-4767-94ff-a0fdcb505a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 0aa54f3b-d2ab-405a-8b2f-6e23ade53174)");

unit.assert_eq16(16'h0218, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #535 3a65fbb1-f534-42d8-848c-4d6245062af9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0218;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0886;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h0886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 559f5146-4fb9-41d7-b5ba-dc6db6ba53a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 2badbf75-e989-4047-912f-2916b756b75d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 14e304a1-6810-461b-a9e6-d096a104cde7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 2339180e-ff19-4863-8a3f-4836b2d53e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 3a4710af-faf0-41af-a671-b71f598f4184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 d46bb4cd-b573-4dc9-96e7-003c6fcf136d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 90f1903f-2b89-4792-b60a-5bec01e07575)");

unit.assert_eq16(16'h0219, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #536 daaea246-6e6f-45f1-a48f-6498b27bc2bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0219;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0004;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h0004, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 75ea0e1b-1874-4166-b76a-b8d9ba3e8a19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 678b509a-c4d4-44fd-a6e8-688cae424c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 8b7ade45-afe6-48e1-a0b5-b8bb496bc756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 d474eb9d-4e45-4e2b-827e-0cdc6b36cf93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 9c973453-c60e-466e-a1fa-1932979e265b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 5d178da9-48fe-41d4-adc0-fe75f0404cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 e3c8b790-aa79-4101-97e9-780739613e84)");

unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #537 81cb882b-8622-4c74-8830-097aed87f679)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h0DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 7c456df9-76a1-457c-aba9-30e4c8a41fcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 e9551a50-248c-430c-b7bc-fbe1027cbe8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 2af17e05-7398-4d0b-9637-ce0eb2d51121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 e4847db1-fb00-4f84-bdc8-b2c42ec562f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 12a1703b-a54e-4bf6-b3be-3f52f17769f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 b122a73c-bfd1-4b82-ac85-f63100c04987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 cae997f3-7e8a-4616-86ac-cce586131017)");

unit.assert_eq16(16'hE51F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #538 06d3c5cc-0e22-482c-8a66-4870ee84d9ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0565;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h0567, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 1e7ed9e4-b553-410b-8093-6a24eaadfab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 a2fea7f4-be28-4d3d-b330-b2090705f295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 aa847e3e-d7c0-4847-938c-e133448ac8da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 63e4aee3-82f8-4fdb-90fc-25b5cd5246fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 594b70d9-1bda-4216-ab34-246262f130a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 cc672ede-756f-4420-988c-baadc23efb6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 5e1ddf03-8756-49d3-b58a-d2bca6ece7a6)");

unit.assert_eq16(16'h78F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #539 cef24370-6abb-427d-98c8-2c12bacc2f7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h0BE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 7da2bbc5-7410-46a9-826d-4d6a2248e92c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 d478835f-5172-4688-a694-34a1e331dd43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 473c8f13-5864-4f8a-8641-449d09648a68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 ea95d525-2345-4cee-a61e-eb2c1dbaf940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 d18df448-f74d-487c-885e-6e9f308903d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 071fb55b-e3a2-42c5-9051-1e186a37f6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 ec541fdb-8ff4-4684-b00e-e2e7cf57be36)");

unit.assert_eq16(16'h72C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #540 c84ecf5c-83ae-478a-bd4c-0f81d2f44ddd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h0E79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 1ec37d5e-d5b3-4bd3-adee-90581d1b933f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 3e12c80b-9f02-4df6-9a62-4e1395e8547b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 bec69628-35d8-4422-a0b0-ed66c41403eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 21e6d9a6-2171-4155-81fb-bbee57bd1c97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 7f5fe7b7-2949-452c-b16b-3c23288b5d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 e35a7ea0-4024-48b2-b0d8-e2537f5a456a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 a2aba296-30ff-44da-b30f-20da20a0178c)");

unit.assert_eq16(16'hA72A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #541 64cec954-24b4-4c96-b78a-56ddcad98a8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h08D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 90f8aa70-8f64-441e-98cc-44dd5d5f5411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 dd72f878-ca95-4ff5-8759-a52c8fd87012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 7fa84dfa-627c-4802-b54a-073cfbbe028c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 fe6cdc19-cd55-4e6e-80fb-3e56b0cfda1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 4f224b5d-df36-4a88-ac6d-a30e403d65ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 e8558470-cbe2-429a-a7d6-f33fb076c893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 1852fecd-eb2b-4621-a615-656880e3db4e)");

unit.assert_eq16(16'h4350, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #542 d89fd31b-ce11-4fae-a18c-30d5deeee841)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0909;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h090B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 3b4fee64-27f5-47ab-91c5-5082396af2c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 043aa13e-9005-45b1-a66c-1b86768aba96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 e61eab98-2fc9-449c-8e1b-b9061a18eb76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 102320ee-e3f2-4379-9d05-74c138bef946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 f5702836-436e-425f-9fd7-deff2c0f0530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 b20822a9-d5f8-4745-9295-2daa524245ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 b5826afb-ac93-4135-b4f0-92cfa127b62f)");

unit.assert_eq16(16'hCE83, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #543 bcba67ef-61c5-4faf-9801-7b78a93998e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0220;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'h00E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 b88c0955-314a-4f5e-9f1d-51548419f752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 54ca6387-1e0c-4da5-9e09-efc07ecff765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 912c6266-9d77-4632-a776-2810625d1095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 a5dfcffd-d16b-4218-92e2-4c029d11ee88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 974400a8-a919-490f-a2ac-ef1c365662b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 0c955501-48d5-4cfa-846a-c3df05209654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 c25aa21d-4ce6-4b3a-ae10-e3a4d2247f82)");

unit.assert_eq16(16'h9F0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #544 b30770ff-9a1b-4693-810d-f186fadebd0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0221;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h0A30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 2eb307eb-2eb6-45e8-b81b-14629e5c8399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 34d6fa10-f594-4475-8f58-2bfa43530dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 4ab14559-33a5-4e79-9bcb-bbb8498ca572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 a204aa35-1cce-4bdf-965c-8e94e0d12595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 96bdf566-d653-4879-a6d2-58e08aca4724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 0d8f591a-e7d9-4a66-be79-f3b89fe9ee13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 23b24951-5109-4091-b8ef-70051ac59075)");

unit.assert_eq16(16'h87A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #545 656cf544-0028-49a6-a18b-9c2eea31c5e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0222;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h01E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 dc74cac9-16d1-4a6e-940e-99785b4e51f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 3eb1a6dc-c218-4088-9226-0dace6f27469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 d1dc359b-2c72-434d-9608-c97a96b5a021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 361b739c-285f-46a9-8b12-e3bf1607cd06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 86e036cc-ee33-4212-9111-c58b6743fc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 00da4b15-da36-441b-8a18-4c198190c469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 0189eafa-e906-42a5-984c-afe7f30e0861)");

unit.assert_eq16(16'h9579, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #546 1927e078-2832-4e08-a785-a57c538279e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0223;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h0C65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 cfee2734-42b4-444b-afe0-33902f222d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 04281aa4-5c5e-4770-8153-5ae466cbdbe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 271c82aa-cdf2-4868-9aa5-eaf6bc3be6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 3c8365f0-517c-469a-8b77-2fb8865664ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 7c557edb-7872-41b3-a9fa-7ea8b69e42ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 c6f1e27b-f726-4d7b-acec-50de2a32b0c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 408dcc7e-9eb0-4aa0-871b-2318628c6b41)");

unit.assert_eq16(16'h0224, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #547 d975b1cd-7897-4bca-b570-d53e45718249)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0224;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h079E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 41526de0-3c95-4694-9e18-de58694fa266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 665221ff-d788-4010-b59b-b78ec720c5c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 821908a5-f7b8-4791-8084-0d79583ac173)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 07ac3453-2cca-4248-928d-07065672cc84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 398aebfd-bfb3-41c2-8c05-97ab57a21cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 01b4bbaa-611e-4622-adfd-341c812d6843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 b1f6dbb6-ba91-4119-882c-40382f13eb76)");

unit.assert_eq16(16'h7805, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #548 77c83dfa-eaf9-41c7-a77a-52dfe4d3aa0e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0225;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0819;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'h0819, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 caed8414-73db-4277-8ad3-7be088730cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 9f8d0dbd-c999-44c5-bc28-bd7241c91ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 c2aebe0a-a66d-4e7d-9dc6-a0d064ba9710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 a23b5c10-f5a1-498d-b261-18dfadfc739d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 4040edfd-085a-493a-ac09-ff2aa5063683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 52e8d426-c5ae-4660-8f67-e592fb7f0424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 1b41015e-08ad-4269-95c8-e4cbed4ea484)");

unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #549 3bd71c58-71c7-4102-9e6e-3cee55f8faa9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0226;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0419;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h0419, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 ca888602-3d26-447c-9b61-30e9933bd625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 430339d8-27be-4338-b2a7-5193dc32f9c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 cd563592-5290-4bb7-b23f-706c0867d6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 cfacdf4d-b32e-42b5-9885-556bb1066afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 327cf232-650b-4909-8085-761abaf9ee85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 d60fe6f8-e73d-4dfd-96d8-be4789077337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 eafb624d-33e5-415e-9c74-f58216482198)");

unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #550 982d64a0-a0a4-412b-b5c2-ee5d8f89bb68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0227;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0136;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h0138, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 e1e918c4-a69b-4927-940b-7089cc812d65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 f4cbaa6b-516c-462b-b76d-2787bc7a03ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 3379c08b-8810-472a-ac98-a207b33d22b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 0885b79d-5f57-46ae-b84a-6f5e7f8f364f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 60d83e4d-1086-4862-87eb-1720afd2046a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 abc0088c-3b61-41dc-a5e3-dd4189b12bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 733b5dd4-3303-418f-a12b-5c7a7ce49455)");

unit.assert_eq16(16'hE06A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #551 698c73d6-b547-4f85-b5b1-afe347d37dfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0228;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h0BFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 55f331a6-eb5e-44e1-a0d2-810af8eeb72f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 8de4dc87-841b-4938-b276-8d543458ebe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 98aa0178-edf5-4e6d-9574-6f018ca38031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 ce408907-2121-4233-b1fe-65ac3bebedff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 038bc301-2f17-490d-b1f5-a9467b54afde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 9a97fe85-02d0-4b28-baa8-3ede8ba28ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 076a298a-718b-4834-a194-d1c28cec9409)");

unit.assert_eq16(16'h0229, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #552 371ace26-c8bf-4114-9b06-db5643025498)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0229;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h01D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 c3575ff6-1a97-428b-8be8-acb8e0458cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 286c3750-3e38-4e1b-867b-4bee3ccd4cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 44bd2c8d-7b8a-4192-9f11-687ef3991328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 09c2c91e-4829-44d5-90f8-5780bcc59c24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 d8bccebd-5cf9-45ef-b832-cfc319ff258d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 2706a543-0cc7-4648-ae88-64e2523e1e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 56cbb784-a725-4c58-b2a9-0e6dccd6a2fc)");

unit.assert_eq16(16'h022A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #553 b4abefeb-e05e-4df0-b6f3-e090a2991562)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h0070, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 836b2106-9076-499b-8800-df2257ae4208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 a58b43b0-c297-430d-9358-58bdf032b51b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 2e13bd00-18d2-4319-b897-e683dd4c480c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 a78c8c02-9b95-4aa3-99d6-24a88d72c46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 ee4d92cb-38fa-4747-aebd-0ed92db930cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 d70c8112-60d2-4446-8704-4963917e3204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 44ce2f4c-1426-41d2-8d54-088179325bef)");

unit.assert_eq16(16'hA905, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #554 28f5e83b-88d0-493f-9c97-248d702f8186)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h0BAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 d215c7aa-aaea-4040-99ef-432c7a4a972b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 ba62e9f8-9d59-436a-ae9c-7b74116c4e56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 6280de1e-906f-4f21-b42e-d99be0482c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 55bd48bb-d79d-48e6-9e5e-7df1778391e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 59465fca-438d-4094-ae1a-5951109a34d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 48a8f79a-eb7e-4daa-96c8-fe98afeb7b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 039d0211-ac4b-483d-b093-5681ea425345)");

unit.assert_eq16(16'h022C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #555 a04e047e-9222-4761-8b78-811975aa5c5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0239;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h0239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 319057fc-090e-45d2-aa99-b00b0ba5dd7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 6189a96e-a980-46d2-a929-41d8a807de35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 97fe9f91-443d-44f3-a0ed-a83bec60fe71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 48b2d56e-bc27-4788-907c-a51b912aa0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 f0345780-5d59-4218-8888-640698f111bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 0ab60f79-0fc1-40e5-a026-f3ae9d41d6ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 913f4b60-d0ed-4ecd-aff0-fb57aad572aa)");

unit.assert_eq16(16'h022D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #556 e1f0f66f-1478-4a24-817d-cbf74afefa29)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h05D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 6c85b499-6300-4432-813e-23c657280205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 74ac21b1-4a63-40fe-8409-e229983e9f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 6608af8f-36ed-459c-85bc-f65da4b58cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 9565f0a5-0caf-4cde-959c-063d9352f845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 753cbb9e-8f61-4890-8d3c-f7aeae689978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 053d55c0-6874-49d0-bbe1-5a8e4708a68a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 9fa08690-ed46-49ca-980b-95c08c101843)");

unit.assert_eq16(16'h022E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #557 86f35eb6-f476-478a-94b7-708ef9a7a907)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0E91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 9df7d7c6-26a1-4d8f-be63-bcd31b3906e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 847f01c2-2a49-4d1e-b749-819c36a4552d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 66091acf-312f-408d-8a12-6b9b48c29ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 3bb3afe8-5ba6-475e-89ee-6f31cb4ea03b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 2a39ab15-59d5-4514-8737-a950074fed53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 20c61c7f-ec7b-453a-9b1d-eedf0845fb9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 cbfb7b73-7813-4e06-8f56-124db0a252cc)");

unit.assert_eq16(16'h022F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #558 9e357118-4c90-400f-8c50-c1674c9be0c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h09DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 2c3f73cd-c566-4a1b-9040-a86ee08ab67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 b58c4df2-6863-404a-ab04-f115b12b21e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 76dbfbd2-355b-4f94-9814-0775d50658ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 5aae4862-2874-48aa-ad10-e23c830e68b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 7d82a8e4-5da8-4aca-b2a6-77b46ebee67a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 525d981a-7dd4-410b-9432-e12285f7d101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 384a231f-64d9-4d84-b4a1-22e928d31243)");

unit.assert_eq16(16'h0230, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #559 c0d4ee3e-7b33-4d23-bbb1-64e845ff0640)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0230;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h0F72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 5d2a714c-bd6a-4a78-8469-6d4cfda0eccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 db41fc80-7bd4-457b-baf8-ae9491bfc090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 8abb413d-a489-4300-afdd-bded13e21357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 fef1d4e0-a66c-452d-a1cd-160f050f913c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 12585987-d697-48d6-bf47-edf42436263a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 3ee3cd3e-fd0c-4d2d-b1fe-e4db3dd2d7ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 bc02b4b4-6b69-412e-b57d-62da70402802)");

unit.assert_eq16(16'h0231, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #560 973449b3-9ee5-4fe8-95ae-09d024338f49)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0231;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h0D21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 caa3be24-2fd2-4225-ab3a-ed90ea4b5f9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 eca99932-302e-44ad-aad3-d34b3f6cbae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 affe16fe-b97d-40da-ae6b-e4b3ecfb92d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 a5436edd-5d84-4aff-9800-f9aba0d739f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 a38f6404-d18d-4941-a3bc-97bad6f8c91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 c9fbe0c0-bcd1-4086-8c81-fe7d1c7945f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 6da47dc4-063a-46b0-88f5-037bfc658981)");

unit.assert_eq16(16'h0232, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #561 609e278c-0044-4b27-a906-fe54508d3fa8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0232;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h0C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 0ec701a8-d106-4422-a8dd-a7f75359c8ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 80cc2f46-5dc1-47b0-8640-ba2c13359229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 654e4876-3c2f-4ea3-abba-055c30e97c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 5c1c01dc-ad88-44d3-a57d-8d4d8e2823bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 b4728aea-747b-476b-b38a-a8c5930119aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 2ec7b410-b53a-4aaf-9da9-f24bd61e0247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 fb2de91a-4c8e-4e2a-9a70-73f7cd5911b2)");

unit.assert_eq16(16'h07B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #562 170305f5-e865-43dc-8de2-51c8c30dead7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0233;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h0C46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 3525bdc5-885d-491b-b115-21e6998c3295)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 a4ae8725-8e1e-47c2-b8c5-3d30462c4396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 0706be7e-accd-469e-bfad-05a2539de725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 b018cd9d-634b-4f44-97a2-3ebb0c42bfe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 5e6c0f9d-a7b7-47cf-a53a-3d1b62c5e7e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 9990528f-a709-48be-80b6-c3907de350bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 544a8dba-d14d-425f-82a5-c2e93e5ac549)");

unit.assert_eq16(16'hA2CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #563 a7aaabcd-b59c-476c-b4e9-851e7274e971)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0234;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h06CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 fa726244-591d-4971-a9fc-75e3988ba988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 7c430b23-d675-4c18-8cc2-846bc4f12293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 f3ce288d-f077-44ae-98c3-6568b187964a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 81e59f8f-3d2e-48ad-ac40-7e48cf56ab8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 44b4abfc-087d-48ba-925a-fb9bcff5112d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 1b841ccd-fee7-4968-a041-1d21defe9f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 8dcf0ac5-e2e3-4e64-a48d-67305a234ba9)");

unit.assert_eq16(16'h0235, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #564 1e8933e7-01bb-4926-bf3f-f5af239fbe22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0235;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0284;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 3d0ba8cc-ccfc-4cb9-8960-0eeb0e653af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 4974a5ca-e8d4-45a9-adef-f15d1fa17f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 9d3a2302-2565-430a-908d-044608b6f896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 2fc14d21-b0fd-4968-89e8-b07b2474e4cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 d679a578-1a98-4e95-8d47-f322e3b4f2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 e8716f94-2926-411a-ab0b-569502140080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 4db6ab48-16da-47e3-a5d7-031efe95a3cd)");

unit.assert_eq16(16'h8A8E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #565 360023a5-1838-4135-9bd0-6290c3f14d3b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0236;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0008;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h0008, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 4df40caa-ffc3-4596-a02b-d8b95fe93f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 ccac9a05-52ec-49a0-9423-c5f4408e074f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 0a617b5d-a8c0-4bcc-a856-4121d8cf93a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 6c71f307-573d-49f0-baf9-ca79b0ebb8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 599a9f0e-f8b4-4295-ba25-6852e6a72ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 b4c0f8ef-a8d9-4dfc-afe9-dce0e4a9ae00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 9e99f736-3243-4d1f-9af9-6b59328d3a27)");

unit.assert_eq16(16'h0237, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #566 02ee561c-b215-4d5c-9a31-b58cf2ee0273)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0237;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h0A92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 3a969f7c-c9b2-4b6f-a991-a5b7ceedab2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 20c8edb3-9646-4609-bee6-8e6f82beba4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 a10fe0d1-84d8-4984-8c36-96aa653ae9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 69790ac9-b395-4fa9-8b05-ebe5360ee67a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 90436640-ec6a-4dec-8949-e449ae18732f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 14260b14-3441-4e27-9692-7f08c80d38ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 4878f332-1d62-4d4b-802e-0768d784e328)");

unit.assert_eq16(16'h0238, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #567 bbe8f200-ca2c-4135-9e32-6803deba88c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0238;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h06CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 0d8a7646-644a-454c-b1c9-451ce6167741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 396906b2-af93-4b27-a784-37656b57a484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 9aae6a7f-0de3-4457-9d83-de99a21286cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 8eeb76d7-535a-49af-812b-2aa1a2e68f2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 29d12b90-9d74-45ca-9875-3aec6fa5fd7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 14475a5f-9fa2-42db-99ad-ed3053c9bc49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 43871d95-80cf-4913-a647-a5e58d467964)");

unit.assert_eq16(16'hD610, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #568 2b31c877-e27c-46d1-8ca7-62e36ad63ac9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0239;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0083;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'h0083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 09ba102a-7671-4d2a-8025-8747ecbb5a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 4dc09a2a-213e-42e6-8054-9e5f9c44f9a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 fbcdf9b3-70a3-42dd-a899-c2e44846a119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 481ded82-2b31-4d8f-9e4a-4406cff089e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 7e92dae2-a4b8-4a59-bc58-826b4256004a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 fad81279-f016-4134-92f9-dbcfad7763ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 41225205-97cc-4022-a8eb-b35639f6f9d5)");

unit.assert_eq16(16'h023A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #569 efe8151f-4003-4a2b-8972-441a0b4fa418)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h02F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 ba688fbe-304b-4e86-8ed2-ebd5c80dc471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 91c7e67c-a5a8-4a11-99c2-e8766b92b42c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 af5b36f0-6cea-4274-b428-7e2dc438e48e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 bd6abc6e-75a7-44a9-9a0c-20a8cbeb457e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 3df5f855-8007-4c55-8e00-c92f738f5ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 a394d885-3b4f-43f3-9c54-ba209a7413bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 74e79c56-ea9c-4e08-9612-f50822822742)");

unit.assert_eq16(16'h023B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #570 ed714fb2-a3c1-4808-aa71-4ca4fed9cbd1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h01B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 207dbad1-8321-40b1-9011-b4fba7470632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 cf41ce4a-9557-4aa0-bf9c-c1c6798e1a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 eea1c75d-0f4d-4d23-b0f6-412466059f8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 a0626024-4dbf-4bf4-940e-e07a0dfb841a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 2a1c9f12-e1a5-41e7-92f2-8e06dfc9b8ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 1bbfaaa8-967f-4bac-8527-b2235590d82f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 89d23c51-971b-41ec-9a42-b2893777d333)");

unit.assert_eq16(16'hBCCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #571 292ec0a5-32b2-437f-816f-ada7c726a571)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h00FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 c68000ff-aaf9-4454-953a-59654028a473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 03e02cd7-6d2c-4712-9a26-14f6dbe202d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 a277946d-4eaf-4363-bc20-39b6f15cd7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 436b693d-0197-4fa0-9104-7d901a61b1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 0f32a7f9-51a7-4f83-91aa-ee52e0429005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 d0159ad6-a09d-44c3-93ef-84ca85a2e9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 57832677-dd41-4776-83dc-a0423c950169)");

unit.assert_eq16(16'hE88F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #572 89b4b467-1253-4dc2-978b-e45915754016)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 b39c27cc-d830-4520-9cdf-a07097157c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 5a4c2a52-c134-4a1b-8cf0-cc275e4517e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 112cab61-df66-4e77-866e-33402ae7c58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 3c12d82b-85b0-42f9-b3f6-cecda48b3db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 e88e03ba-16b1-4b9a-af74-59181f529fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 8bf897f3-e3e4-44a3-965c-f5bf71609bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 abe769ca-6b25-4ed0-8848-dce78782618c)");

unit.assert_eq16(16'h023E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #573 c6e2376a-7783-4e38-9ec5-8b6c88fe64cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0927;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h0927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 48a9babe-9743-4ee4-9776-a861a6761e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 5aa14d5d-8d7a-46e4-8fdf-57a5faab00cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 b7f283ec-3c7f-4158-8eaa-1b5b96faa9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 b1242bbb-b4a3-47ff-b635-cc46db37961a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 0e62ee03-e100-4502-8374-facd15fae7aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 69c563c1-2d42-4304-8404-60a4d5281edf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 1204ec0c-e58b-4754-b1f1-65ef980fc384)");

unit.assert_eq16(16'h023F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #574 ad1dd08f-a1f5-4923-9a94-ee9a740de542)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h0920, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 1f079487-e290-4df5-9a3d-8c48dc7a9250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 58cb00ea-1900-4c66-b878-fd65f8a4449d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 71e97eaf-0c53-4320-af24-71323dd2ba75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 a2da6c33-838c-4e4b-acc2-31714133a438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 9d3449ae-ee24-4ea5-aa67-2e00ff70bd09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 0e12fc24-0b4e-4427-9cfa-bbef821a1cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 c7995645-0450-4f0c-8fe2-1a01ccf7f782)");

unit.assert_eq16(16'h4533, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #575 9e6fd4fd-0c06-40dc-a1b9-b96308d9280c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0240;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h0879, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 decfa763-bfc9-46a3-b657-286aa643d5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 8bfa3c24-b88c-4569-8572-fc8bf73148d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 6d0ad191-2e87-4ec7-9958-4bd214071128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 67a5390d-fd44-4fac-a046-a00d5dfa1e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 6a1e0631-e41c-46e6-b6c8-737393bbca22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 b38e830a-53c1-40a8-bf61-506e47e6473d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 3157db73-3eda-41b2-9eb8-6269bb64f34d)");

unit.assert_eq16(16'h0241, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #576 28f307b6-a39b-409c-b19a-e733dc569b1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0241;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0218;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h0218, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 4131a603-2299-4f88-9a73-150cbb7cefed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 9fed2244-fbc5-4472-89b4-b8c6ad491768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 aace5f78-f322-4297-8def-e240c653dcf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 6a93dfd3-238b-41ac-9856-c6f1db569a00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 fb8749ce-0675-41ee-9d48-0dc15fc05e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 7aa40fc2-31ae-4d36-88ad-c5752bd014b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 b54003a2-6528-4859-9097-49d85fadd4a1)");

unit.assert_eq16(16'h0242, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #577 a5e245fb-d3df-4393-8bdc-94f384300206)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0242;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h06AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 01af57e6-c48a-46e1-8c62-d1afa2da93ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 07f772d8-488b-45ed-853b-a17a03c748ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 9d8670ec-b491-4cb8-a248-b31660652668)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 55dfe40c-0d59-482c-9bad-634bc091c6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 38e8aefd-74de-421f-a502-ee406c095bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 32dd3be8-4fad-4826-801c-6c1a2a90d1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 5269f081-c8ec-4b74-951f-35cbf07cc44f)");

unit.assert_eq16(16'hA55B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #578 929dec08-ab47-4ebb-90b1-26abf806cb47)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0243;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0237;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h0239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 14314941-6b31-401c-9127-fef08a590c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 0f5a00db-37c4-48a4-9f54-058837ac783f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 8bf6734b-4821-499f-b247-a3337e8e5c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 c8e99683-bc80-4497-bc1c-ea4c9e6298d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 46fff0b6-5cc4-4e58-9b39-154479475c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 3c8baa47-85f9-40bb-a540-e908972f5afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 5f681f25-1da5-4075-9ea2-a8f4e3546a19)");

unit.assert_eq16(16'h0DE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #579 85022b7a-9d1e-46d8-b43a-68c5b3903931)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0244;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h0C1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 b88efb93-ec2c-4b03-9633-fcc5b6fc4112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 ee793dec-5100-42ca-86a9-8e211aea7e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 1aabdea7-b124-48c4-89b5-7ce2824c19b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 6d673e0a-3a96-42e8-8ff1-c9c5d227c9cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 93caac7f-04dd-40e0-aa94-206a61db347c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 a9b479bb-34fc-4299-b540-3ce2884d8d45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 db732958-5ed5-41ea-9587-c0e651305eae)");

unit.assert_eq16(16'h6BCB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #580 b60f1306-faeb-4178-9285-6490c982caf7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0245;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h0637, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 935ac1ce-ada5-4081-b06a-acc4c26e8050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 cc5e3640-571c-46a3-bc47-33ae11cf6cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 36ab5a88-2092-444a-8f08-579229636fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 74798f9b-be4b-4cbf-a5fc-08f7d03489fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 b8c7a0dd-c7a0-4689-8ae6-372491b1d83d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 6fc02d7b-8336-42b3-8f39-40efec85d370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 5e5b984e-ddce-4dab-99c6-be5f165f9de6)");

unit.assert_eq16(16'hDBF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #581 bc35465b-cd54-4d07-8d0c-af58b567bb6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0246;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0797;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h0799, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 011ca8fc-d3e3-4f6f-816e-9057bb890a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 92d1733d-a731-4d57-83df-9d6bd28beb86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 85124819-49bd-4946-9464-4b8788f61863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 4d61eaac-8204-4b70-a48a-74731fed290b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 9d3277fa-301f-4637-bbe5-a2abd5b9b3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 9556eaec-14be-4e1a-a227-ac1387134297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 5d2b6eb5-d4b3-4b1d-b898-8fdba500d933)");

unit.assert_eq16(16'hBC45, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #582 718a3be1-8d00-4449-aa72-5ca25b9af7c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0247;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0268;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h0268, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 f8506b96-825c-4c6e-bbd8-e9fcbc41c87f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 8c6db4d4-d446-4c23-9660-58bfe894f599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 38c14378-3206-4ccc-98af-32c545455976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 d2ad5496-934d-4f5c-94e7-f8fa15a2913c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 15ceeff2-b811-477a-bf90-96c289ce9f22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 488faaac-b9bd-45b6-a0e0-1ffe111a0168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 a847bb45-df7b-4a49-b16e-5c756ba186b9)");

unit.assert_eq16(16'h0248, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #583 bb423bf7-e0a9-4f81-a428-1419afb60e4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0248;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h04FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 6ea09ea1-cede-4dcb-9107-2a95ce3b603f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 6ca52c7d-39be-4716-94de-48f380ae2428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 692964d8-866a-4148-9af0-91accd0bbc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 afd8727a-2ac8-4427-9e23-ad176e9812c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 78627c7f-6bff-4888-9f5c-1a79029ada09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 ad9ab3a9-001c-4012-8c0e-01aedf427b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 ddf283e6-70cf-4818-9d81-86a100b24cf2)");

unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #584 cbf6353e-e96b-431d-aa28-d86a201ae1ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0249;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h0F18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 0e843700-8b65-4a21-882d-ecf7b607363d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 13174ed8-ed27-4d74-ad02-e3d4b4f85f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 5713cf5c-e156-4ef7-bfe9-6fa002438749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 09e4bde1-09f8-4b1c-9b1f-447627c961a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 ee49792c-1002-4b57-bb81-275b7e2ad742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 7bae34af-d2da-4ac4-85c4-e31a49c6a356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 dda4eeb1-83d5-4f88-8195-f80330f303f6)");

unit.assert_eq16(16'h5E5A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #585 ae0dbb11-ca61-40f4-ab83-837d66b3946b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0261;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'h0263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 e3392c04-1da8-43f5-827c-d003a7e42cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 1300db19-024a-4570-b369-912ba3f0cf83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 b5f7aca2-f4a3-4f0a-9d46-dab60f33fd27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 53fdbcab-0c60-4d9a-901f-cc325c4861ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 703e21c7-f5b6-485f-a95f-a22f579b3cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 110b67b3-2c85-4362-85c6-dddb6c1c5708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 4bad2553-a84e-4ed9-addb-93b57c3ae84f)");

unit.assert_eq16(16'h1959, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #586 33c6fb9c-5488-46db-8e85-344d2c3016e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h05B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 04c8257c-c5e8-4a68-a7be-29ab2bb15504)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 2bd52737-4644-4c48-8ab0-0b2660953eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 024386ca-7fc7-4aa5-86a2-ed4e77f21c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 de0f0738-018e-4716-82d8-f6b9d0ac7dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 8d3f1510-e39d-44a7-94fd-45d4752f1540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 a79e61d5-33ae-4322-bd90-e60eb6839a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 d0574722-2093-4e3d-9dcb-b2008f209d07)");

unit.assert_eq16(16'h024C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #587 853dc945-b824-4959-bfdb-94d3573ea0ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0500;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h0502, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 96254ed6-20ae-45fa-b8a4-6239d0289be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 2c314d95-a409-468f-8e2e-bee0d6cce00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 9f58ab5c-66f6-4772-b4ed-add2274baab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 c1e01f28-24af-41e3-874f-9be90c8fc524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 42c4414d-b420-4ebd-b1dc-0015bcdfe5a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 b8a9c934-f917-4dfb-89aa-4e16467aa1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 c2f7cbdf-8a86-4947-86b7-3903bc894b99)");

unit.assert_eq16(16'h4FCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #588 96a44cc1-6275-4965-afa8-b807c5fcf52b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0833;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h0833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 2d00f4cf-cd36-4ff0-813d-44ea6c588c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 2da86511-44cf-402e-974f-c12b11d51b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 3033159c-5089-4983-8288-67cdec0c6f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 64e22c17-46c8-4544-b832-995f7e74744b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 9ab1b590-bccd-47c9-912f-a8951b5b651e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 7a1ed85a-236a-4781-9ef8-e24b9c0f5719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 4795e5fe-7fc7-4d48-99a2-6ed7ba81fae0)");

unit.assert_eq16(16'h024E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #589 1c6e5a55-1314-4a3e-8752-95c236d296c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'h049D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 42293a3e-dcae-41dc-a603-04cbab925b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 c045fc2f-c619-4b76-baa9-38facd1e785a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 d8f46a95-e4ec-4a23-aebf-2379f7e77ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 cb6f02c2-3ef3-4480-ac06-dbb11064fe23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 914058ba-de01-4b7d-a88e-7422d1ae55fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 cf4b136d-27a1-4ddd-806e-4f58e75db74d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 3f73e59b-181c-4256-a6b0-5529172c82a1)");

unit.assert_eq16(16'h3A3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #590 a158b4ed-805b-4f40-91eb-388a2120e0c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h06DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 364f84e1-f3cb-4fba-bf07-1ac0618b3be8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 ce5538b7-775b-4f39-8141-dafc60e396e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 8ffe5689-7fc1-4f9b-a2fc-2bcb6db02134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 6c508e03-5e29-49b5-a7c4-9c33250325b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 a51d201b-cd7c-4d1b-ad3e-5df0bc218468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 31bfc194-2f98-4ea8-b20f-ac3f1ce705f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 18587982-5ac1-4a07-8b47-fb6a5f02d5a8)");

unit.assert_eq16(16'h3440, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #591 507bdcba-bd8a-43b6-822d-dd520883f43b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0250;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0137;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h0139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 20464c4a-e03d-47fa-937d-4c02887daa7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 e3a6f293-b822-4a03-92ce-0aea1cf736ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 82459198-ec3b-4093-a3ae-c28026df7140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 2116179a-fe00-490a-af06-dbdb5700f788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 a934020b-577e-4a36-a43e-198890c16f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 221cdbeb-0719-4c9c-8ff2-58b8ee54ff8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 4366b24c-a5c4-44ff-9ed0-0d5c17b59aa3)");

unit.assert_eq16(16'hE5E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #592 4721cea5-0550-4e79-a7e1-c3b66ec107a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0251;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0265;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h0265, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 13c4294e-4ddb-43c4-adb5-a7d77cd2875b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 855896ec-e0d0-4f46-abf0-9f8a5513c2d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 4cef95ce-4f3e-4b51-9766-89efc4bcda52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 494942cd-da57-4387-a12f-81149781b22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 2dd48ee3-bb35-4d19-acee-3fb432170e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 7c53c00b-235c-4e40-aecb-06d664dd64a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 b793848f-155d-4e42-b41f-f9997866fab3)");

unit.assert_eq16(16'h0252, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #593 500eb788-d3db-4905-93f1-1e17db5baef5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0252;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h007C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h007C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 259eedbe-fc74-404d-8d57-d5a61ad7b511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 2a28f87c-342c-48a6-8c14-caccd0367fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 7ee5cfc2-6ae4-48ac-bc3e-140ee79097c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 c2facd44-5ab9-4f72-b6fe-9d06b86c4bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 bb5116cf-3838-49e3-a9c1-60b45fa53e45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 22b05be0-a1c7-4a76-b1df-5be14f0c3914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 2d66c7c6-a1d0-4d0a-ac09-16a81ca137c5)");

unit.assert_eq16(16'h0253, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #594 5142f7fa-5027-4924-8ea7-7915c12b8ec5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0253;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h0D20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 8cbf13e6-845a-4f58-bd81-65c218a41718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 6c484bf1-c665-48b9-b5bb-21c3fb50cdf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 007f8d18-562b-421e-a2e8-6d00dec98a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 94f4748a-a0b7-4507-a621-0e0757b2cb19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 eecb7fb6-3c31-46b4-a2f4-92b1253ec6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 5d21bec4-8af9-4785-9e7f-72a53887f7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 c4aa9b4c-67f7-49e5-b7bb-26885095ea84)");

unit.assert_eq16(16'h333D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #595 2b271cad-fb6a-4b19-9044-2169744faa09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0254;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h0A8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 ccfdac3c-20c7-4eff-b145-0038dbf83eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 2a54658a-5393-48d8-a27d-8bc13827f372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 fe46180a-43bf-4383-8826-0435ac28de90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 4b3dabe8-a28b-4b5e-8d64-63270445f22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 8ea77f62-a533-4b7b-ac17-2319e24bb653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 3456324d-7b23-4908-a2a1-93035a56d821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 3bfc5331-5eab-4fbe-bbc3-4fd0b0a6bba0)");

unit.assert_eq16(16'hB977, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #596 10cedde4-7130-47f2-8118-a334086dbc15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0255;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h0ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 b4c45e89-6b82-47b0-8998-5567c55c67a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 5c9b9ca9-6ab5-4b25-bc0a-d86534c15131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 be2919d8-e156-4670-8558-5f03a9f67cb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 0af394ab-bf6c-47ec-b05c-0e0de7c93440)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 49e3514a-db93-43bf-ad61-5b0f06d74544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 83ae9aca-a599-4ba1-ac1c-9de121c46577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 56f63bf4-1c37-4a94-b78d-28695c36d929)");

unit.assert_eq16(16'h0256, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #597 ef234737-bde8-4c7a-82f3-1c652c297428)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0256;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h0FAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 6a65741a-4cb2-44c2-bcc7-ac5d72d38541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 38f621e7-5ac2-4480-8254-8608395479ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 db307f8c-02d7-4140-b80b-1a49449cff9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 d10c9edb-a307-4af9-a986-d7f9ba3d9b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 6e3f2e15-f3e4-4d83-a716-a90b4ec951a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 008b805c-cd16-46d2-846f-b100adcec6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 59a518ef-e0f8-4334-9d81-0199ec3ae5a5)");

unit.assert_eq16(16'h0257, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #598 e3acd11a-e28f-465f-bbe7-b164e7647f09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0257;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h035F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 3f4c56cd-bb12-4fae-ab77-2b54eae0d4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 e2b5e0e7-fec4-4666-b077-3d44778104ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 01e0d78d-7f21-432f-acdd-1ef1fa09dbcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 2c210124-9946-4505-83ee-dafa3b1bdcb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 577945c0-3061-4c69-a38f-19a3fb8dd3d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 b1ad32ec-775b-43b8-8587-7e6d27edc3a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 41a987a2-fbe9-4f28-a6eb-73e24c6482b2)");

unit.assert_eq16(16'hDE96, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #599 9ce2ce17-e591-45a4-b940-06c69bd46645)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0258;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h0E97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 9fd5316f-3282-4e91-88b4-8a8f932e3546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 c9a091de-0230-430a-b58a-29d8600bbf25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 efa93fe1-6458-48a9-8bb0-71f22a92f0a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 8c36e241-ca76-47c5-b84d-c34a94e1ae46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 628b1728-2617-46c3-afd5-52d42d2eb2d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 473db812-e3ae-4844-8396-bac58636e512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 1d26f13b-ccf3-4816-bf09-fb445406d859)");

unit.assert_eq16(16'h5F78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #600 0d19f43f-8ca2-49f4-888b-37410d5822cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0259;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 7359c5a4-1b7a-4e3e-a4dd-14f908435958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 0726a7af-e967-4990-837c-917a610b0d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 a6407889-51af-4291-b7d5-4f03ad3e7351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 ee326277-94c5-4d25-83b6-9fd115d351dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 605b426d-969f-4dc2-a9fe-f6827606d97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 65c1afce-aaff-4a6e-9b41-5ef5780cb291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 990fc8f3-ea13-4240-9d34-016dd191d858)");

unit.assert_eq16(16'h4467, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #601 d3d831ec-36a2-4885-87e9-e1fbd4366bb7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h07E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 9f46f7b7-da1f-4d44-9daf-ad9fddb6a183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 ab918745-9bc5-4c9d-b096-b4ff9c1bffcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 727ff190-d717-4fa2-ab6a-09b6e6cb9066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 48517117-bbf5-4ea0-b60f-462e6a4ef5af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 6f17e682-1f24-4b83-9916-2d126ceb00db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 afcc2dbe-376a-4d42-9e09-e01f74e918e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 6e463128-8d26-4225-8b5f-a3c513962ebe)");

unit.assert_eq16(16'h025B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #602 9c90d469-4fed-4672-b37f-2e22f5df6523)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h0EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 599943bf-e138-4c29-a3e2-44a19ca8b8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 9d612090-ec7c-46a5-89ec-252339c742f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 60fda9b9-c0b9-4074-a9a7-d4cf92b1dad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 04edf9b3-758d-489a-adcd-2deb2a34ded4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 249c327c-cbbd-48e2-bde2-6565312cfc05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 21fd3923-aca3-4a77-885e-0c7e15963bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 fbabdca0-34c9-40c4-8bd8-0b74d3052c74)");

unit.assert_eq16(16'hCBE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #603 1af5a4fe-7f0f-4526-b3ab-79d39419ff4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0633;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h0633, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 86c6933f-c957-4570-adcf-0b4d7b6226dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 03d2c8a2-8857-479c-91b2-7a122bd5c0b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 2b1806e2-acde-4064-b743-36fa4a9de2a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 c2101369-6375-452c-8898-becebe76470f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 1671a524-2b8b-473c-ab83-8ac58f2e92ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 76e93d10-314b-4e37-94e6-95e5ea2e64f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 aa6be1db-49be-4b9f-987a-e109a2d9832c)");

unit.assert_eq16(16'h025D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #604 2152fbeb-2967-4013-bb3b-00bdb6bb19e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'h02A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 92fc1353-1070-407d-88f7-cef46114cbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 5c991fd9-8ddb-44e7-a80a-156a1bb78a32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 b0c67dc1-9a36-4a15-a86a-03a8d645d0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 2c1944c9-4324-4e62-b586-80bec74602a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 9b09ca34-b92a-4395-a1f7-c8212eafb023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 0dab4ca7-cd4e-4a4b-83aa-3a7e2f20a390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 6a72b00d-83f9-4880-a4b3-635b1c117d42)");

unit.assert_eq16(16'hCC64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #605 5bef1d90-914a-4467-a5a7-b6a02a2490ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h0EC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 2d073d87-5b7e-447e-aa36-6e080fa482d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 e2bd2bbe-adc3-46f5-8d7e-6e73bcf31543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 f2c7b707-75dc-4c32-aaf0-e0414c62d973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 04a9feb9-465f-4b00-937e-1328b6bca83f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 bdccea2e-153b-4f6e-af94-5d9d7b100795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 c0725ef5-abdd-4e41-8baf-a8560a72dd25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 8405d27e-add4-43ca-a1af-0a4b8111fb00)");

unit.assert_eq16(16'hD7AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #606 e892f656-26a3-42d5-b163-60f5027c70b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h0B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 a9315c42-ad16-4143-9dc7-7d958123c1a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 50f36258-3615-4714-81d3-8b99a15848f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 14507247-4a58-4bc8-9f35-5ab40874e2a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 fc359db1-5dd1-401b-b4e2-b9d9eede7268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 253fb604-91ba-4632-a162-81e72d3b0905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 0d11f830-f71c-4c91-be24-41737bb02b7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 6a5e726c-8e2a-434b-9bd4-894e3cc79604)");

unit.assert_eq16(16'h021C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #607 9a2e24d1-100d-4ce4-b046-745b8dab8ea2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0260;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h0259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 b08cb737-f455-4efb-aa2c-686608fc89d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 73582a28-2a2f-470d-ae77-e6f20c195cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 22ebf67d-add3-412f-88d2-77380e7a79d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 6c416c47-6ec0-4fd4-97b4-48fd824a36c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 6ccf2952-e32a-4ed6-8989-47151d3a98c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 0a62fc8d-86b9-4cf0-a21f-1ece45bf18d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 f5e0f032-7932-4266-9153-688f02d4a783)");

unit.assert_eq16(16'hBF92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #608 97f360f1-f262-4a3d-9cf9-37818a297a69)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0261;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'h0C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 bd9d960a-817b-4d94-9060-3abc90ddbfb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 be3c60d3-66c3-46b3-bd27-a35d37d1c521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 45305d66-3c9d-439c-aa1e-288248806347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 62e4b5fa-f29d-4f06-83ed-c78921081b90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 fd80c8a0-7b62-4ce7-a417-5047de65c6c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 131c3e42-112f-4713-9ed9-2733d1820dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 8148b70d-6940-42ac-ac4b-9015c1ab16a1)");

unit.assert_eq16(16'h0262, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #609 ce79af93-66d0-4929-ad62-6b9d5e062428)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0262;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h06A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 6ffc1dbb-ed77-4fad-bf51-cb57fb0395b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 c30c1c63-2198-4e8f-b0ad-c792c3ed96fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 ce7622bd-1f1e-42d0-86be-cbd7ef2ae8ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 f45398f6-2ab3-45be-baec-abeb51418292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 cbcd4c6e-f2ed-4f72-995c-075ef034764c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 60251f0e-93a4-4801-9143-4b72566eff9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 428664e3-80f6-4cb7-a1dc-dede1e8aca50)");

unit.assert_eq16(16'hC6F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #610 bf9eb394-23d5-4bf4-91a2-49c78131adc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0263;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h0088, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 a0607bbd-421e-4de4-a6c0-3c708bac5919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 26f6358e-8051-4f6f-9e47-5ed643b82e38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 b708b2dd-56fd-46fc-8636-cb0bc2fafb22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 cd44e0dd-0903-4997-bb6b-0354ad2799f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 a0efa69d-1596-4003-b6e5-1c54272f76d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 21d9c0ef-651f-4154-a7fa-fdf219372eb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 c2b7f5ef-9721-48ef-8cbf-d89eda8180ac)");

unit.assert_eq16(16'hFB28, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #611 d13ec539-505c-4d28-8dec-c0fd68471251)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0264;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h0E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 93b65ff7-ea1d-4a4c-9576-455c0b55dc78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 cf28835c-f6fe-4cb2-be3d-2b9fb6c51bf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 e95b2d60-9a50-46c0-98dd-251a1a2500a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 94c665f7-9ea0-4a29-86a3-4a77f8a8a63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 ca9d1f5f-4b29-4a5b-9361-ab4d94a94ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 7832d043-68aa-491b-8b24-363ef25dc0f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 0aca751f-d998-4247-bf1e-b30f0e09141e)");

unit.assert_eq16(16'hF7B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #612 c731ae8d-533b-42e0-bf81-677926aba781)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0265;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0359;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h035B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 3ab11bca-cd4e-40df-9aea-d48238215b05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 42108947-c7a5-494c-bd1a-3e99567ef231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 4ec976a9-205b-4783-99bc-1c3fb49d9b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 cc10f4bc-2bd5-4cee-a8d4-f205474e10ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 6def6f42-c964-454e-8d68-a176f6441cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 617c32ca-6dee-4a62-8893-bc974c23b965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 76e9c7bb-6bc9-4c60-b710-2b8d3e406abf)");

unit.assert_eq16(16'hA13D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #613 a190149d-1eb8-49f9-bcbe-ba8d9472b9b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0266;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h048A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h048A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 7fde2554-a324-4f24-8c37-3dd2216e5080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 1f022514-3c5c-44d2-98c6-3fa7b7ce6cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 1ff69af3-1925-4d31-8759-f403a64c3f6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 be54146d-4b24-4741-bc3c-4081258e85da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 f4fc6775-fe8b-4d0c-887e-527dec260471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 61c3506f-88f2-47dc-9b83-d2ee7e1a719d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 f488302a-14df-4169-921b-25cbef2ecc28)");

unit.assert_eq16(16'h0267, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #614 ec2cb7cf-db0e-4897-9828-faf4a14fbd75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0267;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h049E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 044595c5-74c3-4091-9ac4-777ab82d276e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 9491a835-ab6c-46c7-8e34-8e263822aba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 26bd4a60-84e4-4e30-8655-4fbacf6177e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 c9064ff5-11e2-4854-ad66-4afb08a5cb77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 208e3c89-c098-4d0d-b8ed-ee97ae378afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 79c81c4a-3fd3-43cd-a7ad-36a3c1c9ee57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 7e7dee35-d1b4-4d51-9bfb-74f7cd3cd218)");

unit.assert_eq16(16'h283A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #615 f1e54425-a156-4c05-a35e-2564f686a394)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0268;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h035B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 05ba67de-89a8-4a47-a2a0-151c7533e16c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 b43e266b-7d94-4700-80b0-87be6935ca42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 5da7518f-5b01-4170-aa10-5ad52cda642d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 67526b6d-83a1-4acd-8899-f4762625ab4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 ac05c908-9c1d-4b96-a2e9-42f94d6a6a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 78e8a18d-2de3-4b04-a4e5-1b3213f520ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 f7e5308b-7f68-4190-9ff6-1be6052e494b)");

unit.assert_eq16(16'h0269, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #616 416e211c-7b11-4d29-9607-427a5c43ffeb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0269;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h06F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 e8a77878-2029-42a5-a709-9f2f0b45f376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 19527085-1636-41a4-bcf0-e6c79fe4af3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 cd14deee-e774-4399-a07a-51e06bc36c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 66666520-2a70-490e-8883-70b997069759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 dfbcb6bd-65c3-477b-bf78-51cc8b367928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 fd2fdc15-9bed-43b2-9ae6-ebe592609ada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 9fed2653-8092-4a70-9999-b9d695c4cf4a)");

unit.assert_eq16(16'h0E2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #617 bf1368d5-8f86-4827-97ee-6cecd8ab7b9a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0128;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h0128, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 74ab1368-e940-4ad2-b1f6-11590c49c742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 be898618-3852-48bb-9c02-098af3d96f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 ce1e0dd9-3c74-4e6b-9c05-d43c2b83e877)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 c66fa848-2c7f-495a-9c26-dbd03efbfd39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 23147606-19b5-4ba6-829c-cbf2a53caf5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 1253400e-5e47-4aeb-93be-bd2d52c7a9a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 8c5aec75-ac2f-4862-a41a-e1d6e07ba87d)");

unit.assert_eq16(16'h026B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #618 c3cce2f1-c3e8-4386-bbc6-75444511914a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h048B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h048D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 5477faf1-f699-4881-b3ae-d02bc7bb3212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 e74e3fb2-9e2c-4941-a579-5fe651b42a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 6036a7be-0284-46ec-b1e8-483264b1456a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 c3ed1b69-a4da-4392-807d-ac453c8127fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 42189110-7043-4cd9-8e49-8c3283c91e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 dd3cd789-569a-4b85-a54f-9ff1a9ca4e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 5b07c8cb-d44f-44c7-b5f2-35e841da6fb0)");

unit.assert_eq16(16'hF0C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #619 0d7c5fdb-a0c3-4926-9ddb-ff05151e416a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h00E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 d351b2d7-0f31-4e09-9b95-27c7e336f979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 c260fa05-0164-4760-96c5-9638c137149f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 2e7800b4-2b7c-4c2a-89a3-89f87ad5c439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 0fb48fa8-819f-4dba-90bd-8db0ab3ecaaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 12cf113f-ef16-4f1e-9765-27168e488ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 fe30a1f3-dcf3-4bdc-a504-07eb786c1673)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 cf63b0e6-0ba2-4914-8e58-d410deb1ff50)");

unit.assert_eq16(16'h3531, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #620 32712670-7414-45e8-8327-941c2854d464)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h0CE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 a37e3dc7-d086-4ca3-9902-16ba839fd53c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 3126ca1e-ef0e-4088-aca7-d970a8c92d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 cd4bdc7b-74ef-4c0b-9fd9-7be19a20d084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 56a9986a-43e6-4ab8-b652-4b68268995b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 d782b948-325a-45e3-82bd-8b55b229fe8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 38792e70-4415-4625-8767-bd9e796b75df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 1c3c350c-e34e-450d-87f5-af0a5eb9b6e3)");

unit.assert_eq16(16'h026E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #621 e618abfe-0228-4772-bdff-0cd7d2e12e91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h0CED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 14167344-2077-468e-b014-03c0ad202a66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 3bdbccdf-058a-4daa-bfc7-d9d198c5e27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 81759092-3ea3-4b92-a026-56aefe56a038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 22110f61-6bfa-4900-8c5e-8607af9ab3f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 6260f14d-f9ec-442c-aef6-8b0962270671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 6b424eb7-2aec-4494-8cd9-372d5d3193f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 f28982ec-1bc8-4335-9f9a-e5b8d6fbbe8b)");

unit.assert_eq16(16'h026F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #622 11141593-9158-4e30-a0bc-32a7d030efc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h05B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 33e854e7-5f97-4365-b944-16e6a0ab67c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 7a061cbd-e85d-460d-84cf-1adeaaf00b44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 5eb78bce-43b2-4f3b-bcc0-5c19780ee6cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 a54ea5e3-b6e0-4949-a687-a5c0ad1712c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 986a283c-9331-49c0-9e83-75e7a6ac0552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 b9f9b61f-18cf-4f09-999e-66db0a9f98e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 dc517d3b-4570-425b-83f2-6aa15ee6f94e)");

unit.assert_eq16(16'h0270, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #623 04c7aa25-2cad-42b0-b503-4fa0504683bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0270;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0543;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h0543, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 6c514fcb-35f4-4bb0-9d31-ede8277fbfea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 b813676b-ecef-4131-9b1b-fd3fb511f75f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 cbeadefe-e1ca-448c-bc6f-8f2f50543687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 eb085e6e-a308-4526-80b9-33b1d6c50f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 687722c5-1cba-49e8-a8fc-8a7982a10e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 ad98fe9d-32e1-4669-87ad-138320f17a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 b5f18a22-114f-45e9-b399-d2fa7a1907fa)");

unit.assert_eq16(16'h0271, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #624 5ac07797-3604-49fb-a45f-ffb7c3ee5377)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0271;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h0621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 5bd6757b-c410-4124-aed9-1beda652fd49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 0cb96c63-9de7-495e-84b6-41a925d54047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 96e8876e-fb08-44d9-b93d-fe8b5a333105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 4e37567c-b475-473c-ab05-b273b254592f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 9eaa39c2-c6c3-4d58-baf3-8099d8dcb1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 7c7b00ad-560d-4c1b-b2f4-02bd52940706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 ec83a4bd-a6d8-42ba-a442-ffd0364755b0)");

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #625 004fe1c3-2f2e-48b2-ab28-ed3c44d7c44b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0272;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 2a177db5-023f-4a12-ad51-8bc2ea0a72a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 6a992e43-93e2-4832-a893-eea7a047d01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 6338e07f-fb51-4970-a80c-719084a1955a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 d539d715-92cb-40dc-8fda-ddda67726bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 91cb1fb5-0594-40d8-aa64-6a6883b1e4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 20f0661d-5cfa-4f0a-bb79-1264cbb5cf3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 95c1483e-3ea2-415d-b4fd-ecdd45f2f267)");

unit.assert_eq16(16'h0273, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #626 3755fc9f-12b4-4586-95e7-f9a6b73cffab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0273;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h0D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 1fbf2756-b4b2-4fb1-804d-18ac8c9851d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 35cf493e-6710-4485-8e55-a15fad038c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 49e1edb6-07b7-4103-a49e-02f3b9aeee1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 f3e1b0f0-17a1-4fd8-951b-515d86aa9808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 3480e729-6e6a-400e-89d9-1e5ceda9d73e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 dd18cd55-6f0f-466a-a5fd-3ae10259ba7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 57569442-c600-42ae-adff-d1e1c60a2f4e)");

unit.assert_eq16(16'hE784, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #627 9cbbd394-460a-4e01-9faf-902377798e78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0274;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h0E89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 ee550051-363d-4be6-8471-e6af29fb56a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 42c63c96-f803-451e-b0ca-2a79a8732edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 e7e87d8c-3fb2-4ab5-b0ab-ab0aec6e065b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 a1047532-38a6-45eb-a4ea-bb82d99b88e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 642cdf75-d8dc-4a6a-8058-ae38b55d8a4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 a8b1790c-4182-4a0b-83a1-f5ebf780c19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 ae590019-0435-405f-b8a5-bf0c080c38cc)");

unit.assert_eq16(16'h0275, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #628 6c861d16-10c1-4236-b6e3-0180ccea0e9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0275;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h02A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 59f18883-f5d7-4639-9f3f-0fe2f789c460)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 91490933-0078-4c20-8a76-c265c8b5a6b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 c3148643-6bd7-4634-a4cc-348a8e13481d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 a88b3f01-8188-46a0-b9a0-ebb04695340d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 833a4c62-91e0-40f4-bbe0-dbe3c7e4bb49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 1e7199e2-ff21-44e9-b1d2-e4d40dd557cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 907cc008-f7a1-41c0-bd8c-bc2a6a5cd3b7)");

unit.assert_eq16(16'h361E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #629 665330eb-c83b-4853-b129-7397a9f32037)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0276;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h0DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 43de1c25-098e-4fb6-8ded-00376839a0a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 c0f1e7c5-b83b-48b9-b828-de461a476435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 07b8cdd9-fd48-4743-aa8a-6760ca3895c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 a9e7f135-708b-4f8b-a30c-cdf42a232497)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 472fb42b-1779-4cad-b96c-78db4a8be837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 13b698d8-98ed-44c8-9e94-cb747a531dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 4b950c15-862c-4821-b425-4ebc6a80e428)");

unit.assert_eq16(16'h0277, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #630 65547cf5-b86d-49e7-8089-480132bcb123)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0277;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h0D7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 63542829-1602-4033-92c8-9e26256f3f07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 477e9438-7a0d-47ea-a0aa-8bf309a880ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 8701d45b-3d72-4de6-a885-55fe194913e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 8a8ae8b1-7993-4ea5-9872-f7b66e3ef6ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 1a4fb9e3-4093-4ba7-b682-722c540e390c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 86800e72-6bae-43c0-b319-2276a7c054ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 e323a670-6df8-4f6b-aff4-00e3702717ae)");

unit.assert_eq16(16'h62BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #631 2215f291-bf2b-455d-bedd-ef6afb4714b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0278;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h0C04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 b25c7e92-658d-4fe7-a43f-5a94c3e9f195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 b942278e-88eb-41e0-a340-1fa9621f0aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 f255723d-e03a-436a-84a7-361d0896404b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 7942fd91-7094-4f00-a2a6-8ee7453b3a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 c36570e9-97a1-4fc3-a2ed-7b07ad35ba02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 e1bf3a1d-8f74-4e9f-917b-f70722a92747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 236b7794-65b8-4bbb-bf7c-a459e38d01fc)");

unit.assert_eq16(16'h0279, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #632 db6009a5-be7d-4d90-bb15-6a130bbc705d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0279;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0286;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 4e1d10a4-4645-4cc6-a101-3191979d9a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 d1b8da36-ccd6-4a3d-89f1-bdc4981f8432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 f9bfe592-7390-4737-a1e5-1de2cfe35b5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 941a454b-0ed8-4106-ada6-47ad25a80db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 5d8e59ca-0ab5-49ae-86b7-d01776cbddd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 c8905a0a-20f4-4896-92d8-a45516ac9c9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 688384ac-c4c5-4ff6-bf6a-700281b53487)");

unit.assert_eq16(16'h7E4A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #633 6d2899b3-4447-4590-a0ed-8aacf789027c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 745d07ce-3aa2-4fcb-a715-c4370807f81d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 92df7288-b2f1-467b-bd15-a091be1ebb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 86c050ec-a43e-45c7-baf3-6f362e36191d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 4e4b486a-b292-47c9-9259-ed95d862720f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 a5a2c067-7fb5-4e96-91e6-fd0988e8e54e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 c10d0fba-7242-42b2-a725-4e88c65b6db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 4bd30ce1-18bf-4c2d-bff7-7397e2acb4e8)");

unit.assert_eq16(16'h027B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #634 f49502c4-c8ae-4cd5-a712-567647f0f059)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h0D31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 e899cfc8-f9a6-4bbb-a462-e52c5b41c8c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 9d86e75c-988a-431c-b751-e0db5eda8f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 8bfa2915-3817-47bb-bc0c-2f17d223df7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 696d03ad-b9b7-4a31-aaca-1daf4de67d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 0cb910aa-1d2c-44a3-8392-6cc48721fe78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 1a63d857-0e75-47f8-bf71-f0fb319ed077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 39b38ea7-8be7-4679-98a8-f12894eba7cc)");

unit.assert_eq16(16'hCC34, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #635 158b9152-ed9d-4350-959b-485d6d77323a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h0EAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 cf6b644f-0d7e-4c41-9e55-ba6583ab5354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 89060029-abe8-4a65-93e0-4e0267447c47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 315d317f-b4f4-4559-b5fa-1f2180255af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 58ee30c5-3599-4183-8d07-7f24e274687d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 e6d71e02-7ea0-4e0a-9427-fd4646b68625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 cfc9764f-e170-4115-a501-07886ebbd209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 1234b6b7-f811-4f63-bcf8-f01b09af740d)");

unit.assert_eq16(16'h2156, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #636 7e8a8324-65c9-4714-a69e-728c61830723)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h0EA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 0df649e6-7f21-4c81-ae4f-ca7fa245e395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 75f749dd-1550-4f5d-acfb-5a0db31f8aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 fd9e8b28-0a10-48f6-9681-aff8822bbc74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 563ecf86-1c1d-4ebf-80dd-be57d12e0c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 3c64ce8b-04dc-4b6e-8c1c-55ec74c2d7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 64c6c4b5-e8a1-4a8b-91c4-4181d3dd8870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 52d8173b-e4a9-4a2e-ac34-952e7877e7e5)");

unit.assert_eq16(16'h6E7C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #637 1a00b242-0126-46c3-8fce-e83c6b4a11cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h070E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 3c136206-26a2-4ecf-9f56-8c797cd82207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 826aa786-62bc-41bf-937d-5bd184090f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 00d003e3-4aff-4a02-9061-6ce853576485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 315c4ca0-e793-48da-b05e-c90ed4ce4411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 2173b1e0-f350-4875-836c-3cb9ee3e62b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 d8a343b4-f3b2-4082-ac9e-bfcea9b6b62e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 20e089a0-6802-4282-8276-71c08b8ad952)");

unit.assert_eq16(16'hF583, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #638 5a40a344-2bdc-448b-801f-9df07bd6723f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0158;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h0158, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 fec3948a-b994-4511-8def-a6afd3b45f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 34ec46e0-4636-47d7-8a0f-694f55dc2d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 f5b8fa4f-7e0f-4ada-bd31-f7d7e1130150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 113b366b-ea0c-49c9-af78-c09181cf9af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 65ca8886-f0a8-47e5-86df-d74fb0c89eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 69d18137-ba98-4381-9d16-f4c2dbfa80c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 e7a3a110-5df4-4432-a9c6-dbb9ddab3d84)");

unit.assert_eq16(16'h0280, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #639 a662506f-10ee-488a-b8dd-0d2b5b3f73dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0280;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h01B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 f172d929-3a2e-471b-9ca8-60327c46f608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 073af79d-31ac-4f40-ab7d-83f220b667d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 1afd0c20-1406-4b60-95a4-e00df55f1d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 7ca650a0-8a5a-42f8-8285-f7c323657161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 c4400bb4-3518-4793-9cae-239693304e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 374c8d40-09ad-460a-8e77-4dd36137e9da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 b2a4e128-908c-45ec-89ee-eb7792de0517)");

unit.assert_eq16(16'hA8DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #640 1c433a86-19f9-48a2-a1fd-c4f180b13b48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0281;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h00B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 b16752c1-27a7-4fe6-a883-139e89ea337c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 65e8c399-ceb8-4dd0-b7b1-8339af1e823e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 a97598db-0b43-4434-a86a-d314e1309e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 a2ca1550-34d6-4ded-9d37-7ff15396a3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 dd66a30f-b3d1-4507-a2b6-623a06e467b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 3428c98d-4b6a-4fe5-b3bf-291ce06e4306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 61455567-9fa3-47f5-9b81-b03ccb6513eb)");

unit.assert_eq16(16'h0282, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #641 8814319f-21d8-47e1-b011-39bb286bab9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0282;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h0B8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 848a0ef0-fb37-4e53-b863-2cc0e3f854d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 87c2af1c-5ddf-46b0-9bd2-184c633838db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 c2d078e8-4dc8-414b-bd55-2a14006a11a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 536b4393-284b-4ac7-a98b-f7bcdebb0d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 8efa3897-cfb6-48b0-ab3d-9d92d3a9e406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 9dcc860e-0d0a-4da4-9ff8-4429e4d5b139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 f64d3637-b1ab-49fd-abfc-f648d8589bd4)");

unit.assert_eq16(16'h0283, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #642 36fe1360-4d1c-47d7-9236-559238645581)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0283;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0455;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h0455, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 74d93e61-c925-4e8a-ae81-7a6d545ac961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 1dc521a2-a1c4-4ee0-8faf-df53c8147daa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 f3a1dc8e-8e0c-48e2-86c2-8bf0ad7e341c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 298159cf-f5cd-40f9-b4a4-44e98c432af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 68856849-0094-4e1d-a604-788e0d495c27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 f6ad9586-6c22-4bc5-89f2-042cc1fca874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 4a412edf-8ed0-4ef5-b319-831286678c5f)");

unit.assert_eq16(16'h0284, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #643 16749f7c-325e-4ae3-9acd-6145b91a5cbf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0284;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h0C63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 daaf6d5f-5fc0-4267-8db8-3d86a4bec484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 4c0d7eef-a873-45a1-bf72-4612b07b7240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 145b8d44-c877-445e-b784-dbe389086abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 d7524c46-c908-4881-9230-14fa0f6cda95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 bb0f8089-ec91-49da-88c0-fe69196c0502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 bf6af4b2-1420-4156-95b6-587641c13066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 28ceaac3-e4e8-455d-91fb-3c6fecc1628d)");

unit.assert_eq16(16'hB094, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #644 15248508-4bab-4759-bbf7-6e4f6b49758b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0285;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'h0AD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 7f2aff99-f08e-4da3-9020-78cd295acfee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 1ddb2228-d1a1-4561-bf0c-0fb4f86b9af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 c583da65-56d4-49e8-8bbc-0abfbf41701d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 43fea9d1-9084-4297-99df-67839f7fd9f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 0bf5d6a1-2b88-4593-8ec2-43b0126aea65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 0766831a-7337-461d-b9c5-80de92e34a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 8a8b0172-f55c-42d7-9bfe-8a47d8655f98)");

unit.assert_eq16(16'h0286, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #645 bdc5dc6b-d5dc-486c-beb0-dbc379fc6808)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0286;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h01F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 6c66a818-ebc6-4c50-80a9-88185ede27c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 4c8008be-451b-4558-b672-cda51284d9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 9c45f8aa-a5e1-4462-b56f-ca18c750b2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 ceecae35-b936-4723-a3e9-5ee0a6099f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 d6c437b3-3281-4bb0-8236-e0830fe64d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 20d9fb18-601b-43d2-901f-f7ab55e95f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 a5689b93-8348-4e17-9e96-ef97eefb5d6c)");

unit.assert_eq16(16'h0287, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #646 ec7e5adf-a9d2-40c1-82fc-06e1494b8953)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0287;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0033;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h0035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 a3a28c1d-3faf-466b-8433-bd92db0bb8f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 519c789c-3ed4-4e40-8bfb-de6e3f18ec91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 6917d13d-e52a-40a5-86b6-3e394112eb49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 364a63a9-d866-4cd4-b857-23a4a128928f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 099b7f1c-3128-4ca5-9d7c-75cb5daf5f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 84c9ee0a-b759-4b78-b189-99556b9a1698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 d249c5f9-d0d8-4244-9920-e63cdb4fbd04)");

unit.assert_eq16(16'h1541, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #647 41f8ec32-6541-42fb-bf8b-2775987243f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0288;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h07B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 79dee4a3-3efd-48cb-8fd1-d54a9e5482d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 b7818fde-a0f5-47c0-8e50-8ed2093b119f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 d09cc671-0157-4e55-a72d-a2ddcfd6ccf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 531459b6-2eb3-4895-9927-1e2aedb94743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 b93967e5-261f-4745-a974-f03539fa0bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 02887ce7-9bbe-4829-8210-be377aeafbb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 f0302f0d-343d-4c10-b0f5-02ca0994082f)");

unit.assert_eq16(16'h0289, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #648 90fd9555-9daa-475a-8152-a4f2d5306143)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0289;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h0FCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 ca543aec-f1c6-4816-8aa0-2a8b081070ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 3fb5ef72-9b08-4e04-9629-1f64bbee6020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 9272a77f-4bb8-4ff0-a0e9-fa500861e80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 0387b9c8-c5c1-4e40-aa36-4c4e3f5cc599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 b96323f6-f82a-4858-b5f4-c004898820ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 01737797-32d2-43a0-a334-27e7267e79a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 599985b6-a81b-48cc-9d69-8cd8546346f3)");

unit.assert_eq16(16'h028A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #649 ca9c7962-056f-4a56-aa29-df2aa3a74999)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h0190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 34122647-cb4a-4b07-b622-cccc54ad36b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 e8acc7eb-fb5b-4092-ab17-bfb891bbb671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 830409ab-0e41-4244-acd0-6c9a2198c6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 72a39d29-9f02-42e4-bcfe-5989f5205f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 af995701-fa8c-4822-a52a-91b94fe35424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 7fa7d570-f8b9-4a4c-ad7b-03bc7ae3ead2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 51f199a8-340d-4f84-99f5-be294b9dee68)");

unit.assert_eq16(16'h6B59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #650 c42ea807-a3e6-488a-bd69-c1830c82b590)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h07CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 f5ece85e-14d5-465e-8537-59f896b489a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 f8160db8-9590-4513-a9c5-94de8a3832fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 29d0e0cf-5976-41f2-9962-fe7617cd7a8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 d389085e-3b99-417f-bdef-01c6237237d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 4b58f892-f8d7-4250-8595-2f62aa661afa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 ad32da23-7a14-43c2-af96-ec0a42063863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 a1d88579-ac36-447d-a285-57727546350f)");

unit.assert_eq16(16'h028C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #651 b176de07-9019-4b19-bdff-cbde5664cc19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h07FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 b2cf3e03-97c5-441f-bb75-253ddf2b5667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 33142f9b-b13f-41cb-804e-27b15a647f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 3214054a-5ed4-4281-9d06-5c54faa30aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 46cdb19a-e0d9-49cc-beca-b1cce7497f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 cae36ddf-ca99-4df3-9d3b-85c6b9ff61aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 31967c6c-a432-45ed-b7f4-29c3ac75e7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 5f865983-c180-4173-b9aa-0ee56f459040)");

unit.assert_eq16(16'h028D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #652 f4a1ad97-3c65-47de-85b7-c0f9b0195fe5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h008E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 c13e501f-3ab9-4391-9a25-1bbc06a7696a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 23ed0630-0118-4b19-9685-5571e5d18a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 f869646e-2493-4f19-a324-64fa39e1b538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 dda0db7d-44aa-4435-9e77-04844b6aa67f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 6360face-e5e4-4850-9ab1-b523907084a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 f3b344d6-fa42-4db7-aba4-2f77bad762a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 568cf411-988d-4cc7-b421-941ff33407fb)");

unit.assert_eq16(16'h028E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #653 f4d8dbb0-23be-419a-b692-918b84efc86d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h0A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 72a5f15d-c987-4bf8-9d5c-8adf1f0f4a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 5d712676-36cf-45ef-9402-7073b87bdf37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 fe6726d9-9055-4440-b295-1f2dbc8ac449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 8439245f-e90b-4270-9967-1209f1e1b7ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 f527343f-444c-4f7c-8370-36e7bcdf915f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 c9bd5a48-3bba-49fe-a510-ab47dc3477ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 9653375c-0ef5-4718-bf32-9f66b36f2456)");

unit.assert_eq16(16'hD935, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #654 d7e0de93-180d-481e-bbdb-ec9e175e1822)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h090E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 84cea86a-6749-4eed-b080-cee498c8af43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 1810a1ab-a894-4dc6-8c28-5ccd21dd03e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 df88fc78-9940-4752-9ff4-f0ed50e4ac36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 c2e35894-d1c1-46da-898b-78abe1ac8274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 cb7fbd7f-2dc9-4904-93b0-0804822d10de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 a9193d9b-64f4-4699-969f-52272b891831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 c555bbcb-6461-4859-bc2f-4c599f44f419)");

unit.assert_eq16(16'hF776, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #655 13ac5388-c6e2-45d3-bdc0-fbb8d32ed569)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0290;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h0E23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 e47d7a1e-d8dc-483c-bd7e-804a522282cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 642e4e2c-7fd8-4562-a92a-3a2513aff45e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 ad250fc3-2254-4c38-9cce-f7cd34e9962b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 8be8f0f6-88eb-4713-a6df-30bb2b5a27e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 8af264d7-9c7f-4d90-a8e9-daae0f44c518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 30fa29c3-9253-462b-9c57-dd02ca834243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 8d8daec7-4318-4b8e-ba4b-fa848e84f510)");

unit.assert_eq16(16'h0291, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #656 9c54f92b-dd87-4760-86e9-eeafd2f71a2a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0291;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h0247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 ab1fd57f-ef1d-42ed-b9bf-27e8886ba643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 1d3c012d-5c7d-43ec-9c87-27436783cb8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 4d80d0eb-2fba-46ca-8e32-945fc595f359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 873203e5-b8e7-490e-8ace-1b144b0065ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 d7b51291-bbc5-4dd2-8bfb-1c933067d537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 cdbe7bfd-e242-4f8d-9705-e88422384315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 19374dd2-8f4a-4a9a-88f5-00052518bb10)");

unit.assert_eq16(16'h797B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #657 a17b4770-7b9e-4fa1-b72a-de337967f53c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0292;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h033D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 e7f623dc-e410-4bd1-886b-d667f07cbe58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 38ba2f15-91d5-4e22-b6a1-1fa4777e9f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 5686fe47-5795-471d-8204-ea40a7945050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 261b34f1-7ef4-4971-a4f5-52eaa278aace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 a9653ee0-e4b7-4837-99d1-8750f646a95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 c1af4195-c47d-4e32-9a76-6312995aa749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 0dcb921b-e273-43f1-8b8c-3e3bcf92081c)");

unit.assert_eq16(16'hB831, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #658 a039f895-e7af-4510-9215-8ad6ccc15642)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0293;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0760;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h0762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 5982ce6b-3628-4f80-a5b0-adcdc27aaa2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 f7ed25a4-d92f-4c2b-8a21-34202138804d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 5078a89a-361e-4386-aa59-8ac48708a367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 935bef61-e00d-4055-a536-2806304e1a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 a685795c-8672-4e32-8fa9-a413bb1e4b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 7d665c48-aef4-4702-ac06-191428f0a8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 3ed5afc2-4800-423f-90ba-fa87578cd25f)");

unit.assert_eq16(16'hCC4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #659 dab9782d-f99d-42e1-af8e-6ce0a8847693)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0294;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h0CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 24416b35-1d37-4f4c-bccf-099ff43995cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 5d3e47ab-1fbc-4110-9940-75aba0e6b932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 54d7ce88-9a48-4407-9ddc-d7c9f448a552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 06265b89-e847-4885-bee6-d97d48f9a180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 f83fd519-28ad-4db0-b178-2641e12ef2bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 d9a2e999-88db-405b-99b1-abd7f7d3657d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 032153ae-f019-457f-961a-887bb1501fd4)");

unit.assert_eq16(16'hED74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #660 0257a76f-67e8-4f3d-8c98-9206ab15e59f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0295;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0660;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h0660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 69e1023f-65cb-472f-9f21-19909ed788de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 d69b8c64-9461-484e-8d27-08ca4b082319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 b432c85b-d48f-418a-b489-af9b788ae3c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 52d361f4-5b6c-43e1-bf38-185c328c3ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 dc9646eb-88db-42f6-847d-7bd5358d7603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 6f94f752-19a8-4a4a-bec5-e3f1a995faf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 280dbdb9-4586-4db6-b154-4f20d0d1c269)");

unit.assert_eq16(16'h0296, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #661 57c2a8ad-df53-476f-802e-b26b253cb09f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0296;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 f51b016d-c8ae-423c-bc02-c6b1280c0372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 2a85fc5c-137e-4507-a764-6e18c2412796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 b763a94c-0d53-4b0b-acd2-2055f71ac112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 45095a30-974e-4552-adf2-4dd2bf39c048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 bdb8b5d2-a71c-465d-bcc5-3904241f04cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 01d7b685-5774-4e82-be9e-1f8ea63759e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 f6d9ccf6-c925-474e-9d7e-3e0c226a2f42)");

unit.assert_eq16(16'h0297, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #662 6e4547ba-12c7-426d-84a3-4c78a83481a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0297;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h065A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 47247fc8-1062-4c72-bcbb-d2eb0fa175e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 949b8817-4737-4ffa-a017-b883965f3c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 90304e41-8cd2-41de-a7af-2002070708af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 99ca5f48-cd43-4421-8341-0074eb3f34e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 aa4f7040-c7ba-459b-aaad-f2331ed651c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 66949f0b-da7b-432b-873b-70a091429a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 2b55535b-27d7-4b26-b965-7144f118833d)");

unit.assert_eq16(16'h0298, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #663 18c30835-715a-47e9-9a1d-69b60bdef237)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0298;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 9fbe5acc-5041-4c74-95d3-12074fb1d031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 fc55ade5-1ecd-469d-a063-65735bb0992a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 39d766c2-ead1-4157-9f10-3f8a4766b471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 1f21fdb8-6f17-41c1-a5e4-454d693e6ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 c94ec485-c9fb-4ef9-a6b9-2dec41b28894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 0f2b7f3b-474a-4c6e-a2d5-44fe5cfee195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 418f6057-0d04-41f4-85a1-e573df8a0af9)");

unit.assert_eq16(16'h0299, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #664 a8b31820-5ed7-4519-9319-a2ad908ac019)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0299;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0290;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h0292, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 895c9c7d-d626-45b2-aca2-b8fedfeae299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 2d129de4-d0f9-4879-b0a1-10827199666e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 3eb66f49-a573-491b-9504-849254f59993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 4685268e-8f44-4285-adce-bdfe3673e355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 c79a78ce-9247-4c17-8b0e-388c324b90d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 fa9378f8-cc55-4174-b5a3-b36f4ddb9097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 9b331815-a451-4f0d-b9b2-3ff77525af98)");

unit.assert_eq16(16'hDF05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #665 c60ba066-f874-4c77-bc66-d87278337b57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0083;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h0085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 1a3b4571-6e4c-4a51-a130-30921832a670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 1e0c74c6-b228-4063-a690-9a106d01598d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 49b9a08d-1f63-4115-bb46-8599baa7e0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 192d84be-01a7-4e11-96f2-73961b1ae69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 f69dcd0a-dbb6-4a5f-91db-d09245fb3009)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 55570f77-e124-407d-ba3d-0a24c9c9c431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 f7658036-1ea0-4706-9915-ce42a5cb14d1)");

unit.assert_eq16(16'h8B67, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #666 7de29293-bdf4-48d8-b542-285b2e79d994)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h02A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 3f8c20c4-da00-442e-9771-d1536c8df221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 6f294cbe-7f6a-4633-9c26-0d3cbf514f79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 4fd800d9-e1f0-4eef-ae1c-48b0765b09a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 ab37a64e-4f52-43db-9766-89b55c6c32bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 695cb3e3-a54c-428f-affe-61b80550c4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 c6320f4c-1ef5-4ff7-b20c-4185e9b17bfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 c0508de0-4e4e-4c21-b24a-086cd1d14c61)");

unit.assert_eq16(16'h1EC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #667 7c3f782e-467c-42e4-9df3-4ffffe157f90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0520;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 3881808c-8a7c-4b26-9972-a80a0159bbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 70fcb406-2a1b-4e22-97cd-94b678793e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 168fdb0a-b264-4223-81e5-475c5e6075f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 27f00463-6b04-40da-bbfb-6ad7ab9996a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 314c4490-efad-41b6-8c1b-8b08da729b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 be7b1f1d-ba63-4ccc-8e3e-a2aa2dd177f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 bfcef6e0-3d94-4e87-bf82-837c13e359fe)");

unit.assert_eq16(16'h5644, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #668 2f24ac96-a1ce-4100-84b5-b2d3c3edfa90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h0B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 30170460-f3fb-43b9-8ece-556dc4e78fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 1570fb80-039f-4d26-bcd5-8e9401ecae7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 14223a08-da5f-48b7-a562-a55f0fe3889b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 4e6c35f7-5022-4f68-bb94-0cca65e76dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 982a5486-7b79-478e-846f-c16d42091ae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 7bc669a1-c56c-4cc6-8e76-2a3128febff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 650a629f-5968-4d74-866d-1e63675c055a)");

unit.assert_eq16(16'hA821, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #669 811ebd40-fd34-4267-b619-deca22faac7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h0761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 19fd13fe-3f84-4545-9391-52adc5bb2987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 52cb6468-534a-442e-a5c2-af8032400cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 10b20f90-2c1e-4cb5-b5a6-15539b0be0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 67131133-b819-4da0-9a9f-e02c1f90d01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 f68eeb1d-dde9-497e-bcde-2b5a9539eb20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 845a24bb-c3e5-40e9-b553-4b8a8590e663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 38ce48c6-fe7a-4105-adca-e18cdb7ce123)");

unit.assert_eq16(16'h029F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #670 dc0436ad-6e21-4f32-8256-a12965295730)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 7ff2c5c4-1076-4add-9515-dbfe98a66c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 36b1ab65-821e-465c-a0d4-a2a3bafa436e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 62df9ef4-2dc6-44fd-a627-d86263f5a7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 2cf7c7fd-1609-4fe2-b652-75858e5dd46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 b54887f1-2fe1-4b8c-b001-d23815594016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 a0bf1e72-6536-48d8-9131-615380b28659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 bd2ca83d-efec-4dcb-ac74-40e043e594ee)");

unit.assert_eq16(16'h02A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #671 c1f380df-b002-4e6b-91e9-e221726b1303)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h0D46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 482aaacb-1937-4b8b-8fa6-fb35e439975f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 297e1179-57d6-455d-92f9-ab6bd805a8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 920d28fa-3109-4cba-9d4a-4013c3f36ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 c1257ed6-435c-4115-89a1-4ab9deee22bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 226a8317-2ec9-49ef-9330-a2acf0c6d252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 f886322b-e947-419f-9c0c-080507cda67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 ccff9ffb-9a8c-4ed1-a998-532d8f7badd2)");

unit.assert_eq16(16'hAC78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #672 30e8b2d0-42e5-4182-9e5f-b4d211b2bbc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h0A66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 ab565b63-ad48-40ff-a6a6-9399b003ffcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 c749fc9b-b81a-448b-a8e4-8472a6cdbeb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 482d7449-e195-4d99-bbd1-154ce74902f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 3912e018-1e9f-46a3-b889-ea8b0508d749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 ce574d52-b53a-4767-93c7-475c2545bc5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 8bc1552e-c41e-4058-b428-f85f6ff3ee0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 05daf301-a0b0-43b1-b87f-a0c578230128)");

unit.assert_eq16(16'hD067, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #673 303f19ce-3795-47c2-ac0b-b72d5593c1ae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h0225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 1a57b77e-78ff-417b-be8a-a802cb2f0483)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 1e6c8f94-4775-471d-a0f9-6770b11a072a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 0b7712c1-6fe8-439d-af1d-8854196f1ff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 2c94f481-5efd-472a-9816-0c578a0ad2db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 99a58b7a-e2ef-446c-84ab-86d71b4881fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 28d991c4-aefc-4ad3-916a-0f74ea90b06f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 492b7e62-e8ac-4c44-9b1a-5b75a19b4998)");

unit.assert_eq16(16'h02A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #674 4c9eb4aa-c11d-458e-bfd6-57589555ab44)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0674;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h0674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 75d6dc77-3321-4685-a98a-4a02b211340d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 dadf617b-6fa2-466b-addd-61079e3a5354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 19e7700c-29e8-40ae-ae20-ad5562b19142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 989924e9-00ec-484e-af67-c17b46982c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 e5cea7a5-2d71-4c9e-8c0a-1b08343cf8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 818d5dbb-1295-4a97-9b7a-0ddc4299f897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 c1ee001c-9935-4f82-9dc2-ab78e7abaf05)");

unit.assert_eq16(16'h02A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #675 3cebf2db-bbe2-43a2-ad68-6833aa352623)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h057A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h057A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 947d440e-d839-4f05-b4ca-d8103b2bc3a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 8434b4fa-115c-4374-a9d4-ff3f40f8726e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 bf494eee-3759-4386-9eaa-78a13c316c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 e4e3810f-d84f-42b6-a75b-5bd25a193c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 91f58b19-be01-415e-978a-3ea7e53de748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 4ddfeccd-8d9a-483b-9be9-4e34c8bb85a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 4f34c09f-2afb-403b-969b-7814d2c18dc2)");

unit.assert_eq16(16'h02A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #676 c77de381-6488-45f3-b4cd-d35b0667a734)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h0985, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 937e8b12-5be9-49b9-a9f6-6aeeaf42469d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 452f372c-8b9d-49c9-91ed-c4e21e12363d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 33ee4a5f-267e-4fcd-a0e8-6544ac13dbd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 2db9a0ba-8681-4033-94fa-d7fed8ebfc9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 4645a34f-6b56-4e30-8a1f-7110ecfa940b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 fd500ece-a7ac-428d-9ecb-a8c05ff3f6e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 cb4c5f63-673f-494f-937b-7b21e51e37b6)");

unit.assert_eq16(16'h02A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #677 c60b6a2f-a81c-4775-bb68-f7391c2babe0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h0FF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 15a2c8aa-6738-4957-b132-50304afb7862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 8e9bceeb-e980-46b4-9870-c1c010499511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 bc9e2e05-7928-4e14-a0b4-2939e06c6185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 5395f6c7-1181-42ab-ae34-77c90b7843b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 5c10f805-820e-4c7b-b0de-a9df98dbf524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 4d5216da-ad5f-45cf-829f-46266575d787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 531cda61-4b13-4851-835c-86ab6030b1c5)");

unit.assert_eq16(16'h02A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #678 fa1e2ba4-70ee-40b2-b583-7e69d8aac386)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h0338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 1d0c711b-5fd0-44d9-bfc8-e489761f6e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 49e8f0b4-4987-40be-84a3-e680697548cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 41d68282-39b3-4f3c-b1d6-b7771ac97c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 6a2d3efd-064f-446d-ad47-5cd195a1b87f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 8d9c835f-2e9f-4c9e-892d-2f82bdb58e14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 b61b2198-9371-4e9b-bdc4-a20d55eb1d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 b9b16b57-a98d-4ca9-8869-5f70be1996e1)");

unit.assert_eq16(16'h02A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #679 56902694-75a4-45be-81f3-82b76cff389c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h0C22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 b77e6961-8c97-4417-8da0-50e7c41f4f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 13747f05-1967-4358-9c53-1829f30d471d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 6af3ee99-0e37-4cd1-8907-12560ac8aaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 4578c15f-cc5e-4aff-a9a4-50bb8bbd4df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 bc65bff0-7f90-4f84-90ce-f77198a92615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 3c4cf5e4-d3cd-4460-beec-d3a03fda82c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 f4a65d50-2cef-46be-80b3-a400c02b831d)");

unit.assert_eq16(16'h02A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #680 9de4aeb3-1fcc-4200-b682-e64364fd8684)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0957;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h0957, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 1fb9a6f7-1539-4665-8cc7-59e207a13924)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 5bfe0369-1796-43b6-a895-3f022747684b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 a3d77986-83c5-4795-9008-825a11c5120b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 bdb47d9c-d306-4bcc-88b6-ebecc76f1bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 f9c881fb-0f62-429b-92e7-b6444cee8925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 e42afee5-8512-4e18-8c8f-50c7663a172d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 cd27426e-25f0-4d28-9a12-f8f107328f4f)");

unit.assert_eq16(16'h02AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #681 004e866c-7cb5-4d21-9615-ba74115905c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h0D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 72502808-85c5-4b5a-8647-ecd759e80857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 e1a60511-f892-447a-b1e1-3763e57400e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 74beced2-e4db-4ccc-aa59-f206aed54929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 f0f91a34-a7c0-4d21-be12-02d378e51ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 37750815-83e5-46a5-8832-963a0b527edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 a4329a8d-3068-49ba-a879-b3f9f96c4c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 16d238b2-92cb-4e44-b56f-1def01d1a7ef)");

unit.assert_eq16(16'h02AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #682 883cfc79-1da5-4df9-a241-eaca066d234b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h0EFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 7e1815fd-47e5-4a69-aa32-3c141e2a0deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 79eb8c47-76ee-425b-ad17-15cccf22359b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 1a705548-5822-41f8-aa81-cd611455333c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 ca1ea162-22a5-4def-a058-adbad8c1a31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 f032a64d-a38e-4446-8933-8586616b32a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 c0ccb2e3-a9be-4368-bd53-812451b02f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 50886d95-42a6-4503-a044-e540c73ec82b)");

unit.assert_eq16(16'h89C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #683 d1773fef-70a8-45ea-8d44-e99eb603ac94)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0861;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h0863, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 2883c0d2-e529-4314-8e08-5586f5a25b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 ddcfd5ad-b30e-4c46-8bfb-df8438e64658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 9e170b29-283a-4ecb-adac-72f26213689f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 d087a11d-1dcb-47fe-8ce2-47c61efb55cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 644bebb3-9cb7-4394-868c-16594c3837c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 35946352-df85-48d3-863d-de41bc855962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 a9bd01ef-7d7e-4191-9d4c-6e66f9a74b64)");

unit.assert_eq16(16'hE1C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #684 d67b7b5d-28aa-4525-867b-475df2697fa7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'h09B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 81564c65-c1ca-4b7d-bd00-7b3f0921458d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 3e6b8b65-47f5-4ab7-9175-44c870644d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 e01f5b0f-e877-4206-8d38-2bb36d02628d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 c0bde5a5-db68-4a98-a8f3-0de962900092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 9cecd6c0-9f9e-4d91-9a8a-271a49c3d720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 d19841bd-1cb5-48a4-92c7-d1ba8b4bc4f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 af2fcdac-74ee-44f6-a477-5e7ac13da89d)");

unit.assert_eq16(16'h88E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #685 69771226-2d6d-49ae-9bbd-3fa959499476)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h05FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 69ca4c58-0cf0-4b47-ae9f-611e74845a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 d109f37a-1d7c-464f-82fb-f67db66ac4c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 24a55a1d-e144-4b55-b6ed-ee1aa334f209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 6e3fcecb-4cf9-42fa-82de-841365637747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 18676426-3447-4ab4-9295-8c26882aa0c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 a782e22b-5724-4743-bb75-39670c784a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 5759fc92-fa56-4478-a016-e05b07ae141e)");

unit.assert_eq16(16'h33BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #686 d7104295-da78-4847-8380-6b1a51d8b11e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h0FF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 3a44dfaf-6f55-4821-997a-e4d7bb00440d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 8fcd3ef1-7173-471f-a5b5-634a56bdbad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 40ad3f55-fd8a-48c0-8e63-43af94ac9c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 f99dd474-7e27-474b-951f-922e96389f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 0500afb0-d68a-40eb-985f-a136341d8421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 abbc2984-9d6b-44a4-a3aa-8d902a62f347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 a06ea8f3-0a21-4a4d-9be9-db029931b0f8)");

unit.assert_eq16(16'h6005, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #687 bc923d0e-4c1a-44f2-b329-ac5d892bf2f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0616;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h0616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 f930b79d-d5e4-4d11-b7ec-0665be163da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 e9169a0e-9302-47ca-abf7-03344a21340d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 e5d2e62b-8ac3-43fa-92c1-6f15eb1aa1e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 5cf73839-104e-4c5b-8f38-c0bfe73632fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 63c1247d-c71c-4558-81a4-f269ce1ae6d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 1d266931-dc27-4a84-bcca-ff0aa61409d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 93305dfe-ed19-4c8e-82df-49431de0e68b)");

unit.assert_eq16(16'h02B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #688 bb35323e-ad35-4722-8064-afb5d5c586ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h0D65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 bdfaa317-a991-4575-b467-6924993217fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 8b4b860e-be63-4819-b2b9-28dccf8bebdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 8b8cb8ca-b57d-485d-bd29-19ebfbee7d2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 7d9f6973-9999-453c-b3a0-76e6a70415ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 d464745d-edee-49e4-9bce-e0cf55d08bed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 5f72f904-ef0b-49ef-a6e0-a00e022b1917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 432f45ba-65cc-4d87-b375-4d7ece3b1fb0)");

unit.assert_eq16(16'h888F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #689 01689145-4fe3-4d54-96b0-64beb16fbcfa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0201;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h0201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 6fd5d3de-eb40-49d4-9ed8-6780a7476710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 d8cc15b5-e383-47f5-94ce-045be35dcb66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 e422670a-019a-491d-9a9b-dcda1f47d228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 9b352bf3-ffbd-43dc-a997-4f33bd5b3eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 76705851-00d2-483c-98a5-2e873171ce76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 42c4091d-5af2-414b-98d0-35839acf6dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 b4f7ddba-3d9b-4251-9e54-74b415dfce73)");

unit.assert_eq16(16'h02B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #690 b2408766-00e1-4204-abdc-68affc94c76d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h0BAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 e5ca2a66-fac1-4b7b-a89f-0439e0a4bda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 6c3605f5-c298-4a98-97e4-f102040a671b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 088df3a1-832b-42c3-b841-354081907bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 311dc90a-0234-465d-9b63-e23eaa575693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 259b6078-9797-4193-bbac-c81f1f5a43d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 7cadb744-2c04-468b-b934-f94a0d1ba643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 686e68dd-ea30-4dfe-a377-0b68381408cc)");

unit.assert_eq16(16'hD47D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #691 f77b7aa0-fefb-4b85-9f47-3a5d26361f24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h0E34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 60f2c741-70bc-4c99-bd38-f98887bdf246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 1a6f8104-140a-4303-94a1-a39634520c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 810f28c9-fa88-479f-b7d5-c79dd222a4ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 9fd7bcc2-ef3e-47d1-8c85-2e1592fb9357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 eb7f70be-4542-402c-81d7-f433a7ca0e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 614e40d1-d0b9-4e78-beb4-cc8f417788b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 3d377735-fa9e-427d-b0a7-353237921608)");

unit.assert_eq16(16'h02B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #692 c9752c32-432d-4f5d-89e6-708612941c84)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h03D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 bd9d67cf-af01-4f0e-ab77-5b77602b7e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 8f6833d0-1d7b-4afb-83f6-7b70686a214f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 1b3969f1-a6ec-4e40-b493-cff736d1213d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 6e092540-3fbf-452b-a518-aa0c135c9812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 1ef6bf1d-9207-491f-aeaf-fa74f0facf0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 9b01cbd0-d89d-468f-b287-29e23670c2cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 07649a7c-7c11-403e-b51e-0324f80a3463)");

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #693 d48a2891-b6c8-45e7-8288-5e94144ba89c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0999;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'h099B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 0d0bdb58-e048-4e72-a4bf-90b2dee9db66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 f5f48467-faa9-4910-91d5-8d31bf944816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 2c5806ec-bb57-440b-a3db-90da9589ac17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 4955b24b-7248-49d6-bf8b-25e34ff1c070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 90ad7524-442b-4d98-a3c0-ac01898b7041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 902d3552-ece6-4d91-b34a-8afe917af6c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 d2b11a3d-29e3-4041-a1a8-799d27330249)");

unit.assert_eq16(16'hB445, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #694 d770cabd-6edb-4cfd-9049-3032d2edfb73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0708;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 07534922-828d-46c7-b890-ea911d308621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 431c272f-3f46-44b4-8d2f-4bafabe2af5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 7d61b5ed-547b-4181-835a-6b4cbbaadee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 ac96e603-7829-4828-8e7f-e0b102ecceb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 48dfa007-433b-4db0-b24e-16343898390f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 a9601ce7-1ec6-4d5a-8860-6e9d06efd6fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 b6c73d09-0f38-41b3-95ae-fe861620ceb6)");

unit.assert_eq16(16'h81C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #695 550b0c18-11b3-4159-92e4-6367ebe1e41f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h020E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h0210, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 204b1698-4012-4099-b600-fa0f31c17a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 d211954f-74e5-4367-817d-24617ce41940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 ecb2d08e-0d8b-4822-943e-90cc3b993bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 f592c6b3-865a-477f-b166-b551cc69c13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 b9f3065b-7b71-40f2-b3fb-9cf5a8afa1fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 d1b6f177-5ecc-4afc-8952-c4e8d89f30a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 3b5f4857-c730-4651-9ddf-6085083f54eb)");

unit.assert_eq16(16'h9ED4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #696 686ff4f6-9fb9-4cae-85a9-9dcd16a604eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0478;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'h0478, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 cb3d0e68-2052-4890-83be-18d07c86effe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 3cc511e6-8513-4cbf-8852-06d90a348f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 2cff1c65-3070-468f-a19f-e6df50e8d86d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 8294735a-1024-4c25-9102-fe169e831a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 80f1b437-24a2-47e5-bb7f-1f8902bb44f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 581cebac-9029-4839-b681-8b37e401c36b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 99728529-0ade-44a5-ac1b-38a9a8de2117)");

unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #697 3c3e6009-7342-47be-868f-1ad2a0384354)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h0BC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 19b9b27a-6acf-477f-887e-98502440b1a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 351c4a82-b210-4eed-938c-b7932d7dabaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 cbe1816a-1c1e-485a-a135-556c773c508d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 92bcfbb1-23ea-4c8e-bc9f-3bd1e4c398df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 e8dc7ac2-9bc7-4a5c-99a6-c34778106d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 983a3c80-7880-44b4-a4be-77573468249c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 9d7c8929-3291-4016-9064-7858eed37355)");

unit.assert_eq16(16'hC6D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #698 24fd9d4e-e8d4-4487-aaa9-4ccdbee3e1eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h0D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 835e7ab8-ffcc-449c-b06f-4d0a7c5b3bb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 e31b4ebe-f25a-4751-b66e-85b72c6f5fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 dd97a6d0-afbb-4a55-b608-a1676e59d274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 cf7d1b3c-141c-482d-a036-aebccbbbacb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 c7c694b3-d1d1-4313-86f9-735abd85aaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 83901787-102b-4717-bd63-cc7ef10dc107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 5d9bbb99-e0e7-43c0-9433-7b413520455b)");

unit.assert_eq16(16'h2247, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #699 a9004a04-43c4-4231-8ad9-614f542c4edf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h07D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 54b8cbbe-f3a6-4179-ad2e-e9549ad72c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 c226ec08-fd0d-49b5-b602-3ec43a45a9c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 dab840ea-92c3-4d04-b8b2-03038247b6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 8c1ebc40-0f43-45ba-b981-b5fd9210982a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 966fa61d-3895-47c8-8509-1a1f53c0fa94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 a5892b8f-f427-4ad6-a6e1-738d6669f1c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 53c1e612-8afe-491b-b806-24f6b7d255f1)");

unit.assert_eq16(16'h3A4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #700 9010a34c-fcee-4413-87a4-4502998c9ac6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h06FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 9922da91-c9ad-424c-babc-560a265d0477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 7bf5dc51-b20b-4d56-9f30-0a8617174cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 afedc844-ec8e-45b8-9246-d0411c47f820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 fa074522-16cf-4a87-b5d9-79c4eeeb47f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 938c63e5-9fae-4491-8d14-1219998c200c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 6e894955-1735-4e64-9922-328ecc7d8a8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 0177a5cd-2463-484a-9e7d-efc69f40b981)");

unit.assert_eq16(16'h7C0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #701 321d3228-af2e-4698-ab71-219d90bba8cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h0C2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 39de3299-6bb1-4db1-9947-e3ffdd6944a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 45725560-7bac-4ff3-ab92-e66751a22aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 f9ed9212-f5ed-4eb4-9d70-13443b2cbb6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 95e4dc27-a5b5-42eb-8b62-731a0877f70b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 aff4d18a-6618-4e88-853d-d444285ba46a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 eb9538aa-9b96-48cf-91aa-744e067d9665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 c6d3e13d-5253-4575-8317-1a37a695aefd)");

unit.assert_eq16(16'h3DB7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #702 9e578c3f-01d8-4ef7-8a12-4147393a3a91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h0EFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 aa0c531e-0c1a-4d1b-ae8a-0ce31dace661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 3115cc0f-2d45-4372-b5d2-de17fe6b9f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 30b4fc33-0151-4acf-bacf-3cb21da20cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 f9eaec9c-045d-4232-8f29-4ad96133f678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 8ebcc138-4d28-4a0e-930a-601a76781022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 0ca79cf5-8688-4851-9687-08762f549009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 b5105f0f-70c3-4a38-95ac-0e35f24b9ff8)");

unit.assert_eq16(16'h03EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #703 a9f1e280-1984-4962-a556-088d055bea29)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h014F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 c4ace6c8-2543-426d-b2de-d69d5f240da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 7e02b4d9-a6f0-485f-848c-c2e04079ce88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 8b21fd27-7665-48a7-aa9e-f4d372111ed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 fd432581-89d3-4cfb-ae8d-d66cb13f2eba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 aa0d01c1-acaf-4c33-8b1d-a037e59eb4e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 4ee1f02a-8c20-44d6-a97c-6597cf6eb862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 d9aae8d6-fe39-474b-b79c-914bdf1ebfb2)");

unit.assert_eq16(16'h4DA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #704 81e60539-e7fa-4505-8eb9-78bd09435571)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h0B62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 773ac55b-8a06-4067-9269-70fd6f387ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 fd0dcf45-f56f-43b7-a317-2de0f1070c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 a506a21b-7c0c-4cc2-a909-6684b38480f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 31cc2d80-5655-433e-88c7-2ef1b574ac23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 9d7552c8-a00f-4b9e-9ab9-537acefc5835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 c6b9d629-7f23-40af-a0f5-38eb154fa8a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 079cd32d-8f38-460f-9bcc-a771b435cb2c)");

unit.assert_eq16(16'h02C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #705 bd8d880a-7e3c-454f-8b39-69fe7e625963)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h0D68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 72844263-bf30-4d34-9984-fe108b42a410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 97886d1c-4c77-4139-908a-d93e50633576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 0cc4151e-73d7-4384-bf56-57d3a9a3531e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 6b589e09-b4d8-4c85-a8d8-c5162c7f6e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 5fc2c0da-0077-428a-a00f-1f8f0df772fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 b58a0264-18ab-4b96-980f-c70a14be0a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 e721735b-3003-4368-82a5-cf9768c4a592)");

unit.assert_eq16(16'h02C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #706 dea9bba8-a817-4dac-ac6f-75133b3ece55)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0917;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h0917, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 62c594db-8e2f-46c1-8600-481a480c38e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 51926644-4073-4545-9600-74f7cfc2719f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 8fc36167-e433-437e-96d9-01534dc3e7f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 28f2246b-24b2-471e-bcfa-51a1a7fc4f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 e950ad34-69ff-4fde-b5f9-1ad4a6091e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 229051bb-33d0-4780-aab9-c14acb2d4bb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 c297966b-3d20-41a2-913d-b82cf79cea1c)");

unit.assert_eq16(16'h02C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #707 a2d59484-7ed5-45cf-8705-7b292db7cd80)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h054D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 cb405d64-fca6-4dc5-b6d7-e698c0c81e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 8d825467-8ea3-4b46-b178-138a1df2c879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 6af2c327-7884-4265-bf2e-00d2d9c1670b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 4bb70597-a476-47f3-bef1-8c3dfc92b367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 5242831f-1fe3-4e27-b729-c7cb77248ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 618fef29-0c70-4c3d-a452-587305b8b685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 56569425-44ae-414c-80b3-2f632f729def)");

unit.assert_eq16(16'hF5BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #708 67ff40c7-b69f-47e8-8534-77074cfbf5b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h069A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h069A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 ca85ec50-064b-4756-8dc1-f9083839fa68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 10bd51d4-e6c0-476e-8f2d-07245eeabfc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 29a4f165-6eaa-4c85-bdd1-9c4b03755a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 df2846d9-9349-4805-af65-dcabc43dbd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 1f52cd7d-0bea-401a-a1e5-f4b0c004d21a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 566da38e-8367-4d17-b70f-2023ba9e80e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 f2fe9f1b-5388-4d38-8612-1bf7fdb62bbd)");

unit.assert_eq16(16'h02C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #709 29a24e19-b8d4-46fa-a7b6-88b31a6ff9a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h045B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 abfb091b-225b-4c7d-8d5a-8a72d0d6cc1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 73f285ae-a375-4ff9-b207-9dedd237f1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 aa8967b3-fc8a-45c0-a280-19dafbf50269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 29d9e8b4-29e3-4586-a266-586101840878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 4532cf6a-4123-4a7f-bfdb-9f223fedc791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 106af38c-08f4-4288-8665-80a404a93527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 8839bfe3-2bd5-4041-b551-b8060512558f)");

unit.assert_eq16(16'h02C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #710 4a7c1640-74f2-4968-934d-57e9f0e1c982)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h08A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 0d2e61cc-752b-4e90-bc9b-af92d82cba61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 38479b9f-4186-4bf9-9eca-de039a367cc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 e684b181-84ca-4c3a-af53-def0739f4e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 168bd445-0751-401c-a605-62bc566a603f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 46214737-2580-46cb-8ea9-a42ddc70b94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 63763c16-1b39-4d56-ad90-a9e174f7f775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 a6c68336-72ac-4a70-9be1-5adbdf70313a)");

unit.assert_eq16(16'h7129, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #711 840ee490-5067-4947-9693-dc73d8ee4ae8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'h0910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 a17c7718-29ac-4416-9aa3-6c7d78daaf49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 2b98a225-f626-413a-9020-6ecbaf620264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 d335a70e-fadf-46b5-a89d-90b3b4aa5e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 a5e56a01-d684-465e-b173-5e17d37c5f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 e8b4c7b7-6c56-4092-9d30-0d873f73930b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 a1914f94-60b0-4798-aec2-eb20e04daee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 01c78ae5-e9d4-4dd0-ad0b-5fc97438da89)");

unit.assert_eq16(16'hBBE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #712 4ee5e079-8c5c-47df-a8da-6e4bd56297a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h0ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 babe201f-d04b-4e44-b481-5b6b89c20466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 d5c13418-bf37-42b6-bf65-f9c710a9e7ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 fd903863-ddb4-426f-84c3-ba9bedd391ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 55543e99-bb2f-4cc1-84d2-5f9911e9cf67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 460938e5-2494-44e1-bdf8-476b6f01e3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 0d0fa001-e747-4eea-8c9f-fe1a9996b70d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 7f52cf43-ab74-4da1-8c6e-645a94d9a968)");

unit.assert_eq16(16'h02CA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #713 e6bfc78b-b012-4e4b-ba46-bccdce0fb23b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0341;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 2aea82c9-d644-438d-aa71-716048f56199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 33e2625b-94c2-41db-b6be-5ff33375f19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 9ba6e2ab-cc25-4866-9264-7d54203d46ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 125ed313-23d2-46ce-a032-8bd598e07e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 7d2f8232-bffc-4ab3-a12d-6d556109dbb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 bf7c6542-9c93-4c47-adb9-f6cebb938595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 d74f096c-f288-4237-a888-ec99ad1e3f6c)");

unit.assert_eq16(16'h02CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #714 16ee2a2a-202d-4928-8b1f-ea2aa8b09052)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0420;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h0420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 8ba96b78-91c6-4fb3-961e-430762f25f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 fbd44b50-415f-4687-8fea-689a9b20f80b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 efe236ef-764b-48d8-a8d4-ad0461a30ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 8558be1d-13d6-4982-aad5-01537371ce85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 61638131-fb72-439a-8e44-89ce459bc3c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 8f87de61-58c1-4ffa-bcb6-a8b9cdce71ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 0635815c-73a8-4511-994c-a5b6183d8c90)");

unit.assert_eq16(16'h02CC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #715 58044026-9504-4e0c-a01b-ba76f1dc1f0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h0E1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 e1c091c1-e927-431e-b966-7fbaa6528c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 ba5ea6f4-e2fa-4d10-af3c-0b451215fd36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 ec10311b-93c1-4d45-a351-14549634f6d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 3b190127-b7ba-4546-9b8e-bd42fcb741e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 492e89bc-7870-4572-a773-1cd4b8bac67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 75468e8d-9cf3-4313-bf3f-64f67927847b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 56ada56b-162b-460f-ab1c-d0c31f535435)");

unit.assert_eq16(16'hF85A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #716 12702d6e-d4aa-4842-91dc-40c0d2250bfd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h078B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h078B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 18c3d57c-f6f8-4424-8abc-06bcc523d4b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 20a5e781-246e-4d7a-a9be-30b5692540da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 c557fdb5-3044-434a-8927-bdc57ab4a684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 2e3a14e7-94e5-4d0a-bec6-3c4f1c513776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 a3233964-aff5-4268-b349-90387a74ab08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 3bd1dbfa-c652-4698-811c-992f1d9f17f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 1186e6d8-b103-4c7b-96f6-c447f0ec3588)");

unit.assert_eq16(16'h02CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #717 7285f9a6-6db8-4d47-a18d-ebcd1545192a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h083C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h083C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 5b7c4c64-8408-407c-8801-0d22d5e815f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 c9a7d26a-aee5-42d7-83c1-5e45b1451f1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 ec6c4bce-08da-4d1d-a4ae-0680336984b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 716a150f-3071-498d-9243-067c54fe7dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 86e0c162-352b-43dc-acb3-3d42c0887870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 e1afd571-d348-44a4-b9cf-b021966be8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 0820f5d1-2c57-4155-bcd2-d82c5e561dbd)");

unit.assert_eq16(16'h02CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #718 3bc9c0ee-a5e5-431b-8f7b-054490a2e84b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h0F8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 c3218712-54a4-49cd-ae1a-b6ca5b8827f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 8c98b9d6-4bd7-4216-9128-0ea30c4c2b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 4647ad25-9748-4cd9-bf83-a742a1662831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 dc87ab4e-0862-40ab-8506-4c54460acc37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 61589f36-7968-4024-af60-d1a4d9870050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 9647de05-8b69-434c-9ab4-4cada49c44ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 4f32937a-7538-47cc-86ba-12dfeb748cca)");

unit.assert_eq16(16'h3B3A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #719 5bb12230-44be-421d-844f-08bbcd534116)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h01FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 f61ab902-b6f5-4947-bcef-268606365ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 e7ae3bc7-d825-4096-8f1f-9e4621a31e1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 df118177-6464-4ace-87a6-75bb90524eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 dede4464-247f-4cf2-bb01-217c4cb31534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 6139d12d-ba7c-4c5f-89b5-e47bc4d12346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 8fc9ea63-7a55-4192-a81e-7cabe70d2386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 63f253d4-1656-4222-b8a1-a994090141fc)");

unit.assert_eq16(16'h02D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #720 825c7af4-a543-46c4-ad15-101033442908)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h0BBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 b9091f5d-32d1-4825-8435-6bce0edeb637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 36bbdaf7-1390-4f07-84ca-fc46f1d2133f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 82c4800c-33d3-4313-b156-a0a624e85951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 c578932a-4130-499c-a338-ed8d4699b973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 c7c27497-f284-4c73-a7d0-922657f9cd9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 82637d48-5877-492a-906f-61fd8db8bd4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 00af4ef3-8bea-4b4c-be68-af2949cbe207)");

unit.assert_eq16(16'h02D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #721 0b051bc0-4a4d-4db8-ba8f-4fe7ef69d131)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h0C9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 7ebcf800-9508-4e66-812e-cf4c136134a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 c3f9b13c-87d6-4542-b296-a390c674c2dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 4ca21721-709e-410a-a0a8-f82152aa293c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 f6ab412d-ca8c-4d8c-a086-562625244b4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 c68ad87b-edec-4141-8481-a4879e605e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 336ccdd2-a0d4-4928-90ad-ce40a968f4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 45480656-6d69-416c-a8c3-ca2bc169dca2)");

unit.assert_eq16(16'h02D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #722 73de50f4-698f-4b03-a44f-02485228f163)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0789;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h078B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 78a866ab-573f-484a-961e-00801eaf1ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 696c3d97-3bda-4fd2-85d6-642c34d4ec57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 47392e24-77bf-47a6-8721-e1deec51f8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 537a09b0-f9d3-4356-9cc2-c653db1a11ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 753f2f24-2871-40d6-bcd3-1abcd9cca8bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 330c31b2-fc8f-4bc2-afc1-510024627ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 e175bfe1-58cb-4b7e-acf8-89776129bb04)");

unit.assert_eq16(16'h60B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #723 15d2afbb-ef30-4667-bc09-90b735b8b005)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h016C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 44f7ae91-41de-49b1-8c73-1db4db044316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 9c84b7e0-3804-438d-904a-27c7007e0dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 1f67e26e-3d6c-4023-b833-b461b9123605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 93c7db8e-9eae-428d-8a52-5a932f05df2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 1a640277-6275-45a0-8fe6-39fc8edb3e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 7085a408-e556-4d9d-b2bc-97f77ee8574e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 29216838-1204-4aa1-b20b-173a4ad81163)");

unit.assert_eq16(16'h556F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #724 f3e3ea5e-e58e-4bba-aab5-5b4b1927358f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0778;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h077A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 6c1f9a9d-1802-406b-b0fe-60e8c47bb719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 f0519295-8f07-40d8-a881-60de5cb24239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 9446333f-5649-4885-848c-a4ac40f8f7d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 3a5db441-7f9b-4d29-b03e-566538bfaab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 a5bbf5b8-e45d-40a3-a7ca-531d2bceddb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 4e943307-540b-4559-8494-4b1ae3a1cbcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 c4ff1471-b86c-4f95-afa2-6a8309711f04)");

unit.assert_eq16(16'h266F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #725 5989d7e1-4ff7-4775-8c25-f68f293572b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h0C07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 f75edda5-b4e9-46ce-b267-c0384a26e057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 11ebe291-0b8e-404c-9f97-15f4f129b64c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 d0ec0f12-1610-42d6-a3ed-313a6bc6926d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 9ede46e9-d748-4572-9fb6-2cc71f46968c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 2386627c-dbf6-466d-b2f1-3ff3c49e3e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 38575b31-7bb2-4049-8878-dca641f6204a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 1bc20f32-3f3d-4347-95ce-7a7eb01b5da3)");

unit.assert_eq16(16'hFA6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #726 155d3025-81e4-4e16-8467-5214bcfa10ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h0E03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 4a5d7b2e-040d-4817-b9a0-206ef818c56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 5f5c0b1a-a8bc-40f8-a2ea-4019d6e44149)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 45cfc189-0fca-4d06-b44b-4e57a52690b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 c2c259a9-5ed3-4c5a-b6d5-707119312e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 f3f29f48-511c-48bf-aa9e-2295215871b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 40705d35-a670-48cb-9580-9e09d88d9d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 b834a66a-e8bb-47bf-8ba2-1191bb845b7b)");

unit.assert_eq16(16'h4E10, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #727 99b40bba-5ce4-465d-9851-8b22890d20e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h0C10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 412fb2df-26a4-4a68-9651-c856f4b7eb9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 c0d5684c-0a75-4ecd-86d3-c52e8fc5d6f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 51b22f92-c6ac-4171-b4b4-6706fec69c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 206e6c6e-c376-4359-9a63-da48b036e20f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 53f056fe-6441-4b54-aa66-a119653189f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 48c666cb-0578-42dd-b863-7b692431f755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 9edc78a3-ecfe-487c-9d7d-b7b7c9c529d1)");

unit.assert_eq16(16'h56D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #728 bb913717-04db-4d72-b177-964be8eb7107)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h0914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 623eca5e-db3c-43c0-965b-7c779883ebb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 20bf2778-2a4c-4bdb-b378-160c50fc5b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 af79f3d8-5c3c-4f06-b7ef-43364b7d57a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 023c1d5b-68f5-4606-8022-37cb0dd489da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 5af501ab-0025-4064-ac49-40a72040935c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 d411b05d-8fbb-434c-980a-5bc93ad4207c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 8b083146-a203-4dc1-b215-99a63a1b19da)");

unit.assert_eq16(16'h02DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #729 1338fe60-a693-402f-a9b8-9e4131a88958)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h0D03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 efc2f9be-250b-4754-85d0-3177099aa33d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 88e29a3d-ca39-4868-8f80-60e7c49359fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 aaeaa4ec-aec2-409a-b218-018d1e2fa628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 c8d1f7cb-22cf-4225-88e2-8e0b4f17ddf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 03ece3c2-6597-46f3-a91f-1a5b2307cfd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 f94aa13b-096b-4d8b-b709-ed852b4feac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 196847c9-15cc-4f37-9048-981dae046c98)");

unit.assert_eq16(16'h02DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #730 d44600e2-d593-4e52-ae1a-bb689435a0a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h0068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 48183d32-27bd-48b1-be34-ab814447be83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 16018ece-2149-4e43-aca1-8cbfc1c9df40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 b03315b5-5088-4d70-bd02-ef5b6de26fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 8b9f7856-eb4f-4946-8359-8fc7b2a40e2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 c9dcd213-155d-403a-84af-c6a305818372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 94315e19-1843-4e4d-9b63-9efdf4afe17e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 85a0a500-f11a-4c01-9f5a-291e33f5e55b)");

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #731 7f6003a9-24e9-4a9d-a463-2e7e6ea410f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'h035A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 ae4293fc-6f2e-4a6f-bfd2-c6ff71ec4012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 509bd9fc-7bd8-4b76-b583-e9a267f065a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 7018d03f-5417-441d-b8ad-07541a9fde05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 e7fe7d23-c96c-46b6-89df-f106ca39a4ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 4d0639ce-17f5-4cd8-a648-557b702bbe93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 d588253f-c118-4e37-95e1-9ad5786613a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 825c74be-338a-4675-86bf-35bd2d0e3af8)");

unit.assert_eq16(16'h02DD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #732 02e7afa0-e2fd-4977-9da1-a6b49027f4e6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h057C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 1db6cfa1-b611-45ef-8973-e051404e11aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 8a13b686-e406-43c9-92a9-20992c73ee81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 b5490bbd-eb70-424a-bcef-03b5190083e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 68223c11-b096-4317-9ca2-4247aee8d5a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 b195572e-3842-4f68-b63f-39789c52ac38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 4d3b2d90-69de-4dc4-aa6b-7bd503a64f06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 9f840055-26e7-4e09-935e-392fb7d3d3fd)");

unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #733 f641899f-b33d-4f67-916d-8f296700e1b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h00AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 a189bd37-60b4-4fd5-898f-7863bcb72554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 14cbbbe6-c54b-4215-b91c-9ff6ee114ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 4172c841-ff7f-4779-a4cd-6db2285a8db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 4539c97c-2da8-40c3-8f1d-e14fb89cc5c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 d5bf7d3b-e065-4070-9c6f-7ae1ccd7e848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 27c3e23e-d2fd-485c-85a9-1e7d71339de7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 85113b39-2916-4889-96f8-2deee3d39fb7)");

unit.assert_eq16(16'h02DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #734 77bc77b5-de59-4463-b50b-b14a98038bf1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h0BA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 340a5538-2c71-4420-b02f-1f7075f932d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 50a2257d-ff5a-4f6d-8613-395747a122fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 0d9b3cd9-02eb-4db6-8fc6-d02870bd5590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 56cbca04-4ab8-4b17-a39d-b77e1e737eac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 2b642667-bd73-4661-a422-03b7b192561b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 f99c307f-2706-4593-86f6-0f784f8b6bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 6f098b6d-11ae-46cd-9324-040251661e77)");

unit.assert_eq16(16'h50DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #735 9716c78f-f0fd-4f3d-bd94-28cc4efa0106)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 c70a4d6f-725f-416a-a51f-d3136c296f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 6c92fd0e-d0ae-4f50-9f05-4e89626d811a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 09dcd530-652f-4569-beff-9b38c25d2d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 f3db2212-d957-497f-bf30-c913babdc00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 ea836735-9ebf-4d96-bd4f-d142480602e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 20cf2aab-3910-42f8-a3ff-bc69551c2fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 c47c5bbe-a07e-403c-83f1-d380b3dc1086)");

unit.assert_eq16(16'h02E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #736 05cf7b10-0685-4014-92ed-ef1cef1a5eeb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0126;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h0128, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 76561d54-140d-4720-b6c4-4b85d0ca18f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 1d259a1c-8986-4043-857b-561ddd52030e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 cf1561c6-90af-4e50-b870-783d0afc1ba5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 85b99e04-ddc3-4ad9-b26e-4470ec3683ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 2b5db661-7c7a-46d5-bda8-b9826ca5d1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 69a2ec2c-685d-4edb-9e25-7c05e962903a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 81e01be8-ccb3-428d-a7a4-6624589857e0)");

unit.assert_eq16(16'hCF94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #737 28a40122-fa05-4a6c-a272-eaadf26361d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h0A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 c337c8e1-88f1-4695-aeb7-b1a84bc45a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 1c6f1415-dcbf-4ec5-bc81-750b216091e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 96c1cc4a-c1ba-4894-9817-ad0a806e8c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 e8492e4a-0c55-4a9d-9d13-af12d58782af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 5ed5b7f1-24e6-4daa-b3a1-0e965da9ca98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 16448cec-fc46-4f9a-92a0-efe1af442e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 ca385d4d-ef83-4459-98a2-418cebca17ea)");

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #738 b1010411-2b96-41b3-813e-82743907faa1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h0D14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 f8f7fba4-6751-4039-9f5b-a95d7a0f00dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 ef3f97c5-3937-4116-9a95-c83614cfaebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 659c0ae1-e05d-4520-81de-b9f1b2e51eaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 1b70e3ec-b8e7-4d6b-a15f-2bdc1a541db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 195c2a66-800c-4f40-ab16-5dec88de4f83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 4c52bb35-c11d-42d2-a5f5-5c0431392ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 d21f61fd-1bbe-436d-81e2-6ca4dda82150)");

unit.assert_eq16(16'h02E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #739 7989cb95-033e-41d2-8458-19e6066f64aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h01FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 26c7b98a-42b0-4170-afa0-d349d2baf43b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 9aa6a4be-e44a-4aee-8715-53b2b88be4bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 22ce2f4a-3456-439c-baaa-61c808819d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 9f6dc3fa-99bf-4b5e-8153-decd6e150b04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 034971c8-bc1a-4812-8bb4-a37271b8411b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 4636cec5-1325-4b1f-a257-44df91a02c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 85262eb1-0276-47ed-bde1-e863606d98d4)");

unit.assert_eq16(16'h02E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #740 aa652d4c-c37b-4d13-8cc7-dc069af6d6dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h0F94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 68cf13f9-9e3d-4e20-b50e-ec4db8a57cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 4329a442-9c9c-422f-8d2b-5e490a72d8dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 73a0eed4-60cb-4e1d-b63f-28c9ff139f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 8a6e8f21-ef66-4a2a-8a5f-b85d712eafc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 c5f90eed-c600-4e07-8602-21a1c096eb21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 fe608fb6-4d06-472d-9c19-7106615074db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 e2d9b715-7bda-41dc-9aae-f2a1f981400d)");

unit.assert_eq16(16'hDE81, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #741 e2fe0236-c980-4b57-827f-c57ae88021d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h0CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 95d1841c-39b3-4443-974b-7a1607c25cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 323cff1a-39b3-4a04-ade5-b5845940bafe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 59977444-80a8-4ed2-9cfa-4825f5a7a4ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 16993cb7-e96e-4165-8efd-0a2771738c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 f9ac96f5-a5f2-48a4-b210-502b6dceb04c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 d4a846b7-4b97-4665-aee2-6800d8201672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 ac145f37-c0a5-4349-aaa1-2d454bdf599e)");

unit.assert_eq16(16'hED74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #742 891f42fa-c8c1-4d67-b07c-2eefd9b18fc6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h0FE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 41df5077-3194-474c-a8af-b03fec7cc2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 a4f2e00b-f751-40cd-9a84-91a8bc15b6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 002793ac-0c4b-4b5d-89bd-b7ee5e159fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 df0b783c-1250-4a0c-8e48-b7f53d77a17a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 448599ca-3383-4970-b537-a7eb682bb1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 c2cfbac4-b2b4-4898-940e-6a8223f7c033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 7b64b2d2-c623-4e5b-88cc-31b66d903c08)");

unit.assert_eq16(16'h02E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #743 5f9bf7fa-dda0-422a-982f-b6e51a0969dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h0F1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 42514343-6c2e-4101-bb5a-57febcf373ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 081be6d0-090c-4a9f-995a-b7f4bc7fec46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 a2547428-bde9-417f-8951-ed5a5428aea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 72059295-a331-4352-9591-b46ba8b29223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 d73a16d2-2b2e-44c1-bddd-89114238e0d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 435fc677-3a2d-47f4-a78a-8882bf4b23cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 3d56a4b5-a24e-4bb6-afd7-c8c2977ad1a3)");

unit.assert_eq16(16'h47C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #744 f713bac7-7cc4-49fd-92c6-ceff1922d200)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 3b743331-37f9-4cac-9f13-9ba49ca4bb8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 ffd5b7d0-cfa7-4acd-9da0-19bae73ccdc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 c073615c-44d0-4495-9e09-4d13981f40ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 d28ab0f0-8b0d-4b4d-b7af-01f90613ff64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 ad157dbb-857a-4e21-b82a-9f87de134d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 d63c5c40-4aa6-49e1-b559-1b0a99fb216c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 1298b159-3a7b-4b3b-8f5f-1211f97b2e47)");

unit.assert_eq16(16'h02EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #745 93b0742a-3a27-4478-9c7c-21bc8f6f814e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'h0872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 d9f0e805-73c2-4b7e-864e-ae26f39f1cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 4f008850-d5d3-4a5f-93f4-d318f040de5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 1a09e50b-7f99-48bf-9d98-192cbca4e61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 84a09b42-3cb9-4934-b924-2ba88a6b7d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 a9b0314c-0072-466e-8c7a-b28d096ce2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 b7e021c8-59dd-42c1-8553-4fe2b299b1b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 eeff4331-e144-41e1-95c3-e4c5dcee938b)");

unit.assert_eq16(16'h52CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #746 c95fbbe5-8cd4-4621-899c-edbcfc680549)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0400;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 f4ff2912-8d1e-4097-a026-c60e264a417c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 b5fb8833-6597-4ee3-b0db-f5471cb10f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 3eebbbdd-9912-4578-b1cd-2dcd63adacb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 54dc4ac8-064e-4ca1-8923-0e2fc58fdb90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 b053fb14-05ca-4701-87b0-6a9add4ed154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 f13075b4-5a8d-4101-9e50-0864bc5c89a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 4e0abb68-2446-4b93-93f7-95d8dc58d88e)");

unit.assert_eq16(16'h02EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #747 abd48d94-098e-4178-9b47-7742c4cfd087)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h02DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 0a65b799-49ad-47f6-b80a-0bbc4f5bcd97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 606685c5-476d-4645-b58d-a9a18244bcec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 caa6e900-1a96-4a98-904b-5e0a40732ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 d7f3f004-dac0-4850-9338-9ec69fca8158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 da7b9c9a-8bbf-4e78-9258-0a1aacd4b208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 247e02ee-d777-4c03-807c-d72328e2b9f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 3a8c024a-ceaf-458d-b311-17c9cdb49a9f)");

unit.assert_eq16(16'h1F21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #748 81ca15d5-21cd-4214-9615-72830f8ded58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h024E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h0250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 e62b7c3b-85e2-4b2b-beea-1c602601974b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 aea87495-be88-4467-a0f7-f5f35d537c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 e330d8c7-0e7a-4e24-828d-521ec6b45ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 1eb12c37-db05-41ae-b4d0-401a0091a786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 97942056-397f-4c38-b983-e9c0aec4f543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 4942acdf-5f4e-4e38-b749-5879eb5d3331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 73bcce39-b645-4a23-8af9-3c50d688f3c9)");

unit.assert_eq16(16'h04D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #749 76a976c1-9b06-44ca-93cb-b3ae693efb33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h0FCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 e3b98776-5791-431f-9587-d313bc7c87c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 0bec07a3-89c1-43e4-90de-33d1370985d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 d5b71889-a980-4edd-b104-6777c98d9776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 94197aa1-d7c7-4811-89b8-8351ae393250)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 f9e74035-3ce1-4f8d-94cc-0d50fe7ec9f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 3f2a0bd1-0b3b-48b3-9615-db88ca575195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 8dd3b335-fb36-47f5-b7c4-6f67bbd0969c)");

unit.assert_eq16(16'h02EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #750 b48b5349-d0b1-4c3f-9d7c-8e3533e920b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h02C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 4a52e6b8-227e-4e99-a102-f734108f8998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 564f9b6e-12f1-4dc6-b5de-a6e6fde85549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 59b4f309-2aac-4d1e-97f4-f2217465ff0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 a1878760-58ea-4f0f-af48-1d99c87a8728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 c7b0661b-1572-42d0-a445-278e4946a197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 aad75c70-3725-4776-84f1-d1d920f1670f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 0a232485-bfe1-474d-9a26-1518c6e501dd)");

unit.assert_eq16(16'h02F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #751 56a55a9a-ce5e-4505-a1c2-6f93705c681a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h0BE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 1bb8aafa-e6ba-4352-8f35-c9e1c4b0bb47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 28d944a6-5bdb-438b-8c95-a2cf2c364fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 4fa953aa-48c5-494a-9f1b-42e0d67aea67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 2e7856ff-c870-4eb5-89b9-794c6e39fe80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 14f7981b-9448-4f12-b391-984b35ba68e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 d0430e16-77fd-4fa0-be33-572ae4bef3c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 73c5afda-e9a9-41e1-863f-8a1f80e8339b)");

unit.assert_eq16(16'h848F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #752 66768aa3-a771-4bac-a820-d7a480a95c58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h093B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h093D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 77befa29-72bc-4cd2-99e5-244729628161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 9dc4d3ac-1995-44bf-8806-da0c149f1897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 bda7465b-db21-447f-a9a3-d3b280bed166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 df9cb6aa-b760-4cc7-baef-29344e98a3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 73e9a842-d1cb-4bdc-a2f6-604346a318df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 368c8770-31ff-4b44-aac8-67b9f9f91740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 a5e269f3-4aad-41f7-a560-bd6d33aa35c6)");

unit.assert_eq16(16'h2A33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #753 189d8339-147e-408d-b9f5-fcc71d48e021)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h054E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 d0eeba34-530d-48b4-87d7-db118a2888ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 80d7bd75-8bcc-4f26-a117-b50a42f361f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 71145ea8-fcd9-457a-bbcf-01f9ac7313d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 065c2bb2-2b9e-46e8-a14b-4b9707d7d222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 f9d80264-8a02-491a-bb6b-ac563f3ce5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 7cd8e1a1-0f0b-4ea1-a17c-930761c8b638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 6176f1d3-9f0c-4aca-b51a-6b35ae1764a9)");

unit.assert_eq16(16'h02F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #754 112fe5bf-4db9-4359-b129-a95ea3f0262f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h02A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 0661b5af-29ac-4dac-9272-d9d47e349312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 0868fcef-69a8-4879-97c3-7d55b1e16234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 0625c03c-545f-4874-accb-dab2711e4ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 57a52941-d0e4-421f-9d00-6f089484b736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 e708c528-3297-433a-89aa-f43af16629c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 82a92350-f5e1-4cee-bc31-2385f7c042e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 ab3e6ad6-4d02-45d5-b6bf-eab245840d61)");

unit.assert_eq16(16'h4447, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #755 05c553c1-635a-4a17-8952-2578e9a67a1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h0B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 9595bbac-6a73-43c6-a0e4-0c83350efaba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 f35904c1-c297-460a-bf87-75ef59a58c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 5aed62a9-1203-4eda-8df3-1039d0bc28dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 31423e22-297e-42d8-8ee2-6796dcdceab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 f40ed572-f977-443f-8377-c48b5a1c0de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 694edf65-d3dd-416c-adb0-3465e862adec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 eae47b08-d825-4658-911a-100970d93901)");

unit.assert_eq16(16'hC106, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #756 9e83d6d5-8b37-4dda-9159-d8064f89688f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h0308, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 b4055945-9281-43fd-8c9f-2f226b67fd27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 3d4140fc-4ad3-45de-ae02-d25a24a20af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 ba56ed3d-143d-46e8-8c27-31cb2a62c66a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 60c37566-fe3b-498a-9243-79abc60eba9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 17fc45a8-bdf5-4ca6-b01a-85039d7e9a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 1247a24c-1cab-4a9d-9525-2b40e15146cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 089dbbdb-38c2-406a-ab5c-7e3dfb1aedad)");

unit.assert_eq16(16'h02F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #757 70fd887d-6833-42b3-b0ef-fab28afe4453)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h0C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 88839804-6100-4f13-8d6e-b471fb1df339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 d2ac5dd7-a75e-4450-a2b0-31746d229a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 559c0fff-6c86-433d-a4f5-ff473cf7ab85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 40bb50fa-9b77-47a7-abb4-2b965bdc7b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 a98209e6-147b-4a0c-8960-9d3c10d02cc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 94395c48-49e1-44ea-8325-835c81bf0c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 5ab1d210-4c36-48e9-b233-2db16d1a36ff)");

unit.assert_eq16(16'h68AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #758 7a0e4f4f-54cd-42db-bdb4-1dd2ef8eaa0e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h0F4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 64d8c250-fea9-4d0f-bdf6-5cce5d11a9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 67f60d22-9ed2-4f0f-9929-4edb78d62bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 4e95f191-b9aa-43ea-803f-10a5b1e325e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 71a32337-a939-4adf-94ad-63815bccda47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 9d770d56-2b50-4117-a354-a8781f7e9bac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 50961319-7735-49a4-889a-305e7fba60e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 ef9ce19a-a13d-4f27-858f-68d10c85c445)");

unit.assert_eq16(16'h02F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #759 1e3ca335-e904-4a61-8f47-568e8ef1028e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'h03F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 6039265b-529c-4887-a8a6-b8c59b19b032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 5b86de04-1d3f-4eb4-a713-7f0d05b3d51f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 9a593664-36a7-4aaa-bcf8-14bfe1752335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 69ad09ca-9fcd-401f-9c30-217f49748ef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 a7d563cf-5681-4e41-b25c-be88dadf85ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 1dbf2cec-ca2d-4ff5-b690-de261887e598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 931bf17a-a0c7-4640-ad42-cc086ec24d49)");

unit.assert_eq16(16'hC785, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #760 83d62fcf-0674-471d-8386-88867fca27bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h00EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 745c97a1-05a3-4c66-aba1-6472bef24861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 f7411e59-e494-4e08-ae1d-7b84346a36a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 425a02d1-8ca0-41a2-9656-f317e846b67f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 8a030c81-69f7-4039-a0e3-61b61936fcd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 48d1c2f2-9a8b-438d-b4a9-c853b8032219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 a41945d4-5c6c-451d-95d3-4affd5e90089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 2ce6c7e4-7cc8-44f0-8bac-815b3d9abaf8)");

unit.assert_eq16(16'h28B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #761 39ee9c1d-480f-4ad3-8aa0-0881083207b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h07C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 56afefaa-74b3-4135-8ded-35f58878bb3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 9c6e64d3-25f3-4953-a482-d79bdf55f6f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 2319300c-2dcd-4fd1-9e12-e6d4c0c80a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 47077ca8-9def-4ee3-8a13-f00b4906f9a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 a84e9bef-84d7-4317-9370-0e9122a3f7f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 f8a2ee8b-e1f9-4033-aa47-63317783295a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 52321788-d0f1-4606-9d4a-a6f814106426)");

unit.assert_eq16(16'h02FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #762 9714a37a-ce13-4216-88b1-5a4938e31054)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h0A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 66d9f116-7e61-46b1-a455-d124123b76cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 8ba50cb4-f5ef-4f12-8824-30ddc1c21077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 3d3c4957-6db9-44e1-99a3-87fdbe2d3c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 23db9b27-2e66-4ab7-9cb3-2ddde036b118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 bb41a319-ec8e-4a60-9ec4-7a71212b5be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 1fc6a3c1-b510-4493-8f4c-cb1912f88b66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 765daf53-d1c8-4279-aa5c-57c08680b207)");

unit.assert_eq16(16'hF60F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #763 1a17c8de-e1c8-4312-99b0-0e6f2175241d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h0B70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 91fec900-9234-4a7a-81dd-46e4aa74d68f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 eeb83a26-476e-4b0f-b109-74d10ff3b3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 3b06b651-2d33-42ea-8229-da2f26f0a6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 30f7f523-766a-43cc-a6eb-ce876dbd043a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 21b10d5d-eeee-4e94-a6d3-c759bb7564b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 595b5953-0248-4169-aa89-8b8426634d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 ed12371d-2557-4090-beda-eff3711b8bcd)");

unit.assert_eq16(16'hFDA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #764 2011db3f-ab7a-4c90-a5c7-1aed56415aac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 f0517a34-0faf-4d44-bdcc-5c5024937c28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 9df1e42e-cacf-4afa-906b-5c6bf2aeb387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 6eaf86fc-9028-4d84-b2af-88c792af30f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 946546c0-dd48-445a-a37d-e6ecd398f834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 4fd311da-23f3-49ac-aae9-cbcf56cef322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 09029807-a36b-402c-b062-d269cbdcedf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 25d31459-c7f3-4d1e-82d3-d6a8a1491447)");

unit.assert_eq16(16'hB988, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #765 de6eff81-cce5-4aaa-8b55-c2e3b5ea5401)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h0DFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 c363416d-d9e4-47c6-99a8-f04701cf7417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 a8e6cbf5-87f1-48f2-a646-b09dd4840021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 ca0f91bb-bc2f-4381-9867-873423637948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 55d7d152-84e5-44ea-bec9-76954fe0b492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 90c9b44d-2d89-497a-8b17-e065825fe6e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 77972e84-b641-4f32-9a5e-6aa72c6670e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 712cb296-e78c-4248-967d-0fcbfbccba24)");

unit.assert_eq16(16'hA20D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #766 02bed637-748b-4616-8859-4cf9c6af16c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 95de8c9b-3cbd-4817-b382-7eb044de31ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 75a0aacd-8896-46da-b231-38630e9f3a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 c9e1dfee-7331-468d-ab8a-32c0a6cc53d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 7ea6824c-51f0-4ec6-b4ba-7f717b5961b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 67a294ac-fe42-463f-a652-93d6cce43a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 e2458d49-756c-40a0-b8cd-f57e0ad455d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 5f4c8464-8220-4a1f-af8c-0a653131c833)");

unit.assert_eq16(16'h0300, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #767 c2df155e-cf94-466f-823e-f5727f102d2c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0300;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h0C7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 8daa3331-9b7b-4752-8a45-f2d683d29543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 3109b4df-226f-4fa1-8915-0bf3894666f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 8bb201ce-6c64-4119-ac5f-d65fc44f573c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 9b6ca7c4-933f-4657-81e6-cf64d9d9a3b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 8f29ffe3-c817-47a9-b945-2da0962958cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 2d580523-897e-487c-a3de-f18218576b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 2c4fcc41-0867-4a2b-a440-85c231a220df)");

unit.assert_eq16(16'h0301, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #768 91f73ece-27b2-41c8-a1d5-5ea3e6fb407c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0301;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0052;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h0052, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 57d40357-d619-4cfe-8b30-92fb463348c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 4df9d0d3-b9bc-4675-8ffe-17e3ba7f403f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 f87fc1c2-b58e-4f15-a078-7c0c4640bbcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 1f3b43c2-d270-4c0b-bdeb-e5f0cd1a520d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 3e47fb5c-b34a-4e00-9f62-01b797d0cb00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 53f9819b-43e9-466c-bb2f-c62ba9c33749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 f44a459f-fa33-4ea4-8a95-250d247a132b)");

unit.assert_eq16(16'h0302, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #769 87c7ae7c-4f5b-407c-a1c6-168b4048d097)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0302;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h0A3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 d491e22d-1b3d-4667-8ff6-8914010e7f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 6e74e7cb-f473-4925-b3be-34cf0fd1efcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 232d1725-4ecd-4be6-b4cc-ff8fb69734be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 37c01e52-73d7-4060-b0fa-f7e45a8774f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 66b12725-8a75-4e5c-84c5-193d5e7ce0d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 35b1feb5-4696-4cb6-ac4d-7342a2986055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 065cf874-9cb2-4a86-a84e-5d0a74926a75)");

unit.assert_eq16(16'h065C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #770 cb62abbc-e9c2-4c02-8368-cd6ae1f1b870)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0303;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h01D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 cf63c4ec-3ab4-4b26-91d4-cb4bb9aa5a77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 aca923aa-b25d-4f8a-bacf-b71f4b0c8d82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 20cc0cb1-522d-4eab-88a7-e2b577ec95f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 f2008a8b-51f6-4e41-92d6-4f276db2200b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 083266dd-2ec9-4ec4-997d-9c276a09a04a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 69639abf-add2-48ef-878d-ad20ad4ce56f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 dc308063-3495-45a2-878b-0a26d8ce6c29)");

unit.assert_eq16(16'h0304, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #771 d73516f6-7eba-4a03-ad3c-585eb4b19151)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0304;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 2e350339-e6a0-45bb-b340-6b7e533aa00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 8d358b9a-eb2e-453c-93c6-e9642caed8f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 1fcabce1-3df1-49e9-b9c8-f50939322c9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 5e12b1aa-dd2b-4be1-8237-3b6fbd1ada22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 13dfc828-8426-44ca-9649-1c697d66517e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 596a380f-69dc-49f3-b4b6-b92a5ecd9aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 d38bfde6-cf8b-4758-b8e2-36c537e9d06c)");

unit.assert_eq16(16'h2780, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #772 ad0f1067-3008-4ff9-ad5d-d864703d3a18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0305;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h0D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 e771aa56-1988-426a-81b5-a0576592c1b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 81c0a7df-8f2b-406f-a147-6e1282d4fe83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 68521d7b-1fab-47dd-b7d3-f6b6ff051b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 5e95a0db-0b8f-47a2-b6f9-24316651ac2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 f552bc83-ddde-4728-8032-cc6e4fb2191c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 2f56480c-daa4-423e-81b6-5176f2b68cd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 6479fa54-6bca-42b2-8bb9-87f300867f6d)");

unit.assert_eq16(16'h0306, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #773 749e3292-32b0-485e-9f15-f1b981da9adb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0306;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h0C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 ceef7a18-00a4-47a1-be7e-ff1228fbf67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 2045a476-5272-48fd-8890-84a9323b00fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 40ac6d91-6db6-4d12-9048-1af11037de38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 cf8817b4-1338-4784-a97a-76e5508519c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 fa04867e-3467-40e8-ab03-073d1e9e503d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 155e38cb-1a95-4f79-8061-3a2760980430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 6ec7e8bc-f549-4ca1-8b2c-93def6cd7ced)");

unit.assert_eq16(16'h5B3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #774 4fb1bc24-1082-4f12-aaee-7c77cf33595a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0307;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h062E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 8e1f8b84-de27-40da-9f3c-7b3f2fee0ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 01ffd7bb-f4fe-478a-ac6d-9cd2c290f18b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 1d848267-41ff-4c0b-9a86-0edf01815d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 788746f8-366d-4cbe-8ce7-e67e1714fcf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 928355ea-54aa-41a8-8189-94e155675a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 9936bd1c-86ae-40bf-a59e-55afe782030e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 9b68374f-9d17-4771-9a8e-ee538744f33b)");

unit.assert_eq16(16'h74DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #775 6ff659a7-bf14-4eb9-822b-a67b2f7e1af5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0308;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h0E54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 ca2cb9de-500f-413b-a33e-6f0084c8cd0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 28c7cd55-abf7-4ab6-b0d6-af46d2faf8de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 4337308a-d52f-4b26-bfb2-5bb68dee2ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 3adfde11-b0dd-4411-87a4-ef9bc714ca32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 e16cbd99-8949-4d3c-bcbc-13f2443cfc9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 aa893a75-0f74-478c-ab1d-57201e3e74d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 5f816fd9-b06b-42f2-b3a2-e8cb8ffd33cf)");

unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #776 71b80306-655e-4ca5-9146-d22fb7410a88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0309;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h0B95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 2d9af4cb-2913-4e61-abbf-93c4a067aff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 6864ee76-0816-4544-9e26-12ed9a67c568)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 3ce91904-2cad-449d-b729-d9fe113c6669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 6ff7c0f5-5c71-4303-bbfb-a9e3e2ddee38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 e775d254-ead6-4676-90f6-6d6c5999c799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 bf975036-25c9-4eac-acb8-eadb5ac28c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 6ac56e2e-7278-4375-93c5-0ff33adaab33)");

unit.assert_eq16(16'h030A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #777 ff203ffa-e08d-40db-a5fa-15e98c6b9f47)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0081;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h0083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 c3603093-54ea-480b-9f83-68aed3ae47d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 ed08c688-9c73-4915-9126-85f248ea9b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 4c0abf86-9e4b-4eda-8850-52983a92c2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 15ca3cbf-5c4e-4b0c-96b8-236328a00c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 ea624049-2856-459b-b23b-4b321e3b47d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 fec1c773-e6df-42f6-adab-302266161914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 39bb9ca2-9c76-4cfe-b490-a0a48e7926a9)");

unit.assert_eq16(16'hD990, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #778 e6e74189-11dc-40ab-9320-ce0cdfb08e3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h0E75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 025dd120-c3c8-4e62-bf12-de8daf5e3e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 7b2444ea-2811-4649-ae70-13d4aa679008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 5c1f4ff1-2859-4876-b915-60118bb3fac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 984c49ee-a569-481e-a807-559b83cead45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 e35ae08f-7427-4967-ac63-d8dd1849ce07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 ebb4ed3c-645a-472b-86f4-b8d227c28421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 0d317f25-7f05-4392-ae86-c3e48c604d5a)");

unit.assert_eq16(16'h669D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #779 36edfad5-3b41-4197-970c-b2ab8e1df328)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0831;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h0833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 fb05aa2f-7e3c-4bec-bfe3-13b85afc5b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 b88ea33a-fc3f-4164-bdd5-6ed0f783cb5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 7eeee5ae-3c2a-4592-96f8-4a13d093e8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 25501ec1-18e6-4cf6-b044-9262863f53c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 d6f3e58e-12f3-4255-8bc7-81895fae3d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 71308614-c484-474f-b4a7-cb52f79d8758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 0b12b0e2-6a33-4dff-913b-224e3c855673)");

unit.assert_eq16(16'h04C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #780 c97ab9cb-f11c-42af-a498-72f1155c62ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h050C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h050C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 ebb5d1fc-5743-4daa-8c96-5c57e7d7370d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 be2e34be-86c5-413f-846a-bdc7da80ffac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 11cf966a-df0c-4957-8ae1-fd1eef6c4b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 7e0a8ee6-8f2f-43e4-8219-1ba4e249f066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 035715fe-a338-4317-a5fa-fbc92a5c8f32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 2caf6ce4-d885-4092-a395-f2e8ca24604e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 5d7a59b1-8b23-41a9-b7d0-3c3dd9e8c787)");

unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #781 8d4ecd3a-8f8b-40ec-af69-46a37a532502)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 048e2e5f-3a36-4571-8081-3ee9b9507b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 b8fcc028-44cf-4d75-8af8-98160c9bd56c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 4bf62d26-77af-47d7-9d1d-aad0b6187976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 491fb33c-e9e9-4dab-85c8-f86ba3e6137e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 34a37cf3-9afa-45ab-b970-86bca645f170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 ffb1c1d7-c533-43cf-a569-c7f64a6ec00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 07a64d49-f78c-41b8-9a6f-3a97dde7674a)");

unit.assert_eq16(16'h030F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #782 517a949b-942d-4f7e-8ed2-f304a85c07e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h05D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 73fba395-a82c-46b3-b145-b854e50d717a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 fa1a3748-d008-412d-a15c-080b4015e8fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 1181dcce-79b6-4473-905d-618f0886f0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 76ef6f26-1955-416e-a9fc-10642fe21dce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 98713066-948f-4908-9a27-69d0a7888002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 b6ed2e42-7d9b-4e03-b33b-d4fffc39c1fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 7e1bae2b-8c4c-4c57-899c-dfa5505de728)");

unit.assert_eq16(16'h0310, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #783 9ace85f6-741b-4161-95ac-905c1d9bbd84)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0310;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0930;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h0930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 87221577-9aca-42a3-b52f-4a88e56beffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 86d2d383-2a26-4fe2-8734-dab3fd4edb1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 3d7394a3-92ec-4710-a732-a0dbef909b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 4f472df8-9b75-4bea-b223-acb161b97010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 68964e51-5635-4a69-a21d-eb03caf9e56d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 a122a9e8-d3e1-4abc-8aa2-de2635218a20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 70617cc6-4aef-464f-8a31-f99325b5e374)");

unit.assert_eq16(16'h0311, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #784 ab5d4c37-98b1-4271-8d13-361735d381b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0311;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h0AE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 ddf69408-9c0b-4ec7-b6b8-125a60032763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 d44dbc98-2cc9-48e9-9172-1834c3e58a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 cea683e1-89f2-4272-88fc-a021d1157d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 04650648-321f-48bd-8a10-aed2b89e4cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 d09fb861-01e6-4e80-b222-7eb59c435a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 aef92bbc-c28a-44ff-9d5d-5afa40d1c1bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 4570a87d-6667-48b4-9987-9fd85e6e3dfc)");

unit.assert_eq16(16'h7E49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #785 324fd1ad-7d5a-469b-9b93-02a734d9e207)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0312;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h08CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 6ffa7ea8-9683-4f15-bd0a-0baee0c8a748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 0f40ed98-cd8c-4658-a8aa-b25707e0987f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 53dfbb36-2bf0-44fd-a76c-d5785eca1cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 18af6161-4464-409d-82a2-be344e565e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 874cd5fb-8e42-41ec-bb3f-df92225f21b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 b24c9651-b7ad-451d-a139-d89e25098dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 d9d072c8-6ed5-4f8a-a1dd-82937f4ca98c)");

unit.assert_eq16(16'h84AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #786 7958d929-1e89-4e33-b7bc-2f672b82fdcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0313;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0004;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h0006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 19801241-d8a2-405b-a89f-8599cbb90a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 ea8cd1e9-402b-4307-9cda-713865f7639a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 51e451c2-ebf5-4145-b6fc-ed5c1ceb5139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 62677454-6a53-4020-aa09-3f09b6eb08b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 62ddf349-1269-499d-823b-0c32d866ae3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 585ca6d0-616d-468a-9eda-077adfe6024f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 77f8dd09-90e2-41d3-8ece-8145ee0b3cb6)");

unit.assert_eq16(16'h4C7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #787 065f1571-e9f5-4ecf-a32a-cb45568123bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0314;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h05F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 d0a43274-59e2-46de-9481-f43b61a70add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 5f5bc8cd-58fa-40a0-9c48-a2345ad12aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 7ce95132-90e9-4f3a-892c-b8d44b1ed225)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 0e026ede-5633-4e6d-a2fc-8112ddc70887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 5fc41eea-9014-4c6c-b46f-edbd6979ab0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 99c6cd1e-881f-4096-9d57-92f15f4a8fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 7863ca5c-d541-43c0-b599-ec2fe69cb6cc)");

unit.assert_eq16(16'h5415, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #788 57a6cc35-48b6-46dc-979c-205cf1a13c31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0315;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h0161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 ef16c340-f974-4c60-894b-c81b3392b88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 2d89da1e-e182-403a-8132-291252633b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 46a314fd-855c-40ae-97fd-1708b41df4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 570ed8af-2efd-48d6-b0a8-4c13350139a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 2d26a2a1-a948-48cb-9344-f64afc6df3ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 35c0f465-3496-49b7-88ce-1e0169cfc277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 d383f436-0dd9-4e40-ad38-14ba7865de7d)");

unit.assert_eq16(16'hF243, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #789 6d1f9c77-abb8-4891-966e-864ac24e5665)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0316;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h0DAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 0786a4b2-8a90-4bd8-af10-194eb15e0420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 309b1bcf-ad77-4cac-a8eb-b87679ee92a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 8a75ae33-61ca-4af1-a4dd-ed8b2bfce557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 ba0ef702-4558-4818-afd4-47030561aa1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 5adf2f02-e75a-494d-ab56-43a75d098b7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 bf53d5b9-0f37-4287-a3e9-0a0ec9f0f836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 6d134530-2fc6-4cd1-957a-9013f6d50575)");

unit.assert_eq16(16'h8848, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #790 2991734f-1c33-4977-9ccc-de8e82c6d823)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0317;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h0CB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 be57e3c5-c24e-4ca5-83b0-9ff87802b981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 f03226b7-39b5-42bb-87f8-7fe5cf05684b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 ec2fd712-e88a-4f44-a8c7-240322303619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 db46bf10-9bc0-4e93-a78d-bd2c3ab05f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 68ac7e8f-1a1b-4286-9d0c-e2f27c2a7757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 47aa2bcf-0c22-41c3-88ac-5c68d64f06f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 52977e25-b46e-42f8-91f6-08b3b9a5e01a)");

unit.assert_eq16(16'h0318, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #791 6717854d-6fc6-4426-baee-d0e2a52db19a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0318;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h04AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 64c6a4ed-7789-4de6-bf50-d7940f51fcb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 f27a040c-1a97-4c25-8828-b1195cce22e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 d3610c59-da48-4552-8ef5-d2793f3a5403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 cde12e24-069b-43ab-a1f9-2435fdbdbf29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 fa42b6f1-efe9-4444-8ffe-dcf5790d96b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 8a01e7a5-3dd3-4558-897e-b9947c32e1fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 61114bf4-3141-45ae-93e2-42303c90baf0)");

unit.assert_eq16(16'h82DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #792 ab40995e-5b9b-4d3b-be38-cc47bf4935a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0319;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h06C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 16aeb596-549f-45c9-83d6-f9c25321e331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 5c3c4aa1-fa0e-444e-8fd7-cb866580639f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 9ed8ef1d-6fb9-4bee-8f22-4ef07505084a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 ceb4712f-df04-4fd1-86bd-3d4f3be1860b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 8568f3ec-37a2-462b-8303-f20e98a9c5bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 77bc90f4-b255-4541-a306-d771055b566a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 3cdc09cf-00d4-4da8-80cd-53c296db8f1f)");

unit.assert_eq16(16'h031A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #793 dfa342d7-ce19-4327-a9c5-c3d124a50a73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h0F42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 04bac5c7-c3c9-4831-8835-a4399bc4d1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 fc0e9e4a-2b3e-498a-bb48-7c009a6fd1ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 5a632e0f-f183-463c-b95d-064558fa7f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 7ed9e438-bd7b-47f6-bff0-2b4d65a9ade2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 903ad035-9a6e-4f8c-b75f-16a6d6dd66b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 3a145158-b065-4fc6-a132-03336d50ef5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 f32a71bb-be82-49b8-a762-7c169c699f70)");

unit.assert_eq16(16'hBEF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #794 5067e29c-ca84-4ae0-8a37-18f24d9b3736)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h0C3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 cee3f347-f709-47ee-bb65-2928a88f03c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 a9f27b0e-6204-4522-8492-5d4cd8667f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 08af2e3a-b25f-46c5-af22-a73f04c27117)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 1cefe400-5fd4-490e-b224-0b93592fed24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 2e1fe253-2424-4895-a785-7f579cd230e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 b49da451-8f47-47fb-8648-2e1784b78581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 8143f75a-3f83-4871-aeb2-2e53c2fd75e6)");

unit.assert_eq16(16'h8496, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #795 ebe3ff3d-884f-4c41-abb7-33fb0f719c34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h0F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 2da79c1a-aaec-4797-8cfa-3272a84b3a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 914c95b0-6231-423b-902a-4fe19aae7c92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 542a7084-3a66-4926-ae44-3e72c88d38ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 f268312f-9688-4f50-bba1-28a11ec0f87c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 93042886-0ced-4cb4-a99e-b9c9c3715fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 be4d20c2-53a6-4c41-9387-0eacd1830351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 94d45852-c8a0-40b6-8f22-3eaa77f13ab1)");

unit.assert_eq16(16'h031D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #796 dda65a95-532d-4b04-b6e7-9248a73e264a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h0C72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 eff1ef42-9a17-429f-8309-c652c22a657e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 f122a025-4856-4dfb-bef7-5902b03edfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 71f92f82-0483-4625-9e2c-c2a451d7d595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 84b27225-5cff-494e-9ba5-35946dc70193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 227f77e3-bbc5-43f2-ad6d-bd3a489d4932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 1c5c73f2-b383-4ee1-9bbf-8455511298c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 2920c153-cc27-435e-801d-e8a9b307c1eb)");

unit.assert_eq16(16'h2401, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #797 a7297531-eea2-4cf8-bfae-05a2abd4ead9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0685;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h0687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 70bddf1a-8a5e-4b01-8079-b44428301dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 ed5603db-064c-40ef-9896-a1d18d5d8c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 e3e3465b-f878-4a94-90c7-562b3f63df11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 1aa417f1-139b-4b42-88af-10c67f2d8fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 fa354219-7151-48a4-b127-2e7a63d3c71a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 99ff7ed9-20ac-4e89-9fd0-8890c1d99768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 b565d51d-edb4-49d9-9c1e-b1be791a217a)");

unit.assert_eq16(16'hF633, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #798 d71109c8-5545-490d-8c5d-48fcaa481de3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h0920, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 d4837702-6409-428d-9fee-af86e9966cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 7da7633f-e69c-4fbf-8788-e79f2be8cf01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 00f29f62-eb19-4913-9edf-385a8aa51e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 5996f79e-8259-42f2-ad1b-8e3a017e26af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 9e81d444-4e40-44c9-87c9-e256a5981a4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 003457d4-3fa7-4133-9261-9c9608fdebe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 6fff961e-0e81-451c-acca-08ba991a9fc4)");

unit.assert_eq16(16'h4533, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #799 73152a3f-55b7-4cf6-b91f-aca980f6d653)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0320;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h0D48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 6669f901-3c4e-4d1b-a21f-3f982b880a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 541a256e-b6a4-4056-9961-a422d1c5295f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 33630aef-2f36-4efe-9dde-b676a796fc03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 ee9fd822-4fa7-46a1-994f-ceb31fef757a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 22780a3a-d1da-40d8-9d9e-c7bc0948a329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 92a6448a-c2b8-4668-b1cb-16a3193f31f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 c7345732-9d8c-4081-ab99-648240eab319)");

unit.assert_eq16(16'h9E02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #800 1b99fa60-84e4-4e16-818c-28c7786fa99d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0321;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h0C4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 56d10dde-12ba-49a6-b5ec-3e0791e2e45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 4034779e-6c3a-4a4b-bb73-b866b6633a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 e29fb1fa-9044-4a27-ad21-0eabd054d5e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 4ab0e39b-1e97-4120-873c-29fbb6f25041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 bcfef4e4-84f7-440f-a6af-1e92cb980d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 c0d6bff0-bce7-4b8b-be06-9a8560240113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 8f3ffde8-9ccd-4a9d-8b82-1228f7930f3f)");

unit.assert_eq16(16'h0322, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #801 07e07c29-8dc4-47ff-a79b-e686522059ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0322;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h0F39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 55cadec8-bb33-45f1-8c18-e9578f763658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 48453e6a-772b-4e25-9cb4-bf189707d4bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 501b4257-b9dd-4ab3-b2d3-c6320e6739f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 9432244a-a1dd-4737-870a-56a66a0d1308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 f4b21711-524a-4f6b-b2e4-1408df079198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 7ea643ad-26d5-47f9-b3c8-6e4f1e57c36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 0b8033f6-8f42-48f7-9a0a-ec44192d12ca)");

unit.assert_eq16(16'h0323, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #802 def036f1-1196-4efa-9506-948c82a300cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0323;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h0D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 41e8e5a8-8bd0-4072-851d-69de2af9bc27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 57114b9b-e9c9-42e1-aaca-ebed35ccd435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 56d9a527-e253-4239-843d-0c453966f102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 e54dd350-ea04-4af6-a56d-f3a94ea1a70b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 6d81eb5a-a123-4106-aa9d-69155d4ec35a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 f2ed4446-d13d-4211-a807-52b07fbe9a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 33a29a4c-5da2-4d8c-b090-3c53e269e2b7)");

unit.assert_eq16(16'h7230, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #803 27285904-cecd-425e-bf33-4f7beef8793c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0324;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 fcfda941-e823-4d16-be67-9d3b61dd42e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 a063a867-2b09-4466-aea7-930a6b9f2922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 36a69580-1cb5-4913-a384-677500bd1032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 03ac629b-fc1f-4e22-9f2a-3d17f211d457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 3e6281ed-3880-44f8-a21b-6ddd6d70afc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 9d4c8f5c-478b-4b04-9565-ff16775453be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 331d1ebe-5ae1-44b3-a24b-6e7e06b3794f)");

unit.assert_eq16(16'h98AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #804 66a77ab2-105c-4c3a-bbf2-27a24ae5f3a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0325;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h062A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 f93d4646-b0cf-441d-9735-b815310ecec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 98a662fb-e1b9-419e-9b01-8a3666a7ab0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 22e99ce9-ac32-4514-bebe-7032e08ea9a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 52a98b28-1877-4b49-b038-a63e3c54d823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 1b492a6d-9e89-428c-9518-e5e8433f2066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 543111bc-65da-4f1b-b8df-26f94b07265b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 e306f7ff-83ea-4578-aa22-411470867693)");

unit.assert_eq16(16'h0326, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #805 2613682b-74c4-4ae5-8c09-d2d6939ac59b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0326;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'h0340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 9349517f-0379-4de2-be53-bce77afa1c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 1849ef80-06d3-478a-aaf0-777a9bd2e01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 eb73874d-5def-4954-a257-bd00c48c622e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 1fa6eb9a-7ffe-4f23-b777-ba91db1778b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 5425257a-8225-4e94-9339-7f8b03b9e4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 b3492561-d801-4e43-b9d7-deb64bd0a730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 f4fe37b0-b16d-4aa8-b95c-da035fcdedab)");

unit.assert_eq16(16'h0327, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #806 d7013027-6dff-46c8-a584-cef96515fa82)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0327;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h05A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 f68e341d-a13a-4e13-8bff-07f50bf7d71d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 6854ca79-52d4-466e-977c-a7d9bd4e2116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 d38cf6c2-c97c-4fe9-bb0b-772906c5d145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 b6c8bc73-e4d0-41e5-87c8-25213b872a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 aca5a67a-0a2f-49b7-ac15-db48b63599fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 d6e464eb-c38a-4c1c-a234-f4c563000889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 b6b46cbf-c8d6-41aa-b08b-99f81e505302)");

unit.assert_eq16(16'h0328, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #807 9cbc1d78-1874-48e7-ab8f-1b71693ddca3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0328;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'h0E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 68014eab-6e2a-4364-8210-4c83c4537432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 f7ca5489-9ae0-4686-894a-b6b04340a1f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 fea94f23-7528-4a15-b301-05dc8a5f55c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 0d6238e3-e66d-4379-bcfe-77b28054588e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 c14af7e1-0904-4c01-badc-f97284e07e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 fb071f9a-14f3-420b-86a3-9ed09c0e07b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 55d43666-36f2-4ed0-8d6f-58a8212a4651)");

unit.assert_eq16(16'h0329, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #808 7fd643bc-c652-4779-84ad-e884fdadc79c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0329;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h07DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 c0787dba-e00d-4eb2-973f-ce5c8f8b54fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 a4b4325b-1653-4b79-abdd-24b8b069a5d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 05146794-5003-4d30-b9da-3a2ec0ce0785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 7c2805f8-472e-4b0a-b947-b0ada44a857d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 3a9139a2-b31c-424a-9c2e-d7af7cc12d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 0fefcd8b-1f1b-4a64-9ca5-557d4e8a11c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 81646dba-f4df-4655-bab0-cb506596c13d)");

unit.assert_eq16(16'h032A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #809 0e195933-ad1a-40a4-9ba0-fbf06a97509f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0559;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h0559, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 2ed18c43-8180-4b99-a52e-79fddac44af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 1c3c6ff6-02a0-4589-b561-c4fb35dafb5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 e470eb55-402a-498e-b554-27723a3cecfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 ac845615-29ba-4b43-a95b-bc1f844066c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 481f0c1f-30fb-4d9d-8242-dc9547c17d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 944f8f8c-9ef1-4026-8765-389e24e881aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 399d94ff-c30b-45a1-a0d6-5cee4b9245a6)");

unit.assert_eq16(16'h032B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #810 738af149-feed-4d96-bc1b-1e0d900e03fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h06C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 a50eef53-14e0-45c1-9681-b50d4deb1f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 2c8524c7-69df-4bb6-b2d6-37b62a0fb7f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 7a1300e1-ae2a-4a3a-ad06-0b69f1c1b902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 46312ca1-202e-4b33-9fde-52311f777d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 fe8592ed-bb43-4636-8bef-b41684e6051b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 70f4d98c-74d8-442a-b23b-a1af1ad5975f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 29b3181f-b1c9-47d7-9cdb-401a0e072e3d)");

unit.assert_eq16(16'hFBE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #811 9bddceed-94a8-4937-aab8-f1d23c1aee92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h079F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 bcc159a4-4ff7-47a5-a61b-9a2c11c99a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 9d777bb7-2d22-4faf-adcb-3142ee9ffffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 08bf9df1-993b-4b4a-9260-588248887fc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 0f8d8b13-9511-4387-863f-95e006160f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 743437fc-98bc-445c-856d-b5680d08421c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 fe88ee86-e320-4c6e-b722-84a28091fbf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 57646b8e-af71-4787-84fa-64533798568c)");

unit.assert_eq16(16'h032D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #812 80e102fa-fdb7-48f4-a87a-b94d53e755dc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h00D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 3eeb1161-5c32-4b1a-9c3d-e89aa34e0ab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 81a8257e-2673-4bf3-90ec-2b7875a59ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 5a35bf29-e467-464c-bed0-3db73dacaa12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 04063403-426f-4654-9ed6-b2fed8b508c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 ac182e11-ab22-4000-a3b2-6d1aa53a3796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 e8e47b21-b567-4f81-aef8-cdb99bd24d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 dd69381f-653e-4c71-8a46-80b9db5709b2)");

unit.assert_eq16(16'h032E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #813 5fef7a80-0275-4171-8492-5d4414405a16)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h06D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 44ae42d8-c8b9-4906-8f45-13680a2b23b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 e8ce4b4b-416d-47d4-87b5-b3d1fb7673c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 a0feaf28-dc20-453e-9b93-b64950ce034f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 17c58ab6-315d-4e9e-ada9-9ceed54e45f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 77380e25-7bfc-42a1-bafb-ed85d1590ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 226d6f84-78e8-4c0c-9599-962466344c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 8f64486c-22af-49b0-a1e1-2f5902702801)");

unit.assert_eq16(16'h032F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #814 dafd0e9f-c6f9-4e47-9757-1fd3e5792b17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h067D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 f60b0851-9e68-4123-942f-0c4f45f1fda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 c55e3c8b-aa7f-4b3a-8a0a-11a799522dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 6c7b7e96-b668-408a-96bc-ed8fee72f2a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 91d24606-de04-4353-a8b1-9119093012cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 5dea39f2-5ff0-4290-a4c8-be1cd58eb9d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 5005daa5-d52e-4b7e-a7ff-9a174dbdffd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 e350df92-d1ef-4d16-acb3-21e6af9afbc0)");

unit.assert_eq16(16'h0330, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #815 725bfc36-b259-4c8c-a66c-397ad197a43f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0330;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h0F4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 403981c6-9651-4cd6-9e37-e1570f15b999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 9021b1c3-db7d-4b10-b381-6f641f11c229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 8f26ce01-791c-4617-8928-896c18c32b10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 84c590d4-f1ee-432f-bbc3-8a40f81a6ef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 2e0b9940-3651-446b-b7b5-ed9e0278e126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 19fd1dfc-265c-46e1-b2a2-868cb3e93231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 7cf83082-4f12-426c-8ee1-ee374da59fd2)");

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #816 d8ead363-d1d3-4acc-9506-e26a755ce4a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0331;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h0C37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 43f2c36c-9c8b-45c5-b4dc-88d02224cee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 99e2c25d-facd-43a3-8be6-a1c7a2041987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 423e7f40-9eb1-4b1b-b741-bb4d17dd8309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 c344f41d-f697-4a91-a8ff-8963bf427a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 e9f16dea-0aca-44f2-8ecc-afd1d3c32467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 40fba7a4-0470-45f2-bad1-e1e144f54f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 ffc00fbe-aa36-4a85-aaf5-0b2010891dca)");

unit.assert_eq16(16'h7742, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #817 c4ce339f-5141-4367-8c0b-98ec0eaad12a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0332;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h0E8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 210af6d4-8014-4811-939f-350d3c3b2bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 2b266a8f-a822-46a1-a73d-385ccd530e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 330582fb-9474-43bb-968c-58072d356b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 80dea943-f825-4c35-b968-2f52e91c7ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 1f6569db-0de0-4aa6-b93b-1ad7458fd7c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 b0a8b08e-0b3c-46e9-8de2-3df14621fddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 21bcb15e-c262-4f8d-a00d-c2f2d3e76606)");

unit.assert_eq16(16'h130F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #818 89cd5b0f-8604-4fbe-937b-694ec0a25b5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0333;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0683;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h0683, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 b4e45dfa-7469-43bd-8cf6-cf56409dc31c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 ddcb7314-adc5-4dd2-9a32-5244b4a7449c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 b2432e14-a8c9-46ec-aa6d-5faa29e29534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 17448ddc-8813-411b-88ec-34f5da44248c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 4ea111d2-95d6-46a1-8514-170a1bbb5578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 c73bb10c-e25e-4007-a450-86c3c68eff1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 92ebc317-13ec-46ed-a76f-e020974011a2)");

unit.assert_eq16(16'h0334, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #819 31f737e6-145f-4b04-b372-619593a5bbb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0334;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h08E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 6baefe54-e5cf-4c11-b5c2-e4c318f70002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 8d69e685-0d65-45ae-ae7e-557744971678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 39149079-5468-4eb2-802b-9d8dcf718845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 209b27bc-c26c-40ae-9c4b-47e8c166c034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 3b3063fd-11e1-422e-b539-3ce9d014cf80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 8aaf62f5-02ca-4c19-8757-7ffa017a2e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 64fbad4a-043c-40ae-b2fc-df2e4d964ad1)");

unit.assert_eq16(16'hA002, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #820 dc276160-cb1d-48ef-a607-642bfa274b9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0335;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h0A3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 a751b713-ac75-4035-a902-33e0de7aa681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 2e095526-f8bd-4f63-a731-38c1f8247f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 80cc20c2-6fa0-42d4-843b-edc9dab28c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 038cf094-1479-4551-98fb-72095af68b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 1d67c5ef-4616-4fc3-ab5b-ea803b051937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 6eddb8f6-1b32-4040-8fb4-51b6ac25f4f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 32500410-3c13-4813-af21-7bf8d84c239f)");

unit.assert_eq16(16'h5C93, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #821 31096815-1b3d-4e0f-8e62-94dff194bb44)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0336;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 b536f40d-a8cd-4aa3-9a49-2669348010b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 731c3f8b-5cfc-4324-91f0-3497c284eeee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 73a81624-c41a-4bc1-902a-0943bad15439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 3a5a65f0-2f89-41f6-9edb-7bfb5ab89feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 8ed6a550-9b53-448c-81e8-d9ce7ec032c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 413f9561-4fb9-4256-a33a-e616dc98acdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 8b8467f2-4135-4bdd-a40e-bede3dbea0e0)");

unit.assert_eq16(16'h3817, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #822 04e75798-dda3-4917-9747-35d4cf84c30a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0337;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h046E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h0470, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 b90360c6-2500-4ca5-9ccd-3344a14d9c8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 0f240de5-0803-48d7-a831-f0cbac17ea63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 501154ea-184e-4f79-a6aa-a85f978b9a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 296f0708-8089-4e54-9ed6-0da38674379e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 57246e77-8733-46f6-91f9-ef1d1fb2828f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 a12a16fe-2f5e-4add-8779-860fa00fbb06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 f43707d0-a54c-43ef-8b42-d82c584ddf04)");

unit.assert_eq16(16'h705C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #823 0ce54514-2f71-4fa0-af98-a5234f73c185)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0338;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 efef5ab7-ea0a-45ba-8225-a675f9647eb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 e10944f9-7c7c-40ba-8edb-eb3c619c03ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 ccd31b10-ad37-4fb4-82b8-d254ec48a94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 bff4d02c-ce1b-4e54-893b-4d1832852690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 d70f747b-19cf-4f15-a6ad-55903fdcbf7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 629977a9-7ec3-44f6-a95c-c84211a15969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 42bd4050-ad6a-4691-a450-8f41b11ca826)");

unit.assert_eq16(16'h241F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #824 d9c61b5a-7f24-4a82-ab8e-03e95cc7ed33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0339;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 790171ce-c28a-4f1c-9bca-a2156f56d365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 cd74d6fb-a0f5-4924-aaf4-ed87973f9297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 4ce9a77a-0784-46d3-b330-343bee31a77c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 65ac215e-064c-4598-a786-4863dea00d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 8f5f6d43-d670-4394-ae9e-eb22b7eaed60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 31445ff2-21ba-4bf6-a69d-0bcfe383ef61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 6c7a6e9e-cf61-451f-9750-4cfc2395909a)");

unit.assert_eq16(16'h033A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #825 4139a386-e11c-449f-9956-8a1540f4acb6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h056A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 d6ef8686-e48c-49e5-8cba-7ef0081c7ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 2d944c06-a7c8-40ed-ad19-60aec8f60687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 92911d0c-c450-442d-ac38-8b3b7afa29af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 ba0c5723-7617-4960-ae25-9d8d20ba9dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 bfdeaf91-951b-4525-925d-c578df8b6a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 df2a07b2-d5d9-4879-917b-8af4971f38c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 31fce941-f266-47e0-b8ae-2846adb5acad)");

unit.assert_eq16(16'h033B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #826 167e2edb-99c4-490d-a445-662c0949386e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h0C4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 bd813e2c-63c3-4ffa-9d52-48fdc4681af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 42229238-34ff-4522-9522-829338e35694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 6151cda8-5287-48ba-a817-b6cb34209568)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 56f40ca2-4766-4fd9-8195-6be19f04bdec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 fa66bf4b-5ebc-4dab-9d7c-fc1ce14c5eba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 66f04339-d7ac-470e-823b-9ea1b91ca804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 a38b43b8-3df7-4c05-b7b2-4cf1911b8028)");

unit.assert_eq16(16'h033C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #827 578fe8a1-9ba4-4e73-951a-12d09df7da86)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0154;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 bb3ed57c-7fbf-4452-8260-ce5a240fa1be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 02f7ead5-9193-469b-92c5-406cf1b19a21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 3f01d451-bb70-4444-b8f3-1da42470dc74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 5ec47083-7d8a-4299-8db0-eddfedcca5d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 3f52a337-3e62-4e66-8495-ea121a655550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 826d88cb-d3fb-4bd7-8584-cc07ad174de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 580bd66d-cf81-41a5-99aa-7f3f812ebeab)");

unit.assert_eq16(16'hD7A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #828 039dd5b4-d245-49dd-a3c4-30ad274e2747)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h0910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 b3395b3a-cc68-4a4a-9df3-6aa7f81ae36c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 adab9aaf-c405-42b3-8920-7bfc818b353e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 07b0fdeb-f69e-497b-8648-af4ae2887492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 00ec1858-8fc9-46a7-b706-05e48adea5c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 7008bfa1-6640-4eac-9769-e3845c882b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 36bceb48-dae9-433e-9eab-04f00812e638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 c47f1446-3b1a-4728-a98a-34207528b9f2)");

unit.assert_eq16(16'hBBE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #829 6f20b33c-a438-4cda-8fab-86fbc634896c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h0FF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 f05cb2d8-dfb2-42bb-b3f0-f5d719500e3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 023b99b4-11cf-4a2d-988c-1e0eab82920d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 285590b7-4740-4583-9d63-5fb71ae79a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 23185558-813a-4119-a880-80f3f697f35e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 3fcbb2f2-041c-4261-a30a-ce389117a131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 ad0818a2-051d-462f-99c2-7ad395c5f622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 a2d717bc-0bfc-4b59-8666-6ea7a63d65e0)");

unit.assert_eq16(16'h6B3F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #830 9dac0d11-d2d3-4eaf-b308-8416015e17ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h06CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 c3a44d8d-6bfb-422a-a77c-bf9aa7b9d5fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 1e50245a-bfc5-44a9-848a-bb4cc1459db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 18d32c71-2b93-46f5-afee-9a980fb13fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 39ba5cff-353f-4845-ae3e-3a907dccefa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 77f77e5e-467e-4dd4-bac0-c9b7fac24b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 8f148a07-744b-4ccf-ab96-7447266b57b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 2184e630-2317-4efc-8ae0-feb4a56a3a2b)");

unit.assert_eq16(16'h0340, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #831 a97943b2-b336-4de8-894c-3e6f9a96d3af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0340;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h0DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 13de7d1e-9364-40b5-b0a8-a04f5dabb175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 af2224a3-444b-407c-a6a1-bde2ec37e162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 06d34a62-4b8b-4ca6-9499-82a8d18134d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 bc81230d-62d2-49a1-956f-c2e13d7c325e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 00a56f1e-7a66-402f-a9b6-20deea21bb90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 f036fa8f-cf12-4a31-8914-efef4f31fcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 8d63fbbb-d0ba-4968-8baa-3a21a3cc0f07)");

unit.assert_eq16(16'h97F4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #832 78e4531d-23c3-4f0a-b593-20938360eed1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0341;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h028B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 3171a6f2-e3ff-4966-b185-a01574cff5c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 ce4448e4-8275-4f87-b0f6-7c83959c6e0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 89a82d4e-04b3-4fca-bb12-7564e9250d50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 782905d8-b300-449c-a6a3-c0d86e5c0e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 f98bfcf7-f2f4-4ee5-9539-76ebbac264e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 af909bff-77bb-439d-9e31-df173219afc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 849d5179-c986-41b8-b08a-d546669e6989)");

unit.assert_eq16(16'h9646, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #833 994c4030-7b09-4d4c-9486-264363513d97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0342;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h048E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h048E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 e8f7aef9-63ef-4a59-94a6-f7fc07e6c16b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 38817af4-91fc-4d79-a0e4-bc936bec8315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 c7f077a7-4f17-424b-8410-cbc516b5e140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 28d6ae03-6720-413d-a6b5-60c8e9f65d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 dad8d93f-ca6e-4895-a339-c206f067a17b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 3cf0a1f3-8932-4cf9-96e1-307aa323f305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 58374966-0011-401a-a40b-1a56f0c8cd15)");

unit.assert_eq16(16'h0343, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #834 092012b6-b096-4ab7-a723-cc337f9b22b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0343;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h091C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 90d09b03-c609-41ea-b5a6-8337e744364a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 19916012-acb2-4029-a0ed-c1b980385403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 ac516ce1-74dc-4c3c-af15-04e739ebd393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 65453e4d-4910-4287-b153-b2ec5a4bba18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 a1e96a43-694e-4f81-98f2-ccf5d5d9c81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 9a2b6594-a69b-4a1c-b6ce-7db9753c7010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 0ad60266-5a87-40f9-86a5-63a04041a354)");

unit.assert_eq16(16'h0344, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #835 3e0620ad-c951-404a-8213-59ae2cdcf944)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0344;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h0A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 5027173b-cc45-48cb-a0cc-c0bccde81429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 e337517d-3ec3-4aff-a024-903ef634b4b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 dff33562-c2db-4b97-ba95-71181d2d46db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 fc84387b-2633-4249-bbcf-53e84c5de057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 587b5b22-ee8b-4573-8bda-2e4e3a6441ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 b92cc24d-3d38-473f-af51-911f08bca4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 ccdc4972-5efb-4d71-abd0-feb03e45026a)");

unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #836 8cb59cca-9319-458f-b5ab-e3b9ef14477c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0345;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h0C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 33b37c44-522c-43dc-bfc2-cf3ff88d24ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 779bd40b-a1fd-428c-901e-528ccdc56bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 e3da3f4f-4a72-4661-b152-d0f3ab3e1609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 ca60d754-9b2b-46e6-9852-61c84d920a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 abf20518-5d79-424f-b7c1-9ac7094c387a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 410fc5d6-ecbb-415f-a33f-fd3d434a949d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 2b0f7ef7-9c02-462a-8cc0-fab092d25d5a)");

unit.assert_eq16(16'h0346, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #837 8de67d98-663d-4328-b5f8-8f91a00e9bdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0346;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h02E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 6ae6bfd4-10e3-4f73-8b4c-dda24c94f6b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 67af957b-4bbb-4af3-845a-97b8a0faa0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 7f420ae2-7522-471b-a4ad-27a1cb5fe2e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 3053ae8a-b61d-443e-8a8c-8636ec0f7d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 2a67acd4-0530-4df2-9903-e659c7593d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 4470f267-b4c9-4902-8d02-8f78719803a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 74683400-16b4-4d86-bdde-8d18ca1c8f83)");

unit.assert_eq16(16'h00F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #838 acb76738-9418-4497-976c-09cc7338fcff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0347;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0118;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h0118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 197f4d5a-8b88-49b1-84fd-b3071a987417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 366a81b1-e02a-4e13-ba8e-8060e5d89b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 875bacba-732d-4673-b413-6ef595297f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 c739d3a5-ab29-469b-9e37-0af01eebc6f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 bdc395d9-86ab-4710-b057-455fc1d3b491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 8579060b-fd45-4100-81aa-0eed5925837f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 ae73c927-5db3-4c87-a228-6f0446acec58)");

unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #839 cfc763dd-076d-4cad-a208-0c10df68297e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0348;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0018;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h001A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 bba01873-d44d-496e-91d1-fa7ace3918f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 66a6ebae-6a16-40bd-8dfe-1aaba57753d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 06637e3f-ee4b-4f2d-aac1-603f9bf6648a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 70840e3d-2e7c-41a2-a371-1d570439fe78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 b6124610-f513-446d-94f2-9bcd0718038a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 37a42bc8-3ae1-4a23-81ca-a95c8dafc8a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 8650ea26-1173-4762-8907-5ac78286b694)");

unit.assert_eq16(16'hAD71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #840 2ab46571-3a7c-4e6a-9407-7b4dbda77bce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0349;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0613;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h0615, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 0006f350-5be8-4200-8334-d3bac83f7a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 3de648c8-b23c-4d2e-9026-b08942ea82a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 b82df9bd-c88a-4162-bc3d-c2749293b78c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 967540ec-5dfa-4cf1-88ad-860d680ca98c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 ac014819-0389-4f05-b9e9-f2d99a6fd3c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 ec435211-db25-4b12-aeb2-88683c389a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 64e0e47e-d357-489f-93c7-b205d38d0187)");

unit.assert_eq16(16'h4333, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #841 2f679e4a-2ed4-4e0b-a1b2-d76da89a0bdf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h0A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 40410f52-6dc0-4372-8ffa-a58299a95f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 033c7ada-c7dd-481d-ad4e-b8ee9d6086e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 6ad96268-170c-41a0-bd0c-806d8d310ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 209d1ae8-7ef4-4a08-a3d8-257f58bfa000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 e83e356b-04cf-467b-acd8-dbe1b2deacbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 d1ee55d8-de66-4e41-9183-e4d24855fdea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 a7e88244-5922-43c7-a317-29e238c3a4e5)");

unit.assert_eq16(16'hD935, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #842 0a10b8d6-26cd-4717-8ade-1babd7b38480)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h0AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 e0f4aa03-9a9b-4f2a-a28b-029218c40a3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 f1e80bf6-d714-452c-8096-2abc39156c43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 f0675181-87c5-4fcf-93cf-03549ab25f39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 19f0646f-9eb4-43f9-97e3-ea0b8ba69094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 9dc98931-1b57-4a99-988f-70d6f0d1daf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 32201a53-e85e-4020-be91-8e24367ae1ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 d01679f8-efc0-47bd-b5fd-51b5f0124d94)");

unit.assert_eq16(16'hA404, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #843 c08189ad-8caf-4491-8650-388a3da324b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'h0E25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 6cba1046-b6c3-4a31-a516-3dab3415fae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 d86503c3-d421-46d0-b76d-109c72ca9f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 b44af6ac-b198-45e7-adfa-90dcfc8be76d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 19450973-eba4-4155-b199-1a95fc2252b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 fa3cf072-01cb-42be-bffa-9991c2c812fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 e9433c9f-f79b-43e8-995a-5185c96eef32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 4dd2e256-f754-4826-92b8-8668d5fdb302)");

unit.assert_eq16(16'h034D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #844 8de80ef0-747a-4a39-b385-f7ea85edd04c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h051F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 40dbed2c-fb3c-4caf-ab03-136cef4de68c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 f4674fff-52d7-4783-9926-02906d8d6677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 0304717e-12bc-40c6-88aa-875cf79b040b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 36d446df-1abc-4ca4-8777-8afe60bcf5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 0af714df-cdd3-4cb2-992d-26c6f0cfbc7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 0b500180-9a06-4d35-924a-8928240f674d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 2fe704c6-88c5-4d79-8fcd-03bfc7228b42)");

unit.assert_eq16(16'h3270, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #845 24badd17-245d-4599-9953-ac53843c9720)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h0307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 665684fa-4606-42e3-8c8a-8d222c8644cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 4c12e46a-7f29-4fbf-9d0e-9ea989f2f7fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 5799cfe9-e9ff-4d6a-ba8b-58d57e32a53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 3b09c1cc-49ef-4f5a-9825-eb9b47dad320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 66b3a1e3-1920-410e-b168-cd166d5f7d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 a1ead176-7947-4e0f-8ce8-4e49326149f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 463c3611-2769-4605-b62b-1203879054a4)");

unit.assert_eq16(16'h034F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #846 849f748e-de05-419d-93a1-cbf033c78aa3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 ddf4b5a1-d948-4e93-9245-12a598543df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 1e94bf24-c4e1-44f7-8ade-efaaaea3a060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 ba3bd145-81db-444b-bb5a-29c05f77280a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 60cd35f5-a31e-4803-84d9-3fb31f0149e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 46f0dfe8-db19-4ccf-aac4-f5e647223298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 e05e5ad1-ad0c-4d76-93a0-02befad0e1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 68f9d569-45d8-4934-a093-c4b287e9ca5f)");

unit.assert_eq16(16'hAACC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #847 0aec9090-7c79-45b5-a7df-d49e8a83413a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0350;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h023A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h023A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 062f2429-e795-4e4c-b54b-3210bd37c4fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 3a23f4f3-d040-46ae-aed0-237673313328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 e549e1d6-2ca6-4ab8-88f3-fccd35028360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 bec35712-61e0-46cf-a97e-12e6db037015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 f901a7b7-a6d5-4752-bbe1-33c3e7d4cba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 ad83c92d-aeaa-48d1-bfde-734c7676403e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 f1ce7c73-82f4-4e3b-b819-33c7394e6cbc)");

unit.assert_eq16(16'h0351, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #848 a66ac474-6103-4d62-89f1-61a2de879aa6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0351;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h031E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 1401f430-2893-4ab8-9e91-7f8a2948057d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 d4395a39-f5e5-4482-b3c6-35f4f3fe9c10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 f78089ea-0004-4407-a943-1f743ded7468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 3ade8cd7-6661-46d5-84f9-a25c15f35550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 3eee2263-296a-4847-82b4-7b19491921eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 824c2c7c-d9a4-464f-9687-8437736439be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 10699ccf-2acf-42d6-ac91-66f6b849f576)");

unit.assert_eq16(16'hFADC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #849 72286047-9e50-435a-8996-c6522a03b2d6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0352;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0081;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h0083, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 d353c93f-5653-4579-9277-e789b9d3f45f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 c83848d1-6bda-451a-b731-9ad4adbce40f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 aae253b8-89d4-4a5d-aeab-a23b0426675f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 fc6ef77c-3969-4346-9850-d0ee473ccb3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 948ee699-a579-4d28-b33b-abb5fc773905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 60cac497-5f13-4188-8e98-8c4c4be5c801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 9e25c5a4-156a-4a5c-818f-a8c2eb027f06)");

unit.assert_eq16(16'hD990, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #850 2702b9dd-e305-471c-a58a-9c335a2318f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0353;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h0B08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 917364f8-04ae-4c4d-9058-d6463dac87de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 07fc1694-1d9a-479e-8642-aeea1df04b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 892e17ed-de4f-4cbc-8d6a-6d8368a1b35e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 d1ab2cb6-5c1a-4c25-9e74-f418fbd9038c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 8abf2720-b726-481a-82da-8e4f3911fd32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 2886a728-599e-4ef2-b7bd-bd9e87092cc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 e50086c8-8eeb-44ad-93d9-406f46bf93f7)");

unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #851 691af1b0-d482-4c80-a938-99e76e011ccb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0354;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h031A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 ba62681b-3b9e-4080-bb92-3dadf17413c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 782277a6-32ef-44fe-ba7a-c0a5a7fea3f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 9741ce9f-6eac-461d-9218-88c8412ab7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 790deeb4-8cb3-4a15-95ec-04ac12273664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 47d7829f-2315-4501-b4ec-10dd83bd848f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 bd86fd13-022f-4a59-aeb7-0607993fca3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 f571d281-ef40-438b-b204-cee08a498f3c)");

unit.assert_eq16(16'h0355, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #852 d5bf5a8c-1ac2-480a-ab86-457f56a36f01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0355;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h06D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 ca85ce38-8d43-41c8-b0fa-4e559eb2779d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 633ef755-deeb-437c-9018-d118d95a74ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 ab99b4bb-f09e-4ec9-9bd9-adf72de4efde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 cf65bc11-a3e2-406e-800d-b96192db5d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 99074843-5079-48e3-a1e9-a60446332d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 d604b20b-eaea-41cb-8526-1d2946f29b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 c0ec26f4-bb95-4af4-9dc9-78f9823afadb)");

unit.assert_eq16(16'h0356, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #853 f397ff1f-5fd9-498f-9bfd-50bede037324)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0356;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h089A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 a1662d98-5d53-4fe6-8cae-5799bb9af146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 70cbbfa5-0be9-4fe9-ab95-959cd3a5b12f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 417e1e92-9f25-4b47-a815-3ee4bda18af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 de77b45b-61e5-4e8e-ba13-fb9a45e9b2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 b4ad8b96-285b-410d-9327-e97f0343458b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 580d612a-7b93-4adb-b3f3-9adb8cce20d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 a24ae951-5e5c-4be6-8526-8321705aa670)");

unit.assert_eq16(16'h0357, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #854 ef3a1c14-35bb-4836-9a85-d987b8df94a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0357;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h05DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 6145b210-32db-43f7-a1f8-14f3fa07a716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 51be4de3-717b-49b0-876c-ec3663d753ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 34633675-8799-4e78-96ec-d2b8c2a7492b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 a8ddeceb-8a17-45fd-b048-7dd63c7f6271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 13c722d0-7864-4b31-a11f-e4b3c4e02975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 9e5a4a75-d978-48d5-ad3a-12f8776fd715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 f05cde18-6145-430e-a063-b02c1a4fb605)");

unit.assert_eq16(16'h0358, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #855 052d17c0-65bc-4626-8c11-b5247b0c061c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0358;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h0DD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 598509ca-3776-4373-9b6e-98b09b2c196e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 6229f5a7-0536-4ea5-a1ae-d7b9ecfeff79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 fd25e90b-46c8-4fc0-a1b0-dc3bcac9ef4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 a88f8d33-9ede-47a5-90bb-3fd04e399345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 c17cfdaf-28b6-4474-a21e-01c9161d931a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 4e8ca7b3-1fe6-4f9a-ad12-59b0d7a1c356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 aedf9277-848c-44e5-9aed-d5d1b456f860)");

unit.assert_eq16(16'h80F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #856 ad5fdf9d-05ed-4467-a82d-85633573a71f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0359;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h05F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 a133a20a-a343-4565-b5a0-62b409e7e343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 dc28e7b2-7d84-4323-ae0a-56e6ea37ade9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 f8832adb-ce9b-4e86-81d3-60d4562b68e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 1b45461d-78d0-4ee1-bcbf-b1567e4551c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 fa6c8425-9244-4152-9105-11e57600fd76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 873472c9-f20a-452d-ab67-0348327d643a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 73506463-408b-41e9-9a32-ea0e7792f0f4)");

unit.assert_eq16(16'h035A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #857 67c17bfe-d694-45ec-8f5c-3d2a50a40a92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h04ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 1b8d9909-a2ab-4a30-8f90-9d58c29ac85e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 06bc95c6-1bad-414f-998a-2121f214aeae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 b0c847fe-6dbb-4586-a9cf-c48dc7c1f46b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 f13412fa-4274-4da9-893d-c60513d588df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 4c3952df-4c5b-4203-b89d-caa8896aa546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 4beff29b-e9a6-4589-a829-8480193b70ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 773d9311-61a3-4272-b9a5-240d4528eec5)");

unit.assert_eq16(16'h035B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #858 515fb215-af14-4703-b56b-a4c1d5334f0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h0F9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 9680a796-bff4-4566-b6a0-b0f05cf25c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 fa53f8d6-ee89-492b-a68d-38e8a2c4f1bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 002051b6-7f9f-47e1-b6ac-dab8c04c6d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 b24e0cf9-ee9d-47c3-9c29-53e2fe72c2bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 b1449731-4106-4bb5-b186-48cfb422daf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 69cac22e-8d2e-40c3-80ee-1f8881a2c841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 81ed53c2-e43c-4ad9-a449-7633f2db4c54)");

unit.assert_eq16(16'h6130, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #859 b2bde7d6-8541-4b99-9f6b-ef1eb4a75d4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h0AE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 b28aa8c6-ab19-44cf-a1d2-0ae8d2d09298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 54f66e8e-5bcb-44b8-91fb-2867c107beca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 5e7baf37-04c2-406b-809f-388b1caa8d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 4405f93d-4d57-484c-8052-15683da55b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 cef2c32c-d2ed-4dee-b8c5-21ca57d429ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 6d5290e2-cd64-425a-8f0a-6cd0edbeff21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 67bb354d-0e8d-4d7f-94ab-355de030b30a)");

unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #860 a8526087-cf38-40a4-a505-466b240b0d0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h0BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 065c12fd-24bd-4680-aa09-4666e9687abc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 ec804fd4-053f-475b-a7c3-11467939976a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 69dce269-f565-45b1-876c-eca2b7ad831b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 59462df2-6a25-4317-a1d7-0a4ed7d86718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 48bc2830-e4ea-4eeb-abd6-bb0fdc9a5caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 68bd0cc5-aff0-4298-96b7-30076ccb15f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 3e563ba9-92cc-441f-b0e7-8804efa354fe)");

unit.assert_eq16(16'hBC78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #861 8af57c12-cd46-4984-a577-78ad57003bbd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 62527ff3-0535-4e73-9a0d-88c8e7ffd7ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 3ae06e65-822a-4da6-aebd-24f654150885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 462b7f57-da78-44c9-9182-7afae9be521e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 972b8c54-f9f1-4459-a9c1-dd3cecd3b717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 75954a04-6f9e-4b40-a1a1-b1cfc042f220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 e226bfb7-e94c-495f-a607-57da21b2e7ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 95b05eff-d3c1-4720-a2ac-5102a3710fd9)");

unit.assert_eq16(16'h035F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #862 b501a980-6437-4c8b-ba47-96a94cc878ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h0C2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 67fc4893-17f2-4071-a931-01bf66e8db11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 7c1f01ee-812c-4011-88cb-c301488a6e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 bcbd67f2-8328-4d4f-8d03-ecfb36427b81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 33f9e7e6-b3af-48a6-b084-0ffe3797b43a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 126bd28d-07c1-4001-8a45-1ec45531317d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 be25854b-da1c-4c6f-ba4a-2c8dffd0f8dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 481e5e44-fca0-48b4-87d1-4271744dd1fb)");

unit.assert_eq16(16'h0360, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #863 ed433847-d260-469f-97fd-e425da5556ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0360;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h0F53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 6a2e51cc-72b7-4249-9522-11ce2e408876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 c613227e-b193-4ac5-9997-b999eb8d90b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 85968703-d39e-4329-8080-f58f345f5aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 4023978c-c321-4c8b-891c-37d118dada7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 4ba46ffb-63b3-47aa-8e8a-0386543d6594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 38415fde-8452-40eb-bb67-2685968b858f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 b6bcfa1e-88b8-4891-9c53-e87aa1e3d48d)");

unit.assert_eq16(16'h9B6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #864 57aa512c-e994-4a82-9ba8-572907399c86)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0361;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h07E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 7e83dedb-6327-473e-bc2f-e7e3bb2233ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 b1b75bd6-9c72-45fd-b6bd-e1c4fa8e95b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 4a3effdb-a759-4d84-8630-843e4a8c8fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 f02d9864-4a4e-4edd-970a-d6817d1c4ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 502c7c18-1681-4320-9717-a7c0fea83c70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 cc50df34-ddd5-4de7-a6ed-4cf5796f9261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 bacf376d-79ad-4cc6-bf98-f2741035bdff)");

unit.assert_eq16(16'h0362, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #865 6939d626-5224-417f-ad83-d80a858e2d3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0362;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h0C83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 1ef6d2ae-7a9b-4f32-a93a-861582e1dc7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 1ed0abfb-4836-494a-8a5d-457f57e076dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 ee63a499-3f41-443d-a926-d9177183afbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 c1f3a88b-18a0-47a3-84c6-e501ab138cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 43c5c813-7fb2-49e6-be96-84d94e634296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 e1e6cffb-8119-4497-9b76-d251185c6b97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 c37c3f43-6bd5-4880-b5d9-49604e55d414)");

unit.assert_eq16(16'hA30F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #866 f7bdfa32-fdcf-474a-b532-1b73d2cd9f8c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0363;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h0AC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 40686fd3-a0f6-4b20-a77c-ce281e3460f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 d2142572-ee53-44fb-ae09-ffe2d3e8c6b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 4547a328-bf70-4a45-b985-e6468e676351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 ed4afbcb-885c-4032-8a8e-0b1deeb6e043)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 c5783cfa-9762-4e3a-9d90-86e9dee3a8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 ccf9403c-8392-45bc-a900-db87865e2d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 8d1c7d5c-91e2-48c3-992c-f913c791562f)");

unit.assert_eq16(16'h0364, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #867 0391c2a1-a2cf-447a-b4a3-497d56a6d578)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0364;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h044B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h044B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 9ac81953-6aca-4a34-bffb-abce2f18a07f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 4036cdfd-803c-4f0b-a7be-e2e9e85a38dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 115a724b-449c-476b-b0fb-56d36cbbf3a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 1a1e6b82-22a1-4afe-be52-1f6ce2989ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 53152a45-17d0-467b-88f0-374bfa72ca6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 0732166a-d36c-417b-86a2-1d5a858d90f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 fb25dc25-4205-4bef-b428-2c6ff6f698fa)");

unit.assert_eq16(16'h0365, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #868 6858c774-a9d1-4ef6-a94f-52551eb49c17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0365;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 50e16e0d-0bc7-4787-91b4-a9bef0d493b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 8c206cb6-c265-4fb7-b662-fe4476824140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 527964fc-8aca-4e21-8f14-5ff3342b6e0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 3cb4ed99-d2db-4686-8452-cdebef6e539b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 a728e758-295e-4583-9d62-488a39fcf9ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 5a90af0f-4b99-409e-8202-2a2483e2199f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 957ea502-5b22-4544-a764-4a8603e894c7)");

unit.assert_eq16(16'h3EBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #869 546757f7-2567-4bd9-a421-dd4aec234a0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0366;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h041E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 d569b97a-bf6c-43fb-9601-32d70243fe7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 ce82af46-5cc3-4142-ab85-3871a9cb960b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 de26b03c-5e85-4791-803c-a6d9831ff678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 a70b8625-9122-4f85-b52c-5944efa9ea02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 7efc2fcf-f53e-4f55-a817-bef1463d1acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 d01069af-292d-49a4-ace3-15195cd536cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 53a0652c-08bb-4d80-8300-798ad7f79b2c)");

unit.assert_eq16(16'h0367, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #870 a1dfff7c-1db6-42e6-9ca0-b1b327b05fd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0367;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h09B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 d3a98d8e-c24c-4932-a5e0-19ce18746226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 b7e5ec4a-5519-4f27-a4f4-d23097769c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 f98d4ae7-98dc-4224-b06f-fa10a304c31e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 001c54f8-8f24-47ad-949a-084e8bbd7fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 b9eae6cd-4926-47a1-a2f4-3b2a1c9461f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 35f90500-b56b-4850-9c22-9cf6dc5a1227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 ff39b02e-d58f-432e-a2cc-f46a5f261e14)");

unit.assert_eq16(16'h0368, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #871 87c1efd5-c34a-419a-bf2a-fec1515a14de)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0368;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h01A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 119573fe-7d39-4e09-bbaa-3e25743bec20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 3cca1ce9-11ca-41a2-9e0d-6448eda5d194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 53ffe580-2128-4864-8a78-36c7188016c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 dad5c1ad-ee9e-438d-ac8b-a678caa821e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 2a74806e-14cb-49bd-93ba-ffce67f4177c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 754ab59e-a526-4c36-bf0a-ad5337be90cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 0cb3e82c-5853-40ba-8f0e-8a55c891e694)");

unit.assert_eq16(16'hF518, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #872 cfe9f814-123e-4790-812d-a125a6d5a970)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0369;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h0E3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 aaf69c7b-a211-44da-be38-7b184c8946f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 a2a480fb-0878-403f-b5f1-070b96c418c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 e14a013c-4f15-48d4-bfe5-74478d4ce17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 32c9a716-9581-477d-a31c-05f59b46ac47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 e4b066f2-e17d-4a74-ae53-999378efaa73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 5a302bcc-7e5d-4425-bddd-97c42362747e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 cd848dc6-fb7b-45c3-bf5b-950d5e278773)");

unit.assert_eq16(16'h5AA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #873 0a817e45-744d-45e3-a8c2-907beb481686)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h0B31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 17dc148d-9d1f-4865-979a-a3e0e2503b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 27675271-e9a3-4cbd-81ed-1dd6844821eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 dcdc51d1-a406-4c8a-9275-2aa1b76f0a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 bbd7ee30-fb14-43e1-a999-63a9b202b94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 eb73339c-682d-4853-bded-ad4d7db4da2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 9774f3fa-ba58-4332-be79-04cfc1df2a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 07348d34-4df2-4da1-8400-dce28917935c)");

unit.assert_eq16(16'h036B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #874 2d5b5b78-625a-4702-82e6-833ceda9c041)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'h099A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 ca74e38f-1da3-49f2-8d13-f9a50a87aa69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 f97c64f1-c341-40bd-94d6-df59938bf6c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 df84d3c5-5f29-4785-90e2-03c762f16d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 cb66aaf8-4f22-49fc-b48d-210874ced125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 f533a9dc-eb57-420d-b0f1-9dab827f83c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 5d6d7aee-50fa-4a6e-8f70-23eec2bbbdc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 dcf861bd-0502-4c53-af96-2e84a9c82f11)");

unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #875 a4e3bac2-5635-4934-b8bd-026416e42c4e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0518;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 f134c560-63c6-4280-a65e-f7e586555c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 f70110f1-a3f7-492e-92bc-67aac55da17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 99059097-9ee1-4b52-bc96-f359879184b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 1f199e20-d3ac-4104-98d7-18301aecd7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 6d6c8a01-6253-44a2-ba32-3b9374d5f46b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 c45a7840-761d-4300-8257-8284375323d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 ee9e3803-71ec-4820-ab95-3c8e81bfb3d4)");

unit.assert_eq16(16'h036D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #876 85b775c4-e58f-400d-8fa5-517d587d4355)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h09A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 8678757d-38b5-4012-81cf-8a4e48f20b3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 4ebc702f-2b78-4dc3-a216-a1ad9af61209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 96760056-1f6f-4a85-ab40-e994e29e8ae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 cfe6879a-7f46-4ed1-813d-da08a02c517b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 70f03d2c-64ce-441c-b86d-61067659f040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 f6d8129e-4d3a-4860-843c-a4e50687821b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 b97a1d80-4424-40e9-a922-0e9d2c9a13de)");

unit.assert_eq16(16'h036E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #877 3c75638e-45eb-4c05-8e53-456dd2fbf40a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h00AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 630af634-2217-4bc3-a68c-d5c991392cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 73e05d6f-1adc-4fb8-9c56-dfd310b0524d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 f5cc7f93-30b6-4b11-94dc-3e55b483f0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 801efe65-aea2-4e90-a0a5-6a4ace032d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 390d4679-d836-4a84-a483-e3e5b5122934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 c3c6560a-3ffa-4852-962f-30567fb8cca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 1615f755-2d2c-4397-99cd-dcca17c2e336)");

unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #878 baef1cfb-b0b6-4ea7-bb4f-9ad89467f675)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h027D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 0dce8950-16d1-4502-a33d-4c1794fe6340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 4c045968-9bd0-4cb2-ad64-5dc00d9a060e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 f50f3710-07ca-4ef9-91a7-fa50b4c74d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 87133bfc-6c1d-4da6-b629-e530387bf899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 8564f9fb-62cf-4c74-88ed-c60c7a7cb645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 e20c6242-b856-42af-ba7d-5b9dd5635234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 f9e09d4b-d72e-480b-b78e-773ad6b56f59)");

unit.assert_eq16(16'h0370, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #879 a73517cb-a271-4e6b-a2ac-b117ebfe4dae)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0370;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0364;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h0364, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 2a4bfc67-3982-480f-9363-9de1bf731000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 c2f745e6-304f-4810-b43f-26752ed253f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 5574f6af-126c-4d5a-a87f-20c5e9d7b5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 a5cef9c4-3a21-41ca-a8a0-24ad75e689f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 535e6539-08b8-4a50-a009-842560ddff2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 b9be480b-ec4c-471f-b1d4-9413c0e11a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 fd893726-93ab-4b3b-a2d1-2fcaedc156d6)");

unit.assert_eq16(16'h0371, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #880 4559f30b-4925-4724-a95b-994cbfc38ddf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0371;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h059A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h059C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 c941e008-3374-4056-8e64-5758dbe2b544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 6bf95dba-903e-4141-aceb-5ff95c801869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 a41113b5-7b76-4b79-af50-95ddd60c63d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 9d744fa8-dc9e-4e70-a169-e2cc98c08c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 5f0ac77f-8cb3-401c-9426-c59fcce5e072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 acc32ad4-d740-477f-9538-333564923ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 661c79d4-5d9d-4891-a802-170e38fd38e9)");

unit.assert_eq16(16'h1637, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #881 ebeb3f1e-221f-4285-a2e9-eb3d2b2cd7e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0372;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h0EDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 04f7ddbd-6291-440b-a835-8467f27519f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 96f4cd42-4e7e-48ab-abb5-441d6a97d9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 e0853962-f75f-4108-855f-ff27709388ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 853273e4-c889-488c-a593-43395b140db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 fa6dc4da-cc2e-485d-a26e-33585a132aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 2e4f757b-1d28-4f9d-b650-5b3cdc1d8af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 350ea825-55d9-497d-87ed-a45ba7cc8be0)");

unit.assert_eq16(16'h275A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #882 8d05e670-18ec-409e-98b1-91258ab0a801)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0373;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 f6a406bc-7fa3-4aa3-a84c-7090b34792c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 f4a0579d-d649-4f18-9261-78b269395f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 fec29b5c-4176-46ff-8f13-4f044365b345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 e038a8de-679c-41fb-a124-1e3c238b5306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 4f5ad043-2857-4487-baca-8ab425c0f46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 470ecebc-c49a-43b7-a7d7-bd347890a688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 f5cce9fa-682e-49e9-9031-275c64312dd5)");

unit.assert_eq16(16'h0374, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #883 c994d376-b334-49c6-9538-32d30655ae24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0374;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h00D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 2f036424-8b48-4823-949a-4947865343f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 7117fed2-b9ff-4d58-9c20-8fe548ad136a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 59b8052c-3474-4375-9925-7acdc361486c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 3860ed94-7a72-4d65-969a-ae9e5a475acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 ad54e2c6-de2a-4fb4-860d-b44f15ceb9f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 6b50666d-8bd7-4672-8fa4-7674d8d8db55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 3a5b24fd-04d7-4c7d-83cc-a0d753abff04)");

unit.assert_eq16(16'h0375, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #884 0620b51d-2279-403e-b635-14cc09fec0ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0375;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h01D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 79d72282-a64f-494b-b921-4028b2085660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 a4f1b7ab-cf7e-4528-9892-3ae51d2d26c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 6b4df286-1733-452b-8b24-9165d4f52200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 2b549b85-6017-4ddd-8d34-bede163dc8c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 0b58dbea-3967-4729-bf5d-c64ce6001ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 e0ec0c0e-d5a6-4b65-b438-2a99a3fbffea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 0521b1f4-6020-4b0d-977d-9d096541c837)");

unit.assert_eq16(16'hE36D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #885 f9ca74d4-9715-4f52-b90d-faa9e1679600)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0376;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h0FDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 aef2a613-d48c-4944-877b-a8427d194a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 299462f8-80f1-4163-9ae9-8df2f1768ea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 8da5e110-1967-4fc7-b8fe-2cca94f9d18d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 6280a361-27f1-43e7-ad96-34a8f90bba85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 e2afa0e4-50e7-4cf3-9efd-fbbb8f4f20b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 af54c1ec-89b9-4048-8c79-089bbfd529bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 be7655a5-9073-4132-979f-de530eb5725c)");

unit.assert_eq16(16'h0377, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #886 72483313-37bb-4c8e-a12d-40de8d79c6eb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0377;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h047F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h047F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 e24b9d96-0813-4a65-96c3-9ffcb214d7a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 2234e944-759b-4362-bd99-9d7fb9923159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 f4dd7f17-37c0-4d50-ab88-6424b279dab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 0e7a96c6-300f-4008-b4fd-ee7980d9a231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 52161d77-60c0-423c-8bc4-834e1a7148d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 4624c409-4be6-4831-8aea-ce665e51eb38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 eaaf5d12-3a33-4417-b936-19385ca6113a)");

unit.assert_eq16(16'h0378, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #887 4a82666d-bb40-43d8-888e-f410194f74d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0378;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0895;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h0895, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 28dd5683-ad26-40a9-8fb6-1e7af9c68fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 9aa9bafb-8334-4ca9-9925-06e1b12d8650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 3f866e01-c498-4e0d-a2f3-ec358dd6f639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 b7975efd-95f7-45e1-b43b-0a3fe3114d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 00d40cde-a185-4569-a6d8-ac821bfa3e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 e2658fcd-b0c9-4d78-90f6-69389f59d778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 2da704a5-26fe-4e15-8698-ef6ee17abbb3)");

unit.assert_eq16(16'h0379, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #888 dae8869c-6ef3-4d28-9341-40791d8595d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0379;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h0FAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 264668f3-39aa-49af-bd18-64be11216326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 1c3baea5-62ac-4b16-b553-0d658b8a1086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 2b0ed50b-b8e0-4428-a633-9a0305d91b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 a61a911f-1fad-4d12-be36-18552618baf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 339fcce1-8cdf-4cb8-bcb8-426c22d0ea39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 e32b7ba0-bd61-4766-8979-2150c29d1257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 df123cdd-4424-40c1-bef5-678dbfaafbce)");

unit.assert_eq16(16'hD4AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #889 af9667ac-01e8-468a-a180-eaed09a24168)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0448;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h0448, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 510cc4e3-fc31-41d7-94c4-39597c5d044d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 4bafebb6-216c-4d8d-8b57-01059a5c2fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 46643373-fd05-46bf-81af-5b87792dba73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 f7c1185d-c7b3-49c7-90b7-1c9131d4ac0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 2daa9323-69f2-43c0-a02f-b2fc7f8049e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 1d69df21-93d9-4f10-a7ac-7776e74a966c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 eda703c8-3945-4aff-9fe5-1470d3f0e792)");

unit.assert_eq16(16'h037B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #890 b3d1f4d2-6607-49ac-85b9-427c289b5472)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0509;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h050B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 4e69623a-37da-4ccd-917a-ee89999d0e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 aa52c2aa-2346-4b6a-84d0-fcb4bccc7896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 ef4e8e72-648a-4723-937a-4587a597f0dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 296ed473-b8ce-4e06-bc90-90cffa892a5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 7ac2bb44-c338-4cf5-a4a6-6439a440bff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 d9035862-023b-4f90-848b-ff7001f154cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 f629b743-751d-4b17-bc2b-b72a4131590a)");

unit.assert_eq16(16'h9CAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #891 792c3cc8-ec9e-437a-8a06-3746d4d4c704)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0872;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 66d87e38-805e-47c8-9ad9-e99a1a4d50b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 56161bea-1255-492e-9906-61d3d18b0761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 99c0b96e-a06f-42c4-b149-3a4450a1675d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 3ff6b595-af52-4ebb-aa2c-79ed22a5eade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 e252715f-bf24-48d6-9953-9f408c87153a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 b55d90ef-19b7-46c0-a6b1-e76e6954007b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 f87d5619-4679-482b-8659-f819aaf4c155)");

unit.assert_eq16(16'h9557, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #892 0d1dc23c-4536-47eb-8b16-9a1079e5be33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h08C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 18351d50-86bb-40e9-a9c4-51e6738809b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 fd1f4ced-f050-4a20-9708-4398bc16e765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 5a36c005-ec3c-4f45-aa85-afde8dd8c5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 894b9a0b-cade-4fe0-be29-acd1962f8dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 344d2534-3104-45e2-b77b-e9142768755b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 50e117be-4bdd-434d-8893-abcf24d87f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 cea28a80-bed8-4299-9e46-9db4e3c45c3e)");

unit.assert_eq16(16'h5884, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #893 9ae11bd5-ef40-4611-a201-70fdfffe2f4f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h0FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 7ac3cf30-3076-4cc4-b18e-c95adc2a930c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 57fc1100-5a0a-4580-8aeb-dda81750012c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 ec593a1d-c512-4e02-bb24-1b4a029570e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 d1254bfc-8de2-44e8-9045-09634d26b3dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 4e38b530-f536-4cc1-8432-2d18fa27ae23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 a14b1944-4fef-4773-9126-021f68016980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 d54cc43a-b8cc-4819-b9b5-e87453a2d3d2)");

unit.assert_eq16(16'hE3B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #894 b6d8043e-9135-40e7-b495-19b2a6ba3c46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h04A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 c8077d19-409e-485e-aa43-356c551def66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 1cd71e80-c361-4f09-99ab-6bf7e2b821d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 29c7ae59-dbd1-483f-b416-93e6e7f8fac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 de728506-e67f-41fd-bd32-4a9dedd74752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 8fa38fab-71ee-46b3-8631-7cf3263ff9f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 a4250279-c642-4098-b457-f8ddbf6fd6ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 3784bd8e-037e-4310-b57e-ae153f6f7ca9)");

unit.assert_eq16(16'hCBC4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #895 ff3a81d0-c4c2-4711-8702-b99a84a3b842)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0380;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 7afa1612-cecd-4d6a-95fa-b386f1872969)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 a64f9216-7805-49c5-8252-bbd2e8cbd02c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 c8871952-c552-44a9-97d8-35bdb2f1634a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 ce486739-0588-491d-b6ea-140c7d2993f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 320044b5-d3d2-4158-aea5-36a037abbafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 6a3e39a5-ff50-450a-ab0f-a431fd0ec125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 c86453eb-5279-4a6e-8e1c-4d228e4c71c2)");

unit.assert_eq16(16'h0381, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #896 75d49906-19df-498c-92ef-38097d15f015)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0381;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h06E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 e32dd04f-5278-4a88-8b27-90387074dd50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 22180828-1c70-4084-8056-e2e884c5410c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 5d024b96-52d4-41a2-89f9-cacfe576392d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 096ece0b-14b3-4b09-8f02-bb2fcf3917d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 8bdc82cb-fa34-4292-bd72-897f51471c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 5df2bbd0-9163-4694-8c3c-22186bbbc31d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 b371e95b-d749-409b-8a7c-7dee6d982672)");

unit.assert_eq16(16'h0382, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #897 d71e80ea-e65c-488b-9660-1f9a5c7647d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0382;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h014C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 6a0629ad-42ee-423d-9985-6a85fd979838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 6396a7d7-a9d4-4d05-863f-991e7dc17e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 e1cfd8d4-5572-425e-8d62-6ca4c4122b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 14f3c506-2db1-4200-865b-ff1095849608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 f1df85ca-3808-4166-89bd-9900aab7a0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 1f43d75d-2f1f-47cd-86aa-1f5f6ad6e6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 a37c9b94-c514-4ac5-880e-98e08c9e5478)");

unit.assert_eq16(16'h4C6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #898 8b48a2a6-3494-4a2b-ae85-e61f6770152d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0383;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'h0603, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 a847e341-a3f5-46b8-b295-7748f4180c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 1921d5fe-73af-482b-83f7-d1dd28c4da61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 7cd79e09-94f0-40bc-8b88-526dc9e6f126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 ac41f8c5-be92-4b43-b94c-7b9d6c4f3b04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 c09863dd-a791-442a-ac0c-50ae552eb721)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 0d391ba2-82ae-4ca5-914e-e5d0be52bd4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 888f84b1-fa1a-45dd-99cd-cf7416857a16)");

unit.assert_eq16(16'h3926, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #899 fa2f1fb0-fa92-4e8c-8a7e-29d0f5fbb9a5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0384;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h07E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 3547c55b-07a1-4e46-b950-f9e1978e5609)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 5249ac97-6985-414a-a724-8c8027a06a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 fce11ce8-e7f0-4175-818c-e5ebcf8914bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 4f40b8d1-89e7-4209-b52f-5c8d50e1808b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 45c48dbb-e1fa-4043-b806-d574a94665d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 24f3506f-f857-4b13-9dfc-1325f94beea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 12841e49-577d-4fc2-adc8-98f9808de8ea)");

unit.assert_eq16(16'h48D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #900 d6ea9bbf-82f0-4d26-a901-34dddb01b2d3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0385;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'h0A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 747c7b64-67b2-4ff2-969e-e52cd07f65c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 ac17a29e-f778-4504-98c4-bf80b65e2d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 2ff87b49-ce42-4310-9d99-d2a57c3d501f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 95a23d04-c074-42bd-84a2-d42b6011e44a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 3305cd5f-6ada-4609-9e97-9aec1c86955c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 e6ffd1f5-d82e-411a-bdb2-2175dc2d90ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 ac934f26-13ea-4689-8051-83d0922a8515)");

unit.assert_eq16(16'h0386, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #901 4b0399ea-cfa5-4d07-9bab-e9d498c1d92d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0386;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'h06E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 7213ba26-dc42-472e-a884-5e4c1cbdd1d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 fa1fa2d6-6e4a-460c-a35e-7fe96a960218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 80010029-4a6a-42fe-aeda-9517c275332d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 21952f5a-7b94-4e35-9abb-28c89dfe4b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 a49a35ab-e06a-4fa0-bc35-4f96d5708ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 4833bdf9-b8d8-4144-a583-87911630deab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 a602384b-be86-4bf6-b5c9-e24b0335b9f9)");

unit.assert_eq16(16'h0387, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #902 ee020a68-6ce3-499d-b8a6-7dc14e118ccd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0387;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0267;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h0269, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 d69379d3-7534-4132-8c23-81d4dcdd6846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 c91f786e-755f-45d6-9453-f7f8c4fc28ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 bbee77f5-f0a3-4da3-9b90-f178c76a6c77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 9a517dc8-94a4-4013-9a54-aa283707f151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 3cf7512b-337f-4da4-bc27-56b92f2c5af7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 d18293de-fdb9-49e2-be6b-4721762b5943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 e538a9d8-4b49-40b7-8725-d1a3c3d14bcf)");

unit.assert_eq16(16'h6315, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #903 1a628c87-fbfb-45d5-bd71-d8ce50a43a22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0388;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'h0B9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 35c6b9a6-1f49-4836-8659-3a0d322af871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 66f52962-fb32-4da3-a861-395149e8a265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 9c4115ce-de57-43ce-9358-1eb677f363e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 598dfba5-d4a8-428b-8b24-fb84ba45bdf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 0699bc22-7c4e-456b-bfdb-b217b675cb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 1e413a92-0fc9-4f98-9b9b-10806dfdda6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 9738dcb7-0ab3-4046-ab0f-7e2438f656e4)");

unit.assert_eq16(16'hA55B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #904 f989c92d-4414-45dd-ad6d-bc35355af6a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0389;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h0C6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 d4970c9c-0cf6-4915-969e-cda9c0f2fdaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 a50c27cc-f4a6-4a66-9626-0a6dd0c89189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 5d19282f-87cb-49f5-b0ec-0a07e90aa422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 cc93a469-662c-4617-88dd-4bc06b2340d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 f38fc5ef-757a-4180-8ed6-38306edae0f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 43b37675-f51c-4782-b4c2-b0bbe6371fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 1fc1add9-2599-4372-b52e-4fa5ed22f28d)");

unit.assert_eq16(16'h038A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #905 4072a57e-9d71-4cc6-b9d1-d569eb86178e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0091;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h0093, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 bc11a9a9-8774-4676-9781-8168595e7d45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 dac00b2a-61a3-4874-a3eb-9f1c349292e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 ce2cd53b-cd82-462a-b38f-92e061e24e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 11ecc0c6-46f9-486d-ad9c-aa8b3a270e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 315fba35-9b8a-46de-b58e-3f79e66d1278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 27e1c769-0cec-43d6-9527-7029f2e40a51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 51402ce6-7ef7-4b54-a79e-170dee8cf2db)");

unit.assert_eq16(16'hD419, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #906 f563def0-acf7-419e-8c93-fffba2c58813)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h097C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h097C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 0337c340-d7b9-45e6-ae91-933fed5fa083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 5524d7b9-1bdc-41cb-9cfc-8fb63a1573ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 57b8a95a-2c22-4521-ab15-8a3fba62e5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 e6ae9fc4-2baf-4b0c-be15-d4d8ac8829b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 526e4d86-2b55-485a-bbe7-7c1032fcc533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 911fd497-6b51-4176-9a1b-3f058d0bc8b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 642091a3-c99a-47b2-893a-4ecfce716ba9)");

unit.assert_eq16(16'h038C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #907 cce32d2a-ddb8-4dd8-b75e-b963ea92263e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'h0B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 0c76a75c-5a54-4c9e-8d47-339b2e38fc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 08a4d024-681e-4760-a8f2-8d05eb0feec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 25a43109-0b70-45d4-9f7b-b38354e6b4b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 ca4c2b14-f0bc-4a12-9d62-94fdb4cb4c24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 1a07b3c0-6876-4c50-8330-108484f3e29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 3b1fd13d-6275-4090-89b3-d66c228211a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 a4acddb3-c956-45c9-a0bf-9486d7797ea1)");

unit.assert_eq16(16'hFB02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #908 ffe76ef9-a348-4951-87b4-dfca90e01ad2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h034E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'h0350, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 a30a1fd6-ff7d-4914-abfe-298ab8c25307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 64f88d97-cf74-40c1-b686-116122128bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 2169bf31-8f1e-4f58-910b-4336f9467ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 397598d1-ad00-4366-95bf-db7e1c1ae7fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 77b2ec94-ebdc-40c4-8521-1b03aa748fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 f52d05b8-8ea1-4127-9b00-c89b24c273da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 abc14124-ee29-450e-99f4-64de1cfc8fe3)");

unit.assert_eq16(16'h3CD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #909 a44d17dc-26b8-446f-b3a2-033d61a0a11f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h02E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 e6ba97d5-5837-4420-b209-d4cc646d73ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 b4f2c862-6759-4e0a-8625-b5707015f95b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 d724d426-8969-42ac-a9e6-078ef1c001db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 1998f068-9641-4cb9-8244-e4371282c7c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 ae5d33d9-7268-4872-b8e4-7ab8fa8effaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 a5a009dc-e7db-4556-ab27-e762286b0c88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 001c8b30-4095-4391-873a-c405d1f61023)");

unit.assert_eq16(16'h038F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #910 5e72baaf-4a73-4f34-a72b-f6fbfb18539e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h0A05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 9ada359e-8518-4aa8-97f0-5e10138c1431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 530e5022-2c20-4dad-9e06-d804ec5c497f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 6e3b6d23-573b-4400-963f-f06065871a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 0c130f9c-21fb-49c2-876b-2064837c5b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 5fb23d76-7df6-4e33-8f37-8ecc438796a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 1959361c-28c5-4b93-b790-f31f31f3e128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 a60cc1a2-fa65-4c1b-bc06-851ec1783574)");

unit.assert_eq16(16'h0390, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #911 6423b2e8-ad0c-45a2-8bc7-b17548a38052)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0390;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'h07C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 c3ed736e-929e-4eb5-9757-fbc4a9ab3d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 a358e161-2931-4132-a3ff-afadba1cfa81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 b0e3e51c-b9e5-4f0c-a5e3-a326f70e70cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 b6e0c99b-4506-487c-b183-4c0241688ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 0cd46fc5-9282-4e59-892c-03619bd199fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 0066386e-cfc8-4d6c-86cc-cec48790768f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 2e81951a-b2b2-4b76-88ab-fd7f53ff877a)");

unit.assert_eq16(16'h1895, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #912 455a9f97-d733-456e-8289-faa8ba9c62e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0391;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h0CC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 e6315ee8-633c-41eb-804b-385b3b6fb1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 aa47131d-07b4-429d-bf97-1f4fb0463871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 e440b3af-6c5b-4979-87be-cab637c747be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 84972258-e814-47a2-b371-254805db2157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 a7cf15ac-f650-4424-95d9-c288efc7e0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 96a13999-2151-40df-acfb-bdbe06969546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 a2e182bd-04f3-4ba4-b5c4-33925bb291b6)");

unit.assert_eq16(16'h0392, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #913 f8b62771-172a-407a-befc-c0fea047d615)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0392;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h039E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 597167f4-cb15-4377-9cdd-53871b7d75a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 26009446-c5b6-4c27-9ad4-1733acd7d512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 55ffaef6-70fd-42ed-9d11-ceb1a3593d40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 ee1a015e-c212-482e-8c5f-9522e14fdb8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 ce65cdbf-1dfb-4b3a-8af7-ffa79f44ecb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 b70a720a-67a4-4858-a8f5-7dd513a5d9c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 23af235b-9c24-4d14-856b-f13ea761de19)");

unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #914 4d351923-c8be-4610-b1e5-18b07dbaeab5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0393;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0270;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 e557d3d3-4bc7-41c2-9871-f54addbedc82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 67d59ea3-8e3d-48f9-ac47-d2f2b4bce281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 e5d4db40-b951-4ace-976f-9c75d1a440cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 c95f41c7-8edf-4eb6-af10-f06a512e3458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 2813c8e9-0ade-4f9c-a2e0-1e5002caed11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 b9674b3a-2664-46c5-bd66-c66329a4aa21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 b49beffc-acbb-4da7-92c3-eaa47a1b1be3)");

unit.assert_eq16(16'h2BE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #915 e62221fc-b7fb-4edd-9fec-41c38e633863)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0394;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0346;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h0348, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 712b621b-5a62-473c-828c-39e1bcc88838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 2fa1e9f1-50a4-4370-9460-2130dd4fc98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 fd172d64-af10-47a4-af1c-5ec317f54299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 607f8909-3647-495a-bfd9-3e232ba736c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 7fff3aea-ef27-491d-a515-682d091aeae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 576479e3-4399-43e6-b02f-d5246d212b09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 80717352-fc04-4409-8d8b-5f1df3c81dd8)");

unit.assert_eq16(16'hAA5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #916 5544111f-cddb-4e74-bd9b-a6c3bb173f58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0395;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'h03E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 728a79ac-796d-4f65-ae81-f8662b1cbfa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 c4722b80-f6f5-470e-a3f5-68a80d19ff35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 fc6ffc50-44df-4a00-9a4b-a0b507d6b496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 0ce23a34-c551-4f7a-b8d1-8a5a7a88dad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 25439da0-158a-4b70-a36f-05a3f3c9e3ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 de1ae4c3-6e3e-4062-9e1a-0d3ed504077e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 c8d64361-5f99-4065-93e9-bb0d187a3774)");

unit.assert_eq16(16'h6E3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #917 f4bf4838-5c82-4265-876e-9e733ca6bd08)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0396;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0130;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h0130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 00355a8e-3cf6-4bb8-b8a4-1802589c835b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 8bc7f559-6629-40e4-82c9-f9dd91f6f5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 0e33080e-faa2-4f26-a754-c6fd4d29be3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 09bcb237-c01f-4153-bfae-cfc97075efaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 77a358e6-fa85-4e7d-b297-aa2129ec0385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 1a4cbe65-0337-4d0f-8a5e-e9903566d167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 176b443e-f70f-4f7d-8ab9-9120d74e3947)");

unit.assert_eq16(16'h0397, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #918 0cea917b-294b-4baf-9476-0709c58274c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0397;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'h07D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 0dcd3909-73da-455e-99f7-26b78da39779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 08f7d872-c160-4fcb-8755-1564aa78b26a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 58fdcf88-af73-436c-937d-a38b458f1917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 f4e3b1ad-a371-43d5-8162-7cc5562f36cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 eb27eefd-2ff9-417d-bbd6-0feb8b37cc2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 e7c34b26-596d-4043-bf22-1fad631ff028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 559dff81-2901-41b8-a6c1-266cd422df89)");

unit.assert_eq16(16'hA53A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #919 a64533ff-4c87-45d1-9f2c-dbf1f6a2f825)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0398;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h04A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 8be747be-80c6-4196-890b-425afa486e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 9d0b046b-2588-4157-83e6-50c926dae7e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 662434b8-d0ad-454a-9ec4-9369e6672a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 1abe0e07-9675-4184-876f-dc26bf26c1a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 27a05ed2-f6da-47b4-9b73-a7f3a48b26f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 98eb0991-c76d-4d19-a053-b89b1ec98350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 cf0a6565-f1d4-4a65-9fb9-47e4b6868a6f)");

unit.assert_eq16(16'h0399, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #920 a1122500-3f19-4d56-af50-a67c63ec7db6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0399;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h0CA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 0747f62f-0a1e-494a-81b5-71c97b85361c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 90b39d7d-10f8-48df-aa80-b60d6bfe46ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 b88274ed-b423-40ac-84e2-07912aed9114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 9dcea2f0-bba2-4d52-8530-c618a33f66be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 95713bbd-4845-4c9c-ae74-be92a8ca83d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 a788dd4c-63f0-492e-980e-e48c58337219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 412ac252-0dc8-41a7-a4e8-53ccc996b1c8)");

unit.assert_eq16(16'h039A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #921 58ebd528-fba9-44cc-993d-f7368817f96f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0078;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h0078, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 3be21c9f-01e6-4d72-9fe5-e66c0c5a7dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 dfcd124c-6a12-45b8-9b03-afd149142c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 02eb21fb-ebb7-4ef3-ab38-51f04a91bcdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 aec71d3e-007b-4b86-a20e-0952c3b5edd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 163e8768-cadf-4f92-b02a-7fa00f6688f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 5e631084-fa8a-4d95-8c8f-5f0c058125e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 a5bf9e4b-0dae-4e1e-953c-d53e9a72f4f9)");

unit.assert_eq16(16'h039B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #922 eda7a7e6-dd5e-4903-8994-dc05f4e91f30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039B;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h044D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h044F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 97b5a5d5-eb11-4e09-a019-001dc4d33151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 afae6d04-c886-4e89-aacc-57f7b4e04d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 b5ddb81f-09fc-4619-aded-4acfff3c77fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 5551811a-f27a-42a1-8203-df8f396ca1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 0c1c5225-d628-49c7-970c-43e612edd876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 0a8ed628-5546-4e8c-a6e5-66571c670bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 20372c76-5647-46dc-8ad8-61ef2f011ae6)");

unit.assert_eq16(16'h0472, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #923 b2fe40a9-d024-46ff-a334-3290a77f7ef9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 f874e9f5-cfa5-4960-9bd1-2b5a4eec6e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 2b9dab76-7f8e-482b-87d1-3b737f9b2826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 18c91890-f1d3-4f5f-8e69-62ff615199eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 7c72c6d0-b3ef-4fa2-804a-29a221fa1fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 9ae0d90f-3416-4e52-b01f-f8b8d5be3909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 52014523-73e3-486e-a2a3-d3cd3db4e0fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 17128813-c3ee-4751-95f1-2eebed6e1823)");

unit.assert_eq16(16'h2169, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #924 38f6ce3c-b382-4ffd-974f-a99ee428cdba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039D;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h0C29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 81921283-338f-433a-81a6-3bd6820e9349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 b03dcc5c-2b71-47ee-b239-6f8904acab64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 1299c39b-a47f-4eb6-8c85-645c582a4ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 03afd5d3-0ab9-4ee4-ae25-afa6f28a4eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 4bbed603-154b-49a0-a6f0-18d3979741cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 675ff3cf-7c85-441d-8fd4-686d490d74bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 9d96f2d3-70e3-4cb9-bf93-d38cc7cdd19e)");

unit.assert_eq16(16'h039E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #925 8fc11317-f627-4bd7-9e3b-7fd7465a1c03)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h0A69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 fde8be96-d354-46a4-9a1f-4ddad986c2da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 8ada001a-34c3-4e80-ac0d-6b369aedc0d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 be6ae3c9-43a1-45d3-98ac-02b4d8d511f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 34ee2869-102e-4d21-80cb-1d22c3f2b367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 22a8ddbd-7b57-42e2-8faf-38d6e97d68cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 a487f6c5-cb35-44d6-a067-80d900637f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 b519eac4-b44e-4cc0-9064-5e8436167d40)");

unit.assert_eq16(16'h039F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #926 fb346b51-6adc-4c4c-97c9-95e7046091fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039F;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'h011B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 0d3e5cad-ab12-45ac-8cce-c9fc06ea8f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 5287d941-682c-4d22-8d66-008c48aae663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 a9863131-febf-4a97-9206-3dc5c0f3c051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 89c56f94-cb1b-48be-bc6b-32ce47ac5236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 16804313-4297-4269-9472-879ee484e357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 7f3b129c-b698-471b-bfc9-4b9ffba66f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 be9678e8-666e-48af-a672-1449b4044d0b)");

unit.assert_eq16(16'h03A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #927 efbc7a0a-1b18-4dc8-b948-90bc87ee9cfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 5d908705-4092-46b6-bc34-35dc952dca8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 b3160768-4f20-4795-9fe5-32195933d16e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 e472b906-936b-4ad3-a32c-71e3c240b148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 c2b2c019-0983-410b-b7e4-0bf8d9c34a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 2c2d317a-8f66-49af-b608-ffa4cb853fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 fad7b8d4-e133-4d4d-9f77-ead5f57a6a05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 46b724bd-0592-4fa8-a248-28da1d78ed84)");

unit.assert_eq16(16'h03A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #928 7b19f44a-c93b-46f4-95e4-2b00f4d8a20b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h0519, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 f324d940-2fc9-4942-9d41-521ab343aa60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 4fb925dd-145a-446f-975e-efa10b18e604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 ad378e8a-719a-4ca8-a21a-6c3b34e3a6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 71d368b3-0a35-42df-a581-e85f5c997e75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 fbaa1ac6-0176-4f24-b223-a404e002a175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 97274fc5-275f-4797-91b0-18cb2d35b162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 a6e4b93c-8d1e-4d95-89c0-e84975d9f958)");

unit.assert_eq16(16'h8784, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #929 a949ecc9-6904-43a2-8ba3-62bc4efc2be0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0465;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h0467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 858accf6-0d85-40b6-bfb3-22b18bf1aa1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 a3770529-1015-4e01-895d-8fc2f7e99e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 c09dd363-7d30-43a7-9228-94e193fbc5b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 2fbe3e56-e179-4eba-b442-ac7d1a223791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 3ec36ec1-24d5-4e4e-af55-44f623a38d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 b0545ee0-eb20-47ec-aefe-0867a9f4fe6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 5511a505-0019-4385-be4d-588862801bcf)");

unit.assert_eq16(16'h23E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #930 90571d54-7411-4587-aaaf-43fffb019041)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0316;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'h0318, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 9a6172f4-d73b-4658-9de8-72f5a63ade83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 a6f88836-c7d6-470a-95ec-cbd5b1787411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 a34c71a5-88aa-4069-83f2-ea6a8cfe72c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 3918fb82-1b94-4ddd-8901-350b656dd7e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 73ac7ddd-4e08-42e6-b2b4-eb7fb7d1d4af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 76d1846d-455d-4fd6-a5ff-4da0d1c30d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 d59135d6-fc20-4d70-a982-47bb0acff525)");

unit.assert_eq16(16'h204A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #931 cc4f97e4-d0b3-49c0-b022-46c3fee8f8da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h009E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 3b6d6161-576b-4778-bf6a-90061de3d24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 79247b5c-3291-4878-b4c3-c9ca7bafe85e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 2c7dad4a-781d-412d-b53d-fb9cb1e3ab16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 1be2f56b-e2ef-40e1-8aa4-a3ba116d6d5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 9c7d1e8d-c61a-40d8-a704-f28d4702747b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 a3f42a6c-2ce9-451b-a6ca-44afd63c2067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 2292994d-1e83-4f53-ae4b-1baae3307256)");

unit.assert_eq16(16'h03A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #932 9c66154b-35da-4c21-99df-87a9fd1edd2a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'h0D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 21e4a8d9-58fd-494c-bde1-a859367c4bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 3c09043e-4b0f-4df3-80f0-c43ad0da2cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 5ddb716e-a149-45ac-9a3b-4f86713367f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 97838778-a01d-4e93-b6fd-bb30f884f788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 d0df6bd9-3d90-4020-a4bb-4e8ab6fa50d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 693acf93-5dac-40e9-ab0d-b059aee41de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 02a56e8d-0a98-45ab-803e-d174a1333480)");

unit.assert_eq16(16'h03A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #933 eb5f72e7-dde1-4a53-a6ba-d27a26791dfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h07D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 65602637-52c8-4af3-a2f9-2784f7af17ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 fbbe2e8f-8ff4-4898-897e-0353a807b417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 bb7a2458-4621-49ca-b891-382e940a9c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 a1463759-3ff9-45bd-8505-0aa5b05f1df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 2206470d-e829-444b-8653-e9b20ba6f907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 d6e1cbb4-761f-481d-a780-afa1583765d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 77cd8ea9-5a4e-4144-9506-e4c6c648ad05)");

unit.assert_eq16(16'h03A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #934 8c0959e0-0b93-4df0-84a2-dd0aaad1eb90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0066;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h0066, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 78c3a1bd-bd96-4cbd-a621-b0a754615e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 798670a6-6f18-4cb5-8c08-87c62ce5222e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 f7a78297-7376-4037-ab07-ebdb5d8433b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 7b9167fb-5e96-43a5-8587-ff4e9074057e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 0bac21f4-89bc-4a27-b096-1a533c669ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 1d649c6a-9a12-4ddc-9aac-00d142b67b6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 c36b98d1-c090-4bc3-b012-8a1a5623e7e1)");

unit.assert_eq16(16'h03A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #935 ac0e587d-7ec6-4e6c-a6f0-bc32a6cfef24)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h0CF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 6dd8abb6-0c06-4dea-acf7-61959a517dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 ce446d80-0395-4bdc-b6cb-610765814a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 5972af23-29cc-4441-9328-8012203039af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 86bc75fe-19d0-4791-ad6d-816e25b6b518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 66b7358f-e660-4ae6-b277-cb4ec53958f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 f3a95fd5-f5f2-4cda-aa3a-0003f6eac09c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 2a0eeb16-be3d-459c-91bd-70111d05f7cc)");

unit.assert_eq16(16'h62E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #936 1d981e0c-9962-42f6-be9f-a1221cfca141)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0971;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'h0971, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 29370d94-581f-4618-9a4c-5a17cca1f1d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 d0e10b09-1967-4c7f-a2d0-be144626b74f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 68da3935-093d-4ce4-8264-b861952613c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 7004055f-e203-4f3e-90aa-c65fc4dd8fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 2798c82c-8c7f-46af-ac34-f30aeef8b1bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 ed300c45-0afa-4c30-a264-206948d95661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 7d1689b8-da3f-48ea-8767-1d46469ee308)");

unit.assert_eq16(16'h03AA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #937 8fd36649-f521-4fc3-8c5f-2617b376a4d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h09FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 29b410e6-ceb6-4030-b679-873367fd5b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 dad8c3cc-47ae-4c40-afdc-ad81efe56ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 8960fa90-63f7-45f1-aa1f-52effe87b962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 15bc82c7-3933-4019-9d52-8ec6d499774e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 d60286d2-70fb-4fa1-bcb0-0227b1586313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 85aa8b8c-ba8c-4758-8174-3f92e0a5bd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 d82d76dd-c46c-4b92-b9d6-cc62d7306836)");

unit.assert_eq16(16'h03AB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #938 2818eabb-d84f-43e5-ac95-7136c83e9c8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h01BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 a22fada7-bd75-45ee-bf86-f93f8feda154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 b07025fa-2809-47d7-9128-9d4689d324ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 4ccd9f49-7c80-4cc1-a967-d936d296c96e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 6fb8b786-8aa3-46c6-a5f1-ddf62a76ac7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 d2a1dc19-6201-4eb6-bc38-06b43c089cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 292cf6ef-c3f7-4e80-8b52-2883fc30ff75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 ad762d8a-bad3-4192-be7e-565a37b43f7b)");

unit.assert_eq16(16'hEFBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #939 4e0b5772-59cf-4403-8c0f-497963a21d70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'h0D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 22a2373b-f69a-4a9d-92df-d704dbcb51f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 8b9699a8-55ae-47e6-abba-f566b45f4e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 353305f8-d4eb-4482-974a-9edbd20282e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 b5d495b3-a6ce-4401-8be6-cfbe2e26849a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 c21f5e15-8e68-4091-9d2d-5bd3938e8525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 fabddf3d-d392-4040-a23e-8086bb0acffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 9fe6063c-8f29-4c39-b025-99fe4a378ad2)");

unit.assert_eq16(16'h03AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #940 9c239eee-b6ce-4ebc-bdb2-ec467adabde5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0775;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h0775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 b257ea00-1af3-4a77-af59-d0b6120489fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 ade8891b-071f-4d34-839b-40b0abcdae0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 0b434321-1cf7-48dc-ab0e-201a6bec25e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 66fa0c3b-1fae-465d-a14e-d7533e4d272e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 58d36f3f-8b38-40d4-bdba-e38dd07b8ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 88191065-0595-4b9b-bc62-5e42e8e82e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 c2535a2b-1f49-461f-ae0f-6ffd4103f3da)");

unit.assert_eq16(16'h03AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #941 1620abb4-fddc-4db8-9c87-e3ae1630fbb0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h0A81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 018df765-90b6-48e6-bce1-f567e52b234b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 a2ee0027-a1e3-4207-9ea8-6e30a3f17a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 a7c39858-337c-47ab-ba42-ce7394c54d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 ff0c2e1e-0ab3-4bb2-be00-29418de0ad32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 e95df703-b3ff-4a67-bb49-853ed04cc41f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 8affaccb-60e1-4907-aea4-9caf21110de2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 a8dd2186-238f-413e-9a39-568151c61d98)");

unit.assert_eq16(16'h03AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #942 8c103342-6c5f-487c-b6b5-34af689daa79)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h0120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 a0f46197-b060-43ca-b6ef-a2d087399f6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 f452b643-c679-407d-8213-f0f270fb2a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 de04e21b-1e42-4ab6-a673-17253a755a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 4733c99d-e57d-4eae-b8fb-b01c24571469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 27757c53-6b97-4642-b4d2-3b74c7469a59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 bc1485e9-db4b-4c75-8270-bd37fd19de6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 ef7fedfc-9b54-4528-9925-58f0a1a843d0)");

unit.assert_eq16(16'hC683, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #943 6005363a-8ffa-4f0b-8f43-1fb1b2dccb01)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'h016D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 e92e44cc-63fb-48ab-b6ef-12c181096845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 45e2e467-8d54-4836-bc59-62d8d1707afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 39bc061b-d2d6-40f8-9091-2a106933ff97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 7b6f260e-9be8-4b2b-8fd4-6665ca964674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 96c05eea-b2cc-4cf0-b024-3497f51dd0f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 f519f7da-2f7b-4faf-ba5c-26e0761cc469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 1af41b57-ed8d-4f82-aca9-94ee1e34ea79)");

unit.assert_eq16(16'h6055, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #944 9e680b11-f79c-4c74-9558-b2d5b81f61a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h0AD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 239da94b-d8aa-4619-994b-d5e75f91a008)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 78364353-7c5c-461e-926f-5bbafa5f7732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 8713ea1a-a6a0-422e-a575-f17e21bfa226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 a6293b99-6cc1-4e71-b955-1a75d705ffd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 e8beeb07-6235-46a5-9780-9f21ca489689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 3d0f7644-1735-477d-aa27-6df4bba48d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 0056ef5b-22ef-4a84-81d4-d05e648e5160)");

unit.assert_eq16(16'h76FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #945 7078c9a7-3adb-4fc8-8c3d-cdbc952ccda3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h052B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 e973f89d-9334-4c5e-8f33-587eb264fe10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 83e8506d-f58d-4b29-b701-1284e6d093bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 3e3968ce-c8d6-4ea2-8634-9d33bbda9f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 373fa4f5-0c0c-42f0-a1b5-f7f55a2f6033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 3363ad40-f7a1-48d7-ab95-4157aff54faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 47175fa8-4c4c-4f86-ae2f-7533234fe288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 acc53968-df16-43a4-8ebc-c7969399eb02)");

unit.assert_eq16(16'h01BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #946 8cca3b1c-fd65-4fcd-8c1d-80be8a4afff1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'h0AC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 81c2b4f7-c6b1-444d-af14-ade7aaf4522f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 1c7ec058-0fea-4282-a232-e9c0943876f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 f43ffb09-a72a-420a-a6d9-ebd030b0314a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 cae1740a-e6b9-4746-8db8-e0ada4554052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 b37fe75d-e644-4adf-9763-36291509c735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 4300a0b5-1db0-4943-b44f-50337f08ed79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 5eea5b87-7655-437f-87ef-3254cc8313aa)");

unit.assert_eq16(16'hE935, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #947 1028147b-f9e7-433c-bbfe-99615ed07d77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 def9e602-31de-4923-a2da-43ff1f613424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 244e7530-c969-4c81-98ef-646173cd310c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 27eba90f-0caf-466c-b2fc-4a9280c29bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 f00fa174-5697-4954-9e02-1bb269ed44c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 9c9267e2-00b1-469b-89f1-ffa037001073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 e3b77c55-f068-4050-af86-2d0921e8c046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 2e6a9538-c42a-44be-adcc-ba7bb6f4ee55)");

unit.assert_eq16(16'h03B5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #948 7abdc689-9fe3-4b03-992f-88c597014147)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h0E15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 3a289842-90a7-4dca-ad9a-375ff14a3082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 c0489b24-1f94-45d8-9ccd-97c85c8770cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 4047b9f2-f3bc-4c10-9eff-341cb1436969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 34e8aee0-5b0b-48b7-9170-4f0e67c5b844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 5547ae80-746f-4de1-bc9a-f61e2c1ac15a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 7d65680a-3d63-4dd6-8a3f-60b4ecf1c423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 db5147ae-47a7-4b3c-bbed-ccf3b36b1897)");

unit.assert_eq16(16'hF429, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #949 0777f913-de55-43ba-828e-393e4841942e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h055A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h055A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 674b07de-980e-48b9-96ad-bf48a23e23e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 392b20d0-ed9e-4154-a047-c69a18b1d7cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 05a2e4c9-4cf0-4a7a-9792-f1832c81168b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 f6280b0e-fd75-4766-b27d-a09ef354c208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 3050fc39-a96a-4dee-beb8-29c6bc86f0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 eed5c8c0-aa6c-42cb-be2d-773e57d8da85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 0a34d24b-c6d0-4ea9-a306-40e657510a4a)");

unit.assert_eq16(16'h03B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #950 753de8f1-c50e-45ee-8197-8d1015a5fbf5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0972;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h0972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 c3ddc8c3-d3d3-4ee4-832c-819977084d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 e5be62da-5fb4-44c9-97f0-1c4f7fef62d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 a8820770-bf8b-4bcf-a675-4ff2de31c0c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 df1cfac8-4b1e-4cd5-b240-e88d06a32ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 c819b211-179d-44d4-b237-4a017662ec64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 ff1738e7-61e0-4c21-89cb-0b257069d707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 e372e6d4-a191-4924-9985-db1cf3ce43a7)");

unit.assert_eq16(16'h03B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #951 4490ea8d-5a1b-4b9a-b174-e16be7d113c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'h0CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 5a509e55-7cb9-4320-a9f8-7750d46b4316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 4a762b0e-0280-4ede-ba9d-a9015f0068a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 30996bfb-9e42-4aee-826f-e418630e649c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 2891eeb2-c4c3-459e-bf43-b256cb6db8b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 11fe19ba-e630-441e-8f84-5635129b3e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 8d1d55ea-fd8c-425c-b60c-4f01b6297da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 6acbcf9c-ff56-4dfb-9501-2acbd09d0097)");

unit.assert_eq16(16'h03B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #952 3a52b2c7-55b2-4092-a2a3-87d9fc4dc016)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'h0BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 7b0a4153-a172-4bf4-955d-885c995dade7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 5eb25c4f-2a4c-45bd-b892-e0a0ccf511be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 b5cb32a5-7144-4fae-bf03-b310992722b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 c552d55a-2572-4afa-865a-313d76da9c15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 e32fbe56-7fd4-41cf-82fa-9242f2caa80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 fed095b2-6b4b-4d30-adef-c6c1f18d3863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 0235f9e1-a5c4-49e6-a72b-41e63a293556)");

unit.assert_eq16(16'hAAD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #953 3a17bb42-cc05-4f90-bb3b-694f0a6e4721)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'h08B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 ae96a842-52d7-47e4-bd99-7c25fc79e2cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 6afe380b-c6c6-4a86-8328-c1c73273c1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 80ea20a0-a5a3-4d87-acc7-e01e2b3fd66d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 2afabb22-235b-40aa-bbb6-fd8fc1bbda9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 6107907d-e6f3-4d09-9835-db05c348a7a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 b70628d9-d555-4be8-a820-3a5a25a10db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 9714cad3-37a7-4054-af95-e1930fb758cb)");

unit.assert_eq16(16'h8EAF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #954 a773a339-b37e-4ca2-ab5b-1b91e2e16174)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 d31bfd2a-145c-4cdc-aff6-07bd01fa2212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 2544ef4f-fd3a-4dd9-91bf-289e8d6c9ea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 0f92e4da-d971-41d8-b4e3-191e10110853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 3f1d4e72-0dfb-4c86-add2-8f615b89b7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 f67314a6-af44-451f-a663-8ea49de3e480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 e02b0e4f-42c8-442a-a1e9-eaaf35923514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 ed4cd074-6a4a-46a5-99f8-014e77cdbd81)");

unit.assert_eq16(16'h03BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #955 593e2f85-194b-4eac-b635-46e5a1127935)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h09A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 e7648f03-a574-4a06-8cf4-fef2398251b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 3ad6f9f9-5249-46f6-81a1-e8d675e700c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 e4addeb0-3fc2-4d5d-b3be-ef6f5a33b227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 0b76fb73-130a-4df7-9c73-0328e1ab9e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 e08ee7f8-1190-4095-a724-fc053efab4c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 0ec67c8e-be2b-4e97-b70d-3e4471cd70aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 e7848a54-c909-451f-9b9e-a7c8f5c20d21)");

unit.assert_eq16(16'h5992, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #956 f81c463e-1011-4139-8113-127bafd04be0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'h02E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 55c90ed9-aa5b-476f-802c-433dea403acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 4fd6c9dd-7fd4-45be-8f0e-a9f9556a9bea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 82e6e66a-4057-4d3c-9705-425aa296a83a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 a8415d2b-2ae7-4ea9-a0d3-6c7e13b97dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 8550d208-29be-4fc9-9fa7-d8d40d697d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 0bf7c3c8-e6d3-4d69-9e85-b6909c799b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 f16996d4-0792-49be-91a0-cca86c2ff77f)");

unit.assert_eq16(16'hB00C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #957 d4d39941-f21b-4485-80da-f1dccf76060c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h011A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 02599515-1697-4a8c-9788-4e3442216482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 37fa4a72-a107-48bf-9ba6-46f436407f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 7649c378-121a-4bbe-9712-0c59ef006891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 c6560e1b-64dd-469b-9e5f-96ddacbe54de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 530cdc49-967d-4398-901f-d31e1a1a5093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 d53e60e8-6d26-40f6-9950-bb155124870b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 08a8d60a-73c5-4b81-bd7c-de9fe9da635e)");

unit.assert_eq16(16'h03BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #958 aa2cbba4-7846-4df6-be78-9e991187ac19)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0796;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h0796, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 880421af-5e1e-4d22-b01a-eb66b5ec6756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 fd0c558d-40e7-4ca3-920e-5805f10027e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 191bec5c-0a01-4351-8e2c-c472ce9c4eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 e38f29c1-ef90-410c-bca2-9c4fbb0523fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 53cac67c-d6bd-42c2-8266-d1dcdc7eb7ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 41425b8d-cae8-476a-a7b6-68ab0c8fb9fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 0798a01e-8745-4a6b-bb3c-ec63a577aa65)");

unit.assert_eq16(16'h03C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #959 6903516f-73cd-4d90-90a2-fbebf9f58e1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h07C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 30615e6d-1dcc-45dc-8782-35dcd69ca30e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 3932c28f-4296-48cd-8e3e-577641687d41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 a9dc0b6f-9102-4239-86a1-ed6676a10a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 c3906dc0-5acc-4bac-8513-4d5bb256d75d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 ddb06e16-7fac-4166-b639-35a45e86407c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 87ab0cf0-9ad2-4e29-b1e1-ebc70788aeea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 bc8dff38-0e11-42e8-9d73-cdd3a43ac575)");

unit.assert_eq16(16'h03C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #960 9d0508de-c64a-49d4-981f-f825c9575734)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h04E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 995ee980-9653-4de2-a78f-d2f79054f4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 6279d979-8f47-462f-aa51-1b6a5187318e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 aac96c8a-a7b4-4c28-ba4f-423e90c70fc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 7260bedf-d5c5-409a-9770-ec5d17c516c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 62ac0e1a-b21c-4c42-856b-36e972b95435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 f0425da3-e2be-46f2-bf75-2d6b651f4a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 4d2d3dc3-6b1f-48ae-a4cc-2705a1b461a2)");

unit.assert_eq16(16'h5977, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #961 cc9900f6-cb4d-49b5-b9a3-e08158b2ca25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h0E0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 4b5796df-2e20-4bab-8625-2e59e8c003f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 1983e668-f4de-4d39-8ecf-eb2b890a396b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 fe1e636e-4149-48d6-87cc-95d54ae44a9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 64b76b67-2146-47b8-950a-db7308e32e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 125bf176-4ed0-4ff0-8fd0-97d08d5549ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 46878d84-1cf2-431b-bde2-3f91d660d538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 49dcfaa9-6b03-4952-9650-19146ca1be57)");

unit.assert_eq16(16'h5F36, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #962 babf9fed-faeb-4503-b0f2-6edfde403800)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h09C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 2641a65a-0251-49be-bf40-3da139d12f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 67a7c25f-e9cc-4ffc-b8f2-81a14d0bd36e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 e868a5ae-ec5a-418a-83de-6320becf3189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 d0eb2fed-4c7b-43c4-9622-600fe9974cd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 edfff48c-8227-46f2-860c-2a08a6c9eeba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 7e6b13a7-0a39-4b57-b56b-963ec37090a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 0d71e999-0317-434a-aba1-382c69359f60)");

unit.assert_eq16(16'h03C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #963 374e2efd-f6ae-4c9d-be5f-b40a38714ec0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0982;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h0982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 6df9e05d-e934-4ed6-8a4a-3f4f82bddb8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 bc8adf5a-9c55-4df9-b04d-13e961fae006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 aca6d9f7-b6ae-49e7-bf35-4d075f597012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 a88fd58f-479b-4ded-a775-1158ba318ed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 a882df8e-a774-49a9-9a13-39fa072a71cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 7195d136-119f-4a29-99f4-3e890678e912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 5d819879-3e38-46f4-a649-8f0bd892c6c6)");

unit.assert_eq16(16'h03C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #964 e13ce770-87ff-4e95-839f-16d003753953)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h049E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 c1cde363-6316-4bf6-ae47-f43546acd57e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 52487196-51bc-4b81-8359-d8a34f012779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 74e160d0-4460-4374-a269-ae63b75cddf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 82f6732e-2bd8-4090-acc4-9bb5a4b392ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 90cbb712-6a4c-4784-b889-05ba36e01da7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 2f8e0b55-584f-4846-8581-9f38e6153a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 acacb41c-8358-4bcf-8d5f-f2669d75526e)");

unit.assert_eq16(16'h03C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #965 4359e672-3400-45ba-bf4f-56e1889c8f31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h015E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h015E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 f80d73ff-4d95-47e1-b5a2-16acef92cd4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 79bee4ab-59ed-488b-b0b7-f01b9cf7996d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 3ed771c8-bf9b-4a7e-a137-773ddcd4158f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 5d220dfe-a4da-4337-b768-133f800767d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 c31b646c-3f74-4aaa-8624-b6785191ac8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 ee335b44-5bc7-4b95-bbba-5b50dd02a37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 2203c480-5fc6-4fa1-b925-196f96dc6e20)");

unit.assert_eq16(16'h03C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #966 92e8e611-156a-4017-ab22-ce72da373604)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0929;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h092B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 7b907304-fad3-4b04-99cc-ce70b32ae42c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 28383407-6cf7-49ba-919a-6b5da3493f95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 d3779ecd-08a4-427f-8f76-35403fcbc6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 09d013dc-15cc-41f7-8bae-62bee83be87d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 5ed368d5-9899-4b12-8218-014881bd4712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 97dea252-27c8-4e0e-bddf-97df96be58ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 17e7194a-171b-403a-b666-622c5a91db74)");

unit.assert_eq16(16'hCD48, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #967 75f2b578-773d-4c41-be64-37f2ad983367)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h032C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h032E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 6f160a58-5539-4490-84da-280641ba9084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 f468eb05-fcb3-4e57-b712-67c58394f3c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 417a9fe7-8af1-4cfb-b982-0853c97b64d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 fbdd9f5c-8011-4bed-ab51-f33e15f06fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 3555d0ed-a143-4f29-b19c-3666861e0f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 69a646de-5594-466b-b7d9-a0a3b01a3fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 84062f54-f776-4502-a904-2c5d78c0a2b4)");

unit.assert_eq16(16'h71BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #968 6143c62f-b22e-4b66-b8b3-229a5d4f099a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h076A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h076A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 1aa5f256-2d82-40a9-976f-b0b1a1679bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 620ddcb1-0ec5-4155-b1db-4c423564f078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 2b95ed99-d3f4-425c-af13-3bd4a983df72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 473b473d-4d0f-400f-92ce-2822be6a8036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 1917c663-53c8-4db2-84bd-3d7fea21d125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 657918b4-40a3-4bfc-a5d5-b1b5233b7e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 1158fe18-2e8f-4b77-9dc0-0383e63fe0f6)");

unit.assert_eq16(16'h03CA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #969 e5c6fb9d-1c53-4b77-9fde-4af9e229a46f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h0A66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 0eb49f1f-ce52-4c0a-b27e-a3ec4a468a86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 8a4f2b4a-49a8-4c4a-9c94-f5c8a7aa7459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 221541b2-a019-4e4a-a2e1-b909182276a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 0ad5c994-5861-4c6a-a1b6-a5c4b98bfbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 56357a5c-f0f8-441d-bb46-bb58cdbeee5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 18704558-6fda-48fb-8e2e-7b0dcca95bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 971cc774-1dcb-471a-bb06-8af753bb1324)");

unit.assert_eq16(16'h03CB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #970 1928cd1d-efe3-459a-bdfc-1b6705598f71)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h08FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 5655f959-b94a-4866-b78d-89007633ec76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 24697c88-e09d-4603-8a01-7ce6dd9c0d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 1e363d72-a2b0-450e-abf6-affd9d00c5dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 2b3f8564-8865-4e1e-b707-031aa88a233c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 64de32a7-5b9d-4df5-a16c-7ebfc4efd27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 bd70b451-0259-4d33-9e67-862415e82e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 80d1e03a-ae90-4e35-94dd-57d9f6d0ceaa)");

unit.assert_eq16(16'hDC3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #971 785d3c70-12d5-42e5-b3c6-8157b8342485)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h049D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 fd38db33-1688-4563-883b-d05711e8a44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 f8705aec-d7ae-4fda-a8a6-17645efbdc6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 ba07cefb-5692-40d3-9a91-42b7997ee209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 6fb8625d-a16e-44a8-bc59-c6054976db5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 1c5b95e0-fd2a-4e5c-a573-62690f0e6187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 359dc89e-006a-4811-add9-e58184c46e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 dc68a615-c1e1-4443-8b71-90c9cf6bd1de)");

unit.assert_eq16(16'h03CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #972 e13a66e7-51c0-4a05-9328-7a5f17cee44d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0200;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h0200, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 3ed2ec1e-b337-4a0b-b867-ed324f93de12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 c81efa37-3e31-422a-904d-d638837bb410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 ab0f8db7-d0f1-48e6-956b-d7bb3e5ffa5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 8b32ff48-1c76-498e-9087-b9b7817c44da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 2062f6a8-2544-452f-a4fb-be81e9ec4ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 05446cc1-ac19-433d-bd95-a45b7533ef6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 e284b8ad-d0e3-4b90-a0b7-5f864ceda7f8)");

unit.assert_eq16(16'h03CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #973 68eecb79-d4ab-4074-8aec-349f3025097b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h07ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 8da35e72-e6ba-421f-ab2e-d717896c5eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 546951a9-0241-4d67-b7b9-8bbd4f003762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 489a8236-6d0e-46e0-b2cd-ab7a54b76f9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 be8834e3-5fad-418b-a69b-2dd971ca2192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 47c0b540-19a8-44cb-a605-36ba3fc5c0da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 813b8913-a2c9-470c-91cb-789f0b54d038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 fab31442-249e-406b-a85e-85ef4e6b8677)");

unit.assert_eq16(16'hEE92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #974 65c7cf96-e799-4edc-9fcd-a2cf744f949b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0249;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h0249, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 dc7f4e9d-27b0-40b9-b6db-e045b1c2de08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 ef61606e-6507-4c9e-9bec-13c0d8126641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 67fa334f-ef43-481a-a818-ac4ff3e5d444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 ee1ea65e-32c5-4a97-bebf-77be3231fdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 270f9480-a26a-4118-8eba-aa1504148c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 eb54d6a3-4a4b-44a7-9bfa-b3a555ce26fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 fcad7817-a943-4d63-9e44-27dbee4dafdf)");

unit.assert_eq16(16'h03D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #975 801abdb6-05b6-4d83-b72a-133510a33f4c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h0BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 e466edb8-a1fe-44d9-a3e9-0717b18fc07f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 46c09b44-ec79-41dd-8051-d9a11058c8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 06a76f10-406d-432f-9917-dbf957bde3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 619ba9b3-aed1-4d82-b9ef-ef41ea281808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 541f4e82-f850-48cb-a7ba-a51cf3387314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 1ddeb4b0-55aa-4652-ac28-3209bb8f711c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 ff79fb6e-16e9-4bcc-b0d6-41915519d798)");

unit.assert_eq16(16'h97CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #976 ad612ca1-9cb4-4a39-898c-a6bf052a4612)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h0CEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 c8b67f74-648b-4556-83f5-c503ae66555c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 3da1632d-6281-4b6a-b285-61aa20aaed27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 75673f1c-8e67-46e3-93d1-4e81cdedce40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 579d4a45-957a-44c1-b3fc-9e6a1c3b742c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 31ad009e-5c92-4070-81a0-af0452471a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 f582fb92-35ba-417e-ac10-219e5fbe2a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 9f50aed6-4184-4b31-92d0-408fbce0388b)");

unit.assert_eq16(16'h03D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #977 1495f406-94f8-4b5b-ae47-41193c3a1abc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 b158dfb3-dfad-485e-9969-40b3106b5c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 5c81b022-79fa-44f9-bb33-1845b36b99f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 8edae141-bbc7-478f-b6a9-2f0f31165ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 e514bd7e-cbf3-4b5d-9a3c-77c850b986e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 c43fc0db-5293-4b53-a1b0-0542f07fa598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 467d534a-f426-4d9c-9e56-232b3ba71e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 57dac91f-3f53-4077-a806-69f0ae0b4886)");

unit.assert_eq16(16'h03D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #978 abce741a-cf4f-4f49-8700-af2f76a55bfb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h08F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 56e71d08-89e1-4c4e-a4d6-9a42aa151f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 10575a73-1eb4-4f08-a9fd-3bd696bd4c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 717c6ab0-8522-4808-8c3b-999e08600b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 22678eb1-7932-4bbb-a54c-7deab7e4d949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 b50b8724-401f-4b8f-bb35-98d1b1946986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 0b9c988f-4ce0-4227-95a9-c3206ee21677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 201e1de6-7588-476f-91a9-2a98dea1bbfc)");

unit.assert_eq16(16'h8342, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #979 e1e6a52b-0f57-4f5a-aff4-26727bf1d2b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0840;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h0840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 ca37bd38-f4b3-4f8d-beda-7c8989f39f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 f4b93cb0-c150-4b9e-9682-5f5ec163feaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 3bf86aff-5f9e-4aaf-9fb6-bc65289104f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 1c9eabe1-51ae-41e1-83dc-79358dd9f992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 2c0177f7-a7f6-4e3b-ac22-b361dc8ebcb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 143799d4-3c46-4b77-ad30-164b21708d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 201c7164-aa42-4d74-8928-4762e9cf060e)");

unit.assert_eq16(16'h03D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #980 5c65144f-1787-41b2-aa05-fc615a60289d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h041D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h041F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 6dbf4f91-4c43-4b9a-90d8-1743e0e955d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 d06c54fc-7caa-451f-b769-11b585fc0795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 4fa3fa20-0ca4-4628-bb75-7347a7cbf73f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 5b33cdb3-bb69-4245-8343-192769f458a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 b004efd9-4cb7-4c7a-92b2-572b700d8789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 b2fce180-6089-4fa6-859e-d55fcfec0bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 92eeaf26-a12d-4582-bef1-9418a801d4b9)");

unit.assert_eq16(16'h9977, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #981 9274c697-8eb3-4ed3-9ed9-9e69dabdf5a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h0AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 67363251-15f4-492f-81cb-aef5a3d47d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 ef2ef474-47d9-43e3-9370-32e5672d240d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 7d5ef9cd-17d0-44e9-847b-1702548fd535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 56f60871-56b2-453b-b53c-3dd7f45c6193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 a773b17c-c8e1-4e00-bfdd-70dfa5b6ef77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 75d6b836-0714-4bea-973c-92aa9cda63e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 2077c9ec-502a-4bd4-905f-71c0e095d3b5)");

unit.assert_eq16(16'h03D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #982 d1cfe479-9d27-4e7d-9a6a-7585c794ac78)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0145;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h0145, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 0f9bc5d4-0781-40a7-8a89-a0961171d972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 a188ffcd-416c-4669-ad07-0c49e16dcf25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 b257af22-cf5c-40a6-83a4-65fc767f5bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 d495360b-01c7-48d9-8e54-11dbfe35b2cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 0a60fe9c-ccba-4c67-b43e-5897854b7251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 3f4053c6-8f82-4a05-9a30-7a0e1d151f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 dc354843-bdf9-49cc-9a52-21e4c8293d87)");

unit.assert_eq16(16'h03D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #983 40409e5d-e150-4393-9ac1-ccd70c1c47f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0419;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h0419, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 1cbf0dfc-176f-4381-aa12-f6bf07205468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 cd0fa0c9-c99c-4098-80b3-db384ce2598c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 a01d328b-08c1-4495-95cf-fbb6a9f5813d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 bc6a4640-bb79-4297-803a-32e4e7afaf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 844d3bfa-958f-4190-9d10-a938b25c28b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 bd6a0635-1f80-4325-8313-4a0bc59f1eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 0feddb87-28c9-4ccb-9eb4-4bf0360e4606)");

unit.assert_eq16(16'h03D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #984 a99ec264-0472-425e-b3d4-b950373c0d50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0263;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h0263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 5157642c-5da6-4380-9784-1b823a01b1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 842ec20d-aa45-4b22-9a07-deaee630003a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 48348b42-b6da-4655-b04f-efbf4ec4569a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 3bea3762-8c38-47f2-9922-0197c9c000df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 a4b8941c-a5b7-42d6-9b91-31cde7b38da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 c7322f43-13b1-4fb5-ac35-d1e469c9b13b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 ca7ec576-a967-4389-b33b-3171ac284574)");

unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #985 e6813335-3fb1-4334-9914-092c6151ca83)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h04EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 a6560646-d5c7-4efb-bb04-dc15de4b4b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 9272e147-0ffe-41cd-a821-b109e20ff0a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 65aa56f7-5f91-428b-aaf1-fa2e81bdcbba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 f92bcb55-7d49-4564-bb55-a1f9ea9908a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 b2185807-92aa-4cab-ad1f-f68e7ac56ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 44f1acb5-6a1a-405c-8555-8e7edf4d82f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 2b3e591c-9e26-4a92-86a9-43544d48d9f7)");

unit.assert_eq16(16'h03DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #986 28b6918b-7849-4006-8155-93df76220d31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0389;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h038B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 e1cd1a96-6aa7-476f-9891-040d294dc017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 04fb2ee7-9e4d-4f18-a5ea-de899d252fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 4c7276d1-3e35-4138-b357-ef76e993ecc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 92865afb-cef4-45f6-84d6-d90c1b166711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 7633742c-af8f-4b61-8a9c-737578f40b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 27cfa28d-68d9-4dbf-9948-c8cc17d6cc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 1ee67877-27d1-41d0-a3e8-d7359d2a64e6)");

unit.assert_eq16(16'h194D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #987 34745c9f-921a-47df-bdb5-c77c0aa84210)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h0D13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 855477d2-fe2d-41b1-989a-953dca00cce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 8fde63fe-b636-41ee-9522-e62be6189f9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 0f50e2c7-575b-4e28-9272-c874c1326069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 47a501e5-2231-43f8-babe-01a7cf3d05c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 ff9fc8ef-b872-42ba-98fd-8b9b693ed00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 8a239ab4-962a-407f-8545-28896130cd40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 0f77b839-8617-44d2-b3ea-bcee5acb384c)");

unit.assert_eq16(16'h14F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #988 5ba968cc-671c-4ebc-934c-5d1c49de2641)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h07F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 dcb9bcd1-1823-4736-97e1-17f50b9f7a76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 6a21e82a-6b9a-485a-9566-fcb21eaf8de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 de02f3c8-6265-4c58-95f0-1d4bea2f65c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 9113e3cd-668c-4ba4-b862-7a2ecaec0efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 8bd14e67-bc7f-4442-a661-fd2a6f727d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 2018448e-cc98-4833-abf7-f79765cc3c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 6eb5eb9f-92b0-4b89-a5f8-4ee735554809)");

unit.assert_eq16(16'h145F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #989 e6255324-144c-4375-a055-060113764247)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h0C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 a57149f5-7fc5-4a56-8150-51789d75e395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 fb2b228f-8fae-4997-b466-6b680071766b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 0bb7eef0-83bc-48f7-b212-05377c1a6098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 f46dd69b-a15c-477a-9824-d87fabd41ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 bd5f6634-ad90-4189-a1ff-65919467ddf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 ec777999-0431-4bda-8bb1-7e27c8e5271b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 367db9d4-7c0f-4017-b4e5-d2643b2655ea)");

unit.assert_eq16(16'h03DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #990 6a954ca3-bd49-456d-bda7-c4c809595796)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h060C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h060E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 be198981-d578-48d7-a0bf-efe5957f4b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 52848cfd-6fe2-4223-ae30-67a1869a4b66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 f51f4e61-8ce4-41c0-9a13-5bdbd399275b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 f8c3adc3-82d4-4b4f-98a2-b8fd2b30c91c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 80d2e9af-0bfd-4268-bdcf-ad014f574b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 8697b8cb-032a-4fda-b433-0dc1e6cf093e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 4a720947-5e02-4b7e-9d84-0b5395327e9e)");

unit.assert_eq16(16'hAE05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #991 53722ea9-3b0b-43f3-a8a1-c84d07490e35)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h05AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 1b6a7bfa-e20d-4350-8e13-dfce5e1c2a15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 4982755e-fde0-4935-bb39-4038bd02bb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 33f18b26-2d1e-41ec-b283-7b24c3b4d0dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 2a236807-00a5-4cf0-a4cc-ccccd8c4d0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 3807fae2-a0cb-4697-91f7-f129229a5af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 416974a1-1296-4f4d-8b66-e05026ec3742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 0b3a850f-dae6-4db7-b546-28881816db7d)");

unit.assert_eq16(16'h03E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #992 c2f51550-dc62-47f7-98aa-5c96b2d7bd43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h0BE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 0c5f464a-35a3-4bd1-9bf0-f8a0e21dd339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 427f403d-2080-42ea-8800-58729f648dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 305de706-f1de-4c10-8264-2e04496e5556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 7a645006-743d-4c38-a807-fc509e515271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 4b6aefba-f85b-4489-9d7f-e8cd664c9c8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 1d3f4c48-cfe9-42c4-a473-d786dd2bf82d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 3fbad4b2-70f2-43b7-8ab0-b91fb9221dc3)");

unit.assert_eq16(16'h03E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #993 0b62f245-da03-44a9-a2dc-f338e59deda0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h0E4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 9613b248-20f6-430d-9292-db31e8fb2db4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 32c0c1d1-f6e9-4c64-9419-8d73359463aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 6b85c2ec-ba93-47d1-bf77-9e82846c95e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 06812f3e-a686-46d9-9abc-79c85feffe2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 82a39b6c-939b-40e5-ad9b-b2bb5b24ae49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 0d2703f0-4bce-4184-b337-2d02f35defd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 076c8ee8-36b0-4d9b-9b56-6b840c0b8506)");

unit.assert_eq16(16'h6680, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #994 1be8b5c0-e529-4db3-b03c-aa1ed2847df7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h0603, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 d5e92aaa-6b2d-4897-9260-c90c6bf114df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 ffda3835-27eb-49ed-afd5-0ad22ebed1e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 7aec3f48-15b8-4a60-b640-09ba6194fc29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 0e9b8b57-6608-4a66-9b65-72d198cb1ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 8010dff6-b329-411a-af69-93d91c8deade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 22aa23f9-332f-4474-bb08-4ea5120f74f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 d6d7b062-38c5-436e-ac19-187bb43a8d7c)");

unit.assert_eq16(16'h3926, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #995 10644d8c-e5f0-4d34-aa6e-e3cdfb348bd2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0617;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h0619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 73f03911-680d-4f88-955e-105f07cb5ff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 ce1d0d19-c943-4535-abd6-18ff351e54e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 1beb085b-79ee-4943-896c-9170e11274b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 9dfe5335-711a-4a80-9a97-d5b2376ef92e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 df3a3ced-6953-40cc-a6bd-ffa60b9fe36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 95974823-4785-42cf-83cc-4584c0db8845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 d6707d6e-065e-4d00-87b6-e7a603b76912)");

unit.assert_eq16(16'hE24E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #996 287f08ca-0c1c-4cf6-9eeb-5a7361529d89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h03FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 bb0a6293-d37d-4676-b93e-fb53205c6053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 3848ea77-8aa4-47be-97ee-7849df71099a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 67bb9616-e669-4861-b0d1-b4af6899ecad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 29297484-f598-43e7-b0a1-59ed059a10c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 4ea47d3a-27cd-4181-b82c-5e9901afb545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 f16a032d-39af-4029-ae40-bc3a6eaa0d16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 26a1fe1c-248c-4bea-9d0d-c2eb8d87a920)");

unit.assert_eq16(16'h03E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #997 41147c17-7088-4aa4-b122-a0242d18fcf2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h02FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 ab6a41c1-f0ad-4da7-8d48-7d0511aa1376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 b212216f-b020-40f8-9d68-7681127f847d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 ec262a10-3fd8-44dc-a42e-d7acbe7b2890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 0faff40e-22a1-4dfd-81a9-12a520a2dd3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 6895ed84-9894-40ef-94b6-7d4af547e224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 d5c4c7d2-9e27-4800-ad2d-063658323a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 50281f2c-4c6b-41d0-911f-49d62b6a7fbe)");

unit.assert_eq16(16'h03E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #998 9ce134f4-fcc8-407d-915f-7dc02bdf43e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h00A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 42ca01b2-6198-4327-a615-1ca2fdc78e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 ddfbaf70-bbd0-4e11-bf03-878fd507eed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 1c81fe55-fb00-4353-8c6e-084992f66e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 e57838fb-a036-4676-95af-170cb9dca0fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 63a3907f-98dd-487f-87e0-83c6a21d56cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 fa8cc8de-e10e-4dd6-b99f-26a4261ec884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 b689063f-03b8-4a96-b055-9c1860bbd132)");

unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #999 0b1f72c6-dc02-46bc-8c97-60bb6deaa208)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h025B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h025B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 65a63655-5369-4832-97de-6aa6c1ebf300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 17f8a44d-d95d-4228-9231-6dd5cd6bc852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 b25635cc-4e25-4346-b69a-b60204a4b534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 4b696109-5b1f-4d8d-b3bb-ca09ed68fc29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 a1c18dfe-f341-4642-87f7-0874ef59bbb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 b53bc696-eed9-4f2f-b1b6-54705c997eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 64fc26df-a982-4832-90bb-62aa96f4509e)");

unit.assert_eq16(16'h03E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1000 780dc160-689e-4443-9d28-805e03ea5976)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h0D04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 8b188229-c885-44c9-8c85-c668ffe395d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 6354603b-2c7e-4d80-acae-480cafd27410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 513e0512-3532-4e6f-9a1e-b69bcbd3508b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 d08746b7-e069-4d1c-8a05-c975678f1094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 e9e77ce2-e59d-42e9-b393-d734ca63f721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 e387f09e-2d5a-458f-b9ba-52c2a99d1003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 3059bc93-85f3-40da-9c32-fd6122100a45)");

unit.assert_eq16(16'h5E64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1001 6675d769-3e9e-4f15-bb5f-62d1ad176c46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h017F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h0181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 c5d857a3-80d7-405b-af06-9d5e626dfe04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 065af5d7-578a-4f82-86a0-a0a49e6ae3dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 d3e92ab8-343e-41a4-90bc-ac0b6aaa4fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 993f0be7-bf6e-4a95-a160-7c8aa956474a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 67f82e69-05ef-4493-aee4-ddeebbe31afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 40be3798-b838-421e-8d76-d92870db93ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 9e1c8040-327e-44be-a6ad-f7568baac9ea)");

unit.assert_eq16(16'hD3DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1002 9a35ff17-9134-461e-adae-05f0da19c331)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0916;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h0916, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 e382419c-46d1-472e-940c-aa9839703971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 27d92d33-2296-4b8f-b62e-3cc8895b9047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 b2baacd0-662a-4df5-847b-9d33ed17a22c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 621275c1-d604-4915-a2d4-75a712811c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 56faeb20-3e4d-4cec-82b0-273a49756b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 339bcef6-b7e9-46c0-8976-0580201e8777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 709e2568-8d9a-4e36-a699-59dc1a74f038)");

unit.assert_eq16(16'h03EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1003 bca69c08-9807-4353-9ddb-af090b851be9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h013A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 5a570bf9-33ec-48bf-928f-6529ed494723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 26f7a2c0-b4f4-4f23-9489-0ad741b390e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 7ea36450-2fc8-4931-a3d8-a92aff37a0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 60c72fb3-5625-4b45-8fce-07fa1ab26981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 ed42feba-7c20-4ce1-9f23-55799126205d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 d618b19a-acac-4224-88d6-e8626c7db55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 0d54a3ec-dbdb-48c8-907d-a4a0a9471644)");

unit.assert_eq16(16'h03ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1004 84121be4-f796-4e50-aa53-13260735b6db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03ED;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h08A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 196a78c2-04a1-457c-b478-b235bade2556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 9f17cea8-5953-4ec6-9860-41b242c8e79f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 87cbd769-8305-43cb-a8dd-4adafff348db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 11c050a9-48eb-46dc-9386-e293f022fbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 be890dc6-ca07-4dfe-b74f-10b5eb5275e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 0f4c4342-4ed3-4cfa-962c-154517b05971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 5395a3e7-d7ca-42cf-aad3-de80c48e4653)");

unit.assert_eq16(16'h03EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1005 1e391954-aaf0-4aaa-ae10-97e551d4c665)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h0FD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 f9e68035-b4dc-431f-95e3-671bd5b99101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 eb1e4ecb-4057-4dce-9f50-a53c150c8ab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 1249d370-1e56-4d91-ae90-4f9e2e1a6c03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 e448b5eb-8862-4c6d-a16c-60b8b6527e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 78272588-1159-4e1d-a2db-eb860829f4ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 43b6a404-ce91-4df4-994c-11a709d8878a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 ad705338-38b6-464f-9678-cdb7b6614005)");

unit.assert_eq16(16'h03EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1006 32ad656c-1bb6-40d5-89ef-06aa7c243f09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h0E89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 00196b0c-fe45-4671-953f-16f573a75878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 ad182d63-010b-4ac4-9fb6-a481dbd12174)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 2a9b4b66-2f07-433f-b7b0-5f23b226a843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 243e0c3b-0fca-4a26-881a-795126a895bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 c3c42e3b-cc3e-4dcd-88c3-6cb8ddd40db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 4749c16e-db40-4e10-865a-008d1e17d02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 b7a2eebd-75d7-4293-8aab-3e827358b4bf)");

unit.assert_eq16(16'h03F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1007 81ba6624-6077-4943-ad6b-b30a4507f6e3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h07FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 ba3840ef-8332-46fa-b52e-b298f79e4bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 fdb11d05-b152-46a5-83b2-a1d91ec35ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 b43e175d-d50a-42f0-bf82-c634ff41fc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 69523ea1-48cf-474e-8f7f-2400509b4bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 10a868e1-8af1-4fac-8142-97da3d4342d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 16e4c143-6d46-4f56-8e5c-6d3381b4026d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 ab2792fc-b10e-4461-9051-e0fc3c536c3b)");

unit.assert_eq16(16'hD5FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1008 07baeeb8-da96-477f-994f-5b64191eb880)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F1;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h0F78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 731503cf-a46b-4945-ad35-b5c88d7a2809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 cbe25804-d6d0-4f52-b519-ffb187b5071c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 55339316-49fc-4318-b334-ca650ccf7eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 a5254cca-7f71-4d50-817e-215521a9d921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 c460e826-6373-4e92-8467-fbc7797ee73b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 ed03a51d-e4a0-4930-9ad1-6324f314552e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 7849dda9-d146-418e-b748-206d91747c83)");

unit.assert_eq16(16'h1CAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1009 20830757-a328-4117-852b-43a7a76096a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h0872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 2cb337b1-f24f-407c-88da-46dceae1987f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 5e030161-c339-4d9a-bcb7-7d0ab88cd166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 2ed29bd2-a393-4480-92ed-8bad00225a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 f0fd9fdd-dc68-4cab-91a5-7e4a8512fdb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 eafb8b49-dfe4-4543-abbc-b918a77911ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 db44bef5-5cd2-4c44-87e7-513a4837502f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 e02073ff-cf7c-4750-b2ec-3ec76bc48767)");

unit.assert_eq16(16'h52CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1010 48f942f4-7335-4ca7-a2c2-cb3b33314fea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F3;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h0DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 fcc7395a-1607-4d79-a873-b5a0b989ff53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 e288ce2a-78c0-4760-8862-a3264ffe030a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 921ebbb6-d112-41ad-bcf5-876186f17ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 3cbfef36-27cd-4034-89dc-fbeb9182e95b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 814eb601-5164-44bd-a1aa-4800c0ae42d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 8fbe90a9-1abb-48b1-9f2c-26db0fb8c9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 0eacf1a2-a35a-4588-afe8-8cdc7878b783)");

unit.assert_eq16(16'h0D7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1011 bc1349ee-4efb-4cdb-9fc4-abcbbebc0871)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h0EDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 1340a9f2-fbb9-4a5f-8bc7-ac79a819eb48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 2f43ba47-6e8b-4f18-a70b-465dc32f96a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 aa7bcf1f-b0e8-4a8b-8b6c-903a7387dff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 cf2faae4-c224-4c3d-877e-e994cb90c0c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 fa4a8c0e-31a5-4d4a-82c1-c24d318352ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 2c4d8a87-37ae-44e5-a15d-d17d92952cd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 6461ef2e-0a1c-4f0d-8ff7-a1944893427c)");

unit.assert_eq16(16'hBB48, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1012 485e054c-750a-4034-914e-c0a6b4cf8cbc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F5;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h0E04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 fa9174ba-0566-49a9-8da8-b03177b93d9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 65ecb048-16e7-420a-bbc2-363598c482f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 9f04ccaa-44ac-46ee-bb04-bc67b2f98433)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 a32820c4-7019-42a4-a7db-5784fb6ad5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 4f9389f6-99cc-4b2c-a611-62b2e36bdcd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 406e5cee-1ba5-454a-9ee3-f302cf5988b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 e94bb76c-4b46-4cfe-83fb-ac9c7fe2ddd2)");

unit.assert_eq16(16'h4C4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1013 98f8c06a-0817-4841-904c-ee9123d4aa87)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h06EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 2a41b257-6dca-450b-9620-9bf772dd7776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 8b35c40b-96ec-4e36-9d88-25650263bd30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 046722f0-564d-4da8-8e67-1fafa0cf0a44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 cf47a4ab-68d1-4c52-95b6-db3b72c6f4f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 7cdf236c-3b36-4740-80f3-f8c06ea5e095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 91ad1937-1a47-475f-8e69-3952186a3951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 7de57cd8-9de6-4d34-8201-79b23d6525b0)");

unit.assert_eq16(16'h03F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1014 48a6e622-0965-49f7-908c-8a77912cc1da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F7;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h04AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 da58c224-b488-4bfc-8cdd-3367dd3fc9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 a153d871-5c81-42d9-b90a-f4a6632085cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 78457248-67d4-4cdc-bdbf-133525ef7ffb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 9553655f-886a-431c-a355-8440c4564bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 258958e9-8b91-4afc-9a5c-db16c6f7100d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 42acd012-a3e3-439e-bc75-ed193422263a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 a7f9130a-b876-4789-944a-e0000271de77)");

unit.assert_eq16(16'h03F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1015 63d24d18-fcbe-4f49-9c21-e2cb9d73cba4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0705;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h0707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 d6054596-adcf-4d00-8934-f78cfb86f039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 a1f55f40-a66c-4f23-ba55-dc1057adc41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 ba14cf36-3442-4bea-a7f0-93a49d43d62c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 e51117be-cefb-4433-9752-9cf4fade0e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 a2e9ac94-4116-49e1-af45-d5fbc532a67c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 6ce445cb-d839-45d3-9641-2530373c6ce5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 acd5a251-e7c9-4660-ab75-8667c25d91a4)");

unit.assert_eq16(16'hAC4C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1016 59bb28e3-46c5-4575-a781-9ffff2dbd7b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F9;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h0A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 d14fe42d-78d0-4bf7-9b3c-45087214fe65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 ea5595eb-7446-42d2-be6a-aed0aea1806f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 0d869f65-f3c9-4ea4-9e1d-69e0eca425d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 23ec0115-d19a-43b1-ba02-88814ca46327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 feebb9d8-a3e0-4e08-bee3-bb0cc2d68e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 aec55be4-4b97-451f-bd19-3332b5cf7508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 5e6ff151-82ad-4867-844d-4ed213da623c)");

unit.assert_eq16(16'h1B28, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1017 b656c15c-2f79-4f64-aa4b-e6a6f749f9fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h0B59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 178bbd80-7c36-46fc-853d-6430b1657748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 e8455b04-f9c6-47f5-9551-1544d9bc3e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 8c7c007f-e746-4f70-839a-ac2de471bcea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 da23f9b8-08da-4909-bbbc-1d66e3007c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 a874e3e9-6677-4758-8ee4-25879844f243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 4c6a3eb0-74d1-4ec2-aa90-f72119e24cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 647715e2-45cf-4360-b853-bcd3d3899c81)");

unit.assert_eq16(16'h03FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1018 1ad1339a-b916-4e5c-9f3b-08c2e54a69f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FB;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0242;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h0244, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 99a13578-1c80-4cf6-b624-c8a5103584cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 2cbe278e-a013-480e-bff0-0affc912d1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 011cb4a4-a732-413b-98d1-203b7283e960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 b0fcf537-d674-41d6-a904-4f3eb1039aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 0e346464-9901-4684-a23e-ddcf8c364d69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 bfbb555f-06f4-4e01-84b1-c0179407e2f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 0594fe01-d88d-45f4-a4d5-db9341813ff3)");

unit.assert_eq16(16'h2B94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1019 ba13bb85-7cf7-4bca-bbcb-855b1bb447bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h01D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 9c9fe351-d160-4f5a-895b-6e9939cc8da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 b7d1b321-6cef-435e-8845-870a49a516cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 14cec28c-7fb5-48aa-b441-5448e7b398d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 cbb09356-157a-4ae2-b740-4cffb8c85973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 39c7a072-9021-42f2-a787-1d90706820c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 98a3e989-abcb-4da0-9ae7-d274c1f5b513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 aa0f2094-93bb-46be-a0ad-e67f8a514bf3)");

unit.assert_eq16(16'h03FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1020 b39c6476-d95a-43f5-8c59-e1f7f37029e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FD;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h0595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 6e26b50a-4ffa-4897-ac75-4ef566599594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 ac7cf58c-e54c-4e4b-9057-a7927ee3f480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 686e6b28-b4e2-4ce6-8708-8a8a894c773e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 06c2391d-c0b3-44b6-9306-9de850ceac98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 b3208c4b-797f-4335-b81c-8767530da01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 b275b9cd-332f-46bb-9db5-874b0801dfbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 61b5410f-1c8c-44b1-a1e6-55b36fb9128a)");

unit.assert_eq16(16'hC682, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1021 4bc99ad6-a4e1-4172-858d-51ff07dd8635)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0536;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h0538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 dd9287e6-67eb-470c-863f-c493ff13bb12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 93ff23fb-ec4c-4e7c-bf03-550cf1a4cd20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 289cc09c-dad2-45fa-96cf-016a75a4507d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 af371631-1a34-46f2-aaa3-4e950a9992e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 71eab391-3278-4c5a-8c7b-ca8c0ddcac13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 087229f9-2492-4245-9031-c0b70fcbb004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 ada7b8b3-7b06-4f00-8507-e2a68dd3c55d)");

unit.assert_eq16(16'h6C21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1022 3dd9b744-2737-4941-85a1-70c11efeb43e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FF;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h09FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 74997c6f-829f-4380-bcd0-a936aa28ec5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 c3030086-9c7a-4ed1-ad13-a4375a91f147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 e0e80a60-7af2-4584-8daf-a835f42b1dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 eea8c25d-cbe2-4f07-9684-30e529ebcfc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 790292c9-1a9b-45c5-bc56-3958da7a3c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 072defed-f108-4b84-9a54-7111eb54c459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 86fc2a39-32c7-4a66-b892-80c356f216a8)");

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1023 6a2f26a6-071e-49a2-99f7-dfe1c2b05b07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0400;

#(CLKPERIOD / 4);

unit.finish("callretcc ('RET cc')");
