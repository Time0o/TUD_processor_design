unit.start("ld8rhl ('LD r,(HL)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h53C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0863;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #0 97f5034e-a6a0-4064-a4a0-28cd2f6cc738)");
unit.assert_eq16(16'hF7C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #0 1c23a290-d20f-429c-96f3-ae96ea9699ea)");
unit.assert_eq16(16'h0863, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #0 e9100e4c-9e53-4517-b2fa-44054887cc80)");
unit.assert_eq16(16'h03D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #0 a77c18b5-7672-4878-bb99-cb2bfe9a61e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 72fe2a40-21f0-448a-a887-565271fe41f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 26ee6e7a-250b-4f1e-a3a4-c4bef743ecd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 85766970-4e88-4b13-99a5-b56a82695e1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 f23ded54-21d8-4827-b073-01b93e88bedd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 60fb483d-f3dc-4806-8d9b-34f1abd1e753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 40b220cc-f915-47a9-b8eb-bfc0f0731eeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7A70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1 e9b39180-7afd-45fe-a116-3f21eb7725fd)");
unit.assert_eq16(16'h239B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1 1cfdc352-61e8-442e-a123-c133c724c842)");
unit.assert_eq16(16'h7A70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1 ed4a9123-b3b2-43ee-bf93-7d162f1acec0)");
unit.assert_eq16(16'h05C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1 b2c004b8-b653-4ccb-967e-66778cc214b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 06ea553f-6a9a-4b8a-94d1-b48d89e4c0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 5cb2d800-16f2-4e85-92d1-f9657008a506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 b51793c9-8031-4cfd-87a7-881d91ce2412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 9794eaa0-1c1f-4c2d-8ec4-6974540e1c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 53c7ce2e-1eb0-4866-83ae-49e1633b4809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 c6ad5b1c-6f91-4448-8048-0639efccb33f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h932E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9D60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #2 5fc14ef2-78e1-4963-b7d7-9c465c758b61)");
unit.assert_eq16(16'h632E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #2 60f1c751-3ef7-4801-a0a1-d283e1797bdd)");
unit.assert_eq16(16'h9D60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #2 94282c52-fe93-40af-a99b-c09fc3035dbb)");
unit.assert_eq16(16'h0C16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #2 170bec6e-75f6-4a7c-b173-91036f6dcd93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 7d3cd639-f9fc-4b95-8687-bae37248b403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 8af7fdbb-fc8b-4e6b-b4bb-18e0340dd1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 04f6d80e-784d-4dea-9d8c-7651ccc3021f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 537b00bf-3f58-4680-9295-3a374c3e7235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 4f5bba8e-6be5-4648-886b-ea842c8f405f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 b118a4ce-3174-44a8-b18d-97694a5939d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E2B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h22B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #3 ce665048-24d2-4a19-99a3-e81e04373929)");
unit.assert_eq16(16'h512B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #3 fe74e37c-7563-4000-80b5-c2ab2c11d1d1)");
unit.assert_eq16(16'h22B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #3 601532d0-2135-4672-93ce-bd8806363761)");
unit.assert_eq16(16'h0BB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #3 74e1db41-4846-427d-ae61-d71487748e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 a7072751-bdf9-4c4b-82d1-91943a0f8dd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 d42be7b4-7f23-4f9e-b6bc-554f1654d76a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 a724802f-1488-45ca-95fe-ab98dc35e184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 504ebd00-83ae-4081-8439-3d99e1f9bbe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 d393d35c-8df8-4f91-bac9-d94823847ce9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 4dcce696-62b1-4122-b73c-536ab06e8d6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E3B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h098C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #4 833a58ad-8b3e-4932-90a0-d6653205956a)");
unit.assert_eq16(16'h5A3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #4 9d6bb222-a06f-4d00-9028-b888525e7f8a)");
unit.assert_eq16(16'h0C1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #4 93be5ab7-77eb-4fb5-8cfb-dd8c9bef3904)");
unit.assert_eq16(16'h098C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #4 b7ffd8c1-c4a9-4c3a-b4c6-68e699d74c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 c4eb9baf-e0e2-4ec5-b872-193f009db724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 a3d22056-a7cb-4673-a5a1-a19031124558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 4c3277a8-c9e2-4ae5-9bf7-ee1b53cb2c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 69563e52-bfc6-47d8-b136-14d5d6a8f759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 8ba6ef96-5f8b-4b90-83e5-7d364d1c71a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 8f395918-2e8c-4cc0-ad1e-f62acb110e78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h042A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #5 9b8cd028-d10f-489e-8d73-5aa754d6d780)");
unit.assert_eq16(16'h2A4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #5 d50a36ec-fe0c-488f-8e4b-9d0be34d228d)");
unit.assert_eq16(16'h0A02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #5 dc46b107-07d5-4b5f-84a5-3f5aaf7bc983)");
unit.assert_eq16(16'h042A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #5 8589b748-4a80-425b-9211-01fcf56baf0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 7236c495-08a9-4789-ab75-cabe8cbf9669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 b04d14bb-f56e-49f5-b152-bc6d5594200d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 48f15e81-ad19-4abb-8966-d3f2f21972b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 3762f85c-748b-48bd-a27d-5f4ed7fcbeef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 f191b397-e82d-4dfd-9188-b3c56000eb6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 e26d66bc-3199-497a-bc11-3e8ec27c209f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC10C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC801;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0401;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #6 27babdcb-f1bd-4b84-9224-af621945b0d0)");
unit.assert_eq16(16'h750C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #6 3074adf6-0dc4-4534-a743-dd8f14506708)");
unit.assert_eq16(16'hC801, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #6 cc601780-7f2f-4770-960a-6c3237a4d779)");
unit.assert_eq16(16'h0401, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #6 fc477a35-18d0-47cd-b9e6-9418a0d71402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 1b5aa31f-6fa8-428c-80ae-bb58ac2893ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 b3095f50-e1d2-4bdd-a8ac-28f35f3f4e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 c88af8ac-ab7c-475f-80c3-7f18b5821d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 98cf6fb8-be3f-4e89-af84-aa52db6e13ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 0b51ceb5-e8fa-4d0a-8878-b2b4a1e92fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 05723cdc-3055-4ebd-a3d4-5bc8a02ea417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0655;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #7 a121e4d0-7415-4bdb-8a75-c2d079bce576)");
unit.assert_eq16(16'h4BA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #7 525bb022-2bd3-47a3-a966-182639e9d3da)");
unit.assert_eq16(16'h64DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #7 ccff7afd-83cb-4601-8da6-e64c0c85f40a)");
unit.assert_eq16(16'h0655, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #7 7d71d9f0-a000-434e-a1a4-a174c1f4656b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 097f8b7a-f592-442b-9667-bf2f53729e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 1a6e6a6a-0af9-4c22-9ab0-788c6f5d665f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 a30faae1-aaa6-44f4-8fee-a2cecf928f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 8ee70f76-0e2c-409d-af52-e8bd8fefcfdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 2c489af4-2a7c-490d-9681-1296cfc40182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 ac49dc29-05fe-4ede-9632-4d38643ddee9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8615;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #8 6532b490-3019-4116-bd3c-b97975dd7c89)");
unit.assert_eq16(16'h7215, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #8 5f70a47f-74ad-4986-af46-20c8837aa75c)");
unit.assert_eq16(16'h0D50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #8 027df057-76a8-4787-ad19-797707361f07)");
unit.assert_eq16(16'h0A02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #8 b5e06fad-340a-4040-9ad4-e60b105a38d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 50599fa7-ef82-4104-aeeb-b8124911fe74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 5a75e5af-c018-4f54-a358-e9a201e5e72c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 6ce06c3e-af29-49ac-9194-b7ae66da3052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 a008c104-d57b-412c-bffc-cc53cd9dd868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 472fd1f7-dcf8-45a2-9f5e-e5500a00fcee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 72dc8b5e-eb4e-43d7-a1c9-a29dce54a7c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB21D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #9 59702b64-d2c8-4bcb-a053-1a8a2d0b931f)");
unit.assert_eq16(16'h921D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #9 84cda29e-f0e2-41ed-a736-2fa83e497bb6)");
unit.assert_eq16(16'hBDC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #9 34eb50be-21fa-40da-8b97-01e4469cc3c0)");
unit.assert_eq16(16'h02C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #9 a9323d64-4a95-45d6-9d7f-fa83bee82b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 006dbd7a-c44a-4dcc-b506-632c1fc9cc45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 f8f588b1-d0a1-4ad7-a66e-1077bec59447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 3e73a6b8-fe58-4adf-bbaa-d2f95b283e82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 e14601e6-56e4-43cd-a559-45a7c1ce1e2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 c74d0637-74cc-4689-bb09-7d2b479b244a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 4d1dac6f-ec61-4013-84c0-ec41977bdddb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #10 4a1117c1-a9d9-4cad-9b08-0fa95376d92b)");
unit.assert_eq16(16'hB02D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #10 1a7b4842-25bb-4a22-9439-e1aa4d156937)");
unit.assert_eq16(16'hAF0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #10 2bf49a4c-17a7-4f04-b9bf-0d5173640250)");
unit.assert_eq16(16'h0A81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #10 2a4f4854-c13b-43fb-8979-26ef3e6d6b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 ffdf1409-8fe7-4c9e-8ed6-41768e09cc4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 75d6d31e-368c-4d09-ad40-fb4cb9a01c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 751bca8c-9ad2-47a5-8973-dda98eedf85b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 9d98455e-ec91-4b86-8abc-41c096fae0bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 e05f7f2a-0239-4d62-8d95-1f61c2d03988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 2eaceb88-0cd3-4dbe-b351-e27ffc94763b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h854D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC3FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0589;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #11 41226a57-f8d7-46da-a0ef-236c17ee20b8)");
unit.assert_eq16(16'hCA4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #11 6f35cc6b-4fdb-4c0a-bd26-829741361fc2)");
unit.assert_eq16(16'hC3FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #11 abfc1efe-5d14-4e27-83c0-ad59471b0b4c)");
unit.assert_eq16(16'h0589, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #11 1364bda2-ae92-47ed-bd55-7f6ac50633cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 620749bc-10b4-45a3-987d-659b4d831cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 5fbc2cd3-b296-4d62-abdf-c7a0e4260a30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 92a1b510-c7d1-40d7-b9a4-35ae23dc194e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 beaf285a-75e4-423c-8c55-d6e1d50d53e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 e7f12c51-0c69-4844-af39-135213cca6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 ba8cba74-573b-496d-ae38-56308ef4c92a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAFD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #12 5b41c65a-9668-42fb-b316-8206dca41254)");
unit.assert_eq16(16'h37D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #12 a47699ea-6828-46f1-9ffc-3b41a7c0a012)");
unit.assert_eq16(16'hD2E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #12 5f8f4231-7743-49e5-86b0-3b15286d848d)");
unit.assert_eq16(16'h0EF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #12 4fb8d2fa-69d6-4f27-8f20-5cfebcc05999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 2ae62b34-191b-48e5-882e-ec6e9b9d21e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 4dee6636-f91b-4667-8f80-f669c6166f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 3651f625-0575-4c98-b921-c69c82879106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 09193a97-8b9d-4708-8eb4-85fa2bb40cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 1f64f496-7498-4a48-9145-1bd5662da374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 bdfe7ca7-f6eb-4d46-ae0d-36f2b57c3d68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7DB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0265;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #13 e5857b62-2452-4a06-b72a-50101f4ee0d6)");
unit.assert_eq16(16'h84B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #13 f433041d-1217-4d1a-bd97-5542ad379713)");
unit.assert_eq16(16'h30DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #13 6a0a97b8-ed56-4b3b-b682-f11ae4c582de)");
unit.assert_eq16(16'h0265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #13 7f767486-0d93-4f06-9356-38c6fe7a4e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 954b4990-40b9-4aee-b52a-2e0b78b51ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 f9e41dce-8e6a-4b62-a0a5-292d0fa3097a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 0bff345b-0dd1-47ae-accc-d329a73cdaba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 5dbb3c04-f1b9-4b97-a4e2-54bff1ee7ab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 be6f08dc-0baf-4f40-a74f-a13f9f5910a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 f2feff37-7707-4e5c-8ac2-8de2f082cc8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h691C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8615;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #14 2506c49f-998d-4049-abf4-ddca8732388f)");
unit.assert_eq16(16'h9F1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #14 00c1ce7b-38c0-46e3-8e48-a3947dcaa0dd)");
unit.assert_eq16(16'h8615, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #14 e30302fe-24e1-463d-b80b-7ab8ab800128)");
unit.assert_eq16(16'h0BEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #14 1d96125a-20ea-487b-866c-dd5e0e12754c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 65f6d469-d45f-44c8-8669-a8ac069cef79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 aa0a3307-cad6-4ba4-ae92-b19816031230)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 7233f621-f1c6-44b8-b63c-e2ee0e4991b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 c31d9bb6-1d18-4a1d-a614-5c53ea6103d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 82da82d5-2278-42a3-9696-1fe6eafdedc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 9dea9ce5-085d-438c-ba8f-ad72d78eed97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #15 89fd8cda-eb12-4169-97d5-cd1c044bdbc4)");
unit.assert_eq16(16'h4928, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #15 e14ececa-563c-47aa-a387-283de093bd23)");
unit.assert_eq16(16'hAF6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #15 77bbaf4c-e671-498e-92b7-282a35ab984d)");
unit.assert_eq16(16'h06E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #15 a2c5e793-d69a-4a8d-abf4-8e1a4632e43a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 4c829ba7-f8a6-4152-a4bb-28f7d7185e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 7f7ed3e8-7531-481a-861a-d0f7dc1e7a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 e32bc2a4-7e5c-4123-9441-d4834a814241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 3b558e61-2784-4be9-a1f9-fe3374dcb3ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 407d14e6-8374-4f4c-abdb-6a4651d505ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 ac98ff1d-a9c4-46ea-81df-e4baedc88110)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2D68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0117;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #16 511b84df-ff99-4e68-bb58-f6321147e00a)");
unit.assert_eq16(16'hC168, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #16 9d5811dd-7f46-49d4-9d39-f0671707e814)");
unit.assert_eq16(16'h0117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #16 d55eaaa2-28da-4269-9594-9b85df66347c)");
unit.assert_eq16(16'h01B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #16 ac830e52-3cc2-4fc1-b377-0525cc3940ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 e0bb69f5-6c18-4df1-a56f-c1803bfc327f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 5192d6b8-8de4-4198-9c46-e817ea831e84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 c2d69578-3a4d-47a6-a430-ab1eccaddd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 b5c19d70-baa8-4c16-94b6-12046796d6b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 1e9331d1-a6e6-495e-939f-41502ba283dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 3325e734-2a99-45e5-9251-7ed9e9a9f3bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8AD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ADA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #17 647e86f7-e73e-4020-9c05-467356b495a5)");
unit.assert_eq16(16'h262A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #17 e40ba4ff-bcc5-4aad-9a64-02e54b6eb470)");
unit.assert_eq16(16'h8AD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #17 03b5c95e-1aed-4709-b96e-b657e27692f1)");
unit.assert_eq16(16'h0ADA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #17 177996e2-2c4a-443c-9547-b8954b4a86c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 54cee4a5-2672-406f-9abd-220ff76d3f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 c4978eba-8116-4f5b-a4de-4d0170cb2e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 e4ba7987-d970-4f42-84ce-f82533538ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 027df730-6e9d-417f-b0cd-dc9d9f9d6e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 a2832b1a-344d-48bd-9e98-4b6811a138d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 7f1e881c-c0e2-47a3-a4e7-6ea474c1f60c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0747;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1589;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #18 4b9812c8-d302-4391-b63d-751b659eb8b4)");
unit.assert_eq16(16'h4947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #18 61b5bd2d-7882-4685-8aa6-295d8d723c9c)");
unit.assert_eq16(16'h1589, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #18 b565a57a-f6da-4e09-9b3d-5eec08e5525c)");
unit.assert_eq16(16'h07B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #18 81fd1e71-da70-46a5-a197-6d46aa02cd6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 5f134198-8ed1-4ffe-bb57-f39d5a0d713d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 db866db1-d2bc-4d5f-b921-6572fa274c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 5462be55-00f8-4ef0-b42f-545d6496e584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 af983a97-2759-460b-ad9b-e23274123f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 a9070353-b65b-43d2-8d1c-aa3f98d7f073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 8ceb8f46-4714-4f9f-88ed-23c2f2a09471)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4FCA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #19 5ecb00f6-8b00-46e8-b66b-8f0d740ba10b)");
unit.assert_eq16(16'h40CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #19 a3503ff5-5a62-42eb-91b6-c5f03e856bb5)");
unit.assert_eq16(16'h9C0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #19 9448f683-6255-4bc6-a3b9-a2436612d649)");
unit.assert_eq16(16'h0C37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #19 9803bf64-cdd9-4d35-b7f1-f2a434efda95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 f3157740-863b-45a8-8091-172b43dd385f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 8d968f29-d713-43e3-9f0d-2421a8a32e1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 c618efa4-05c3-42e7-9cff-30fb81a8c7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 1825c211-44ab-4834-ab1a-602dbf71677f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 5394bcb8-e969-4cd6-a9a9-81e6e93cea30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 50b2def7-3b59-4571-87ea-255c5084127d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF4A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #20 1fe16b74-617c-4c5f-97bc-ba2a70223d2b)");
unit.assert_eq16(16'h68A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #20 da3a6918-e71c-425e-b5f5-774caa22f216)");
unit.assert_eq16(16'hB0CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #20 5aef9fd5-e957-4d9d-b3e1-abd67596b4d3)");
unit.assert_eq16(16'h02F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #20 a86e9fb2-5221-43f7-852c-4b9e1766780c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 e9396b6e-5138-4ad7-bafa-0e25a3d6c27b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 b3454b01-12d8-4a5f-8e8a-a72e92e80e51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 65bb04b8-8ccb-4b12-9522-dc712bee79bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 331fa9f0-8c9c-485e-9278-fd8a5e94008d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 4644bf92-a500-4556-b9bd-97e736619d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 7b32f8bb-fe30-4a5f-80ab-c9028fb23c21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #21 1ce0c10b-ba0e-4301-890d-7494c3480553)");
unit.assert_eq16(16'h6DCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #21 db20bde0-7ccf-477a-b1bf-86b4d7b35ce1)");
unit.assert_eq16(16'h82E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #21 c3177545-a7ab-4002-9ffc-824e38d45e58)");
unit.assert_eq16(16'h06D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #21 c01f909d-08da-48d2-9fb1-2d0da7fce44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 f44e3e59-4147-4c7c-9fff-ae391c2dd1c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 89f3f89c-0fb6-4726-9527-a89d9241961f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 488d7752-422d-4aed-9f3c-9e89e79e0d89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 ea621a6e-7a6d-48f6-b48b-068fdd5b70e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 1f1dcaec-9daf-4326-8dc1-79469dfe322a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 0c2d03d2-1cfb-4461-813e-2a77348e54b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0241;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #22 eed4ea6d-7b8a-4aef-9e30-3a9f38468747)");
unit.assert_eq16(16'h9030, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #22 3f947be4-d18d-48d2-8b53-7ec89f8e8d24)");
unit.assert_eq16(16'h8A9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #22 afbc57f6-bce9-4959-9c14-b11f3dce87fd)");
unit.assert_eq16(16'h0241, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #22 b8a19d6c-cbc2-4282-b0ab-3a6a4929c300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 8f6456e0-a696-4ffe-8cea-69bded91daec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 7d5902d8-7452-418b-ac57-b4897dd40daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 3b03016a-f731-4263-9227-eb0fd9605c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 b616902f-e9cc-42c3-a397-a6219a4ccaa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 f369a8af-6987-4e6d-95d8-b690ba7ed417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 f56230c6-4ab1-4b98-8543-8bb46cbc1a6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEDAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD245;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #23 e9ba90c4-f39b-4eb5-87aa-db1ceb90ac69)");
unit.assert_eq16(16'hB0AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #23 4ce2a9db-beba-4a06-b384-328e0d06e957)");
unit.assert_eq16(16'hD245, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #23 d87c172c-017e-40d7-8ba8-dbec00d99717)");
unit.assert_eq16(16'h0C6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #23 6090e5b3-76f0-4ae7-8090-afd4ce1fa370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 5cf7053a-655c-489e-9d32-889966917edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 8eb39017-f53f-465d-82ea-2ba60020f268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 353de2fc-71af-4cf5-a581-75a8098858b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 c169d37f-6985-4043-b417-1ba7632f003b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 59633dca-9652-40bd-b8cd-a524b4d97bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 66c9efc6-2cc7-429e-b14d-dfa56042cc29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h432D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB9A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #24 0c52e2a7-3f88-4657-8d52-fa0fb72b0d69)");
unit.assert_eq16(16'h8C2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #24 d2e6add3-2d52-41f2-b926-fa54c48c4ec6)");
unit.assert_eq16(16'hB9A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #24 46ed62f0-f00a-473d-b7a2-ca69c6e8569e)");
unit.assert_eq16(16'h04F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #24 580de30d-c9a6-46f7-a1da-32bd221638ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 80cef8ad-49c3-435a-ba79-4d62da5c201e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 f6557632-a9ad-4e83-b9db-b9be3b5551f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 4a236ad9-60f2-4b0b-aaef-96f93148dbbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 a0a821db-9550-4aa3-96ce-a309b4f5b5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 d94c6a1a-faba-464d-a350-83e90027531e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 daee8983-113a-40bd-9999-afa11578f2a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1970;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #25 c42ddfda-a4ad-405c-8b03-64a0a942a31d)");
unit.assert_eq16(16'h4E7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #25 e0a99afa-fbf4-481b-ab06-8f059824f2c3)");
unit.assert_eq16(16'h1970, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #25 99eb00f4-ded3-4219-b553-dc12c4d140c1)");
unit.assert_eq16(16'h0C27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #25 b31e30d8-6ee1-477e-a519-c20bc603ad80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 58cf625d-2820-4435-a720-9369a4d54a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 edff6355-f344-40f6-81c2-559acd74d880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 6d5669c7-b36f-4920-bb27-ac86cdbe726b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 45cb053f-dfca-42cc-aae7-611ae6c91f9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 862da38e-2da1-409b-bdeb-6d23e9bf40e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 ddb6d2a5-3a0f-4464-a85c-f19560d54b6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h203F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h42A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #26 39034a55-2418-4cab-906c-e57117915ebf)");
unit.assert_eq16(16'hB23F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #26 3b29968b-4c2f-4144-b42d-7ee340fded5f)");
unit.assert_eq16(16'h42A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #26 fbe45a44-0aab-472e-8a6b-7d39bd723084)");
unit.assert_eq16(16'h0A6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #26 9e085e17-0816-4549-acc9-d8390ad54130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 4d8fef72-52da-4d5b-a247-0684655c9457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 d01bd04b-9a99-478c-8a38-36eab4bbeaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 95eabfa9-530e-48b0-9f7e-8366e2281601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 75e43330-c01a-4c82-b1f4-155f9bb1ac32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 9760b3bf-7372-4346-9f51-15eb6d69f0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 2a2d7d34-8a7d-4718-a47c-75863a38e086)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h71D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB9F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #27 cebc913d-2013-4d2b-96a4-b26c6107aaab)");
unit.assert_eq16(16'h31D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #27 0129ac24-0dfb-4137-b041-85b0e69a0467)");
unit.assert_eq16(16'hB9F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #27 7b6f4b01-1be8-4a07-8b02-7fa51c7d058b)");
unit.assert_eq16(16'h0BA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #27 abdbb00e-6f1f-4cd1-a65b-7fa0541aa66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 a3836ade-a373-4111-8168-b73e9b08ca83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 ad902ac0-6d00-468f-955a-b9e22be152a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 a9839adf-8f39-4eb3-ab10-61dc956109fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 071a0683-4890-483a-b01a-d0ce66c8d9a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 35199fe6-d3e6-4968-a755-afb9d9b8c478)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 bae1eea2-b24b-4d86-b9a2-28274042f55a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8ACC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCC4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #28 b6c2036c-f226-44ee-8249-af58c6704591)");
unit.assert_eq16(16'hE0CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #28 b4805fd8-6f77-44b3-8669-9b3e01cbf88f)");
unit.assert_eq16(16'hCC4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #28 672d9472-1bb3-476a-aa4e-4af7d634e4eb)");
unit.assert_eq16(16'h03E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #28 d061aa0d-599b-41d9-a231-cfa08646a84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 3c2a9dd1-2f72-45f9-b070-37b6870bb77d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 b41b7c48-3da3-43a8-ae0e-cdc30ebe3fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 ef4ac59a-abff-4187-851f-cfef7a8709f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 f4d0b481-c44f-46de-a3f2-a25e8b4b19fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 1716ae61-aba2-40ee-8fe5-301ad2de1cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 771afc5e-71fb-42cb-aa0a-57a611e40942)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE18C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0B09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #29 42868594-5254-40f5-84ad-e512aea426ec)");
unit.assert_eq16(16'h5C8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #29 038ab62f-b676-4646-b0e3-ed73caa7c915)");
unit.assert_eq16(16'h0B09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #29 fe4c8d3d-cdc1-4290-9d61-095bd8468004)");
unit.assert_eq16(16'h01B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #29 401896fb-6a22-4ef6-98ac-c8d75c0b7e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 a958be0d-e604-480d-b850-68e4b1bbf555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 045b9922-f66d-4e5d-a6c7-b3afde38e5c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 6cef8f51-c0e2-4949-954f-60f51c475e4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 a7ab9ce0-4eb0-481f-865e-54fc731e5e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 10cfb606-7e83-4933-bb8c-6839de31fc58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 255c405c-1a36-4538-8d14-1f1f9b6cd9b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1482;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB430;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #30 dc2a29b9-d12e-44e0-96b9-646b903b3dd0)");
unit.assert_eq16(16'h0182, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #30 96b008af-1316-43c4-aefc-1c093f4cfe8d)");
unit.assert_eq16(16'hB430, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #30 ac4e54d4-5575-4c9d-a72f-6c6ee7efd68e)");
unit.assert_eq16(16'h0F5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #30 ab1c7cd7-0c7d-4137-a8f8-c910cd9c5b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 7a5fafa6-4968-487d-9335-00bcd90e1fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 9d257760-a09b-445a-beb9-88fccdc1cdd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 5cdeaab5-df04-4d4a-b854-d2c6bc5e4024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 d5128879-5147-47e8-b27a-97ba7f110768)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 ada55fc1-cfdd-480b-86eb-64138b6eea44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 f40ff8d9-5ec2-47ad-8421-ef239edeac46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEA56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8BFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #31 93d674ed-7bda-4917-aafe-b574d3f17939)");
unit.assert_eq16(16'h0356, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #31 42809e6c-ca33-488e-95e4-1856fc174c61)");
unit.assert_eq16(16'h8BFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #31 ac76dad3-c6e5-464b-8307-330419b9fb1d)");
unit.assert_eq16(16'h0C84, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #31 1f89eaae-d161-45d4-909d-512b72b4079f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 43287a54-34f5-47f5-b278-a5b53f530759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 e197a654-1c00-4af1-84d4-0ea5d3a8cef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 073414cd-80fd-45df-ab8a-fb2e0b1cd2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 549cf891-413b-4ce1-9abb-2f26c453be58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 024e4d6c-fc0d-4da5-a74e-692b25588cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 8a65916a-45bd-4fc6-8c0c-6d8c3532fac8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FE2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h902B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #32 57ff9c8f-d1a5-4893-8c5e-465f4fbc0645)");
unit.assert_eq16(16'h0DE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #32 32275a53-6e02-4990-8d91-cb2b50fd765d)");
unit.assert_eq16(16'h902B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #32 45beeb12-f2ab-4df3-818b-8a69345ac400)");
unit.assert_eq16(16'h00A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #32 845f2e56-d2f5-40a5-8484-f3671f288af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 dabb1c9c-5c42-4320-a2e8-71c3d067e8b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 fd79582d-09e0-4416-930e-120db0f6e502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 65e2e0cb-3700-4d97-961b-cef12f5451f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 c5c23834-14b1-4697-bc0a-960b650d950c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 04ce11a6-4800-4582-8b2e-90355e71aa4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 2934ba86-656e-4668-88fb-64bb430c2964)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #33 844dfdf4-4c5c-4e1d-a409-b58ad38e50c0)");
unit.assert_eq16(16'h39AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #33 80041edc-7be3-45d9-b720-4a734d7bde4d)");
unit.assert_eq16(16'h1D44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #33 60276033-9afe-46d9-9908-33f97ab256a2)");
unit.assert_eq16(16'h059F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #33 ccdb0e10-496e-441e-a835-050225444ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 bd144b89-cf32-46de-b7df-fc6777de9396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 0b11c8f1-e54a-46d3-ac16-db0b354520ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 32f846db-7518-49ca-8d6f-f309143fe2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 cf8ed094-b282-4417-b5ec-7b71d54914e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 27aaaa61-e83a-448c-a9c5-c2eb5cd31e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 63c05446-58eb-4014-9b7b-6de4162263cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB3AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF7A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0358;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #34 7b49353a-c5eb-4c11-b84b-7672a9faaf0b)");
unit.assert_eq16(16'h97AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #34 6aa79c61-c3f7-4920-a928-fd7f9691e869)");
unit.assert_eq16(16'hF7A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #34 4cf78b76-d009-41d7-b4f6-e8a4e3d9a48e)");
unit.assert_eq16(16'h0358, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #34 2d5a5f58-c21d-4702-b904-883acbbd45a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 38ecd0b0-5f31-4f57-ab0b-044fbd2ad675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 e0df09be-a061-44fc-9253-11e92a5b3c8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 41a05a6f-3bb1-4161-b79b-45f99cd68b4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 0faab413-6573-41a2-b914-96177011ad7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 ccdab43a-3071-44ef-8f12-ebf31f0f0566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 6c19525b-5ec2-49d7-9ba0-7695208b4b0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD8B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0BA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #35 8959b297-4a11-4310-be2c-9195864ff13b)");
unit.assert_eq16(16'hEBB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #35 0d84ab8b-f35d-4391-afcf-4fd6d67cf5b2)");
unit.assert_eq16(16'h0BA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #35 56174ad2-fd2e-421d-aa27-23f2c1b577b5)");
unit.assert_eq16(16'h0BFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #35 594c5848-24c9-4230-920a-4681325dafda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 dd7cb319-8b6c-4bf9-ab9a-6fde63164584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 1fa2b59d-1b6a-4d37-a01f-1d962fc38a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 796e9094-40c0-4b1a-bac8-b26b052e1b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 11b1602e-2747-4976-a06b-8ca932d5b33b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 0d1ab0e5-0d33-4739-8032-83b01b172129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 b570abfb-5f75-42f1-ac4a-15f90e49cab9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h22F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h524E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #36 a169c684-d774-4811-bb3c-ca577fb7395a)");
unit.assert_eq16(16'hA3F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #36 491d9857-5afe-4181-88e9-597a58962634)");
unit.assert_eq16(16'h524E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #36 64d01f6a-5a0c-4316-8783-10407e259c5a)");
unit.assert_eq16(16'h0172, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #36 a6910a59-cdf7-4e16-9af7-37a0f828b208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 fc4bd3a7-4de7-4650-86a1-d5d5f21fb7f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 784ed0bd-d21d-4524-ad1f-4e9f95d07830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 fb3e0dd3-00b7-41c2-83bb-c3b2ba076131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 eea3fc1b-2c38-46b4-8644-914e7177fcbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 453f9028-99b9-4c87-81f9-8fbd6cc6b5ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 57b93aec-76ef-4f51-b385-bd25f759bd5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB730;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1370;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #37 b7cacaf3-0deb-4888-b2bd-716c9d806bc7)");
unit.assert_eq16(16'hB830, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #37 280fad2d-ecdf-4b11-a8be-7d5d5a204682)");
unit.assert_eq16(16'h1370, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #37 e4ce266e-85bf-4b8d-bfdd-f605f1b26fd9)");
unit.assert_eq16(16'h06C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #37 6ff393bd-1297-442a-9df4-50f552c098f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 502be578-28d6-4319-8ca5-57c2b17ad826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 421af89d-5267-4c4f-a1df-cf7f216acc65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 1597a1b0-e1af-4ce2-9ab0-19069c78048f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 2deb063e-70a5-4350-aae2-7dffd1ca210c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 6c3ec3d6-8664-4033-86ab-7319e3cb909b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 9aa11d6e-9027-4e9c-bb4d-4cd7ebd550c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3DE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9E6A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #38 308797f6-2413-4e71-bcfd-702637cb85aa)");
unit.assert_eq16(16'hB2E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #38 64cdeb5b-f6db-452a-bf03-8c9ac082506c)");
unit.assert_eq16(16'h9E6A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #38 ecb68a16-3971-45c4-83ad-09f6c65de275)");
unit.assert_eq16(16'h0338, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #38 3bc1525f-0df3-4973-96bf-deb35da2027b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 da3a1d19-27e9-4877-92b0-8b2aacc8e9fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 ac73ad30-3bc7-4552-98a5-0c6cfb5c11b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 50563537-35bc-484c-ac48-a27b2115a48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 0879cd6a-bf02-4fe5-8c6b-d0983f39e9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 b4936620-593d-4832-a2c4-e8b6701cb7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 0c4036e0-e838-4b7e-856e-5e5324d414a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6D8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8658;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #39 1865d760-693c-4a33-ad61-e94bd0f9ba7d)");
unit.assert_eq16(16'hFE8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #39 d3c07f83-8a1b-4921-aa45-772e8be69096)");
unit.assert_eq16(16'h8658, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #39 b2add0f0-2f99-4446-bfd6-7e598b4c9c90)");
unit.assert_eq16(16'h07CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #39 2ccfd978-8a46-4d55-9267-027cf4050c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 4b8d1744-9f39-41e1-abfb-9c37e486bd91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 4ece3eeb-9369-479e-ba9d-2773a8358548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 9eddd1e1-60d5-426a-988c-81e826d0cd14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 a5ce2290-66ca-47b7-907a-b7fd3987173d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 fc15a511-a04a-459a-b5c4-250c59005db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 8285784f-df4a-4113-9bab-e1a85ad3c921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE699;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h747F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #40 2e23a5db-d45a-458c-b36c-825a59be8f30)");
unit.assert_eq16(16'hE899, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #40 441fa9de-6df1-4525-8665-34f717590f7e)");
unit.assert_eq16(16'h747F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #40 4b0359fb-c242-40dd-93c7-f4ec960b6546)");
unit.assert_eq16(16'h0DC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #40 4dfca7cd-76fe-44b2-bd07-6a3502535023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 aec9c4dc-c4ef-4eba-95b4-2f8bdcf0bbec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 ce8d9a4f-9770-4458-919a-9a6d4194372b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 a580eed7-d1e4-4a91-9401-26abf18bef85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 33f81063-1b12-426f-b5b4-6cd64ab4ac69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 6a0ff2fb-6402-43d8-a8ba-2377598641c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 9f21c2da-e2b3-4d76-953d-ca91d2530cfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h50CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #41 3b30cef4-5069-4b21-9341-57c02bd6fc6e)");
unit.assert_eq16(16'hCBCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #41 141e2aaf-40d9-4eee-81e9-db68770964c5)");
unit.assert_eq16(16'hD7EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #41 d7622621-f93c-4d01-a51f-cda156e88134)");
unit.assert_eq16(16'h0D7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #41 3707fcc7-d864-45fd-af3d-ea5b70b0de8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 e06f1d7e-fb47-4079-bd49-718cfb090955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 47299fbf-bdc9-4d1f-b7c1-5b8e477a6feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 00db880d-a4e7-4988-8c1c-928cbc334994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 c2761879-cf64-4a77-82c9-33771e04bcaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 ead8a95c-daef-4253-9d8b-858bc153147b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 476b888d-f871-46cc-b112-97a47ae97cf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7A69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0575;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #42 ebb18698-0679-47eb-b79c-f32fee6018c5)");
unit.assert_eq16(16'h2319, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #42 840a8ac7-64a1-4a23-a34f-a95dca151d6a)");
unit.assert_eq16(16'h7A69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #42 ab6bfb43-8450-4f99-80a9-7785d1521842)");
unit.assert_eq16(16'h0575, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #42 40186b3e-4f04-4744-9c5c-2c7bdb47edb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 b98da69b-44b8-484d-9b89-71d5aefa83e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 051f9fcf-2b4e-44b6-9d78-c98cce9e89ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 810c2890-cb44-4923-ba0b-4e493afa9d9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 5f7723b7-16de-4f41-9d22-a0aca28f9c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 72220c29-5180-4d47-b6cd-e005df70a436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 81e96e4f-1839-4dd7-8683-4468bc0025ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8EBC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #43 42814b26-cf2c-429e-bba5-d91315c24b57)");
unit.assert_eq16(16'hE4BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #43 37146ff5-1e60-4e50-835b-5c2ba89aec96)");
unit.assert_eq16(16'h8F45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #43 b27e7a80-2e81-45b5-961f-66eb7c0f1c6c)");
unit.assert_eq16(16'h0B6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #43 a04128ce-eff5-4120-b5f9-82f9a275b691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 77632fd3-8155-4c50-ae5c-632c19e3c7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 fedebc4e-ccc0-451d-90ff-4ed7e77e3101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 cd23b3a1-6c3b-49a2-909d-d421bd55a8d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 621bc36a-f58b-4ef5-8cd0-952b512e7169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 e4e967a5-8c6a-4bc5-9e21-0746893140e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 4c1d15dc-c87d-404a-b197-b30980f97c02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h282B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #44 91c11659-2f0c-49b9-b1fd-0c37507b82a3)");
unit.assert_eq16(16'h2BDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #44 484433b5-be4e-4525-9dc6-eb3d40b355f1)");
unit.assert_eq16(16'h282B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #44 e82132be-f3b7-4bca-9df3-eceab2243be4)");
unit.assert_eq16(16'h0EAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #44 1a59aeda-81a2-4f1c-92cf-36f7012e24cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 6768d075-c58e-4e4b-9d14-d3f53e44a559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 b2989e6f-dd92-4b79-ad1e-c9ea3a4629e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 be450f28-735c-4ba6-9ee1-f3157bf96f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 09c135ec-c1ab-4362-97fb-7d12b6c24c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 d0e53901-2bba-4e8b-82c0-83ee6571ba9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 d34d83f4-2ccd-4344-8588-504f88c526b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h725F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF06C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #45 e5aaab54-7053-46ea-aa13-8b00ed0325a3)");
unit.assert_eq16(16'h8E5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #45 1ee001b0-c828-490d-a634-e6c6fef43798)");
unit.assert_eq16(16'hF06C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #45 4be5f029-edfe-40ea-8ca2-80c8f454c72d)");
unit.assert_eq16(16'h0CF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #45 6fd29034-8280-44d8-ad25-f96abfa99cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 5cd1a20a-2bff-4c99-b1ca-df32233b0e69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 f3388fb6-b9ea-4cce-855b-14b321932232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 eee6fee1-d5aa-474f-9cb7-e66d88d3e7e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 dc263f69-6547-41c5-a118-0c1cfe72088e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 0e6d632a-a708-4746-a4f6-35520b504922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 7df8ab04-e4db-4b47-b467-1d104bbd625e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAFD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h74BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #46 45aa6e4f-3303-4c84-88b6-1ea675b881ba)");
unit.assert_eq16(16'h8CD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #46 3fd89566-96c1-4517-bb96-5743035a1717)");
unit.assert_eq16(16'h74BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #46 c3c80a12-c6c2-484d-b58b-7776d564cee1)");
unit.assert_eq16(16'h06CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #46 0d3e5826-af1b-4d5b-8123-6d4ae42f86f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 d413b9ff-e6ec-4aee-8e7c-8c0ae34326da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 7889ea71-246c-4944-a98f-8bb77ce91389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 4bdcc8c2-095b-42d8-8106-c0650dd7e71c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 bb3d712f-d377-4760-a2f3-386db2d7f7e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 03827f9b-03d7-4401-8494-d20fab083989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 669e11ff-abea-47c3-b0e3-cb4c3854473e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBBB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #47 2d40b39b-3cb6-4dcf-8207-44985ee0b236)");
unit.assert_eq16(16'h89B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #47 b0ebef06-61ac-468a-a7ce-c61d7f22d197)");
unit.assert_eq16(16'h1E2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #47 4c654f8a-60a2-4ced-8e2e-fc2cf925db47)");
unit.assert_eq16(16'h0F1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #47 13bca88f-8748-42ee-b92f-49089e3a0952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 be0b40e1-393f-4584-b737-94e97803dd80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 d64c688a-44cc-4dce-a7b8-c3b6becccc06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 606e378e-b45d-4871-91b7-28e1a81c189a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 790fabba-57cd-43d6-872e-ee8f63849fec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 331fca20-e8d2-419f-87bc-af62b3480c54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 4806cb83-65da-4567-812b-f0cc6376f30e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1611;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC640;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #48 3bb9e00d-34a5-4b47-9a9d-d464091c6d3f)");
unit.assert_eq16(16'h5C11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #48 5d9790b1-afac-47e8-af43-37ee1cee245c)");
unit.assert_eq16(16'hC640, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #48 ad1f4fb8-ec71-4866-ae96-067a54b7018e)");
unit.assert_eq16(16'h0D52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #48 40f70bc3-de4e-4681-be86-240664e04a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 b655c323-a534-4c73-8650-666666b00570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 53b8a05f-11d3-4a38-b574-d107a69e8ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 143c8acc-c980-4f0b-9e24-0673dff830fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 eb6ae65e-7bc9-4b4b-802a-33a899bc3672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 929cc5d6-0696-452f-b9e1-97ef5e72324e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 25bf76df-7c7b-486c-b05d-9b55456076df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBFC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0834;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #49 d11138f0-10d2-475a-940b-79a82d01083f)");
unit.assert_eq16(16'hC4C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #49 bdd60885-2d4f-42a4-88c0-8d113be2be85)");
unit.assert_eq16(16'hC2DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #49 6b54b023-7330-4993-a986-b544801a6be5)");
unit.assert_eq16(16'h0834, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #49 66a77148-6a82-4d35-b6cc-3610b7e61520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 8f29890c-f57a-4550-a2b7-ae7e8fa9d283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 9d0601f7-a278-46b4-ad2b-25dd95cbbb92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 220645dd-ebe1-4313-a14b-fc80b7fab1a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 96b3ba9a-e6b3-4063-b0d0-728fdaa012b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 e0c1b0ab-c3af-47a1-a1ad-a0636f2e07aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 a4f6d7d3-7c7f-4f2e-9c5a-bb0c20546d72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4CBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB390;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #50 5c31b011-8e74-4bb6-ae3e-afb593501209)");
unit.assert_eq16(16'h86BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #50 512545b6-4afe-4c40-b39a-9fa63e9aa457)");
unit.assert_eq16(16'hB390, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #50 1536e3ae-0962-4ec4-9af1-3f13b36ff874)");
unit.assert_eq16(16'h06B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #50 acd31503-b53c-4958-a2df-828de4a04bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 709e7b7c-c7e2-47c1-bcf3-e04639b83b9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 affc3835-9f3c-4d59-931e-e8fd9ad802cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 52d92633-c55b-414a-b387-f30649caf979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 9f4b81fa-6755-4d4b-b63c-d0bc21939f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 a4f27c23-fddb-4000-8add-8f52b07c4c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 43250e64-1420-4fd6-97a7-d9deeab94f73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEBD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #51 6bdd5126-eb6b-47ad-a86a-d40d6fc3a464)");
unit.assert_eq16(16'hF6D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #51 38ed0fde-49aa-414e-8eee-c1180fcc2b09)");
unit.assert_eq16(16'h30A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #51 070f26c7-c7da-428d-b0c8-426ac43e5eb4)");
unit.assert_eq16(16'h09A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #51 2c0d8d60-1d23-4613-bc10-f946b5505f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 daa064d8-5476-42f3-acb9-c1eacf388459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 9e51adc7-9413-4840-982b-48985361f6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 c6c86ce3-0aa2-4110-a59a-d07fc23dd58e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 e28d08fb-b9a1-4ac6-91f0-dcc320ba75ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 c8736e80-e399-45a3-bb89-79b82d0ed0e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 22b6fb23-8cfb-4438-9856-92b722a5edb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2410;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h56A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h011F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #52 5db2e3c3-ce0e-44dd-a1ab-16156ee16ac2)");
unit.assert_eq16(16'hE310, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #52 609f9977-54a9-4261-9d04-8aafc250a2c5)");
unit.assert_eq16(16'h56A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #52 5372420c-6491-43ec-b8d4-f1fdad15df87)");
unit.assert_eq16(16'h011F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #52 7c07e9bb-7349-4214-90ad-26eeb1f7a794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 4f30b20b-df96-49b3-ae52-bc923cb55ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 d5eddf49-5f23-434f-af57-e79cdee9bb08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 3711c425-94d0-42d4-b1f9-0a9250a160ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 4e2cf090-74eb-4539-9413-0c448b22133b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 031447d1-8e52-4391-bcde-cdf130dc0bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 8d662ebc-d3ab-4676-9613-d66c0116713d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h47E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #53 61d1d9bc-7e94-4ee1-9c1f-ca4d9cac92d6)");
unit.assert_eq16(16'hEBE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #53 8fa69f43-2afd-4c60-a4c5-d627f952e1be)");
unit.assert_eq16(16'h0C9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #53 040ba00d-9b4c-467a-a094-742058c8cd52)");
unit.assert_eq16(16'h00C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #53 2c2e63bc-2615-42d3-a32a-b564567ff595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 3e353147-0ff7-41bf-9dbd-f9e92504b775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 c381f293-e77e-43f7-ad9f-2ecf7c91280d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 21e9ce8c-c51d-4835-bab2-819b83bc7831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 da1d35b9-5950-429e-9bf2-a4285aa39e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 26037851-6d0e-4159-aba3-0946edcba3dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 ee766599-6d52-48ac-8673-4ac7babc17e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB9F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h93F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #54 c72bfa82-9b8d-4bb6-a268-f9a0794e186b)");
unit.assert_eq16(16'hFAF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #54 7a1eb4bf-f525-4bfa-8813-12b67dc8f796)");
unit.assert_eq16(16'h93F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #54 113ba5b0-ea83-4192-a314-2eb734931b22)");
unit.assert_eq16(16'h0AE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #54 7928e09a-6b32-46e5-aee6-4f87cbb0a087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 7f4b1ca1-cd73-4956-9f98-d19cf614900d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 85490977-e9b6-49b2-a003-342fe90ea9ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 5d40eb7b-4273-4d05-afd0-61debbbe8be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 bc7bb640-c7ab-4e8e-8887-15282eec6a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 f4c40ef1-5db1-4db1-af18-02a02485b361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 83cfcc8f-f7a8-4338-a3c7-4a12a6aa01ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h83E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #55 17b31932-56f3-4bd2-8a5c-385602ba9bfa)");
unit.assert_eq16(16'hDDE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #55 c927dff5-3504-4682-b573-f458280b1a4b)");
unit.assert_eq16(16'hF9E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #55 bdb6926f-71e2-4a61-8ae0-6bcf65df3655)");
unit.assert_eq16(16'h0C08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #55 782586b0-fe2c-4e51-ab06-e0ad651acfe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 51690f8c-7b7e-4c4e-ab00-e796313cff3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 077c3977-3dfb-4045-b986-027e542e096a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 599f1adf-9782-4457-9934-5a9777110b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 2a3b4a83-d2f2-4da5-922b-cfd713ea9811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 a6712435-1619-4673-acfb-7e6683b00a15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 db9df7b3-58af-41aa-bec2-51f3e15809ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #56 6cd0b73b-1476-4d21-9dfe-98fed2ab4aba)");
unit.assert_eq16(16'hD054, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #56 901ee28c-8bc8-4987-9d80-9aba7e0f322c)");
unit.assert_eq16(16'h1D66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #56 5755e85b-69ce-4cd7-a061-43fb583c7eee)");
unit.assert_eq16(16'h0B23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #56 29af179c-6b55-49f7-aab1-312ea1a5eecd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 c6b69880-7840-43de-8ccc-edfc856e0d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 11ec5374-c754-4027-9d39-a0868641aaf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 d7e3d95d-3a5c-4499-a052-4bf2b63f760c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 1d5bb5d8-90bc-451f-9332-3263bbe29b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 6119d83b-0b08-4224-962a-9f2ed4c81b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 cee78310-2eb7-401a-bedb-b154bd910981)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0020;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0494;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #57 3344c730-412e-4735-bd08-263418f4b3fe)");
unit.assert_eq16(16'h4632, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #57 678e5fdd-9abf-4d0f-bf79-bbf831ee5f26)");
unit.assert_eq16(16'h0020, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #57 c05d4486-17b9-489f-894f-065996dd22d6)");
unit.assert_eq16(16'h0494, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #57 754cf63d-4d3a-4d0f-aeb0-7e7343c419ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 c0926b97-687b-41b2-821b-fece6f7462c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 88d4ce40-9d2a-4c56-9baf-338346b9f36b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 690df97b-f0b6-453e-96e2-adc2a535e751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 a9fc04b3-de54-417a-85a1-882b4e6da499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 c564129a-8781-434a-858a-6a94e41560f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 a8343a6a-5027-435b-baca-2c8ad71431ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3874;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #58 866b7e3d-0a34-486f-84e2-0d05814f8155)");
unit.assert_eq16(16'hA5CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #58 44d205ed-f2ec-4dec-ad25-2591a437804e)");
unit.assert_eq16(16'h3874, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #58 153f60f0-bed1-4a26-8c74-19929eaf36d3)");
unit.assert_eq16(16'h04EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #58 500901c6-0e04-4905-8d3a-f4211d832ef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 ed92c575-a430-4382-ba51-d2656ebaf10d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 0bcd6766-edd1-47f7-9836-5d9e7130cf78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 b18cc164-aba6-4f27-a201-18197f93f66d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 7c528fa0-79e7-4aed-acf8-992e45d20574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 26726f8c-9f2c-4121-a102-f0c0f9a5e464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 d246cae0-73d1-430f-92d9-d5da30fc2f65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3283;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2C18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #59 b9789383-54f9-4966-89e2-aef39197a986)");
unit.assert_eq16(16'h7D83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #59 234e5bd8-55b1-4bb9-8ec7-5a07e244b856)");
unit.assert_eq16(16'h2C18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #59 b4520ec0-47d6-4d6d-b59f-e199e752ba37)");
unit.assert_eq16(16'h0EBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #59 14a8b273-acb9-471a-bdf2-e41af9422ac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 0051352c-681d-4f72-9259-ef9838ed2625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 4604bffc-960f-41e2-bbdd-db72a33b16e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 1a2f12ae-3771-4e5d-bf79-8f3e474df656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 7efa454a-64d0-4071-9725-c075e125e31e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 1681f330-666a-4411-af29-e024841fc133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 baeb37dd-642e-48e8-8d8d-58c1b84346a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6075;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #60 e4a139c9-082d-46d2-86c1-385e03aad2ed)");
unit.assert_eq16(16'hB6F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #60 b2e9660a-a7d3-4106-a1c5-c3e538684902)");
unit.assert_eq16(16'h6075, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #60 bde3268f-cb58-4207-8493-298dc9ccc2cd)");
unit.assert_eq16(16'h0B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #60 0aae4e1a-f0d2-4176-a6c2-e59747d5d8cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 a1360589-2db0-4acf-95bc-57bd57d325dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 a477cc78-8151-40ae-a9c6-a1513c0d2b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 56ad71e4-0841-41ca-bd57-505efff9edd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 8eedf0d9-ae53-4c71-8718-5345f2d505bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 611edf04-9bc7-4470-a015-d294d02277e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 cfe0ed5f-0107-4199-9c2f-5726b965a282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h07C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB2F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #61 48f0237d-b22a-47b7-b033-ddd74d455d0d)");
unit.assert_eq16(16'h02C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #61 c5448ada-8826-4de5-93d1-b44554b2159b)");
unit.assert_eq16(16'hB2F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #61 a8eace58-56f7-4320-ac7a-bd742992a132)");
unit.assert_eq16(16'h04A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #61 56b42c8c-c5fb-4c2d-afe2-65112cb6ace9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 7e60bfb4-7435-4025-9474-901b5c9690d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 1bbd1fa0-594c-4ddb-9953-76018b6501a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 c03d114a-9b83-47d3-aff3-29409a71d221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 f00f2c13-4c2e-49f6-9d1d-435179e0c7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 a26ec57d-10d1-4dd2-843c-814cfe18500a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 1b403ad6-15ac-4fbb-bff5-6a759fec2bd5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0382;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #62 bd374ede-5c9d-419b-853a-ffb3bf83939d)");
unit.assert_eq16(16'hC145, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #62 8d4b1f43-4118-4b89-bb41-696751cf667a)");
unit.assert_eq16(16'h04C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #62 bcf71f2b-0687-4627-8a61-a46a59931721)");
unit.assert_eq16(16'h0382, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #62 fc34b0eb-20a1-4d05-999d-e62061196b7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 7778729d-1991-4b91-a4ae-06c79feea4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 6e26783d-1b7f-40cf-b8f4-4654d131d67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 2b03deca-71e7-4468-92d1-361f9aad1b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 9a39653e-0b19-4bdb-8263-221fc7f5a141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 28a07a80-c829-45ba-a1c0-e0c9c9a05fa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 260390b5-8755-48ac-bf60-2e6276cbce7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC799;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3870;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0912;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #63 03c5b4de-0f18-4962-ab7b-6bc6c282de6c)");
unit.assert_eq16(16'hDF99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #63 8d4f948d-ce98-432c-9b90-e979f8a98501)");
unit.assert_eq16(16'h3870, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #63 7c791c73-80af-4a3c-83c7-c94a206ea3a9)");
unit.assert_eq16(16'h0912, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #63 2676da24-e923-4e68-80b0-9af2b7d5f5cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 07f2a3ae-de42-4d32-b920-6d9af7b20353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 1d46942c-b419-4cb7-8700-27a6ce77dc8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 e74b602d-a7bd-4a11-9512-8a65ccbdbf44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 537c5ff4-91af-424f-ab73-1f04fef59bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 b6c8f562-fafe-4cac-a1f2-90e0319b5da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 23a50d7b-94e0-4aff-88e3-6083508719bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD454;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0458;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #64 a91aacaa-8f49-4475-a429-fdf4c70f0545)");
unit.assert_eq16(16'hAA78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #64 441cfaac-019a-4f82-b829-eae7437c463f)");
unit.assert_eq16(16'hD454, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #64 490b905c-1acd-44f1-badc-7e2d69d98244)");
unit.assert_eq16(16'h0458, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #64 d1846631-b84a-4a64-ad52-280f2f2e079c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 a0eaf25a-d4d3-457d-a9f5-1e56faf2c4c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 c6120097-9641-4743-a663-dd4df3273208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 af3f0cec-7b54-49c1-892e-a17abe92f4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 d3d680cb-1c0f-40d7-b57c-2e0421c6571b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 6e07ab23-f4a7-41f4-9371-906757bb7edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 f1af66b9-63d9-4b20-b195-71d6a01e7411)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCEDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCD1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #65 2ffca1e4-2ba5-46cd-8d9b-620487a5ed61)");
unit.assert_eq16(16'h2EDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #65 2b182637-56fc-4fa9-93c0-44e511d4619e)");
unit.assert_eq16(16'hCD1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #65 fda3e4b2-5f51-4984-bb03-74c866b584ed)");
unit.assert_eq16(16'h01DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #65 1d5c2735-e77b-4f06-8d47-ebda607bc82e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 e7630765-3570-476a-b1d2-e6b758310ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 7c547d6f-cca7-4e78-8924-6cac0e8a843b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 16be0c87-9f3f-4092-982e-0f6b6b60f875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 3b77959f-4616-4b77-95c6-4247227fbc32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 6795a476-6901-43d7-ba3e-22e913bafde6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 975a99fa-96d3-4ae9-a5fd-2d0459e13c1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8449;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3A70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #66 c973307c-1cc5-4408-9658-0b86dbff45ec)");
unit.assert_eq16(16'h7949, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #66 a2dd0700-f6e7-4427-a43e-541cd2c1033d)");
unit.assert_eq16(16'h3A70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #66 84379cfa-e7d5-4e02-a880-ae46574c6b8d)");
unit.assert_eq16(16'h06AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #66 e3ef3de9-00ae-429c-8b01-e16ce6f93299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 5be05b4e-4d39-4b44-8961-5c66677da6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 c5ea293a-d3a0-4ec3-9d66-b4196abeb4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 1dfb8419-09cc-4c57-aabc-38681875bd70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 9cabeb92-95b6-4ee1-81e8-6632182ce87a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 90c445d5-e16d-4460-8e3a-6cedaf8f4cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 81457450-3716-4666-a16e-a6ba294d77db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0327;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA5EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #67 60511d8e-3229-4a15-82a7-83a914c737c9)");
unit.assert_eq16(16'h1A27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #67 ce7396a0-895c-403c-9502-e612bb469f26)");
unit.assert_eq16(16'hA5EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #67 2c8d00d7-5f1b-487f-ab5c-70c677613635)");
unit.assert_eq16(16'h00A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #67 8b3d8b9a-22ec-4ff6-be31-dfbdc53588b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 bbc46f76-c91b-4417-9914-0f4bdaf22140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 cd1eb1db-6dc5-4085-b394-d63db3066042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 89c985e0-3bb9-417a-a69c-2304058959f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 2d64cbc2-29a1-4523-80ff-9cfedb78da6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 36616aca-8b48-43ab-8cb5-6de8ce341068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 a8b4135b-f455-4f9a-9694-40a61ffad1ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h091E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0273;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #68 b3b5413f-de0b-4706-b1ac-c0c1b031ed40)");
unit.assert_eq16(16'h99B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #68 e74a08a5-a950-4509-9f8a-7e06a83b41a3)");
unit.assert_eq16(16'h091E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #68 2f0d8688-6bee-4e9b-b188-e3a7ca493f9b)");
unit.assert_eq16(16'h0273, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #68 8fe413d3-7a6e-46ab-bcd1-4357dfb9aa7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 a628dc62-b23b-44d0-aac2-448d1ad2e04a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 47ad1c84-b615-4cf2-8773-9b22745d67f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 9137cd89-1a21-45ea-8df8-af2e09c05953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 f074193a-795a-4190-8ad7-10072a025857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 63efd4a9-f7b9-4914-8086-c7ebafd85443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 7ce8d9f7-ecea-4f14-bfce-3d77f467e53e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E64;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC146;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0754;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #69 fed9534e-1cf9-4464-99d0-39225775425f)");
unit.assert_eq16(16'h9B64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #69 64c16360-eee6-493f-bcf1-d3fa3524915d)");
unit.assert_eq16(16'hC146, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #69 4e4b712d-6449-47c5-84ce-dd63f2990183)");
unit.assert_eq16(16'h0754, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #69 fe0c2057-6654-4264-b8e0-f0d50272d1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 73c22336-c3c2-40e1-b3f5-4cab87d8cd0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 8d0699e7-91f0-4ad3-a39f-a79cfb854d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 e7c9dd36-360f-40c8-87c1-1644c1c1fc69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 43000f7d-af3d-4d10-a101-836ec02a971b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 4ec61fd0-c348-4a1a-9330-afe4ad1e1b2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 b2ffe922-3754-44c2-9013-fde7d701c58e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD04E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB62D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #70 632dc152-a8ed-4c94-a77e-382bc58e1c44)");
unit.assert_eq16(16'h074E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #70 38a1dbdf-cea9-4dea-baa4-14f992d29922)");
unit.assert_eq16(16'hB62D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #70 7f8a8774-8494-41f7-b913-767470f9d06a)");
unit.assert_eq16(16'h0A1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #70 c32ecca8-1b1a-43de-82e0-462f4ba51d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 887bea70-4abb-46c3-83fa-5b4295740c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 3999bbb3-b874-43c7-a2a5-9432fde378c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 0e9e7d93-99a3-479f-9bcd-20454ae0a9c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 4d21d826-7e11-40de-afff-44027bd2d5a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 dbae052e-d32e-4816-94e9-61d8d8bdc4df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 9a5610e2-4dde-4ea9-a204-89860e3ae417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1F26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF641;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #71 6831ec2a-7f7a-417c-bd01-b1a835134bb0)");
unit.assert_eq16(16'h9426, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #71 a2dce955-075f-4325-b8e6-a5e493e4ca6a)");
unit.assert_eq16(16'hF641, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #71 c87373d3-cf24-4563-bac5-77091178f319)");
unit.assert_eq16(16'h0CD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #71 657856c5-16da-4aca-961d-591981547099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 9976db2c-3fce-400e-9b9c-74d506dc8674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 cb5766b8-90ae-41ca-b704-046b139ef025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 656c6ca5-e7af-4e23-bf17-afaa462b6830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 e7065138-7310-484a-a700-c90052db4f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 1ced544c-bca4-4a05-92cb-78c8bf59c2be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 30b1d81e-0f18-4de1-a583-98fd1f137fb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h201D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #72 28c15bbc-2141-477f-a651-5c1b9d708d30)");
unit.assert_eq16(16'h1A1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #72 0294885a-0e0b-4a44-b811-51d678a456ba)");
unit.assert_eq16(16'h5E17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #72 47e6be15-c6a1-4160-befe-eb4e5577386b)");
unit.assert_eq16(16'h03B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #72 d88d3feb-8c5e-45e2-9c84-2bbbc0192f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 73b7dc56-9774-4733-b2f2-84685bc31fcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 eaafc418-abe7-4e30-84d1-594089c3a892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 ea82d650-2d47-4196-af04-b6efa760befc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 123f5cdd-0a15-4c4d-a496-4ee7e468b5e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 0a3ce908-508e-4857-a518-f879a3f978b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 dfb5c0e7-8497-48fc-828b-460ec81f3e88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC450;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #73 1bce66b7-e0bf-4b57-9dc3-98ab7a02d4d1)");
unit.assert_eq16(16'h8F9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #73 c753e57e-fbf9-49a9-8df5-d6546fe11e09)");
unit.assert_eq16(16'hC450, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #73 6d90abc8-6d4c-40cd-9e72-a5c67e681fec)");
unit.assert_eq16(16'h03D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #73 b8ddc5c3-e34b-4250-a912-87ebd65a1b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 445a7a89-04e1-4caa-bd0c-50b1c7f48264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 785eebc7-6db6-407f-be58-37bbcb2b70e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 74993c9d-5bd7-4241-b2bc-12f7d97e24a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 65e19b47-1d39-4504-bafb-abff6dfe32a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 3870ab25-6e8a-456c-b2ea-0c230407b753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 d5ab2193-779c-4c05-b533-e318bf61f5a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEBC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0939;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #74 697dddbb-4954-4cc1-b576-8e1a9cc1be2d)");
unit.assert_eq16(16'hBCC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #74 5aeb7131-7287-471a-a11f-80bf75838df0)");
unit.assert_eq16(16'hBDC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #74 792c83b1-480c-4cbd-9d61-c1d06753853f)");
unit.assert_eq16(16'h0939, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #74 5008c87c-0ed7-4a72-a8f3-dc9e3262abc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 dbc55678-9fc7-4103-9869-1ce044e6b08e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 73ee5f82-38fd-4200-9557-a322e8c01030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 63919070-9587-4dfe-a305-61d6a3df2f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 0188bd8b-d277-40d8-9976-f8076469eeef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 632941f4-553e-4a1d-8233-cbccb2399e1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 85df4aa1-d2be-4147-9d1c-9a4aada76e08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hABBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h146E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #75 4c85867f-feaf-4a2d-9af0-1a7b09598f79)");
unit.assert_eq16(16'h8ABF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #75 4885828e-8a8f-4bcf-9082-6258dc4833ae)");
unit.assert_eq16(16'h146E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #75 89802d84-7106-453d-b3bb-0e08209bc792)");
unit.assert_eq16(16'h0B19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #75 70ba3376-4512-441f-ac3b-214001bdc948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 7f076c35-fd23-420f-b320-777ebeefc9ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 f839e04d-1cd3-4b34-b084-d32c078a7125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 2dfbe77a-4c9b-4a4d-9a94-0b164b1b1fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 c397d0d6-bb07-49c3-9ba9-1c2c69aeafcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 cf3fe531-5b5a-45bd-83c1-903b759f3a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 dad1a9ce-783a-4700-99a6-22190947d961)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF114;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #76 ba8b1288-5e2d-4b52-b464-e54a3a3b6cb9)");
unit.assert_eq16(16'h781C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #76 a00c38f6-bded-446f-b48d-9e1e90d5b56b)");
unit.assert_eq16(16'hF114, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #76 a9e4cb57-c1f9-4fd2-a026-9cb413e370b3)");
unit.assert_eq16(16'h0694, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #76 81c660ed-a810-4e49-abb5-0b736817de1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 b5fb926c-4cf8-4f0c-b3e6-0fd36544e951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 34be1456-3e03-4b9d-83c7-6d639c601ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 9db564e0-dfa4-44bf-b770-ca8d1596aa29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 b90ed9c8-f17d-44c5-82bf-9c56f037d13e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 3955897e-5c89-4fbf-b7c2-ffb407c7c910)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 11c84a80-7d1f-4c23-aa3e-6adde57390f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #77 e582c69f-9c41-4bf9-8dbb-1aba463e2884)");
unit.assert_eq16(16'h699D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #77 f232eb1b-089f-4ed6-95c6-21b4d6cf7404)");
unit.assert_eq16(16'h80D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #77 61f05d2c-e360-4dd3-a9bc-0355a2a48e56)");
unit.assert_eq16(16'h0F03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #77 efff45d2-9faa-4242-837d-1f3a8b80b8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 23581a43-9080-4c09-abf6-cfe38017af4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 28b9b3ce-625a-4b06-ac18-af6eaebc5416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 d1a67535-e024-4d73-a05a-2d91841cba66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 0643a2f7-7831-4168-814e-11ad148be1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 e855f34b-5d41-4bad-b1b9-1c9a60880fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 51dc843a-6b74-4d05-b4dc-5c0b8934f6c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0896;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC09C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h026C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #78 666001c9-2de9-4972-8d74-a1e28403e1f2)");
unit.assert_eq16(16'h0B96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #78 5cd025eb-1aa1-4570-b559-516102a35ced)");
unit.assert_eq16(16'hC09C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #78 27848377-c610-49ff-96e7-93006a68dbfd)");
unit.assert_eq16(16'h026C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #78 15ba9431-49b1-4e97-9a7a-cb5c0894b308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 498d2a08-12c1-468a-aa16-c29e1e0f0b7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 5ea1252c-481c-4f1f-9ff3-76a5c385c50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 7d8c9458-3d45-4f28-8ae6-3e9a4aeecc96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 1d5cd3e1-73b7-4ab6-93e0-18c1676d080b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 df435b12-ba62-4d85-8339-78814994f0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 e4cdeb0e-4c0f-4a70-b75a-2891bfce5570)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #79 0ec17a0f-df79-4221-b8b5-aee4c94610a2)");
unit.assert_eq16(16'h5EBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #79 20145a10-acdd-49b5-975c-f2a5911f170f)");
unit.assert_eq16(16'h41A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #79 fe3ee993-e49d-4122-a8f9-81122f366047)");
unit.assert_eq16(16'h07D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #79 2183dcb2-170b-4100-bf56-89616fd39805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 7f4d2f3f-a267-4479-82d1-74c84c78bb73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 529a7399-1175-4156-ad75-83c5f67bc8ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 a57729c9-85cb-429c-8023-ee55fc1737fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 d28c78ac-1dd9-425c-95f9-ea56215bddf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 e92c4f50-e757-4b6a-8d2b-ba3554a8d2fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 f8343776-1de7-42d9-8d41-7e92ad669fbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h69C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4B83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0333;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #80 543dfb35-e98f-4973-9864-1a29b2744de4)");
unit.assert_eq16(16'h67C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #80 761c99b4-d85f-4ddd-aed2-3f30ade03bef)");
unit.assert_eq16(16'h4B83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #80 e51cdbe0-41ed-4866-8eba-eabd5d02fe61)");
unit.assert_eq16(16'h0333, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #80 047e9723-b9a7-4289-8380-096b2fdf7460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 a8206ccc-e2fc-4fb3-8353-f619740c1f6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 7feaa39c-76a0-44ee-b905-a8b5dd691fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 4ded5521-04ae-4878-b450-9b9175c20262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 aeeacf2b-6de0-495c-a2b4-91dfa6b5eef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 1f6079d6-9320-4f1e-868a-8ad40af4b41b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 0d73761f-f579-4b9e-a787-67e1134f84c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB050;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA939;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #81 7dadfc51-3324-4d5b-87c5-008436ceb7ca)");
unit.assert_eq16(16'hB650, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #81 892dfb21-5b74-4c49-bcf1-f746b385f184)");
unit.assert_eq16(16'hA939, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #81 bb8ba7a1-973f-4e73-837e-ab1fd3609457)");
unit.assert_eq16(16'h0B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #81 878f61fe-2b07-47ad-95b1-8012f02796ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 f5dcef53-f53d-4e27-9e48-c95f0e4fce99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 a0c27f0c-49e4-449d-9acc-759b1cc0520f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 3ad68810-b688-4769-b7ae-0bff2542df5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 fc566ea6-b90f-47a0-9d50-ca1325665cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 13935efc-aed8-4e87-b2a9-1b2a93da7eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 27b17537-c560-4114-b4da-b54f81e6a456)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE9EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #82 7c1f97fe-0486-4516-aa29-4f3571f79602)");
unit.assert_eq16(16'h36BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #82 9e674619-373c-473f-9ca0-7a0323422615)");
unit.assert_eq16(16'hE9EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #82 d7cc44dc-11bb-4832-bb25-ecb4b3a63fc9)");
unit.assert_eq16(16'h08FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #82 6df7b7ab-cad7-492e-a953-adfe0e70ef8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 af8e56ed-d9d6-494b-8586-4987db002007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 d950c157-ac62-464b-8f1b-0d644f7e7b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 54c1a795-6ca3-41dc-9dee-0f9abd53ea33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 60029dc8-d139-409c-add4-d2ebc9cef7ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 de2d9d19-718c-4064-9988-ee45f1ee3de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 6964e98d-f90a-4c35-9446-618bbf2d589e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4EAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #83 8dc90dfa-6f1a-4b6c-bc91-41c8675259cb)");
unit.assert_eq16(16'h19AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #83 10a5b700-f157-4b39-9f9e-a75b2548c62f)");
unit.assert_eq16(16'hCB1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #83 982eb4b3-1842-4cdd-b4a7-2af08c8ec4ee)");
unit.assert_eq16(16'h0C25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #83 f8d5ab21-77c6-4c23-9de9-ac5207a35944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 159639d2-a157-4d7e-8544-37522ce2e861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 98428e27-7419-4140-96b0-50c8ed6992b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 8c50e7b4-b01c-48f2-a99b-8e9426faaf0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 c9f2269c-5a04-4f0f-8ba5-97f92db43a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 ae59b2b5-0d5b-4a46-8647-1ff78b621b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 1b644d6a-af83-4469-a5d6-b10717e19db6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h402E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #84 3293b8e5-a355-4202-8083-5ab8328f65d0)");
unit.assert_eq16(16'h70FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #84 2b97689d-f4c6-424d-8ebc-c50a56ce48a2)");
unit.assert_eq16(16'h402E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #84 a8aea9c4-8888-4fed-9f90-cee287469413)");
unit.assert_eq16(16'h0A8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #84 3debc478-b0cc-4f5a-b43e-4bb38480f5af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 7ffea754-847e-43d2-ab14-c6d2f88770be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 296297df-e35f-4433-890a-025a7f8df1ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 14eb4120-2da6-46f4-a11d-e4b24afe54a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 883a5bea-ed3e-4c7d-972f-99ab1a4854b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 17c5ff59-6b0d-4b97-9867-7aae2df502a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 65526bb1-f4b0-401b-9921-ac51cbd8c7b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB3C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #85 ba32f68f-e872-43e5-967d-6d7ce28a9831)");
unit.assert_eq16(16'h6774, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #85 54b707e0-ac6d-4927-9dc8-64e523ddb3fa)");
unit.assert_eq16(16'hB3C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #85 a6fd258d-1415-4ffc-a4b6-aae1595dd9aa)");
unit.assert_eq16(16'h0D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #85 5c3a951b-0bc0-4e44-96ef-080f664d634a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 ab175e0d-aeed-48d7-95a8-60efd8813db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 b7108704-3451-4eb9-afc0-e8d486f046ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 09c0be38-3928-47a2-8f2f-faf2f6ca9ee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 081d2048-0261-4709-853e-eb007e773aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 bb8d660b-30fd-462f-a9a8-3e546a5e8ab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 005a8d0b-781e-48d4-954f-c3157b023687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE211;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h046D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #86 45c637f0-55cf-4e9c-b86e-f55b297fe86b)");
unit.assert_eq16(16'h1411, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #86 c0002020-d793-4166-affc-d4e3f8e66b93)");
unit.assert_eq16(16'h8C33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #86 e17234a2-c404-48a6-8de9-becb4e794ef0)");
unit.assert_eq16(16'h046D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #86 d95574c9-400e-466e-a5ae-64c1d8c7fc73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 24697dca-2092-450a-a8e3-3bb1159385a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 2c58ad0d-393f-4bcc-a9c3-1279110c79ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 fa31e43b-68e1-41c0-b8b2-659f3d3fc6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 a6b1b6a1-2a82-4dad-bbbd-b82bce6cc6d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 c150eb06-9b2c-4406-81db-512a149719c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 ba1f4a1c-efd7-41df-9be8-6b26b8cefa46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE292;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h111C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #87 d9b13501-c071-40f5-b871-18e9cd6c442d)");
unit.assert_eq16(16'h8992, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #87 f003bc64-8c31-46c8-aa17-966ef784a910)");
unit.assert_eq16(16'h111C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #87 4cc3e3e5-8945-4af9-be94-2e1dde7ad1dc)");
unit.assert_eq16(16'h09CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #87 2f4448ae-cf15-42fc-b3f0-a10d1d20515c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 bbb7aaf8-fe9e-41c6-821d-ab8e05a9d574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 c46006b1-0562-4b6d-ad3d-9ded0009231c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 c2c6148f-c9c4-486a-8a5c-219cd2b9be26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 e87816c9-0091-4a6e-853b-73d1b0cf419e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 6d14497c-0040-46cc-bb1d-5ffba422fb64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 ffeed1f1-ef3b-4450-b0b7-5ca6fa58ae36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0663;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #88 a536a266-8b12-49ae-8092-5b66848ac26a)");
unit.assert_eq16(16'h80A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #88 b2a16172-52d1-426f-8f5d-58d0ff80bbe2)");
unit.assert_eq16(16'hAE2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #88 6d7936b5-06e2-44a8-a27b-7ee52226e115)");
unit.assert_eq16(16'h0663, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #88 61c64555-ac20-4810-8ece-167c115683d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 4d168ef4-bb0d-43c6-9d94-cfcf6141bb46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 e2c859f2-644a-44c9-8868-ffc4630fb8bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 0307ffb2-7f4c-4027-a480-0ac47dfbddbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 c4539d06-e5a6-4010-be8e-81f86245368b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 613272d7-24dd-415f-8810-67e79f2b65b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 5b0ae9d0-5fc1-423a-9a12-62d8ee4b996d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE6CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #89 ce7f83c4-fc1f-486f-90fd-21f743b22d61)");
unit.assert_eq16(16'h0AFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #89 b680aedc-5b0f-4b85-a66a-8fb38848be51)");
unit.assert_eq16(16'hE6CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #89 74fd5867-742a-4449-8a9a-d283a41fba3b)");
unit.assert_eq16(16'h0FE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #89 4c38e144-3ed4-49a0-b0b3-e1a8ec34d093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 37ffdd45-5a96-4ce2-8657-ee29651bdab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 dcba0259-1d84-4a9a-a8e3-02a0c4ae8900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 180f69ac-d462-4231-b2e1-a291c1a5006b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 ec71fe06-56d9-4679-a5bc-72b4c7b5dc1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 2a4d6f8b-cba6-4b46-92e3-bde23292c8a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 5889ba73-e26a-4d48-af0e-87e2aaf2240b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7680;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h475D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h044D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #90 8f03d18c-93b9-4829-b776-4e2ebd30c111)");
unit.assert_eq16(16'hEA80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #90 2cf7b933-d872-4410-b49e-27c06c7cc06a)");
unit.assert_eq16(16'h475D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #90 c6a1c328-35d5-4c11-b516-30727633543d)");
unit.assert_eq16(16'h044D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #90 1bbeeb4d-9533-499b-9614-954f6e73df91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 1f141fc6-8331-4ee8-ac9a-c3c7f706e4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 235c89e8-753e-4f9b-aaa5-b3f342e76efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 3ba10da1-c420-4d76-9f82-79c68273668c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 52cc773f-8b24-47b2-9069-fe8a3c695b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 c0de1ba4-94ca-4ecb-a67d-726174f93909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 0dabab7b-e720-4557-ac76-fcddfea21d15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h68DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #91 e096e74d-5e58-421e-8262-874705cd47a4)");
unit.assert_eq16(16'hA6BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #91 a07c6076-cf64-4fd6-97da-4e6af0224129)");
unit.assert_eq16(16'h68DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #91 1308a18c-a406-4e42-893d-e1326e0c534a)");
unit.assert_eq16(16'h0C90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #91 ddcecc00-3a51-422a-bfef-4b6d0394f5ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 5d920c65-ae78-4d5f-9ad8-4e7ea702a0bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 96219639-31cd-4874-a158-2f2542c58771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 d60c5442-0a19-428f-a02d-77a8c3cd93e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 579adc33-1ac0-44a9-b6e7-6f60af9ab0e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 5fd3321c-a638-4fbe-b6ea-d737ef83a61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 295f812e-83d5-4758-859d-28d81d895a22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h014F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #92 a636abfa-b1db-4ee1-8df4-87713f1dd75c)");
unit.assert_eq16(16'hCAEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #92 72681e18-4b36-42bc-801c-d4bf34f54449)");
unit.assert_eq16(16'hBD2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #92 9be4ed8a-9354-4d1a-af6e-de7e1bd1b80a)");
unit.assert_eq16(16'h014F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #92 ad2398a9-da76-4370-ba9b-dacd07182657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 14570efa-b803-4fe3-a409-53b2eb202b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 1ebe6300-b272-4dee-897a-b21e2466993d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 e2175504-4fe1-4792-9e67-1d9a870ecd14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 19a8c3c3-8d12-4240-b776-f1ab824560be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 a0065744-b7d3-4a7d-a4c7-2d7b4ca25680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 afa97e1b-df2f-4991-91bf-343475a01c19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h26C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5F8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h054C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #93 a9d13f39-9181-4399-af0e-4305217d1fd2)");
unit.assert_eq16(16'h9DC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #93 d4f5ae12-c8fe-4d43-bfc6-3b5948386ab1)");
unit.assert_eq16(16'h5F8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #93 18243127-c4df-46dd-83a6-501da0d9996b)");
unit.assert_eq16(16'h054C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #93 b94a1129-d382-45ea-8b87-3b0016787b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 8c70850f-5b04-4ad2-9e17-2426079402ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 597bb7b0-f86d-4f99-ba84-8459fef9c892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 7cde86b0-fbf8-47e0-9543-befef512c507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 97c25a83-77c9-482a-9376-a900b2f3f4af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 fa7b44c3-77e5-4fa2-9b13-c615100cb684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 e46691cb-2222-4a7a-a13d-98e8a8ec28ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB1C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0291;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #94 5dea7e4b-0098-4e93-9c68-d6152be72f59)");
unit.assert_eq16(16'hC1C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #94 6e51660b-6e53-4e0c-b564-9a007d097faa)");
unit.assert_eq16(16'h0F30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #94 2d4e9d5e-23c5-48b9-ba0c-3aa6d342a204)");
unit.assert_eq16(16'h0291, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #94 3c0056c4-9666-4d91-963c-59e4622adc55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 60aee4b8-39de-49e0-8982-044abfedcf51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 8b40cfab-814f-431f-9e0b-70b8a1d82d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 7527ca5e-42fd-4945-a084-30016ee33b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 25704548-8d67-41af-b93e-49d18fa7b628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 71064ff8-bec6-488b-9302-862fbd4413d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 1104def6-ced5-4f8d-a917-613ecab4c626)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7050;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6D9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #95 c16641d7-4730-4ac1-a934-62ba11eaa5a5)");
unit.assert_eq16(16'h8750, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #95 60e38bd3-78f8-49e2-a542-747e141b489b)");
unit.assert_eq16(16'hD6D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #95 404ad752-51d1-4963-ba29-a8559fe273e9)");
unit.assert_eq16(16'h0D42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #95 bcbb36ad-11fc-4255-bf87-4a52c0118ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 ae0fcf1e-8e38-433b-912b-a62a78d095a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 4251fbc5-da32-4d33-afd2-7b8fda994d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 9c69743b-da30-4a24-b158-c87b139627aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 136a9289-d49e-4b6a-9107-0ed8463c2dcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 d46de054-5f51-4151-b353-435a3e1d08d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 6e98090e-8dce-4533-978f-8947bf57f2b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCB47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h611B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #96 7bb7b785-f7e5-4f08-84a7-39e660237842)");
unit.assert_eq16(16'h7947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #96 c0302b9a-0290-4469-9e38-3a09a24fad7d)");
unit.assert_eq16(16'h611B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #96 02a888c0-5b7e-4348-8d28-fa9bea54cd05)");
unit.assert_eq16(16'h06AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #96 5867fb4e-4bc5-4fdc-ad09-d1e75cd6fae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 9773bf3f-53a5-41d7-968c-0e4e159226fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 4385f0b9-bd38-4e64-bd43-20733ef629c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 19a7cf75-57a9-423a-9797-743f406f72bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 fc2250b9-67ab-491a-9166-0833e869cdf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 233e0202-fcb7-4d0a-92f7-626c810a96fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 2c0c74ba-6389-4fff-9fc7-e38d12361948)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3AD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h28F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0569;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #97 068301cb-4526-47dd-9f5c-42f287d12835)");
unit.assert_eq16(16'hC6D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #97 19c621e2-f26d-4c64-b728-b6c642c1ff11)");
unit.assert_eq16(16'h28F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #97 9c7a9292-4dd8-4cf3-9e7b-76ecbe4a8b7a)");
unit.assert_eq16(16'h0569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #97 55a2f788-864d-487a-aa8d-f35430bea71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 fb2cd521-1815-47b3-a808-bd6d920b33d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 76989e82-e84b-4f47-9776-d957bfbd05a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 3de6c1c9-f6e1-4037-a2c3-4eb2e1cd1f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 9e5813cb-7621-4d76-907c-cb12a9c3d9d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 30ccd6a8-8a9d-43f0-aab1-39db98e3960c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 2807e5c8-9d49-493d-835e-9e7957c5e865)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD7DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h088A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #98 03847190-5dfa-43ff-855b-5d20b1e29a0b)");
unit.assert_eq16(16'h99DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #98 e957f73e-37ad-473a-b474-73ff1d7730f5)");
unit.assert_eq16(16'h0C99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #98 0e343046-7ec3-4a0f-90de-138200cda3d7)");
unit.assert_eq16(16'h088A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #98 502c8547-05f9-49d8-be07-da086432ce5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 99bdf1dc-b229-4399-8ef3-66cf9c23d4aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 6bd4d6b9-f71a-4ced-8d99-6a39c2d7d861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 ccaf4a25-5ebc-4ab7-a016-887d09776764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 77aa25ec-74f2-4f4f-8837-8ee8bc9b9634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 9a588923-d358-4a8c-9115-b0e145c5eba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 91bdd63d-164d-46ae-bb28-e57857476375)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2583;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #99 27be2a7d-ab46-4f84-85d7-d7381bc02380)");
unit.assert_eq16(16'h5FE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #99 166a3f37-aad7-455b-be42-419ccd5239d2)");
unit.assert_eq16(16'h2583, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #99 bbc0c05c-7688-4d28-b4aa-cbde4d1a07ef)");
unit.assert_eq16(16'h0FA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #99 eacf42e1-f5d9-4ce0-b7f2-5e3a925b9bbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 5cc7f068-a0e4-4c2c-8f6c-71ac61e5be71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 130959c3-9444-494a-98e9-9d2f07d81cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 b1f5517c-ae81-400b-bf39-d7ba2133d561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 66d7f5ac-a5b8-4dd1-a74d-f3a352c6aaa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 4ff78b87-e561-41e0-b82c-e3de36978e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 489bb579-82b9-4bfe-a0e5-22a7bc55de77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1AB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B2F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h091E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #100 9116c487-a82e-4d7a-87a6-73457cc1f191)");
unit.assert_eq16(16'h8CB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #100 c26af52b-e241-4031-82da-58b9795b35f3)");
unit.assert_eq16(16'h8B2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #100 8f29577c-d122-4b5c-af05-fd5c23689d02)");
unit.assert_eq16(16'h091E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #100 ffcdd696-0fbd-416c-ae69-a44577d7519b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 ec71ea37-5612-42f4-b376-c8a9da419ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 4726e16a-a199-4cad-abdf-9a6ae4e1dacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 43520dfd-72ab-4a6a-89ba-0551d0a142e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 907f4e53-bb77-4e6f-9724-6f8bc11a52a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 b3962c0b-0419-413c-a3a4-86e6e9623454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 fd6d8411-d5ab-4394-a15a-dbfa237f2844)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7657;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFFEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #101 71003248-8ec2-4149-86d5-455cea7c4046)");
unit.assert_eq16(16'hCA57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #101 44dbbec6-2b9d-42e6-bcc9-3ae3b5e6cafb)");
unit.assert_eq16(16'hFFEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #101 f0df9ddb-b15f-4e7c-aeda-57de02b90b29)");
unit.assert_eq16(16'h0E78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #101 36d5e497-8ba0-42ca-b014-1355d63b2e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 2186bc4c-32c4-4ab9-93ba-009f7ed2cfba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 94290e96-08f3-4059-8568-e4b7682195bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 0a86181f-690f-47db-9854-cd248da0b055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 660e1056-2de4-4743-bc0c-f43ab2c2d755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 3a24fd99-ec3d-45b1-9ab7-06e4a21a33fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 14647536-75d3-4adc-be0b-e0aa5806aa57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h557F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #102 7bf37a32-b2c2-441f-84bd-e0f66cf4b5b3)");
unit.assert_eq16(16'hC51C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #102 790d0bde-a53f-4d03-a5bf-cab8953e48bb)");
unit.assert_eq16(16'h557F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #102 5c1834b9-7fdb-4637-84e8-d17b2416b102)");
unit.assert_eq16(16'h0E13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #102 22a1a26f-19db-462e-96db-f3a83038dffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 830ee66a-93c6-42ab-8e36-3716b21aafd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 f4e6f185-cb1f-42b1-956e-d4053b583254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 babe768c-3a8a-46c9-9d9a-e30724961f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 b21a98a4-49c5-470e-92d2-19c49147f61a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 f6753497-6376-4e75-a38a-505a9274b2bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 bdb90f0d-a6f8-4bf6-aa43-b1b942f322de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3CAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6A4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #103 e5a27be2-b5df-4c2a-a8e2-389f57b9a8ac)");
unit.assert_eq16(16'h1BAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #103 de4c384c-94a5-4721-88bc-08fc2c67bf6a)");
unit.assert_eq16(16'h6A4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #103 01bd53d4-dd59-486c-b5ba-f95af4527222)");
unit.assert_eq16(16'h06C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #103 c35c01bc-8c5f-457c-8816-224e3c4e76e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 2e27f996-4343-4d1d-803a-77f3e12462cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 1ac594fa-244b-489a-9dd9-ba8c3cbf78f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 fe9d5065-2e96-4d0e-a1ef-82c95255a50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 f0841c9e-b174-4281-86f6-2025970e7157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 7237dab4-f907-480c-99d9-c5fff543c207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 3bbc7dde-c2db-4d72-9c8d-eae961bf87b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFFC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #104 4de90f46-3fc6-445a-b233-77e94cb43f12)");
unit.assert_eq16(16'h7AFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #104 a113e5f8-a026-4e9d-8851-20cc52743da7)");
unit.assert_eq16(16'hFFC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #104 f079123d-936e-4f74-95fb-1a54293b9819)");
unit.assert_eq16(16'h0F0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #104 04864021-8bae-4c14-bfba-4f5ae0e6ae36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 e4d4d368-8741-45d6-bce6-c23cc2582da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 632f9c5f-57ec-4e12-8496-b04cc4a8c068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 75553faa-3163-49bb-8286-1d4d4b30d319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 1822d79c-b2d0-43ac-92b8-fafe90d5610d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 7b9aa965-9bae-43e1-be82-bbee2e83d630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 b2433016-de33-409d-a320-27d76bc66e43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3E68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBCF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0965;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #105 0117ee20-c92b-406d-8cc6-04892097aa7b)");
unit.assert_eq16(16'h3A68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #105 5e12ce3e-0114-4e46-a99e-9380d1142e26)");
unit.assert_eq16(16'hBCF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #105 dc4222f6-87fd-4b65-aeb1-979f9b993563)");
unit.assert_eq16(16'h0965, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #105 b55614e9-c86f-4bee-9714-f554407b0424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 5739ec7e-4885-41db-b13b-013e2d3c837b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 24b7b8ba-10af-4467-a6c1-b0e186002e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 bae53822-50c2-4794-907f-bc0b393d24e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 6160847f-bb2e-40fa-949e-e6d6c27204ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 872b5f69-9a1a-40c4-953e-eb581926ff26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 82cdbae2-4fea-47a1-b627-ac362e18d0fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB9C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF63D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #106 ccc6f659-b33a-4026-8c76-bb19a1800603)");
unit.assert_eq16(16'h0CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #106 2acc5299-6e19-4c9d-a617-cdcfd6dffff9)");
unit.assert_eq16(16'hF63D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #106 8c0272d5-00cc-4f37-8138-2b5f028c7aa5)");
unit.assert_eq16(16'h07E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #106 f1ed1f86-5402-4758-a1b6-232c258f2d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 066d3206-70fe-4519-969f-96b76587398c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 769a86f9-f03c-455f-83c6-ea8dde252dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 732c7124-2861-475c-8a91-0259f640b7e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 d9ee9076-b5d8-4446-84b3-9e4f09fd55de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 84bff961-0000-420e-b660-00c2d13139d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 d581389b-48e3-4664-b8ca-5a59e18b24be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1785;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h011E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #107 a222cbe3-d3aa-4d8a-9d19-219f1da0a157)");
unit.assert_eq16(16'hA6E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #107 25670737-a451-4f27-a65c-5109b59211ad)");
unit.assert_eq16(16'h1785, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #107 715afab7-588a-4d8a-b1d9-449626cf1bbc)");
unit.assert_eq16(16'h011E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #107 f6457f13-6f8d-437f-a5b1-6380c8cea66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 806d45d3-8c4b-493f-969f-146a727e0381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 d22b32cb-89f0-4ae6-a343-3dabf58af02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 2accba6b-a9d8-4a46-b16e-b73b393996ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 095c220a-3142-4e8f-813a-392b2f8ff137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 52e71a11-c38e-408b-9aee-6de24cd7fda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 ac06128e-da18-476f-a509-1d274890b074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hACF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h82CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #108 b7ee7f82-22bf-4f64-8667-c0d64932694d)");
unit.assert_eq16(16'h12F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #108 a2fd095c-2106-46f7-a611-6483781c8a6a)");
unit.assert_eq16(16'h82CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #108 ded7ab39-d74a-4471-a227-f8cfbd404e7f)");
unit.assert_eq16(16'h0A73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #108 d970e459-d235-4e0b-abd2-d7512d2276b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 c205268e-cf34-4e34-b68f-0db68dd2dfc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 58ce7537-2d2b-4019-bb83-49cf0aa91377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 06f166aa-b7d1-483f-ae21-6ad1211a3589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 a537ab97-c385-42e9-9cfe-bdd592876362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 5ba089bc-7fbd-4dfe-8e23-ed42873550e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 513cda1b-fc93-4191-9ca0-8a226afcf110)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3823;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7A06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0106;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #109 888fe0b2-2beb-4659-b1ee-0588588e8762)");
unit.assert_eq16(16'hBB23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #109 0fc782c4-3c0c-4d62-b26e-84212391c626)");
unit.assert_eq16(16'h7A06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #109 e61f4c77-e69f-48e9-906f-17f19986737a)");
unit.assert_eq16(16'h0106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #109 3fdab1c9-04c4-46fb-a345-637ae7106f04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 140c65fe-2a85-42f1-9465-422869ff8475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 d91e730d-6443-4a65-8f92-cbe188a59ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 fa7c57bd-1a59-4a1d-b700-29ec282a7320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 93faa7cf-d5d0-417a-ab9d-0519928690ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 36d86ab8-8ad8-4f52-802e-2912ac240ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 a3594569-b093-458f-87b8-b32dfc1b8b07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0232;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #110 a3cd630f-1b2c-40a9-8c5c-32a7c11b5f8d)");
unit.assert_eq16(16'h34C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #110 44192190-5f6f-424a-942c-e4e971f9f24f)");
unit.assert_eq16(16'h80AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #110 5024d16d-4484-463a-a05c-9c3c44dc5c05)");
unit.assert_eq16(16'h0232, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #110 03213183-d169-4b2b-bccf-d0d0869d3d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 8026f970-2927-4ac5-a59b-a757499bccab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 1e2eafee-e1b9-4f47-80e7-1ffcd111888b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 c0b1646e-6c9d-4056-8195-4996ce3cbaea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 7724df51-a2ed-4646-8bc2-6899916c4afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 f1c941e6-6d4d-4cbb-910e-03c991ffbdc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 6d2d268d-ff18-434f-8f3a-f7eb478470e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD150;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h839F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #111 7df8a579-3e93-4155-812e-07c4949c6372)");
unit.assert_eq16(16'hE950, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #111 4a7ee24d-692b-4b96-95ea-845abd4b9060)");
unit.assert_eq16(16'h839F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #111 c22994e2-cf56-43ba-8c69-b6bccf28e5cc)");
unit.assert_eq16(16'h04C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #111 d0c0ec2b-09ae-46c9-a276-ea288bd25149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 7d61afcf-e609-423c-bf65-62d337fb4a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 11fac6cd-b612-4285-95d8-952854760c9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 af0e34f4-8f0e-4c09-a071-73bbc8285341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 a00a1132-664d-4740-a1c5-6803d80deb29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 79549570-faa2-45e0-a39e-2aee086584d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 9e55a53b-e32f-4770-a5b2-f4cc05f0bd07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF60F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #112 76509ea4-4492-404d-9cef-71f953c5a310)");
unit.assert_eq16(16'h40DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #112 7cf19660-483f-42ff-bd53-01cc7482d5f3)");
unit.assert_eq16(16'hF60F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #112 89c7b2e0-85b1-44df-9e90-2bca2f8ccd06)");
unit.assert_eq16(16'h0132, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #112 1c1a06d5-3661-4bed-ab1d-0db9bcb8448c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 6ed9873f-714d-4f6e-82cc-7f92bf99ad67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 3ed323e5-e746-4c9a-a9a3-f462ddc1135b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 0b345aad-ae4f-4409-90e0-1bc216663992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 0546e7c4-dd8b-40de-87f8-3a1b22bcc76a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 4d72a3ba-1874-4bfe-80db-b3947cb68779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 fae5da08-b11c-4490-98d1-2366d29d16d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD27F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0895;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #113 f2b3654b-4681-402b-b285-249ab89265f0)");
unit.assert_eq16(16'h567F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #113 1de7a179-3383-4469-8917-25e289064c83)");
unit.assert_eq16(16'h9C75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #113 716a7800-0033-43c3-a10d-ad2dced5bad4)");
unit.assert_eq16(16'h0895, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #113 eda797e7-6895-4c93-b17e-39bf1c4d521f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 73fd1ece-bdc3-465e-94d7-fecf123a3e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 530ca432-994e-4246-beaf-dd1fa26466ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 d44abaac-09fc-4761-8584-dd2b1942367c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 ed8f95bc-066f-4ab3-bb71-9c49272bd991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 3138b9a1-31d2-4966-8a10-703140cb8aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 8742555b-752a-401f-9801-6848208755e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h825E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9467;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h058E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #114 483a0f26-9017-49d9-90c7-1cadc7ef966e)");
unit.assert_eq16(16'hB45E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #114 f88dacf6-d88f-4a71-a576-112a0625af2c)");
unit.assert_eq16(16'h9467, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #114 8dc9c641-3bf4-4383-a076-112fe2e9f830)");
unit.assert_eq16(16'h058E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #114 c9f7d126-aefe-4519-98dc-e492e28e2851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 fcde9312-56db-4fe0-93c4-8681969d8de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 13d2aa68-0f0c-4e81-9e62-d288b09fe205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 b259ecd0-df71-4bf4-91b0-d21a42ae0220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 3cef857a-8c07-4eec-a1f3-f0c435ddb47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 c94a2aac-b51e-4b9d-8fd3-6e0c4d31a196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 63dbc9c5-045e-414b-802a-f73c50c22183)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5507;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4DC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #115 402dd5f1-68a0-493c-a5a8-d4498486b20a)");
unit.assert_eq16(16'h9307, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #115 d97dc5d9-225f-48da-bcc0-a5011fba9e61)");
unit.assert_eq16(16'h4DC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #115 deb89c64-608d-4e7b-9734-87e69a40a8d8)");
unit.assert_eq16(16'h0BCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #115 f144ebab-60e0-4342-b363-ebb68554937b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 ae6a7c69-201f-4496-8acc-a8ee4f9bb177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 24123aeb-f2ac-4770-9062-b8a2e9597832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 8a795d9a-311d-476f-ba9b-fbe121891467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 178c1b83-aefe-4bdc-8d36-469239f8354e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 30de48eb-7be5-4d8a-b697-1817a17fa2e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 0b2b5a87-85a4-4197-86ab-22c077fa1cc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #116 92ce7470-54a9-4bc0-bb0c-61b34482208b)");
unit.assert_eq16(16'h21F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #116 b7991db1-016f-4d20-a2d0-65e9774d0393)");
unit.assert_eq16(16'hCF72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #116 b60e0502-6c44-4d85-8b29-b0de44174f82)");
unit.assert_eq16(16'h06AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #116 44405b46-3926-49c7-9ed7-3a691d495f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 c5b07b91-1ee0-4faa-8420-608c639986b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 e788c775-08e7-4720-8391-5e79dc6a194b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 557805c4-ce54-44e4-9e81-5e16b8b38b68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 8be33ec5-819b-4086-8550-ec02f843c225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 9dd7c386-bd3d-4105-ad32-4753dba5a816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 e5ddb693-8ff6-4002-a7f7-ce5494c1c40d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1D38;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFAE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #117 471ac8e8-6832-470b-bf7d-3fc790230d2a)");
unit.assert_eq16(16'h1F38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #117 dec98be6-d34d-44e6-a294-7a4f7a2b6d6e)");
unit.assert_eq16(16'hFAE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #117 54dd9304-9daa-43fa-b0a9-a16cffae9fa1)");
unit.assert_eq16(16'h0B9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #117 32ad65aa-9b9f-483e-8d42-4754c8a7347d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 7b49afda-365a-4e87-8267-a20255e19636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 69267d1b-f68a-41af-bc97-21b3151edfc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 3cddf2c5-d5fc-466e-8f37-0304642a0776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 e640fadd-b29d-457f-b43c-8dc455872397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 46f12a0b-579b-4e12-8ccf-52a3fbd5f519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 1660cf86-818a-400a-b31b-a46fc8b70d8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h10EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC151;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #118 79f8bdb6-7bf2-4863-8d9b-548f0fec1ac3)");
unit.assert_eq16(16'h74EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #118 b534a708-1936-4d73-a816-034640389430)");
unit.assert_eq16(16'hC151, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #118 44b33785-8496-48f0-8719-9617ec720fe6)");
unit.assert_eq16(16'h08B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #118 52ed17f4-8672-48bf-874b-c30d34b94610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 3cf5a290-a42b-41aa-8f42-677223d38aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 21e7b55e-d8c4-4a35-a3f0-1b4ae7313284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 a0c6d30d-99a7-4a7f-a659-ac859c0ca65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 5a467cab-2fcf-4142-b3ed-c741f5759ed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 82fbcae8-242b-4bc0-b6c4-0ed04ed7a884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 d39b292b-3b52-4912-a569-eaab07a89f80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0E8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #119 d1e93951-d713-4aa5-8cff-309ae43a5ea2)");
unit.assert_eq16(16'hBE8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #119 5f79eea0-2139-4b9b-aac5-2fdd2f4135b8)");
unit.assert_eq16(16'h6B11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #119 2e269d6e-03a0-428e-8558-b7cd63a0d0dd)");
unit.assert_eq16(16'h0A3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #119 18a82588-e7e7-4498-bdc9-ae0f39d0735a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 c7de70ba-a48b-481a-873e-f2dcf27e4d79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 209a728c-7e0f-4a4a-9571-c6075ea4fcd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 62eb40f7-df4e-4261-8486-7e5e0bb01caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 1058ebfe-b2d8-4289-84b7-62cfddd3f090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 ed2c4d9f-f01a-4d09-8254-57ae23943c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 e641eed9-43cf-40dd-9b0b-2d715e6781be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h997C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB366;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #120 30127e32-495d-480b-93df-80b7930f1940)");
unit.assert_eq16(16'hA17C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #120 905f86c4-9f13-463d-8afa-f304e292a8d3)");
unit.assert_eq16(16'hB366, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #120 84dbaef4-54d3-45f6-be0d-6499f74c4175)");
unit.assert_eq16(16'h01A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #120 afb6fdc4-6622-4e83-beff-d8d3c9d1c423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 bdc2373f-0210-4338-9b29-e07d42a56f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 84bc470f-a76e-461c-adf4-695e857061fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 c1cf1a24-b432-4d29-9bac-8481f7be670c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 46dbabd7-a412-41a5-8187-07c31becffea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 24d7b3df-3585-404f-adbe-48b2ee7077e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 7c4edf21-6a69-4a8e-986b-d4a245db9f5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF48;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h65FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #121 8c2fc687-05ee-49fd-bfe6-e772075df692)");
unit.assert_eq16(16'h9848, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #121 bb649277-9719-457b-b985-d56c0dcccb54)");
unit.assert_eq16(16'h65FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #121 7631f204-757c-4f1f-b66e-1c468bc61ab0)");
unit.assert_eq16(16'h0AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #121 c4ca0ba3-fc04-499a-95be-37f4ee99fb40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 f279f16f-b9ce-4a3d-949b-babffc5b0741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 c30748ae-eed9-417a-9191-a4c9d2a997b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 3054d26b-1b0f-4ccd-8df1-5428a6e751b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 b7602722-77f4-4b89-8f9b-96c46b03f723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 9d964ec2-736f-4559-b426-c6a259c201f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 318bb19e-cda9-4d18-aac2-620642ee710a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4710;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD020;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #122 336b511e-fdac-413e-95ff-827be0076922)");
unit.assert_eq16(16'hCA10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #122 57b4983e-f00b-4d0c-8388-fda1064333f5)");
unit.assert_eq16(16'hD020, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #122 c77d73ad-51ae-4c23-91d3-c1612b192f85)");
unit.assert_eq16(16'h0E00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #122 218e9b1f-ecfb-4100-909f-bee9f60c436b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 59f9c872-f2d3-4f35-81bd-d68af9a0b565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 65a6d4f8-1450-4b23-a9f2-ab0f3db2faf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 3564b57e-5825-4a62-b02b-d0270d277602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 7c17610e-b5bf-4d78-97bb-a305e21d9e07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 072257c0-ccf9-4e07-84d4-aa29dac874a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 744817c3-851c-4db4-84c7-df28654f78c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0576;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #123 ffc9b155-80dd-4fe9-8bcf-0676f515ae00)");
unit.assert_eq16(16'h49E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #123 f4052f08-e830-49c4-9d7b-ce7075828c8f)");
unit.assert_eq16(16'h7C5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #123 a30c0d64-c703-402d-b918-97303bb9baf8)");
unit.assert_eq16(16'h0576, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #123 58a3f888-27f2-410d-a01f-3854791916d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 155f6b4a-e544-4069-bfc9-c5682c4c9c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 fb011063-d0ab-4d73-9ca2-3b3038cb8188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 7d36124c-4995-4d88-923a-b492bc0676d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 ebdf32eb-f411-484c-9010-6db75f1b6aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 82e44ccf-21fc-4360-848c-0d689acd682f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 9e4d70a4-d051-4f93-9ef0-d54eabddec20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE196;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #124 a4497bd0-4b6a-43fa-a22b-9dcd1280d5b3)");
unit.assert_eq16(16'h9C96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #124 fafc475a-299b-4f33-b5e0-5242dca061a5)");
unit.assert_eq16(16'h6F4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #124 1ac461d8-988d-45da-8f7a-c56927498870)");
unit.assert_eq16(16'h0D66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #124 934f52dc-1fbb-4666-b9d1-e332f9d59966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 8ba48472-37e6-4c74-807a-8c41514e271e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 dac8859b-64dd-481c-b14d-13c7c52c0b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 6fe0c018-b82a-4722-afa6-84d82210a023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 c81dc45f-b1bb-4068-ae8e-c9917948aa88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 ddba14d6-cdc8-425f-9e0c-d90a217c3dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 693504d0-3dd4-41ec-9221-bfb8f6793c80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFACE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h44E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h061F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #125 0a92fbcf-4ef4-4870-84b1-55ce6c44341f)");
unit.assert_eq16(16'h69CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #125 9d1b6a3d-fcc0-4103-94ee-fe5df0c2ceb1)");
unit.assert_eq16(16'h44E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #125 ca1134d1-8eec-47ec-bb96-642dbdbdf6ab)");
unit.assert_eq16(16'h061F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #125 09c8ffbe-6d2e-4298-977a-2c1874e1e833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 c2406909-d235-4e24-be4a-196ef6aef68b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 41b12a93-9841-4e7a-b2d7-ade4ad39313f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 5ec06184-4f16-40c7-b77e-bb501ab3d1e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 7dab033e-2a71-4039-9d92-ed2c65a528f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 6e9adf69-aacc-4fd4-a4f5-358d614a91df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 fedaba77-68ee-4ea7-9920-f56122b44ddd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7026;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #126 152b0941-b75a-400c-b512-7e0f7efe0588)");
unit.assert_eq16(16'hAC26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #126 250ace4c-250a-4e99-97e0-dce7f66526e3)");
unit.assert_eq16(16'h0C1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #126 8602a1c7-4bff-49b3-97e1-3b6269551e4a)");
unit.assert_eq16(16'h0AC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #126 d422d603-cb49-4b3d-ac5a-a2aa1865ce38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 e56b5179-9c72-446d-a6e5-ba410e3e806e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 fef13841-e6bb-4b62-9c26-9927da61aefa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 7eb3484f-14a5-42ee-a4a7-fdbeaff1e779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 f9cc035d-0a31-49f9-bbe4-3cc22f717bbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 34db6d02-e87d-4285-b1ea-5f5dc16b2b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 428ffaa6-9cb1-4284-bbd6-2e8acae88150)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA7C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5874;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #127 a9be71bb-36ee-4443-9119-1f15f9e58752)");
unit.assert_eq16(16'h2AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #127 1a0e1195-4743-43c8-b8f2-9786904adde2)");
unit.assert_eq16(16'h5874, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #127 a88fd9d4-3c9b-424f-a42a-03a794eb58de)");
unit.assert_eq16(16'h0A10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #127 53f1b999-576d-4ed8-8474-b0729131a3ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 9a8b33de-a54f-44f1-b5a3-161a78ef0517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 aec4928a-4f81-4dd0-8f58-374bf765dda1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 7558a2ee-a23a-4b9c-a2b1-dd1874b91825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 d99ab245-c09d-4c91-9128-8fe56d870719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 8494af48-eefc-4715-92fa-8533a3d4a457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 58022aca-a946-4ef3-8295-e7387ca00e75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8747;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4162;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h047E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #128 51f8e554-46c8-4c7d-ab25-e339656010b6)");
unit.assert_eq16(16'h87F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #128 16d8e992-937c-441f-b34f-44b850cf5c58)");
unit.assert_eq16(16'h4162, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #128 cce1ad7f-2442-4119-8e1f-7bbc315063e8)");
unit.assert_eq16(16'h047E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #128 b6ae3dc5-e56a-4783-b390-15e90c84c20e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 11f0804a-2d5e-4032-9ce9-1e08ab585fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 b14fa615-6c1e-4f98-b36a-e1d7b851d0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 d92a6377-2358-4fc6-9775-e180d5f5c285)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 a8ccdc2e-1070-4a80-aeec-39c6badcd6fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 a5b88d43-52e2-4126-ae0b-a82c9cbfe65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 d3d5b061-0a95-4926-b5ce-7efb02df582d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA24C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1080;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #129 0c9c4ef5-2519-492d-8051-067e47ed48d6)");
unit.assert_eq16(16'hA249, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #129 a4362af2-d589-4bd9-b6f3-3370239b3d9e)");
unit.assert_eq16(16'h1080, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #129 2f5eaaaa-4004-4679-bf8c-3976b9567174)");
unit.assert_eq16(16'h0B42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #129 ce7dac7f-34ab-4a1d-9482-ca818a6758ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 296edbd9-aa7d-42f4-a3e1-c3b44767630b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 54a38c60-1ca4-4f79-a5e1-5ef93d34c685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 e9147655-ad53-40c2-82a0-b1adf29ec59d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 bb695449-0bf7-4a4f-b476-5aa7ca4f1ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 8afc0b7b-359a-4c41-8a71-55d565abe731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 d5bcddb9-879b-4491-8d96-6c597cb91398)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h040A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #130 2f3590ca-213f-43ae-b479-01f6e6365fce)");
unit.assert_eq16(16'h3074, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #130 ba979e71-0f2b-4de9-ac59-bcc60a5a6dba)");
unit.assert_eq16(16'h0F23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #130 bd1e0e7a-90eb-4c1a-b542-e1c9a4f5fa76)");
unit.assert_eq16(16'h040A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #130 90ddaff6-5e87-4d6d-86a2-3c73d5ebff37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 708cdd2b-d1f7-4d17-b0cb-77c35a92800e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 76b2e0a6-b93c-4eb1-b3da-f119946b5045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 bc5f1446-8ece-4a8f-a694-f1921855f9b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 96612f71-668e-4ad7-9a00-d3afe0a4bda5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 4ee80463-8b53-44b5-b37c-4124b8023876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 1ddc0412-f17a-4a90-8717-551d1d4a344b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h74DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF727;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #131 c8473b6b-2887-41e1-b99d-3ed6821c96c8)");
unit.assert_eq16(16'h7428, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #131 42dd0e55-aadd-494e-ae5a-c0d03a1e3d6a)");
unit.assert_eq16(16'hF727, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #131 27ab64fa-28e4-40fd-b59c-4a026bd15fea)");
unit.assert_eq16(16'h0B7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #131 3346d459-3a14-43d9-be0a-136f72c8a8ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 d578f9c2-1705-44ba-94b0-3b6a49fc305b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 11fc625c-3e1e-4211-b945-1551ba0fc24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 830efeee-abfd-46d9-be15-760d91e89a20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 a12fff2f-4f94-45d9-8c33-16b7560508b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 6a3373f2-65c4-41f3-b9f3-5d9e61891839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 bfc01c03-fd99-4390-a11f-8012c3abac35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8091;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3BA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #132 017f8686-7e18-4770-b55d-8dafed406baf)");
unit.assert_eq16(16'h809B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #132 193b1ddc-b5a8-4b17-8a6d-35dda4dc4dd4)");
unit.assert_eq16(16'h3BA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #132 97b29c91-3471-482e-982b-2f17ad17b53c)");
unit.assert_eq16(16'h0D65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #132 5bd240f6-fe4a-4a7d-9adb-e907529c5c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 b9b9a47e-79a0-4dac-832d-d2af1fdf05a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 0a8902cd-dc71-4f71-afa1-7fc76f9e371b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 e6c91f53-d3bb-4ffe-8c2c-7f0ae63ed909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 377e572d-7cf0-49da-96fb-664f3742934a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 8ed2a9d3-eac7-41ba-9df6-06dc38a2e4bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 58df70c3-c271-45f9-9c02-87f59e48c7e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA500;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0358;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #133 5d850908-5da4-4490-b389-9837281f35e4)");
unit.assert_eq16(16'hA597, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #133 e65862cb-4160-4dd5-8c99-0ed9d12438ec)");
unit.assert_eq16(16'hDF6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #133 6791bc83-54c5-446f-84c7-0b1493a11958)");
unit.assert_eq16(16'h0358, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #133 bb92e6f3-eb36-4504-9f6c-087ef0465722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 02337072-b403-4f17-9354-2c104d93d3eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 0c115137-3d6e-4bde-b0d5-4986a42f8e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 cc5f9974-c9d4-4b07-8039-cd989ea35159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 8966340c-b613-4f30-a8ae-d9893388b3a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 e8c91ed6-e1d5-4728-9733-d4719d66c8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 f627342d-88ac-4b31-971b-1a3b966a7610)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3895;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCDF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #134 cb4055e9-6d2b-4be6-836e-c0172fbf7655)");
unit.assert_eq16(16'h38DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #134 05d92da4-7825-4f71-adb6-5c0eefbefab5)");
unit.assert_eq16(16'hCDF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #134 2146c31e-90ba-4ed7-9503-a5aeb3594fc7)");
unit.assert_eq16(16'h04EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #134 fe6d28ab-34c2-43dc-98a4-8bf40a9cedc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 5c32e90b-737f-42dd-91ac-ce741da49b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 29db2560-8e67-44b2-b690-8ec0092b4505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 4e267040-cf83-49a1-bd5b-deaad872cbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 b1a041bf-1988-4e9b-9116-5c200811086d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 1c0aaa8f-4492-47c2-9fe9-5ef2cdc3f5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 a1248aef-9312-483e-b96c-35a5020731bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h03FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4346;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #135 38688c27-6b60-4eef-a6a1-49b696f797a5)");
unit.assert_eq16(16'h03A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #135 1a4db948-26f5-4adb-8dda-56657c469950)");
unit.assert_eq16(16'h4346, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #135 7975f583-006d-459e-96e5-76ddae5947d9)");
unit.assert_eq16(16'h0172, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #135 f0499d04-e71a-4d7e-be00-2f14bb5d378d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 e8d35443-ffdb-4a47-a131-f09a47dc5d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 e12ee6d6-6dda-4f71-a20c-df7e4ff37269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 19ea8ab4-eed6-4940-aaa0-d73b13d2be9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 a872d491-ee14-48bb-9e1a-aff9cb24744b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 19e458e0-52cf-4639-890a-30eacef7a097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 4bfefdd2-9ae1-4446-9790-6e0eec74a255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #136 67682d1b-ad4f-411a-a3a5-71858ec1ac99)");
unit.assert_eq16(16'h725D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #136 fc5544d5-cf46-4178-b7ba-b6e68a3e0606)");
unit.assert_eq16(16'hF9BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #136 0f1589a6-e840-4cff-9b07-0597da0086a7)");
unit.assert_eq16(16'h05CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #136 abc39caf-045a-46bb-a175-a15bffa95f95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 2177c3f0-f782-48d7-86f8-ec0d886f9fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 341b7695-a618-4805-a143-c2d0f01109a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 5771b413-76f4-4438-bafa-fd8aea457161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 187090bb-7025-425f-b1e0-c75cd4bc9f0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 cf11cbe6-ab5d-4826-9c42-c240a71a982d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 5a5b1422-394c-4e7e-a9aa-22b6b55423ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h649A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h067C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #137 bc85c793-65e6-41ab-b9e2-8f0d85bac670)");
unit.assert_eq16(16'hD2D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #137 39951b43-d188-4332-8613-25d137128d73)");
unit.assert_eq16(16'h649A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #137 0ba1a43a-4c35-46e9-9d92-5cae95f2464c)");
unit.assert_eq16(16'h067C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #137 89b41c71-84dd-4cf4-aca3-f76b24158ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 28a9c7fc-9488-454f-bf8b-b776ac26d824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 cd1376c5-c63c-4116-890a-0a137c4d4b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 284c47e2-eb5c-4fe1-8fea-0fc7abace674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 7679d7c8-4e82-4026-a649-a9cdfa3b6c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 17d4e469-c80c-4cf7-a165-50c2e3e7684e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 e36f0c4e-aace-4e2b-8fe5-db416e4a491d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC18D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDDFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #138 b5d52a8d-7bd3-4f5c-a8f8-8f3164d52e37)");
unit.assert_eq16(16'hC159, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #138 9b68cd5b-2aa9-4cb7-b15b-58e7edc189dd)");
unit.assert_eq16(16'hDDFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #138 64b7a482-fdf3-4480-92d9-a7fe60edbe1c)");
unit.assert_eq16(16'h0593, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #138 20aac6be-62bc-46d8-a9f4-2897154a1e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 2fd79f47-db87-446a-ab3f-aeba34e33193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 17260415-2d37-48c8-8b2b-1fffc47339d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 6be61af3-1bf8-4ef7-b35f-ef28a5b39846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 b185a655-c2db-476b-8865-ab4b1a6abea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 47dedf08-cd37-4181-ac32-65ea2ade7e47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 562ee4a0-09ea-4bbd-b866-e100a598fb43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5889;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4978;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0810;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #139 0aa5832a-c08b-4c9f-b9ec-3d9ac591c748)");
unit.assert_eq16(16'h58CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #139 aa4b0fdf-81a5-4233-b509-a1f5645c500d)");
unit.assert_eq16(16'h4978, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #139 9d60299a-1f07-48fe-8f38-ce0c7e5f46a8)");
unit.assert_eq16(16'h0810, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #139 9e38a5d8-e0d2-4bb5-9010-80a57381aa2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 6a26d66b-3c01-4bd3-9d97-ec087e8df0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 5e2187df-f3f3-48be-aff4-d8354a37f728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 93585585-d8ec-45ee-83fc-371494c4cb51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 e61f5639-27b8-4927-9602-1f4bcef7d975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 e8fd2913-4cda-4e44-8046-607480e19ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 5d43b3c3-57e7-4033-9523-67c66cfec5c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB187;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9440;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h057C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #140 c11ecd8e-980d-404a-b9a5-1acef78a705a)");
unit.assert_eq16(16'hB1A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #140 24112458-98ad-4ee9-8039-0db1080d7695)");
unit.assert_eq16(16'h9440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #140 f9317724-0cbe-4331-898c-a365fdc12011)");
unit.assert_eq16(16'h057C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #140 f4561736-b573-415b-9490-f3220e831eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 feaebc06-c03a-44eb-a267-c2951c46418f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 05fc7edd-99de-4d00-8ba1-988a06cd3cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 44113c6e-77aa-439d-b047-7884d4d92208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 258c7a70-c545-4494-8019-cc727a3056f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 cd8c6b8b-ff4b-4f3d-aa0f-2fb4c3ffa2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 5476500c-3dbc-4f28-bae0-d7b573fcf4fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3276;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD25A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #141 90f4ef62-f8b0-4579-87d9-df5b5b9bfd2a)");
unit.assert_eq16(16'h3224, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #141 3b95320a-041a-48e3-ae6f-68e32ca3cbc8)");
unit.assert_eq16(16'hD25A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #141 547ba8cf-f559-4c8d-b5f9-4990e61169d3)");
unit.assert_eq16(16'h08A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #141 419949bd-a4fa-48a5-88f7-f0f104ffca86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 fd707215-8cb7-4454-b14e-4990ea7ef910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 0ba19f4a-5066-4349-9af3-9fed63310daa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 260e1dfe-6875-4cb0-b46d-9ecbfda8863b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 b41350b1-d4a5-4fc3-8766-76eba04f323d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 f7f28272-aec0-453b-9604-7c427e224b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 b1fe1342-1136-49a7-9c68-e00df54ae328)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF998;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC68C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #142 4ca61d34-0c4c-442c-a18f-39edc491cd20)");
unit.assert_eq16(16'hF90B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #142 085f9b7c-3904-4088-92cf-c1e81f8baa7c)");
unit.assert_eq16(16'hC68C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #142 632a9150-27fd-45d2-ac3e-96091cfb5a65)");
unit.assert_eq16(16'h0FF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #142 ae439b61-1683-4e43-b389-78fb4735dc29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 6ccc3561-95d5-4877-b7a8-6efa75fbf835)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 435cf267-98b3-4146-bd20-e1aa369e99b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 2b28c8c0-0196-40d9-8be8-46abd056d00d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 206a7664-4da2-4bee-a30b-bd783d92cf5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 8eb24be9-230d-4b19-af69-84bdc279c13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 d8a605e2-fb0d-4588-b290-bdad81e1adc6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h25D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #143 2bc24eff-877c-4aaf-98e4-75050543be29)");
unit.assert_eq16(16'h25FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #143 4581ad7a-8fd5-4437-bb07-54756cc93a4f)");
unit.assert_eq16(16'hCE54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #143 d81ead26-6090-4876-9ebd-a6000a2c8bb6)");
unit.assert_eq16(16'h0F51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #143 c5d3001e-a69e-478c-b9be-7eacd8e26829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 6e457fc0-62fc-48eb-b5d7-39accf6aaffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 8faeb091-518c-4054-8d27-2e654ddc39ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 ec6cf14a-7691-46c3-8d19-daa3512bd7c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 328174c0-7b5c-4cf2-ae64-9b458f871180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 ad57a727-074f-4e7c-8112-663f0035fd7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 f42f39f6-cf6a-4e87-a580-d7fc4cfada8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h49BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #144 d060b200-e990-42c0-8814-d2a3522697dd)");
unit.assert_eq16(16'h63BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #144 fb9b21a7-9c44-4a82-a02a-3bd2fa178c06)");
unit.assert_eq16(16'h49BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #144 dc279961-733d-48b5-8507-1754c668eb94)");
unit.assert_eq16(16'h0B8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #144 4fcd0df7-51e7-4040-8db2-5a0f09a8dea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 b0a95fc9-d52d-4f8f-8bd5-d72928f595ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 c3e1acc3-4c70-4e63-96dd-da44c910f42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 49de62a8-8bca-490e-b6d1-cb1272df960b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 b2784633-97f0-4afb-b4bf-07b97013f613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 e28b72a5-b012-4f17-bf94-e53a2d74cd24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 5f1d66b2-31dd-4fda-b6e1-e73d278f9768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4695;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #145 f29bc8b4-abe2-40f9-8c9c-898f98d4d4b1)");
unit.assert_eq16(16'h4664, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #145 5df1dee2-c902-43d0-8789-2b970d3a65c4)");
unit.assert_eq16(16'h7B08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #145 968a72dc-5201-4664-97d6-f9d78a891a3f)");
unit.assert_eq16(16'h0D86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #145 a5ae0850-d55c-4e3b-9e91-20823c1b9dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 30997205-7e6d-4199-bc99-3fb08b4074fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 d2ffdf18-5c7c-4dc3-be90-d9b9cca3262d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 ad98f6ba-962a-4016-b4ca-d8a7c8f7247e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 ce0d4eac-bda0-478c-b0b0-9cc3bafa39a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 4da2601d-2c29-43db-9780-cc8ce0e15c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 39b0d61f-204c-4954-9cf4-4df13b6889ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1491;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4B0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #146 d25ae70d-6bda-417f-bba0-e9a8626d63a6)");
unit.assert_eq16(16'h14E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #146 62cf79bb-37dd-4703-a7fa-90e39ea2d323)");
unit.assert_eq16(16'h4B0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #146 48c658b4-f765-4876-aba0-91625cac32a3)");
unit.assert_eq16(16'h093A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #146 47d869b4-9780-4aad-a533-40f760ff2f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 db3448a8-aa66-423e-930e-f9d9d568984a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 cda05c9f-e4bf-4937-bc28-3e4462448df3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 46074826-b7b6-4e65-a078-95d393a818f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 4d45556b-ccd8-4656-be57-50db8f9f0024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 e0926e0c-d05c-41de-b860-e254627d79d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 245ab788-1af6-4420-b5e6-08e740f478a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9930;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #147 31d385bd-af56-40fc-a01c-a18031f5504d)");
unit.assert_eq16(16'h8486, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #147 979b4da1-5b8f-4bcd-9882-f1711fa3f5e0)");
unit.assert_eq16(16'h9930, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #147 76974721-f9d5-4ab4-bb9b-987c25c9485e)");
unit.assert_eq16(16'h02B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #147 767c82a1-6467-4028-a481-b507a0b8a37e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 efa6316d-0655-42af-92c6-77c52bc37a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 2b1a67bc-5ae6-4b11-868f-9e58c04b75ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 25a2168b-2f93-41ba-b1ef-5ee13ab520cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 9a161d0c-9e46-4d24-9d7b-025cbe859658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 479f4b8e-1363-4012-bb5f-144949d5f8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 82223f33-878e-40e7-8b9a-46bdd1f8feba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7538;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0645;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #148 6d82c31b-1af3-4a4b-94a1-5e250d66ba07)");
unit.assert_eq16(16'h75CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #148 972f7c71-052f-49e2-b800-4831e0046af3)");
unit.assert_eq16(16'hA7D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #148 c9ef97a0-fe5d-4912-b01d-bd6891fffc5e)");
unit.assert_eq16(16'h0645, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #148 4e1bce1c-8d82-46a9-b65e-fadb14ab870b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 cd9ac676-1fe6-4364-b635-c91c10ba7ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 52857d5b-632f-4cda-85b3-d5f4c084a9b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 4eae7473-5b65-440d-99d3-0147f1f82784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 658ffb3d-e88b-417c-ace1-626434997cc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 2866839b-0cf2-48e4-b3d7-1bedf0c6a192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 d1150fd8-391b-449a-b1b9-17ec193aa0b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA923;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #149 f81972c4-b82d-41b1-9a52-1eab6acf5c54)");
unit.assert_eq16(16'hC0EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #149 90150004-67f3-4515-8487-cb3ebfeee81c)");
unit.assert_eq16(16'hA923, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #149 04efbc75-0a72-4f91-b47d-677adba2c2fd)");
unit.assert_eq16(16'h0517, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #149 7082e459-fc43-442f-bf81-230ac4be9b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 b4b9981e-214e-4692-9292-8212bdfb4fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 df2c4fc9-90d6-4bba-b088-d66c3b98d743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 fbb7727d-15cb-4bd6-aa73-bcb279201f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 11d30a4a-a0a4-4072-a7b5-902b757438c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 2d71cff3-fd5c-4286-b6bf-7ce7c871cda7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 6b281279-93a2-430a-86fa-10083505c52b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #150 0cf4452e-6902-449b-a830-6aef1a10bf1b)");
unit.assert_eq16(16'h8EBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #150 0459e6c0-5235-4b6c-ab23-c3a2ffc721d7)");
unit.assert_eq16(16'h23B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #150 02731859-2732-4959-9bdf-d1c8344258ae)");
unit.assert_eq16(16'h01A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #150 68908192-a03a-4f7b-8253-c3a4db18b147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 cc58cb87-c6b3-42b9-9fcb-2fa3e54e2a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 cdc47494-55e0-4cf4-b5ae-1b5c4c7c87ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 d1fd6a0e-42ac-4c70-ab15-199c99ffb9ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 2bdb5fc6-f3e7-4ff9-b9f2-b70d56b58b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 78e9770e-6f6f-4708-9c17-1258deeee443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 d309d81c-8338-4b8a-8f70-7dabc17883db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC555;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h039B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #151 694135cc-59fb-4842-9d80-9641979bf36b)");
unit.assert_eq16(16'h3049, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #151 d3b178b8-e894-4706-bc30-06d9088a8ffb)");
unit.assert_eq16(16'hC555, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #151 9268fda5-3fdc-4b1b-b343-219016edc412)");
unit.assert_eq16(16'h039B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #151 1f81d901-04d7-46ba-85e2-c390164a8324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 5cc22299-af62-4eab-b166-f4a3b4df20b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 cfaa65f4-557e-4308-a179-161788a1ea12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 dcd9becf-d482-4fb7-b63a-a4de556ec805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 ccfead80-f2ae-46b5-8e48-f115d3409926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 c55c7357-46ac-4543-9e84-8ba951798288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 fa7e0952-878a-4ff1-afc8-0ccbf84decc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0011;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #152 edc694de-e4e4-46e1-a293-889d8f4af900)");
unit.assert_eq16(16'hCEFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #152 dce9bc53-81c2-4470-b776-e21f7e30b97a)");
unit.assert_eq16(16'h06A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #152 b0fb9550-9d33-47ab-a7d6-fb4caa4b0299)");
unit.assert_eq16(16'h0011, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #152 6f07d780-cb85-432e-b0f7-c68dc7ede5df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 84e66622-5160-42b5-95b3-0c7dfdef780f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 81fea112-253b-4dec-97b8-40fb79bdd389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 6f5e2564-1c80-4720-ac79-b5f19aa34aee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 405daa88-b8e4-4c97-a124-cec42e4638dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 b9f9f251-e0b4-41d4-88ab-5c250d664cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 2f5db8fb-aca1-4e42-8955-b9a9effaba23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7BAD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #153 2af7e563-b692-4724-83f9-3d64160a18bd)");
unit.assert_eq16(16'hE5E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #153 4c07994b-e052-4617-a2a3-1d3dcebb18da)");
unit.assert_eq16(16'h7BAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #153 af635cc6-3499-44fd-9691-47b20c370060)");
unit.assert_eq16(16'h0BBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #153 a62a2e51-0413-4c4f-8543-e4fac3adb0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 8d785281-c22e-4ec3-a62b-3e0c8a49582e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 684861a3-d6ac-4b5d-b44c-b8af1a5089b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 7e52b5ab-48f2-4462-b027-f5839e87b326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 7f247dc4-3b91-4291-8073-e34069005af5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 31eaea6e-91d6-4891-836e-e52dcd8349b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 9bf5a7a9-6903-4822-a695-bcdbdfc52421)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0906;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #154 23db99cd-40c5-4bed-bbb5-19ccd970be2e)");
unit.assert_eq16(16'hFF7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #154 229d3216-6178-4d92-96fd-0a63900b7d98)");
unit.assert_eq16(16'hEFEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #154 0fc87671-b816-44f4-ac38-44006d433eb6)");
unit.assert_eq16(16'h0906, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #154 292ba052-219c-428e-842d-c3c59c216eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 24c28f12-87e4-4c7f-8c56-0bbcc1127ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 cdd212cb-59f5-409f-aa4a-4675e4ceceb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 e83aa22c-0fef-48be-a0d7-6c0567f22cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 dc9db2b4-e62f-4b6b-a8cb-ea9beaba844e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 dd5d6092-c979-4d6a-acf6-9a34e971b626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 50e2a591-49cf-4b82-82ce-528c96e9cfbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE592;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h23EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #155 9765d7e7-fe7c-498f-abcc-5dbd29220e99)");
unit.assert_eq16(16'hE5B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #155 efff26a9-f14e-463a-8537-fa1207c3457b)");
unit.assert_eq16(16'h23EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #155 dd21ebf4-2625-4921-8eb6-1c709ac22461)");
unit.assert_eq16(16'h07C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #155 f41d78e5-c8a5-4b78-aacb-76272c2651d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 7709c84a-9e39-41ca-9204-80484a3f26e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 aea8e75f-365f-4bec-bd59-c14711c63dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 b790deee-8b85-4ed7-81b6-8d92d59fd4be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 891bb59a-0fb0-478f-adfd-5f44f3ce266a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 334cc8fc-f1f3-496c-8c60-a7fefba4747f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 85b2e00b-ec58-4693-b5cc-30c5bc73825b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB036;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h99F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h067A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #156 780f2143-f6e9-4909-aaf0-dcdf01830b05)");
unit.assert_eq16(16'hB0B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #156 19203011-11d8-468c-8ce7-8edd9f362eaa)");
unit.assert_eq16(16'h99F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #156 a274bcaf-a987-48cb-9c4d-f77008f06c8c)");
unit.assert_eq16(16'h067A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #156 d761c791-a86c-42e1-9557-02e45b2461c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 2734e78b-d510-4526-87e9-885e9f1c809b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 647b6a15-d4ae-45dd-9aff-882669413afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 40c5a3d1-687c-4938-97fd-78a2b4bde9f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 13f50516-ecfd-4fdb-aba6-a0bbeb763790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 c6c04481-2e3f-4b58-914c-4468135cbfbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 831a2938-2b62-4fd2-a0ca-ea2595394db6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8BEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h082E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #157 9c1e02ab-59c8-450c-ad36-5170485837f2)");
unit.assert_eq16(16'h8BC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #157 656fae84-6706-4682-b33f-c8577b3c2589)");
unit.assert_eq16(16'h082E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #157 b8fda2b5-c169-40f6-bb6c-3c87af5d3301)");
unit.assert_eq16(16'h0A68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #157 a55d2eb1-8bcf-4e00-b00f-8278585cdb43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 3c814949-1dd6-45a9-b623-dc48512a8366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 70e0051b-175c-4e95-837b-66a9f0df0a8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 f92a703c-bfb7-4c6e-8ff1-84b49faa7a7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 389589af-2267-41cd-87e5-e7645d0279ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 eea6046a-6700-4a59-8a2f-1d7957e7083c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 a075c29d-0b7a-4cad-bc2b-bf482a971643)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4ABB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9106;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #158 e25c4ff7-284d-498c-aeb2-9b5c2f831f4d)");
unit.assert_eq16(16'h4A15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #158 1a6a85fb-50f1-453d-840c-156c4116d1d3)");
unit.assert_eq16(16'h9106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #158 c469f316-fa0f-43f1-b488-61c034827c24)");
unit.assert_eq16(16'h08E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #158 1e5e091e-665c-484c-af5e-0b87797e2703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 48e593e8-2395-481f-a9c4-8cb161bc1ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 f463749f-075a-478c-b39b-7ffc8706c054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 457f9a82-bf9f-41f2-9f1b-88e97d220283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 304dfa04-f856-4e3f-8f12-36984ea91bd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 479cf002-04cf-4015-b2d9-084ac572421b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 2f469aff-5c44-4dda-8924-e27308102597)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h312A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE42F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #159 601df360-896c-486d-bd7c-def8e92d0cb1)");
unit.assert_eq16(16'h3103, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #159 74a3b0de-d90a-42eb-a3f1-2c0eb7929048)");
unit.assert_eq16(16'hE42F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #159 a5fe0b5d-c3c1-4961-ae21-5d2ec7a2aa2a)");
unit.assert_eq16(16'h0B43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #159 284fade0-1e69-4d01-8851-5ec6641cbe89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 c79622cf-9462-4bbe-9d59-ffc6fe39883e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 fc40ab39-700b-4474-9241-816668508426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 72b14280-84bf-44e8-92db-b5c54e801282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 0142c82b-dc26-4fc3-8cc9-94b82ce087f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 16f5c987-0335-48c0-9ffc-29410dd1ade2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 7648f9e7-b00f-463d-8043-f9a8237c6c8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3477;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1805;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #160 3cbe429c-1402-44d8-abdb-f1235bdb9807)");
unit.assert_eq16(16'h34E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #160 1c9e0e66-e905-4b13-b743-878b5adca8f5)");
unit.assert_eq16(16'h1805, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #160 652c48d0-f88c-4ab6-89e7-b229b398bbbb)");
unit.assert_eq16(16'h08A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #160 4a4baa41-f37b-4aef-9475-1014fe20f68b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 ad8a72e4-f02c-4224-9bc8-f58272125dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 a2c30a62-5ea0-42e7-8474-96d8fdd067fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 6a00ef36-4170-4778-8d34-5eef8493d408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 abb6b3cb-00d7-4891-bae3-54df00011de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 0af441a7-4b2c-46e1-bad6-1013e9ce6b75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 65e83b3b-cfde-4c33-a2f9-08e659da74fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h53DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h400C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #161 33607445-841b-4f7b-ad0f-9f0d05f43653)");
unit.assert_eq16(16'h537F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #161 c0df07c2-ee5f-41c1-8d23-e6a83e1fe6ff)");
unit.assert_eq16(16'h400C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #161 63dbf5f8-ce85-4f82-85e3-177b10ba1f9e)");
unit.assert_eq16(16'h0143, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #161 1661bc85-0896-49e0-a250-2d786331a2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 f7c01880-d58e-4eff-b951-1c7d66855569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 da9bd010-2ee3-4003-9b80-f3417767bffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 6ed281ca-95c2-43da-98df-2fe709cf6998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 37cb8bf0-79ca-40c5-b1cd-6fc85c7bdd4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 a2912ae4-1dce-44ea-8285-7ed163fdb693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 a7ccdf57-e877-4fda-8b43-8edbf73ecb0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h43A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8981;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #162 d61d320e-ddde-4bbb-a377-07d4bb522bbd)");
unit.assert_eq16(16'h4390, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #162 66d20418-f4e9-43d0-94b1-fff229bc4a92)");
unit.assert_eq16(16'h8981, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #162 9549f1ce-11ae-4952-97d8-8e25f4903336)");
unit.assert_eq16(16'h0E44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #162 18d1b5ee-9aa4-4fd5-a811-d45fe8516df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 46c65111-bc01-498f-98ad-48c26131e601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 b7a11946-2415-4064-af1b-455fab5549d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 5b9b91ff-af31-4165-8c49-75a050924e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 c847825f-75c1-4257-84d7-8f15ab78f711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 58d7e4d9-b8be-4050-9e59-b8a87ddc159f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 35355cb8-185a-4024-adb9-11b8060a35eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD92D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #163 8ff6992d-1824-4ad2-9979-68eb9f7c57dc)");
unit.assert_eq16(16'hD994, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #163 710fdf12-f715-4535-9e1a-eeb78c0a00af)");
unit.assert_eq16(16'hDC0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #163 815f1d80-9cf6-4c25-b883-cc55d46321cf)");
unit.assert_eq16(16'h04D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #163 116ffc46-6db9-47f9-b70f-6fd7b0b9e51c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 2c4e34df-b40d-493e-817f-843cefc66296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 9ac4bd89-4a0b-4bce-83fd-7e08ccc8db5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 8d5dda3d-4260-462d-987d-e537739e0ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 21ea7b58-b09e-4a65-a0fb-34a0db1ea8c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 aecfde33-c277-489e-a4a5-c6cade27b023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 13399b6d-03f2-4b23-bba1-49200580f53c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2FDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3A18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0769;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #164 60d80442-6387-48a2-a920-2d3bd73bce4c)");
unit.assert_eq16(16'h2F5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #164 74dbfe18-e153-48fd-bca2-006cdfa2139a)");
unit.assert_eq16(16'h3A18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #164 c7beedfb-e3e5-4371-be9a-8cfdee9c3cc7)");
unit.assert_eq16(16'h0769, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #164 5e8bdab8-bc4d-4d40-b51b-571232a827dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 fb7f0ed3-0380-4b7d-8af6-71b9e24ec585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 09a06919-c9f3-479e-9c4f-fce760f8ffa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 915cd3b0-b9a0-495d-a8d3-dc4db8254207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 a4902225-1365-4931-96e2-7e6a0f622d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 81ceb9f9-2b86-43a3-bbf1-f1ce026d0aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 34d4e023-c3b9-4d23-967e-e18d0dd5d2ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h248F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h002B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #165 9cc7ae06-38a9-400c-af2e-5c8be2ec5a63)");
unit.assert_eq16(16'h0FDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #165 dc095f44-a3fe-4ee0-a357-1abe745b3e54)");
unit.assert_eq16(16'h248F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #165 3cf47693-478b-47bb-abd0-97c3111a2c2a)");
unit.assert_eq16(16'h002B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #165 b031717d-0739-42a6-b429-fe499688e063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 63fd47d6-4e48-4ac2-b67c-3747a12f3e34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 ba8ba75b-99d5-4a2f-a991-7c0f5def37eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 d04a90df-0c07-41ad-8019-d9dd32974d80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 f6c116fb-a076-4d89-a439-8a4427dfae9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 7211ce39-ab46-4f24-aa9f-8f43e657672a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 6f6f1b5e-5c66-4e46-a1d5-b438022a8ee9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD4A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA76C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0605;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #166 ad4ed091-441b-4cfc-8b67-d0fabf80924a)");
unit.assert_eq16(16'hD4BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #166 757ab16a-1d71-4538-aab3-362d2ea90dd7)");
unit.assert_eq16(16'hA76C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #166 efce0012-ac5c-4c4f-8f5c-d766f8872bc3)");
unit.assert_eq16(16'h0605, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #166 122c63ef-2216-4ce4-83f2-8035133ee624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 991fd24b-09f1-4841-9d06-faf66c53af66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 b0cddd40-bc57-4e7b-8705-d27566d9729c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 08f34231-b00d-4dc2-9f7b-f35b4b8ef423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 133997a3-d208-4a53-8f93-43517711cd07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 5727fec3-8d07-462e-b1ad-4c45f8d76dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 31e984b8-57c2-42dd-badf-961bf050a3d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD774;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h048F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #167 2daac11c-bddc-416a-ac87-be8f869360ac)");
unit.assert_eq16(16'hD77F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #167 b600dcf5-bd4f-4e22-ada3-e5d541348349)");
unit.assert_eq16(16'hEF40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #167 437e8e3f-2d5b-453f-af78-e0023d6d0201)");
unit.assert_eq16(16'h048F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #167 8a2a6eb9-2685-4957-bbb6-f32e63045758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 4b904aaf-c33c-4424-a859-7592b1d15c62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 b59dec9a-595c-440d-a3d7-3500bee3d288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 9a7d2f85-2b20-4bae-95ee-582d1eb1af65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 f0292bf4-7f74-4faf-82e5-b4b4cbb30d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 30c115fc-86f9-4380-ad90-65381373b6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 6884600d-cb0a-4ce7-a583-0e9bbd0942e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA247;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1217;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #168 55dfe373-5f07-438d-ba60-c75f5f6f9595)");
unit.assert_eq16(16'hA26F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #168 776c28fe-fd49-4b61-beda-3505ef22fcad)");
unit.assert_eq16(16'h1217, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #168 55f06164-4e25-44d4-a5f5-569f7b201f20)");
unit.assert_eq16(16'h0FAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #168 acc84a0c-5a02-4617-a7ff-ac74c7daacdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 f15cc01f-e4d7-4967-ba7e-261596103c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 cde0aca1-c4c2-4b13-b44e-485a67e1c904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 15b36073-0698-401b-ba8c-c25b406374f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 f85ca759-8f9d-4295-9e35-8ef40556601d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 f50e2b2e-eddc-4ffe-bdf0-cd3635a11ca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 81478abe-81ed-4bc0-b3ad-f78655c63296)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDFE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h947A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #169 c3e13a74-61a9-426a-b0e7-e1871c8051cf)");
unit.assert_eq16(16'hDF5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #169 2001ec33-a528-4b28-b838-e1d72d58d2c3)");
unit.assert_eq16(16'h947A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #169 74a8f5fc-1ecc-4990-adf7-a0d6e814a0d6)");
unit.assert_eq16(16'h0C3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #169 bceae287-579b-4824-8c7a-dc3401ad88ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 6cdfbd03-bd0e-4ffb-9f92-ccb49c15df06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 6f7ebca1-ed04-4a1b-ae10-4d2d163a86a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 a76968f2-792a-445f-a680-a9fb839c1e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 12a69656-2940-4193-ad01-27e255f320f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 ed324ca4-f043-444c-b677-13b2c1dd7be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 29a7cb5a-d2db-4d2a-ad45-242e3aba9052)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC80B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF9FF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #170 05870fcd-3904-4709-a3b9-9b7c26f635a5)");
unit.assert_eq16(16'hC88D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #170 694589c3-e959-4c94-9422-c7b9f88b0812)");
unit.assert_eq16(16'hF9FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #170 f21fc794-86a3-483e-b098-fcf634c2d095)");
unit.assert_eq16(16'h0DBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #170 cf24c767-81ad-4bdd-a567-86338cb0cdee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 3212219c-b617-46f1-8f81-43b88aa9e2c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 537bfc00-00d1-43fc-a9e0-c067fe94803a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 838f85d0-bd1b-4922-8f81-49fbc56e1a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 e092f0c1-9c80-4a93-9830-b48b59f55fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 b21a8f6d-0c48-42e1-a592-7dd48f462f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 d27c63d9-daa2-4203-b728-8f534b5a0b57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0947;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #171 06c60859-0ee8-4613-a7da-2317ec8f250d)");
unit.assert_eq16(16'h6C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #171 b1169b53-3d49-438a-827d-997c768d32b3)");
unit.assert_eq16(16'h03F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #171 1b842c98-6bb8-438a-903b-6040004d7f79)");
unit.assert_eq16(16'h0947, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #171 159ff385-afd8-4af3-806e-e55156c6610a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 ec293f98-a549-41bf-bfc0-a597456d1cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 0d69eef4-9c2e-474c-9bde-fde84e25f47f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 f1994a5c-dce3-41ae-b86d-068f63339cac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 5fa1f307-89c4-4cd8-9039-09e0d84f1e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 c5358701-7e67-4a1c-af11-ecc6be81f448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 afa0a3d1-d2e6-492a-a9af-c29efe036960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA254;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #172 f3955a0e-d2db-4128-b380-d672129d9227)");
unit.assert_eq16(16'h1D2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #172 9e0b7f72-92bf-439f-bceb-b395417e16d5)");
unit.assert_eq16(16'hA254, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #172 25345f09-1441-4510-acde-3318d7a81772)");
unit.assert_eq16(16'h0AF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #172 55ece317-4e32-4d0f-b1df-21f660e3300d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 41db1167-6828-4fd2-868e-c8e85641053c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 f705b665-510f-4b97-84cd-530026c3083b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 1ad3f8ce-2a2d-44e4-8bb7-273336f91bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 014f01f0-11ab-424b-ac5d-e15efe0d60c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 022d75a3-3324-4769-9f97-03d02c6d816c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 aff85335-043e-41be-9b34-12e14e965381)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC126;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1C0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0592;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #173 7c951321-b46e-4c26-a465-863d29be8ef3)");
unit.assert_eq16(16'hC1DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #173 f61308e0-ca27-49b1-bb67-9413b526e968)");
unit.assert_eq16(16'h1C0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #173 ef4d05a2-9888-4c87-bccb-f4ecb72be075)");
unit.assert_eq16(16'h0592, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #173 18ab053d-aafc-4c93-9036-6f051a2dc73f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 29cec740-7d76-4394-a4a0-fe1f2e6d4323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 bc104eb4-429a-4a8d-af10-6177fc79b905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 1e9428f5-ca29-4a7a-aef5-e0b9b3c8ce62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 1f049475-9570-4ed9-8caf-8a1ae11d0e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 962e602a-2aca-4742-85a1-81d5ca525f5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 05920c4b-26d4-432d-b651-f68e54242708)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFCB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2FF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h057B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #174 ac1053a7-e212-46ff-8b15-082176925d5f)");
unit.assert_eq16(16'hFC40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #174 8c48e03b-964d-49ad-8aec-dc4c6aebc4f6)");
unit.assert_eq16(16'h2FF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #174 ef0b6ffa-f02e-4e87-8547-a73e9fbc4d35)");
unit.assert_eq16(16'h057B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #174 e6c5a89f-aeda-4e0f-9ef5-769000f6c3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 52a6291e-aa95-46e1-bb82-39d777538ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 5d55ba9e-4310-47ae-844c-76f5a7731261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 b116d424-b5bd-4ab8-bb14-4e2ff068b6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 7a4c773e-e2ab-4f53-8e57-de4221976329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 02f382f5-5bd1-4718-b8a7-7a66853d555c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 c8947726-ed20-43da-9da9-fee2d112ab13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9E96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0724;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #175 37dda9e0-56ce-449f-a4ee-32d4fa3f6eaa)");
unit.assert_eq16(16'h644D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #175 eafd0109-288c-42ba-bb85-5cf52435605f)");
unit.assert_eq16(16'h9E96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #175 24a34691-6db5-489e-861e-f5a0f6928934)");
unit.assert_eq16(16'h0724, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #175 e145a6e0-1722-4612-af23-ddc374f9af87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 071d61e2-9a8c-4d24-b78a-13786f4a5399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 0eed9d91-c360-4776-bec4-1fb097050e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 5786584e-3e48-4f42-ab02-953be8523fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 3bebe1fa-ca63-416f-88e3-ebb33751a05a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 79b2ce43-7e1b-4ce6-a5fa-ccd88ce9de38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 5d171863-b16a-4b7e-85fa-718d198f8c75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6FF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4A0F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #176 a1370be4-ba9d-4542-8e20-781a2fb7d3bc)");
unit.assert_eq16(16'h6F59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #176 bd8e799d-cf18-4b86-a62e-8abf752440f7)");
unit.assert_eq16(16'h4A0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #176 73b490bc-e90e-469f-8ae8-0b5265d68a0c)");
unit.assert_eq16(16'h0593, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #176 0da1c1f4-fcf5-4ad5-8783-38787e2af5a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 9b798ac8-54b3-4699-9142-d44018392905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 77f4c860-cb44-4822-8b3d-c7ad234cbea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 1dd4b8de-df82-4eff-bd42-470659a16715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 a038786d-4d27-40f3-a1f0-be18e114fec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 d66987b2-6557-4779-a19c-734f0b931941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 72494f75-2bc0-4e1f-9e21-352d7fbd2aff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3611;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0350;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #177 b2510aab-7aaa-475a-b9ca-5a7775b3bd9a)");
unit.assert_eq16(16'h36BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #177 b9b4fe8f-9cfa-4392-86b9-6625986244f1)");
unit.assert_eq16(16'h2D09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #177 78df9a21-5353-40a8-ac34-ae942e2e8021)");
unit.assert_eq16(16'h0350, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #177 66951beb-b2af-4644-bb4a-df9428c2a0c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 f64734ac-77c1-47db-912f-294db0df4d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 dce8ed90-ff57-4cae-955b-a74df60d1c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 78daeb53-5853-4e08-8ed3-29df6b493033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 f42d1442-0832-4271-893a-7cd7a1f5bc21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 725420ff-aea7-48a7-b1b7-7ca491588553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 24877667-9515-49f8-8f9e-fbc9e679a1f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h004D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #178 1f91da50-081d-47bb-9314-c619b509263b)");
unit.assert_eq16(16'h00D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #178 63966cce-4ed9-4ed0-8966-28ecf5249763)");
unit.assert_eq16(16'hEFDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #178 4b777b0c-2951-4ca0-923a-d89ae50c997e)");
unit.assert_eq16(16'h0CBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #178 61cf66f2-80f0-446c-921a-0d498b9c22ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 dd89e85e-8b48-480f-8a32-3d1723318e76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 6da2e52b-4f1e-497b-957e-01f8606a68d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 01bfe655-31ac-4c78-85be-2860ba6556fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 f24f4083-c3e5-4775-8daf-cecf632128b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 409aaba5-a294-4d54-8106-11eb52555ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 5ada3937-c7c5-4b1f-ba96-e448a68d00b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE7A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA891;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #179 bdf6ad8b-6d6b-4fe1-bcaf-604206194e93)");
unit.assert_eq16(16'hBE4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #179 57117be2-ebc6-403b-bdfb-4d904c8c9986)");
unit.assert_eq16(16'hA891, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #179 2796edb5-35b5-4604-8937-36f8e0afa3e5)");
unit.assert_eq16(16'h09AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #179 385a0b3d-0b6a-4bd1-a8d5-976f5a5a9755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 39d2f670-1abb-4b6a-b07e-87f7acc9b6c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 aaaa83f0-af8e-4524-81c1-d53acf169fca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 1c86296b-4376-42d5-b232-2f336ca897f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 207e21b4-53f7-4df5-bc50-1cd1a3a10ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 ca1c587d-f6f7-46fa-bfe2-d7312c36c728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 c2980c2e-3a1c-49e8-a792-47d8790fda7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4986;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h09B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0938;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #180 2770c560-9baf-4fe3-a147-697cb68a5688)");
unit.assert_eq16(16'h4932, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #180 bf1aa23a-fb30-4ff6-8b35-dfe25a595220)");
unit.assert_eq16(16'h09B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #180 7184679a-e71b-46c7-965a-82f6f091561b)");
unit.assert_eq16(16'h0938, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #180 55558346-c64e-4fb9-aabe-5a488056358e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 9dccfd9b-0038-47a8-88fa-183a9c2e93e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 71e15c51-161d-4802-bb82-eb47dcc33d4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 e722a681-0153-4824-87b1-dbbe33effd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 241aa1a8-7477-4180-afe6-d612d50be6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 2957469c-19a6-44ee-8a79-f7dc3e260f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 1c2160ef-155c-46bb-90c7-8513c5c31519)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #181 63b0ef18-d27a-46b1-82e9-ea64d13f9e4a)");
unit.assert_eq16(16'hDAE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #181 dfeba60b-fd46-4bcf-9639-12cd1553fa81)");
unit.assert_eq16(16'h4E7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #181 b249d3c3-2208-4acc-9e07-62ed420b69b5)");
unit.assert_eq16(16'h0DC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #181 6aca8994-c8f8-4f50-a0f9-78cf1b744d03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 7024f886-c791-4de6-b34d-aec7be0716a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 fa64d0d9-5022-4971-89b5-53d6ee8f6251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 70cecd05-71f3-4900-b92a-0f6d03e754f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 4eef2886-6cf7-4a78-9c3f-0cc25b060ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 4388656a-3e5b-4c62-9e25-380cf2aa5b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 0315edb1-504e-4be2-8d38-f41a7653ded7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h661C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDAAF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #182 6eca0e1d-804b-4951-b618-f0a785e1af26)");
unit.assert_eq16(16'h6606, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #182 6f335a7f-33b4-4eb5-85bb-bc963eb9bd2e)");
unit.assert_eq16(16'hDAAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #182 775bbdc3-80ec-4e8e-bedd-dda42fb13641)");
unit.assert_eq16(16'h0AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #182 9d9af47e-d8aa-4cc2-af83-98b3c6466cce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 78722d9d-5dd2-4a51-8f39-5f9699856424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 52ca172f-ff75-4ed6-8d7b-1fb07620561f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 8418dc0c-a21c-41ab-a49b-5a2a1e87a032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 3bacfa59-e277-4492-8562-a995439c9d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 773c2534-61d3-4610-a287-f0ddcd564a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 0403e9ec-177c-48cd-956f-7eafddbcf0fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2D2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4111;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h008C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #183 ddbb5fe9-6959-4953-a1b8-f299f204845c)");
unit.assert_eq16(16'h2DA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #183 30717e9d-7490-46c1-8dbf-4f8e1ec498c3)");
unit.assert_eq16(16'h4111, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #183 ffa3aaac-26ac-4c4d-b672-e72381c65369)");
unit.assert_eq16(16'h008C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #183 c9a04491-b66c-4971-8dbc-896ca812dde1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 a22b77f8-eb03-4cca-9d91-d60e6ec5c06c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 bae4b641-9dfc-46c1-b49f-e73864e24a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 8976eb16-a5e3-4b93-bb45-72ae4cc09aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 63309df1-e69e-431c-884b-e65e4854ac7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 c2d53e09-bc0c-4bab-89be-cdb2e1fc4b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 6b58fc21-85ee-4063-97b2-4342bd73bbbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h76DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0964;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #184 abcb0921-ab10-4e69-bb4a-252adb12444b)");
unit.assert_eq16(16'h76EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #184 3f942ec8-bc1c-4205-89d0-aca4a877fb3b)");
unit.assert_eq16(16'h7E36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #184 309cc10f-0bc6-48a0-9df6-748790c88ce0)");
unit.assert_eq16(16'h0964, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #184 72c3e1a8-5386-4ff2-937a-db9909e96637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 2c2e6ce3-f497-49c8-b63d-f58f14a00cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 9f938544-d3b7-450c-b600-d7f8cb79ea3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 e9b84335-569f-4a35-9907-94ee1070a40e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 0103274d-6b21-458b-bca8-9b63f2df1386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 d79328f5-1251-44ab-8a8c-15aadf367d57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 85b174d4-3493-412f-ae0d-66d9ac1223b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBF8C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFCDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #185 d6b70687-3530-4f3b-9bf4-70c592dcdf4e)");
unit.assert_eq16(16'hBFE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #185 b11e0d50-5db3-448e-a355-898a3e259c70)");
unit.assert_eq16(16'hFCDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #185 e7fa0ce2-b0a0-4bd1-b891-a12ed103156a)");
unit.assert_eq16(16'h0DE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #185 53799bda-84f9-4cf7-bc76-a613dd872199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 8b243385-dabf-46e4-a037-2aafcf41345d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 4ca026c9-dea3-402b-88ca-7e8071d6e88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 a3cfedfe-c4d2-48a2-85d0-22e86882f25c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 649ff515-6c96-4560-8cb9-d72669752e14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 cb65b0d4-c5e9-4fa1-a039-da383f48c4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 360abf78-ab9a-461a-a918-691fa85e5833)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2950;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0502;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #186 bb7dd7ba-05f6-41ef-a68f-4b6961a12640)");
unit.assert_eq16(16'hFFE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #186 4cc8b410-af3e-4c7c-8dac-469c3cfcc130)");
unit.assert_eq16(16'h2950, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #186 b1edbecc-1ae2-4a29-9390-6532e24aa57d)");
unit.assert_eq16(16'h0502, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #186 950cdfbd-d777-47e5-87db-6bdba47ad8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 3b4bf066-4e86-465f-9f25-e95af706f776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 fa6a85db-bb8b-4131-9ead-9cabef06cc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 a0098bac-1d5b-463a-b379-22a4d7594326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 f3d68d73-dbd4-4299-87f9-e22cd631e9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 c6371670-b3d3-4d79-b201-930e2525f2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 e00043e0-7afd-4a18-8c51-2a8c1195f7b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2724;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4EA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h070E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #187 8405fe3c-cb40-4659-b64e-69d43ef4a0ee)");
unit.assert_eq16(16'h27DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #187 4c3a5f26-7de9-41ae-a88d-f5c5c070a44c)");
unit.assert_eq16(16'h4EA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #187 87707f65-4fa7-49df-84d3-334238eaabc6)");
unit.assert_eq16(16'h070E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #187 4bf88d81-631a-4424-9eb6-02c24697bd37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 395bf8e1-13af-4dc0-bedd-ed89dfa02fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 6746b417-801b-46a2-94a6-f57d60b6270d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 b80b863a-e381-44b3-a035-4a6a732ed9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 8c868100-64f7-4515-8f7e-3df52dab2229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 7b5cfc24-8ba8-4fe8-99f7-81204af7f049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 04f095e1-ba12-4835-919e-bc866758e059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8F7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #188 c75a0054-b57c-4a23-b8a9-2428d8b03968)");
unit.assert_eq16(16'h8F44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #188 b96b4c42-2d39-4910-9cb3-93298f3a46ec)");
unit.assert_eq16(16'hAA71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #188 4e8dbd23-8ad1-4960-92e8-dda0698c1ac1)");
unit.assert_eq16(16'h09F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #188 385d880d-f692-4268-8b25-284deb0d19be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 14176581-715c-4980-88f7-62aa3d74b29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 f0a28c0c-9340-4b56-9309-7a3e0df0cf3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 752ab912-1c33-4681-b6e6-7734f083a959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 a201f643-73c2-48f9-a68a-b11b44ee6b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 ec997844-86f6-4830-b26c-6a4f20763ec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 5b6b5104-e00c-46cc-9201-3e8b277fc644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD900;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0830;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #189 b4ea6476-612d-45f4-b9ac-707c7529726a)");
unit.assert_eq16(16'hDC9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #189 1bc12aa7-651c-45b1-b413-13ad62f6dd37)");
unit.assert_eq16(16'hD900, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #189 e1bcf32c-d672-4d3b-9e77-d76b53e93c48)");
unit.assert_eq16(16'h0830, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #189 12aa9ed7-d81b-4b59-9b64-2a1fdc1c6edc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 e73f47da-0041-4f8c-9378-cae20ae12b99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 60bbd076-01b5-48c2-9002-a23ffdd19a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 f356578f-8026-4241-a6c2-2de4e0032b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 5c54222a-b161-4924-920c-de285fac102b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 0536392c-a246-4124-bfd6-6b6edf9af026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 0afd5266-de95-409a-92f4-d80a0b82443b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #190 dd35a55b-2b4b-46bf-8709-7073b3fccf3f)");
unit.assert_eq16(16'hAD87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #190 0ad66a86-013c-4f1d-b343-8b9bebbd38b8)");
unit.assert_eq16(16'hD6F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #190 cba3c4bc-75ac-43be-b5a9-8a8e980a4fbd)");
unit.assert_eq16(16'h06A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #190 0325ffe8-be8c-46c6-bdfa-08f1e8864885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 f8462872-5684-40b1-8786-c28208708434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 29602085-c5cc-49ba-ba14-ad205de5fe32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 6a29a3d6-dfe3-4f54-a420-20cee25aeb4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 43b8790d-aad4-432a-9d3b-2c7cc4b52746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 0e79373d-548a-4ca8-bff7-de4d6ab0121c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 61770165-b680-4ed3-a8a7-8670c4b7fe87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #191 46f8ed9f-caac-48f3-9107-b225324b5992)");
unit.assert_eq16(16'hBD8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #191 70cabc7d-27d6-4fb5-8ef6-5f185176c9e6)");
unit.assert_eq16(16'h12AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #191 b0700f15-b7ce-42e2-8129-e1457e8b2b4e)");
unit.assert_eq16(16'h0BC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #191 4237e189-af9e-4a40-bc33-7b4df530f4f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 58d52aed-f387-4b7e-9f21-95220304a266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 d0341167-bd6e-48dc-af8d-d253d2207197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 cf11fdb3-180a-4f46-b28d-45e22197c25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 98a1ec4c-2d9c-4f61-b3d7-75bf2c2cb75d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 712ef211-0002-4bad-8851-3f0e26804a3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 621402af-8a88-4f2a-a85c-b9eff78624b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE9D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #192 cc328b26-7fb7-4dac-8d69-5185e485147c)");
unit.assert_eq16(16'h1E73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #192 2d66ce29-1f4e-479f-a22b-79601bb3e8c9)");
unit.assert_eq16(16'hE9D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #192 08bb3af3-0b25-4763-96c7-bf81d548bfdf)");
unit.assert_eq16(16'h0CA1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #192 c86a639b-e924-4cad-86ce-85ccdbcfc0d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 9d64ce54-fd11-477f-88df-9e329d7871b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 bd92700f-e4cc-4e19-96cd-a4977f48cbfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 3591ef83-eb0f-4e87-8260-d10514adbee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 64b889ff-1878-4a9b-9763-e535a9aac210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 c64381a8-c466-4cf6-88a4-27abf0448e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 93d0c80a-0cf1-4b1e-bc39-b6067ac0ede4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1002;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #193 e7c4974c-90d8-4922-9ee8-3dbe9a087f9a)");
unit.assert_eq16(16'h100D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #193 ab830d0e-1d06-46c9-a8a2-e91d1faf0822)");
unit.assert_eq16(16'h73B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #193 43c51366-7b42-40dc-86f6-15557560cfea)");
unit.assert_eq16(16'h00A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #193 cdd1198a-da5a-46a3-bc0c-54d084967182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 9d007d37-dc78-4799-82b0-bc5ded0be1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 0b786440-2ceb-41b1-98dc-87c7e81e73a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 f1c35280-bb4a-4a37-84f7-dd68062fb293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 6242b26d-4b19-4100-ba73-09f21146b716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 775c4abc-5b7c-47cb-939e-d86c01a981b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 22c3169b-f2ba-4028-948f-b5bb51e174e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2875;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2F60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #194 6ab07401-ef5e-4b6f-9979-a346377262ac)");
unit.assert_eq16(16'h280E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #194 ab886687-35d7-4ce9-80df-84cbca432844)");
unit.assert_eq16(16'h2F60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #194 67514746-5552-4378-8347-2f9256694b62)");
unit.assert_eq16(16'h0E4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #194 24a7072d-1a4d-4e3b-be45-343110e0a891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 884c23df-5cc2-4d8b-bfc2-1c05fe62ac14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 28f9b508-96bb-46ea-b526-c9c72d087ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 6d8b94e7-1273-467b-a8f7-67ec586d6872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 1c779919-550c-4e18-9285-dba104271938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 c468ada7-6986-4e6d-bbfa-00b216066339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 392f0016-eed1-4f55-a2bf-8ac1e88f896d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6724;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF43D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h014F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #195 2b661c4e-2005-4999-af0d-04fb59d0aaba)");
unit.assert_eq16(16'h67CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #195 5487e02e-00ea-4deb-a207-2f36619c6974)");
unit.assert_eq16(16'hF43D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #195 79e3298b-895a-4208-923a-246e99eb7c15)");
unit.assert_eq16(16'h014F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #195 31586130-d48f-45b8-9f66-d74157279613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 b5da704e-4844-401d-91ee-9f8fc60054a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 ff074c2e-e339-4c05-bbe7-0a5bec98981e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 3edea139-3fd2-414c-8437-ed216efc6180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 a515ce53-7797-4e14-b542-29cfa6a8e562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 bec5b28e-6075-4109-86f4-394c29320a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 078f0633-d3f3-4da7-aa30-6b22ef73df17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h99FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0593;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #196 b3243728-4091-474d-bba4-adfce7369782)");
unit.assert_eq16(16'h0C59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #196 cf03bcee-4986-489d-ad36-fe47a6fddfa9)");
unit.assert_eq16(16'h99FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #196 cd2de045-f15e-4aab-9b51-8c4f505c2964)");
unit.assert_eq16(16'h0593, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #196 129d5e9c-b13b-4654-aedb-c464d841cff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 0068e6b6-667c-4d3d-a6d7-1f93c7fdc61d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 1a89718f-25be-426a-8276-de94d1a038db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 6a053d81-d267-42e3-82d2-3fc0bd907409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 e350ebd1-16f6-4eb9-9b9b-d244c3bfc481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 5de79381-673c-47b5-99c3-3261c0e69209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 be8f9844-f5ae-43c2-acb0-c6ab7b337a1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD038;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6AF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h080C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #197 47c6cf94-5d51-480e-9225-c6edbce0944c)");
unit.assert_eq16(16'hD0D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #197 75cefc21-00ba-4d7b-91ef-3222f62ed25d)");
unit.assert_eq16(16'h6AF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #197 59bdbab8-5c5b-48a0-8023-4ee7b32ef457)");
unit.assert_eq16(16'h080C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #197 3fe7a5ad-80d5-44e8-94dc-23b4d845e4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 a469e57a-2593-4351-a231-b86470093ca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 2a111ee0-a04c-4073-9d21-d198de9c80da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 de74b853-e327-4600-9eb4-7b4de8f96736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 702e14f1-56e6-41bd-a6fd-037bc60a2a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 a757dffa-9666-4474-8d4c-1e33d649d97e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 1a8c96cc-ae65-4382-91b8-a04504151266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h78FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0009;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #198 f5f88a81-53ed-4adf-84ae-ddce4483c9fc)");
unit.assert_eq16(16'h78E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #198 e530b9b4-976d-4555-b6bd-330e1d3cb546)");
unit.assert_eq16(16'hC9B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #198 5fec8e30-a30e-41b4-89c0-9374078b6ac5)");
unit.assert_eq16(16'h0009, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #198 cd69ace0-0489-459d-abb9-b259d5faa50b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 aca19a1b-0030-4909-a7b2-7ddad81371be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 9371a9f9-2b4e-4353-ad3e-b7499f8cf299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 3d2b17ef-2f0f-4925-8c33-90c1404fe147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 fc3d3705-8897-4899-a2a0-241a13dd2c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 3bea9231-a24d-4dc0-ad8b-3d44ab76bf00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 a1ece5a8-b801-45fe-973a-600df565776a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h794A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #199 4e6ad83b-93b0-4294-8369-a6422e0cb53c)");
unit.assert_eq16(16'h2F52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #199 ea928732-cd03-4644-91af-15441c824274)");
unit.assert_eq16(16'h794A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #199 0ab0c334-d6d5-4b4a-ab5b-02a96906094e)");
unit.assert_eq16(16'h059B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #199 40327ca2-9b1e-42a5-aa38-bfe3401ba2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 87cfa87a-7210-4f6e-8cfe-43eaa8966728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 3e5fd49b-39d4-4e76-a488-c1abc0c6de41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 36efbd45-93e4-445e-96d1-5afdb004af14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 0b359783-298d-4af8-a3cb-f1f07ece8038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 862628db-cc8d-4776-a3e9-9f419e209c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 110961c2-29fb-4efb-819a-61d7ba95f1cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2CE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #200 20e9029f-4692-48c3-8aea-a66f69db50ab)");
unit.assert_eq16(16'hDC2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #200 b7184e66-0286-4058-871d-919b502f229b)");
unit.assert_eq16(16'h2CE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #200 f66e95b1-a3cc-47f3-9235-6d7778fa7f83)");
unit.assert_eq16(16'h0D8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #200 00e1b67a-4188-402a-a6d0-08a3a508a611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 ab9c7c6d-7554-4b25-b906-0e3bd730b3bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 2f99574a-ce84-4483-8de7-b4616caf5f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 16c8ed73-e12c-46fc-9692-b0d5061793e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 91583841-31a3-47ba-88e6-66299ffcef0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 17a27c44-9fad-4f30-aacd-e14a13f562b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 dc4d67a3-64a1-4f42-b560-355ebe1e76d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF969;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #201 13cb49f6-56cc-4328-9f9a-6fce8ec85010)");
unit.assert_eq16(16'hDE93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #201 a18159a7-c775-4374-a1b5-0f23f165328b)");
unit.assert_eq16(16'hF969, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #201 8864cb7a-0913-42f3-8b4b-10d85d23921c)");
unit.assert_eq16(16'h0176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #201 55b5b0db-c299-4917-a9f4-46686492fc2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 ebd12826-1fff-4eb9-8764-a4d7996805c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 0a33a3f4-45bc-4e05-8ffa-d3587ef970cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 8cd3c56e-6078-4819-8b6f-8b55529e9fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 90c85093-2fbe-4667-a1c4-bb4e9d56fc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 681746b8-1ae3-49c4-96d5-3276ebe7f89a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 d9c27458-593a-4403-98c8-ec5f6381e9cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #202 7ee9e164-2916-4ccd-bb42-1575f2c6f1ca)");
unit.assert_eq16(16'hCD09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #202 c114575b-b519-4f41-9b56-25ee9caf25c4)");
unit.assert_eq16(16'hC2F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #202 82249656-307a-4a6d-b42a-4d7df1016c17)");
unit.assert_eq16(16'h0B11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #202 cf6d93b1-f233-45c8-a57c-9b7169901486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 2e77c3b8-b018-422b-87ea-b50cb0466d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 7edeaa3a-1ea1-46d6-8562-c9d7a798b13c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 a36cda2a-b8c4-476b-874f-23d05f1cd8f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 8f359f96-523e-4a2f-bd2e-349354ca1800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 f2b91655-0357-4af7-b223-689886f3609a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 055f6491-2de2-43a3-8893-1158756d7984)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #203 06f48fa0-bd10-441e-a81e-f28c07f01605)");
unit.assert_eq16(16'hEDD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #203 ccf5a5be-167c-4383-b149-62c20e2e8a91)");
unit.assert_eq16(16'h9B28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #203 03fc5373-833c-40a6-9f47-1d44ab84452d)");
unit.assert_eq16(16'h0475, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #203 f913dd79-7313-4af9-8af8-050e6f806172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 2c01d6a7-a203-418f-bc14-59e775536617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 187308ce-6660-4b84-b1a6-6fdd64390ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 68a9c560-7d70-451d-a5b9-2a0631be7705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 6d086db0-60de-4fcb-abd1-113e855fb4d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 7cb27f8e-df43-4f65-8bc2-9cb264ce7c94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 8c9a095e-f462-4b5a-a88d-43ca3a00c3c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7F94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h65F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0165;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #204 20cc5455-d54e-4f18-b62a-19e20425863a)");
unit.assert_eq16(16'h7F9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #204 5cbab175-f959-4cb1-9bfd-86e39560dd8f)");
unit.assert_eq16(16'h65F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #204 d9dd018a-7ceb-4296-808a-688ab5b457f5)");
unit.assert_eq16(16'h0165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #204 1724e7d4-6a5b-4aef-a110-1cc467584a95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 da81c0f3-53b2-4135-ae28-7b397bb70d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 3b3ae6d8-1e86-4f62-950d-aea2c8bf3ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 e79ed8c7-cb92-4882-ba40-cb67a56924f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 0f14d9d8-abfa-4326-a676-3faec9ca1567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 1de41ce4-a3a2-4a70-8ec4-68cad7e2a25c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 e067e203-7602-4fe2-a2f3-2469b374da4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE74A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD265;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #205 9cbf0689-0449-439d-b8e1-9c2c1256a38b)");
unit.assert_eq16(16'hE70D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #205 e2a80c0d-1e43-4efc-a308-bf075cad8af4)");
unit.assert_eq16(16'hD265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #205 c83c7187-97b9-43d5-9c36-fc4de16c9a9a)");
unit.assert_eq16(16'h09BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #205 d3f22982-3b89-46f2-bea2-e890efa08b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 68d2bd98-328f-4527-99c2-431bc33abacd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 29d4b635-0f21-4d96-b319-57543e74da0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 3818a6b3-bfca-4bd6-b494-b458dccb5132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 51f1897a-379b-4ef4-abfe-687f98fd1b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 f3bcca5c-ed1e-41ba-b562-2aab1c6ef0f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 90279cf4-7288-4c58-bcf4-4d18b9827156)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD617;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #206 65842c1e-535f-492d-aa7d-5122dcf1be28)");
unit.assert_eq16(16'hE397, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #206 43e61b03-00aa-4bc2-8be4-625f78253963)");
unit.assert_eq16(16'hD617, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #206 879113d0-c756-4fab-873f-d5828016542a)");
unit.assert_eq16(16'h08AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #206 d60a7590-bf72-4ed6-b0af-a6737a69d60e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 bd11d83d-9981-4173-9841-3a71c7cdf3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 31de6473-3294-4c84-b806-43cbc342e677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 81faa789-10be-4516-99b2-ecb8adb31f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 381776b4-d124-4990-a484-05d496ed9f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 76fc7755-e355-4a1e-b7ed-f4676e6c5ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 3a99e50e-2a7f-400b-901f-e131d1494f1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA591;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h66BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #207 5b820372-7a58-40a0-8b97-8b8177f2b9a3)");
unit.assert_eq16(16'hA59C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #207 c5ccf6dd-b737-467e-991c-b02ad0cbff66)");
unit.assert_eq16(16'h66BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #207 94b8f4a1-0cd2-4479-a4c8-eec08e3d8094)");
unit.assert_eq16(16'h0F71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #207 5c622351-584e-49e5-adfa-c6762ff7c44d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 7bf21e6d-2970-4e87-b643-9dfe41353aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 91804f01-98c8-4dfc-abf1-c57f8581501d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 e8967ddf-9919-4782-8269-b4d16ae01e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 d7d5328a-86ca-456e-a1e9-293cda980534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 22a8d5fb-6ce6-4916-9aa2-696e6c657601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 cba7b852-1863-45b9-8511-4c69efa7db51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D9E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #208 c386bea1-7912-4dbf-abb9-da2a2d46c11a)");
unit.assert_eq16(16'hE129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #208 da14ca7e-cda0-44b6-bbb1-230e659e5c1b)");
unit.assert_eq16(16'h1D9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #208 9f95487e-be3b-4a85-a02a-fbeb5a243059)");
unit.assert_eq16(16'h01D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #208 154466d2-3d4b-4111-b94d-75f7e3c315ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 22ca7a45-b57f-494c-92a4-d24d131131fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 a3d1e39b-cd1b-4aa8-80bf-9864ee29afb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 609e7c02-e485-435d-a6ef-93e460dbfd19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 b0274056-e588-4bdb-8a12-357e78715679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 f249a10b-78f5-4ba0-8c9d-15256eab9fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 57ed31e4-dee7-40c0-9717-771e84879f28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9791;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h96C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #209 c31cea12-11b1-444d-95f8-eaa1b6722a7d)");
unit.assert_eq16(16'h9787, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #209 09e48142-859e-42fb-84d6-63f18fd9e7e7)");
unit.assert_eq16(16'h96C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #209 383a8daf-dc6b-4b44-8b17-706ce8c52953)");
unit.assert_eq16(16'h06A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #209 6b1cdd25-8f47-4392-8daf-98cdb07a9d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 f43b4a3a-d2b2-4cc6-af24-0efb6f7df68f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 73d0aebf-ccd1-4e0a-a826-ba1f39b92f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 47c4d874-e24b-45a6-998e-eea814b33c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 6ec582d6-6804-4448-957e-51c27d4bd836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 71ec59b7-a4c0-4b05-9951-7840f8da939b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 de679b85-5ff4-47f3-a752-30f41fc92324)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA64A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6313;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h006C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #210 72aab14a-9a9f-4986-b90b-9a2a0bc2e250)");
unit.assert_eq16(16'hA60B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #210 bc46572d-5fd0-4bd5-b2f5-f141fca72292)");
unit.assert_eq16(16'h6313, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #210 9e88c2c7-5e77-4d33-be0d-ab91d65ecbe3)");
unit.assert_eq16(16'h006C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #210 ad47d9e4-06f0-495a-999c-b07bc5b85bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 4624452a-9bea-4053-973e-2575710dc6f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 bc00e9ed-a4e2-490f-b9a3-66d7d393ef7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 4a013faf-6079-4928-9da5-882ddae61db1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 4b8b942b-09f5-4c36-8127-7effd6fe4ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 45328685-2456-4715-8a4a-81c744e12322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 90b2b75c-6507-41b3-9e6e-c796f6f70291)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2803;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h76AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0458;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #211 079da49b-1854-4f8d-aa41-9abf8202fb91)");
unit.assert_eq16(16'h28AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #211 9004755a-6b2d-427e-ba12-8b6ccc3e14bc)");
unit.assert_eq16(16'h76AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #211 a73db8a5-cc35-4d8c-9c71-b89ddafec64a)");
unit.assert_eq16(16'h0458, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #211 ef0a4f62-0fcc-483d-a648-7c6b65bbefbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 a4e57b8b-229a-4ada-8ee3-8fec89cf1f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 6c80206b-f382-4f43-b5c9-589f76627bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 dff14f26-d0ba-40c4-8f76-e4562d6e225f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 a7cd7692-45c9-4acf-acbe-2d81bce253ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 94724276-8433-4de8-a1f3-c86fa056ae86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 8b61b8fe-2d5b-4ca8-a415-413ff459fd94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5FC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #212 305abf6a-f31a-4db7-954b-0a177adb9e36)");
unit.assert_eq16(16'hCE17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #212 eed3f190-5884-4ad3-8c40-3926ea899a80)");
unit.assert_eq16(16'h5FC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #212 200046be-2ee9-4da0-afae-a9c5a2bf7fe9)");
unit.assert_eq16(16'h0FB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #212 4903167e-bba2-42b5-a8d6-b9307afc4e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 87e5cc96-e33e-402d-ae0a-73b58f2cb1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 15934d45-f0f1-457b-a15e-bd7bd6cfc5ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 06778fb1-895a-4cf3-8e44-9f5745dad73c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 d445bae6-d1ff-40b1-b6df-b0521f423273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 36c910d1-0b9a-4f07-8895-889c49b1b3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 1de1311e-0882-4abb-a0b8-e456d26da0f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0E42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0561;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #213 84fae9bf-f6f4-4789-81f3-45d139ca47e5)");
unit.assert_eq16(16'h0E82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #213 7feda769-83ae-4dd8-b806-17503520f2a7)");
unit.assert_eq16(16'h2A98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #213 cf23a815-3856-4067-9ff5-e4e8739d2e36)");
unit.assert_eq16(16'h0561, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #213 ef25fe52-62bf-4b22-ab62-c4d1bcf3baab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 761a952b-b5c4-4789-b950-5ea6bee26cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 084c6eb2-b81c-485d-86ca-dc029dcd346a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 3a6b6f30-bec3-423f-9d35-aa25d687fdc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 64c8ffe8-98f6-46cc-a1ef-eee7034aa3ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 940ad0ff-d562-499c-b3cb-8dfefc231715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 a9e70a2a-a95a-47a0-99ee-a58790ae819a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h28E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h05D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0278;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #214 6b504c60-3be6-47b7-8dcd-647d3c1126ea)");
unit.assert_eq16(16'h2804, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #214 7bc8d84f-3029-44c2-8053-bb435c5ff86f)");
unit.assert_eq16(16'h05D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #214 e025f3b6-05c6-4ca5-b44f-a46d451a6e3a)");
unit.assert_eq16(16'h0278, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #214 320a7a24-aeee-432b-85bc-7664344f1daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 0a509576-2b39-4ecc-932c-5443ad12c59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 b2aca865-7a80-42fd-9030-b96435efb637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 5bcb771b-a399-47d2-83c5-9c9b82f72ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 ca30aaa2-9099-4c1f-84d0-4d38cd198aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 a1b34615-2dda-4148-854b-f7f870fb14bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 e86bc55b-0c28-4720-b151-e8fdb6ee3eec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3343;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF2A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #215 c81a11c9-3cd7-47f8-aed6-fd97720a9e92)");
unit.assert_eq16(16'h33F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #215 28e59ec3-6532-4ba2-bec1-60e71a9e8086)");
unit.assert_eq16(16'hAF2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #215 9a16abcb-a3db-4e82-bd38-823a6c5763c8)");
unit.assert_eq16(16'h0682, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #215 64217e8e-5a8f-468f-8174-293b6a205cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 c760e0fd-ae96-4a4d-a5b9-0777c0020973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 410a6aec-3204-4b72-bca9-d6832640e3af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 0558e165-57a4-45b6-bbb4-738415d2ed5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 8734b334-2abd-4d3c-9ba2-4299815fb454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 bd9ed292-f896-4686-b05a-466c00c35fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 4aef61fd-beae-4d55-b3a8-99926b970e0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC7D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1892;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #216 0d3f75c8-34bf-45e8-a7cd-64ed566c11c8)");
unit.assert_eq16(16'hFCB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #216 a6d2715c-f211-4bbd-8149-f69a31687f01)");
unit.assert_eq16(16'h1892, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #216 dec25e6d-fbdc-4f28-8f6c-9d329cb91385)");
unit.assert_eq16(16'h0B62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #216 5feff12e-ae18-4419-9b14-aec7e62aa44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 8f6fabe1-bd3a-4fca-add8-41b2b6c6d2da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 7022f7e7-834a-46ea-9d04-9eb7c80ccf6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 f0adabdc-546b-4188-af0d-23d56cae6a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 339a5715-608c-4f95-93e2-220115249e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 2e508536-e639-4c16-85dc-7fe1a7610687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 0a3a3e80-5d13-4471-837b-61785565238e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h90DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3219;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h041B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #217 c42ce33a-f60b-421d-8143-2a31e21597ba)");
unit.assert_eq16(16'h905F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #217 81339711-ba5f-4723-8bec-429d25f7a98a)");
unit.assert_eq16(16'h3219, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #217 dd304fa3-b0fd-45a9-8d6d-e8aefa9028d3)");
unit.assert_eq16(16'h041B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #217 25880804-8b61-447b-bc0c-dbff697fd7d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 2f280717-0039-432d-ab3e-cfdee51f0010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 ec549cf4-3869-4738-846d-ae909aef4f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 bcf94b6f-351c-4174-837b-1d375a09ea84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 1c326152-8df4-46dd-a188-d19346406cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 82d49261-ad46-4348-b145-77c8d1ec59d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 387a8d8e-32c1-4a42-9f44-b65812960710)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h27C0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0789;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #218 8cf25235-9032-459b-8d61-8c407aeaab27)");
unit.assert_eq16(16'h2F11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #218 14e459fd-96d9-430c-893a-023c3e752fdf)");
unit.assert_eq16(16'h27C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #218 7587c74e-8825-442a-ade1-934d0c3fa859)");
unit.assert_eq16(16'h0789, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #218 373f4010-2341-4ae3-9e0d-088524c8da6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 72c22222-c375-467b-9352-508fcb436ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 ef9c0bd0-b7c9-4836-a8d3-6c37db5e96ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 a497e67f-a6ff-4702-8407-0ed83109dd1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 0df05699-8184-4a88-8336-3607e071c4f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 a45ba435-5efb-4659-902d-650563e77a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 2fc931db-5bb9-49b6-afe1-0c27d5ef3741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h433B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0360;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #219 303508ce-4efd-460c-b987-c0479f14a93b)");
unit.assert_eq16(16'h6CEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #219 4e554c99-62a0-42a2-8664-0c97010194c0)");
unit.assert_eq16(16'h433B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #219 decae0c3-fc1b-4aab-af38-423d7aec1c42)");
unit.assert_eq16(16'h0360, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #219 289cd5a2-8cd6-46b4-9107-cc7483433415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 013ad7f7-bb06-4343-82da-3d30e70f8e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 60d5f2df-980b-4b11-8a50-972ad9fc4913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 396156ee-05c4-47db-81d3-ca5a4e2c40b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 5dea8800-0305-4c36-b7ee-930850c13d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 75aa9732-5da6-406b-bcd5-d1398e722ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 924cf709-2609-495c-874a-47e7e18e60be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E8D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #220 cef2f7b9-ee1c-4eb3-9a70-aa79f63ec163)");
unit.assert_eq16(16'h8CE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #220 ecd280ea-42d1-48ce-bb2f-249a2b454f1a)");
unit.assert_eq16(16'h8E8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #220 98e8f8fb-e9a7-4948-8922-e919acd7ba4a)");
unit.assert_eq16(16'h0F46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #220 6c8d964e-9283-4a3c-8f09-6e01e75bcf9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 7dac4415-f63a-425d-a448-2554d213fe25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 11d3c796-2876-40bf-a0e7-5b0c5a6ffc7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 9364f0b3-4b50-426f-8721-3ac27a8d1047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 462ed264-5356-48cf-8e32-f488f99b0928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 8fd028fa-c0d1-4e8c-b000-c312da8b8e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 fde35010-3e7b-4092-9909-3cf0aa454d93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9664;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2783;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #221 a0859ded-5441-4623-bd1a-14989476028e)");
unit.assert_eq16(16'h960C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #221 2e8cafb1-d902-4f5d-933a-562ab42ac61d)");
unit.assert_eq16(16'h2783, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #221 ee3d9331-ca98-4923-8e94-30dc657033f8)");
unit.assert_eq16(16'h0CCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #221 3cffaa1d-ad18-4299-8bad-8a63be755e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 ef321c9a-a4ae-4e40-b6c7-43ba35d0ab3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 535d4c16-4511-4406-82d2-9b12aabbb053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 0ac73b9e-5ea7-4ed7-afff-b7f1a38874c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 a4e5be0b-67eb-4b33-9e2e-858d311e651d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 be49513c-b06b-4c64-98ee-ee1f36bb604b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 73529eeb-b9d5-4586-80a7-24e2bb43f31e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CFE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFC90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #222 e738a4dc-1c8b-43fe-9608-f3ca48a5afb0)");
unit.assert_eq16(16'h9C2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #222 8a715d66-7e10-4af9-984a-5af18c765472)");
unit.assert_eq16(16'hFC90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #222 26ff9b07-8eb3-4716-8681-7e7bacae89d5)");
unit.assert_eq16(16'h08C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #222 1c562a73-2628-4021-80dd-c74b81a48927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 db006528-28ed-47df-a3b5-b23c37f8774f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 9cd2cb30-d032-4d3b-8d68-1a06441a7c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 79779a97-b8ac-42c8-be31-ae2aa9ec5fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 4718cd37-1724-41d3-99e3-2e6d6d2ed9c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 bbdb0a24-9644-4946-a01a-c172d089210d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 ba344d9d-9610-423d-9695-15e6cab4c386)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #223 a90af974-d6ba-406b-be5b-e2c2a1005e2f)");
unit.assert_eq16(16'hBE82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #223 2ddc8ebc-5f1f-4849-a878-f73052b2f147)");
unit.assert_eq16(16'hD4B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #223 09d88b9c-b5d7-4ebb-abf7-d60bd540f11b)");
unit.assert_eq16(16'h0A0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #223 fc5ea1b7-1630-4a6d-a19e-540b3134dfb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 7a765d95-9f06-4e7a-8a84-9a63018dc04a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 ac702c91-bfe3-4a60-aac0-f7e16ccce589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 e5df48db-4638-4c47-990c-4ab93430fd4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 d247ef12-4133-4473-b3c2-ef7952ab322d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 b44ea766-c08c-49aa-b128-a3102bc3b29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 0f871b13-14ea-4253-9605-921b3436f2cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB23C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #224 7c1add62-dd84-4363-ae7e-a82669583f9f)");
unit.assert_eq16(16'h6BDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #224 8e5fac04-2914-48d3-b466-a1e6f7fd76db)");
unit.assert_eq16(16'hB23C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #224 c0f1d2f4-0466-4f92-ae9a-135354ffd60f)");
unit.assert_eq16(16'h03B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #224 8f3eb385-720b-439a-a84f-18af4a7255c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 bbd4677c-de14-49d2-81a2-27ea20839ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 6a53fdb0-a969-46f7-8387-b459b0e47e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 5e5c8ea9-5696-4ab1-9a92-6e92a4a09be0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 e1a37764-5ae2-4824-ab4e-512188f2decd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 16e3e31a-8376-405b-b15f-298726d988b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 9d5adbe5-b22e-42ee-9108-0fb5efe79675)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC3B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6567;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h006E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #225 46d44fcd-5eb1-473d-b1d0-a00f399cb8d4)");
unit.assert_eq16(16'hC31B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #225 e4a534a7-d7d7-4fef-bba2-370f2ddae22c)");
unit.assert_eq16(16'h6567, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #225 c4c99b4f-b9b0-407b-9167-f5f96133b8ad)");
unit.assert_eq16(16'h006E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #225 36b5f890-34c9-49f6-a00b-d126d2b6df09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 d36a6518-7d0c-4bcf-ac62-e69492a5a15e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 6ad4ae27-65d0-4547-b998-02188a7feae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 d5c2fa17-299f-454b-9532-a44478986d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 b899640f-8703-4b98-8840-2718b5bcf3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 c1b48a62-267d-4db3-843a-5c638fe2ea57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 94e77556-3d88-47b7-97da-1473f0d6c32c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h259C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #226 9d5962cc-31e8-484b-ba21-f0ec443d30ee)");
unit.assert_eq16(16'h4AD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #226 371b7ed9-ee89-493b-9f6f-242680e71e1d)");
unit.assert_eq16(16'h259C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #226 a0b085a5-d396-4d41-8fd8-053b83bc077f)");
unit.assert_eq16(16'h0F30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #226 22357e18-f553-437d-9477-a50c3892c278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 aa07a5d0-e712-4d91-b0dc-8d7554c28861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 3b5ddf28-15ac-429a-8ec6-0f9c3bfc111b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 ad215b25-a221-40af-a9b2-79adacfe0959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 4ab2dd34-11e4-4231-8209-67606a4ba0e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 217eba6d-1d36-4d9e-af41-adc621efa2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 a533a593-567f-44cd-8c34-9ca495fb128b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA74B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #227 fd31d523-a7d8-4efe-be55-82ff9008efa8)");
unit.assert_eq16(16'hD0D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #227 0beb6370-14a3-46eb-baf4-a11917114a81)");
unit.assert_eq16(16'hA74B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #227 a86a11f5-8b9a-4a2f-804c-1682ad5f83b9)");
unit.assert_eq16(16'h0A20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #227 ec58c9e3-9269-4d5b-97a9-ee0b0d858b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 2c806222-83f8-4ff6-a42d-0f4be12680fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 237249c8-75f2-44b1-9387-f5c4758d9d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 814e06b1-a54b-4921-8f3f-b584be5fe2e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 3d9d34c5-7b6d-4d91-878b-2896c353d038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 1417df95-538f-4256-8ecc-a6c3e73f209b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 2023c09e-2fa7-46e8-87a2-f9ac40898cf6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7985;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1F36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #228 aee1a49f-9dd5-46a8-820c-8a7082ec0753)");
unit.assert_eq16(16'h7941, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #228 3f093d3d-c422-453e-a3d8-54c2c4e189cb)");
unit.assert_eq16(16'h1F36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #228 a1f1e6b5-4512-4fa1-ae08-d73315e92920)");
unit.assert_eq16(16'h0EF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #228 819434aa-e308-4ea8-bca4-fc9c800afd18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 f83a64ce-f51c-4184-91c8-6663e94b833f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 226fbdcb-9434-4646-9e57-1a5605bb90d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 9ae419ae-63af-40a5-894e-b7e538a2a795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 b2f87449-615e-4c97-8075-9c918b17af36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 b4207f58-5670-45ce-9683-c17de0e7be58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 cf1806ac-ba3a-47bf-81aa-c0874f8525b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8306;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2510;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0234;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #229 853cdf24-2135-4fa7-9ac1-b0d93aee1830)");
unit.assert_eq16(16'h831B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #229 ca7ba59a-a84f-4d12-9e1b-37be4b1f9d5f)");
unit.assert_eq16(16'h2510, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #229 8f03ae77-99c5-4c48-acb8-b15e29815edf)");
unit.assert_eq16(16'h0234, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #229 d2a37083-46e6-4ad2-a1b9-0355d540eacb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 6a333dd2-2b6b-413c-ab41-44235c95ca7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 4c163785-6327-45ad-b468-1425a0e9f82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 8f7e8846-0342-4959-9ea2-961e3a5403ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 5aa28bf7-8d41-4579-944a-d3367fb64d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 3c8dcdf0-fd69-4167-b499-c5ee4b523116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 2bb36a71-1a44-48a5-966f-ff60361183fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h33B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE900;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #230 87636a73-345a-451e-8939-e6af18a9acd6)");
unit.assert_eq16(16'h3378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #230 9e2e6fd8-4880-4b87-b7e1-90626e092716)");
unit.assert_eq16(16'hE900, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #230 b8abe498-63c0-42f0-a5bb-a8dc7d6857fb)");
unit.assert_eq16(16'h09ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #230 06f1620c-e6fe-4173-8f8d-fa8dd891daa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 1e480b20-0dcc-4cd9-89db-3b2b142d61d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 db86ddfb-387f-4168-ba6b-a1e0ff57e0ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 0e8287ce-37c0-455e-8bf6-7e135ecc1302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 94eaa6ce-68fc-43ec-a7a0-f25aa2a3fd2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 fd4a5eb6-80a7-41b2-a941-1bb6d0268889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 15dd9411-e8e6-4814-91f4-7dcd3bdc2bfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h56DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE37B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #231 44e3e882-0939-4ba3-b0e6-abfebe9d8bc8)");
unit.assert_eq16(16'h56B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #231 abf79171-b410-4405-b85b-450f9b554198)");
unit.assert_eq16(16'hE37B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #231 74ba83c5-229f-444a-8491-b0f722d38477)");
unit.assert_eq16(16'h05A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #231 b516eff4-3026-49f2-be16-7110dabbb495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 d8cc7d65-cbfe-490a-a646-07fbb7c63a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 f69516ca-c574-4fd6-9fde-99c9bb7f949a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 258d896f-46db-4b85-9153-b6a771429827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 6cfb3d4e-5420-46b9-9127-791d558d905d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 51b763ec-7367-4f60-8ee8-170e11b2135d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 513376e1-b916-4abc-8d2c-63945e72d274)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB97B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0355;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #232 15e7de4f-75d1-4ed6-9371-547937399164)");
unit.assert_eq16(16'hBDBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #232 a28357c1-ac1b-4262-bf22-f8ae76c50094)");
unit.assert_eq16(16'hB97B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #232 1dab6d2e-b0cb-4c99-8b26-3a36352b09c1)");
unit.assert_eq16(16'h0355, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #232 3a4963f9-71cf-4e31-bf3b-3023bff89572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 3990fb10-a7e0-4419-a507-fff62beb442f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 01cf8768-b4ae-4ee8-b10c-cc060abd9643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 6afe0149-93b9-4b82-a63d-77990306a896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 664f2144-88d2-4dcb-b5e7-2a5acdfcbf36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 0dfb5297-ebde-4485-bfce-6b17c7fc7d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 ccc331b5-763e-420b-b90a-d3145e10913d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6D25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #233 30196382-3ef9-407c-9578-746db3271754)");
unit.assert_eq16(16'h6D29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #233 b50784cc-c1fd-4b79-ad10-f698add31af2)");
unit.assert_eq16(16'h71A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #233 a6e13f95-c37f-49db-8585-c3e5b11dabc4)");
unit.assert_eq16(16'h0B05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #233 4e4e6504-f795-4a60-8929-471eb3592a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 b3f068c2-c205-4cef-87ff-010d706b2ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 dc13ca7b-8a33-4618-8d54-c5861395afb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 2096d283-5eb6-4843-a586-b1bfa8a7fab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 6353eba4-8602-4bf3-a72d-32f934926644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 efeb28f6-b1e1-49b5-ad59-5a463dfab04b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 c03a4c34-ada1-4753-a0a4-b1188a877f74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0B78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD671;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #234 2e7a6c93-791c-4a30-b1fa-99c78daa87e9)");
unit.assert_eq16(16'h0B83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #234 a3830bd9-90e4-413d-91b1-2e253c97d713)");
unit.assert_eq16(16'hD671, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #234 f0eef6d8-7e8b-4c34-83c3-7d90b1296ae9)");
unit.assert_eq16(16'h07F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #234 7620af21-1344-4876-b256-05f11fa7fb84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 97e8db74-0677-4f36-9abc-f327d38509b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 8011f161-0f5e-481a-8824-7cc3c338346c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 111adccb-088d-4318-b956-ba5f40a9b278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 d4122b78-db77-4ded-9f02-c26ff182d1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 0691f297-2d28-4ddc-9373-6742676a102e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 db0e16fe-98e0-45b9-9ed5-2596f9b36672)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8206;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDCB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #235 30626495-1abb-4cb9-9f58-339503de44c8)");
unit.assert_eq16(16'h8266, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #235 ec4db755-3571-4f8a-b1c2-d90756aff6b5)");
unit.assert_eq16(16'hDCB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #235 92c9ac93-d698-4557-ad8a-28c1ecd3154b)");
unit.assert_eq16(16'h0B92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #235 9c0e819d-4a25-4673-a8c2-320b6d056916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 cba68572-c279-4bae-ba5a-abf34d358802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 9a99c0e0-4848-4ea5-b37d-ef586948bf73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 a4bf8daa-ae51-4c1e-94d2-22f28ce9e7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 bf2f7382-8c53-4e54-941b-8d569fa5ee5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 86e27f71-5e83-4a1f-8eda-2495056e613d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 8837d310-9bf6-411c-89c1-b295fdc7311a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA885;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #236 ec833c8d-733d-43f3-a840-83c8c14953d1)");
unit.assert_eq16(16'hA8AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #236 552e37ad-5f55-4da0-8052-adf11a9a9884)");
unit.assert_eq16(16'h30BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #236 2e4175cf-1423-42fb-b901-08065782cc64)");
unit.assert_eq16(16'h0AC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #236 af9d6149-2c26-4b20-b66d-db451bd13d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 9b1d1581-7d82-4a56-8ad5-453efacee36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 23ded6df-eba4-4b7e-832c-f28d415edef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 9b351f17-9748-4b6c-9b72-da1e73b03d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 028945ef-26c2-4ffb-82ac-fcfe2a90db16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 e15d65d9-951f-449c-91b5-f08358340d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 e2bff235-ca31-410a-8a20-28cb2607245c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB051;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #237 357d8124-ba97-485d-9d1a-4eebdffc987f)");
unit.assert_eq16(16'h8A62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #237 630177fe-4abb-464b-a8ff-9b6fc1c23bdf)");
unit.assert_eq16(16'hB051, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #237 6ae142ee-4615-4d8e-ab5f-69d61ed7c9b7)");
unit.assert_eq16(16'h0D19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #237 6ab3a20d-8e7f-4881-812f-904000a197cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 efe646f9-2a8b-41f5-b753-f18a269fd281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 77db69d5-6557-4090-987e-70eeab801fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 697238fe-6a23-48f9-bc54-5e1a1336adb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 ce49ed4f-647b-40e5-9e1a-679ebc442806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 e66e466a-96ab-4367-aef2-40072af1dcbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 2cb7a291-dabf-47a4-870c-b3d5d1d97705)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h730D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h17E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #238 fecc9763-1495-4b56-8b20-fc4c9e93c910)");
unit.assert_eq16(16'h73D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #238 569e37e3-e424-4e63-95d7-acc68535674d)");
unit.assert_eq16(16'h17E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #238 8ec0557f-30a9-4096-8c89-961a9bd88bec)");
unit.assert_eq16(16'h0C7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #238 5198f697-f7db-4bf8-8b18-b3438dbfb7b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 309a3805-4541-4e8b-90a6-15d289461500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 19fa47bc-30bb-495d-b09b-2c918900e2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 80f6ea81-ab4b-4172-afe1-4210e5bfd3a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 8f76558a-1633-4db6-8795-68a3c7461468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 4b7036b1-32e7-41c9-818b-0693792a4fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 f4cb42e2-26e1-4bbe-bfb8-9c6dc6782be9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD717;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #239 3dc29a4e-af2c-4a39-8fa9-bb2381228277)");
unit.assert_eq16(16'hD76A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #239 fdae1c17-a249-4aab-9b13-c2a7c98dfc6e)");
unit.assert_eq16(16'hBE10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #239 4e158ce0-0410-4648-bd78-f1e40a9f7e22)");
unit.assert_eq16(16'h08E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #239 34a93a50-6c1e-404f-a0c5-9c2121ea1bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 d7dac55e-5451-4ab4-925f-9361ba17dfd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 92dbcfb6-38bc-459e-baf5-537044cb5882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 11beda84-9a3d-44cc-b722-acc713545b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 8d19a857-c0b7-4afa-bbc4-0648642b8973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 823d5728-d9d9-4264-83ee-499c45f0b3b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 7438bce9-1aaa-4618-9b88-2c9a5dc9acf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2CEB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C7F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #240 53d2cd3a-9a40-4bac-bc78-4330197f32f4)");
unit.assert_eq16(16'h2C8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #240 69fb13d3-0cf5-4a53-b45c-1cf95301c9ce)");
unit.assert_eq16(16'h3C7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #240 905011df-9b90-4704-90df-15cee527d5a6)");
unit.assert_eq16(16'h08B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #240 a93086d6-dfcd-4d92-b199-8abcb379f2b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 e1208a1b-0ba3-44a1-a12f-43fba8647d6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 d08c5273-e560-47d9-8118-75bf8814a67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 5b2e9008-892d-4ce1-a0ea-ca97c6532a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 f45b392f-816d-49f2-a8a5-42a473d60bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 3db4615b-c82a-48ca-a4b4-220476986690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 8e28b6e9-c4ab-4943-8008-f7c4a4b40a0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2FB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #241 be029fae-b54f-43ee-8924-c7bed44962ff)");
unit.assert_eq16(16'h57AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #241 3fc7ad47-a82e-4669-a34e-3d6a569db505)");
unit.assert_eq16(16'h2FB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #241 975606dc-3dee-4e5a-913c-48db92816a12)");
unit.assert_eq16(16'h0CAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #241 7cfc8275-bcce-47ac-ad53-fb73282277b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 086471e5-392f-4f15-bafa-5dfad64653e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 3a03af97-7482-4519-8162-b65802e60bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 c7365d20-6d07-4226-abdf-554a388b6db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 9d2c8640-268c-4685-a7dd-b37815b70aad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 77579fda-024f-47c4-8c64-0c312769753b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 bd982cce-7849-4e77-9061-26b61372571c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC4A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h679C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #242 94308396-6a2c-4624-b6cd-8711412a93bb)");
unit.assert_eq16(16'hC45E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #242 a28e251f-74d1-4808-bdc3-eb56043ff0a7)");
unit.assert_eq16(16'h679C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #242 dd9751b9-d4c0-4822-98fa-41aa3e50b69e)");
unit.assert_eq16(16'h02D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #242 849d6acb-9c9b-4673-b654-8c8375a37f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 9b7c4a5d-3de5-4103-abcd-cf8092acf350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 b2503710-3ca2-4a79-a551-b189c1b8a20e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 29a5dbba-1412-4f1b-b631-71c9775d107b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 959deabd-2541-457d-9263-dc95cf037a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 c5b000a1-30e5-4ab9-aa11-2bfddc580aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 d7e17953-7448-47db-9915-33eb8acde017)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84B6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h153C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #243 0e3b1ea0-4e42-49d3-9759-2e3e7697c50c)");
unit.assert_eq16(16'h846E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #243 649ad369-108f-4a86-aa1f-ec0de2585fcd)");
unit.assert_eq16(16'h153C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #243 7d455397-ff53-43be-9385-f7e620439302)");
unit.assert_eq16(16'h05E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #243 b6fb9afd-6aef-4492-b0df-67a5ed7a0528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 1d909f98-5914-4638-bccb-197e1a0ef3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 4c3348eb-dbce-4efe-9174-4ff33f3185b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 77ef6029-436c-4231-ba2b-00a8f7955911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 50645e72-09e9-4b33-9ff2-74c4cd753a27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 94c35519-160f-4007-ae3e-344880b7de8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 b7b4e5a8-5ee3-4e3d-b360-0fc62b5456f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE513;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #244 d27de3d6-2f18-4c62-97d1-56b2bd2349e0)");
unit.assert_eq16(16'hE5CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #244 0c34548d-8164-4805-ba98-dcdd42b7432b)");
unit.assert_eq16(16'hEFC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #244 f1ca76b8-7e7e-4a65-9da4-5acb78eb978d)");
unit.assert_eq16(16'h05C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #244 602fd892-df4f-4b70-ac67-19109a3296a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 e53301a6-27ac-4873-bf73-85cac71d43f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 2250cc21-071e-4576-820a-5064995fec19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 0c16c241-f316-4244-9a92-8d9bd1525df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 ea168f5b-32ac-4ed3-af5c-255c5c320893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 4a938985-766d-4084-9815-c946dad5bc82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 b5ade6e1-23b1-44cd-bc90-4805c90d8051)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h428D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8231;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #245 a958583d-d6cc-46aa-9e7e-f6b0f14fe734)");
unit.assert_eq16(16'h4248, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #245 e8946027-078b-41c9-b427-0ca38c621ae7)");
unit.assert_eq16(16'h8231, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #245 7d213988-0047-427f-8bf6-cd42314f1d09)");
unit.assert_eq16(16'h0CCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #245 29f484eb-8da5-446d-b761-913e61ead10f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 7760c4cb-d45e-425f-8a15-9586da3558da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 51348e11-e227-44a3-9931-fafe69ffc602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 110b4fa6-c19d-4234-80e8-9740544b50b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 1efdbb3e-f825-41be-964f-a782cda16686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 548f07f4-257e-4f1b-b8a3-6ee8c0ec512b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 d597e65b-785d-4582-a12c-b42e8f03e127)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7E12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0742;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #246 35650634-bffb-4989-a73e-a550559f4e99)");
unit.assert_eq16(16'h7E88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #246 745c7b15-fc38-43da-8984-495331a7242e)");
unit.assert_eq16(16'hD2C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #246 649d03b5-ce69-4ac9-897a-d11958d0e88d)");
unit.assert_eq16(16'h0742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #246 f8553d3b-888c-4187-b748-4274545de912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 5707af48-f839-4307-8ffe-056b54f65412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 75d5c445-31c4-4646-b2db-63493f6dad36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 427f366c-474e-4b9e-b607-bd0b72ecf6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 801084e7-91e2-4f89-968b-9ac6f9a1dd83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 c8c018cc-f556-4b63-881e-31633e93de2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 b90412c1-000d-4c34-a5ab-3f8ae9302777)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC839;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #247 55953a8f-1370-4b5b-bc4f-2564c94efd3f)");
unit.assert_eq16(16'hB891, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #247 af11960d-fb63-4365-9c66-5ee730c1bd94)");
unit.assert_eq16(16'hC839, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #247 083dd675-14a5-4f97-8411-0443599ebee5)");
unit.assert_eq16(16'h0D49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #247 40f28f0d-1a7d-456d-be08-0de1c8234918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 5d880129-82db-4214-a36b-7770b8e0d185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 b29038a6-1873-4f14-aace-ae0b4b1c8db8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 8fe71eb6-fe0f-41b4-bbc6-52303561f9b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 a8245321-9880-4eec-95c0-2fccf1201baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 e47ce979-449e-4caf-b58a-7d83d15dcfc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 caad6067-b961-40ea-83ac-4f7115edbdf3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB79A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9784;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0882;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #248 1e143274-3455-49ea-97cb-565ef34f96c4)");
unit.assert_eq16(16'hB78E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #248 189a0690-b9a4-4872-aba3-b3d4d4432747)");
unit.assert_eq16(16'h9784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #248 6061fb54-c161-4d58-ad26-5ece4c6d9a78)");
unit.assert_eq16(16'h0882, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #248 65cce501-41a8-4b59-a292-ff522706a8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 4ae77534-cf56-4a10-b77e-cd9f06cc4c5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 4a205730-5823-4483-bead-467ddd9cbeae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 34ad42aa-c597-4966-ad16-fc18d131332f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 df7c2d9a-a324-4fbe-b4f3-a79fd5d17540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 36cde903-367c-4eba-b7c4-322eee896d36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 bc09eac8-7d9b-45d3-9891-24b093ec2639)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7B32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #249 ffa33667-9861-4f44-a90c-f7da858f9471)");
unit.assert_eq16(16'h7B8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #249 61befe50-d089-47b0-9fe7-755904bd0c64)");
unit.assert_eq16(16'h7D7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #249 6da3d27f-9618-4e24-8f6a-f2cd22efeefa)");
unit.assert_eq16(16'h0DCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #249 a187b600-b212-46f3-8145-ee9c0ffec544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 f600b6d7-ffc7-49c5-9d78-48178d5bf580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 9cd57a14-98fe-4181-bc69-737e23b20834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 7fa8a9fe-bab1-4880-9b88-e88776c4a2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 e6c7e275-1d14-4a79-82b9-13fec570f5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 ca48f724-f3e4-4d01-9c18-767cd6beafa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 533af6e5-1d52-4007-9361-6a9945111652)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h38CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0547;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #250 ca93b329-e133-4e93-8793-7652cf1fc0a4)");
unit.assert_eq16(16'h3889, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #250 25d19e2b-63cc-4d25-ade6-45b30e04f8d6)");
unit.assert_eq16(16'h38CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #250 8adf6680-2c85-4f72-be0d-35849f827532)");
unit.assert_eq16(16'h0547, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #250 99d49b27-fbad-49fa-ada1-8bb82a4a52b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 55d28781-ffc1-4fda-977e-b2e4721eaf0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 5da66d85-168d-4305-9d25-21062fc01053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 0dd6e1cf-076a-49a1-a34e-75aa10ac7eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 8c843a91-0541-43a7-adbe-a769b46ceeb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 1f8d6eb7-9785-41d8-92ac-3f1cd3016c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 5ba2ee32-71df-4a4b-a29e-af28ff44bc1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EF3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #251 17bb44ed-01be-4c4e-83ed-0442aa62889d)");
unit.assert_eq16(16'h5E69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #251 41951635-2640-4c1e-9713-99c59f962afa)");
unit.assert_eq16(16'h9B1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #251 e9337704-b4e7-487a-b32a-3d0b3211d411)");
unit.assert_eq16(16'h0FFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #251 6c763d52-ae3d-4ebe-a0b8-ccd1e98800aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 50765a61-d7da-45ce-bf0c-4e9b204ad7e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 dbe54f9d-e9da-4438-824b-9d542f33fa2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 a5e11e59-93ad-4c56-9dc3-48c65fe4eadc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 9691b796-fb17-40ae-91d7-6d531f7dffa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 5501faad-2b39-4caa-b23b-4ab4c9c787b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 e1559025-e4f5-46fc-8e76-729798cafe82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF9DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5AE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0423;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #252 4c6b1909-f2b1-49c0-95d2-f2f327212f06)");
unit.assert_eq16(16'hF918, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #252 cea4eedf-70f1-46b8-b879-78c0f5b83739)");
unit.assert_eq16(16'h5AE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #252 7c664e3f-b595-4f13-a324-88c7f937ccdf)");
unit.assert_eq16(16'h0423, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #252 f421cab5-1883-4141-a3a4-c3a218572bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 91c6859f-e7bb-48c7-becb-989ce63ff7b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 24e2563d-19c3-4b41-97af-9e5f7b6582bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 900a6064-4ec7-494b-a6d4-9c49a4965711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 16bf391e-c684-4d1e-8418-d5445a798853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 1d0ccbda-89af-4a43-8093-8c85446c753e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 b546d7d0-a3d5-413c-9e9a-446d02c4bc9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7BA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA2D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #253 0a649455-bad1-4237-8ed8-10e6ae2f5813)");
unit.assert_eq16(16'h7BC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #253 aabbf642-95ab-44dd-8fd8-3fabc4ab8fac)");
unit.assert_eq16(16'hA2D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #253 49d8e95d-468c-4952-8fb7-158e66a7840b)");
unit.assert_eq16(16'h0C63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #253 4d2f5c33-ce4b-4ce3-87b6-f8e892ac2c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 5f1a79a3-c1a0-4061-a22d-1fbb712d1b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 8fc38d75-a7f9-409c-a16e-0e84bcb61569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 2b740aaf-a5bb-4235-baf8-a7eed98e5567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 9e875613-36f0-434f-bde7-7d0faafba028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 177a6967-7d49-4391-b816-ba59666b8060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 280daecf-b462-4a7c-8ab8-e5df9579156b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAB96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h783C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h018E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #254 6c25e8cb-348b-41c1-aaac-2ba7790419ce)");
unit.assert_eq16(16'hABB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #254 134b7954-abc0-4500-ab46-c15b84e5cba6)");
unit.assert_eq16(16'h783C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #254 199c7558-c027-4a66-8e98-ff5660632913)");
unit.assert_eq16(16'h018E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #254 46a1bd48-8b5d-499b-94ad-b803b112afd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 7e630191-e404-4432-9acd-772a2b33b704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 d0691c55-253e-4ca0-a00b-b0ef39fa6d13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 edb54c95-73a8-4779-827a-ed940d4b79b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 4e681d25-2097-476b-8e27-4008e7c28874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 95b94ebb-0d8b-40be-a124-5ff1ce82d18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 cf61861a-368c-44c7-b674-ec2194d41b30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hADC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #255 5ec42314-9df3-4f15-be16-4912f392c592)");
unit.assert_eq16(16'hAD93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #255 6aa043d0-9908-4a57-827b-05f6b8a1f4d6)");
unit.assert_eq16(16'h73D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #255 b3255055-9ca6-4398-99fd-bc599a1a22bf)");
unit.assert_eq16(16'h0F08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #255 daa1a01d-90d2-4fdd-bbeb-4991b3b49127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 094d4d90-18a8-44f6-a52b-5b34abc1da08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 77b67cba-ac6a-4875-879d-ce18b7b9a124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 a5531b74-7912-4d3e-8819-e40e1fc27a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 a17447da-8dc7-4994-9e10-0776352894d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 b85653f5-3f67-4b00-8ed6-d8a704471a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 44e842c3-8845-41df-b86c-8013b06c1f29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF9CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA94A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #256 d844c954-5aad-4f2d-8801-5f2df04e3224)");
unit.assert_eq16(16'hF9CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #256 937f20b8-b528-4b2b-b9aa-326d7d290130)");
unit.assert_eq16(16'hA74A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #256 57c34044-4e44-43de-baf6-161e0a0aae53)");
unit.assert_eq16(16'h0FF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #256 aafdf825-48ca-44b0-ac89-d3437d75192c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 1a209eb6-cbef-446e-9831-cb54bcfeee40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 09c8fba3-5d9d-43e4-88b9-bcf99ef1b8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 5b096246-19bb-41b3-bc0c-414ab5cdca97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 12e2813d-f0a9-4d79-a443-219d4b36f730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 4efcec1b-1420-49b4-96a2-0f40833b165f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 39374e23-161a-482f-94d1-e5a93680fee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2176;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #257 807d614e-8750-4df9-b309-e40a974aca10)");
unit.assert_eq16(16'h2176, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #257 df7dfc32-d4eb-4b21-bdd0-4fbdec2e8d01)");
unit.assert_eq16(16'hDE0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #257 a4ee6069-7cb2-4be3-988f-8eedb061092a)");
unit.assert_eq16(16'h05C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #257 a962d53e-303f-4c87-877f-e153b9645bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 92078520-ac25-4ecf-a60d-64085736430d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 565b7e9e-a21f-4133-b4f7-99275f5061ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 6e31f67f-ec0c-42d0-8d7b-8a420cf5b1c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 9a86940a-26ba-4f82-afc8-a2edee6402ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 d88526fe-0010-463e-923a-6813cd2964fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 c98da57a-f663-478c-a28d-f1118bf67ec3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDFF9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9C1D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #258 fbd36bc5-4a8b-45c3-a590-31474c6c3d96)");
unit.assert_eq16(16'hDFF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #258 abc74de2-961a-4b23-89df-3b5534c7e8a5)");
unit.assert_eq16(16'hB31D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #258 db6c61f9-b832-45b2-97ab-a879ada4eba2)");
unit.assert_eq16(16'h05E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #258 bce99b89-6a5b-45fd-9db5-ad872cb3ea65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 8c2c844f-98eb-4649-89c9-b1197d3b52f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 59ec656e-40ee-4794-94d8-7af641ada3ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 89eebb47-a187-48a7-999d-cfb3c3d92d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 3a58bd93-37f7-4a6a-a97b-5fa6b2d8b8a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 5d508881-98f8-4a10-b9f9-7e0f5952e40f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 cc3b8985-76a4-4005-a9b1-acff157f9e51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6D63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #259 382661cf-3597-4936-b9ea-9bf6c3fe94ce)");
unit.assert_eq16(16'h8B97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #259 d0035dce-d4b0-44e0-bb2d-919576a6ac04)");
unit.assert_eq16(16'h4D63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #259 295ba002-19e7-48cb-b0c8-8241c9af7ede)");
unit.assert_eq16(16'h0184, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #259 aa199bf2-3c54-45af-9c5d-c1a67f07bfe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 5797edfb-b135-4e09-9171-d76866c38994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 29912c78-4100-48d6-a4cc-5eeb856e7830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 3a922e97-403e-4ec8-ab08-380291df20e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 3132f72e-5821-4ee8-8038-c222ca4c4fea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 886c4929-9064-4c3e-ad0e-790e014c3a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 aa12cd29-6932-4621-93b9-8e25e965e038)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0FBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #260 b702de8f-aeb5-47b9-b201-1a88d87b18c2)");
unit.assert_eq16(16'h9B31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #260 bf7cfad9-10b4-4ffd-b21d-42695f2826e2)");
unit.assert_eq16(16'h82BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #260 6fb56888-6e12-46ad-8bee-76722097d08b)");
unit.assert_eq16(16'h0A0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #260 60c52c0b-be50-409f-babf-9c8d6d277c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 082151b8-11b1-46a9-bad0-25e72fd76579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 c7b51bab-8b7f-4a99-9d60-c193b8aead0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 94df1b93-2fcd-43f9-8e9a-46fc923350cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 804d56dc-00cf-4165-93c2-c9316a161d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 4d60e676-528d-4ac3-a3d1-657d1821d97f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 0ca63ce9-439a-400a-8695-b3f1264c4703)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h682D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB5CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #261 eb516c03-871e-4edf-b45b-8e24b64c9b44)");
unit.assert_eq16(16'h682D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #261 4588b171-c14d-4120-8462-6217ad9c0e33)");
unit.assert_eq16(16'h9BCD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #261 83c4c00e-2646-402c-9a8d-0f6a9759db69)");
unit.assert_eq16(16'h00E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #261 737b9de4-f4e0-461e-b009-161c63cbe18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 6d6da190-0744-44d7-997c-f93477c35cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 f4c5b675-1123-4452-adcc-4c2d82a4fe5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 70439794-e451-4752-9647-689c8027ca86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 b352bd9d-dc3e-4390-8f87-7dc43957ff25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 8b5c469e-a2fd-476a-a2d0-fcb9dad6b8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 f55d6548-3457-4956-953e-081c1a65b300)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCCF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1A18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #262 176adbc3-ad64-487d-a156-3cffe37e0445)");
unit.assert_eq16(16'hCCF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #262 867651b9-aa4c-40b7-b981-57f9c66914b0)");
unit.assert_eq16(16'hB318, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #262 53b16029-9895-4fdd-bc6b-6955c0bb2d10)");
unit.assert_eq16(16'h01B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #262 04e62ff5-c81b-41cf-8454-e1a0c694c0ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 74a20ecd-3d3e-4570-a0e7-3f50023404f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 6e70b6b1-f553-4793-a78f-8d245916a185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 ecfa344d-12d2-4284-8c64-6ea958ecd8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 0df87648-296f-4912-b536-7b1a0aba7f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 6a0ba99e-ea86-456e-9e01-95f5daa4ed83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 9bf2950d-01e7-4762-877c-8d69a1e63a48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1D39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #263 819d85ce-e1e4-45b7-b8bf-f70fe1b0db02)");
unit.assert_eq16(16'hBB69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #263 729b0852-a69a-4a55-879b-a02e702da9f6)");
unit.assert_eq16(16'h1C39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #263 1411b3f3-2402-49b4-ae9f-db0d730e57c8)");
unit.assert_eq16(16'h0C9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #263 33aeb59f-fbbf-4fee-ae46-a31f5e101040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 38c3b66b-4f0c-4633-84ac-2df13c7ace5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 9e6d7a1e-106e-4bfa-83f6-6bb3183c7982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 0f384512-4864-43fd-a460-37f489565081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 40c408c8-06ab-420d-91b4-118aad352bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 8d158972-d977-46c3-862d-2f8d75b3190a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 ac12bd79-932e-49ca-94a6-177e927c7e8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD87B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0285;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #264 3d84f112-69ef-405c-b86f-10c511e75a9a)");
unit.assert_eq16(16'hD87B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #264 8dd098ac-e951-40ee-92fc-2ffe992cda7a)");
unit.assert_eq16(16'h2D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #264 6cc39a76-6f51-470b-88b4-a1dbda70255d)");
unit.assert_eq16(16'h0285, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #264 041d4bd2-83a6-4cda-ae1f-053c84c0eb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 0d322a62-e4d0-41b4-9d7b-6b814b5d2179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 2862b706-efc4-48e3-9a39-7ca74cb03831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 cbdc0e16-ba58-42cd-afd9-dccc898c8e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 a82a8bdf-51d1-4294-b618-709f05de6913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 49cb8e77-73bf-4f6f-82da-5265bd0932bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 63f9d567-4477-4936-9410-0358bfdff04e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h052B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFF8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #265 1d062c98-b555-43db-ac5d-623eb4327540)");
unit.assert_eq16(16'h052B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #265 3a325133-39a0-48bc-b5d3-596a12dec91f)");
unit.assert_eq16(16'h928F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #265 6af95fd6-69f0-4455-a4b8-52fca6c8206f)");
unit.assert_eq16(16'h0901, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #265 76bddf47-4017-4027-aa41-df1c301c0458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 b2938cca-6d28-4d71-92f8-fca0be30ccc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 643bb965-b06e-4d99-a525-4210b06b3a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 e8fc25c5-463a-4872-8cdb-0757359cb196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 235d0c09-8ef6-4e03-b00c-ce7d6d8ef797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 5a0a6980-1271-4196-8f9a-ae48f3107dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 5c37ea86-2a5c-42a0-81d6-2e1ac5b87090)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0599;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #266 727a5bd5-df1e-4f30-b301-d08a3e67ac79)");
unit.assert_eq16(16'h0599, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #266 d063d656-2e60-4ace-844c-90a9597d6c56)");
unit.assert_eq16(16'h7D79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #266 d6799a1e-9194-47a9-82f3-81fa84bd1bfe)");
unit.assert_eq16(16'h08DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #266 95d988e9-6f17-4ffb-92a0-a8248965f84d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 2156a7cd-910c-4e6b-b121-2e27e1bcad45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 44018a84-a916-471f-be8b-dd35821cf210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 fadb6c26-30c6-421e-9f5b-9fb97f72ba77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 ffad73b8-1341-45cf-ae06-d02c845e7b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 7576fcc4-234b-4a8e-bab5-cf7d37d01941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 787fd24c-a7f4-43f1-9bf4-074aaf731e15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD30B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0479;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #267 e6be1fdc-e2db-4df1-9d78-512ebc04cfc5)");
unit.assert_eq16(16'hFF40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #267 d2801079-9bae-414f-b0a9-f5b086d91ca4)");
unit.assert_eq16(16'hDF0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #267 177658a3-9928-4b8d-aca0-0813260b5050)");
unit.assert_eq16(16'h0479, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #267 1e6480bf-5f8e-46b1-a36f-bc433a9de779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 5a82f640-bae7-4302-bc4c-8093ca019d9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 df4e16ca-33a5-4b43-878c-6658ab7bfe88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 66ef7446-b174-48ad-b50e-8c4170343d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 57a521c3-b25b-43de-8109-15ad8d454870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 5342fa88-28a6-41d3-9ac9-bca6802614b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 cd921ea9-dec9-46c4-bc30-a58e3d2d0297)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8F0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3411;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #268 467e5eff-2fa3-4497-981a-77b4095d357c)");
unit.assert_eq16(16'h8F0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #268 c286ec06-b3d2-469e-aa46-49e94c11b296)");
unit.assert_eq16(16'h2611, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #268 8107b533-b93d-4ba8-b352-25a70ca4f33e)");
unit.assert_eq16(16'h0DB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #268 c521af8e-a829-401f-a1dc-f1a16e1ab9d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 9ce2a721-ccb2-42f5-b3ad-20beea55bcda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 ca218ec0-3ce5-4627-b450-66c29c712c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 ca137650-0ffe-41cf-97a8-f5ad4c98f4cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 73a0dbd6-67fa-4ad4-8f5a-0c616a39af5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 ada796f1-94e2-4379-ba6f-fa899102d5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 5c5cec30-cfce-47cf-8f33-f15d7b0b8ac1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h19F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h094C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #269 cfd847aa-2e91-4d53-9a1a-00a08ba7233b)");
unit.assert_eq16(16'h19F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #269 9681158b-0069-44c1-8a10-020fed61425c)");
unit.assert_eq16(16'hFFD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #269 f7079d24-93d4-44f9-83d5-2b09311bb96a)");
unit.assert_eq16(16'h094C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #269 9fbb229b-8eec-4afb-9e64-8e783848d5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 7086ea24-1e78-4dc3-898e-58130bfb7ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 e4f0fc4b-46f2-4c96-961b-d4bddeca9f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 dac6d4b6-2501-4df5-8da2-3c5a16db639a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 e72f9629-fe59-4ecd-bdc7-5342926801f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 1b3d1c74-e1c5-42db-a84b-4860241cda12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 5468d26e-9c61-493a-a536-d3376a5dbbbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h414E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #270 0675f698-f0d2-4f71-adf8-44196522b8e8)");
unit.assert_eq16(16'h414E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #270 1186545e-eadc-4856-9589-babe5dee7b5e)");
unit.assert_eq16(16'hCE73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #270 1c1d586f-866a-45a9-b10a-dce246d7501a)");
unit.assert_eq16(16'h08F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #270 e951aae1-d67b-48f6-ba5e-726547129393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 6420c549-5817-4d29-b926-68d95177f72b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 e5f7fd5d-5281-4b2f-ab25-2528de356989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 5bfff8c8-5c35-4138-978b-9d0ac73c3c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 63a726f1-fc87-493d-9ded-0ed0f0f50d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 05cb4221-c04b-4835-b3ad-21f1e7197987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 0377b50f-a52c-4374-bd24-b408cf013fa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3EA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDA2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0323;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #271 d736b4b0-5a38-4fd2-bf92-006eae6b129d)");
unit.assert_eq16(16'h3EA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #271 d69fe94a-646e-47ab-b255-f4c8ecd5ffe6)");
unit.assert_eq16(16'h152D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #271 791b73fe-b3e3-49c5-902b-b6c02634cf4a)");
unit.assert_eq16(16'h0323, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #271 51b958d4-b373-44c3-9ae2-6bb703d1915b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 39084337-93c0-4c72-ab2a-696d0388411e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 8e5754d0-c0d8-41be-a809-aa9720e01e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 7f88f9cc-c584-4635-a7d9-619fb3a50bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 156606c0-c774-48a5-822c-b437106c6a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 7eb570ee-0bad-41c0-aba0-cb331755018f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 eb215cea-5c10-4e1a-9505-ae963e6cf166)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h873F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0CE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0363;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #272 3b90dce5-e7b6-4f51-993a-09f2b115b0f0)");
unit.assert_eq16(16'h873F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #272 657bb9fb-488c-4d86-bf96-8048c8549923)");
unit.assert_eq16(16'hB1E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #272 8cf21889-5d30-404c-a865-26d4dfd4637c)");
unit.assert_eq16(16'h0363, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #272 b046a5a2-7b5a-4920-9ebe-adb69bed9378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 5a0237bd-888f-49d0-9ff5-510a94bf7076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 8a87cb45-71a4-45d6-ab01-e5b17b423fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 21a5cd7b-f247-4562-bc95-b6892c94b6f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 06663307-dd1e-4460-98be-bdb3a0f121e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 7af126df-b5be-4adc-95e9-a437adf63644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 512292e6-184e-4911-8f75-57f7e3fd46c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA784;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h571C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #273 2464bcd1-520f-4c48-b894-abcfafc1d6d2)");
unit.assert_eq16(16'hA784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #273 0301ca62-7c9d-4e2b-a2ff-720c23781750)");
unit.assert_eq16(16'hEB1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #273 213ad725-ad68-4379-ab1f-404cb2cdf0a0)");
unit.assert_eq16(16'h0053, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #273 f7c52e66-dc40-48df-a996-4b1d6c769d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 2e392668-b19a-44b5-909e-e5b94d689edc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 a745314f-1d73-47a7-a452-ff636d2efacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 d76fe28b-9b4f-4f0d-9141-53e63a49c7b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 366c61ea-2783-4104-a713-52002c64d4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 fcc92788-4244-483f-ac98-9eae60b197c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 ad2b6fdb-2def-4c07-85dc-21e0a297bb50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB085;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD1F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #274 298ba6cb-90dd-4dab-9959-500b306fa11c)");
unit.assert_eq16(16'hB085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #274 25b3f272-f67f-427b-aff1-bd48c8d7f64a)");
unit.assert_eq16(16'hC2F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #274 b2af87e6-a369-43ae-9d8c-2497253c68cc)");
unit.assert_eq16(16'h09AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #274 e6a9c589-829d-42a1-b691-20e888696d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 ea699b06-43c2-447f-b598-5852a042f66b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 31cc6a9c-47bc-4a6b-b6ba-8c10fbeb7e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 9ce0c88c-0b87-4536-b994-700df97d900e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 dbab36ef-2729-4988-add4-a706ff4c644f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 ad94fe55-e0ee-4c61-8646-974ddc35308a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 9a616808-c484-4899-a03e-461330977408)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h366A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h021D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #275 eddce368-7194-4cc7-bfb3-668e0ea30279)");
unit.assert_eq16(16'h38FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #275 f84a1ae1-986c-4dc7-b447-2afc4516dde3)");
unit.assert_eq16(16'h166A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #275 8516e726-1146-43a3-a2e8-3eaa4a016518)");
unit.assert_eq16(16'h021D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #275 09fbbfad-43b3-4610-b264-11471a760dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 3bbdb4e6-c738-4026-ae4f-a626223c3e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 e108ee26-70c8-4965-ba47-448d7899a8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 2f91e136-5733-4dab-b5ad-74d5927d5f98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 afecb0c5-6b01-4e9e-9db4-ab1a49d96106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 5a3c5832-32cb-4875-a205-ef9049295202)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 66ab89d4-3f7e-45a8-9ec1-61354da67436)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0658;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0CDB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ACF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #276 db8280e0-ef6d-4b48-90ee-67dee421a21e)");
unit.assert_eq16(16'h0658, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #276 29dbc029-785d-4c89-a53a-33a59c37a212)");
unit.assert_eq16(16'h65DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #276 086fd160-a398-4a19-84c2-effe08d3697b)");
unit.assert_eq16(16'h0ACF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #276 c909f021-980a-4d36-b43b-e3ed7713660d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 c0b7bbca-3162-442a-9c44-1db1af4fa624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 6fdb0262-45bc-4d09-86bb-47e446cce375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 211dc42d-c80d-45d8-9e9c-7e23140d6c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 5b04bd61-4192-476f-84fb-8322fb611531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 a512d316-c7f3-4e79-bc42-350d7fd2ab0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 62c91999-5d9d-472b-b366-36dae74486c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA63B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #277 78735dd5-3e28-49ac-b203-fb00662c58bc)");
unit.assert_eq16(16'hA63B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #277 0ff5b247-7adf-417d-87a0-51cc2909c7ad)");
unit.assert_eq16(16'h4C6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #277 3e950103-e3d1-408b-a3f2-898951cf9664)");
unit.assert_eq16(16'h0D18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #277 56829f24-85d9-4aec-b440-1b6066a9a29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 1e6eb1be-eed4-4285-87ef-1a918074897f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 af29741e-8aa6-4598-89e0-74f46263e3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 d950f903-66ad-481f-b034-518539c43961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 a685ceac-9cbb-45f2-96b5-66539096d8ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 f94cecf3-e95c-48bc-af54-46e6acae88f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 ff36bb1f-e847-47bf-9a7b-ee4a5a6bef78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h64D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6402;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #278 74ea3ce8-3a08-4519-b7c9-57c79ace377b)");
unit.assert_eq16(16'h64D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #278 878d024a-e13a-42b7-b05b-d747f8b16784)");
unit.assert_eq16(16'hBC02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #278 9dcbebd9-8bc7-43ad-a548-11427e361796)");
unit.assert_eq16(16'h05E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #278 d096094b-f6c0-4dd8-9372-2d15dd0f74aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 bb6d0a46-e940-4761-a3b5-9f6e30d36b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 e7492e18-e09c-4c9b-870e-953242a2769b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 52d5b00f-c5c2-40c7-9ac4-f0378d1ef80f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 94a687b8-b19e-4e6b-b273-428965ad8d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 5ad34cd0-2e27-4755-a0f2-c593ace9aa48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 083c85be-cd3d-45fe-9aee-bade19d2c9b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0965;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEABF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0462;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #279 fb8afb99-158d-4a88-a493-3d5564fcfd23)");
unit.assert_eq16(16'h0965, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #279 9e7622a0-33a3-447b-b688-fdd11b329285)");
unit.assert_eq16(16'h8BBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #279 c892c855-58ec-4f87-b7b8-ddd3b0b87511)");
unit.assert_eq16(16'h0462, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #279 87f9a202-9e1e-466e-93c2-6caa3060db4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 3cf78ceb-9fa8-42c3-ba1a-ef075798816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 d6deedb8-d2f2-407a-859a-16bdf47130b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 a5b1f54e-6a84-4635-8f2c-a08879341c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 a25286a2-e295-486b-9b34-542f7db96c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 8d2a40da-2dca-4afd-97f0-20423d1f22fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 b537d54d-18aa-4eff-a01b-ae781a5c32a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h54AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h36CF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #280 0f63a89f-04c0-4682-87ea-992a0c86dc5c)");
unit.assert_eq16(16'h54AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #280 cba200cc-b8c8-44b7-951d-7b05977ffff9)");
unit.assert_eq16(16'h35CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #280 186c710a-5830-412e-a7b2-cd4bf4d415fc)");
unit.assert_eq16(16'h0B66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #280 965be99e-2f21-4766-af34-08145fb10a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 ad53f6c7-9f8a-40ac-9702-bde65dd67ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 f41628ab-7ff6-4781-8dcd-f20b0d20e667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 31e02314-00a8-4353-8358-cc42f8f4431a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 00ab0196-f4f1-425a-97a0-799ead8ee560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 0e8c95a4-d522-4123-a001-e9af4622af36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 d61d2e66-6adc-4df2-ae0d-8c24c3250c4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB628;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA29C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #281 588331f4-5f21-4ca3-a975-64094394e38c)");
unit.assert_eq16(16'hB628, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #281 435d7cef-4ae1-4bf7-897e-7115f3d66d64)");
unit.assert_eq16(16'h2F9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #281 fa9e961a-619d-4226-b737-32ee02accdba)");
unit.assert_eq16(16'h0FB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #281 b80780e6-413c-4bc2-b60a-248aff7e5a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 811c726e-39d3-4166-a5f3-7cfddaa1a4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 7af34a1a-61bd-4d71-87bc-4c030b58e326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 17597c53-6a68-4679-a22f-1ce14d1a8157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 671b7382-bf9e-4f08-aeea-7b4d144fc086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 299ebebd-6195-4fe6-8bdc-5e55e90d6c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 229898b0-e2f1-4b43-9561-11a56bb34827)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hADE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4CD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0309;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #282 9ffc8077-7dbe-4408-88a7-5b691dd6cce0)");
unit.assert_eq16(16'hADE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #282 d1ee40d9-32ef-40f3-b8d6-ad8a3c514724)");
unit.assert_eq16(16'h4AD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #282 7df1aa0c-f609-48cc-8d04-05748c7823d5)");
unit.assert_eq16(16'h0309, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #282 6229ffe7-11cf-4f63-a03c-2092dd8c4fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 dc6b1f9f-a361-43ff-80df-0f723249f2f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 16c9dfce-7c5b-4bb1-bfbe-ebdf665207de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 bd896c86-3841-4b6b-8e84-513251beda7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 281d0550-a2c4-4c6e-b99d-c9a97c031f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 bac93699-fa59-4441-be49-09c5b2a2ea9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 c69de790-35e6-46d1-a8db-651ad89ff07b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF443;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h197A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h087B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #283 6606c1e5-1071-4f1c-bdb3-4de871fd47d3)");
unit.assert_eq16(16'hF443, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #283 47b9be9c-ce8e-44da-8d2f-c39c305a5610)");
unit.assert_eq16(16'hA87A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #283 f1ec592f-8b33-4111-bb61-a0799736e099)");
unit.assert_eq16(16'h087B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #283 ed2c273b-c327-4de9-8950-40b198742c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 26ac1588-4425-445c-856b-3d19b98e7f20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 8b923514-b89c-4b38-bae5-e5f278baf68f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 029b5a3d-2c0e-4c9a-a0de-c543bed47a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 362df237-1fe3-403c-8ca0-77469cf81365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 bbda2414-1f2c-4add-aa02-32268ffad179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 096bd1f2-0115-4661-ba74-031cf81bd3db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8926;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEA8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #284 d4804f0c-16a4-49b8-b3c6-d9eca25e149a)");
unit.assert_eq16(16'h8926, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #284 661fce3e-30de-4333-ac0a-bf79e40e5075)");
unit.assert_eq16(16'h0B8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #284 7985c10f-c734-4e0b-8e6e-a321096f0532)");
unit.assert_eq16(16'h0E0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #284 0f0c8f10-9d2a-4c8c-beaa-5afd4a5e6ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 6b3237c6-7f3d-4ab5-8379-4a9d4096d1bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 e281067b-829b-40d6-ae4f-a593b01d0745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 b3bf6527-9441-479d-8098-09b686b703f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 9c10a9b3-a692-4655-9485-cc149a78189e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 3f059f7a-a298-4c3a-9bf0-fb1d11f8c928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 ddb4facc-dae6-4385-a1f8-062f100488ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0728;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #285 e97a8842-62bf-4617-8f63-39b11a313cca)");
unit.assert_eq16(16'h0728, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #285 5c619e64-d636-4784-9ab0-7e6a49848d10)");
unit.assert_eq16(16'h21D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #285 ecb44e5c-e20d-42d4-abe3-9a73e979edbe)");
unit.assert_eq16(16'h0F60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #285 9759fb77-3f73-49b6-b55d-a3399292e9be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 303507ab-bbae-4089-86c4-5415b4aa28ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 ff59a163-7566-4e7b-a1cd-6a7286d5f946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 dcd482ec-6820-4801-a2b6-acc9770c803d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 60f4f341-d956-42be-8c12-79a1b3db384e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 20f69df5-3e0b-4a21-a815-200a336817f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 0bd104a9-fd8c-4c70-8b51-0396ea33dda0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC318;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9EC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #286 871dad75-ad41-4729-8ef1-52e1355b849b)");
unit.assert_eq16(16'hC318, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #286 47541bb3-6797-481b-b1b9-42297099e31b)");
unit.assert_eq16(16'h33C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #286 c1196c8c-41f9-4eae-97b9-5dc04d500bc1)");
unit.assert_eq16(16'h0AD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #286 34f9624d-f80b-4e61-b760-68f24c33f674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 1503f2cf-30ed-4a22-a32d-0d7e09400042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 ea30bd72-d888-4547-a814-d4b2410d2275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 4a17f6fe-0e2f-4b85-a3d0-e06c755e107f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 fa632006-2712-433d-bda5-c96793248752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 da2de1d4-4d3c-41f8-bb07-48e75b125028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 dcfcfb7a-48f2-4521-9d9b-956a34d9ecad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0677;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h92E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #287 05807b40-859a-433a-a737-aa22ac28d71d)");
unit.assert_eq16(16'h0677, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #287 cac3f664-ea4b-45d9-a522-93d8c00a3849)");
unit.assert_eq16(16'h77E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #287 9814cd8e-ad60-420c-8cfe-082c45288ebd)");
unit.assert_eq16(16'h0085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #287 a4053a7d-8628-4945-a942-f4022b5a2fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 23495c49-d9c7-4bd4-8dea-98094e50291f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 33bbcdb3-e85e-4685-8fe3-47bbc9d01925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 9ce198c8-c71a-4024-a834-00742e10af4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 579beab2-f881-478f-a2c8-cf2fa34c820f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 145301dc-4c46-453e-982f-fbcd082b05ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 1bebb440-3290-42a9-8003-0f19ecabb22a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h997F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #288 f1536d60-cc0d-4730-9670-34883091b2a7)");
unit.assert_eq16(16'hE6EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #288 cf0cd385-7382-43c3-8e66-7767cd2209ad)");
unit.assert_eq16(16'hBA7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #288 95843e76-c321-4d47-a384-fe297278c2a1)");
unit.assert_eq16(16'h0C8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #288 4c0b39d9-8848-43ed-93a1-26f45e685474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 56145bbf-27d1-4fc9-b903-11b5fb17e623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 12af90e9-e4a2-44f5-a536-18538e7869fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 d21344e7-c362-4a69-a04a-70a212a16799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 c87580ec-3eb8-428d-8e46-42baab14165e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 4d0aff6d-7ff6-4356-9f89-8f8c0a743439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 2bf9e16d-f8b9-433e-a80d-1f5d0a9a25aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC32D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #289 f397c52d-cdbc-4503-adca-99b233f742b5)");
unit.assert_eq16(16'hC32D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #289 6bec3c09-3410-4b0a-b1dc-4e8e7d69d479)");
unit.assert_eq16(16'hC150, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #289 e7f81eb2-c250-4c32-9375-ce128c2af56f)");
unit.assert_eq16(16'h0A68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #289 e345a1ce-4694-45f1-ace7-ebae2558df4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 8d9b4a52-1fb0-401a-8a18-df048f258e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 a442fe7f-02b0-4a9c-8a45-0b6f0be8b411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 fed9c556-de53-4f67-8c29-82be6432ff93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 8fd2aa13-f2e1-4381-9c7d-cb50721ee48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 44a9bc34-0ffd-4a4b-917a-e498230c69aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 76095807-a3f5-4bec-bc07-172890227a0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h934B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h946A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #290 f2dab985-f373-4181-acd4-122eedb0f6cf)");
unit.assert_eq16(16'h934B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #290 bf8e7d79-cf93-4bc6-85b2-69b25efb0402)");
unit.assert_eq16(16'h616A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #290 83734f3c-d3ed-45fb-beed-fac6c023b3b6)");
unit.assert_eq16(16'h08CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #290 a2adf952-9048-415d-a3a6-573d86c1a37a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 bb42de0f-6eff-43dd-a727-a02ebce657f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 fe6bd981-a2a7-4903-8662-b2867cd11571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 0d56f563-dbc7-4dde-abea-9e5cf617e129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 b1edad49-9f9b-4286-9bb7-e6af0626fd9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 56d638cd-5c0b-4174-99e9-0f7d845a42fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 a9b53caa-d630-4699-a998-2f1bd882754c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB1D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3E18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #291 647c5889-3882-4696-b180-981a566f613b)");
unit.assert_eq16(16'hB1D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #291 22a0a06d-145b-47d6-95e9-07d4fa2770fa)");
unit.assert_eq16(16'h9418, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #291 67b80926-4d6b-4d5a-9e27-b60fc94db3c1)");
unit.assert_eq16(16'h04D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #291 6f8b65c9-7990-4606-831a-207745ad879f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 f10e4fe2-88ef-443e-b6e2-9aadd5e6870e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 49ec6871-ff97-4ecf-8440-a4d78094f668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 86a7da7b-bd06-4379-aa76-f13802bc3e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 0414f6da-5abd-4b05-a63e-b42d5db73b44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 c3e17981-69c0-4139-a9c1-5ff7dabd823a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 9797e08d-fb58-40eb-a7c4-0fce1659c210)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEF1F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #292 2a3271b1-96d8-4649-a657-29a7cc07d803)");
unit.assert_eq16(16'hCF32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #292 7f2f03a7-13b9-4f9e-93b7-0df42d293bf8)");
unit.assert_eq16(16'h841F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #292 566d7c9a-6fc6-409d-a512-f290a252a457)");
unit.assert_eq16(16'h0D8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #292 2ee4c015-1b12-49d2-b5c4-e3b962cc4fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 c39ebbc8-28a7-4271-a46c-b61d1a8421a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 4de53434-33eb-47ba-ac33-07ca9e13b388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 fa9ed14b-94cf-4628-a4b7-e9b032e70c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 50663aff-c2b8-46f6-b79c-4904e7639575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 b3c33f5d-3533-4784-98e4-92fb3ec06eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 a744b094-46b4-4ef1-b6de-5142e42af737)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h14CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3197;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #293 0bca3ab5-76e7-4035-b851-d9605109432e)");
unit.assert_eq16(16'h14CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #293 8d5e82ae-6e70-4552-9651-17712d0ed874)");
unit.assert_eq16(16'h2D97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #293 94a61b6d-7f32-4f99-a668-21f99e3ccc62)");
unit.assert_eq16(16'h09F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #293 b511e7ce-bb4c-4a5b-87d1-51c13b3650a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 b414cfa9-d813-432e-8a78-4defc06c5881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 31d36677-0c7c-4462-a6cc-9bbe7cd7b299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 57f64c2b-6816-4212-ae4e-0cb4029747eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 52f2f1d5-3d66-4e8e-9bb6-c5cb67e0dec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 c8461688-1d27-4d70-a3de-26e915d854cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 5aaa048e-3267-4ff7-93fa-8375e2307047)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF10A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #294 0cc65e84-f35b-4cd0-8534-afab822f2b59)");
unit.assert_eq16(16'hF10A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #294 88a0a162-1187-42c8-9015-7c41a9c3f42b)");
unit.assert_eq16(16'hA8AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #294 96b3658e-d415-48f7-bf04-9f5e80120ba3)");
unit.assert_eq16(16'h04A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #294 b42935f8-d5de-4ce8-9fa1-2c2cbe135865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 1c42dfa2-585a-42e1-b474-12b6411a9f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 bdaeb3ae-e1f3-4c99-a17f-fcd3b9cd87f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 5828e2ce-31ae-4213-8b04-a66240ac480e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 ec5c657c-b1b9-4e9c-a256-631d6ef5f6a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 4d4aa45a-c934-40f8-9e2e-03616cbe63be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 b56041fa-45ac-4d15-829a-aaf19fec82ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5601;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0508;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #295 a5128462-7415-400f-b61b-a626fdfdcb94)");
unit.assert_eq16(16'h5601, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #295 563b783b-9e1b-49c0-8b55-ce0a4bddd7ae)");
unit.assert_eq16(16'h5DBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #295 62aaffe7-10db-499f-8afb-7094ddf97061)");
unit.assert_eq16(16'h0508, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #295 d9ec4735-eb47-4dbc-b05e-4d4c149ec8ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 7ffd6659-2928-4991-9190-6f378c992ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 9a5f185b-f39d-4522-8f93-4f3d56461105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 aac4ee28-d25b-43df-81a3-b5b6d766ea70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 178f3b8e-ce68-4c3a-9fbe-f20786052c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 2d42fd46-e453-48f7-9d53-23dddbb1a286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 6e92502a-6639-4807-a234-6a8d3b911191)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h92C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h992B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #296 12272164-f797-431c-b33f-4ab66ac012b9)");
unit.assert_eq16(16'h92C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #296 5e5d4d6d-0c33-4d76-a656-4a4d45c8ed0a)");
unit.assert_eq16(16'h422B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #296 92f56179-fbd7-4ce3-96ab-c08657ac1ae8)");
unit.assert_eq16(16'h0BB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #296 47c17d8d-acd3-45ea-b6aa-ff7e14a64c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 68c94671-b1df-4650-92f0-c1ae91607839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 2a5834b0-1244-4924-87c7-c7b9a9723665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 6864f865-25ab-4702-8587-bf1b2c6f01bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 ba9d2588-109c-4fb5-9768-d0a2bb4fde1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 982bdb05-8631-4730-9b2c-8e671763f67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 c7effa91-cbf5-46e5-bd5f-3262678b8078)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB63B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h054F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #297 a2fe7738-3fa9-42ec-af9d-d9b8b2b0e195)");
unit.assert_eq16(16'hCF31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #297 d17df051-8f77-4f12-98b7-1557e37cb57c)");
unit.assert_eq16(16'h523B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #297 1fd5ac67-18ff-4882-bc07-262ec6b772b6)");
unit.assert_eq16(16'h054F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #297 7737a745-0ff5-42f4-bf1e-72795186293c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 a49c0f5e-dca5-4d5b-add5-c2bea4beed9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 9cd54a1f-ab9e-41b0-a16f-58455ad06764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 704cbc23-57d9-43b0-b8f0-aebd6de90a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 39d2c152-d025-4fa4-ac88-44cd5b349f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 59526d42-e55c-49d7-99eb-c0664b836456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 5cd68057-80dd-43a0-8e83-541ab9d089f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5995;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h59B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0034;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #298 fda70fc8-3db2-4a62-a20d-ad6bfaf0bfff)");
unit.assert_eq16(16'h5995, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #298 d4eab8cd-ad1d-4621-bcdd-dfe461674822)");
unit.assert_eq16(16'hC2B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #298 658a97c8-d8fc-48ef-836b-5c4e362db82f)");
unit.assert_eq16(16'h0034, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #298 a5a82119-78f7-47c5-838e-da8de80366a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 36ff7579-7714-4a93-8a19-666349614add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 5640734d-7923-405d-9a1b-84a0668e78a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 6a18df44-fac7-44f1-85a2-57f14d3a0240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 6ab178c7-53ea-4bdc-a2e5-f5177ad394b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 3e471235-d60a-4ccc-985f-19cefd86d83e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 518431a6-6009-44ed-bca1-360ffe250c3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #299 5918912d-62a9-4052-be6f-8a74d701882d)");
unit.assert_eq16(16'hC9DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #299 a590d618-3b16-468d-b18d-d3da06eb89ec)");
unit.assert_eq16(16'h15DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #299 18fada90-4d5e-44b0-b721-2349aff3d619)");
unit.assert_eq16(16'h0440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #299 e35ba759-3d5c-4fab-8490-879e1514b82e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 2620f3af-54b6-47fe-894b-9ef9dbff6a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 278245c8-eda8-4a0d-9c6d-3c503030c0b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 af852ca1-efd0-4618-a21a-2193eaec8eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 411fe8b8-a2d1-44b1-bdcb-04dcca897720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 d9cceb48-36d3-410e-96b3-0cd1092fe6d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 d8c255a8-2a99-46cd-998c-cc71cca3ddf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEFB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #300 d5cc6b78-87f2-466d-978d-e4ca219a62a5)");
unit.assert_eq16(16'h0C5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #300 d53c6979-effa-4889-8190-3d62725ab3e4)");
unit.assert_eq16(16'h99B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #300 d7eaa7c8-4bc4-4725-bbb7-3413b2ec4108)");
unit.assert_eq16(16'h05CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #300 ff4169b1-83c0-4f0f-b849-52aa8da59e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 212ac1c9-7425-4b4b-be3e-a1c13185da75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 bb2a1299-a50c-448b-854b-0151db40e852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 e4028e48-6964-47e3-b693-94b8eab023db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 b475ab2b-76b1-4ccf-ae10-b2872ad76329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 942c3fdf-ce6a-4b0d-8606-a22c0922da65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 404ffb45-6772-4e8f-9a60-48c0db7e6ffc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF14B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1785;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #301 743263c7-cc9f-4fc8-804c-ceaef2e01ea2)");
unit.assert_eq16(16'hF14B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #301 818b6851-31ec-4ab1-b670-d043d8cfd6f4)");
unit.assert_eq16(16'h7885, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #301 ba8765de-6aa2-4df5-8c08-dd502d63dddb)");
unit.assert_eq16(16'h03E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #301 1be90d27-43d3-42c8-9284-83d7f2a984d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 0647eeeb-e9ee-4203-be1d-20e588c91d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 ce4e991b-980a-451b-8695-e760230c9fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 2851da74-7f10-4105-b6a6-0e8cfecb9dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 a167db79-90a2-4049-bb14-5c95a0dedb9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 579f1524-21aa-4d71-ac02-4d1f6c3c2c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 823f3452-f11f-49f8-9e9b-8a27d9733aad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h817C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8BED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h031B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #302 c7360108-441e-4316-b577-aff1479c59f5)");
unit.assert_eq16(16'h817C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #302 a54fd1c4-4e31-459c-ae42-3c0c80916fe8)");
unit.assert_eq16(16'h3FED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #302 4e687f10-3e9b-48c7-8652-e9002552aa52)");
unit.assert_eq16(16'h031B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #302 5c34dbbf-0313-4b48-b023-17f4b67207a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 897dffba-f3ff-40a8-97cb-963ca8cbaf88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 ac5b9c0a-e518-4ded-b6fa-7d4baa68e4ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 8f565b42-af91-4afe-b931-d8ac8d0fd447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 eccfd874-bb19-4d2f-822a-381a4174af59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 3fe54dd1-4077-454c-b3b7-91a1c04b8859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 52e5cba5-01dd-457c-8d25-3a37a547cbcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5B4C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #303 6b3bbbad-7f05-4655-bcd0-7e5857408448)");
unit.assert_eq16(16'h5B4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #303 9834fa05-6681-4785-9aaa-cb8d4f2716cc)");
unit.assert_eq16(16'h22D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #303 ac24e2c0-4339-489c-80fc-a1b6155d3788)");
unit.assert_eq16(16'h0A72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #303 89fd4503-a79b-4810-9f83-8a7554d38c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 dea8810d-150b-4d56-ba99-40af93afda35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 5aa5b7e4-c63f-4259-96ab-7e455e12e023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 32204666-db50-4232-8346-a58cab3c0da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 083d6d57-f0a4-40cb-857e-8b4cb7996c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 991cd2e8-5555-4f2d-81c7-5f8bf89e9e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 bd5bc59c-932e-4a62-a4a5-250ff4c114cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F89;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #304 6ead02e3-e7ef-4046-b709-7811af6bf207)");
unit.assert_eq16(16'h0F89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #304 6df50e01-0699-47c7-9a45-df41ea7a673d)");
unit.assert_eq16(16'hD830, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #304 d0db99a2-944e-4833-aa7e-fe3b6c7a3077)");
unit.assert_eq16(16'h0475, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #304 6f0301f7-e2de-4bae-86eb-5818b4ed82f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 307d54bf-42ca-4f4f-ba4f-a0f027e9e805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 db403bbb-b2bb-44a4-94df-108e9adf4152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 bc895d0f-4825-47a3-b196-f5aced2faf0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 834cf5aa-92c1-4f1c-b888-e0440330a25b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 6d70a124-d762-4e20-80df-f8b8ab92b955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 93f14353-37aa-4c8b-aa43-08af868546f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h17E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5CC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #305 f14d677b-c7f6-4758-bcfb-dee5a169fd63)");
unit.assert_eq16(16'h17E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #305 9647f852-0d4d-4a79-a2fb-739492bb5fca)");
unit.assert_eq16(16'hA9C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #305 8c3560d3-a9da-4ec7-98fa-da3542a09434)");
unit.assert_eq16(16'h0C7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #305 03a96e42-4be2-40fc-8a2a-4f4a9e57ed9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 3d43490c-4059-4f2b-b684-f2e603a920ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 aeb9a31d-003b-46da-9833-fc81268e525b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 ca8beb45-a50c-4d7f-a5a6-6d71bb6d0090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 44ff929a-44ef-4fb3-bc5f-d8d5da10a265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 e0c5900e-8600-48b5-b019-54e1caf09da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 2bf239cc-4902-461e-be35-9d87027489ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9879;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #306 5e3caaf1-79b4-41b6-b6c1-575957ec69a9)");
unit.assert_eq16(16'h9879, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #306 03ecbba7-2cad-452d-80ef-63a406ac5de4)");
unit.assert_eq16(16'hB2EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #306 b6348969-3ae0-44f7-885f-111190ccbf08)");
unit.assert_eq16(16'h0E36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #306 824bed73-2a19-482d-b40c-1a9c515c8c35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 268f1ac3-030f-4caf-8a40-5e6ded023968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 cab717b4-8d3e-441d-91ef-0d1d32644447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 43af52fe-d437-4217-a3b7-60b80cb12eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 ccee42f7-68b9-40f3-b718-dc05888a8e96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 1be8eb32-bda2-466e-bc66-c13fddf6027f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 fda738d7-5002-44c8-9b90-a9e3e6285b4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA4C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #307 39c478b5-8e27-4fd7-80c1-ff2e032dd0dd)");
unit.assert_eq16(16'hA4C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #307 3f598443-57fd-431b-8536-cebb77fdb97c)");
unit.assert_eq16(16'h07E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #307 6bce321e-87f6-4de4-bfb3-f7e2e9a90dad)");
unit.assert_eq16(16'h0B4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #307 4414e0bc-3297-4f81-a550-eb5503a27134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 f79f7741-14f3-4d67-a770-ff878a5bba13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 dab23aff-6631-4e78-9085-0931c0ae8777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 923e660e-9ab6-4e27-a2ef-1a3fc1ae72f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 f89e7faf-d9fb-430c-bfb0-96c4c098b39a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 9e381545-bb68-4180-89c8-9297df3ff4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 eb9b6448-f5a0-4d1d-b741-cf0af269f56d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1AD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h68B8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h071B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #308 1ce8f614-667a-4187-a9c2-2836aefb3f8d)");
unit.assert_eq16(16'h1AD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #308 35e4eea5-5e8a-4499-86d4-408b3adc57d7)");
unit.assert_eq16(16'hE7B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #308 73100073-9afe-4d6c-b255-2bbb782a76b9)");
unit.assert_eq16(16'h071B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #308 cf68d713-db65-4975-b518-5352de2ef89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 d5b0eb5a-9f2b-4cb1-9021-35760aa59a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 fb371753-cf73-4adc-bd5f-bd11198f780c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 aded321e-6754-41a3-93ca-b8a17951fff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 4e398a02-b0bc-4a70-b740-acc9769c01f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 c10fedb5-e8f8-4244-81f3-1fda8dee11e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 a2429495-4506-4b4a-8c1e-df12ebafa1ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #309 f168b606-ef1a-496c-b9e3-bd365fb97cad)");
unit.assert_eq16(16'hFC61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #309 dbaed05d-8a51-4a7f-85d4-479be118bd2c)");
unit.assert_eq16(16'h3CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #309 dfb3d3c0-d4ca-445a-8637-7dcb61dbe827)");
unit.assert_eq16(16'h0BC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #309 6d19f2d6-5967-49c7-96dd-5e8d50874a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 f2f98612-fc20-449a-b8b2-38ddbb2b0916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 8c5e6271-25b9-448f-afe1-2ee2bf2852ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 d36f7491-697a-4d28-85f6-77634d7a1eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 70ee98d6-3611-44f5-80fc-0e1bd82719fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 1572fc74-1474-47ca-be98-10aabb71306a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 24d22eb7-4367-4dab-a43d-8ae5e7e1badb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2E21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6072;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #310 cc75df37-dee6-407c-9c50-05d91a0e3b17)");
unit.assert_eq16(16'h2E21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #310 fc284a0e-b94e-46ec-bc57-89ff80778d96)");
unit.assert_eq16(16'h1C72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #310 5b972eb4-36d7-4e19-ba14-b7440f748862)");
unit.assert_eq16(16'h0BCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #310 3a4657b3-9cdc-4096-8050-6c06dd508141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 ffdc9381-153d-47fe-82ec-2b1dfa87db50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 aaf7f67d-7254-413b-a7ed-0304a1198aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 33e2867a-b768-41fd-8e1e-b19554e2ee60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 55536164-1e5f-45b9-8db1-40100d1f0307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 671a7815-7596-49b9-a471-e7a8dffc7e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 17125ef0-40da-4b83-9274-284a7a0dbd66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4611;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2A06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h068F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #311 26e0652e-e5a6-42a1-838b-e542f1fc54fc)");
unit.assert_eq16(16'h4611, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #311 9e3c0074-086a-495d-9a4c-031e1d6d1f80)");
unit.assert_eq16(16'hB406, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #311 850e2e8c-abd4-41ec-a2d5-8e91fcc8027f)");
unit.assert_eq16(16'h068F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #311 aebb8ab8-5e29-4f73-85d9-e39a1c01e742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 f166087a-895e-4ffa-9b45-732961a8268e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 e7bd2ff7-74fd-4ce1-bf55-68b33f473143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 1a30efce-4d30-40cd-8d7c-f80f27e34cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 4708a694-5360-4c46-a22d-cf5511811652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 a58d31c5-8bdf-417d-9473-31ca503c9f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 e6c02aed-4261-4458-9c89-a2b580d190f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5860;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h30B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #312 e4cfeb38-6c9c-43f1-845b-473ef1999db2)");
unit.assert_eq16(16'h5860, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #312 3ef2e996-f836-47d8-b28e-5e2a6673651f)");
unit.assert_eq16(16'h3CB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #312 7351bfcc-7b99-4077-b68c-b1d180fa7607)");
unit.assert_eq16(16'h03CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #312 a254f061-6438-4dfa-8980-91268afb6477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 c0932125-c9ab-4c37-a77c-38acf020a07e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 302f9bbd-ffd4-4360-81df-3eaf5a41c423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 9cdb571f-d88c-4b6b-b18c-216b7fda7051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 aa737d1b-027b-463c-80df-68fa195660e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 dee9656e-2986-4587-91be-38dd181cc7b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 60444579-95c9-448c-a1cc-4dafe73b0a67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA816;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #313 f7e3f59a-6aaa-49cd-be6e-bb352fdcbf12)");
unit.assert_eq16(16'hA816, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #313 423aa49d-76df-49ac-8ff1-a5cea0d602ab)");
unit.assert_eq16(16'h0D80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #313 cdc0b416-675f-4122-ab39-6978e0452bbc)");
unit.assert_eq16(16'h09BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #313 fd694f76-decd-456a-8ed5-75734344ebcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 d00cebff-c8c0-4567-83c2-6b73d2cabaa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 4bd7aaff-fb1a-4d3a-9c76-de839cfaf575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 d6f6994a-7ce1-4634-b473-2f7c8ded8bc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 1ac3607d-8c4a-4fa3-a7ea-09c89b448c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 b63731ff-db35-40f1-8f5a-b1438a81381b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 980df721-1c47-45de-99eb-77525f742bce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #314 53de4188-8fba-4472-a181-51fac5eeefa2)");
unit.assert_eq16(16'h0F5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #314 36129439-5147-4b65-a8c9-78a1c3b867bf)");
unit.assert_eq16(16'h8304, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #314 ec30c272-531a-457b-beed-c1ccf4f5be02)");
unit.assert_eq16(16'h0C56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #314 1a4636be-004e-4181-b73a-2fd986fc656f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 859d69de-838d-4150-bb23-c79f859fddb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 a1ab3d41-a3ad-4216-9c3e-e20237abbfdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 1c9b0e6d-bb7e-4140-86b9-b3ec9f312a89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 5d95c634-e470-4ad2-9be1-8af14150a0ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 adc761de-22d1-419b-8396-0bf600554df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 2b6fc398-6221-47a9-b02e-d5c026c97b9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF23B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7D6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h033C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #315 5a60fe76-bade-47f4-ad5f-25e8563bb550)");
unit.assert_eq16(16'hF23B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #315 8539a8c4-8236-4cfa-8f67-5ce935515780)");
unit.assert_eq16(16'hFF6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #315 2c3124aa-f47c-4044-b228-6a663273e775)");
unit.assert_eq16(16'h033C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #315 a5498e72-afe0-4a79-b888-f7cb20ddc4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 13efb837-d7d2-4569-ad5d-22b175b1a193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 c0ce3296-0fb6-483b-bfed-4eef17e45f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 36af4c4a-1ef6-4ca5-831e-369c1e36bdd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 f6a9d4dd-ae31-44d8-8603-b5f1afa06fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 dcdc6879-d575-4210-81d9-9d3a515371ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 9df560e6-4b74-419b-a8d3-c95a32c0ed12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF69F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h706F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0072;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #316 4988503b-257b-4377-a18c-b7706127a7cd)");
unit.assert_eq16(16'hF69F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #316 b73a8e2d-8d98-4f68-a288-c8438e132061)");
unit.assert_eq16(16'h256F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #316 7907d4e6-70ef-40d7-9da7-485de66f7f04)");
unit.assert_eq16(16'h0072, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #316 21141746-da4b-45fe-a2e2-198ba9aa5ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 9f13ba42-7846-4236-b295-592794c00479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 0fef0d80-54ab-4960-90e2-cbd844990ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 e7f2467b-c178-4e71-8c6c-2f090c74d7ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 9d04aa3d-0af2-4e25-8d92-2c6103a4c923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 a6c24b9c-39e9-43da-a46b-c438b7303b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 01171181-a319-4ec4-aafc-4d5b6ec713c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE265;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h774C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #317 bd62f03b-9f3d-402e-8229-8fde89e6a77f)");
unit.assert_eq16(16'hE265, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #317 e3c91ae9-3e35-44a5-af18-d0026da41cf9)");
unit.assert_eq16(16'hF34C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #317 78adfd97-18c7-495b-8a1b-60a4f1acd413)");
unit.assert_eq16(16'h0A3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #317 56be65c0-9c58-4362-a992-ba17f02c22c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 233eae08-41e3-47f8-925b-2f7c842d4357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 fcbc993e-81de-4e63-880b-b33a9b830324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 34ad4fc8-00ce-4cfe-b411-c3c533dfda78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 c62918f7-9eff-47ed-9785-134db53561f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 7477222b-9ba0-45cf-a9f4-8beb34f09dbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 c9aab5c8-4f4f-4f51-b9a4-f427922384aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0282;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #318 e0efba31-37a9-4b21-879c-59aac97f736c)");
unit.assert_eq16(16'h0282, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #318 09734ebb-dac1-4ba2-a3b6-bdc5bbb148e0)");
unit.assert_eq16(16'h8F22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #318 f5a50b1c-49db-4441-81d0-c63ab06880ec)");
unit.assert_eq16(16'h0DCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #318 cf376793-0185-4a57-8a56-24649e710918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 b63c98b3-9bb0-48e5-9c0b-dfcec004042c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 08a15ecd-f86b-4ceb-ad1d-ef86534fc6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 e2f0af40-bff1-4252-a887-b849ab94e595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 7cc842ed-2b4c-4da3-9141-5a6aa954b37f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 f9240a53-df7b-48a6-9c75-cff4ac63befb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 907acafc-114b-424e-9d49-5f0150416a9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3456;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2854;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #319 09af41b4-93b1-4361-8b4f-a6db59fd714d)");
unit.assert_eq16(16'h3456, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #319 2902811b-888c-4976-b59e-8cb9ce5164eb)");
unit.assert_eq16(16'hCE54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #319 c290af8c-c667-4ad8-a257-6ab2e4208d2f)");
unit.assert_eq16(16'h0AA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #319 e3b8b0bc-acfa-4c1c-9e33-6fa2deefbe20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 a61b3bab-9dc3-49ab-a116-3acfcf96bec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 c692e3a2-3489-4ff4-bb56-2bb36b2f8616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 26c2c98f-a571-4a47-899f-8317d5b6c157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 93f31f27-eb84-43cb-b10b-96d686e855f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 9a81a74e-ed70-4301-badf-0b5634113799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 9da7dfd3-22ee-4ac2-8b45-60d09157d024)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0857;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFE13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #320 9973435f-667c-4349-9f6d-a3a865b9bd02)");
unit.assert_eq16(16'h0857, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #320 c79a79da-aa67-4a36-b8f8-62719fca4964)");
unit.assert_eq16(16'hD313, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #320 b1e196dc-1860-4844-b34c-b30c7bc9ee66)");
unit.assert_eq16(16'h0B39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #320 6ba3f72a-b29c-4472-bb7d-d35614f059ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 1e46dc5b-edfa-4b0f-81a7-074d59da6a4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 4a36e13d-405d-410a-97a7-93400a8ba8eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 738bf550-2e4d-463f-9a92-bfdbf2b487e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 cfcf36fb-8cc1-4ece-a582-0be4c7cf3421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 018f9035-5dfb-469a-81d4-b683583a7259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 cd3ab1f1-1b05-4ce7-8e10-004972f26b47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0000;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #321 c23ccbea-7034-4c96-8650-5a3568b1b21d)");
unit.assert_eq16(16'h2A99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #321 de2216ad-def6-4b46-aae6-ca17f2298621)");
unit.assert_eq16(16'h5A00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #321 5fe8776b-ec9e-432b-b4cc-430b71817940)");
unit.assert_eq16(16'h02DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #321 392160c6-2bbc-4668-b2be-bf6c51783678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 5c26deef-9de1-4f3d-beb5-557a51adf44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 d40d23d2-a608-437c-ab46-b69873ed6fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 ea601594-9d33-48fd-a962-dbe2a88f3dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 140f8902-4bfa-45a9-a8fc-9959ba111108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 c26119b1-1b08-4ec3-bbec-d049343bc667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 e57b31a6-3559-4002-9c94-60dee9115be4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h70B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h109E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #322 97d2781c-3eab-45dc-a662-468ab5a0a744)");
unit.assert_eq16(16'h70B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #322 babefa73-1430-4092-bd07-e086273993b0)");
unit.assert_eq16(16'h939E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #322 3a2b8ee5-f39b-4417-8094-676dd41a289e)");
unit.assert_eq16(16'h0B8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #322 1699ec7e-a6d2-4961-879d-1ceabe3713f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 9611f1d2-8997-482e-8560-dedb020db3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 77ed5df7-77f0-4f6b-a21b-038ece0a5d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 939c43e7-fa27-4bc8-a752-7a4bf8db1dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 fb3a30de-995b-4e67-af50-a1d774c82165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 8548cfc4-8642-4f92-8217-071df4fe6415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 b9057b2e-d56f-41a6-aa92-62475b962870)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA195;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF0A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #323 e0fe6893-d88c-4857-9ba8-50162d434618)");
unit.assert_eq16(16'hA195, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #323 69d0bfe7-1158-4a74-af31-dce78241e589)");
unit.assert_eq16(16'hE6A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #323 a5c4b22b-35f9-42e7-ba9c-f611ba4fec7f)");
unit.assert_eq16(16'h0A35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #323 ecdb23c1-cad3-4eef-8f1f-e02855b6485b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 87af57cc-272d-4fd3-8557-b1b33b198cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 367e745f-c104-4eef-beae-424467beb7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 58a76f19-839d-4766-a7c2-5b12d31c506e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 d26f32c0-915e-4e22-9867-4b1aae501964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 e7ae60fa-5833-45d7-a470-40e3146c1978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 ed1dcc7e-b0e6-48c7-b69b-bb17f0bd42e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA21;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9835;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #324 071c4877-0e25-4bcf-860b-88477c859ba5)");
unit.assert_eq16(16'hAA21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #324 321bfba3-6bbf-44b6-8c72-1c810d268f98)");
unit.assert_eq16(16'h1A35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #324 b75b9988-e9c8-4ba6-a528-8c204303e40c)");
unit.assert_eq16(16'h0CB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #324 e0af9f74-e950-4da4-8825-999de2abb4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 1193bae9-d975-4342-b822-af2773cb6ba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 6b5203ae-5b98-492d-a4db-fdf813c201be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 e2fe19c3-789f-43b1-9df3-c571d3c06dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 4d49e3fe-3a7a-492a-912b-294dd519f11b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 89aae160-284a-4759-a56f-1a5791066dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 7bfb581a-f3c7-443f-b237-2f3409891e4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h805E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5C56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h029D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #325 033e0714-a933-4415-9efa-8fadcf0448ec)");
unit.assert_eq16(16'h805E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #325 44a42d44-c7eb-4847-85f4-03069d41834b)");
unit.assert_eq16(16'hCD56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #325 8e13c2c3-cc21-4344-8236-5ea62e5a977e)");
unit.assert_eq16(16'h029D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #325 d637d274-996a-4f28-8aff-d5afe138f03a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 bd8406eb-4266-4232-96a4-b1ea4b2c971b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 40c27fc0-05f3-4206-9b52-b99595c18112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 6a4144d4-dd00-418b-8f45-558907bedcd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 10501b00-d86e-4b12-9ed5-ccc87ec8e22a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 a5c9ccb3-f07c-4fbc-b290-f1d942493511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 21c993a8-ed7c-4998-9fa2-cd652da68a15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC666;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5362;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #326 86813f70-6a49-45c9-9fcd-66e1cfca24f1)");
unit.assert_eq16(16'hC666, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #326 ec8d3ad6-b3e4-4952-953f-2d52e75d2b61)");
unit.assert_eq16(16'h7A62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #326 8027a57b-2698-4e38-9d9a-e98e847b774f)");
unit.assert_eq16(16'h03C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #326 2863613d-50a1-486d-b323-e8a26c4cb682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 0e54167c-47b0-4dc4-8976-99afb6176e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 a0e650c0-4d40-4ed5-aee7-818682e351ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 8a5e1c02-e7b0-4ee9-bb80-900a25587262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 4fabfca9-f729-4be5-90cb-bc66f4e7d222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 8af06437-70c9-4984-ab9e-7b78a149de3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 6a7fa0c8-1a56-4ad6-a1d8-e21b23bf014e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h17DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h58AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #327 534b552c-b7f1-40f1-8277-e99b52b1bc69)");
unit.assert_eq16(16'h17DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #327 b89072f3-fe65-4ae6-b462-7116a6e2d92d)");
unit.assert_eq16(16'h9BAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #327 260aecbd-1a04-4df7-a20f-6cd7f0bac5cc)");
unit.assert_eq16(16'h0F2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #327 569f4811-2922-4c69-99ca-7ea306e9b713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 2ff43d4c-0ea0-4f26-b3cc-35373881498e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 26445e78-df73-4307-bfa1-c127247e5e1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 6490dd82-2e02-495f-b41f-3b1ef29d806b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 804486e5-ed94-4752-893e-e4891ec34c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 3b5e8708-a971-48c4-af0d-0864a6fd02eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 7be7bca0-9f63-41d7-8228-b2c5fc58610e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC916;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0327;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #328 7f00f3ed-ee24-497b-b406-e010af1ea652)");
unit.assert_eq16(16'hD2E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #328 71e76e96-48e3-4e15-adc3-03592e4365db)");
unit.assert_eq16(16'hAD16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #328 0c11051e-4f28-49b7-a83a-de2f54fbaef9)");
unit.assert_eq16(16'h0327, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #328 f903ce5b-7995-4060-b7d0-eeb980acaa22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 8eed0428-f781-4bf6-a602-1cb75accd65e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 5f69fb49-f462-4b10-b164-7c2a064e9099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 e8eda931-4725-4bcb-922a-fb20fff758a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 6c3a0a8b-43c2-4f9e-9caa-d0b88072eaeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 9a9b986c-ea29-4f6c-8d9e-dd1078d700a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 f4026950-a5d6-44d2-b56f-f65d20f37554)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h227C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h014C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #329 e172788b-fb42-4ab1-8c83-f771cb05f57b)");
unit.assert_eq16(16'h227C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #329 61434af7-1afb-4b75-be40-0ee825cfb464)");
unit.assert_eq16(16'hC136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #329 1595d00c-e016-4b28-bb26-45e14c8bf96a)");
unit.assert_eq16(16'h014C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #329 93a144b5-03c4-4247-b925-3cd47ff6b289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 9fe579ad-522d-402c-91f3-ac55ab9be268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 0c5aa255-812e-4abb-b2db-60244392b89b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 01b0922d-0514-4128-833e-1930289ce654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 e9707704-ab2d-46f6-aba7-92b23ec18066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 a81337e6-95da-48ab-8499-7b1b8e554a48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 91dcb59b-1f30-4b89-b80c-791262756d46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h867D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h043E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #330 e62ddac3-cb26-48a8-a95c-ba2cb4412676)");
unit.assert_eq16(16'h6B00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #330 0d877018-072f-48dc-9ae2-53d56b3da104)");
unit.assert_eq16(16'h1A7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #330 423af9f8-2a87-428c-96ae-20f6d09367fb)");
unit.assert_eq16(16'h043E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #330 fb48f9e8-1165-44e7-af66-f555db623bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 183e9942-3a30-4737-9467-6b0ad310c840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 cd996d3d-3143-4f00-8ca8-c9c7f0c683d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 e406a41a-0022-4765-97c0-1dac328a911e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 9252e0c6-caab-4a31-8d1d-14cd69481fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 7e119817-adfa-47ac-98dd-a83f1f083fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 9988985a-c5fd-415e-ae1a-35562ef86536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB7B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #331 d292ec8c-ec64-44b9-999a-0d0a78a8c489)");
unit.assert_eq16(16'hBCD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #331 c3b6f3a1-8b59-47be-b749-d0164c053357)");
unit.assert_eq16(16'h83B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #331 2f2ddbc7-fc18-49bb-b047-986a48b46ce0)");
unit.assert_eq16(16'h0F1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #331 1d6334df-e101-4fa7-9d27-03af9b460738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 7096f24d-3e4a-4aea-b0e3-d5a8373943a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 fafd35e8-2745-4748-813b-a47013937664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 ef066cce-1f79-43c2-95c8-4bfe6b12b1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 d5fa78ea-84ab-4a73-a572-bf547ede8abc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 50ed94a2-0082-4ae1-8845-48ca16c009ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 8bedefb5-f48a-4e33-ac00-abc4816beb95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h09CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDEA9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #332 08d270d6-a78a-41f5-888f-2a4ca04b2356)");
unit.assert_eq16(16'h09CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #332 7a74db91-6bc9-441d-8142-d5d94d356dea)");
unit.assert_eq16(16'h50A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #332 ad65aad7-7823-4e4d-8deb-adf838e9bafc)");
unit.assert_eq16(16'h0C2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #332 97d54ab4-0826-47b1-9876-39a91091997e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 d7c2ab8f-6b6e-4c26-97db-ea70b46daf9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 2701c42a-bdce-4c4e-b68a-c606ff5fd6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 98c2d59a-983b-4d01-9f1b-faf033a30029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 cba12b74-e0bb-4393-b433-563731c4ed08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 52e90564-987a-40d3-9485-0357a3962682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 c4e1525d-b6b7-418f-920a-e5323dcddfeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC423;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h491E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #333 02141adf-d2d1-49e1-9be0-192d38f705e0)");
unit.assert_eq16(16'hC423, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #333 f5449b80-d6c5-4457-a783-83f8e838b02f)");
unit.assert_eq16(16'hB71E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #333 3c4e6591-efd6-483b-8906-96da236a0c17)");
unit.assert_eq16(16'h00FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #333 72e228a9-eaab-4493-842d-2d26f99ff5c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 ddd2a46e-88be-4e91-b3a6-9e99a19d7f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 10acaeb8-c206-45c3-8a0c-bc68d225a511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 ae50315c-bb96-429d-842b-06ce483028ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 9b665cad-35d9-4fc4-857e-38a55a82ab5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 a7d95b86-5bd2-4d02-801b-14fe107c3da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 af2ad989-f0ab-48cf-96a7-e426de4c3056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEE35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0995;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #334 b1e1b5b1-686a-45e0-8f5b-b4545bc373b6)");
unit.assert_eq16(16'hEE35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #334 282516bc-fb01-4b70-a4dd-3cf01eedea59)");
unit.assert_eq16(16'h9495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #334 da88bcda-5a48-47f4-b43f-85afec0e0fb8)");
unit.assert_eq16(16'h01F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #334 8d9444ff-54d1-4170-9d76-3baf4fa4ecfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 999c785a-31f3-4878-bb29-268f68e49362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 2e3cac40-d16d-4f10-8a14-11f6661c06c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 cbe4417a-22f2-4b7e-bb21-73237d2f50fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 94158ba7-74ee-4d3a-93ab-4bc56fc792d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 e1668189-326b-4cf2-a96d-903d2291bc80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 11a6bad3-6091-4056-bb5e-f408dfc1daf9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h91B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h772D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #335 81ee7f66-226d-4b34-8971-139ebf332193)");
unit.assert_eq16(16'h91B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #335 a55a6903-d1b9-40ad-82c7-fc20311a709a)");
unit.assert_eq16(16'hDC2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #335 f928ef4e-e236-4eb0-be52-535fd95ff68e)");
unit.assert_eq16(16'h0D5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #335 8fa970fe-2d5e-47dc-9fcf-d28b92fcd039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 5b47f366-037a-4610-883e-f0b64930ae02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 c1e67045-fb1f-407b-98bc-a61fe2d6593f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 e25636a9-db07-449e-ad17-0d0f863f9232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 06c9ee72-c87a-41cf-8ca4-9f102dabd672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 26739afa-7fee-45f8-a0c6-f4cffe2b2205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 6fe42521-8f7f-4c1a-a9e4-e44ca6931db7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #336 26d8e59c-d917-49d4-8122-6a1f3f165604)");
unit.assert_eq16(16'hFFC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #336 40dd39af-ab8e-4d08-b502-1bb15100ef1d)");
unit.assert_eq16(16'h683E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #336 6b7f3598-4510-4dc0-aa4e-5887a0366597)");
unit.assert_eq16(16'h0A25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #336 282dda98-6a2f-4b38-bd66-94695c5c1087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 cdfe49cc-a6cb-4ced-a7d2-521d56bf410a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 30dd597f-ad09-4fba-a042-fb2f2d52422b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 abc52dbc-082e-4cf9-874a-a6584bf52702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 c84a5621-8671-472f-a84c-011ea0635f26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 4c14e379-83d9-48d8-83d2-92b5f7851542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 318e358d-a1cb-4573-a2b7-280b6540aba1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0E28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9FC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #337 ace5ddda-0ba0-4393-b826-4a1f3b4b7098)");
unit.assert_eq16(16'h0E28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #337 6937a83c-9be7-4519-a1a6-0d905d5c1d54)");
unit.assert_eq16(16'h6BC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #337 04f6e35a-88ab-4c40-9d90-0e5906807d08)");
unit.assert_eq16(16'h0D43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #337 7509b1d3-6407-427b-875e-443722e17cd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 78fa63f4-b5a4-40eb-9ffe-4d853e78b2d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 2c671b7a-7c50-455d-bfd6-8d4526305654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 5d04cbf6-3a16-4c77-8af8-522eda8e0ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 28465867-a06b-4109-8468-8d0c94e6f210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 6a001b52-d99e-4993-9e4c-d45442cb26a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 de46e47b-480b-4095-ae94-9c02e862a364)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6954;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h742D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0026;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #338 c6cf11c3-df0d-49f4-8f79-fa88d20faeef)");
unit.assert_eq16(16'h6954, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #338 8e42b098-f90d-4e3b-8982-9c58c8d4cd29)");
unit.assert_eq16(16'h542D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #338 009e01ea-39da-4869-a29f-23f5914fe6f3)");
unit.assert_eq16(16'h0026, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #338 488f1903-d47b-44cb-8b59-3c5549c7a86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 5cc5c1a7-ef06-4536-b676-70a6e5082cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 0b1ba63e-d054-42bc-a8fa-d5706e4a670a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 3a9048cc-58f2-4ada-b035-d8cf10dc6abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 418b8044-faf4-4f4a-a1ed-8741657d2187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 1948b5b6-ecea-48f5-8c5b-de0ad03269e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 f7e02a60-b0aa-4628-ac4a-b6e99065d83a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA0B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h954A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #339 877fd62d-9edc-496c-a57e-51e75f53c01a)");
unit.assert_eq16(16'hA0B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #339 62f177f3-1fa5-49fc-8722-d7a80a28a2d0)");
unit.assert_eq16(16'hE64A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #339 c938caf1-612c-4e77-9ecc-f2c838740c9f)");
unit.assert_eq16(16'h0B09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #339 e1806ff7-1fe7-4a00-b7dd-c4788433fdf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 e3c9c46d-394c-457b-9d51-fd5bcdc480f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 3cf077af-a3f1-4e77-a80a-1cfa072a7d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 d67d5bea-bb45-4903-ac68-e16180979351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 ec25373e-4208-467c-938b-c937a23709c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 2f54b6a2-2dbc-4545-b648-86d83ab8e0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 b86ebfef-98c9-4365-ba8b-f2544c9279c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE0A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF360;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #340 592aaebd-e5c2-4862-ae8b-cec62f2aa71a)");
unit.assert_eq16(16'hE0A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #340 7407d077-7d22-4a09-b181-7ec4ca68c245)");
unit.assert_eq16(16'hAA60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #340 19b1c7d2-1288-40d7-a17b-3054ccffc635)");
unit.assert_eq16(16'h0AF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #340 ff53a45a-d31a-4900-9dfa-443bdc707fa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 848ad3da-693d-4e52-9afc-f418b2f7c118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 5822f111-bdb7-46fe-8545-b15c05bf2f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 9c2838f8-f755-4c53-92ae-255e16341dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 c266e21c-0d9d-496f-aa27-3b886acd8748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 0a7d7b50-23fa-4c48-9045-581ea6ffd32d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 ccd45704-94f7-48fd-b3ee-4d3230cccfac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h69A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1931;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #341 014eb0c3-a356-4de5-9b67-38e2f0027463)");
unit.assert_eq16(16'h69A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #341 707a5f8b-d240-44b2-a3ea-874c274dea7d)");
unit.assert_eq16(16'hDF31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #341 3ecd529e-263f-4243-8e8e-fc153786b271)");
unit.assert_eq16(16'h0D8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #341 b27b4758-618e-4b0c-bad4-2af525abe5ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 ca300939-8bf5-4b1c-a772-3aff7305289c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 c9550ffa-7a6b-4342-b863-3a4399175562)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 5c34704b-bef0-4168-9134-54908d9d85cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 30d1f893-0f64-490b-a6b6-79a78c79aac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 8f70cc81-56a8-407c-becf-4f4855061b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 9c674a07-e899-4007-b6ac-ad30821bacb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAB32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #342 65b401b0-fbc9-453f-a4eb-72cd10ef857c)");
unit.assert_eq16(16'hA8D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #342 3061ef52-0760-4d25-aaa3-c640ee737a78)");
unit.assert_eq16(16'hBB32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #342 c1d51613-2303-4112-804d-72434fc8917c)");
unit.assert_eq16(16'h0C2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #342 de671689-cb17-43a1-845e-21004e4a882d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 3e263188-2b9a-472e-8cda-114727bb638d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 6958d550-737e-4009-a27d-c82867d9ec06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 727f33a5-a07e-4fa7-86a0-ffbb62965dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 77af9002-3c71-437a-9909-d4d45de4243a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 9507e24d-bab2-4df4-83fc-66ac1ec55baf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 5fbf6fee-4159-4707-b14f-a4def33b048f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h657B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h336C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #343 319441aa-8b32-4218-959c-96c413ea1eea)");
unit.assert_eq16(16'h657B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #343 4cbcfacc-8196-4e36-9037-d2afc75abba4)");
unit.assert_eq16(16'h146C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #343 d1c0b6ed-35af-4953-9fd5-06b2fa264906)");
unit.assert_eq16(16'h02AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #343 5f5c8b6a-482f-452d-ad36-ce10212f0014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 e08d69d4-3c5d-4598-82ed-7757e8b43a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 58e6b0a9-f89e-4489-a033-ddfdd4e56bcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 45dc7581-2367-4c04-8bd3-15b86be15340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 69b1eaf6-733e-4973-8f85-6109d1de89b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 6dcaf150-a79d-46a0-a21a-7d448205512f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 d2549d10-485b-4853-be7d-8fdaad251c6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8AD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #344 17ed0e45-1330-43f2-bd91-abe7c8d552ec)");
unit.assert_eq16(16'h8AD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #344 b5d164f6-3e7a-48d9-8777-612b3f7d8abc)");
unit.assert_eq16(16'h6B3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #344 b67ffc67-9080-46d3-b844-4f4fde1ef65c)");
unit.assert_eq16(16'h093B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #344 31f083a9-84f0-42d0-b2d2-b5233bd62e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 36e25d00-6e1e-4c98-8df1-8968dc0b0e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 f600373f-a24d-4e4d-970d-9a3cb804ef3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 85862b69-1de4-4160-b579-5cfe669cff0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 1877e369-c4c3-4333-8252-89fb2e8cbdf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 e02593ca-5315-4922-9689-ce09902faf8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 5d69795d-ac99-4089-9d14-5fca8c8634dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h04E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h071E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0059;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #345 b1e2fd70-54de-40fa-bb32-85b9bc98920a)");
unit.assert_eq16(16'h04E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #345 327c5f73-6dff-4c92-be19-cd435830ec1c)");
unit.assert_eq16(16'h181E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #345 e485dd6f-237c-4710-88c5-1ca578f79b2b)");
unit.assert_eq16(16'h0059, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #345 0b0a9ccc-e418-4bea-8b2b-532b02f15ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 11b75be0-8ba3-4263-bf56-537b7ea34150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 d4ce0f01-77fe-4e86-bbce-ba6ea1fc52ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 b27e9bad-f24c-49a4-b6d7-8e22f39f082b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 4d65670b-8454-4070-b204-b7dd638e3856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 aadb2476-8098-44db-ac26-4f51b6f63d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 85d35fff-590f-43e1-a949-3edaec330676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h845A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #346 f734e91b-811b-4785-bad5-710cdf8bc40c)");
unit.assert_eq16(16'h3F27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #346 a280ee81-519a-46e5-b090-251ef4b07f39)");
unit.assert_eq16(16'h155A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #346 f4659986-ed0b-4e87-8fec-3fcb2878dec7)");
unit.assert_eq16(16'h0C65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #346 f0708436-2580-48f6-a184-2648b89259e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 4a675e93-5421-49b2-9bd2-bae175f1ccc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 2548e4a4-90ac-4a4c-b7f7-ca28f0d41f39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 2ffc267f-7741-44ad-b5ce-382c98e00844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 dcf85162-54e6-4da6-8cd1-dbcf3259e96a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 dce6c0df-bd18-4537-9f88-68a390ee2253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 9e8d3481-90e0-4edc-a7e0-d8673f1a0a8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2622;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #347 7212d597-04df-4c34-bf8d-c198cb752bd2)");
unit.assert_eq16(16'h2622, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #347 a26c8155-2cd2-4742-91c8-8074cba04211)");
unit.assert_eq16(16'h6026, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #347 950cd2a4-b731-4e54-9a66-2e0ad68b7ce9)");
unit.assert_eq16(16'h0779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #347 c761349a-3c44-4b89-8332-7d312f19bad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 644acd5c-8ac7-4b08-b5ab-bc5afc1c01ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 d0a21a2c-5189-4671-bc4c-c166ded6541a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 9ba4d1cd-0d80-467f-8163-abe9bf7ba7fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 3391b204-17b7-45f1-bb0d-77c5ac02e581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 ddd7e83c-d048-4427-a697-64ba9bcd4e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 90c472f7-b20a-4576-a6fc-d60af30274ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB10F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC67B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h061F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #348 3f722724-5209-4c32-ac55-fe1a8fd8db82)");
unit.assert_eq16(16'hB10F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #348 b091a4b6-1a3d-4cff-bfb5-330629a2bace)");
unit.assert_eq16(16'h697B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #348 98c5bb23-9733-46be-ba4b-e2403b6a689f)");
unit.assert_eq16(16'h061F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #348 33ed37b4-d249-4a7b-91d7-7b94fb9ecec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 bca905cc-e709-4fe2-b9f5-2f4094358310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 60465903-90f5-4e1b-97ed-f5597d25e2bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 4ce256e0-129e-4336-91f9-f9705b80eb60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 80004b2e-87da-4dd3-a456-07c3ec55daa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 0c2a1bb8-c059-4604-8bf0-be259598b2fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 156930f5-6287-4384-9356-e24b4db5d739)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD2C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD5EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #349 110d4ce1-7172-4ad7-be39-4f5f2546acba)");
unit.assert_eq16(16'hD2C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #349 24fe80c5-e92e-49d9-8574-a4574fac9277)");
unit.assert_eq16(16'h3CEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #349 81d68a01-7a5e-4f5e-acdf-d9525ecc1607)");
unit.assert_eq16(16'h0BC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #349 ce64eac3-125a-4f9f-bbd1-2d3382716d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 3c85b6df-6a3f-4334-adb0-401f851b5740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 d076198e-82cc-4f98-9f36-da6fd6e3b24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 98236631-c880-4902-b7a1-2af0ce752625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 af834560-4e3d-4b91-8571-2df7d1b30e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 2d9c9133-7542-43bd-81fd-cfc0146072de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 3acfef0d-803e-471a-bd97-e205eb33f1f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3CD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA3EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #350 23b26663-f779-4fdf-887e-04f45d385099)");
unit.assert_eq16(16'h3CD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #350 ca297ac6-0729-433b-a448-680bf044e630)");
unit.assert_eq16(16'hCBEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #350 594a1dde-ed07-4bf6-8a90-f697e27ec597)");
unit.assert_eq16(16'h0AD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #350 8e8ccf9b-a27f-47cc-a586-f8e485606c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 40519378-264e-491e-85fd-5c95ad9be75d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 9b3289c6-ef04-4583-a00b-961a80900d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 6135553b-f09e-4241-9d97-0219361735fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 f2c69cd5-e2da-4727-bac5-27bf04a008c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 1c1f820e-f096-4b4f-9ac4-a8f160b26a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 2b6a8117-0804-4172-953b-099bca16889d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA6B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0847;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #351 62d8b241-41e2-4f5f-a148-e1fb50d59137)");
unit.assert_eq16(16'hA6B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #351 dfd7fe77-d251-409c-81cf-7578fc55a57b)");
unit.assert_eq16(16'h1A56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #351 2a85cc67-7005-48a8-b1f8-e0dc6fb8f6b7)");
unit.assert_eq16(16'h0847, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #351 b865938b-3d83-459e-b744-deab4e4c818d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 c8597416-4526-4445-a866-5793a9ccd248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 5a6d2489-e634-43b4-9034-f8c350caba45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 99ef1f2b-1641-46f5-993d-1094c5bc9185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 1e71614b-4a83-45af-893a-4851d94c31fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 84666bde-9021-4751-9e2f-93a635a97596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 cb5cca34-3370-421d-961f-4ef660fa3c40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3694;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD55F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #352 cc8f04e5-c0e6-4e16-9420-f8182b79776e)");
unit.assert_eq16(16'h3694, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #352 81a27e06-679c-46f0-b0e3-988b625cccec)");
unit.assert_eq16(16'h625F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #352 58789339-df1f-4fae-87ae-31f0f9c138fa)");
unit.assert_eq16(16'h02EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #352 6b0cfa93-e580-457f-9925-fcf36bde63fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 1b11ec89-7321-423c-be4a-842f2b6faee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 3254b82b-ca81-4020-9e9a-1761524dab7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 9723bff1-af7f-4c3b-a304-329d73b07525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 9b36c12e-7dc1-4e39-b907-c55ba3c3f7cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 afa93f6a-751b-4075-b208-125c28e1b71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 b29aed50-16e0-4978-8b4e-dd50809ac116)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5A03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h45BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #353 36116b18-9642-4a6b-a069-66a90e89b6d8)");
unit.assert_eq16(16'h5A03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #353 9e1ba604-988f-4543-a21b-51948bff2192)");
unit.assert_eq16(16'hB1BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #353 6a0a87cb-d544-49f5-9a13-15af22078620)");
unit.assert_eq16(16'h02A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #353 46c314a9-86da-4c8b-9da9-222565bad2b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 0f6db08d-448b-42aa-9edf-4aa63ae0ebb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 19ee8fae-ffd0-48ac-a845-b362a99d4da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 a5df9a35-8945-4c0b-b81a-396bb42321e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 04d62350-a699-4a39-b573-8e148d87f20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 ed271916-a0c7-4abe-adaa-4a96ccd48bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 dd8d2aa6-aee1-4ad4-aedf-7c08c7866b48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h066C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #354 4adb7c7e-ee1b-481c-b9d3-e1b13dd99ed7)");
unit.assert_eq16(16'hF5EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #354 3f799c38-7e28-4511-9b9f-688e55605608)");
unit.assert_eq16(16'h826C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #354 0dbd210f-b119-4ff4-a7ad-e5ebdf8ef217)");
unit.assert_eq16(16'h066C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #354 e27215e0-e7c0-4087-9577-99c671719904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 9a6ea4e7-a811-4466-a170-56797c2d3f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 b40e40c2-6fec-4358-91b9-43e52a99749d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 29942c7a-0557-465a-98c9-27b9c05a488b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 71eab58d-71e9-4df1-8f26-15fe604646b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 93c8156a-224e-44d8-8241-e19c164b63bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 a30da222-01e9-495a-aba4-db99f6de950a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD8F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #355 ce65b560-6718-45a5-9f28-27c61f28c91a)");
unit.assert_eq16(16'hCD8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #355 c9414e5c-b2a8-4881-b07b-204899afdeab)");
unit.assert_eq16(16'h6CDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #355 afd65e3e-828e-43b3-8e36-a92c379175d8)");
unit.assert_eq16(16'h0E8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #355 4e4c3cfb-6f8d-40bd-b161-db679ec07573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 633909a0-3648-4f4c-86f2-cbb3443dd1a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 5c94522f-efce-4a50-915b-60c6e877495d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 681ffa96-b7ff-4b5b-9241-f82f6c6f5e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 cbca4da0-d3b5-49b6-910e-dbaebeedf23d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 d0ea8c31-5090-4a11-9ec0-62ed5b921e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 0970301d-1b45-41bd-b60d-4b430886f2c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9658;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #356 2af28118-f17c-424a-ba0f-0e5f4f21e84b)");
unit.assert_eq16(16'h96FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #356 41872b0b-fa1e-49a9-a197-7f3fd6e2c3b6)");
unit.assert_eq16(16'hD458, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #356 e88f7e27-5dce-4211-997b-34303f378e1c)");
unit.assert_eq16(16'h0CBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #356 cf3b26a9-9aa3-4867-9ae4-c7a1483d07af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 5dbd7b05-c894-48a6-9061-bc0cfb876ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 d7e5915e-4798-45ee-b59d-df9f4ab1f7c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 9c19b168-efa2-4cd0-95dc-00f5eda09327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 638911fe-cf19-4727-a939-2568c6a20e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 38952987-0dfa-4958-ac60-f1f3ef12178c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 04de2ba1-18b1-4ae3-be3b-5e5e695c35f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h63B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #357 f1c342c1-8f66-48c7-8985-1b28cb19a999)");
unit.assert_eq16(16'hF5D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #357 beb04bbf-e097-460d-ae15-f2c1a327421c)");
unit.assert_eq16(16'h21B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #357 e8d051df-fbc2-4a85-ab4e-843c522dc309)");
unit.assert_eq16(16'h04E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #357 a629616c-88e9-4a61-8755-275559b775ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 8d34a2fc-77fc-4c2d-afc6-ee142ccb6d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 adb02821-f1e2-4f6e-8c07-b7fcae29121d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 e7755fee-f582-4f58-9e2a-2433a1f5a33c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 72f9f74e-ce39-4604-a6cf-af9bd15486bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 cf64a482-63e0-4f6e-8444-6bb85ce586a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 fe592a95-a5bf-4c75-9c6a-7f3ff38ed0f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h84DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9BCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0277;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #358 5b1fd8a2-7723-4292-be20-2a5c10cff5f1)");
unit.assert_eq16(16'h84DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #358 03a25504-3a2c-4abd-a2e6-55ca17b63551)");
unit.assert_eq16(16'h68CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #358 eb3c789a-92e6-4e17-86dd-e2a57c63f467)");
unit.assert_eq16(16'h0277, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #358 15fe232c-b877-49ec-ab99-4febd3f5cd31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 36af963d-de87-49fe-a7aa-218f311c8ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 45238b8f-01d7-4ed0-8ae0-29377f650c8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 a4f0355a-28c0-4068-991b-4d4434d94af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 ab1125f3-f0ba-449e-8705-173606291644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 1ff99c4e-c1e0-4b93-acb9-acd581253bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 788044ca-52e1-4f60-89c7-5a5d033e0960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7047;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h20D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #359 21edc358-78d5-46f3-8090-c11a287a75fd)");
unit.assert_eq16(16'h7047, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #359 d6ddd4a4-9e37-4936-849d-7663ed6d0441)");
unit.assert_eq16(16'h83D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #359 02ca01dd-deb4-4ea3-a52b-6fdca1dde665)");
unit.assert_eq16(16'h0783, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #359 89bd2ed9-1ad2-4da4-a59b-2f46d22a1cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 38d6ea88-02f3-4deb-a044-079ed53b1f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 f4aaa2ca-0ba7-4f90-8c31-6b4ae9233ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 1b2aeb7a-ab51-46b9-92c1-d1303ae602a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 ad26dda5-bb85-41b8-8b23-eeb23d4ac48f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 b812791e-3e92-469d-93f2-869c0901fb8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 18c6afca-bfc8-4a16-a6e9-cbe0906bc9ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7697;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #360 c47e7b8a-9a2b-4123-a2cc-bb115ee90cb1)");
unit.assert_eq16(16'h7697, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #360 82412731-b60f-4115-8b61-3e39015c2658)");
unit.assert_eq16(16'hBAA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #360 59f4871a-3e39-49ae-a2e7-a70004677381)");
unit.assert_eq16(16'h06FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #360 db23d12a-4a18-4de3-a587-4e713ef2a209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 2e13f15b-e8de-4dd3-a417-ae9a6e252f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 8dce46e4-d70a-4c26-98c7-eef3c16e191b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 0267634a-a037-4bea-a497-9ccde217a7fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 b7feb0c9-bc19-4662-b939-38aef122aa63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 ddb64434-8125-4a5b-8729-c8ff786c2b8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 f56e3cc5-fe22-4655-b577-b43215e6eae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB83F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0996;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #361 e3508719-1155-42e4-9265-04a4310460bc)");
unit.assert_eq16(16'hB83F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #361 4702f3f9-5d72-4ab7-bd03-d7a13f298b1f)");
unit.assert_eq16(16'hC1EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #361 fdd5777b-d9ca-47f0-aedf-bee0fb9a478e)");
unit.assert_eq16(16'h0996, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #361 f8d1f8cd-8608-4fce-8173-fe40fb9485ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 6032a41b-6310-428d-90d5-c4f925e7029b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 789ee4ed-2487-4f7d-b8f6-3668cd363740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 a4f10d15-3de9-41fd-b954-2e09ca52aabc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 36fd8083-6542-437f-b3ed-8db0045c8332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 94e551f8-3e0a-4265-b428-dbf64dbb7ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 722a69b8-f7cd-4864-b70e-f0389d7c0847)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE51F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0407;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #362 805395d0-e6a0-449a-80e9-85efb9b29563)");
unit.assert_eq16(16'hAAC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #362 3d6dbe26-b473-4f8d-a19f-e80da95d6d4c)");
unit.assert_eq16(16'hED1F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #362 8c855e31-729b-4c87-a3e7-7d1b5800d75c)");
unit.assert_eq16(16'h0407, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #362 705afabd-b70f-4fa6-81a0-df3dee7ce747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 5e1343da-5288-494f-a9a5-dbc06a7e406a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 057a892f-2b96-406d-8461-1f031aae534e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 9ecdaad2-1e77-498b-8c73-1169d4199655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 fca560fd-c6ce-40ff-ab05-5d0990c016f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 ccff5d33-bdea-4b0a-a1e1-82cc66776817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 503ed3c8-8b6d-4628-b6f6-615085a02b70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7A63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC882;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #363 0683a086-b427-47c7-bba8-0af80a841174)");
unit.assert_eq16(16'h7A63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #363 c0ff1da6-a094-4211-8742-cfdb4ee74d06)");
unit.assert_eq16(16'hBA82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #363 2c480a0c-8bb3-4d3c-a0ee-56d5d3947271)");
unit.assert_eq16(16'h0B25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #363 f921e7d5-a720-470d-ade1-0d072218cc5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 340ab8db-f0d3-47d7-8049-7f288e98eb44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 5e70487d-8082-44e9-b0f4-f444338bef6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 89ab3c79-7939-4036-8a90-b6fcc938f337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 8ada2d5a-6290-4b36-863a-175e37fe3ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 4d9a185e-c0e7-43c6-9cb8-f623886621ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 a7432a69-418d-4a80-9549-2cb14a74b95b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8426;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD5E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #364 b586eaaf-f064-430a-8e2d-f48f6f1f6ca2)");
unit.assert_eq16(16'h8426, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #364 072faff4-0ad6-49bd-b362-42c3e306a79b)");
unit.assert_eq16(16'h18E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #364 7ab613a4-d76c-4263-9096-d966e97413d7)");
unit.assert_eq16(16'h04B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #364 818e5a42-f29d-4bde-a870-e329889757f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 be4524d0-da9c-4e6c-afad-dffc4aba73d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 d016f15d-b162-44d4-a8e7-af6d18e8ab30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 11330af4-4afb-44c0-81cd-d2e51d8d6243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 1e0a3af4-232c-4897-aa01-1ab29add930e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 ca7f2612-cba9-4c97-8d05-20cf88ac0ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 ecf7225f-8f04-4ab4-8fae-000cd2a45ff3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0480;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6ADA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #365 2c35d3c8-3b8f-49a6-88bd-581b05d6432f)");
unit.assert_eq16(16'h0480, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #365 71da593b-0a32-48fc-98ce-bfa451ed8530)");
unit.assert_eq16(16'h05DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #365 20c37d5c-2198-44ef-8018-f06243ed1819)");
unit.assert_eq16(16'h0D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #365 75c6ef9d-96cc-4d46-a189-7d1c6a6b4909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 003fdf9f-7966-4a3c-b8fc-98826cef1407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 ae4ee1f8-0ce4-40ca-8e76-98a01457dbc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 fcd476b3-80c9-480e-a0ac-1de6238425d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 14d2c025-8210-4729-a1ef-8c976c7d2b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 923a242c-c33b-4f82-acec-57a82711b28c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 32dddc26-87aa-47e3-9b1e-661a30cf5eb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3DF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC869;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #366 9dd5c5e1-a7f6-4749-98c7-fae11bd9f5f0)");
unit.assert_eq16(16'h3DF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #366 de21debc-5d38-44f2-a0b9-7fb3b177b4d4)");
unit.assert_eq16(16'hF569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #366 e28ef138-40fb-458a-9a55-18af19f8d230)");
unit.assert_eq16(16'h0F24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #366 edbe549e-f032-4ede-bc51-59ed4ba301fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 1aea1714-b156-40af-a373-8ff183ca9371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 aa936b87-65b8-491d-af79-48a56a462fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 f4b0246a-d323-48fc-8355-33c42d798312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 2b5a69c6-13b7-4cea-aefc-bea86bb3ed7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 ea106814-6385-4810-b7d2-d35eb854f10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 f6c5bf5e-7121-44ad-ada3-b264d25327dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h443E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0097;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #367 ac994e56-ce09-42d4-8cb2-213c2a987482)");
unit.assert_eq16(16'h443E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #367 3564ac2e-bcf3-4e97-9d39-c774d782868f)");
unit.assert_eq16(16'hDE97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #367 1184e1ec-ca7a-4182-9ad7-d659c025c06b)");
unit.assert_eq16(16'h0A75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #367 b7eedbfa-ed23-4c0c-8c9d-cff3584c7fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 f5b06e0d-b2e3-4734-8ece-89d4e06833e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 1407e198-cb1c-44e5-9135-f288573964c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 4d71fbdb-dd6a-4ef7-8b27-2ec5f5b10bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 5b81ad55-60d8-451a-b277-1ee1d56f7908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 43b8279e-4255-4c49-857e-ebcfd1de6c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 8622700d-f5fa-4504-8bae-bab5294e3b0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h61E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9263;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #368 a7df3d89-99ca-4702-82e8-f0cce784dc1a)");
unit.assert_eq16(16'h61E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #368 19bb6eec-a862-4d02-a625-bb46602a314d)");
unit.assert_eq16(16'h7D63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #368 f6c2487d-ae59-4aa5-9423-c57d50e69f3b)");
unit.assert_eq16(16'h0B4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #368 60badd05-8aab-4f12-b60d-9f663ec082de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 0acda5e1-dd94-455a-802a-46b8cf33fcaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 63b6d4ff-998a-4bbe-a551-5871d5baba19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 2243927d-f563-4910-ba97-f583e5748638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 23773796-b5cb-46c7-abc5-9cfc995db48f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 f3587887-85c2-40f0-b342-b7fe6c67267f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 02ada0c4-02cc-418d-bc69-c2458d15b39a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h60AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1CE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #369 4132bb22-275f-42b7-8efc-1dd9d7fe44f2)");
unit.assert_eq16(16'h60AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #369 8b6454bd-ca3a-4405-b5d3-7e17023180de)");
unit.assert_eq16(16'hBFE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #369 827963b6-186f-449c-a838-8e30fa50da9c)");
unit.assert_eq16(16'h09A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #369 4267e27e-f82c-4fdf-96f4-301df62e7782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 7798f6f1-230c-4a66-bf3d-9072d9017b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 2a5e56ec-1805-4f76-a20b-22496e398035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 ee3f29ed-1bab-4d48-9127-9111b482cfb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 5dc546fe-1684-416b-b76a-88619e719b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 1988e50c-d832-4fac-ac1d-aa60a1baab9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 5837d435-c169-488c-b653-0e438ea15bfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDE2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h19DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #370 35156e21-5251-45d8-9d99-90d1b5088267)");
unit.assert_eq16(16'hDE2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #370 8b9e5294-28f8-40fd-811d-299d1f2f1038)");
unit.assert_eq16(16'hF2DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #370 b6bfbaad-c1ee-41da-94f1-314d1fd7ba86)");
unit.assert_eq16(16'h0E04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #370 f25958b0-3a44-475c-8d08-92671d29bfab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 2a2b8d0b-c255-4a44-baab-9a3cf95365fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 5b8fb292-49f3-4147-a242-c0a2b16b66d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 72a03c66-eb31-429b-ba93-935dd5552e85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 e2f6c05d-3593-4076-9a49-84c508725526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 86b166ee-39d7-4cf4-9eb4-7562eda2062f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 234a100a-ca04-4b1a-a5cd-98ea7895fde8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1566;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACDA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0229;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #371 a3187b58-4cbb-48a9-b361-440bee99fceb)");
unit.assert_eq16(16'h1566, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #371 953f9a9e-6c79-4b0a-8181-07c49b4404b1)");
unit.assert_eq16(16'h05DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #371 e052f3dc-fb67-49d7-ba91-7cf56667da18)");
unit.assert_eq16(16'h0229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #371 25548a36-7955-4eb9-a885-b4814101ca98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 23410ef1-0c54-4754-9fcf-ec8345a2eaed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 19a13b84-e08a-4f4b-9067-63396be21b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 339fcd70-f9a2-46d8-a8d4-645d198cdbe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 16ed5ce2-eeab-4808-b6be-0d798b0ce7d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 374963b2-8f38-4db1-a9f8-d2777471ce9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 986ff281-5150-47b7-8806-fd430a061675)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0164;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9500;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #372 72b4fe17-a408-457c-b6a3-edae53ee86f8)");
unit.assert_eq16(16'h0164, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #372 f537ba69-35b8-4c86-8fdc-96612e443a36)");
unit.assert_eq16(16'hE200, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #372 7f8a1f4a-e1ff-4fc9-af23-d3ad988933f6)");
unit.assert_eq16(16'h03FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #372 13a94011-a133-45b3-beb2-8cc725f99d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 65a1427d-1111-44ea-b542-62be6bb56293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 881c9be7-7539-4e0e-baa8-501a73cbd405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 7766b072-2b59-40f5-889f-6097551f53b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 3ffa9905-a38c-44a9-abdd-4b20ea8f534b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 449eb07b-8641-481c-82c5-a06be9ab6a46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 596c5c23-34c1-4643-b993-16fd739456c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DA6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7BF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0129;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #373 e3770aee-351e-4123-826c-7cf01d33b252)");
unit.assert_eq16(16'h4DA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #373 45bf3f98-d313-4fbb-883d-b17df4745f7a)");
unit.assert_eq16(16'h69F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #373 4fcecb44-9421-4dcd-b05f-e4ec0ba6c48c)");
unit.assert_eq16(16'h0129, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #373 7259f395-4f27-43d8-9703-5097d7988391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 0d3609dc-b0f9-4106-865f-692f6b8f14bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 1777e3e5-2f7d-43ac-a423-bd85823bb383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 924b8339-c541-46b0-b72f-5018349d3f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 cb4e3fc0-6640-4834-9ef8-05a3b516b39d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 d4383b5b-eb09-43b3-88f4-f6a5ef53863b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 d416b424-4c2a-4c40-bd43-e2a9b914f505)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDAEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #374 dd4e5774-e67c-4af2-aa1f-92c83f6373ca)");
unit.assert_eq16(16'hBB02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #374 4a9f91e6-ff4b-4a64-a1e7-c213f3a9372d)");
unit.assert_eq16(16'h76EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #374 49ea68ab-5522-4191-a5d6-9958fa32d582)");
unit.assert_eq16(16'h09B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #374 c39fb917-4cea-4ddf-88a5-643686fd9d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 024f88a6-b7d2-4437-b5db-d8fd51b093c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 be1fe62c-586e-4cf7-b401-ddccfa99b3f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 fb361efb-2e8d-45cc-aa76-c20e99ff15db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 3fa30f79-3021-43ec-b7bb-9028df3eef6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 5c128d7b-f7fb-49e1-a87f-f46c42a2c989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 c7c493b7-1402-459d-b165-c9c3777ebbcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE856;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #375 6e68c82b-79a6-434e-b397-0b3180ba33c0)");
unit.assert_eq16(16'hDA6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #375 34893362-3430-4b54-a625-c5b8064d36f9)");
unit.assert_eq16(16'h2A56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #375 650af5c5-708d-4295-b6a5-63738cd1f436)");
unit.assert_eq16(16'h07AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #375 ed5a70e4-2cf2-4c3c-851f-f5cfe5b23208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 52ab6b97-0120-4f88-aea3-299b8997151d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 77945488-91bc-4a1f-ba75-89f86410db15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 ce5b67b0-6ffa-4749-a04a-e6bb577209dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 498e87ba-0f3b-4e62-a7ae-1f7abc1e36f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 28b73bae-51a3-4f88-86e9-cff432e4d47b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 2a480742-a9db-4ed9-a15b-875d50faf2ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h237C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #376 a68393ba-2e3b-4dcd-b2ca-8fa9c72946a7)");
unit.assert_eq16(16'h237C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #376 6dddd5c1-8fc3-4766-a066-fb87bf59b6b1)");
unit.assert_eq16(16'h7718, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #376 018a0403-3c25-4157-a634-7f9eb3e9560d)");
unit.assert_eq16(16'h0CBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #376 3b802fe2-1d8e-4649-818f-90cac57a010b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 a795e6ed-f92b-4750-90a0-acdb3fd5b4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 e14a1777-679d-4599-be35-682c474e23c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 4951721d-4ba5-46bb-abb4-2161e744f778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 a30b5954-9b94-4ec5-a7ae-31dc58a9f14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 90ead09a-e36f-43d5-be74-c8d8f7dff8d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 71b6461a-bf3a-4e25-b877-7bf2bb011a7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC05D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #377 139e2fb1-ecdf-4f72-bc4d-248da946b1fb)");
unit.assert_eq16(16'h5CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #377 bf69c6d9-bab0-4348-9bfe-ad2eceb9f5fc)");
unit.assert_eq16(16'hF95D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #377 2cf90233-8325-45a5-96d5-867efe4ede6b)");
unit.assert_eq16(16'h0E2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #377 ee1ccbf5-6119-4b8a-9c0b-e5f6fff16ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 80d67d8a-8d28-45ed-85ac-01ed9d596fbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 db76c04f-9461-47b4-b088-38a5cc125918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 6e51fb27-2c2d-4548-a480-d373988edce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 77901f06-8380-4952-b573-c4b33ee240be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 ab4f4e08-591d-423b-a8b8-07170aed5bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 5be202d0-c43c-468e-b15f-946be61c73cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDAAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6397;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #378 9e93ac55-9b98-4c54-81a7-441c3296e08b)");
unit.assert_eq16(16'hDAAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #378 22015261-751e-4234-bf42-b093099c15e6)");
unit.assert_eq16(16'h9197, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #378 e8dacd0d-663a-46b5-b82d-03cbe0705867)");
unit.assert_eq16(16'h0AC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #378 0ac08fe2-5ae3-4bf1-8864-8c4d148e017e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 dc36af92-9ad7-4f62-a2d0-2b3be2f0b819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 e420fcb9-4eb8-4b28-b5ac-4edbdf52d026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 6ef0d233-9252-4e0d-9f67-faf6b03ffbc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 5b6b447a-4f25-49c6-bfe1-bae0a81a0c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 a0765ec2-7264-48bf-996a-8de2469d0d86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 b82209e2-37d5-4fb3-a42c-7c595c9ddfdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD13E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC5FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h088A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #379 833b67c2-0d58-4e69-9bee-85ffdba55ad4)");
unit.assert_eq16(16'hD13E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #379 21eff2ce-5127-48bc-9be3-98a750c28be2)");
unit.assert_eq16(16'h99FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #379 79db40be-63ff-4b55-8c2a-0bb430be6035)");
unit.assert_eq16(16'h088A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #379 2d7a2095-847c-4a72-a154-045b794d9643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 2a04c786-1732-4ca2-97bd-4da086ed72a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 1fddf0a5-d248-42e4-8d7a-53416e6fadb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 84160d95-debe-45e9-8ee9-6a51bfadf711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 0e2e2ab1-03dc-475a-863c-069e6c09cd1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 26e8210e-6946-4606-8842-1a5eb01054c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 2ec50d16-ddf8-4317-82d6-003a8281e4a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h29F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #380 33adbb4f-e5da-4ba8-b636-202a3668ff81)");
unit.assert_eq16(16'h29F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #380 e2167075-69de-4139-bd44-efaec72e6de2)");
unit.assert_eq16(16'h5ED1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #380 ea011435-6fb9-46c2-a52b-cff5cdc9d165)");
unit.assert_eq16(16'h02D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #380 ac395679-fa7a-46df-b280-6736de0b26fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 5155dbf5-ffc5-4b04-846b-70754c2a41b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 cc382060-286e-4316-bdf3-5d08bf3b9ee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 1c20c075-77c1-44a2-b8a6-aad58bada055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 dac0bfc7-3657-4eb2-98a5-ba5b2ae95807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 3aaec5e7-cffa-43a4-8f43-b7598cd31856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 a53bf508-81a8-4ade-9e2e-cfd9f68be766)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6983;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #381 2d8e8acc-f81f-4ede-81f7-3d6b429d0665)");
unit.assert_eq16(16'hCC82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #381 96af3447-921c-43e2-af3a-03ceadff6309)");
unit.assert_eq16(16'h8383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #381 424d48c8-84d3-43cf-9b21-869a6b95fa53)");
unit.assert_eq16(16'h0783, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #381 57b45fc9-e840-4217-97e8-241916388b5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 0e963b62-51b8-4aae-b731-c6e2ac68dd31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 7c66527e-542c-4670-b65b-e52caa4c456c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 cbf1f478-25a0-4941-b195-f16fdcf0f518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 34cbeef6-2317-4973-a4b7-c5851b72f144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 5399e865-5233-45d0-9d39-d7d39b13aef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 90562571-bd2e-40de-b99f-4dc9d7c33ec0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h57BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #382 9fde7ae2-968c-410c-bc50-0f238ca6f7eb)");
unit.assert_eq16(16'h5D41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #382 36405108-6407-45ea-b780-ffe30ece5814)");
unit.assert_eq16(16'h8DBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #382 b55e061c-94a6-41d0-b9fb-c32c607dfebe)");
unit.assert_eq16(16'h0A64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #382 70a02c30-dd61-44ab-a5b6-dd81eba36a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 7c0d54dd-bb0d-48bd-8810-a99fa7a3432a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 a5d1e269-6c8e-40f2-ac49-f7dc2fbf587c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 b9105510-531e-4b8f-917f-43960ed0683c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 36c0f92c-8359-4675-a9a9-3ca520b48f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 e4214db1-84c1-4344-bbde-0f1bba7a0317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 a33e9d24-bed8-44dc-8dd4-28e7859174cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC5C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE864;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #383 331570f1-a1cf-4169-a5ec-46c5d9cfa832)");
unit.assert_eq16(16'hC5C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #383 d6cf1fef-8671-452f-9f0c-b9afabccef40)");
unit.assert_eq16(16'h1A64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #383 e0f4eb78-b11f-4c9b-ae25-378ddef9c700)");
unit.assert_eq16(16'h0A4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #383 f3adba30-6cf5-46f2-a2aa-fa3b7ecfc340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 056a98f1-a98e-4f0f-8b41-9c0980f84b81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 d96ca67d-9675-4462-b553-bb4b20e368a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 0bb9bfe6-02df-432b-b305-e534cf1ae29e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 884bf8cb-60aa-43e6-a67a-16d2e30b4635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 8514311f-0c61-43bc-9f35-04c6c926d960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 7de24652-e65c-4cda-a17a-1c6fde1d5e95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8EFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2391;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #384 c86cbf17-4ca5-4212-917a-27a4c1f8737e)");
unit.assert_eq16(16'h8EFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #384 d84b7868-1684-4849-a1dd-0ec1ed41e96b)");
unit.assert_eq16(16'h2312, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #384 57643012-bc1e-493f-aae2-255b0407473d)");
unit.assert_eq16(16'h0DCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #384 291b6c8f-c581-4880-8a34-f70f39a750bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 eff77351-fa1b-4493-b1e4-37007f8c10b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 02c3b7cf-e237-4647-8a19-52b84f8b1c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 4bb99527-1168-49c8-adf0-818d1c6c6255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 f0cfd215-c38e-4f41-a785-5917cf0da2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 ce7216ff-f777-41b6-b194-828f6e3e9cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 0df2b8db-cea5-43ac-88e6-2b936fe35fb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h504D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9EF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #385 6c357d9b-8b46-449f-8fe1-22eeb93676da)");
unit.assert_eq16(16'h504D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #385 c80bb4a9-51c1-4ebd-8904-11b4108006a6)");
unit.assert_eq16(16'h9EF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #385 63f8dff3-5af3-48d7-87fa-8e8cd8ff9b9a)");
unit.assert_eq16(16'h0B88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #385 a800fdf6-905b-4335-89a1-9971ed70f585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 acf9018c-e090-47c2-98b0-47f2b49ef34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 0a3fe126-5994-4c61-b2f4-99c3974dbf31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 9b3d6d50-2905-44cd-a7b6-e95ca066c717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 ddd76ec9-aa72-4193-97ae-4463410c164f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 a25ad371-d47f-493b-9b0d-beb980541088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 185dc1f1-de76-4d23-a551-9cd1bcb03b85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h286F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C65;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #386 bd1a7aa7-3bef-48f7-9060-b7ddb6e98393)");
unit.assert_eq16(16'h286F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #386 85113a73-ee04-4305-9ec2-f1eccdbd8f50)");
unit.assert_eq16(16'h6C56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #386 23847f13-474c-4d65-8936-c1ea385bafd2)");
unit.assert_eq16(16'h0D12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #386 27b5931a-3e11-49f5-8b42-82e8f06556bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 89bcc706-3845-4afd-8033-f58996e4fa74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 68d3f47c-4f6b-498b-881c-634c7b29e5ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 4fe73517-d1a0-404e-8678-d8759fe3d55e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 f2e46f50-a721-4a67-9e58-f4971df33b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 9d6c67cf-2e01-4613-b09c-1fc603e36faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 2b51ae0e-98e4-4aad-91e7-375967aef8cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4FE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #387 ad439d6c-4eb4-4732-82f4-7b9ed2a3174c)");
unit.assert_eq16(16'h4FE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #387 9d0135b9-ba80-4f37-9ceb-055283a67df2)");
unit.assert_eq16(16'hBD1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #387 fb26a0f4-f5a3-4270-b7b4-d38c7b8c13c9)");
unit.assert_eq16(16'h02D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #387 b29fd214-156d-450b-ab7b-ad072e360d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 91fe4d5d-8866-40b7-88bc-36e4f5aafca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 158197af-251f-4e1f-b666-dcdf92375a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 112414d8-3eb8-435f-bf4e-603522dccf70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 9636d6c3-9ad7-49ba-a7d7-e4bfe1ded398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 c69a772f-59e1-4eb2-8107-49c91229b329)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 a6b5e44b-6f3b-497f-9137-fdc24929d1a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4B31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #388 18dacfda-eeaa-43d8-a213-e495cfac7fde)");
unit.assert_eq16(16'h4B31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #388 0350362a-e121-4446-9c95-e77f5a764b45)");
unit.assert_eq16(16'h41EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #388 ba42d6ef-5a12-4f99-ae18-a013613cd2ee)");
unit.assert_eq16(16'h07F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #388 e8a4bfae-ace8-45ee-bfbe-e3e26461cd35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 e7cd3a38-7ced-4d48-b9f1-0f848801c399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 a4170501-ae4e-4f5f-9980-960b72c32981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 c85b42ff-3de0-4f8f-9284-143382053d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 95940735-26c0-4889-be9d-c62f9232afa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 a5c2c378-add2-448d-b7ee-ed2f053bfd7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 11f25418-6528-4f5a-b400-0ecbdf17c441)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5127;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #389 e5a8b170-f5f3-430e-8119-9f065c055261)");
unit.assert_eq16(16'hE5EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #389 53e32d16-2048-4498-a063-b05c0ec6de57)");
unit.assert_eq16(16'h518D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #389 2204fb24-16e2-4429-8300-8bea316a351d)");
unit.assert_eq16(16'h01E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #389 621314ea-d1a1-458e-93ac-a3d25a61aab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 203853ef-0888-4e1a-8d59-3bc8bc5109fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 aa9ad2fb-a53d-4602-9916-8beb1aaa4548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 3892717e-5b36-4706-ae19-cc6eb7e43643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 94339226-96de-4d9f-8df9-1828d641377f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 3cacb8fd-6a02-4807-8db5-a6ec4e26a6e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 2e0d7dc4-4e48-46f7-8a84-33f5f44aea6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h15BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2B75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #390 9c00f5bd-19ad-449b-8f6a-610a1059c75e)");
unit.assert_eq16(16'h15BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #390 5805d9fe-9323-4f35-8500-1d7d757ec80a)");
unit.assert_eq16(16'h2B24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #390 252d72c9-7d5c-496e-abd6-26972d54319f)");
unit.assert_eq16(16'h02BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #390 dbc3cc1f-0e06-4c25-b292-afa80f03d2a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 3a6c9504-aa99-41e3-a63f-ba1f28a20b40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 defd6d74-5d8a-4693-8658-43796cefb382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 00447b03-ebe8-46f7-b8f6-ceff6c0476a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 0bc7951b-4617-4b9d-b1bd-5f86e9523e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 3263fd31-1a79-4bd2-91c8-7f42d43b813b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 fee50017-9989-4d70-94dd-72ccde4fd6f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h29B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1EB1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h090E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #391 2b4cc329-5b0c-48f6-a796-75ccec53aa48)");
unit.assert_eq16(16'h29B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #391 52d6e65c-5d3e-40ae-a87e-3ca7fab10c50)");
unit.assert_eq16(16'h1EC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #391 687d544a-67b8-43c2-a402-f5703d47b072)");
unit.assert_eq16(16'h090E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #391 a8aa4a34-0740-4042-beb8-5936c0c64417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 7645c0af-f50f-40e7-af0e-6a81f6408b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 074c6ce5-9a13-4eb8-a978-4829b2303b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 fa985d33-53a0-4dec-b723-a59d9894c8cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 0cceda8b-3b94-417b-853c-188f36ec25a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 059265fb-f5ae-4c24-83c9-5c8847882c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 d653af72-a637-4fed-a834-3a24480c94f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA63;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0846;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #392 cf4cb2bc-e8e9-4f1b-bd83-4a74ed3f2f95)");
unit.assert_eq16(16'hDA63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #392 62cbfa0d-b052-469d-9de5-b57335f80a6d)");
unit.assert_eq16(16'hBAF9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #392 2317f56a-da97-4b2d-ab59-b73e13432c76)");
unit.assert_eq16(16'h0846, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #392 16dae1bb-d39f-4b8e-8f5d-e8ff283e38df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 daaff2bd-db95-4c90-993c-fb6b1eaf0c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 e3d6cdc5-5e12-401e-8fa2-33f6ad98a388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 b8a5c505-edc7-4151-9677-a609b70c24ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 4ff1691c-c0ed-4def-aec6-5cf3ed1efd05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 4840d7e0-cb50-457a-8c8c-98177a74882c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 98b522a4-b830-4f34-a2e1-8cad8d544201)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9A81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD3C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #393 514f1392-4ac5-4f59-a484-4eb3392e9e64)");
unit.assert_eq16(16'h9A81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #393 f22eb71f-7cbf-4422-b345-cbb147502acc)");
unit.assert_eq16(16'hD30B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #393 b8f1fea7-16a1-4336-9c3b-8cb4419a34a8)");
unit.assert_eq16(16'h0E61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #393 b2041955-1575-4ad8-bb4e-e7b5911a5dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 984d13ff-9c6c-4a8d-bba0-cb897332e7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 1009ec4f-bd71-4c44-b6a1-610ba6de9c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 242fb2d7-1f45-41c8-8f2c-e71c9f37549b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 2a2137c8-4e4b-440c-a96b-0475b9d86806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 6d6bd077-b57a-47b9-8254-ebd4bcdd64a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 b697b68e-dc8b-4977-8a12-0feadf638dbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDC18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #394 7657bfb9-d9d6-4ef3-a4b4-82c1cf490062)");
unit.assert_eq16(16'hBDE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #394 a3ab10d5-60b9-4c0c-9c6c-0439129120e9)");
unit.assert_eq16(16'hDC50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #394 2c1d0251-0cc7-4ff9-9bd5-547eeb4cd84c)");
unit.assert_eq16(16'h0FAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #394 b529a7d1-85fe-45c9-9896-30b569c520e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 048a3d4e-6249-42c2-a200-b72dbe1a7b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 17be3e17-1182-45b1-bb0c-20ed2925d303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 48e0c8b8-640f-4e33-a6f3-f92277daa786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 f925dfbe-4d74-4fbb-bdf5-2059f4ce62e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 40fb8243-4c00-4f48-a9b5-5e4c3890beb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 27d7449b-3765-4ddc-a0a5-4d1cab96ed64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4DF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFAF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0808;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #395 58b823f2-f36d-49ff-9a84-092005cff367)");
unit.assert_eq16(16'h4DF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #395 34a31980-b718-48ab-abec-4ab757d28d56)");
unit.assert_eq16(16'hFAAD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #395 f5545014-d18f-4332-a117-e3c86ed73f11)");
unit.assert_eq16(16'h0808, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #395 4d52265e-bc39-47ad-919a-6d184a3af161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 bfbfd203-0e0e-4df0-8156-703cff4847df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 bc004d1d-8285-47ad-adb0-a50d28dd6074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 1f5ddb59-6ba4-4bbb-bc16-0569821c1d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 7b089024-ecd9-4cb5-b4d7-a54c7fa4c016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 92df149b-58d3-4d77-a1f5-bac7be491fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 d36eab76-74d0-4cf0-a2d7-5293b294300e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h06CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h77BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #396 fc8e01c9-882d-4062-a9fb-20aa6b87513d)");
unit.assert_eq16(16'h06CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #396 7cb27e57-70be-4b22-9204-e324512648d5)");
unit.assert_eq16(16'h777E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #396 bdd16840-23b7-4966-959f-9fd5040e90ec)");
unit.assert_eq16(16'h04A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #396 daa5ac88-17f3-4a63-ad72-36b924016ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 8ee84130-01a4-4286-a25d-2847426b3073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 66ed336a-6518-4956-b355-5b51bfe508d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 9d4e9d7e-c18d-4ca9-85b6-3ecf34b3c51e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 441172a7-6d6f-45bd-a704-987f7a14445f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 76a5651e-7851-4a21-96cc-606345497373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 f7036127-4de6-45cd-8bb6-266f3bffb074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h95BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h078F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #397 bb0e36dd-0ed5-41fd-a651-300d96b44ab4)");
unit.assert_eq16(16'h95BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #397 f064b2e9-2367-4aea-90f1-d7753473adec)");
unit.assert_eq16(16'h11FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #397 9457fb2b-c219-420c-83ef-4f2067200bf0)");
unit.assert_eq16(16'h078F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #397 0b5eea40-a14b-4e38-a06f-cb44c0261171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 2e3fde53-c83a-4d34-9bfe-b49c5c81b7f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 50244359-f8c9-4f5a-bc2d-e41014546e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 9b56b3dd-bfca-4409-ae77-c5f79ed4ddb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 34cd6bd7-af23-4990-a994-a34797c75df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 f5692071-7175-42bb-babd-d26c25c16d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 3c451ea2-1e64-476d-8e87-d106f1f22d4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h392D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6876;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #398 24316a76-493f-4b0b-b188-5e621c662a5a)");
unit.assert_eq16(16'h392D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #398 140f0ef3-7600-4aea-8fcc-8975bf0e34ce)");
unit.assert_eq16(16'h6893, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #398 ba3ed847-3fb0-4c16-aa37-2263d9fe2554)");
unit.assert_eq16(16'h0BCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #398 e2f15afb-d893-41b9-bdab-2f3a6b8a43ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 23a46327-2367-45b7-a468-0d6753b4ea21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 3b86fad8-0dcb-44a9-b9be-e8542ae764e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 e86320f3-083f-4fdf-8cba-3c8a9febad13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 ea6cc716-47c5-486e-8db0-0085f1114f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 64d35f63-1dd9-4cf7-8913-296de4264c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 341a6b83-0790-4f41-a2c5-3fd85a90fac0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF381;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5963;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #399 69036004-cffb-42ab-9231-228ce5411509)");
unit.assert_eq16(16'hF381, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #399 8c60260e-a70d-4468-9e5f-09d7f2473313)");
unit.assert_eq16(16'h59B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #399 b59d26fc-e008-4364-8369-da85e564baad)");
unit.assert_eq16(16'h0B0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #399 95e6ef94-45e4-43dc-99a6-4e9958162bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 dbab8c1d-fca1-463c-a770-69ee484a5120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 a1b0ac7c-326d-428b-8152-716eae2c9c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 06830178-1a90-4e4b-803c-1f24089a23eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 a66aedc1-b804-4168-a995-71b00ed55bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 01eaf2f2-1711-4f90-bbb7-d0b1df7928b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 49be445a-a561-41f8-a69b-ed46670e9280)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8799;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD22B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #400 99dcb872-3301-4db8-828c-290dff99c60d)");
unit.assert_eq16(16'h8799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #400 17e31599-a0e1-43cc-8497-ee2a20bc3758)");
unit.assert_eq16(16'hD206, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #400 8173972e-28dc-4ca4-977f-a86594bb9317)");
unit.assert_eq16(16'h0C30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #400 286f50bf-ffa2-479f-9249-adba65810580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 f67367a4-333b-4e73-a4ab-3bb7d09b32e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 2fbd4d91-8bff-4b32-960e-34f7d92870be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 4c03a280-a7cc-4894-b418-d2dec3bd0272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 e8e65646-1902-418d-9cdd-1f84459dce03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 4ef5ac9a-a751-47e2-bf9b-3d59db361518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 37f565b4-98ec-4d4e-99c5-af07db0ff71a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h02EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h57F0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #401 5dbcd986-53e5-49b1-a251-7bd08ad7f816)");
unit.assert_eq16(16'h02EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #401 f1b4d182-7d6a-453c-91f2-eb12c02474c8)");
unit.assert_eq16(16'h5711, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #401 2c2b6648-f01c-4aaf-82ba-1a8b814815f0)");
unit.assert_eq16(16'h0F13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #401 51923e38-e6d3-43b5-b38f-5795919eebfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 87ac9eb5-9221-4abe-a911-85eb393b88b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 fe885515-1e7f-400e-b866-cbffccbacdbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 5826a772-8e8f-43ad-aab5-aa5a9ead4c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 6870819d-1c92-4d22-8341-0e7ed179c656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 17a7fce0-a196-40cd-969c-75ac965afc3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 68bbc429-8dfb-4d99-9100-0b7704ec4060)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8842;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0742;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #402 7f11757b-3ba0-4b3f-9449-e0ab0ca8f791)");
unit.assert_eq16(16'h8842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #402 f7f9587e-f092-48d6-9469-715b2608e2ff)");
unit.assert_eq16(16'h4E88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #402 4fba55c4-32d5-46c8-a3c1-f9d0fd59246d)");
unit.assert_eq16(16'h0742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #402 2aaef1a6-281b-4f79-ae50-ae81880df0d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 48f33e75-1058-4ac7-82b8-ed396b4e2b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 5e7ef740-2725-4f2f-b415-332d7ef55d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 38d53ca0-4fce-42a7-8703-1dec39b4bec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 1d04a9b8-5ba0-4a7c-a7e7-b53dbfb95798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 a7fda4d0-0cf8-49ba-aea2-d96bfc516bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 f1855412-42ca-400c-a788-ff438db5fa88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFEB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #403 38844c51-7866-4389-b570-aebe85fa1e18)");
unit.assert_eq16(16'hFEB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #403 bb10bb1d-1d2d-413c-8975-150ab9c47eb3)");
unit.assert_eq16(16'h62FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #403 37adac8f-31de-4c33-a9ad-ea9237b6c236)");
unit.assert_eq16(16'h0B74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #403 76162cca-a89e-43b0-bce4-aaa73fb7dffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 6bc3ed8d-12a2-45b1-8ee8-95f2fdb94c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 67f8804a-14f6-43af-949b-cef5cde029aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 3c7d4766-ebf8-4110-b66b-f13321a0a3ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 807bf8d9-f5e2-4df2-84df-db44afa1c429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 3d58e9f1-0c90-4084-b3f3-68d7f0fd39a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 3171858f-2f01-4c06-8e10-a0c19650c494)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2B40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9099;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h081B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #404 4a91137c-d36f-4e5a-ac69-90bb1095dc94)");
unit.assert_eq16(16'h2B40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #404 37c853fa-4cab-4a60-8309-5c81298df03f)");
unit.assert_eq16(16'h9058, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #404 d9b2bfa5-0466-4734-b6f7-0dc3d429be11)");
unit.assert_eq16(16'h081B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #404 9b72141e-cb27-4bf1-8cac-6ce040b0dcd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 166c1443-c6b2-47bd-bcbd-67cdecc4c44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 663178bc-0193-4397-9433-5012a19eabbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 694970d0-d5b6-4286-bf78-ed88ef9917df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 f858ba60-4b6b-4891-833d-5d1fffda8846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 3fc6ab95-6d59-43e5-9323-e7f3c996d793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 8633e3dd-ca05-4c43-9c07-34e904d01b92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h458C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD219;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #405 6b27de9e-2a11-40aa-b3c2-6f5771ff6d6a)");
unit.assert_eq16(16'h458C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #405 7dbe4d64-b00c-4944-afbe-6cea167879dc)");
unit.assert_eq16(16'hD2A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #405 29c58967-0597-45fe-8bcd-e2f93c9a328e)");
unit.assert_eq16(16'h0A2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #405 42049bce-b890-4b20-b876-598a09ed03fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 da1007eb-2142-4601-b517-ee6407afe396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 a978fa3e-1cc5-474a-95bf-e2a15b92626b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 da679cf9-93f8-4a59-a71d-a4c58fca2550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 f255460d-0988-47cf-8243-ec04520ff9c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 3db6a24f-33cc-4de7-a2c2-d53213ef86c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 91b1cbc9-8651-4c0a-b046-dfd7319599bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h23AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8ABF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #406 0989456e-16cc-4224-b57e-049323027996)");
unit.assert_eq16(16'h23AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #406 4b813d0b-c9d1-4ef8-bd9a-133298e3cab7)");
unit.assert_eq16(16'h8AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #406 5bed3aff-d3f5-4fa3-87f4-92703e55c69c)");
unit.assert_eq16(16'h03F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #406 1565e939-a402-4138-be1f-0a42725aae53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 d6f9dcab-b14f-4ba5-99f1-b5b77c87c26d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 5c9c9196-1e39-4052-ba88-ac637c675214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 c92863aa-c29a-4742-b99f-685925536210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 9c4775a5-8a33-40c5-925e-f472b875a169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 0bf56985-e7d4-4194-9780-bd136705b5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 50f160e0-985e-47f5-b37f-613970e83473)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4E62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1BCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0863;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #407 a35327e0-bfdb-4752-ae5b-82618923dd62)");
unit.assert_eq16(16'h4E62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #407 d7e5d2e0-750e-4379-a58e-1280acac4f4e)");
unit.assert_eq16(16'h1BB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #407 0cf0eafc-862c-4bb3-a7ae-bcd6f98698f7)");
unit.assert_eq16(16'h0863, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #407 d3728464-1326-40ca-9d98-442dc0be03e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 79045c39-3917-4302-b832-a016fb40d7a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 aeb9a357-b31e-41cd-a483-cd84b04772d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 480c994b-0bf0-46f7-adb3-90aa9cf433d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 000dc45a-3ee9-4bf7-bfec-646d3c3a5541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 57b44795-5433-46b1-9b59-a5bc6b7efa1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 c5f435d5-b7b9-4815-87c9-4744aa937525)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA711;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h039B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #408 f992793f-30b1-436b-a2ba-435a281fbb6d)");
unit.assert_eq16(16'h4C82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #408 6a5c4dc3-d6ef-4c0c-a4a2-0d8d3acd9b47)");
unit.assert_eq16(16'hA749, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #408 849d82c3-77a4-4889-aef3-31782d1fcf79)");
unit.assert_eq16(16'h039B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #408 14130648-36ae-4baa-bec4-77d5c9f14239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 7f150449-1e80-4751-909a-5b7c726ff902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 cf170111-5631-40bf-a317-c8669ccfe619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 24c0ba95-e058-4c19-96ed-0fad866ad23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 7368114f-6911-41d3-867c-249ddb615b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 dbfaeae6-cc60-4048-bcaf-cd048d00e2e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 65615f62-df5b-4a93-8444-12f45ace9d2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3D74;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8252;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #409 2a16e6fc-1b13-45f7-b6d1-e0858b8418fc)");
unit.assert_eq16(16'h3D74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #409 8d98f107-6e3b-4d0e-94b7-7ddb9e2d8feb)");
unit.assert_eq16(16'h8281, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #409 0f6de3f0-e067-43f3-a82f-794f87d41864)");
unit.assert_eq16(16'h0E96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #409 69937909-34d3-4044-8ce9-932445a51ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 687362cb-6451-4dcc-b012-abb8f79cd060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 6b00b8ea-fcc1-4fe3-8649-3aab1c82a28b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 078a92a0-763a-4ac7-bc87-72cb27d10c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 3f677759-40b0-4721-b1e6-4b4ae9faef4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 eaf1b2f5-ed85-4f42-b045-2ccc14649fb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 7732bf7a-ecda-4c4e-9ff9-c07709eb2a92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3A14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0761;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #410 84d0897b-ee95-4c0a-bdae-58044a23b285)");
unit.assert_eq16(16'h3A14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #410 e28e4861-d9f5-4590-a876-22726592eb83)");
unit.assert_eq16(16'h1E95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #410 476f42a7-c5e5-4f96-91aa-aea6bf74d238)");
unit.assert_eq16(16'h0761, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #410 e3e6c607-b819-4715-ae69-8ba09e7bd55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 d4bef1b0-45ea-47bf-b237-5a21de6b8f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 fe59c326-3ae3-458e-83d3-b92c36d7815a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 c5f693ce-47c5-4d53-ba90-27b8f8fa68a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 5634196b-78d0-4624-8bbe-a4f2213ae570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 6595e808-a2b8-49cf-9507-c7cff9e09d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 7b25f44f-2a8a-4c0c-962c-90d7d2b4f614)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA36B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7FF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #411 42036ec0-6ab6-422c-af7b-c0e814b86ec1)");
unit.assert_eq16(16'hA36B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #411 04bb775f-5337-4518-a6b1-1ec1debd9c19)");
unit.assert_eq16(16'h7F4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #411 3414031f-ea33-4c8c-918f-b3268d05650e)");
unit.assert_eq16(16'h0C7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #411 2a9a28d8-8b04-4ccd-92d1-315d138fdf19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 5d46802a-14c0-440a-a48f-fdc893c8d997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 0faba693-d5a7-4e16-9908-d1a9b713fa4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 9949e730-1d77-48de-a44b-f8ac2d6c3186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 290d137d-646f-44bd-b607-74c8cc81c06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 3c204f32-b4dc-4972-a8bc-55b2729b4c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 73de6609-81fd-4343-867d-1f2c3aeedbb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD624;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6BEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h011C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #412 b570cc0e-9f07-4e4d-9d45-e612ad61f98c)");
unit.assert_eq16(16'hD624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #412 564fda61-1710-473f-8bec-880f1785a224)");
unit.assert_eq16(16'h6B42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #412 c2373d77-6232-4a8f-a07c-ebad18f0c0a2)");
unit.assert_eq16(16'h011C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #412 1cce4dfd-bf52-44a4-b5f2-5d090332d39c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 fc4d229b-443e-4974-ab5c-a924b5045d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 a25f6115-1a74-49b5-b866-8a986ad4cd8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 5913805c-7f05-43b5-8305-03f37902156b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 35c90b38-c910-4fba-8ddc-22cc9c850f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 a73258fb-bddc-443c-873e-40fe44006d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 eed88a18-6f9c-4dd3-960f-c9546405ff24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h12A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6F88;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0692;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #413 4f4a01d9-a573-4158-98be-19a5ee3153f3)");
unit.assert_eq16(16'h12A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #413 ae961f78-d3f9-4694-9d55-2c60f798dc54)");
unit.assert_eq16(16'h6F78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #413 acf7f523-dd3e-4003-9512-c496836a77ab)");
unit.assert_eq16(16'h0692, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #413 b89b3380-1397-4ca4-810c-ede0826eae03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 75859746-9815-422a-ab25-8f999d35d7cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 3389b12e-0741-491b-a0b0-cb3f2f8680f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 02ad0bb3-9d25-4fae-912b-e7eaa9db9801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 061420c0-65b9-40f3-b8c0-99e0e77cc6df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 6550eb90-548c-4752-bf43-9f9d2fe48936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 950b0a4a-4309-4a1c-8aee-a0d4f4d5c8b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h336E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3868;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #414 2ecf0f56-bb4f-4f28-872c-a60ae5af0061)");
unit.assert_eq16(16'h336E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #414 d1ea4706-80cb-464f-9826-3126a9c2f93f)");
unit.assert_eq16(16'h38E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #414 92166a9c-e737-47da-899a-450f4b3aed9a)");
unit.assert_eq16(16'h0B86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #414 65146102-8839-4b9e-9d0e-83bb4a4f61fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 cb44d052-b422-40a1-bb27-25b824d02e2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 98c5791f-a1a4-4b25-acf1-2665facc8c06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 c7b6d972-791e-4dde-b5cf-30dfd12442df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 4bcaefa2-f9ad-40d7-adb2-8b2d7875d3ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 822793d0-8115-444a-9b17-415cadc37583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 7ab761ec-0ebd-49fd-b4e1-9a1038e85cbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAB6E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0192;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #415 5b1fa850-cb37-4bf8-b761-39e0bb8d3ced)");
unit.assert_eq16(16'hAB6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #415 20270ade-c69e-45a2-a426-6bf88a4aadd6)");
unit.assert_eq16(16'h4DBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #415 d6fd94e9-344d-4f0f-8f19-ded9273f954e)");
unit.assert_eq16(16'h0192, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #415 b7c48b27-4890-4929-9f35-a8ab8d604d33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 f0b90a3d-a701-4765-b212-218237a3b8fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 6212b6d1-a593-4bd2-b70a-82d0067e5692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 dbf5a4a3-a0aa-4f2c-9c2b-561e74185322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 b77696bb-ff7b-4f2f-a951-0fa8dcd6f0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 f8ae48e5-57fa-4a0e-9fd4-7e9ad6a08a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 9a7c2d16-1af6-4b8d-b82d-8ac8464a9d7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h090A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC51F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #416 3354c23f-5802-4c8d-85cf-61d92cd398ba)");
unit.assert_eq16(16'h090A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #416 56bc1299-869e-4058-92da-c8c20f408f2c)");
unit.assert_eq16(16'hC5B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #416 31d07511-eb5a-4831-a575-2ad1b292fad0)");
unit.assert_eq16(16'h06E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #416 2aba088f-308b-40fa-bca8-a057e6f0cb8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 b240e51e-f996-4dad-af67-aaccdce6d9f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 badb4057-0821-406b-89fc-4eb6e2023963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 ffc8569c-b779-426a-a9a1-5deccd564e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 401e9a48-a5c4-4a05-a8c7-a2e1bb502ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 b0e897ed-cada-4a8c-9a20-439a0f148018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 2111515e-5bcb-498a-a801-c245d6e0a645)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA2A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0556;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #417 2b21f5d5-aa70-48ad-ad42-6547da5378a5)");
unit.assert_eq16(16'hA2A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #417 e902ac3e-63b5-4dc2-ad70-fe6cf8e75c78)");
unit.assert_eq16(16'h0C69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #417 6bfb225f-5bfe-4ff8-8846-f3cace815acc)");
unit.assert_eq16(16'h0556, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #417 d4e146b5-5fa6-4332-87b4-67c12d3f4f56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 fac6e1f7-d2fc-4f89-811d-43549cbe862f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 aaac9c98-a0ae-449d-8c9b-ed7972b12b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 7c19170b-afba-491d-9c91-d45f49c2ce8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 2140687f-15e0-4371-9aca-6e88e480d29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 1f92f4c3-d788-4d51-8cbf-f4c63d4a883f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 e2360ad8-7f4a-4482-92c3-974af4ec3897)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h980D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDD5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #418 7ef8962e-6d0b-43fd-8892-abc7a7570fd9)");
unit.assert_eq16(16'h980D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #418 80453c86-635b-4ff1-a7dd-6edd7d121daa)");
unit.assert_eq16(16'hDD9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #418 f314faa4-e0c0-40f1-955b-e865a122faac)");
unit.assert_eq16(16'h059A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #418 5b8e72ef-b3a9-494c-aaf8-19f5fc5750b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 6845060e-a66e-4f9b-b0eb-ba10c446692e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 123ba1ef-4072-4f51-bf40-0316274bb9a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 7182e406-6671-4215-8f53-3c90493c471c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 8f0343e8-eba7-4b31-b9c4-7de551b8c4b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 0d75294b-2c5c-4f3f-a4ce-6c76ddb1ade8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 005f2491-3382-4841-b777-3e6b80dde118)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7B22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h06D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #419 cf8528ad-3307-4b3b-935f-3ac1f9594030)");
unit.assert_eq16(16'h7B22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #419 b2b8ead6-4e8b-418f-9e02-e8d5980551db)");
unit.assert_eq16(16'h062E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #419 7ca16583-9976-4f35-a1ec-2de68d09899a)");
unit.assert_eq16(16'h07B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #419 22dd860c-962a-4c05-aedc-338077f9cb1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 8eca01b3-aed1-4eb5-81b4-590b80752df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 77de003c-416e-4012-994c-b8281c544bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 70e09cb2-0672-49aa-9e57-19bacaa28c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 51f5d1ed-2eda-4c43-9e54-0981ab291324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 d3419c00-5b30-4c01-a34d-bb99a73affe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 d8983f1c-4041-4451-bea0-61ebcfbc606a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h08D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h70F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #420 c5fab661-023a-4d3a-9cd1-dd3465607e25)");
unit.assert_eq16(16'h08D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #420 88685efe-d811-424b-b898-99de6c352f7b)");
unit.assert_eq16(16'h700E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #420 2bc9dd0c-05e7-4104-9aff-a853222a9703)");
unit.assert_eq16(16'h0B46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #420 f34d7587-e018-4072-bbe5-ae12001cff7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 eb8b87c8-4e14-4cf9-9433-cf1f38decb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 05d43080-0533-498d-92e3-54bdb46d7007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 acfce558-ca37-41d0-b90a-f0b7cb154fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 86f4e16c-fed4-45c6-b6ea-fde037f206b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 5ea11ce6-c290-46b5-9d86-7d0bc9d34ebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 d3261969-7880-401b-ba84-1e93c2bbaffb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB052;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h617D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #421 49544607-8fc3-4ed5-9e7b-1034b9ffe61d)");
unit.assert_eq16(16'hB052, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #421 ca236c46-3802-4308-9ad1-31a7bbae9bfe)");
unit.assert_eq16(16'h610C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #421 0a7373b9-8f4e-4760-95aa-f1692505f9bf)");
unit.assert_eq16(16'h08B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #421 2e35a5fe-5c45-4500-bff4-21bb550ea4b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 e62e24cc-4455-4473-9a9f-dc8338e29e63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 da9853cb-9b31-4f10-bb2b-62c342803249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 b0d69652-6eca-4f59-9079-4d6b41427ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 99e37df2-24a7-43bb-b514-2855a5ddf7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 a5442346-cd41-4de5-8a9d-8ba559c0be89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 955816ce-0dc4-4b20-a126-5e5e83951c62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6D79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6EEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #422 4ad82b86-e4de-478a-a665-e26b27031741)");
unit.assert_eq16(16'h6D79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #422 e3c14204-9eb9-441b-b04e-f6954d54095d)");
unit.assert_eq16(16'h6EDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #422 1f2a0a72-0fc7-47b0-9dc1-50ec369859e1)");
unit.assert_eq16(16'h00A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #422 fd8d432b-c528-410e-844b-6b4f8521f4ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 80d99fb1-112b-4f4a-a8d3-95244f9e2cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 3685f5c0-b65a-4b32-bd0e-7b52bccc82c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 941217ed-4ece-4bf7-ae3b-6af445827f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 cd631734-a18e-4d06-8d9c-97b692de84d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 30af04b6-6495-48f8-86d2-125cf0df9efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 0b70ac27-3184-4d5d-9411-07ea1ed664bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4433;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3310;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h063E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #423 354cc705-4128-4a3e-b44e-8037f4e4f8a8)");
unit.assert_eq16(16'h4433, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #423 72a77324-9a1c-4f1a-a6f0-08060a059aaa)");
unit.assert_eq16(16'h339A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #423 e1a0b8d4-8db4-4d29-9505-1544121bc4a0)");
unit.assert_eq16(16'h063E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #423 b580ffb2-6191-4eb1-8fc6-6501adfdd203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 4c5c5eb2-772c-43fc-a5cc-e26f92d270f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 1bcddbb0-4e69-4102-a82f-dd8b7265c11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 8e0e802e-e4e8-492f-ace6-d7dac6c62c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 e9a0c3e7-8453-42f2-8904-725fd922022a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 894a2e6c-599f-4e52-9f1c-487a5a256e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 ac13d11d-3f72-4cc2-9695-8844880b400d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5888;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD499;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0233;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #424 a97c20a5-b2f0-4d63-9d44-c9c7bb8e7ace)");
unit.assert_eq16(16'h5888, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #424 cbef5c96-7562-4d86-9d75-da029766a9d5)");
unit.assert_eq16(16'hD476, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #424 65e4411f-b491-402e-a454-8f755a1652f2)");
unit.assert_eq16(16'h0233, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #424 037d94b3-e061-407f-9be4-cbc53beb4ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 d6db55f8-1a83-40a6-9c18-e04f73300b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 f14d2d32-0b5a-431f-8ef4-b50f11c8eb85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 40102e7d-b687-4a03-a99b-2e362dc6b92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 deafb575-8e97-4ddc-9deb-a7eb864c5ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 af6777fe-25c8-479e-ac40-5b9fc255bfb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 2dbdc89c-972b-417f-9b46-cd32e776d31d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE00F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D33;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #425 c42f9561-378d-42f7-b39f-6e86c6fe3bfe)");
unit.assert_eq16(16'hE00F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #425 8f447122-81a3-41a2-9585-7d44dc0c8cc6)");
unit.assert_eq16(16'h3DE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #425 3b8ccad4-afd0-4ece-ac90-8a75f35e4fab)");
unit.assert_eq16(16'h03E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #425 e139f2a4-2d0c-47a3-8a5f-a345c9822045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 e7df9d8f-018d-49fc-aa0e-8075c438a205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 976af48a-a233-4f4c-af19-8916b09bd913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 eadc114a-eff9-4d2e-9003-8ca4e3009960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 2b3f84ee-14d5-4025-a63a-8cc05035e884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 5fc256e6-edb0-4d12-a176-b9cbf410ca64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 fa905f5e-d2ed-4150-b83b-a320f13a9966)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE829;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC7D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0742;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #426 66b7bd9b-5629-4e1c-84b5-3c18588be4bf)");
unit.assert_eq16(16'hE829, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #426 248ce3ad-6191-431f-8cec-2ebe9b80c7ff)");
unit.assert_eq16(16'hC788, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #426 59681fad-8940-4cbb-b095-177495f0bc6e)");
unit.assert_eq16(16'h0742, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #426 2ffa2508-ad41-491c-882b-78f52eb47d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 bf1c50f8-3f5c-4aca-9238-6a48994e4f80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 09b9c944-a593-4923-8db7-2a3e28ed7e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 4565d8b3-d1bf-48c2-b9ee-b448462ae6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 5004a1e6-e920-4732-a0bf-47d5776bb1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 6fa23e77-2b38-42e8-a774-952e69876922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 ccf0129c-069f-4df7-87d7-6fcfc313bc14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCE0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h63C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #427 6407b4b1-a7db-4995-8eed-bc040c9be4a0)");
unit.assert_eq16(16'hCE0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #427 c98c0ff2-c136-4f3d-8913-b435af7557cb)");
unit.assert_eq16(16'h6304, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #427 305c273a-1ea5-4642-affa-5ceba1dc592a)");
unit.assert_eq16(16'h0BF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #427 faa42939-be97-4e03-979b-e67527aab0c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 241033bc-608f-4d69-9966-aa670ea2611c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 411bb3e3-2551-4149-9167-4727fbc0f3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 5e458327-7c05-457d-9c98-e7a31e4ea7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 a59d51a8-be51-4cce-b54c-430fb26b0dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 4d61cf7f-4319-475c-9d39-c0f042c59b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 87accb69-fd20-4e65-b0ee-4c0daf9ea76a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h91F2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2788;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #428 7f7e6001-a8fb-404b-8f25-6a8e7019761d)");
unit.assert_eq16(16'h91F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #428 c2f7cd7e-9a27-41d6-b1c0-30602e1f2b77)");
unit.assert_eq16(16'h2749, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #428 313a5c44-cfea-4af7-ba24-24dab9bf39c0)");
unit.assert_eq16(16'h06E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #428 173607bc-2451-4264-b3ad-99d67fcfab4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 6ca7c3f2-5a41-45ab-ac40-a975fc2bdcaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 789db34a-2533-44a9-9a64-27dfb52c59bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 e8403809-5e63-48fa-a61c-0c573e143afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 4b032b01-f906-404e-8b2b-479523c931a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 446f4455-63ff-45cf-9df4-103801b868ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 530220be-a8e6-4bf9-9dfb-51e41f406453)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h140A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #429 ac8b945d-e486-48cb-b68c-356e7c9c9811)");
unit.assert_eq16(16'h9E01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #429 6e398c1e-42f6-46a5-865d-f56d716404af)");
unit.assert_eq16(16'h144A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #429 bb9468d6-60df-48ba-bc4b-1847044830a2)");
unit.assert_eq16(16'h0C98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #429 acca244a-e22a-4da2-a2d4-e78abed1a3bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 bac9416b-d731-4f35-930b-1804e6196547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 b4e28b96-fa5f-4b31-b63d-69a8840b2361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 82de88a5-6fdc-4e5d-9877-7e56555a791b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 22426c73-c03f-4de5-8d96-30292adfac47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 31899b2b-7482-44bb-bfa2-12eeb4452d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 4c15fe6f-852e-455b-a83c-280e6022fb1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD486;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #430 d1e013f8-5757-453c-92a5-98c52aa3ba4d)");
unit.assert_eq16(16'hDB78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #430 6bf46b7b-1ed1-420f-95a2-6f2b5159f69f)");
unit.assert_eq16(16'hD4C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #430 a0366082-89f3-41fc-abc4-09e6e0eeb4bd)");
unit.assert_eq16(16'h0B5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #430 e4350fb4-851b-42bd-bec7-e371c49e01d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 5f0dfed6-a5f3-4c55-8a14-e64e31564458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 66e12748-af55-40b1-9670-f42e92a95b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 dcbfc78e-941f-4dac-853f-826f6c7f11fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 05d5f6be-61cd-4318-9015-c4c2cb939bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 f09f8145-4f1f-4656-b654-50c60b554344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 370ce69f-d752-47fc-85ce-cb6f78468844)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h97FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB077;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #431 17ab3950-3436-4d8b-b28b-346b981f3b22)");
unit.assert_eq16(16'h97FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #431 14fc5e94-bae7-48f3-af09-d5475f977c66)");
unit.assert_eq16(16'hB06D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #431 7d067551-bbdc-4476-9d49-6713f3fa6319)");
unit.assert_eq16(16'h0C24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #431 fdb93023-011c-40c6-92d7-e5522d6852e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 c38a7e9d-82a3-4dca-af56-c57d79027463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 d9abcb36-10b2-4135-807e-fdf780fa2b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 3780bcad-9606-4228-a642-2ac129b2121a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 4053e107-c6cb-43e8-af6c-38b9345359a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 e2c89d11-30b8-45cb-a066-9cc250089c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 13d2cf4c-86fe-42c9-84ae-7495de0aca62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h836F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF26B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0555;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #432 3cb98d1c-5ba6-457c-a12f-171ea2c02a8c)");
unit.assert_eq16(16'h836F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #432 d4a9cc53-cff4-420b-8c72-160c7ee377a6)");
unit.assert_eq16(16'hF2B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #432 1dc9ed7f-9532-4517-9210-228711ffaf05)");
unit.assert_eq16(16'h0555, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #432 782653ad-2278-4140-91b2-245d5d4ddf6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 21c3562e-05b8-492f-93d7-61ebf9f94d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 318e2e6a-fbfe-4770-a76f-1053f473b54c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 979b1466-7ec7-4e39-8089-20b0bc88e739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 68db0b4f-5676-4508-8c31-932cf3288d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 616501a2-43cf-466c-b105-cab6ed25a091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 8d4e9d0f-5c2e-4889-b602-160826379757)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8878;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0971;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #433 80d1e028-ebbb-4562-bdcf-bcf907399890)");
unit.assert_eq16(16'h8878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #433 5951d08e-76fa-4e5f-9dc3-dfe1867eecdf)");
unit.assert_eq16(16'hAA0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #433 2967eec1-c3e5-447e-bac9-841f039ae8dd)");
unit.assert_eq16(16'h0971, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #433 35eca1d8-1d14-4ec1-8990-0ec463ae9a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 8f3aacdc-96e1-406a-bdab-fce7842cceba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 cfd642a8-0596-488b-bb9c-c7dafeb49d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 83d63b4c-1df1-48eb-9997-ea82fd982aa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 d3d3bd89-4d04-46b0-8948-a28e6594c455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 7687f492-f0e8-488a-8a05-f267a405dbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 b0097f44-f1d2-40da-90b8-d8e4bc263c67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB779;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0944;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #434 9c09c47a-ed73-4433-b5c2-02b81c62d82a)");
unit.assert_eq16(16'hB779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #434 aa33fab2-a130-4635-ac61-16627138ab8e)");
unit.assert_eq16(16'h8C9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #434 913ae614-566e-440a-ab4b-08f2259817c6)");
unit.assert_eq16(16'h0944, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #434 d67948ca-09b5-4567-aa72-2663aeb04e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 9a32bbe9-b076-4e16-a8d1-89db05326b67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 c94cff3d-7ed1-40bc-bbbd-227b178f577d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 c7cdf61f-9bef-4fa3-aa5b-263f7fa358e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 0fb02508-9cdb-4340-9166-5bad2c6aa5f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 6faf86fd-8df0-480d-b289-a1f364c6b230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 582b7e3f-3272-46dd-9ff6-62d95015a37f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEB28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h88FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0569;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #435 83bb432a-8597-492c-922c-16dd44983592)");
unit.assert_eq16(16'hEB28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #435 937cfc3d-e94c-4ce3-8eb7-08c0b0376725)");
unit.assert_eq16(16'h88C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #435 187ca53c-ccc7-41c4-982f-6541e4d91652)");
unit.assert_eq16(16'h0569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #435 cb0a96bd-ec4c-4e2d-ac5b-b1e74141a7c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 df44552e-c7e4-4ade-964a-4dc72d48c838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 6ff6e6fa-da36-43a0-b503-a9a1bfb67f48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 851654c0-a8b4-4d46-b23b-c308bad63e09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 3aae808a-fe7f-400e-81e7-82e6e85e89b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 c603e5e1-0c0d-4048-969e-bbaee85e4ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 a9647fe6-5251-4495-97a3-6adfebd7d7f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h19FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h07A5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #436 b2572215-539a-4c36-a40f-1f5964e80c74)");
unit.assert_eq16(16'h19FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #436 6f25bafa-ed50-4491-acf5-e791076015b5)");
unit.assert_eq16(16'h0740, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #436 b2c6c65c-fa36-4b9f-812c-416d591160a5)");
unit.assert_eq16(16'h0B18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #436 9aeb3c90-88b6-46b2-b76e-ca8d53d84fbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 c39d1bec-152f-4b7f-8d7b-91238d11a5b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 8013455b-3b63-41c8-bde2-ae245b94ed58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 32a09f48-5901-4b72-8733-da5b331ad339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 9ffefa6c-3a76-4347-8426-d18d2de1eed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 e9ec5664-6009-4ea3-87b5-1ff1dca6febe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 127d991a-d84d-4b21-954f-301e7279580b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h944C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #437 a9fd8249-70f4-409b-b4d0-7e840293e8d8)");
unit.assert_eq16(16'h3FDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #437 ba19852d-98e4-4071-9438-8d8cb49a04e1)");
unit.assert_eq16(16'h94BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #437 578b48ea-f2f3-4552-bf06-796d5a9a3819)");
unit.assert_eq16(16'h0C83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #437 f0995926-15d7-43aa-8e74-28cffe0f97cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 34be7211-928e-4506-813e-579512e34e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 0ffdde80-e5aa-4106-90af-9dd8e7b5cbc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 e9f1c44f-e8f3-4776-b0c4-e1aee5c4a313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 fff94373-2739-4865-bd43-b043b62cd4ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 f89ba594-f2cf-4022-bd10-7c9bf414556c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 18c05957-0fe2-4af9-ae49-db926aa279d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE54B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF342;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #438 a88fb3ea-c401-4dc7-89cd-c3e9ff9e9804)");
unit.assert_eq16(16'hE54B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #438 318017e9-54cf-4ced-aacd-c745984a7367)");
unit.assert_eq16(16'hF328, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #438 99ad6c64-b239-4cef-9d39-c3c0b14ff83a)");
unit.assert_eq16(16'h0A5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #438 f0b88b8a-06a6-4c15-ac65-ad14ae6198c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 f9595040-c069-487e-9ddb-e668a39d35ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 c1662059-1d0b-44b1-bbd5-8102f1894994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 1e7504b9-b070-4b1e-a94a-f921db41c791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 d8625baa-ec99-4c48-a5a5-18462a7ca0cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 9f2e9838-35fe-4dae-8ff1-7fecb7e1085e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 8b2d6a1a-b742-4121-af10-a709d383810d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #439 60a5bf9e-6a69-4aa0-8016-c0a4119b39d7)");
unit.assert_eq16(16'h3F39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #439 f217901c-47dd-46a8-a7ca-cffda1f7337e)");
unit.assert_eq16(16'h7FB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #439 786182f8-2036-4984-9a26-6c336cb8c485)");
unit.assert_eq16(16'h0A66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #439 feb7b685-64da-4f0e-8440-0cd43760e02b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 10402751-9ad2-4335-b1d4-8253767505a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 33d21bbe-b5df-4737-bf6c-cd42631eadd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 d8937620-a8ac-493e-a41c-7391602c693c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 52c77de5-11e8-4d46-815e-8a0d4fe65e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 3d55265e-fdb4-4ac3-b5ce-5a2b81cdc2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 282e0303-3311-433e-9bf6-c104d73f5515)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1869;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h54D3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0046;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #440 3c93795b-b8b9-4008-b1fa-cb98ce39c69c)");
unit.assert_eq16(16'h1869, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #440 f45813c6-f2e1-4768-9f7f-287ac7850b70)");
unit.assert_eq16(16'h5411, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #440 667b89bb-9323-4e82-bbfd-f0ee93dfd46f)");
unit.assert_eq16(16'h0046, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #440 866b3010-0600-4a0a-bee7-ad7af014f752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 55d2523a-1770-4ec7-a339-c90366f34c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 b5299873-9c33-4f60-ba65-41b737643aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 5e70e556-bfdd-45c2-aaea-b85968827ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 dc8bfca9-652a-48b8-8480-8ddd0d4bd532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 808406ba-126d-4744-b771-a65e892bd8d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 c71a112b-18f3-45ea-b996-6d5b718f75d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE5BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h066B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #441 b6e0dfab-6e84-4c5a-b62d-3e09e84f2172)");
unit.assert_eq16(16'h1E73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #441 6013f699-2c4d-473e-9373-093f627f0bbe)");
unit.assert_eq16(16'hE544, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #441 270a6bff-d1cb-4f21-8a79-e55fdc9dbd8f)");
unit.assert_eq16(16'h066B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #441 84e8886c-54f1-41c8-99d9-2214adb16c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 f7b72006-eacf-41b8-9bdb-11e761503830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 36f043ed-5e37-41df-8c4e-3d66cb030055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 4098eefe-f8ff-4e54-b25d-a45f9d79deef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 45ed66a7-06b1-44ad-ba05-04a2a853b9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 45cc0ffd-ea76-4e3c-8f56-955909629220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 2ea5b917-78b0-4dac-8b2b-84665c045f6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h342E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h012D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #442 0af02e44-e24a-46d5-9091-cdf8a83f0521)");
unit.assert_eq16(16'h3B90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #442 76f10a4c-d3e4-46be-b633-606d5069d5c1)");
unit.assert_eq16(16'h348E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #442 531e3938-10fa-44c8-8161-73aa0cc83ebf)");
unit.assert_eq16(16'h012D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #442 93ea599d-c503-4279-b812-6a65a526920e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 d662648e-7db7-4fc1-ae4e-b2db126215c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 5c619d79-0328-4285-bf6f-c1903aae45c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 b7d580e4-4712-462a-a645-6f2dbcfd77ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 3fff509b-3756-401e-bc95-2bcf23a652d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 7b1041d6-b5f5-4951-b86d-77d638f4a4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 be1f4b5d-7382-43ff-aefd-e8b299033759)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB0D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1CDC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #443 4b591a59-7957-4f53-9773-36b612a269c9)");
unit.assert_eq16(16'hB0D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #443 693543a8-68df-4c6d-8519-687e01fb870e)");
unit.assert_eq16(16'h1C62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #443 98a45cfe-5007-422c-bd5f-37cb47a9f455)");
unit.assert_eq16(16'h0DD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #443 600885e6-5acd-4a49-a319-66bfd834de8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 6a8e7a13-9598-45f3-b761-bd172d53ae65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 6210ba97-518b-4555-a60f-68568de85884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 ebab3e8f-c823-40cb-b8e1-b00e2025ec4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 dd045c0c-7bf6-4db6-acef-8ff07f30b60f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 b7b5b263-a64d-4b1c-928e-2261d401171b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 353ec8dc-b15b-4266-b69d-a8c57b548d3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8965;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5675;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0242;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #444 8bef82bc-5e63-468a-a5bb-f247391f3875)");
unit.assert_eq16(16'h8965, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #444 bc90bb19-e570-49b2-ab24-629c77068418)");
unit.assert_eq16(16'h56DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #444 ad14aec2-0b5b-4710-85c5-00ce53860d53)");
unit.assert_eq16(16'h0242, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #444 06be5239-9a7d-4cdd-93cb-deaccde93713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 7763cdc8-202e-4d0e-bbd9-ba657dff475b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 50f03149-3130-4b22-8395-4109926a2a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 c9622a0b-6687-4b6c-8840-015e9b185e42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 222b09ff-961f-4daa-bdd4-b107da6400d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 f6b9e53f-9df3-4335-92be-c77d7d8259ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 168a8bd8-8677-4e49-81c5-7a5af22bbd24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF746;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6445;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #445 85bd2043-2b98-4234-bd1d-62395c9046e2)");
unit.assert_eq16(16'hF746, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #445 dcf80ab6-705d-4ea1-9a92-3d0468a34b03)");
unit.assert_eq16(16'h645D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #445 2375d390-b810-45e6-b394-a3c1b7e92e01)");
unit.assert_eq16(16'h0BE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #445 43d37f85-3aec-4c9e-90f9-dc75c8e8a0a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 52379d3d-b63c-4e21-890f-eea98e009018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 4dae7c63-7bd1-4f1d-84c8-37037247db26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 a97729a0-4467-4921-8ead-c6c57eaf3ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 634da6b0-ea73-4b5f-a587-a40c30f62ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 75f24f25-61aa-4e5b-81c7-32f41ac0047b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 e0e89f25-9655-4a8a-865d-97b0ce836c19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0515;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFCB9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0896;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #446 a470408e-2baf-4f69-8d8d-46702c151349)");
unit.assert_eq16(16'h0515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #446 fdeb2e0b-a9d5-4b1b-94bd-4c091f98ecd9)");
unit.assert_eq16(16'hFCA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #446 1de5a3ed-6dea-474b-a3f3-3e8549b948bc)");
unit.assert_eq16(16'h0896, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #446 98fe3ace-0801-4720-8010-d5e61d8ceb24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 e490ad53-216d-4768-a72a-272e0eb11dcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 33998c9f-c86f-4ed4-99fc-29022991eebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 2b4f56d6-66ce-4853-8174-13199efee03f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 7508b830-bb67-48ba-be04-fd4ecaa1dd75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 57389691-1ae0-44df-8f37-f73370ceb2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 863232ab-c720-4f17-92d0-96ff1c7e6846)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h912C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC79B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #447 382c7371-b9be-4306-896e-d96efbaffcef)");
unit.assert_eq16(16'h912C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #447 67dee6d5-db53-4ffc-ae0f-a333985c253c)");
unit.assert_eq16(16'hC726, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #447 824b710a-d4ac-4b96-8af3-a8c5b6598901)");
unit.assert_eq16(16'h0729, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #447 93ca24f0-58f8-44bc-a484-877f4e5eab0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 cb7fc5d1-9bac-4620-8a20-b7fdbc37d7cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 a18034c4-8c06-481d-9a56-56f77606d418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 55b368f5-d779-4cf9-ba84-1d6353115006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 5059da91-9b09-40f7-aedc-4e7e867370fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 f26d5f03-8170-4f4a-bb09-e9f67193f234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 bdb47f2e-14d9-4cd8-b13a-fda5aed4ce0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7C25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8890;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0136;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #448 5b16f841-b28b-4d27-9e63-de612f4e8e41)");
unit.assert_eq16(16'h7C25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #448 fffa9444-0a82-471f-b3eb-1027be34996c)");
unit.assert_eq16(16'h8800, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #448 8b76be41-dc2e-43aa-9806-abe57aa54617)");
unit.assert_eq16(16'h0136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #448 d85ae2b9-175f-436b-9783-3e71fb8cc7f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 eedd1f2c-b68e-4ebb-bee9-27efb17a34b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 eb823356-d5f7-43cb-a615-e081e2922598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 06dc0586-7c65-4218-8317-76e305e3d9e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 edce225f-a7d8-4edc-bdb9-bb0e15191b42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 cd5960a9-e6ba-4b2a-83e1-8db755f6c251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 598bb452-72ab-4122-b70b-cc0d2f012d6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5574;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h464A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #449 35386b31-f7fd-40c9-86d4-41c6d77c5c69)");
unit.assert_eq16(16'h5574, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #449 9be2ca04-e0a4-4e90-af8d-ca525da22e4a)");
unit.assert_eq16(16'h466B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #449 8d5a39d7-3188-4a1e-9f08-98139b5379ef)");
unit.assert_eq16(16'h0CDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #449 e550479a-86ce-4203-892c-b7cd0ddff283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 7329e609-197b-4c78-849b-80a2af7555fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 b80ebf1c-e9cb-4cbe-99d8-c373a1b2512d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 783ffbaf-f0d7-4fe8-83f5-d83d99c37404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 3e81bfd2-91d7-4dee-9e48-4d7c07244a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 7c9d7f21-cfc5-4efe-ab27-2395dac72207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 fea19902-5aab-4e7b-82dc-95cb64ebdf7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF363;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h038F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #450 ef15884e-eaf4-49c7-a0d5-a68d4c23f1b4)");
unit.assert_eq16(16'h65E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #450 276d3ff6-521e-4af0-9e90-c575ff9bc441)");
unit.assert_eq16(16'hF3A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #450 dcd19134-2c40-449d-b7d1-b9287189f0c7)");
unit.assert_eq16(16'h038F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #450 e409f62c-6816-4015-a8bf-2d8913da0bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 7dbac886-a9e0-43a8-90a6-cce20772a1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 0cd6ab17-f32a-4c3d-ac3d-4df703708121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 1d388365-61e4-4572-932e-55f0ff7b80bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 37d6ebd8-eb72-4f1f-80ab-b39bd7afc433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 af485156-4958-444f-b7a4-83b0094b0a56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 fd975e72-15fa-44e3-aba8-91ea855e3bf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h75A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB4AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #451 80573bb7-dd09-4736-b5d1-eda98f1e6fcb)");
unit.assert_eq16(16'h75A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #451 c6f14982-b5c1-49a6-b09d-7cbb10774f2e)");
unit.assert_eq16(16'hB473, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #451 3afc5b36-0ad3-4c6a-95f1-2317ed70a6da)");
unit.assert_eq16(16'h07E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #451 3475a154-1f31-4122-968d-fac1262e39ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 bc431d18-bbca-4eca-b12a-bb2e9ed12b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 5acc13f9-f9b7-4561-b87a-4a57835d21c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 d182503f-319e-43b5-b01b-c18b2943ff8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 5b138fb5-70fc-4f56-94ae-0ebf772e6387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 dc6330a3-cb8d-46df-9fb5-c877ead4cbb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 ab45bc60-9d17-424f-8d26-6626b16988d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h21CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #452 4915abdf-74cb-4802-81ca-74c81f5d1113)");
unit.assert_eq16(16'h0F79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #452 ea7934d0-f08a-40ee-9e7f-9d94ed76352f)");
unit.assert_eq16(16'h21DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #452 733d2288-55cf-420b-b661-e73542cfabe8)");
unit.assert_eq16(16'h06DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #452 687c3543-7997-4d34-9708-4d0f8f000e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 f005c80b-9975-4968-8af8-a8f4035e34b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 40e8d141-37cf-4cb9-bc70-03d35c4b393c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 8c4794a4-c969-4c3f-852e-b407bca4f373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 bee23511-d75f-4693-920e-9b25f41dfe2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 0158d9fd-9594-4c1d-b6e5-49ac248df0aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 8a119e85-eabf-4ce7-8844-010c9cf82100)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h65D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF7F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h098F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #453 d37b199b-3547-457e-ba8c-adc4791c05a2)");
unit.assert_eq16(16'h65D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #453 fa646aec-5683-455f-997b-1fd7ebefd958)");
unit.assert_eq16(16'hF799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #453 cecd3892-0cda-4cca-b259-0bfae4e9bfb7)");
unit.assert_eq16(16'h098F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #453 410833b0-ec32-422e-8e90-867055a58945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 9630785e-0bfe-4c3c-8276-088ddaabafbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 5e82adab-9739-45e2-85f4-8682cd730420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 296c2e96-f327-4f16-b3a2-a83ec92b00e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 73e32be1-a925-4ab6-8735-fc27e3989db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 d884efa7-57f4-40a5-b19b-5439e6161415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 80328b0b-cae5-478f-be4c-dcf0bc11fc75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA3F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA758;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #454 40353296-462d-4f1d-96d3-c89b72bc8578)");
unit.assert_eq16(16'hA3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #454 9c698486-058f-482f-87d4-5dfabb5293bc)");
unit.assert_eq16(16'hA7C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #454 bc32e0e4-ad4a-4a17-a0af-5cde7eaf5457)");
unit.assert_eq16(16'h09BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #454 1b8bfa9e-b489-430e-bb81-afcd40e43fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 dd4fb44e-7e66-4b11-957c-ac821e668da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 62d4239a-d73a-4606-be5c-e6a36acc3aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 90d625b7-8304-4037-bdbb-43a4b60d0e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 9a87f04e-ba30-4d8d-9a90-5d2be7491d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 760f2259-ff61-4afc-8a26-4e57ab0175c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 ad25f833-367e-4bb4-95c6-ca9a4272e9dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h93A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #455 17e4f0c9-79d5-45f9-9557-1271a38b001a)");
unit.assert_eq16(16'h93A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #455 5c44b05c-4f7a-4d1a-825b-609ef542b30d)");
unit.assert_eq16(16'h8B67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #455 02c66774-a45c-466a-8858-a512845815a4)");
unit.assert_eq16(16'h0D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #455 c5ac0cfe-f590-4584-afc6-85e8fa3e9889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 c1cb8244-add0-4c0e-9dee-2ee4616d7ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 1e7bdf05-ddcf-4fcf-89af-02ae8ddc83aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 595635e9-efd9-41b1-bdbe-548afb149d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 e7d689bb-6449-4aea-a056-50999addad51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 bfa155a5-3dee-4d97-b4e5-0bd69df14ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 a5105d77-6835-487f-b4a6-38c082548e6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5732;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #456 b91b0ef6-88c1-4582-bc2d-a91b15fa77f3)");
unit.assert_eq16(16'h5732, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #456 56479a57-4c42-49a5-861f-1e17951c4b32)");
unit.assert_eq16(16'h62CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #456 6d7f8137-4e4d-4c95-be9f-c6bcade6e5e3)");
unit.assert_eq16(16'h0B96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #456 d2bf812d-97a2-4293-b01b-71370ff98b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 89c42609-489c-40ac-80a9-21c5a0641381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 b3fc5738-3750-4d16-bfc4-9c10a7d19b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 5f066af9-8423-4210-b94f-6a4089c2fd2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 106a7f85-9c5d-48c4-8385-d63f001eff80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 510d5e9c-248f-4197-b472-3ae9ce8307bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 36a56158-5815-491d-a0f5-ba4dd60fe1d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC333;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0872;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #457 47b8ca40-0323-4013-bbe9-3631c8dbd7b9)");
unit.assert_eq16(16'h0A83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #457 49332cb5-73d6-43ac-be7e-e11e6f9ca09f)");
unit.assert_eq16(16'hC31E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #457 89eea1bf-7bbc-49c3-918d-f976660f3d67)");
unit.assert_eq16(16'h0872, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #457 e3617e38-bdd9-4382-8274-3b3750b6ff8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 e5a719b2-2d24-4571-a49b-78998d7e3a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 f8d4c67f-c4f7-4072-a06f-ff8647cf8030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 6019caea-844f-4a21-9241-5dfa840486d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 b08ab535-7732-4b8f-a7c4-0cb902336819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 a1787fda-877d-4d5c-9a23-09c0c6a9336b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 e21cd1c0-cee9-4f2b-b4bf-ff95ed90a460)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF683;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #458 ffaf5411-a3b4-4803-ac17-77dbc15162c5)");
unit.assert_eq16(16'h5E2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #458 3292f806-556b-4726-a418-cb2ea8418a11)");
unit.assert_eq16(16'hF6A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #458 bfe718a0-c776-4e75-800f-bd36ba0ce9a4)");
unit.assert_eq16(16'h0F9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #458 efc24a7b-e6cf-481a-a9f7-eea9e1e15d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 b50916c9-e6f3-4336-b70f-0798a3d5d055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 b8e8f95d-a59f-45d3-9773-a3bc80c68fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 375e2ba1-4e0f-4a35-9a98-4540cc187312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 91a9050e-1647-4c4f-8a90-99c16d2f509b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 8a5a9324-e1c3-4850-b1d3-8e26ca10832d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 8bbb4239-acad-471c-9b99-d5d7e8d99ea5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAAF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC6E0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h068B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #459 8ee394cd-be9b-4ba9-817a-afa3cc7f009e)");
unit.assert_eq16(16'hAAF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #459 2c7944ef-76f6-4d9a-82e4-c6919ebb3248)");
unit.assert_eq16(16'hC608, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #459 24d910d1-2fad-4bda-ba87-17d4ed6c106d)");
unit.assert_eq16(16'h068B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #459 4a2534d9-ea87-482d-a387-863b65c6b577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 b15583ed-c59e-41a8-ba2b-420afec36c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 953608c3-a200-47ce-b46d-e3add1508e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 21afbb83-f3de-4ec6-ba9a-e77b310b70ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 2b2d8e8e-1f6f-4ab4-b2d0-a1550c3098d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 7171f120-8a9f-4dfc-a576-f2eea43856b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 259ac8e1-f151-4444-957e-8682714a230f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #460 0a76fecf-8e5f-44bb-8a27-d1f514d7fbab)");
unit.assert_eq16(16'h51AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #460 08906e10-3119-46d3-a686-9b8ea19c2b4a)");
unit.assert_eq16(16'h5B5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #460 14224c7e-d94a-49f2-b41d-1d8661871da8)");
unit.assert_eq16(16'h0F6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #460 33b39398-fc97-41d2-8ce7-dc12b608e253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 13ec8d40-4ad7-4717-8a4c-d7eff621143b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 900c681f-463c-4535-946f-26fa4ee4f322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 820f6f2a-3761-40f2-b2c9-4f7b4740c9f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 994fc630-6f18-48c4-9c34-2e2103408241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 139a3b12-2e48-41a5-bd31-cde4fb93ec65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 762fd000-6c01-4ab5-8cef-b5542a85ba34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD4F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h28B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #461 acef210b-e82c-4aef-b08e-1450ca2448bc)");
unit.assert_eq16(16'hD4F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #461 198e217b-17e8-473d-ba68-c7e8722f5aec)");
unit.assert_eq16(16'h2847, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #461 2d7a9cf5-e6a0-4987-9f93-d02de261d3d2)");
unit.assert_eq16(16'h0C26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #461 a06a3ab8-e862-4010-94fc-e9522f3d1d16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 47c22cd8-37f3-486f-9fa4-2fa2e841658e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 0b47a4f9-f992-40e3-939d-745a26295382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 a3d2bcdd-1199-4785-915a-9527a96c2afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 4ad0c5f9-9163-4d34-9854-af8fee749699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 e7928621-cf54-4505-91a0-cf4f9a0485ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 e0c2255d-2176-472e-8ceb-1094969ac297)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9667;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2936;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #462 d342d0a6-f834-443a-96ec-033480fcbeee)");
unit.assert_eq16(16'h9667, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #462 64342017-a755-4b09-9ce3-98aab4cd70ad)");
unit.assert_eq16(16'h2911, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #462 88759023-8972-4d7a-a8f6-47d613472c3d)");
unit.assert_eq16(16'h059E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #462 4284a7e0-fe2e-4642-b2dc-af7d1846f7b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 1396959a-f519-4ec1-9d63-150116bb13ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 e883a153-9b3d-4431-9d6e-335b530d2785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 abc68840-2091-4c22-9e49-9b3dc5f14845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 e73cd0bd-2e54-4696-a486-dce6496eecc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 1f59ea02-bb24-4768-9e7e-4affe126db04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 e700d72f-a544-42f1-a18f-a10662232671)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h492C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #463 2dba3dd5-10e1-4fe3-af74-024b8fe6c0c9)");
unit.assert_eq16(16'h96CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #463 cdf607cc-f244-4760-aede-3910de6d57ef)");
unit.assert_eq16(16'h497F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #463 540740d7-fd78-458b-8e64-1cc0c6f13021)");
unit.assert_eq16(16'h0CC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #463 a6b10078-3f74-40f7-8302-80559fe23f49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 beddd778-7818-41dd-a1b1-eba61d0bbfcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 2a40b3b2-4524-447c-bc8b-9b75bea5816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 5d7c380f-8efb-4f9a-ac8a-960b34164617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 6782bb5d-cec9-46cc-bdf9-54db34f6617a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 56d5f3f1-f867-4c02-89a7-b3647ff5eb21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 1d1aa058-e42d-4758-a682-335e54e6b85a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBACE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #464 8e1925f1-a52f-4d3a-aa94-8c413bbacf6d)");
unit.assert_eq16(16'hBACE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #464 27af50cd-9d76-4732-85be-a250cb868c59)");
unit.assert_eq16(16'h95FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #464 3298569a-23d2-479c-b23b-8760c7d37410)");
unit.assert_eq16(16'h0B14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #464 8b40ca20-5e6d-4ac5-aaff-84d05a89452a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 9ced0bd3-e17b-40cd-ad06-3cb04a9da03f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 d974e4b3-b7d1-4ebc-919e-50bcbcfd3ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 36f373da-246a-4a84-9d75-0242e7be3263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 3dba3890-ee2e-415d-bb12-3d45038dfd4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 0be89137-b661-48b3-8743-68831c00ad5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 f718fbc2-e732-492e-b3bd-c0eee170e567)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF6D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #465 9d7b2dfa-3da7-47ee-9152-1e0bbc5447fd)");
unit.assert_eq16(16'hF6D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #465 405fe4a7-7785-46d2-a653-402bddc72a0c)");
unit.assert_eq16(16'h4CA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #465 1bf320fc-41e0-47ad-9660-1000e8355086)");
unit.assert_eq16(16'h0A2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #465 4c5dfa8e-5b0b-43bb-93d9-34a3ed20b994)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 c12f5ba6-8e8b-421c-a1dc-9fdaa5dfa8cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 0c53e9e0-04a9-4614-a12a-a540d69a158e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 0d8362cb-17be-46bb-8e29-4d3528a7916f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 ddc24ab2-677a-4d03-a06c-a2b16d09068e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 3f3ee5c9-cbc7-4a66-89dd-e026b25b8c92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 022f8662-3355-46d5-8cb0-81b7c0a85347)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7841;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #466 1670826d-262c-41e6-8555-06a8ddd1b2d3)");
unit.assert_eq16(16'hBE95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #466 3529d0d3-9264-496f-81ad-4f5a72465695)");
unit.assert_eq16(16'h788A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #466 2e0a4f65-48e6-4742-aa28-3febb62da9c5)");
unit.assert_eq16(16'h0B19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #466 12db7e81-3221-4300-88ed-e5cf3859a38f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 26d08671-e2e1-40df-abe8-01b697a0880a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 1c5788d6-c302-4abb-bfff-8aee2e8e5bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 5b0f398b-5c4a-4836-b545-9540a01e0f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 dbb5bebc-ea48-48c3-9913-1aa248eb707c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 973bbe2f-f331-4b2d-9f41-b07654470a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 09712b82-9bbd-4fea-bba8-280e7bd4023d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF4C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0358;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #467 8b463e78-3e58-4277-be04-9f4f70350733)");
unit.assert_eq16(16'hF4C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #467 a01dbdbb-f768-4100-ae33-04da8b3f4e9d)");
unit.assert_eq16(16'hAD97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #467 169c2034-193f-4033-b089-f0986f2b2eee)");
unit.assert_eq16(16'h0358, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #467 b04dcf35-e85f-4771-a106-49fe4baa1fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 410c70e6-97a7-43bf-b087-20d756aaac46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 a67fc1a9-8359-4ea7-a4f1-2a5372bf4fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 89772df0-9dad-4d9a-8783-0f41f2a2cca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 40764e49-c2bc-41ad-bc40-552b568e0c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 e66a0fca-4621-48bb-8bd7-fe083c22dae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 9681e4de-4a31-4949-a40d-7982bd838f28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9202;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB01F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #468 76bae2ba-4c69-4ae9-9baf-b3e0a42b86df)");
unit.assert_eq16(16'h9202, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #468 d33faab9-2f08-4ffd-9cbf-fdcf2a7a3a0c)");
unit.assert_eq16(16'hB0A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #468 e0e6dcbd-3f2f-43b5-af39-fb90f2c657e9)");
unit.assert_eq16(16'h093D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #468 a973fe1b-6d7f-4bcd-8c67-73f8d258fee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 16c5d4e4-7e87-426b-85a1-7e38cdf81602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 ff6ecc3a-3a9b-4648-a92c-09996bf6d6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 b6269ea8-9c51-4176-a042-3d0926110bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 c35bfa5a-0327-4c03-ad90-519b22cc8e33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 34a05d6f-5ad4-406a-b009-783174769576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 921f5c24-5264-4525-8fc9-b474dbdf236d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB6CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4121;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0881;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #469 349027ac-bc44-450d-909e-97b8547aabed)");
unit.assert_eq16(16'hB6CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #469 2dbb7b52-3d7b-471e-83e5-bb8654751e7c)");
unit.assert_eq16(16'h4138, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #469 62d927f7-da3b-4dac-aece-7338fe730c0d)");
unit.assert_eq16(16'h0881, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #469 89ed0da8-510a-4c37-a313-356703101813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 7395ed4c-fc6b-463c-a46c-f1f0a3c34a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 92f31342-de1e-42ae-beee-527927efd657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 438d89bd-0635-4174-af34-2fd693025a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 866bed38-accb-493e-8c22-1ee86193f38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 f2ebd83f-1d06-4bec-be3a-67c765f881fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 1ae6167a-40a1-4d07-8f7f-c05999b18289)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h36AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6791;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #470 96258d69-6153-45c9-ae9d-545194009e26)");
unit.assert_eq16(16'h36AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #470 03f842a8-908c-417f-a5e7-56e545cc0c44)");
unit.assert_eq16(16'h6784, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #470 32115a85-8c79-40e7-9e74-3ef9d096ce22)");
unit.assert_eq16(16'h06E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #470 bd924e8a-d134-438a-a0d6-d2a03ddf7c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 bd1fc148-c498-4694-a7f2-d9693dc36510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 9de6dc89-da5d-401f-9a56-3a4299cd5300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 79ed11a3-0468-4512-8af2-832701ef61b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 0e20db2a-c33e-4f53-bb95-5e24faac4d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 51aa5d45-c8ec-4b0d-b01d-bd909aab7436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 f5e94848-d366-4c88-9580-069f5119dd22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h41B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3979;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0705;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #471 7b58815a-bcfd-4be4-8ecf-dd95033c0cd3)");
unit.assert_eq16(16'h41B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #471 6bbaab78-c8dc-4b45-81c4-b6abf64175f1)");
unit.assert_eq16(16'h395E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #471 fcec13cd-7b71-4341-81d8-133d619ce6b6)");
unit.assert_eq16(16'h0705, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #471 86de7dfc-87d2-4328-9f16-17ca0ba5fc1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 68d3d75b-6355-47c0-8cce-15a638b39c58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 f6b9dfde-413f-458e-8783-393e3a0ffbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 6534946a-5aec-42dc-9713-0fa16bfb8280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 8bb9acf7-bba2-4a77-b1b1-4b448079aefc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 c8abccb5-1b94-468d-89f3-27b5d9897f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 c67b5ff9-2629-4a2e-9829-991593026c16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB1A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE3E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #472 6216861e-5127-4c5e-8be9-e93bbcf31221)");
unit.assert_eq16(16'hB1A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #472 1b7469a5-104d-4d81-90c8-2c5e5fb42f81)");
unit.assert_eq16(16'hE387, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #472 84000014-de54-4504-91e7-0865327202a5)");
unit.assert_eq16(16'h0D42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #472 2dbc0774-4388-498d-bbfe-3c2d92856bd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 c410e63b-5738-4942-86e4-5ec619dda608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 02506299-9f85-443d-9704-49f371b381fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 e9534e0c-b7dd-466e-9593-591838a25cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 56dedf59-0d48-43e8-bbc2-fa07a0079c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 413c91f4-bb20-4d6d-8688-da8188bb725d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 a30366f0-5c74-4219-95a7-f4575408afd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h30AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE6F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #473 c7436f74-0937-40e8-8846-dd081f63b60e)");
unit.assert_eq16(16'h30AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #473 6190eb94-85aa-4bda-879b-775f117f6572)");
unit.assert_eq16(16'hE6E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #473 d93cd912-d791-457f-9390-cf81bf6649e4)");
unit.assert_eq16(16'h0D70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #473 90259e6e-60cf-481d-a152-65c0e85519b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 c60c838d-25b0-4c31-b3b8-d1a70f8672c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 824e69ed-a1f6-4de1-82ca-242fa391a394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 5c51bad3-b23c-44ad-be96-ff9b5d81eefb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 b720715f-8df1-4632-8fc1-998c737d3337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 c41103e9-ba1d-4dbc-8292-05f2b00c3883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 7a882274-0c94-4491-ba2c-b7305083c9f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #474 1dd420a4-5524-41f7-b6d9-889789b5ffc8)");
unit.assert_eq16(16'h8E9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #474 0d144109-f1f5-45e6-aec8-25f11a6b03c8)");
unit.assert_eq16(16'hC953, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #474 e1662803-08ad-44b7-b202-5bfb01827182)");
unit.assert_eq16(16'h0577, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #474 5b43fac4-b90b-47cc-a12c-fd3630caebff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 d50aa9a9-af95-456a-a469-afba61b9de20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 f2743dc7-86ee-4e08-8e58-43381fa3e9e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 989c8d35-d734-4f80-8772-7daa73061fb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 78d0337f-e5c9-427a-8879-490f4a1b45c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 075e6a90-5dc2-4477-a925-95598eccc979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 0276cd14-16cd-4a89-876e-941d97abeb61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB810;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAEED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0272;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #475 b8ee5e3b-8113-426d-ba1c-59500309d7e5)");
unit.assert_eq16(16'hB810, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #475 1ce8fc43-14a3-46cb-b1b1-e96a977e374b)");
unit.assert_eq16(16'hAE66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #475 0590236b-c63f-44bf-be80-d34ad78bf9f2)");
unit.assert_eq16(16'h0272, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #475 9e081c2d-24ee-46f7-920b-2af4ebcf5d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 b3547e3d-27df-4d18-84c5-8c8761fdc149)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 a0fe938f-b83b-44fd-a64c-e6a4cc4b2985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 a3c43305-4728-4506-9fd2-c73c5a0c836f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 0606c941-8404-4ea2-b902-9c655ebe3731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 de959b3c-cc4b-4009-aa21-3fee849c7c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 d3be6e5f-b194-4df3-9419-3ac8b491d5c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE504;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3098;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #476 0e48cd22-8cae-4065-b7e3-92c3a2e028be)");
unit.assert_eq16(16'hE504, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #476 56b58706-c7e8-41a5-b9d6-bb2d1ea9eb60)");
unit.assert_eq16(16'h3038, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #476 4aef50d5-8c2a-4856-bd75-58bc8939da7a)");
unit.assert_eq16(16'h01C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #476 2e40a2c7-a501-4346-9a1a-83508eeda773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 d113c695-8361-4c9d-a415-cf2140dd6dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 0e84cb42-93b4-4d5b-8b62-e6831f941f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 ae8f472d-75af-4246-a807-e6bdd8c2c2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 b2cfc7d1-6f93-4210-985f-54a64ff6cf69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 63d92e9d-c901-4ff3-b13d-e5b915f44a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 035e28ed-1e16-4e49-8435-6b2015cd6d58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h26C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDBC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #477 24115876-8f3a-4d4c-b30a-ca55b099e897)");
unit.assert_eq16(16'h26C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #477 674d54e7-2c7d-4f94-9693-08520e75ab64)");
unit.assert_eq16(16'hDBD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #477 fa7a0ad3-84d3-47e7-b467-31f3cf79d0bb)");
unit.assert_eq16(16'h03FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #477 8fce7f03-09e9-4c43-9588-34a5624bcb89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 91af77d5-23fb-4d52-a371-e3aed78d1454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 7b63ae47-9377-4ce8-ac11-507d6939e95b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 078f3dfe-0c55-4ee1-807d-1bd2241ec4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 9dd2c47b-aad8-4de6-9b3b-ff1803142ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 eeaaa66c-b41d-401c-b722-d3c017b22e44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 d65ae523-8fc2-4cec-94cb-69dea9552048)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC8CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE753;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h001E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #478 eb88c3e3-4be5-4c99-831c-098410104218)");
unit.assert_eq16(16'hC8CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #478 62ff44c2-c1e6-4375-ba3f-cd27fc42bfac)");
unit.assert_eq16(16'hE7F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #478 3252134a-5c47-4797-8f88-b42a08184010)");
unit.assert_eq16(16'h001E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #478 b3a4255e-a921-4895-8a5b-20d3376eebe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 64bd808e-eb55-43d5-97e3-4701af81d36a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 1ca1f325-f915-40bf-99ee-e40ca10adf32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 c902a954-97bc-4b95-869b-1e0d09944f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 1f1342e4-3d1f-4365-b695-0c8c9eb0a715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 527fef5f-2813-4540-ac6c-96f65ca765de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 afbc7b89-e629-4de4-85e9-482186d1d775)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6BE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAB11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #479 76d9f6ef-272a-4a38-bc8c-db5f6aa76b91)");
unit.assert_eq16(16'h6BE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #479 b452a933-77ea-46fd-8c83-8e3a30f402df)");
unit.assert_eq16(16'hABFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #479 9ce4bf1d-4697-4bf0-80b6-fbc108a758d4)");
unit.assert_eq16(16'h0C45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #479 4b4bb962-ed32-4532-8249-51bb76670666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 d01707ce-81de-472e-9ba2-fca09c2c7eec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 f837f7cb-13c9-4315-b3fc-ab28646bdf7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 d77c7b47-68a6-4755-ab68-f8335bcee4dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 22065fdc-e34a-4c6e-b86c-82ad76f03d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 70984a73-b03a-44dd-95a4-b2ec838cb972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 6c0c1979-9237-4999-bd5c-aece22bff513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h799D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAD28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h039B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #480 123992d0-dba0-4769-ac4e-44d3ce21ee05)");
unit.assert_eq16(16'h799D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #480 56329199-9354-4da7-9897-8b149eb55922)");
unit.assert_eq16(16'hAD49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #480 75a4a7d2-4356-40a7-9999-b44a3390d3be)");
unit.assert_eq16(16'h039B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #480 95cf5621-2e33-4a3d-8354-fc79b532eff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 aa7fd7ce-e2ee-4cec-9285-176e63168f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 17c89423-d404-4902-979a-456b6ebce952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 76bea0cf-f879-4e9b-be05-bfa2084ff063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 b634b8e6-6e8e-42fe-88d8-346bc164c9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 0809efba-5eaa-4ff8-a3be-0bb4c79a71b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 969d90ad-4458-4eb3-8d8e-67411cad455f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5239;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h398B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0235;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #481 7db2b372-1583-4fbc-8ad8-5d8ce99fa470)");
unit.assert_eq16(16'h5239, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #481 88b12360-32a5-4505-b434-f775f0ed676b)");
unit.assert_eq16(16'h3918, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #481 004b9ddf-c43b-4458-9cfa-b8ad9cf385fd)");
unit.assert_eq16(16'h0235, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #481 0ab40395-5969-4638-82a8-7a03d1ca1196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 7b39122e-cf02-41b6-9cda-e5e80bc45aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 790e55ae-f2a3-4732-9f32-71da29924416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 0d1b53c1-6a56-4a5f-af05-54d2d952b00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 d16aa0c1-efca-4754-bc2a-6ecdd5b8dee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 b2227b7e-6dd6-4afa-9bf5-eed3c3dd7a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 45846826-48ff-4007-b502-cac0075975e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4932;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0067;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #482 6d35cb5c-5585-4131-afcc-30fa8b79dde2)");
unit.assert_eq16(16'h51E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #482 5224a5d6-4209-4ffc-983d-46b794d87d04)");
unit.assert_eq16(16'h49D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #482 ab0f4d0e-5ff2-4b9e-b5c4-86537036f784)");
unit.assert_eq16(16'h0067, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #482 5cb982db-d843-45e3-af44-6bf93db58840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 6bde01d8-1372-4111-a71e-c057a0fcd148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 21bd9094-f4ac-4447-9886-cb7375da0d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 7a44c40a-69d3-4d06-ae1a-72bb1796f760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 2aab8d3d-7e2a-4b44-abe4-9494ef16e0a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 d0ac3f99-4798-476b-ab73-1124283bb8f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 06f5df05-0990-4be5-bb35-ea049d58145d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDF75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h087D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #483 1fe12ac0-a997-4a44-a182-ae297e9a3d9b)");
unit.assert_eq16(16'hDF75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #483 674d63bb-d423-4e34-9aab-4f34d22ddd6a)");
unit.assert_eq16(16'h3CE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #483 b542668d-37fd-4d58-83e8-5d0466fe8a21)");
unit.assert_eq16(16'h087D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #483 0f122691-16a3-4ce1-b02f-ea7c245a2624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 dfaac102-7247-4785-bd0b-49039c150a61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 77ce76a5-fca4-46d5-84cc-db5bd476e6c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 1b71dc27-c38d-4e41-a4a7-70d712a3a5f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 25d48754-8c8d-4f00-b6d7-a746a2460bb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 2e5f2101-987c-469f-b7fb-b6fd873e31b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 dbc5abc7-106d-45b1-bcb0-e2159e53e562)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0442;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #484 549929f8-49f2-4a7e-ae40-713846751d79)");
unit.assert_eq16(16'h9E49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #484 57bdb111-2959-44f6-b64e-f6a0c5368895)");
unit.assert_eq16(16'h04ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #484 99bdf6ad-ca2d-4374-a254-11790c092c86)");
unit.assert_eq16(16'h0A48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #484 fe1d91d9-c1f7-4021-9739-0b39e037e26e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 2128f598-35a3-4294-a039-863a08bc7cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 c0036862-9307-4b35-93f6-61987286e68a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 9d56fab1-e922-4edb-865f-5de41444c7d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 ec23eadb-8073-41c6-9fd4-97f739f7e36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 49974849-eb7d-4f36-a503-74a32d726a8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 e9952a30-41e9-4c96-8cf1-5ddc76692813)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3C12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #485 7b4669f8-e973-4250-a17b-ae584f82eeff)");
unit.assert_eq16(16'h3C12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #485 687a4527-1be6-4551-9cb9-763c2e7badf4)");
unit.assert_eq16(16'h1515, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #485 16d3ad53-4182-46b1-b644-a38032cde251)");
unit.assert_eq16(16'h0440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #485 6b96ff9a-a6aa-4bbe-af07-366cf23548ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 7940c8bc-1177-44ac-89b1-0df24c81513d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 6e78feed-3e6c-460e-b6b9-450236f53ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 59a166a4-6a62-4ccb-85b4-7be7ae2b41ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 aefd076f-0b6a-4057-bfec-8bbc9601fed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 3c089822-228d-4eff-968b-762eb39ade38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 2bf9d2d2-e4f3-4dc4-8853-1f8cb555ca16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h29C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #486 f7b13de7-5652-44ab-8720-dfc5b1ff8de8)");
unit.assert_eq16(16'h9F5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #486 55a13c1d-a117-44f2-9967-11a8b147676f)");
unit.assert_eq16(16'h29F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #486 3bf0d612-66b7-47db-83b7-e8665eca7a54)");
unit.assert_eq16(16'h03D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #486 1c952f5a-1325-49ee-b4aa-93eeb967e2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 95d1e84e-6418-4207-8cb2-1177284c4283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 8d50a859-9ab9-4b92-bf58-7999effb9051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 cd772a03-8be7-494b-ba50-68ba094e4185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 c68556c5-372a-4745-be17-ac86e89d1a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 1688eab0-b9db-4aba-8a77-f4ea152bae88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 6454bd9c-ed89-4d25-999c-277ee1511c77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9991;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h55E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #487 a4951179-c152-45fc-ab98-a7dad4071e9d)");
unit.assert_eq16(16'h9991, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #487 40631c31-1051-44fe-a7bf-b4f7b7d7a3b7)");
unit.assert_eq16(16'h5512, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #487 3014a58b-6add-4e79-91e6-a3f067457fff)");
unit.assert_eq16(16'h0ABB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #487 b3974a03-8cb9-43ac-b383-4404a8aca147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 8051d9a9-802c-4d11-8b14-b90fe04645e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 7276b4e2-3dcd-44f6-a095-abcdad5cfc76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 4ca2ac9e-af7e-464e-96c5-127117705a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 8cea6b19-9d13-4f4b-a28b-073ec6320084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 97d8c771-5f56-48b6-9b80-ec20c63f5cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 473424c1-3a7e-4942-91fe-aa7f803aa69e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1680;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #488 1df087ba-1939-4a8f-9d2d-4941704ab3d4)");
unit.assert_eq16(16'h2A31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #488 12835c37-4783-48da-bcc0-5430a60f2e6e)");
unit.assert_eq16(16'h1652, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #488 e04ba07c-77fa-48df-ac71-f2a39277d08b)");
unit.assert_eq16(16'h0BDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #488 fc42778e-b9af-4228-b0a1-b7bd6b1f5865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 08f88f08-b72c-41b0-a47d-08a779a79c5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 5ff3054b-7298-4ac7-ae02-4786a2bd29bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 ee2b4e86-e6aa-4677-b507-462334d68fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 a121e0bd-3d12-491a-a17c-0b15e43b03f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 b327a083-548b-4f72-8638-d88114e30acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 aeaade61-0865-4408-91e6-0a9476b817fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDEC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5FAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #489 0735efd0-ab67-4635-8bc2-8b1a8a06092e)");
unit.assert_eq16(16'hDEC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #489 f9b93254-91ad-401d-b866-c2252f608412)");
unit.assert_eq16(16'h5F0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #489 48234298-fa30-46d3-92f7-3c9cb7a851b1)");
unit.assert_eq16(16'h03EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #489 3c8475db-09a7-4f16-86d8-3e6c94eb8268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 9888af0f-67f7-4ea6-9699-bf44e9962c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 5d1b93c9-0c1a-4fb3-9443-e12775af8be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 61a71a7d-4684-4b4f-a011-2ee403d77435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 40bdc527-3828-45ac-bc35-1e70ed77d7a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 d9191f32-18ec-4ec6-845a-cb9ccf8de83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 0d407a7c-48b2-4f2e-8bb9-1cc958d0a452)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0144;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7B83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #490 46da4f7d-df2d-4ce0-8e84-3a293d488b22)");
unit.assert_eq16(16'h0144, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #490 de2584c9-71fe-4f09-a985-788bada517c8)");
unit.assert_eq16(16'h7BBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #490 bb192a42-73ef-4668-a440-44eac5a10e7c)");
unit.assert_eq16(16'h0BA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #490 f0d3a04c-7491-4ce7-b7ef-66abbfb4dfe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 9783780d-d05d-4000-b14a-1b671d2783f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 1540f702-386f-4346-afcc-c9abf9748761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 113d79bd-cc85-4f3d-8490-4240eeba7902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 04a49e22-29d5-4c98-8c9f-2ba4aee8bb1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 deac2878-b9e6-4124-b39a-c756b5394d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 1785449d-f9ed-4e03-82cb-9b6549cf46e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h458B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #491 ef88a26d-b47c-4b5f-9a77-0504867c8fc7)");
unit.assert_eq16(16'h51C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #491 d2ee3aff-86e2-47e6-a9f6-21dd7416770e)");
unit.assert_eq16(16'h4581, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #491 090cefcf-1662-481c-aff5-5a5df56e4b79)");
unit.assert_eq16(16'h0AA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #491 53e78181-ec25-4400-80e9-689deda2b038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 ce3f478e-d283-4cc9-9f30-30f9fc3e2120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 032d916a-7fe0-4a1f-9279-24cbf5ac0a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 69753808-7fc1-4565-a806-73aca59205a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 497828fc-3ae2-4c6b-8bd9-839a1a17d975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 4c9389cc-060c-460e-bb25-c6dcfbed5ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 1000eb37-fdd5-4a18-be58-fe03cbc14bca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h39F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h080C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h087D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #492 4b580519-a617-4c9b-952f-69370dba189f)");
unit.assert_eq16(16'h39F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #492 a2032fd8-9ee4-4552-8403-03c4c6dee725)");
unit.assert_eq16(16'h08E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #492 460c02e2-c384-42dc-bc08-e6e2b39c3709)");
unit.assert_eq16(16'h087D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #492 387df45c-8f7d-482b-9407-e389b0261712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 9eb630bf-6df7-4de5-93f9-3ba021c26a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 4013cd09-81f2-41ce-82e8-fbf3af59b9ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 be76836e-9e72-4a9f-b734-7f8596b63fca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 1eeed276-0103-42a7-965f-b47e72a29c92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 a5a74632-14d7-42cf-b600-3b1fdb01d5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 8bbe40cb-f6db-42fd-bdf7-fd10bd36d600)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD117;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3B66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #493 48cd4119-3784-4c78-9e4d-2e9326034ec0)");
unit.assert_eq16(16'hD117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #493 7a2bc146-a8ae-450e-aa1b-d83695660509)");
unit.assert_eq16(16'h3B25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #493 63f1a25f-0b24-4055-bb2a-7020bea52312)");
unit.assert_eq16(16'h0BF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #493 75ea59c2-166a-4f7f-9a34-db2164c7f8a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 c18e62a1-83f8-4824-b578-8572fdc27684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 11c6cf8e-8913-4cbe-93fb-cf0a1696bd63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 806aebb2-b074-428b-b2d9-5db96e2faec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 61de7c68-f2a3-46e2-a973-774c677cefc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 7d841737-b966-46c9-b55c-a27ab05a1014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 d828cac2-e1aa-4ff5-b426-bba3c449acaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2334;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h519C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #494 1048c403-d308-41d9-a29b-e124f26cca38)");
unit.assert_eq16(16'h2334, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #494 42d35c26-c971-4003-b158-2539ca5debba)");
unit.assert_eq16(16'h51B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #494 f952efdf-56d3-4674-85a2-734390957a6b)");
unit.assert_eq16(16'h0C77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #494 4f3ccf9e-3edc-40b2-bb52-3c4ab4bd51ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 5fb91441-e97e-4b05-bd7b-1f1b4da2f9eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 cb294b1d-9e9d-49b9-a222-f61556ffca7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 7a40d15b-1447-4185-ada8-fbacb8634744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 abf8b54b-b118-4b2d-ab9e-abed2456d606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 e5c0f784-deb9-4d03-af9c-9745180fd564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 a5629236-aff8-4890-ab5e-ec67dc677317)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h616F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #495 b4aab1f1-1f21-4457-a064-0b69b2f118d1)");
unit.assert_eq16(16'h8C90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #495 f1b011fe-9ffc-4f9d-92ba-2dd02f2dd623)");
unit.assert_eq16(16'h6136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #495 78312718-0a4d-43fd-b52e-deb113c3c902)");
unit.assert_eq16(16'h0A3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #495 404e7d69-96d8-44c9-9f33-53020dbe2a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 af547847-a0ef-49ed-bb30-b8201c0643b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 b0bb67a8-ac71-487b-b2a8-ede0857d9e1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 bd138431-db0c-4d9e-acc5-801e2ceb0904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 4b5d6320-bf9b-4bbc-a9de-dc623b60d41c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 ba4d2901-2979-4249-a63d-8c1dd10a8aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 d3094700-195e-4fed-bc1e-427a6d31661a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h74D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0000;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #496 1f9ebf2d-399d-4b90-a958-e83c21fa69a4)");
unit.assert_eq16(16'h74D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #496 28e83758-6b52-45a2-93b5-953958fad371)");
unit.assert_eq16(16'h3D9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #496 a4d3776d-9cec-4f5c-9c4f-27b4ed340d61)");
unit.assert_eq16(16'h0000, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #496 850b1060-6e62-4cdf-8135-af1e9521f377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 f91b3af1-48fa-48ff-aa63-65d80a80beea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 b21938c8-dd3b-48d1-a730-9815d2f81ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 33d5201f-e3af-4d71-a747-666ffdad0274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 7ea5e3b9-2139-4c3c-9e04-16b78a77f163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 daefe898-fcad-4cc8-93f7-71509dca94b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 c0157c2f-7488-49e0-91fc-741c833f62d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #497 ac92cc08-8b5d-42bf-8861-0da9769b933e)");
unit.assert_eq16(16'h16F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #497 f3040373-b9ae-4a23-bb70-8c1d3d005dd2)");
unit.assert_eq16(16'h1EF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #497 9d29dffd-37b7-4955-a298-2692b91c1006)");
unit.assert_eq16(16'h0B88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #497 b015cb67-046a-4ed8-b716-9887aa74104c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 a487ed0e-f648-4bdf-805b-8e1537152819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 e82a5b02-e2d2-4748-854d-a77f5ba77ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 f497eae1-22b0-4b3f-bba2-b9852dfb9a64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 163b1595-67de-4be4-82b4-17a7889c3f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 e27efba8-ab68-4949-9e8e-e432eba42aa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 73c875e5-54e2-474f-9dbb-d254654a0e48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA1F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0773;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #498 10f64c4e-c08d-411e-b798-7c72836e5ba8)");
unit.assert_eq16(16'hA1F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #498 99fb33eb-c782-4389-805a-4a92e1212553)");
unit.assert_eq16(16'hBDB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #498 23b986b1-7f49-4c07-a5ea-bfe428a931c0)");
unit.assert_eq16(16'h0773, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #498 71779bb4-b82b-41fa-abad-0d164b1a1324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 234a75d3-5a37-46f3-8b53-a87d7e05ebfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 973d3bb9-0dbe-475a-bcdd-5db2d224b4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 45f46e0e-2750-4e28-ac56-c33dc593148d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 5298f9e5-efe0-407e-a3e8-c621fabf2ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 182fa073-a07b-4356-b1f0-2e849a788b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 bb3b4024-c534-4f03-9f7f-47ef1233c6e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA46F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h580C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #499 06718653-140b-49d3-806d-cb83cf824bf4)");
unit.assert_eq16(16'hA46F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #499 f5bcaeb8-e9e9-4f3f-99f1-9f6f7e95afdf)");
unit.assert_eq16(16'h58C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #499 7a3e9c9d-b91a-43ad-bc97-83281adfd386)");
unit.assert_eq16(16'h06A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #499 3586b819-2ef1-4a6f-9dcb-f60d688fd78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 8c429e56-59a0-46a5-8e15-7cf75c6bde7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 a5b0d459-060f-4c4f-85b4-ae183f294877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 f2590a5c-36dd-437e-a63b-3dd9e1d1b589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 bdcae81d-173f-4fc7-8c24-efed43ed822c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 4a98153c-25e2-4739-8b67-91efeb49e739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 c5ad3e2e-6965-48f4-ba63-fb927203cba6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hADF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #500 2f45e9e4-f23b-45b2-ba75-3d549cc2f805)");
unit.assert_eq16(16'hDC58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #500 65b1757e-e92f-40cf-a710-3476ecb6d8fe)");
unit.assert_eq16(16'hADCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #500 59faefb0-de6c-4f12-aa0e-ecfabc1ca80f)");
unit.assert_eq16(16'h06B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #500 3c8a0ff2-f45e-4a44-9229-3749ee9bd4f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 d6f18281-0737-4ae3-8a07-a3070d1a7332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 13a585d6-d3ba-4392-be28-99c7c9cb181a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 1c5b42a6-a389-4438-addc-2fde245961f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 1eb1783e-850c-4484-9cae-564e31792156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 53277feb-f89a-415d-90cd-0b51e1ce4dd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 e4d30b6b-3736-4fa9-8545-657f927c90a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD523;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h16DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #501 e4311e4f-0bae-4c93-9a83-5ccb6901d90e)");
unit.assert_eq16(16'hD523, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #501 08c5b79d-49aa-4f9d-af64-7deb8789d085)");
unit.assert_eq16(16'h1662, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #501 280bab53-e982-4ea4-baae-aff4ac9030ad)");
unit.assert_eq16(16'h00A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #501 7b41c88f-f156-49ba-99f3-0bb9c9d643f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 e345cf6a-6a61-471a-b880-04aaa661ebd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 a37774dd-963a-41f3-b9ae-44534300d4e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 ff326a89-9c91-4ee8-b343-86f4c601e0d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 1e326d1d-08e3-4a09-aa76-934d1b1dcf08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 cbca9547-a742-4c42-9177-cf8e0a0a2662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 7abbfd0f-e933-4ba7-bf33-80d5228cbf31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA3B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #502 5d99c3ec-7f17-4e53-9b2d-4264888d4247)");
unit.assert_eq16(16'h5CDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #502 9913435a-6755-442a-b443-8372f008ffe7)");
unit.assert_eq16(16'hBAAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #502 577ae15f-ef66-42a2-9de4-9aa8fe9a8fbd)");
unit.assert_eq16(16'h0B3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #502 7dbe0220-e12e-4645-8d5d-d3782f7354ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 7f11a350-55f6-47c1-81f7-70a711915645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 0edfec1a-3cd8-42bc-a2b9-ebadcd1d6057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 0c91807f-a1fa-40d2-9a39-02c08c65af25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 c811c946-b667-4e8f-98c2-206ac7c8bcd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 4414e139-6ded-4261-ba4a-e9411f812a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 51d11adc-219a-46c4-a239-e8125b55a4ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h321B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #503 649632d2-c95d-4c6b-9c60-29c096645c5c)");
unit.assert_eq16(16'h321B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #503 1e71996c-70af-4962-bed0-b3e9329eaeea)");
unit.assert_eq16(16'hAC9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #503 f89e9f5a-6bd7-4802-a766-0e0c5c655952)");
unit.assert_eq16(16'h00D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #503 c600a176-b115-4c8a-a0fb-d0831d7b745f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 9ce218f3-5c02-48e7-b924-7b7c6d9b7adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 cb828e14-7b33-4b81-9cbd-6e216981d87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 b3d20411-6fd6-4779-a359-3a974be1fbe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 fb3c0c33-9929-497c-ba84-7a38b180f8f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 ea83314d-ec08-49db-b3f4-41634968a44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 07d492d4-71ec-473f-8c8b-6e775eb4fb1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCBAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3420;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0484;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #504 ba6da758-8a45-4cff-bd38-004174cbd5e3)");
unit.assert_eq16(16'hCBAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #504 4277aced-662c-4df4-b29e-d38b1674cac6)");
unit.assert_eq16(16'h3422, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #504 ee20aba0-a2d3-4791-9b29-d30fdc8df467)");
unit.assert_eq16(16'h0484, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #504 b8a6d5be-0e69-4649-bb76-a96a3272dc39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 23f8c1aa-f585-4f11-8c4b-e8853c0a0faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 58071ec4-c15f-419f-8b6d-68eebaf685b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 1a2f5c7e-979e-4895-b5fc-64858780a585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 1e4695de-6d9d-4d4f-8d02-c7bebda935fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 8ec5ba2b-af93-4084-90d5-affb64415fd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 cbdce813-cf93-4b1e-92f5-d73e95baf925)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9F11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BA1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #505 0b5dfe74-c3e8-4f01-9c70-43be72c5693e)");
unit.assert_eq16(16'h9F11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #505 dae60e7a-07a5-4d3e-beae-03435d059884)");
unit.assert_eq16(16'h5B6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #505 03e7ca2a-8e9c-4bf0-a185-c3690142833d)");
unit.assert_eq16(16'h05B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #505 8846d9fa-72e3-4867-bccd-8859d87c6bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 80b483a3-789a-4c1a-9a38-132ccac0c058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 05d3c78c-3f76-4526-90c5-e07b2f75cb90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 0b658eaf-e4d3-4c01-bb49-cad7a519cb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 ccd97b4d-2223-4c57-a7b0-b79a2b890e8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 11813676-c9ef-4334-874f-e5a76a1a56e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 3a11f0a9-9bbb-42ae-8d13-78fd2aa63cac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h817B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #506 07d62e42-03bc-47ee-bf59-68ab3daaf5d6)");
unit.assert_eq16(16'h817B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #506 7c1d9412-51c3-4b68-a4ca-38ec49d1e1d9)");
unit.assert_eq16(16'hD758, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #506 f5e2fbae-57b9-4998-b9ef-83d8d6ca37fe)");
unit.assert_eq16(16'h02D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #506 8547a101-0072-4738-bbfc-043218c3f2f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 fcbe9e6d-3a59-4791-a0c1-afb98aa49850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 87e31713-c766-4bde-9963-fc9467eaae94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 0c1082ac-80cf-4a21-8dbf-54cee49176f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 46c0bff2-76f8-449b-a81e-9a37efd9aab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 3f379762-63b3-4400-84fa-da3032b8cb2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 fc36b170-9ce2-4cd5-8043-b1491c13e58c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h39F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #507 00547cd7-aa35-4954-9c7f-60b3691c960b)");
unit.assert_eq16(16'h39F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #507 7e03f8c7-8ff1-43cb-a2f9-5548f9b80b18)");
unit.assert_eq16(16'h0F4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #507 303c43d7-8776-4125-b85f-990572d43d0b)");
unit.assert_eq16(16'h0F0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #507 a468ce7a-94f6-4c1b-9c1e-23a7f4b24605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 c77b5c0c-e0d0-436b-98b6-a7fb66dfd014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 5f182ce0-a5e6-4d50-9d8c-24985069573d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 d08bb9f0-e719-43c7-93c7-37b486ef0b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 38bf46fd-9bfe-4bd7-acb1-65303a87d940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 fb1b2f04-0b73-4259-a851-bf15442f40b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 73377e77-e93c-4ff6-b1ea-3a8215ec5103)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE433;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDAE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0043;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #508 b73cfcad-ea3b-424f-af7b-f16d3dcac5eb)");
unit.assert_eq16(16'hE433, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #508 667ac911-69f3-45a8-b1f6-784af56e485e)");
unit.assert_eq16(16'hDAAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #508 b4226597-7925-4843-b6d5-a4902cba4430)");
unit.assert_eq16(16'h0043, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #508 d92a4a5b-9318-4c1a-914d-143500da0f90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 19a35003-a2b2-4a6d-8823-688c739b3cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 f861ec64-455e-4437-94a0-3eb8b8be2767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 bbea1e0a-94cc-4d08-ba36-1a56fba26307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 cfb907e9-2df7-4bde-a1e3-8864af96f962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 bcb6169e-593d-4ae6-8ee8-6437093789f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 d3ee4795-c233-4154-8e3f-3249b3d0d71f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9B06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3847;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #509 c7655d9a-e61c-48fb-9d9a-8b7086df1d8b)");
unit.assert_eq16(16'h9B06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #509 266b9887-aa9a-4ff1-a027-d6eb097d65c7)");
unit.assert_eq16(16'h38C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #509 544e8a8b-b0f5-45af-a2b0-4708ed787bcf)");
unit.assert_eq16(16'h0D4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #509 e42c67ba-b8be-444b-80ef-c9f57868c925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 bcd536b0-380e-4d07-bf1e-e93a5aeb3a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 36c4f458-443a-40d2-b011-e0f378ccca62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 c0f98691-c032-4a3f-9f88-784e9156e0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 231f1505-bd7f-45ec-89ee-a7a294465e7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 cb100d6f-029b-4ff6-bf88-f57f5475dada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 016ecd8d-e560-46e5-9bd9-116e84d925ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h643C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2648;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #510 77421c2d-03a2-41be-8492-6b737b09ffe3)");
unit.assert_eq16(16'h643C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #510 cb381338-e183-4b5a-a700-e999deca5db4)");
unit.assert_eq16(16'h26A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #510 c6671ea5-7135-4219-9665-aba2ce0624e3)");
unit.assert_eq16(16'h05BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #510 fe0b0d22-3a6a-41b5-83ce-7851cfd1134e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 e6471be5-83be-4fb7-b402-240e9dd196e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 d5d6ff6f-50b7-4385-91ec-a1751ba6f890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 73b41813-13ed-4945-97fd-36db75fdd42e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 2498f8f4-bdbe-43bc-9c6f-a5784e83e52e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 f80a4c42-5ca2-42a8-a4ef-1d8d68e77c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 0302f3fb-1217-4c56-9a00-3a372dddc212)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE303;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #511 fb732a6d-8e30-4f71-b501-c4434b634037)");
unit.assert_eq16(16'h16C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #511 d355da91-a77f-4759-bfe0-1a3947958d9c)");
unit.assert_eq16(16'hE3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #511 517bce11-3331-4a10-b34b-03752cc37b6b)");
unit.assert_eq16(16'h0D95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #511 20ce2e2c-a5e2-4718-a7ea-8bcb6fdc83b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 54f638da-0ee7-4a12-8ea4-e33eee00e1a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 e6669a59-9352-42dd-98c2-65c9d182a199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 d7b8fc48-b9ae-4572-bc97-2080a8714aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 a1aea9a9-fadb-4c45-9b84-82b50e40974d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 af8f9ac9-8f6d-4c73-98bb-3f0697a942eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 33ba51f5-f74c-43b9-be19-c3e7f66b2cb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA28B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #512 f80ef6e3-1de8-419f-8f34-6bb19b0e22ac)");
unit.assert_eq16(16'hBD03, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #512 4d68efdc-3316-43a1-a403-98cf74eb8a06)");
unit.assert_eq16(16'hA28B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #512 23d2f1c1-995c-448d-af21-2781a1ea955f)");
unit.assert_eq16(16'hE7C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #512 ce781bb1-da8b-4155-8167-07a9fd4fcb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 e12d9418-5bb2-48cc-9ef0-4d78fd2226af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 0b9dfb9d-2392-4458-9df3-492be29e6364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 833e6270-8d3d-4949-ab93-4cb89478df0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 5afe5bb4-cf97-460d-b972-ef8fdafb598c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 704fe477-7c79-432e-8273-fa582826f304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 1e2a9bf9-bd09-4cf7-ada0-ff8c0865f4e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9201;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h541F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #513 95ca9967-27f0-425d-861a-784f1829f3f9)");
unit.assert_eq16(16'h9201, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #513 077af912-ca85-4adf-9dd5-d4173c2d890c)");
unit.assert_eq16(16'h541F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #513 0cb9536c-5f1d-4093-8f57-eb2166c81a46)");
unit.assert_eq16(16'h89FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #513 a5bd4e24-02fd-4592-ae90-bfb842b349db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 f052d3c4-b3cb-4af2-a039-9c562046bfca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 7fb144b8-dbf4-4900-b234-9ee199de426b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 1b71e930-4ddc-4452-8e8d-391f2690819e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 269eadc1-380f-40a1-bda9-e714135e8f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 018b4ba5-0871-489b-8338-b39c0d25adbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 415908db-1b98-4e32-b2fc-5f522d0b35da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h32F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0681;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h033D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #514 223b9cbd-73cb-4391-b37e-576e04fa0e69)");
unit.assert_eq16(16'h32F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #514 5dac15e4-6e67-47db-9e63-03b5926e833f)");
unit.assert_eq16(16'h0681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #514 b8c4e6e6-b930-49f1-89fd-86797fa5d403)");
unit.assert_eq16(16'hB63D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #514 a03096d6-2df0-42b1-9745-24b1d2661916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 be0f6045-0f49-451e-8f51-fa2792b2c603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 6fa01dc7-a9f3-477a-82d9-89207372a700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 ab8cb549-f6c1-44e9-be83-0b8a50f864c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 06333c7a-ada7-4c57-a105-007f11356228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 a9eaa707-5098-4385-8e97-025bab35f14d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 7b1862e9-c87f-491a-975a-7f6a0b84a4da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96B2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h050B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #515 6b2fb8af-5fc7-44ba-bc05-8ee3484c8b59)");
unit.assert_eq16(16'h96B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #515 ac2c1ae4-98cd-446e-9492-eb6823029760)");
unit.assert_eq16(16'h050B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #515 3abe4a52-e253-42e6-9fc0-17dd7e8116f4)");
unit.assert_eq16(16'h50B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #515 9081b4c2-d685-4f15-992f-ebf75be5a91b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 c761ff15-a254-4764-93f2-ccb92704dc67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 5fb279ee-c652-4242-b5c0-af187b1fdc9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 fd48b590-cfe5-46a7-9cd6-38a9dfc200ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 7363a764-84b2-4a68-b1bc-d35c65ef3ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 cd3b87d8-c601-4be3-b99f-99f64c3bc105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 edbce74c-3b87-4707-9797-635b04882a08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB819;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0216;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #516 441ca6ee-b39c-42bf-8614-b9f292d396dd)");
unit.assert_eq16(16'hB819, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #516 05e5205d-62f6-4915-9c3e-6c2c17dc3815)");
unit.assert_eq16(16'h73F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #516 3cffa581-2c9e-485a-bfe4-bcd474e42062)");
unit.assert_eq16(16'hD616, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #516 12ba95f8-88bc-4d9b-b391-34d3a396389f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 42806713-28b8-4a76-a784-bdd3738140e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 28e0b957-103c-485b-8a90-f2636d89a89d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 5d3d6770-9768-493f-b3a7-d38593e44358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 d58c3526-cfb8-4361-a5f9-404f08285c1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 ced38345-a73d-4a1a-a933-f6d6cc028c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 63ec2b05-a0b9-45b0-b103-f80cd715792d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9EC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h14D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0328;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #517 dc584277-7f35-46c6-a7bc-e9cbf81d56d2)");
unit.assert_eq16(16'h9EC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #517 85d67f6a-933a-4348-a520-e75cc36ff2e3)");
unit.assert_eq16(16'h14D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #517 7202ee38-5628-4f3d-858a-cb31cb93a53b)");
unit.assert_eq16(16'hEB28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #517 bac92c1d-23ba-4f59-84b8-92d34b841431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 12da597c-d305-4043-82ac-37c6f7f1e9b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 fdef450d-03b1-4a28-bcf3-4698e16d9306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 2279d952-6292-40f2-b6d4-21390bce177d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 2261cc4b-8802-4370-9c4c-d3d1ba2b3594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 adf38575-a78a-4c59-915f-f27cda61493b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 7a4185ba-eda7-4e4e-90bb-95db2e1a3665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h053F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF4E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #518 444fab75-b109-4c42-8636-0b4d48925486)");
unit.assert_eq16(16'h053F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #518 249164e4-6459-4a82-b868-1275e8899edc)");
unit.assert_eq16(16'hCF4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #518 ab99e76b-b104-41d4-b83e-e1ca6e537493)");
unit.assert_eq16(16'hFEBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #518 923b5b85-683c-4130-bda1-9a37d279cfcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 1d9e3de0-0526-46d5-92e9-d240d8653de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 0e64183b-d270-4e2f-9afd-fe634fda2d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 443672ff-7eef-438a-a368-b0436a1e5a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 560e0346-ac7d-45b8-8f74-e1ca1ad9da91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 ca01e35f-b354-4c81-ae69-0d5f1979d901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 d9b94f90-99a8-4d9c-afa8-37bdc7e6565d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E99;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h80E6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0112;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #519 2abb938b-443f-4757-80ea-6ba8455daa0b)");
unit.assert_eq16(16'h5E99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #519 7a7a486b-09ce-425a-bc83-87a940022f0d)");
unit.assert_eq16(16'h80E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #519 bf53c359-0961-4ef1-b491-d4a0aed11492)");
unit.assert_eq16(16'hF212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #519 b82407e8-b548-4c63-a012-db8a196621c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 9c8a0eb7-45a1-4508-ba71-3827acc633b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 6627d990-8182-4efb-aebe-190ddec03867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 869db098-6596-4f04-a884-aa5aeb1ff4c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 21adc0c8-a5ce-4562-b55d-5c8e716ac4a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 9780dd7b-cef6-457d-a48a-50ae5cd1b288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 9d160b0e-6337-4af2-a278-66f37062d9cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8DFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h040B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #520 5d7b94f1-7847-41fc-acfe-f563501ac368)");
unit.assert_eq16(16'h8DFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #520 4162d7bf-8c35-4930-ab6d-a920321dbf61)");
unit.assert_eq16(16'h5E7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #520 d74f442f-f761-4eda-b2b7-38f467a3c9f0)");
unit.assert_eq16(16'hDB0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #520 16cf6bdc-0777-4b3c-9b4e-f96f8018162c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 ff04aa24-9d23-4b44-aa23-e29661bf6081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 47123fca-e40f-4761-bbce-ee31f89425fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 842393f1-4bcd-42d8-ab19-fa99c961a3aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 c0642703-383f-4374-938f-07bea9b0e0d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 ef91d159-aece-4486-ac62-792b50204dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 52aa6fc2-69b1-4923-94e8-9bab473d4aab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0316;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF975;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #521 bf1b90d1-bf05-4564-bc48-7e4a17278f14)");
unit.assert_eq16(16'h0316, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #521 e2b5891e-748f-4cd8-852d-5a8e51fc4519)");
unit.assert_eq16(16'hF975, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #521 cd2b4d4e-50e5-4579-a378-b9457a9df215)");
unit.assert_eq16(16'hFC27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #521 51770c53-ca04-49be-b68e-5143c7199773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 66324661-9531-4ff7-bc11-8dbc3d4a7463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 cc9f8d2a-d8cd-4d5b-bb96-a102e6a4446d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 9d01777f-b547-4d26-bd16-f815dfad2028)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 e767a1b9-dd9d-4b1b-9ac9-ec5363598f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 e785fb59-05e0-45f0-8e43-e9e5fae9bb2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 d0175a96-b788-4c31-8dad-0c82555bcff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA696;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4BD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #522 a789bd27-47fa-4376-ab9d-607aae65843f)");
unit.assert_eq16(16'hA696, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #522 db99dbb2-aa0a-4ed2-b0c9-c17eeedacba4)");
unit.assert_eq16(16'hD4BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #522 e3a6a8da-7080-4d77-8a0e-792e5799dd60)");
unit.assert_eq16(16'hFE3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #522 dcf24fe3-c32e-4848-85cd-9d8b30ffc423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 0ddaebc7-e02a-4c38-914d-ed1d7c6ef593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 9aa982af-4f2a-4559-805c-ad0293960463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 75302db3-d85f-43d2-8faa-9263a3a80883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 826646db-4ada-4e4f-b362-9a11bc026970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 3053527a-5a57-47c6-9e00-94bd1449aa02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 a59cffb8-599d-4368-a13d-4554a883209a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEADF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAAD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #523 d9b26492-6bf6-4d55-ba58-3a7de32d531f)");
unit.assert_eq16(16'hEADF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #523 8a2cb458-b91e-46e6-9940-5845f1726dc7)");
unit.assert_eq16(16'hAAD7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #523 ccb5d5c8-d09d-41b5-95cf-0d5723217e2a)");
unit.assert_eq16(16'hB2D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #523 6400dbc7-2bca-4b92-ac4b-86deed093fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 41d5f314-9c4b-4564-a0a6-5147b7fcd4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 40d64189-518b-4c36-90ee-24cd52b72dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 1c0a5091-4ab2-4485-918a-d561939aa484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 a6d4cc58-83bb-4b2b-bf8b-14916615e373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 c1fff2a7-566b-471b-8dd3-286491229085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 8ee258a2-1b96-4221-8b0e-ec4ea3987600)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h87C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4801;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #524 d470b7ef-a245-4b9b-bc8d-d9bbd2bbceee)");
unit.assert_eq16(16'h87C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #524 9834a035-a8ed-4f70-a4c3-c77aba6b4870)");
unit.assert_eq16(16'h4801, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #524 3d63b985-2294-404b-b03d-903be05a6243)");
unit.assert_eq16(16'h4726, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #524 c3126263-6756-440b-8eae-ac8151c34bff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 4891a55e-09d8-4773-9073-f05dc10d09e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 92baeba0-54f5-4713-96e9-6b666a01455a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 327fa0ce-4725-4dbf-b024-7deb47deaf7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 f6f5f899-1c29-4cc7-b7b7-2027ea4603d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 839add90-b2d0-4f6e-acce-cc4ad8692319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 2feeecc3-e54b-471b-9b0b-ed1bc4522c6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF7A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4217;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #525 aa4f776c-6998-4ab2-9b82-95619c1f612d)");
unit.assert_eq16(16'hF7A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #525 b937f4da-0426-4d09-a049-6cbfdc360bc1)");
unit.assert_eq16(16'h4217, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #525 e5711192-8d42-4072-abda-ab55db3ba398)");
unit.assert_eq16(16'h84E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #525 b13eb632-4758-49ee-91f2-570dd3fce45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 9061e71a-0cb2-4520-8b60-b45450d0ea3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 413df16c-5a9b-4e09-bae4-5048fd5a634f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 98cad700-9081-48b2-b04d-d9f96ea9016f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 7c4d1c52-3454-4c13-b933-a01293c2e928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 dcb08157-0a24-45d3-a892-1dc9ce48ca65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 381fb829-e61c-4e37-bc79-3499e4fd999f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6F9A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB053;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #526 030563d8-417d-4c4a-8b40-27e0f5ce9a93)");
unit.assert_eq16(16'h6F9A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #526 dde3b2f0-0efd-44aa-9199-9720f707df38)");
unit.assert_eq16(16'hB053, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #526 dea3f2ba-a067-44c3-b762-325fe76b1aed)");
unit.assert_eq16(16'h5B08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #526 26c83a87-2636-4cf4-90c1-44cf5e0a6950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 5dd52e44-7eaf-43b9-84c6-e74b9abf6105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 0a78883d-f589-4419-84ac-0b61062c5eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 90622a0a-9f07-4a43-8258-211d9c1b9a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 ba9084f4-e46e-491e-aa13-35f97e8571af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 df438bf5-8fae-4697-81b1-9cfc63558f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 bfeee0d0-0381-4471-a62b-540022ceb0a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8CC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCD20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #527 c1ebc4e8-ad97-4f5e-a760-ac95581b3a49)");
unit.assert_eq16(16'h8CC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #527 c3d3b2e8-3781-4fd7-aefb-a61964c8d7ad)");
unit.assert_eq16(16'hCD20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #527 ed0e3d58-a982-49cd-8c53-16b5e01afd70)");
unit.assert_eq16(16'h4D7F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #527 3645ec33-af4b-4636-adea-ea82bc322460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 58ed08b3-c653-42cf-8f01-83ac25dcea35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 be5b9da5-edde-4cf8-a876-c34039dde941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 216d8d1d-c0db-417c-98e6-7ac40df96140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 b5e28fb8-893b-4782-bd3f-7df30ec547d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 6c6bf564-1ec2-45b0-afd3-21b7302bbf6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 eb781af6-1508-4b92-abf2-badd56e5f541)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5CDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE7AE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #528 d7a5cb36-e99d-4d19-a638-5009aa26acc9)");
unit.assert_eq16(16'h5CDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #528 a1053d46-a3f9-4210-8905-50f0c7841001)");
unit.assert_eq16(16'hE7AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #528 fcc6fd39-b093-4cad-8e84-564a4888f701)");
unit.assert_eq16(16'hB3E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #528 5f53971e-40a3-4a96-b5ee-915809128ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 450dcdb0-4b3d-4e8e-85fc-4ac4291d499d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 11575bdd-7a0e-4b7b-b5a7-4b016d8ebadb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 f6faaf68-c541-44a3-8bd8-6c333adb4cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 be8740ec-c96b-4ba9-b15e-e3606da288f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 03391d09-b769-4a7e-b25f-644b4324545e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 df87d8b7-0e69-4970-a944-1dd7989f4023)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0F3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h003F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #529 1d124864-e232-4656-8e8a-edbe28078ed8)");
unit.assert_eq16(16'h0F3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #529 9bd1b68a-339d-4e46-978c-0b82c9544331)");
unit.assert_eq16(16'hE0FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #529 1f5908bb-6081-4b39-a50b-76f1e2fd8eae)");
unit.assert_eq16(16'hD03F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #529 d5748717-5c21-4db7-9b8f-f5483895fdb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 62f7c8cf-1059-45a9-bef7-69a1227633fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 13974e59-731b-45b4-8157-dea13456f948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 d6759d7c-c334-4fbe-87e0-eebafe082b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 aa101730-45dd-4c3d-9a47-db663ddbf658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 413fe600-c736-4ac6-b788-5ab392345f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 902c0d75-964a-45f4-8487-25c80aca2ff1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFDA8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h632C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0ADE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #530 2ee58e58-ede1-4528-8cee-1623e37c549f)");
unit.assert_eq16(16'hFDA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #530 3a133a10-3938-424f-a9c4-78a32f5d3587)");
unit.assert_eq16(16'h632C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #530 be55629b-fa7c-4ec5-836a-4a433c0522cc)");
unit.assert_eq16(16'h41DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #530 69bc131b-8826-4081-8bc5-5e6f798bfccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 bb6cedfc-9400-432d-8833-ff8a920b2fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 919d9f7e-0968-45f5-a3ed-f002e8b63682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 7a6a8911-dc20-4fc1-b67c-0fb5bb3d5c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 9220505f-dcdb-43d0-8bd5-f40ca39618c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 fefb8b5c-93a3-4990-9e65-bd1cb1165e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 19610de6-39c9-4b04-9e2d-ca32423e59da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h427C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD0B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #531 ed13b587-bbc6-42b0-9f30-a15f63ac8d43)");
unit.assert_eq16(16'h427C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #531 2a855845-9752-45f8-95f0-814ac80a1271)");
unit.assert_eq16(16'hD0B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #531 660e1476-f1eb-4359-9c36-9b35a4cc3f29)");
unit.assert_eq16(16'hF1AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #531 ebbe8d21-e6f0-461b-89e3-a3e309ea3fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 263c3306-1ece-4633-9e0e-512d6e62bc66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 c9e60095-e2ec-454b-8448-018b873138c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 aba05fd8-fa52-4e1e-b5f2-1e3126834ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 604f4301-b29c-49c6-bff8-0f0b5d460571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 5de9851a-97ff-44bd-9629-9cc29d0d1f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 94c7764a-325b-4fdf-932e-e880886f0635)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6647;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h35A9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #532 9fe86156-bf16-4133-b7e5-2e87e35780c2)");
unit.assert_eq16(16'h6647, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #532 0a803463-13a4-4958-a2de-da4d89798cb6)");
unit.assert_eq16(16'h35A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #532 b4b8f3d3-6d2a-4025-a7be-85607d4fe38c)");
unit.assert_eq16(16'h7401, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #532 092526b5-03e2-4503-b17f-f39a5daea70c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 a6320f08-9e24-4e86-82a5-d1267b3c9576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 af9bcb86-1dde-445e-ab59-54480db31a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 c3b68a40-a2ae-452c-b476-1c4012a1e668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 ee9f03cd-2f18-4782-962d-cd8e2d2a5526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 ef910c0f-3854-43c5-8c6f-d07cf89b1f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 823d1602-76ef-4a14-8c32-ea03e947d12b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h66C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h71FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0585;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #533 e7084b70-bad0-4d6d-aa69-e5753a9263f3)");
unit.assert_eq16(16'h66C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #533 e5e4023e-f98b-4d92-9f57-17d7ab2116af)");
unit.assert_eq16(16'h71FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #533 3dd451a6-f6a7-4271-8896-31b1a8943b10)");
unit.assert_eq16(16'hCD85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #533 0c5f6fe2-c3b0-44c8-9832-e6d5d3bf7b2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 c5cb3fcb-fb1a-4961-bab7-e32c0372a9e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 4592e33a-0483-4b67-864e-6e074b3c6778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 f96ae5b1-ba76-4c3c-a20b-5fe441e09dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 d28622e3-1d6e-4284-a057-aa54298e31da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 53f03b00-f6b2-4f36-8ca5-a63c71345b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 b2edfe0c-d941-437f-a44a-c3889223cf18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #534 c9538924-a9d3-4153-b524-c97d831878de)");
unit.assert_eq16(16'hDB62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #534 dcea04dc-3176-4c4c-b671-1b8487d1d115)");
unit.assert_eq16(16'h7C1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #534 c613762e-3a1a-4217-b3d6-f4b062916668)");
unit.assert_eq16(16'h3811, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #534 ad220ef3-cb04-4410-8dee-d904fe97dacf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 79369426-aa65-4bd1-bf6a-1cf5b451d5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 98a61249-ef16-41de-8a45-a441189dbde1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 18d0c986-3a11-4282-81b8-16122f71ed85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 d534ed3b-9bcc-476d-8ec7-057069ddba5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 0cb81e5b-1fb6-4255-956d-8b91cab53a6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 02029413-4f44-4ac2-8037-12e688987ae0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h487C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD579;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #535 0285216f-9132-414a-9786-b2101d7b4bd3)");
unit.assert_eq16(16'h487C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #535 cbc57def-c1bd-4ad9-a606-0f1a92784e54)");
unit.assert_eq16(16'hD579, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #535 95759e1d-b799-46fd-a46e-acf392fef76e)");
unit.assert_eq16(16'h22F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #535 0b7189aa-cdec-4afc-9c35-72ede1809f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 74da79c4-a5c8-41ba-bc4c-7fc593442f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 5d8aa91b-001c-4e21-8664-79e24b0472f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 9a834c72-f479-48f1-af46-1ca36042f621)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 d1fc5376-8997-4d1c-a3ee-9d96aecd4400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 bd187fb5-7fa1-4cbd-8df4-06f050b6762d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 c6085ffc-719f-4395-8f45-f80ec291a0d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB94F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0222;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0265;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #536 22cc1c1d-d40f-4e29-b8dd-4527539fc784)");
unit.assert_eq16(16'hB94F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #536 3c7506ec-099e-4b2f-b76c-9783cff9070c)");
unit.assert_eq16(16'h0222, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #536 fd7d89ce-e84f-4558-b480-4dff92df7a1d)");
unit.assert_eq16(16'h8465, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #536 34bd0206-1b3b-4700-bb92-6436a92b3db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 4d06e245-1a69-48a3-bc63-3be8cd8cfdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 4cb22aee-0318-4be8-8162-277609ce9254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 0bf2e0e2-834b-4eb3-950e-871556383618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 cbfdda60-f073-44f5-8a2d-17cbe5cf5f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 6b9461d7-5381-46f6-a206-94385ba5e0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 63e119d5-7746-4dcb-9fc5-9cdb05040901)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA767;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD72B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0435;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #537 3201998e-6bc7-46d4-b1db-9a1e6e31be3c)");
unit.assert_eq16(16'hA767, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #537 573373af-927c-4414-b5cf-6a4caa8a278c)");
unit.assert_eq16(16'hD72B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #537 9646c960-d0cb-4a18-8c98-350a1e9273c0)");
unit.assert_eq16(16'h6135, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #537 f00d7485-01c6-429a-9b6d-cb53ed3f27cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 837fa8db-5587-46e4-9c01-133a5848e7b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 b42dd0cf-2309-498a-924e-4b603dc5814c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 4e42774c-9f01-41aa-8b35-2898217d5f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 16dc8f04-4110-4402-9833-7dbeee83b301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 db9367ec-bde5-46cb-a74d-4f239e71d756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 bfabad35-d272-45d8-a4d0-4cd996937706)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAC8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h792D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #538 08c8efeb-8c92-48ea-9e8d-b8d7fed30209)");
unit.assert_eq16(16'hAC8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #538 a201c945-8837-4572-b2cb-10aadf23038c)");
unit.assert_eq16(16'h792D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #538 4301e57f-a4cb-4a94-ba0d-d29d84f371dd)");
unit.assert_eq16(16'h26EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #538 78a19b90-445c-4775-9ae1-f1642fcf565c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 60f5fee4-d241-4d4e-a0fc-41016b8d1a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 b773ddbb-b737-41af-b0a8-fdc39e68a1c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 42f261a0-0040-469f-991f-3f7d8fd21914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 fddac38a-88b0-4f53-8220-a965daf5a862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 e30e3eda-34d1-410f-9dea-713b8b057ef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 94fb439a-89bb-4337-ba57-5cac054924ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5AFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE275;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0869;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #539 20bab8e0-c147-4425-b390-b7a5a861cb86)");
unit.assert_eq16(16'h5AFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #539 996e884c-34bb-4eec-9510-9c12f9e16b9f)");
unit.assert_eq16(16'hE275, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #539 88e298b2-5d11-48b1-bc11-aa69b0d4d238)");
unit.assert_eq16(16'hF269, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #539 3e72fc88-c8d4-499e-93e8-16cf4a20b34b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 bc45d643-5520-468c-bea2-0397a182f627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 da30049a-21ac-4585-bd2b-86292ec5a2c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 ae24eae0-c647-4a1f-9694-5499955ecadb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 23067aca-b603-4d42-885f-df72d6bae47f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 a883ec33-e3b8-4168-82c5-69e12c7fbacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 66aea64d-76ec-4cee-98a8-577825b61c8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h50F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9B98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #540 01ca6075-bfd3-4239-8aea-ba646d2fb815)");
unit.assert_eq16(16'h50F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #540 2822dd81-246d-4b14-b99e-408a51a34c96)");
unit.assert_eq16(16'h9B98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #540 83ec5601-b502-42c3-8281-567df0b02e33)");
unit.assert_eq16(16'hBADD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #540 d47b77a2-1f9f-471f-94a1-2e58a89ec368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 38052c6a-1d3f-4e6c-8ffe-c3104de61eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 eca98da2-20a8-4956-a60a-90e0e75ed331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 243df5e7-5eec-41e6-a7fb-1795b21469d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 49345b8d-9a0d-43e0-97ca-772c279d3e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 9ce7b4c1-1ec0-4186-9950-2e43aa148a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 53f8406d-179d-43b2-ac54-3a21ec401792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h22F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE83D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0235;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #541 8af45687-2aea-4908-a333-af4fdf735696)");
unit.assert_eq16(16'h22F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #541 a9625b75-823d-4c6a-98c5-186ae513685d)");
unit.assert_eq16(16'hE83D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #541 549f773e-d101-410d-b37d-a8cf6db1d720)");
unit.assert_eq16(16'h1835, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #541 7ee0f062-a3dd-4b4b-81eb-b5255fe5b937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 2c52bc63-05b5-43d5-8a8e-b0916ff63ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 5a8dd3f0-b0da-4f21-b161-ff474af4d752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 204f0c3c-d05b-4d16-ad0b-1a67da2dc92d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 33cc400e-3c88-44cb-bb9d-649027b286b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 f28cb61f-fca0-4ba1-93f7-e9b17b82e32f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 a8ec36d3-c5f6-49f3-b42a-76c1383900bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF73E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0D2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #542 61422ada-ed91-4982-a275-8f3237c7a9d3)");
unit.assert_eq16(16'hF73E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #542 e975ba71-08fd-4fb5-a702-e3ccbf875e1d)");
unit.assert_eq16(16'hB0D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #542 49747caa-353a-4977-b868-3f613669d441)");
unit.assert_eq16(16'h8E2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #542 65a73544-554f-410f-a7e1-c113f003600c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 f234156e-2376-4a8d-a7ff-fe37837d1c0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 fc109069-5221-4930-9b60-243eb3e2d0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 94d8e3d6-6d97-4a8a-a71f-5c1609f4f9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 ea741064-9316-44c6-a841-a7152ba3f36b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 4381d90a-f298-49b8-b2a1-e4931d1c7651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 afbc379e-5c96-432f-a6a6-7dcabae52958)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC1A8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #543 f287c578-7ede-4cc9-bc53-06931b8c6584)");
unit.assert_eq16(16'h2C57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #543 cb804835-7c3d-4a9a-9af0-9d244cfd1abf)");
unit.assert_eq16(16'hC1A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #543 e3e6f9ef-c0c2-4220-9262-a5fb49b9e165)");
unit.assert_eq16(16'h8C11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #543 be642771-30c1-4c04-aa66-b057404c51a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 bbf89944-7364-45aa-a705-25b329351c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 c6fa7b96-7267-4ea5-8de2-8b9715b04674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 67702ac0-665b-4f85-a543-142907d6d4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 bc7a0874-e5e5-4ff3-a3fe-9fc46c4e59a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 83c00b4a-f661-4f6c-abb7-45b3e041ba10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 d613c5b3-fb30-443b-aabd-ab34f34d0734)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2104;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #544 c25a9f07-6128-4e94-be2e-5f1fc8fe2e11)");
unit.assert_eq16(16'h2104, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #544 81fc4db9-daac-45aa-88bf-f1ce560bb4bb)");
unit.assert_eq16(16'h6B3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #544 55b0a954-2576-430d-a58d-cb3bd0893f8f)");
unit.assert_eq16(16'h7D14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #544 6e5b9f61-a884-46db-aa74-7f29d0d3c0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 1c6c2200-8d53-42b1-92aa-048de5c6f70b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 be9be1f5-b9ec-4524-82aa-57b7955a6bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 88c4bb7e-648f-4813-bc93-66e5481f6331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 f52dd977-78ca-4b49-af00-0e74a5713b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 92f9191b-51ea-4494-b666-0283244c587a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 e1009ff4-2dd1-4cf1-bd10-54b2c17b3b25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hECFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h508F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h001B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #545 1fdae511-65ca-4ba8-aa50-ad167e9e44ff)");
unit.assert_eq16(16'hECFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #545 c9157b3c-45b5-4fb2-a0ad-bc6db38e430b)");
unit.assert_eq16(16'h508F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #545 43eead23-2f94-49c4-9583-483d3de835ec)");
unit.assert_eq16(16'h1B1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #545 9d15ebf2-b2da-45bd-938d-cd5f3f21de99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 3e04b3f0-e06d-4ede-9f91-580a824f9a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 89407245-84d5-47d8-bc7b-850db66d28d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 59addd03-939b-496a-985d-389b5fbb414d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 557e39cb-3c8e-4ad5-924d-56ac5635e8ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 00fb2a16-d7e7-46e7-87e0-f234e4125051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 822cec51-ae63-4167-8ec0-5789d48a8d4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF4AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7096;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #546 9ecc4141-57f6-4672-8a02-343fdd9995c0)");
unit.assert_eq16(16'hF4AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #546 a04a940f-8f5e-4711-9309-583d1aa19794)");
unit.assert_eq16(16'h7096, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #546 93bd49fa-54cd-4906-af68-bdc8b03ce7b0)");
unit.assert_eq16(16'hB401, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #546 a67550c7-8328-46a6-a9c8-a09c8b643df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 4e22f11c-a710-42f4-a229-d909af5a7bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 42c66e22-e068-478f-9cf1-713b60c8dc2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 4753aadd-6449-49a3-b725-c515a20af457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 3ab88747-83d0-4fd8-b01b-12f5fe4a50a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 e949d345-1d90-432e-ad1d-88de547ddb4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 9e3c460c-8724-4f6b-b2f0-c7725b1b67ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD9F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA813;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0809;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #547 65d368ce-11dd-4b65-be28-0f9872f2eeed)");
unit.assert_eq16(16'hD9F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #547 15b0021c-cac9-4562-b468-f930d6ddba74)");
unit.assert_eq16(16'hA813, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #547 da0edb9a-73e5-498e-bc36-00ce53dd56ee)");
unit.assert_eq16(16'h7009, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #547 4136a6e2-fbeb-4405-91f4-3e9483a5ca98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 fd17ba91-9d3d-4069-87a7-38f11ee1f588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 b34b6577-ab4b-4e96-ad91-b65ec225f6f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 f02e8d36-58f6-4722-9f55-a8ce6d5f22ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 8bb6b8e5-22ed-403c-9b56-e2bba3046a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 9f07f457-98b8-4d1e-9c69-23c0d2427295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 dca96ce2-4b8d-4771-ad68-e9257f629fcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD854;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5FCE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #548 23f593a8-771f-447c-ab8c-ffcb29d1feb2)");
unit.assert_eq16(16'hD854, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #548 8c863d3c-7026-44c7-8775-3911343a18f0)");
unit.assert_eq16(16'h5FCE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #548 16bbc8e8-5ca1-465a-bda4-75af7ca88b44)");
unit.assert_eq16(16'hF097, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #548 f0715599-a0d8-4a97-9a86-480e18bb2cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 016b9fa0-60be-40c7-847d-60157cc6afb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 ce1e7968-3585-47ef-9b00-e55c8004185f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 e61bd8df-226c-4092-b247-da294fba4536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 48dae9ff-cc8b-4883-bcc5-67aa9ee13395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 e0181846-6e88-41fe-b807-86a793c5e35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 cf1b98aa-a68b-4269-a3fd-37092f850392)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD4CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h31C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0757;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #549 070e3efc-f78f-4cb2-8531-123450c31663)");
unit.assert_eq16(16'hD4CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #549 4cc61a76-1490-46f8-8c2c-45ae75d7891e)");
unit.assert_eq16(16'h31C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #549 ee52b08c-70f8-4907-9ef2-75a2e07fd859)");
unit.assert_eq16(16'h6257, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #549 88697139-0069-4e60-8f23-37162aece268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 efb3c8ee-0b42-4ecd-9dc2-deaccff052fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 d63617ca-3dfb-421d-bbe3-638d0eae6581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 2cd14794-dc58-4df4-b4ce-2478b3eba6d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 f76a1cc0-34a8-4626-95da-4a6ebae659bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 e6ac2bd6-75cf-4d58-b9c5-3a0cd4ac6cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 14bf34d8-1a80-4eda-83c7-1357c11d3573)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5908;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC72D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #550 fb0a6c72-e97d-4306-b904-f9397aa87bf2)");
unit.assert_eq16(16'h5908, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #550 f6f9fdac-07e6-4b41-b48e-d33e65f193ec)");
unit.assert_eq16(16'hC72D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #550 1f14558b-a747-485c-a1a7-18e8e6496346)");
unit.assert_eq16(16'hEEFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #550 4eeb5059-36aa-45cc-9627-67e6fdced5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 f28cacc9-f511-4d8e-8eda-84c72e36a041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 476be9e6-f336-49f2-bc42-9eef70192d26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 2f605aa2-557e-4f23-9ca6-65489683586d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 a7916b84-bda6-46e0-b7ac-9ad304fdce72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 9720c2c2-13e0-48b6-833b-d159f3f78eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 0a0082ea-bb76-43f1-a859-1a361d79757a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDBE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h402B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #551 73a23a6d-6cd5-4429-b937-12796df70ca7)");
unit.assert_eq16(16'hDBE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #551 65845ada-4a50-462e-b3e0-65f332c6a7a1)");
unit.assert_eq16(16'h402B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #551 00c6dee2-f6bc-4dca-aa96-fb37f04413dc)");
unit.assert_eq16(16'hCBD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #551 16d98d69-d0ae-400a-8bd5-6a9a484650c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 229ca7c2-a77d-44bf-a626-4104ef23f0cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 696eaea9-baa7-4a2e-81fb-f18b5aed3b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 e9bcb4b0-303e-4b8a-906a-8e37254096c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 671a5feb-ecdc-4df7-92bb-13c07aa945e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 5f56274b-cd67-4397-bbdb-06ed38f136e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 e09b8037-bc18-4465-a718-433f90944fa1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC3C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4FEE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #552 1dba2ebf-c5fa-44f1-8c6a-8331139af44b)");
unit.assert_eq16(16'hC3C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #552 8ef3de5a-4533-4709-b17c-d0d8ce618759)");
unit.assert_eq16(16'h4FEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #552 9dede62e-26f8-4298-9e3b-ccb5756e584e)");
unit.assert_eq16(16'h63FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #552 f8834285-01a0-4d2c-8aa4-6ac80da5c658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 3e4de8e1-17e9-431e-a608-0bd521cc7b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 7b71d5ed-de0d-4e57-8e59-2079cb859621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 ff699825-4acc-4d61-98e0-2a412f43650b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 0fe81be9-4d55-456a-a7a7-ed0427265f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 6c0b0226-47c1-4c82-b780-452d94d660b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 07359a56-b445-4ffc-b207-0fa8c178be0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h404C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD7F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #553 99a4f432-af75-4303-9f62-62d3affc7a0e)");
unit.assert_eq16(16'h404C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #553 315651be-2883-4895-b078-9be3e204411a)");
unit.assert_eq16(16'hD7F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #553 4802e76b-bbec-4370-9b3e-dee343b56212)");
unit.assert_eq16(16'hFFF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #553 0227e881-23a6-4686-ab40-56cb8872f699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 fdad6787-338d-4ca4-b040-d7b91b54e01f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 faca1bde-9a3b-4a88-b1ca-4a55632ebaef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 61c262c8-5826-4e0f-8bf4-6170af9ed8f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 dd6cd7b8-7146-4eac-9c39-6abebcdbbd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 fcb8b821-019a-497e-a734-d88116c34a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 9c1b131e-aa37-4925-9ed7-9229719c84da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFD57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA038;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #554 9fc6ef5a-0eb5-48fd-a922-a71df3797b4c)");
unit.assert_eq16(16'hFD57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #554 61f61ce4-e5e9-4881-9fae-677817afbaee)");
unit.assert_eq16(16'hA038, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #554 8a3a937f-11dc-492b-b68b-3d6711a64e79)");
unit.assert_eq16(16'h1945, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #554 318daecb-1b6c-4dfd-8661-6f04ff968975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 61870061-aa9b-4cde-ad2a-07e2aec01276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 9354c82e-f351-46a0-ad7b-406fee12a53e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 81fdfd8b-2a13-44c1-b384-8c96d7ae0af0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 e8704bf9-a0c3-4a11-8dd5-976d8e3fba00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 a0dbd718-1ed9-43fa-9d27-a4e8e6f5070d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 936e9d35-aafd-45e3-a2f0-71ef7d7d6acf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h869B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0013;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #555 4c00d8de-409a-4086-9489-b3e31bc6de0f)");
unit.assert_eq16(16'hDB02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #555 5bad2f8c-0af6-4b7f-a490-40f0657d2073)");
unit.assert_eq16(16'h869B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #555 17fda01f-c495-4c83-86b0-c0b6f4a55bf7)");
unit.assert_eq16(16'hED13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #555 a88101ba-5349-47e3-9739-1d6453e64abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 fc1c39a8-8d96-4cae-8951-2876c66b42bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 a9e0d087-1d0c-4de1-aa85-37cfda4a170a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 1d4465a5-06d4-4d29-be6d-014d8e744e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 ad041720-e45c-4aba-87a1-38ab4ec86d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 bad41040-1d22-4845-a605-6688af479525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 a0285e08-935b-4ce0-a1c1-56abd76034a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h859E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3663;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #556 129faad9-4220-4796-94db-ed23c537012b)");
unit.assert_eq16(16'h859E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #556 a456726b-1283-46fc-912c-1e6f3c27c0a8)");
unit.assert_eq16(16'h3663, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #556 866d5f40-f6db-4568-9a1e-4d88fd207963)");
unit.assert_eq16(16'h7012, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #556 26088a1c-5192-4afc-a3aa-b794cde1fe86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 f385c7cc-c630-42bc-acb4-d8b2c755161a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 179d0b26-28fa-4ca1-915e-c65ffa29e548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 5d247589-7b01-4ce7-877b-5e57fb5b95c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 64e69e93-0f51-422e-bc4e-d6164e9287c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 d402f8c5-f172-4077-bc6e-664a4f368552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 7b9329f7-c31c-47ef-9b60-9d0370f05254)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBCDD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h79DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #557 dbfbd4ba-7191-449e-bb96-346e5dca2299)");
unit.assert_eq16(16'hBCDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #557 fea85ebd-ebdb-4c4a-bbff-2855f5441d7c)");
unit.assert_eq16(16'h79DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #557 88dc72d8-2800-40e8-912c-d28ed3d2e8c2)");
unit.assert_eq16(16'hC1ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #557 bb45b672-8553-4bd4-b7a8-5efd5e37af2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 88b2a14f-faf5-4a9d-a10c-f2d264066fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 d585ecb5-a177-4b08-b311-9429fb7b5598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 aaf9e01c-96fa-446d-94f7-313cccaa1071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 eaf83929-9f8d-4d5e-9f53-48744284f2ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 5c0d9712-3cd1-4897-a35e-1080c12db161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 056567d9-72b3-4e03-a114-f99c7e5081b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h83E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF3CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h099D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #558 94423545-6b83-4eac-b6d1-3a19ee756c2b)");
unit.assert_eq16(16'h83E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #558 09c24b60-99c7-40d0-b363-540d78a51927)");
unit.assert_eq16(16'hF3CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #558 ee42a1fb-2408-4f85-974d-12a568226223)");
unit.assert_eq16(16'h449D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #558 c57e4a4a-fdf6-48c6-9f52-d27d98389b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 4be5ca25-9ba1-43ce-81ef-87b3cd047cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 cef3b835-2a37-4816-a942-3d33dd0eeee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 e0649aef-f6c6-4b46-ae48-60aaf64ad3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 a84dce32-99f4-4178-bcaa-fb5b09166ef2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 a4ef2744-2b2d-4b3d-9610-7b9d6c084f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 26f32666-c544-4ac5-bd85-8a064b720429)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6006;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h921E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #559 6b7c181e-8045-4251-bbe2-a50b1ce133c7)");
unit.assert_eq16(16'h6006, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #559 5819561e-a96d-44db-bebe-30a8aee80989)");
unit.assert_eq16(16'h921E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #559 3382a91f-3f3d-4610-bbf4-7e0d064cf6bc)");
unit.assert_eq16(16'h8E3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #559 b8ec888a-e06b-4c40-84f2-2d4408df5b9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 478fec0d-e733-4f9e-8799-2440cdc19ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 d89517e9-1586-4b80-8fdb-547ce9f9eeed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 74df69c7-10ce-4a18-8e35-7f3a948dc9a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 ccfd2444-6dfa-4286-8320-78ff90263614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 3c9affe0-9268-44a1-a6c2-45b719a99a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 0df4fd9a-4c62-47cf-bf84-76afed3cdd68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6503;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h473F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0494;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #560 867ed21d-0642-413a-bf5f-48611cfcd0fe)");
unit.assert_eq16(16'h6503, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #560 7b6f689f-900d-4562-af90-6fed6ea9f699)");
unit.assert_eq16(16'h473F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #560 4b06af65-50f7-4521-b3e1-2ac2200c3780)");
unit.assert_eq16(16'h4694, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #560 ed8dfa09-9bca-4073-905b-deaff96bf2fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 a2b4b850-47eb-4db6-ad1c-06e8b6596438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 8dbc2a10-f15d-466c-be1a-93abcc90f1d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 3edeecc5-6090-4f94-ab49-b9cf79dcbf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 71dc9014-6c49-4eee-958c-96bd97353eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 6f327e59-c50e-4f94-bc53-5bdd2d1f37e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 5e0204e4-2c81-45a2-9e42-2abbad02fc8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0885;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB09D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #561 169bed01-ccdc-48bd-9699-73889cdeec6d)");
unit.assert_eq16(16'h0885, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #561 5e1ed6bd-5309-4f41-9813-fc9730777bd5)");
unit.assert_eq16(16'hB09D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #561 cd0852b2-848e-45fc-b23d-9c46db4e052c)");
unit.assert_eq16(16'h2EC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #561 ce69dadc-dae1-4437-8392-50204fcc544e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 78d950e6-d57d-4be7-b925-ba8cd54ffd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 97b19482-0d83-42d9-b41a-34a1b1e6419c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 a6cabf83-84a2-4a4a-adbd-3171c18a3840)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 0edd9665-672e-42c6-afd7-30f03d3444ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 d49e54b0-9ac8-41b7-84cc-5e2a8c42d659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 f4d437a6-9b9d-4c64-861f-c8cd5a7a16a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9DF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h338E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #562 aaa77077-8741-4084-a28e-81e32a478c0d)");
unit.assert_eq16(16'h9DF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #562 965383dc-dc36-4046-accf-b67fe1987e05)");
unit.assert_eq16(16'h338E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #562 14eda5c8-2f6b-4f5a-9f28-a05e3a4004a9)");
unit.assert_eq16(16'h2FB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #562 50446638-105c-40fb-9589-b85e78077cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 70c2b993-9534-46ae-97e5-1e55bbe6143f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 013d643e-5527-4e93-aa60-ac582e2d97c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 280d1ac8-3f69-4633-b089-4efef75d70b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 96e47f6d-9db7-4e42-82fd-265c21579171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 fd4d10d6-188d-4531-9a6c-6eda8c22d94e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 94d310a4-6f8e-45f2-8a73-551deff7f500)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FEC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #563 02474362-7e61-4ac5-87e4-ae2d5f5861f0)");
unit.assert_eq16(16'h9FEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #563 844ec7be-461f-4279-b75d-26793863a21e)");
unit.assert_eq16(16'hCE13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #563 5762467c-3a9b-4feb-8dd8-270321eb63c1)");
unit.assert_eq16(16'h9FF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #563 449cf200-96d3-4bb3-8921-8622577a2a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 bfc4020d-627e-47fd-9473-a1974dfcdbef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 062806cd-56ed-40d3-8990-f6a64630803f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 9a5a376a-6ea3-4e64-a91b-64e120de51d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 d2e885a9-f495-4079-9b41-5c89d6742421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 3e8a3b11-f9ba-45b0-b525-ac206bff47bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 ca226bc1-64e1-4fde-a59d-a2c80438bc3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCF45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5620;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #564 a7ac080e-f62c-44e2-a169-fec674b3acd3)");
unit.assert_eq16(16'hCF45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #564 3c11d144-ec0b-43ea-95e8-f3ee69e424f7)");
unit.assert_eq16(16'h5620, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #564 97a55bef-dfd2-4449-b972-092a0e95c412)");
unit.assert_eq16(16'hF799, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #564 f5becc69-55ba-4837-a916-0a785024d563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 22d4f9eb-f771-48dd-a10e-3dcb56ec32cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 920f1ff4-13ed-46a4-ba49-2f4dd82339bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 dfd79092-6f6c-4135-9b23-4051d7c7d16d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 a906de87-d294-4cbd-af71-a524c03ea658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 542103ae-0290-4faf-8a2c-bcf5d5c77a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 82fc3084-ece9-4cdf-9f36-bddfa2f4d394)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE9D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD68C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h054C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #565 10c96ca1-6f38-41b0-a2f5-2548a8195c8c)");
unit.assert_eq16(16'hE9D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #565 78de7a9b-576a-4d13-bef5-1c649dfa3e7e)");
unit.assert_eq16(16'hD68C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #565 89608168-3fad-49c1-90f7-c72616123d30)");
unit.assert_eq16(16'h9D4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #565 dfb387bf-4f47-4a68-a0c0-49509084b6c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 46ecea5c-d690-4f79-ad23-664e2c0f0c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 f5be9543-e588-4fb9-9727-6d000892f2b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 9d2c67e2-2371-4ab1-9b82-700a817ca376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 44d16f93-a782-42d2-ba89-304cbbc5b7cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 55dccca6-3da7-4b40-b8e8-a587eaee9586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 53181d84-53e0-4a4e-8455-372f47629144)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC110;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h547B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h029E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #566 15123cc3-51af-4d5b-ab29-13ad795e3ddd)");
unit.assert_eq16(16'hC110, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #566 a9ac9fa0-1e0b-4946-afe7-661a1f167c2d)");
unit.assert_eq16(16'h547B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #566 af08cee0-bfcc-4316-b757-7efc6e37d009)");
unit.assert_eq16(16'hFE9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #566 8e856f8b-8caf-4885-97fe-bb63a4fb4369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 b830589d-7222-4057-af92-be07c464f536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 c417b75a-3c43-4f67-bb42-051ef0f5be89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 dd1ef482-4cb8-4ff8-99ab-ad85b304556d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 b965b24b-29d2-48d8-a5c0-f782112592e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 36d8da7a-840c-4da4-96c8-962e2b423d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 74c15e28-9224-4a73-90bf-e3e3b540fd15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h911F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #567 31eacca8-0a5e-45fa-8920-719344125504)");
unit.assert_eq16(16'h1A5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #567 346877c6-2305-46d4-a25a-06d2a117ba0a)");
unit.assert_eq16(16'h911F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #567 7c5b7cad-5a79-41ed-b8e6-9bac050f9bf0)");
unit.assert_eq16(16'hC779, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #567 d08182f5-5feb-4ad5-a5ea-f90c585d6285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 9e1a00a6-3447-401c-bcf8-84f591c164b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 dd9206fe-ee74-40da-ac1a-6ce0c0a2218e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 269100ea-86af-49ab-a9c2-5f6631d5c6f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 391084f4-c84a-4bb2-9d06-d81ed759b9a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 dfef822b-a9e9-459b-9064-6194bcbb7e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 6c2f1456-366e-495d-a532-8c227687f8ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0640;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h177C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #568 6c1398de-edf9-4aba-b936-cab210ae9f6c)");
unit.assert_eq16(16'h0640, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #568 381b676c-5d12-4ea4-8e10-397e55ef11fc)");
unit.assert_eq16(16'h177C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #568 ef73f4c7-0487-4d09-b1d0-1861d68a5e9b)");
unit.assert_eq16(16'h431C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #568 56ff132d-b255-47ed-ad1b-9f789af72f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 b67911a4-94d8-43ba-9cff-6c3524d19d48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 e4afe56d-592a-42ce-86bb-89779e55d24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 420e0c95-4aa4-4748-8a69-d76b1c5c8fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 d59914c7-f78b-4e2b-a761-0971edf8b929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 3372b41d-84e2-47f8-9fd0-93ee8de6dcff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 6689f1b4-0843-46f3-94cf-e3f48a1cf683)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h718F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB229;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #569 903e1997-805b-4538-b5bf-128b400fdd67)");
unit.assert_eq16(16'h718F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #569 fda993d9-ca5e-4ac4-b997-88821d47a404)");
unit.assert_eq16(16'hB229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #569 190dfe67-fda6-438c-9029-cf0821a99969)");
unit.assert_eq16(16'h86D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #569 4d2e56e0-c08e-44e7-8a81-d701dcf86f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 707febf6-631d-4605-8d46-f19889613396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 fb1ffbce-9d83-4999-bea4-d08e7661ae69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 025c8a11-daf3-49d3-8328-fdff921bbf63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 752a9dc6-05db-4b70-9b76-3cb8c48fe37d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 f633908c-d84b-4e2d-9a34-b27f2acdb6ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 b69bf3be-e905-42e0-a3ba-7d9c8903e143)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA29B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB906;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #570 4163f2c5-602c-4a1a-8444-4d4675321b51)");
unit.assert_eq16(16'hA29B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #570 045227bb-cc63-44e9-90b0-ee0a771de8f3)");
unit.assert_eq16(16'hB906, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #570 f90d45bd-3cad-4c29-a3b0-54fc868cb714)");
unit.assert_eq16(16'h1B5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #570 6db27676-f5c4-4b9c-8fce-2bf2324cbadc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 a6e3d221-a079-43c7-ba5e-0cc7bbbc7261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 17253db5-84c0-4959-b9ac-71692ce82814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 44e3f0d3-3261-4186-9cc5-b3dfea350b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 52318bf9-92b4-4129-9438-d63615f9a91b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 d53f09b8-0330-48cf-87cd-a6be6aea1507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 d1dbed12-35a7-4dfa-b57c-13ad60ff1c53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAE3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h73DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h032A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #571 45da14f5-8616-4016-a0f1-7511df086c06)");
unit.assert_eq16(16'hAE3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #571 d68c1f5e-e1d1-4a45-9e07-dd531608a7f1)");
unit.assert_eq16(16'h73DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #571 2784e99b-81f9-4e5d-ba23-3474cab2d90a)");
unit.assert_eq16(16'h632A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #571 4d8e0dba-def9-446d-b0e7-1453777cf8b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 054cfaf5-9336-4b0f-8277-6186cc4cfa54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 23717edf-2eaa-44ce-b10e-3d8c825720d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 71a61f9e-88b4-437a-b01a-e23453139891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 d7bcfa21-7d07-4d8b-b614-fa64a064364b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 61a6925b-d4ba-404d-88d0-81f7f8e18502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 69626ee8-d3c8-46fc-8569-28040fbea0c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF775;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h46DB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0161;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #572 e75aded2-85fc-4729-8203-7833fb66d2c0)");
unit.assert_eq16(16'hF775, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #572 7b5129ae-c1fa-471c-b99d-5fe23028e286)");
unit.assert_eq16(16'h46DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #572 eddb2037-c03b-479e-a2b0-b6df5d45a81d)");
unit.assert_eq16(16'hDE61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #572 08eb65d3-b716-4c28-b57d-5569479a2997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 be82ceef-acf0-4c9b-a399-7a6a57b4292a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 bca641ef-6f41-4826-8811-a175c84afedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 c3fa5a0b-9987-4a05-8360-c1af8722c74b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 7a88a4ad-f44b-4911-946d-29f10d6539c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 26f5c591-aacf-4743-80f0-f9adbd0f4d10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 83c64642-fb84-44ee-a1b8-4b5bc77672d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h539B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h192B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #573 a3665750-3c88-48d7-b7b0-7d5ab2ba6b33)");
unit.assert_eq16(16'h539B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #573 6f4217c6-559a-4092-9b4d-5108a80fb77a)");
unit.assert_eq16(16'h192B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #573 c78a591c-c562-4535-adfe-2c9d93dbb88e)");
unit.assert_eq16(16'h5F10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #573 a5f7ebdb-460b-4b85-9baa-3cc2ec85eb07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 1fd61dd7-566d-4333-aa24-647b8939ca0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 6eea0d8e-39eb-45e0-b6ad-d372b2a84e3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 c436693c-367c-47aa-8847-4e86cee14a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 704f9785-2581-42d6-94e3-e560da30d935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 7e47a048-7241-4ee2-9ea4-cd3e633e27d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 234c764d-fe09-4215-9309-6fecaf9a4686)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFD56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #574 7454b95f-cf14-4082-99cf-b34887f966a2)");
unit.assert_eq16(16'h51CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #574 c8981203-aa3d-4418-8048-79defca1efb4)");
unit.assert_eq16(16'hFD56, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #574 172d25da-f7af-468c-bfe8-ed795fa38133)");
unit.assert_eq16(16'h189B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #574 8c9cdf75-e041-4f21-8055-1c4c39fb78e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 be96ef1f-4556-4a86-81ed-f0a6b02a115b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 6f217a82-cf4f-49ab-a8ee-3e7ebfdb6b47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 9bd25a39-4d5d-4728-8ca0-02c01395ddcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 490a969a-91cc-4e32-8788-51b33ed1146f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 306c786f-addf-40c2-bbfd-ae73e9b3be14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 076974dc-e2dc-45a9-8c37-ca93d9bbb983)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC71D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #575 b6f9698e-4ae6-46ec-883d-8094fb4438bb)");
unit.assert_eq16(16'hE3FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #575 f0d955de-b6d3-4049-b649-70fcbe5f8f35)");
unit.assert_eq16(16'hC71D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #575 226921eb-6fea-4114-9247-3302ff5a7702)");
unit.assert_eq16(16'hB6A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #575 7344f78b-4308-4773-8ec4-42663727e256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 cbb3b5e1-f717-47d8-ba69-776f9025b042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 f377f3cc-b703-409f-b997-6f11417f7069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 ce6cc3ee-09dc-4e06-9d93-d7aca8842333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 603264b0-6b2a-442a-8722-f89eaecc22bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 32be28bf-5a6f-4b02-9850-6821d29bddf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 84def9b1-ff3c-4b5e-b7ea-fa08b4e59fbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h254F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h013D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #576 ad787872-1728-4fb5-b51e-743118f79117)");
unit.assert_eq16(16'hA8A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #576 946990c9-3199-486d-8d6a-5cd6a2c5c8db)");
unit.assert_eq16(16'h254F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #576 9844077b-fc92-44ad-b730-4f996bc1d46f)");
unit.assert_eq16(16'h7D3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #576 6e723935-564e-4b92-a220-2ebbced2da7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 3971ced6-3787-4c61-be3b-15f4f62be175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 2825cadd-a006-480a-aa58-867a70827b10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 1799a1cc-f3e0-4b3d-806f-637ca1ad9ae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 535130ac-0c75-408a-8e93-93ca663a7c21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 cc9505ae-da21-48cb-805a-b0f04873fc63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 8dad28be-46b9-435a-b78d-3d97f9c34b0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2861;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #577 41f9465a-3b38-4652-bb2d-242d84beba29)");
unit.assert_eq16(16'h51FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #577 04ba4ecf-9c3a-4a42-a899-0ad4778fdc93)");
unit.assert_eq16(16'h2861, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #577 b71d6d24-26f7-45e3-a846-fbd0a0d2e097)");
unit.assert_eq16(16'h12A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #577 2052b059-e468-44fa-a266-4642f60b09eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 2cea61ef-9c25-467f-b98d-71f80da3dc07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 72f8f803-0fe3-4aee-8a32-b82262443420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 bc8a6385-bfe0-4646-bb28-b8242737b879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 82a80fe5-b2f8-4fc5-a5cb-c4388911d796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 5794de0e-3246-4366-a8e8-76d5eccd2f76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 3226140c-7e94-4b91-ba39-a1acfb5b238c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6E02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8A7B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #578 0bdca418-f84f-441c-9aba-04a484731c9a)");
unit.assert_eq16(16'h6E02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #578 8df2dde6-1f28-4c9d-9aa8-6db832eb7f11)");
unit.assert_eq16(16'h8A7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #578 f9118071-678f-41ea-b14a-ec9911663a06)");
unit.assert_eq16(16'h4DA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #578 0a607f5a-5e39-425c-b1e5-109cacb69ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 6eed00cf-1a79-4b7d-a818-700152a6c951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 8a304d68-9672-41e4-8d14-d7fa5a308a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 52a38974-2c1b-41d9-821a-f518763d0694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 2d9ddd47-08b5-497f-b674-56142ff9beb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 137e2371-e953-476e-b8a5-4a933d7b8f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 81dfcbcc-4516-4e6a-b5a3-197a92deca69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h27A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5342;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #579 75626b83-ce15-4299-b08a-568e85d6d6b2)");
unit.assert_eq16(16'h27A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #579 4cd89edd-92ac-4c9d-91bb-c22e2051db4a)");
unit.assert_eq16(16'h5342, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #579 65d13bc6-0393-44ea-bb5e-2f7cf705add3)");
unit.assert_eq16(16'h59F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #579 f05fa84e-fdfa-4a9f-bdf1-1997f694de82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 ddbf3c04-9572-43fb-a224-cc5616c262b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 991492a2-d69b-4703-802f-fccc8c3522f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 1fc802cb-1000-4ed2-b102-1e88efb0cabf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 f5cabe2c-476c-4108-82f8-85c04e414332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 7ec8fe64-9fdd-476d-9638-391b974a397c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 00dbc3ba-da3d-4c00-809f-e70594dff9cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h518F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0920;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #580 12549d2d-8ab0-469f-8bc7-d7179e11fa85)");
unit.assert_eq16(16'h8E2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #580 72f84592-aab5-49e7-afd9-d5bf63f71045)");
unit.assert_eq16(16'h518F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #580 a23b8877-0619-4c71-967a-efabe0aaadf2)");
unit.assert_eq16(16'h4720, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #580 7a51b7a0-9614-45c4-a0ce-38d1b10169fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 f6275716-6958-4346-9286-355485a87c67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 c90ebe87-5cc4-41c8-be46-561e75750adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 af45c9ba-fa5b-4701-a63d-c897f4a3781b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 caf8ca01-e289-433a-a818-1cc78ea12d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 c27b0043-e6fc-48b1-b680-1449131772f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 f1de495c-e5d0-4b48-89b9-c9b1073cb9e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h16CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC2FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #581 76774631-4375-4600-a7d2-ee27d5333851)");
unit.assert_eq16(16'h16CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #581 d0122fcf-06ad-4d7d-a9cb-b339654fd0e7)");
unit.assert_eq16(16'hC2FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #581 4b19a14b-bb15-45a3-8fe6-b56a1c71e00d)");
unit.assert_eq16(16'h8440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #581 75fbf813-0439-4286-98a9-a98a200c1566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 f046c54e-e6f0-4272-83c8-dc6f611d2192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 f1466dcc-987a-42d0-a63a-aa7de5944d45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 21ea21bd-5ba4-4842-b113-4cfc112efcb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 d0f605b6-442d-4b1b-b834-92b702800e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 0bc003a6-68dc-4b2e-b59e-842973ae8cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 a60a8b6a-ac66-47e3-9755-026826c58bcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h40A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE466;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #582 344321ab-f770-45ce-9ef4-ce526c0dd3d5)");
unit.assert_eq16(16'h40A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #582 8bf740e3-09be-44ad-ab4c-c8b676933245)");
unit.assert_eq16(16'hE466, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #582 37b918b0-471a-4e3a-92d5-cc2188452a4e)");
unit.assert_eq16(16'h1BA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #582 edab10ab-8151-4313-b421-1447ab8725a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 a7e2df58-3f02-46a4-a6e8-263c58a2c01a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 dac9f795-0a2d-44e4-80d5-9f9246133d4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 3cfb2779-081e-46ca-83bb-cbed2caef1d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 44cc4b30-cfbe-47b0-871b-4008dc43156e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 3b234a2f-59ed-453d-9720-37229f77a9a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 b149b265-05fb-4206-b5a0-3a9140da7b45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F9D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFEA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0539;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #583 22cee4dd-e79b-4544-bc96-16d4fb9d83be)");
unit.assert_eq16(16'h2F9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #583 35351057-2360-4dd9-9064-2fdfdd381bf7)");
unit.assert_eq16(16'hFEA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #583 d0c4a9e8-dfd8-49ee-8839-80c9afde1ba3)");
unit.assert_eq16(16'hC739, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #583 fa2880cb-1f27-4c79-b509-0759632bdaed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 d110c833-7331-46bd-830d-c9c1cc724be0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 20e5c261-fb73-452a-83c2-11e841329e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 16016255-280b-4564-aa4e-faab7fe7fa84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 3b513fab-7f3d-4190-acea-310ae9177c8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 1c7c7286-c7ec-4a24-a20b-edbf60265e0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 43c9a015-379f-40bd-bab8-3249ccd7827c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC762;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE49;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #584 fd474d6e-799c-4cf6-ba26-3ddfdeb39128)");
unit.assert_eq16(16'hC762, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #584 ce7584e1-5052-4ba8-8822-90c3d822d5cb)");
unit.assert_eq16(16'hCE49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #584 6e502bb3-7fa1-489e-af9f-7f03bba23809)");
unit.assert_eq16(16'hC291, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #584 6b44a132-9b7a-43fa-bc08-2c4c7c3b6cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 72b553ae-6df2-46ac-a950-812447e9d159)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 eea97478-4dee-470c-869d-0fa2ca6c599e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 98c432c7-e854-47ba-9aee-acd4c91fb4e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 f4374300-59f6-47bd-afdc-5046555a2e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 6460cb4f-ee44-4be3-bf42-1e3cee1565ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 1f91be3a-1d0c-40cb-b001-f620d220332b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF539;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h489B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h003E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #585 a82e90d7-f949-4140-96f2-0763cf5a4740)");
unit.assert_eq16(16'hF539, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #585 20a70cb7-3146-455a-9c58-d06364354579)");
unit.assert_eq16(16'h489B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #585 5f7bed47-d0f1-452e-bfbe-f4893faccd15)");
unit.assert_eq16(16'h3E3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #585 7c3c3394-060a-4b59-899b-123bb6f64b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 fcc2402c-8229-4668-a8c2-ad86ae13f4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 5b29cad5-23c6-4e6f-95cc-cb8d9e79c937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 24a3a01c-b06f-41ba-b84b-36c515fa70b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 c45bc8e9-53f3-40f3-8be1-faa6fb890220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 94252cab-7229-42f5-9769-821652caed1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 4b79671f-f6f9-45d8-b724-08ef7a96d0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF3BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0A5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #586 48a8c511-2be1-49c9-8345-57bf8aae19aa)");
unit.assert_eq16(16'hF3BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #586 923e6619-24b6-4336-8266-8c445a7ee5af)");
unit.assert_eq16(16'h0A5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #586 fbad2580-0cad-4662-a017-bdcdaa2a305c)");
unit.assert_eq16(16'hBFF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #586 bda74739-905d-4ffa-bd80-bb9494fad120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 7ea34ec6-2ed1-4673-8c94-10f52ef45bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 b8fe09c2-6136-4cee-bc1f-25a992cc7c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 bd8fe761-fe6c-484c-8286-63d9ec5da29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 2c1e19f5-ab55-4b02-80c6-80a896d01702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 bc996f90-0c74-40ff-8be6-0d94cf6f3c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 f578c598-0738-4977-b4c0-f4cca3255637)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h58C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h95E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #587 f71698f8-77ad-4b20-9897-951d897219d3)");
unit.assert_eq16(16'h58C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #587 51f6222e-327f-4152-a76d-0b3587540a83)");
unit.assert_eq16(16'h95E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #587 e26e2251-12a2-44ff-a39a-5c311ec52695)");
unit.assert_eq16(16'hCCB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #587 47403807-c070-4a31-bbc3-a4e560b531ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 76be9352-7654-43e7-9091-7a35f906a8f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 e4c75e04-07e0-4401-a6f5-ab0e034949d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 76bc5f99-ad36-438e-ad56-3e482efdb81e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 ece1e719-a6a8-474d-96c6-f13740039b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 eb0ffc8f-75db-4f11-b182-d1d641b53ffb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 ce95b01d-6e5f-4200-b1d6-bd1be63e272c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC4FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #588 83dadd31-e844-4dd8-89b8-f11ca6befb84)");
unit.assert_eq16(16'h6C87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #588 de5e7f57-cf0c-4eeb-98c7-5f2c7e324e57)");
unit.assert_eq16(16'hC4FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #588 3b88bd0f-27da-47e4-8383-a44d2a49b43e)");
unit.assert_eq16(16'h81E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #588 703146fb-e2da-48b7-aa98-fb820f62566b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 ea2e4c00-0c38-4ec6-b96b-c42005afda9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 ea2f7d35-2203-489a-b106-ecd1e49a28cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 841c8c7c-548d-43ad-a668-1907f7291e61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 770d4faa-8f27-4401-9806-b363f4e2c391)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 873b2271-5245-454a-97d5-1066cb94034e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 361f4012-4f50-4ab5-bac0-1d857f62ee13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDBC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB0B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #589 df7008db-8cf2-43fb-b417-1fb004029cff)");
unit.assert_eq16(16'hDBC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #589 6ea9034a-11a5-494e-a7f6-ed04154e3789)");
unit.assert_eq16(16'hB0B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #589 674b53f5-5c70-4cfd-8a37-7e0c843a9d26)");
unit.assert_eq16(16'hEDBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #589 98fda5e2-a12b-476e-b17c-66cb11928f91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 3f43a2a2-db93-4e71-9625-fc425b2baa01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 b71e9440-12d7-45c5-8ca9-13ebce513f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 daa06448-226b-4dd3-8f6e-62ff330aedb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 8ac70c3d-4fbb-4ad3-baba-fc306669df00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 275349fd-064f-4037-9847-a8e0ec9c074b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 f6d47380-24cb-41b9-ba6a-93bd3a5c1afc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h96E1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #590 47bc13d7-cd63-4b05-8b2e-f7e367e9fd96)");
unit.assert_eq16(16'h96E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #590 ba862f57-591a-4b5a-8494-b8ad7f39bb07)");
unit.assert_eq16(16'h8C01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #590 8495f379-550c-4bc5-b2f0-6765aba196d7)");
unit.assert_eq16(16'h7A0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #590 6c137dda-7786-4129-8973-ad1a433d82c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 f736be32-667e-4af7-9a4e-d30a34e37a3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 8ea06c57-a5be-4330-a36f-3d691068ccaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 d8e015a7-c5bd-42fa-84fb-420c16701d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 cba5439d-7647-4ddc-8b8b-1d7e8f9c0a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 e68108e6-bece-47ac-94b6-645bcd589c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 54156d93-c11a-4f2c-8988-5c535486faa0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC327;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #591 f9b97ea4-46b9-4677-b351-6899178df26d)");
unit.assert_eq16(16'hC327, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #591 e90f95ec-d0ea-42d4-af04-3646706c7b66)");
unit.assert_eq16(16'hDF3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #591 ffa05a38-7d01-44a9-8bea-912b92e052a7)");
unit.assert_eq16(16'h0CAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #591 0550dc27-fd2b-4958-b67a-03531bb7ead5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 336a900f-1dfb-47bd-8f75-da5472228535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 c6b7a875-b8ac-4acd-899e-5d86e89cd4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 9e18a7d4-2d30-4ba6-a800-a02463a9098a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 62267a7f-8827-48b6-9a50-59c8fa2b1e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 49339979-4e4d-4378-a722-a2a6b24d57d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 ef63b0dd-d53f-4971-95b5-81e7752e8c88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h89EE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #592 d44f48a5-ee04-4d8f-81f2-381b0b56a6bc)");
unit.assert_eq16(16'h89EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #592 064d1db0-7975-40f2-be2d-3e332438ae8b)");
unit.assert_eq16(16'h8B1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #592 ea3b27cb-89aa-4803-b948-e4cc4cee75fc)");
unit.assert_eq16(16'hDBAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #592 21016a82-4af9-4099-b121-f82ad14ec610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 a3376389-9547-4919-b783-70d9b8f02b87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 40ddc444-f793-4a63-ac0d-68bf092cad0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 f81d0b4c-284b-4936-9e9d-a1eea93db939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 11953828-a40a-4e94-91d9-8f59314f6286)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 46e0d2f2-06e2-492b-af9a-0f658aec03f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 0b665538-b36c-4393-a2ab-add47ed96aed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAECA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3C3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h030D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #593 a7d54168-0681-4f1f-9ce7-16db10995f52)");
unit.assert_eq16(16'hAECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #593 06ca719c-6a22-4061-b9c7-ec5b97b9e380)");
unit.assert_eq16(16'h3C3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #593 b165b880-6845-4f8b-9ae9-68ca1d09c84a)");
unit.assert_eq16(16'h700D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #593 54b8906c-1f48-406e-a7d6-76aa304ebe8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 f7096506-d761-4853-b7ce-b1122cc5caa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 2472f59c-e00c-4dd2-8c0a-ea339a935896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 ef63559b-ef19-488c-a583-23b86e63f1f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 eeb5f25e-15a9-4ddf-ab2a-3e70afdec805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 d1f1fb12-9511-4b2b-9322-97d52d9ea728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 0e4e805c-452d-4f2b-a23a-cf22cfb0ea7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFA30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #594 7d921b16-8a9d-4f9c-bc62-cb2dc2fa8299)");
unit.assert_eq16(16'hFA30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #594 6714aedf-6f23-4e99-9f29-58f25da8643d)");
unit.assert_eq16(16'h03F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #594 dd137ecf-87e6-4e34-b79f-54e377262294)");
unit.assert_eq16(16'h5F10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #594 9b931a3d-06ef-4731-8d99-7f688fafdbb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 c8074ca1-3a8e-47d9-9f5b-f2d13051ea70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 dad06d91-eece-4bed-9b35-23e84d9a5e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 2b882a88-2d50-435c-b3ab-d6e4a0f326de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 899ef550-f681-4719-b443-6a85d703a0c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 b7cd29eb-defd-435f-8b93-de63ba5c8c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 a64027d0-6a3a-4635-aabc-51edea7c167a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCDE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8C10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #595 27138fe5-8318-4c90-b955-8601b29f440e)");
unit.assert_eq16(16'hCDE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #595 32ba2577-a973-45f8-9da9-373f72d6ae71)");
unit.assert_eq16(16'h8C10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #595 0aac61c4-53c5-46e2-9787-ef70ac641e40)");
unit.assert_eq16(16'h0EEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #595 709db30e-3f8a-480d-88dd-adb3ffdc122a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 2efdf9fe-6eca-4aa9-b6af-92511c53f36c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 39e1b9e7-fb43-46b3-a41d-e2cae4c50838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 0c61b2a7-ea9e-4ab2-89f9-8fb3a6b0923d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 6eb011b7-09c5-4651-8820-b35758fe7bd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 9de8704f-f027-480b-8402-a835c0382b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 fde9d25e-fc33-4578-b0db-3c7ce38bea2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h420C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC4D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #596 2ef4a30e-97cf-449e-b5f7-65e290419268)");
unit.assert_eq16(16'h420C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #596 d9284244-c35b-4e41-bb4f-9230b43d7d7e)");
unit.assert_eq16(16'hAC4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #596 02439b74-7ad3-43b9-a52f-ca345d18c172)");
unit.assert_eq16(16'h30DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #596 e7dcec37-8741-4c48-ad9f-3af32570f831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 eccffe18-67f8-427b-bffa-e2fe321ec239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 fecf90da-bbc7-4f57-b2b4-82f6029ffda1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 c652a198-fc54-4ebd-98eb-f82aa7d4ed8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 7509e4ce-ad59-4674-a0bf-2e56e4dfcbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 6d72c91f-5956-42d0-8cfe-551127915921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 9c41893d-2dc1-45df-a3f0-218b3a3b6780)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB78C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #597 8b933938-136a-4e6a-a89f-39c5fc991b93)");
unit.assert_eq16(16'hC9F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #597 6162ed2a-6247-4120-beb7-0529d6910676)");
unit.assert_eq16(16'hB78C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #597 c7425ea0-d2b4-46bb-b6a3-918c6857c7ef)");
unit.assert_eq16(16'hB9CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #597 aed83d30-449b-4d9f-94d4-684fe8715160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 d0e58df6-0fc3-4137-ac7d-195b7e2964c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 d95b7eab-cb55-48aa-8000-06e9591e8ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 110bfa34-1062-4bfb-af8a-7bd9d9c949fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 d75fef07-027f-4d34-8ffb-e72549faff3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 cd156244-364e-4546-9487-5a81b7618fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 108ceac8-85f5-48a4-a824-f8a1229fca3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB15D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3094;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #598 c720854e-b286-4881-832f-042e1caaf930)");
unit.assert_eq16(16'hB15D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #598 8c998a71-5ca9-409d-9977-c254be661928)");
unit.assert_eq16(16'h3094, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #598 03653a32-87ba-491f-a6d5-c174a26d07ed)");
unit.assert_eq16(16'hA8E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #598 fa4eaf37-8ec0-4e67-88db-2457918c6f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 2762a611-1e56-404b-b033-e7909b22aa3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 97c11f90-f387-41fa-aef9-a26e8525f04d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 499a8d11-5383-4973-8fbb-774dc8193f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 daeccb24-d596-47de-9b57-e7de6920f520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 e03ebe63-4546-490d-a05c-4ef239f96458)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 fefe0ed6-c834-494e-ae1f-d7e149635ea3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB212;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h041A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #599 dfa13b7c-6e49-4b23-83e5-b2f27fa9c399)");
unit.assert_eq16(16'h0D7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #599 d8d1d206-6788-4378-a9f7-204fb38aea35)");
unit.assert_eq16(16'hB212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #599 f6795377-f914-40c7-a28c-d37e29244e94)");
unit.assert_eq16(16'h521A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #599 82dd64b9-f5f6-4274-8e12-df9789325030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 3f01cd4e-d7ee-44af-acb9-e86f018b7050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 e73b3308-57c3-44e2-88f1-33f489487c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 337331a9-2a44-4073-b35b-48c43d6a2894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 fe6d8b21-eb2e-4d4e-a7c8-6dc4d49633df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 a1406953-640d-4dfc-b609-ee0f4ebf5e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 6a881bfc-37e2-4aa6-b1aa-e1b3939d2d1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6CA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h04CE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #600 358ad612-089a-4e0f-86f3-c047a4a179ab)");
unit.assert_eq16(16'hE6CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #600 062e9a78-dd87-4dd2-ba34-e83bf4cae4b7)");
unit.assert_eq16(16'h04CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #600 89bc05ad-aa56-44b8-a511-3186e0db2347)");
unit.assert_eq16(16'h19B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #600 b5cae858-fd62-4125-b054-2dffb842cdc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 d9d0903c-3a9a-4384-9dd5-47e72044f5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 163fef1b-ba65-4fab-ab35-1b291cff1f22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 be879c4b-e233-47ea-89c9-f8c59bc6871a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 dc67c43c-a915-4ff5-9d0a-abef90ce191e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 48785c10-a593-4fd1-b651-ca3027e60fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 67bb6ef0-072d-4544-a529-ebed5d49967d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h08C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1FFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #601 a1a7cc97-356b-4420-9116-870ebebb9aa5)");
unit.assert_eq16(16'h08C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #601 c036cab9-01dc-4a13-b40f-a36b8300ef94)");
unit.assert_eq16(16'h1FFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #601 f5de24b5-2796-4a14-99de-8c9ad22bc211)");
unit.assert_eq16(16'h018D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #601 90883eb5-24fe-4ee8-a713-e4a48cb693b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 3667e29a-f44b-4fd4-b334-f2e747ea5391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 c538a315-f5fe-4b86-aae7-61e54ef2844d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 351596ae-728e-49ac-9902-2ff8e079c383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 f8408d9b-3d60-4293-b796-d055ecf6f639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 04e4e82f-50c7-4662-89d7-574018e2e6af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 d372e907-bcd8-4dac-8320-f203b24f5b94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF09A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h237F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h071C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #602 3d0b8ee0-4da7-4bcc-bc27-3653a3c198b6)");
unit.assert_eq16(16'hF09A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #602 d21934d2-a5f1-4612-9bf7-c1b97229beb1)");
unit.assert_eq16(16'h237F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #602 dc84d2a8-59bf-4f69-84cd-21dd893a60e7)");
unit.assert_eq16(16'h861C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #602 67e1f395-64d8-4a3a-b00f-797c7f6a3e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 4d0c5d3d-f846-4ef1-acec-240bfa5e4ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 8cbcea6f-92d3-409c-9e39-e49d499f646a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 00c82a20-4f3e-4b26-8813-f7878d6fe0ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 6cb76fd8-46e1-4f2d-973a-35ff5b1f6fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 f5c84880-c50c-481a-b60c-fb8e9b822481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 0bee02d2-82bd-4389-be3f-751ab4a891db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC0AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7F39;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #603 389b5ff1-877d-41df-b465-5adcbfb25373)");
unit.assert_eq16(16'hC0AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #603 9497dec9-ba2c-4a4a-b703-4064869ba56c)");
unit.assert_eq16(16'h7F39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #603 b3520768-4616-46a3-963e-109339a6e35b)");
unit.assert_eq16(16'h399F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #603 e2957e51-a03d-422c-ab02-aad514cee420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 35144d02-cd1e-4db5-a403-fe8c73061775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 907bce1d-df49-459a-baa3-f1de744144ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 c4adb750-a27d-490a-8dd2-cd735a591fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 37910c71-c392-40fc-924a-bc86a62f29a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 82e29e45-f5a0-4f77-94c6-e3b9d6ba27ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 8a63621e-2271-48e1-8f17-a30256c99405)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF055;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #604 77ad1be7-fdb9-4b6a-a666-3105b05ed222)");
unit.assert_eq16(16'hE3F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #604 88d2391b-f14a-43a4-9e00-0bf60baa3dc8)");
unit.assert_eq16(16'hF055, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #604 107b6773-9979-4317-b92b-c73ce079c290)");
unit.assert_eq16(16'h27E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #604 836521ab-fa2c-482a-be7b-9ba8946f0189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 957a77e2-ea92-4d6b-9ee9-6b62051c3eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 db8e098a-1097-4717-b1b6-4ca6170a147c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 5e20200b-a42f-46e5-87e0-e612b2b425ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 a63c9b72-e075-4a05-8352-ec83bca72b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 88428fe7-584b-42a0-9525-ef70ebde3c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 13d93a22-0c3d-4168-b51f-cc37abee1701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6C96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5377;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h029E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #605 29f0e86c-a8a2-41ce-8e51-5493e2aefe01)");
unit.assert_eq16(16'h6C96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #605 065d9bbb-47e4-43da-8e6e-a7aaf1fd4652)");
unit.assert_eq16(16'h5377, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #605 96db5d20-1624-4738-bea9-da2cd6c9ee20)");
unit.assert_eq16(16'hFE9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #605 2cd58430-8fb0-4c14-bd2f-bca9c6769085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 7b718a17-8db4-4abc-8efc-1352668def97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 f97d782f-3a37-49c7-b1e1-f657cb21acbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 d2e6e85f-8593-413c-80fd-a7172d01fb53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 19068b54-cd42-409a-ac9d-2ce26bc58eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 b9ff0442-2510-48cb-8f7c-facb529863af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 7d73a756-8cd9-4852-a569-d0f7564da88c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0FBC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3335;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #606 8eda8662-d266-4b05-b19e-fec2df363c86)");
unit.assert_eq16(16'h0FBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #606 de518b6f-82a9-491b-b512-d85be1418781)");
unit.assert_eq16(16'h3335, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #606 0ff28774-1c1a-4cb5-9458-c5a154370b4d)");
unit.assert_eq16(16'hBFC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #606 bf0dafd4-bed2-44dc-b99b-7529320814ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 5fe68d1c-2ddd-4303-afef-ea981cd70797)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 0ea197e8-835f-40ac-93d3-fe36fcc79977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 57f4b2b0-1323-4dce-a5f3-2ebdadfd8c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 a08f0041-9e9c-4bc9-94ef-8d81a75d3095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 5de48516-fdd3-41e9-a5d3-d55f71b61f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 6f5420c6-c16c-4704-b6bb-8042655dcdb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E62;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7928;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #607 725f7b2e-7715-4244-ae12-2413e52b0d9a)");
unit.assert_eq16(16'h1E62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #607 086ce928-f076-41d0-b5f1-478dfe06a97f)");
unit.assert_eq16(16'h7928, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #607 243e44a2-c0a8-4876-9c60-f5e2a17505d4)");
unit.assert_eq16(16'h0F2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #607 8479cfe1-fea1-41d8-bdee-abd1b93b81b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 7dc237b2-7568-48a9-a7a8-1ed26e6fd80a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 f4c67ab1-8703-4487-b8a7-3db365ef994d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 8c0c17c4-b3b1-483d-bb2e-3c6589279f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 edb7d529-9b7c-4346-9c8a-345bd0dc9f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 4e099c6d-84f0-41c2-a305-91877a6b56cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 d7cef0fc-2da3-4bcb-91f6-55f61e4c51d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h628E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA374;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #608 45ce9562-5cfc-4f99-946d-f8f481706d41)");
unit.assert_eq16(16'h628E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #608 4d9fad89-f2f6-4a67-b598-fc125ca5da56)");
unit.assert_eq16(16'hA374, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #608 5d7d60a3-32ba-4aba-8e94-c43818e8ae1d)");
unit.assert_eq16(16'hAFAF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #608 0e0c0ed9-0cd2-49fe-aa0a-38c52eba4273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 40d906f7-e715-4027-9541-30d8f40bb066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 fc0a76b1-ce3b-4474-bd31-1911464d1be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 800ba4a8-1d19-439c-ba24-e1c3ffe1bfb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 1550821b-26f9-4df5-966f-d5a3ffc8861c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 86dff21d-1440-4a27-8357-b0aeeddc9ae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 7c21206a-8e2c-42d4-b4b8-7b5e9f6d217e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF69;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h877D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #609 331f2c3c-e009-4202-b2d2-c021c62b78bc)");
unit.assert_eq16(16'hAF69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #609 058cca85-6004-4b5e-91e5-126e46b9cfd6)");
unit.assert_eq16(16'h877D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #609 671d9c41-5b01-45be-868b-2cadd88cf905)");
unit.assert_eq16(16'h8DE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #609 4b919b59-d575-415a-95b5-6d9971cbaefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 3b4c813c-612a-44b8-ae25-0a2d3fb34a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 a2238384-a2e9-4364-b174-b84b8eeb356d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 a5158864-a51c-4864-b78c-005c03586d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 3c4334c0-656e-4251-9787-477b0cfded81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 7fadc06a-7068-4309-bd5d-f0cb354c20c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 d3cac478-9801-4723-90dd-6ffd605db3a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3F30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA37A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h050E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #610 cf9fda7e-bae6-43d6-bc04-d3680b9b12df)");
unit.assert_eq16(16'h3F30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #610 7ac912a2-90b8-4860-a956-f1cb94974324)");
unit.assert_eq16(16'hA37A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #610 257946a6-ccbc-41f5-9ce0-61024f8e84bd)");
unit.assert_eq16(16'h1A0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #610 b36ffc5e-4cb6-464b-9d83-b7f73b84ee54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 f4966742-f644-4789-a2fc-0443c6c6c74b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 df742da6-9a53-4068-8363-8c8c3bed6c5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 242c48c2-94be-4d3b-abd7-9e4f4686cf72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 1c1b4409-2026-493e-ab52-8570203a5953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 15f70531-143f-4beb-8231-9610e16a9ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 1ac8b687-c734-4fc0-b592-af1d550e4566)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h333B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD9C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #611 44aa60e4-a9ed-4ac0-97f0-cf37d6bf04e9)");
unit.assert_eq16(16'h333B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #611 02282ed9-e142-41b6-a007-9c5a09ad8259)");
unit.assert_eq16(16'hD9C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #611 6f9dcfe9-0232-41f0-ac78-14a234ab6aaa)");
unit.assert_eq16(16'h9745, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #611 7047f678-f06a-4351-88ba-bb882e13d0ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 0cdcebba-ef5d-42dc-8505-c33110d21f56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 27722ad0-1ceb-43e4-a4f3-0bae33fcc3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 e3504c31-7f96-493e-bcaf-79dd46c4de0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 82acc964-14fc-4ad7-b5e8-60adc4e9cbc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 a9f9280c-171b-47bb-b2ed-91021f8e2cbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 4f8970b8-cc70-4f59-b57a-107b8db876fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAF0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h466F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #612 23e997b9-0d8d-4bfe-893d-3d0fa4e57b05)");
unit.assert_eq16(16'hAF0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #612 a6118a67-b5da-448e-b572-1668fc62e142)");
unit.assert_eq16(16'h466F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #612 5cafc740-e67f-41a2-a827-5bce81f322ee)");
unit.assert_eq16(16'h8FD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #612 49b5881e-019e-4991-a722-e06c035f9e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 4c1ff754-783e-4261-a469-6a512d81d686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 b99cca19-a3a2-4ea0-bfa3-1df8968ea23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 ebf8ab44-e86b-4796-ba96-2dcd4ec049d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 98910c56-4412-4805-9a5c-dd35a965669c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 d752d7cb-0aa0-426f-b594-e20bac7d09fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 e5c44e8f-366c-4514-9e89-d3d9b0570ec2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h886D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA5DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #613 872cee60-1088-485a-9faa-8a8428c4d59d)");
unit.assert_eq16(16'h886D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #613 8628a639-579d-491f-a118-1af721cf8a6e)");
unit.assert_eq16(16'hA5DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #613 3db772cf-ec58-4e42-8bb9-ae60008fbe00)");
unit.assert_eq16(16'h96FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #613 9bc22c71-7dfe-48c2-b0c5-d5f0139e3ada)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 d54f8def-405e-4e5c-9336-bed4df5ad651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 badd59ad-9886-43fd-aadf-f27fee93b9d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 35a15bba-1e0c-4c19-958c-c3ed5023f43a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 256cf9da-a2c2-4c10-b00e-2fd7ab840092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 2d42e9e4-f48e-43c5-9997-5f7a419511a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 becab360-05e7-4c67-837a-a2220521fb2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5535;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #614 bd13f03f-bbac-4d93-a3ac-3a3b0d6b2abb)");
unit.assert_eq16(16'h51B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #614 a47bc562-6842-4398-be9c-8281fd07906d)");
unit.assert_eq16(16'h5535, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #614 ee757535-6ddf-4d2d-894a-926d989a2217)");
unit.assert_eq16(16'hA93D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #614 fdf937c2-4d6e-48e5-b4de-442390599039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 9394fa66-8a2c-48f8-8c90-58c3965f4045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 09ea5a09-8421-43bb-8db8-85b0d378697b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 8f9f5821-15a2-4f7d-8ff7-42b68df8a277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 ef4d1310-43e7-41cc-ae47-4b1a6007d73f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 131c3125-e2ee-4893-8017-4d113198c278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 8246bf35-637b-4b05-9d26-a793f2f2342b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2160;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBB70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #615 6017279f-0415-4baa-b66a-9add51e8647a)");
unit.assert_eq16(16'h2160, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #615 7cba2e21-4361-452a-a66e-9b74a4dcd3c5)");
unit.assert_eq16(16'hBB70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #615 181e6b5c-2fe4-4cbe-b598-6ca11540822d)");
unit.assert_eq16(16'hACFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #615 232962eb-fac1-43d9-833f-385851dd6acc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 bb4f8834-a821-40ee-b29a-74526503a925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 3722f187-34f9-4553-ae36-106b3288b0cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 003db7dd-d06e-4d7e-9649-5e8f459baf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 18df32df-5e54-470a-a506-0d34e9b49a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 846315ce-9ebf-4af9-bb07-60db19252c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 1cef852f-8a61-47b0-b0a6-d8699a17dd07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE815;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD4FB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #616 9d9a571b-22dc-405e-97ed-d0d639ab8ba3)");
unit.assert_eq16(16'hE815, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #616 a5025578-e78f-4405-b2e5-bf8f2301c43c)");
unit.assert_eq16(16'hD4FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #616 09bebc8a-36e3-4550-8d64-2cfec0b9096e)");
unit.assert_eq16(16'h40B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #616 d3d21d14-f18a-4e59-9bd0-3122f0c45488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 d27ebb34-f4c2-4c20-b5a7-533ba01435f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 3d6ef61e-f8e9-4060-9745-a511115b8d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 b778eb78-34f9-430e-a230-6b6865f7e825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 da38711c-5ea5-4d24-9ff7-17cae6c70869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 a5abc05d-1a94-42e9-b232-8d11e737ef39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 ed445256-660d-4384-947f-159de4d6d6bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDBF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBE5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #617 18dd3780-b904-4ec3-b763-4f49b1439bbf)");
unit.assert_eq16(16'hDBF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #617 b6e99588-f0bb-405f-9631-7cf621b47bda)");
unit.assert_eq16(16'hBE5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #617 b4faebcb-4ec0-4d89-a61a-67e21874d349)");
unit.assert_eq16(16'h3B75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #617 c390e9a6-b67c-4aee-a3fe-eea4ee93a320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 487b6baf-fb32-4d5a-a8f0-bf832adf26da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 836a8741-4751-4b6b-9009-d50cd2face78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 4b44ef9d-8310-42a2-9d5e-ee1b41357715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 3d004900-f167-49b1-853d-3984acb94f61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 64d08fd9-9c81-4924-a151-dfb7c5427636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 77860bff-8d62-4070-8743-ccb68b942d1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD9B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6939;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0508;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #618 33936a49-145b-4909-bcaa-94ac4d24e473)");
unit.assert_eq16(16'hAD9B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #618 1cf11812-18a2-46f7-8b19-63033443cbf3)");
unit.assert_eq16(16'h6939, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #618 731ae9c8-5593-46e5-99dc-67eadc7f2f8f)");
unit.assert_eq16(16'h5D08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #618 90d2f1fb-09ed-4d44-a153-5c6e77d30ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 c495a10d-9cad-4b71-b24b-3394690cc677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 2cd215ff-8884-42c7-a5c6-d233142f643c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 3be6d3fb-9ec8-48d4-a873-cc8d07009759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 2fe16ec5-1650-434e-ab0c-e126a97c477b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 c1cb226e-ba72-44ef-b707-457a782250ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 0f417711-2900-43cf-b32a-980a78947999)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0417;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7AC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #619 316123e1-c88a-4e7e-8faa-1ba18d273ef7)");
unit.assert_eq16(16'h0417, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #619 c6139cd9-fac9-4c78-8717-ec7e25a952c0)");
unit.assert_eq16(16'h7AC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #619 379c7288-725d-4337-8145-6dd59ca5717d)");
unit.assert_eq16(16'h5BB1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #619 34d628a0-eff6-4b87-8b7e-89294ac69700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 ebaafd0b-513c-4c69-a773-ffc61c4a8f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 2c58c457-0de3-489f-9f28-b605d0d7acfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 4f1d4ce4-543e-416e-a172-19fb6c9f2bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 fc5b96a8-0e35-4099-9a0a-f78d0a21dfcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 a4f3ad2b-d3a7-4db1-a604-52ae5b719d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 b36a5753-a174-41da-a931-1b5ffc9d9caf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED3D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #620 3ab6017e-92fa-47b2-8381-03e1ceb68357)");
unit.assert_eq16(16'hFB01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #620 247037b5-fedd-41c5-95b0-8eada26819da)");
unit.assert_eq16(16'hED3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #620 4e445374-f0a5-4ff8-99cc-d9a246241b98)");
unit.assert_eq16(16'hC0EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #620 b7f46ae5-35ab-4a53-8802-f73eeaf6dddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 5350834c-76a9-46c3-b543-b6bcf2c86305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 426eef6a-8dd2-4335-bbbb-f4609419328b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 9db8f4f5-bdb9-447a-bda9-bc2658c55d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 66dc7a30-5537-4c69-a7a8-70517bc50afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 40bae3ae-26de-418c-9261-59392e166471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 2b4d2bc5-d77a-4f6e-b7f4-1a56e778a0b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB2CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2595;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #621 7952531c-0da2-4f4c-90eb-e54963a50316)");
unit.assert_eq16(16'hB2CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #621 44f31ff6-448c-4ee1-b0fe-74b98e416d07)");
unit.assert_eq16(16'h2595, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #621 01824f40-f689-40e8-a934-a952ad619e37)");
unit.assert_eq16(16'h4214, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #621 2b521703-f752-43eb-bb9b-fe929e33077a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 1d2cea8f-f372-490c-9178-5fda742e4cc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 82b8394a-de30-4976-a76b-deaad61caa86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 dd04fdd9-55fa-4291-ab6e-c28967d21683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 3b18c343-947d-47e5-aa34-bc68a1779475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 f17b890a-de57-48ad-80d1-1862151fd8f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 de9312d3-7924-4f4a-8a1b-55e0b7ca8287)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h36EA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h88B5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0977;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #622 dd8d88ef-b36b-47a5-8b3a-7a0be6f921e0)");
unit.assert_eq16(16'h36EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #622 58e20899-2dd5-455a-9a36-cd33433ee0b4)");
unit.assert_eq16(16'h88B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #622 1dbc2dfb-c3b6-4a8e-9922-2f6a99911c4b)");
unit.assert_eq16(16'h3077, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #622 efe20dbd-1800-4b49-99c9-f8056e7d682d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 a57d63d5-d9d5-40f4-b591-32e76592ed11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 ebec907e-f3d9-49a8-802c-21303a6c33a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 97415494-9641-4e53-aff7-fa19a25bf396)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 62d8157f-ad97-494a-9160-e6c76ae249d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 bbc8b8de-352b-4410-a92a-1cd3c2a0e2c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 9f9c91bd-3913-4ad3-a2be-2c32c734ded4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9930;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8006;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #623 03193fb0-2baf-4521-ace1-cde9ccd2aecc)");
unit.assert_eq16(16'h9930, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #623 f169248b-5017-416d-ac5f-751d10b962c1)");
unit.assert_eq16(16'h8006, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #623 e5ab64a7-d605-4032-a67a-5d0acfba2958)");
unit.assert_eq16(16'hE4E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #623 49c3530a-bc1e-4e32-9521-02c44dfb0b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 8a2adfa8-e14a-4734-bec9-844eda3773d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 79f56512-566d-4293-bb0d-dd52fd2d70c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 d1fbba7c-3db6-4530-bb1a-b135d73fe1bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 009cf43f-264f-4618-a866-b0ca72c46056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 b8e751f8-243b-4c88-8ba9-e9b263aa085f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 3196027a-4c22-4735-a453-e48c8e0a0910)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h191A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC68B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0848;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #624 3dd95d0c-084e-438b-ba83-d91135824659)");
unit.assert_eq16(16'h191A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #624 671213f3-220c-45ff-b8dd-6a3aca68c656)");
unit.assert_eq16(16'hC68B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #624 b2355e38-4530-46ad-99bb-b280b29cdffe)");
unit.assert_eq16(16'hC048, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #624 0f68771b-8c31-4d34-ac7f-bd520d204ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 dda1722a-3ea5-4c04-aa1c-6aa88b8c467f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 1504eaca-abdb-437e-b260-b232650cb71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 29554460-1eb8-4624-a63f-4e8a93e15bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 bf0de11b-9255-4d57-82a4-124680f0a1c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 9db021b4-236e-4965-9074-6b9a36c5602e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 2fe659b4-b30b-4955-9398-5b69369c5ca1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2AE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF3C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #625 b86c9700-f33a-49bb-896e-0d38009602b3)");
unit.assert_eq16(16'h2AE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #625 cc90c841-c25c-4930-9860-05ee574b22a7)");
unit.assert_eq16(16'hCF3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #625 a6e38238-88ea-477d-b3a1-1d674bbe9a6b)");
unit.assert_eq16(16'hDDCD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #625 98783cfa-a670-4403-9c15-45ef69dc3221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 bc3bd1c0-8483-4c48-b303-7c5f80c40be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 7d9092cc-5e87-47e8-91d2-7b8be19f4bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 c3290108-32c4-463c-81bd-41670cad7989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 0f7ed24f-b57c-46ab-805f-de8f70999d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 2bee54d2-3a67-4a3d-a379-a381ec980bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 6686100e-44eb-498e-9a91-9399108a352e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBA2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF6DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #626 a119d507-f44a-42dc-a908-48d10bf1bbf2)");
unit.assert_eq16(16'hBA2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #626 4a9e1567-8713-4231-8dd3-37ff21e44cbd)");
unit.assert_eq16(16'hF6DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #626 cf03eaad-3120-4670-8ae7-85eb96a39988)");
unit.assert_eq16(16'hABC0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #626 a8ec9654-c330-4e71-9629-ad96fe97168d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 249ae0ee-d31b-41d9-a5ed-07a082190896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 faf33306-2e5e-4260-bd34-7e5ca99e760e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 17396f05-c8aa-4ef9-941d-a8a07066c7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 1aeeaf1a-0432-447f-abf3-d6485dcbcf64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 da86b0ea-52b7-4abf-962d-76f469541542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 dbeabd31-629e-45d5-a5e0-f5c42555d2c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB4B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4416;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #627 5d0655e4-cb60-4eac-90df-382cfcdad87d)");
unit.assert_eq16(16'hB4B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #627 283e3c03-733d-4327-9346-3122f4503d7d)");
unit.assert_eq16(16'h4416, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #627 605bd886-f26f-4b46-bdbc-feed0ed908a8)");
unit.assert_eq16(16'hC3DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #627 eafc405c-8340-4d68-83ee-d68b27374065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 ed71cfc2-eba6-487a-a691-f51986bf687f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 db28572c-3516-4f16-8bc2-5896b77da8ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 7d95c18c-c31c-46bf-bb7a-4ae446d4ca54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 a0520c5c-7978-41ca-85ac-474bd85da410)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 4e23a1c1-28c4-480a-9601-63402eeab0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 e27f959f-3073-4629-9073-42ad5a737ec5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC4DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h88A7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #628 1ca3362e-ae7e-4de6-9304-0d8e8936d395)");
unit.assert_eq16(16'hC4DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #628 8c24caa3-4516-4c5d-83aa-552dc42b00d5)");
unit.assert_eq16(16'h88A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #628 5dc839b4-9ba5-4155-aa6e-880b5a7ccc5e)");
unit.assert_eq16(16'h451B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #628 47f48470-d5c3-4f71-89d5-7273b18f85e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 137a4cc8-3d2e-4e19-afa7-352e02583460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 0681b6f0-ba62-4de6-aa21-d720ad5dbe1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 460f3606-2457-462d-a71d-e17b53bb49ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 2f8c370c-7c64-4e19-bf3a-ad0143a5b5d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 e628ce06-7094-4a74-aa4a-00c247efaa50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 259e5afe-e88c-4a6a-8738-6cb685e51a9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF782;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #629 a9c4e920-d124-49e8-8a7d-d4796b9a1937)");
unit.assert_eq16(16'h81F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #629 4f451f6c-818f-40c6-96db-dabffd0a06bd)");
unit.assert_eq16(16'hF782, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #629 0198674f-dac3-49cd-aef2-872a55b096ac)");
unit.assert_eq16(16'h3BF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #629 bb3a81a7-0211-489e-8cfc-377758be57c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 ac1124b7-e302-4564-9f3d-b2cf3a66b051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 f4ccc213-4400-4fd3-8586-cf68be44bcab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 2560e28d-8a95-4813-ae5c-2dd7d61488c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 a2c297a5-4a9e-4042-ac03-493ba54dbcbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 511948e0-d083-4ac8-8217-3bb5ef840a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 7f79aa35-98cf-45ee-a5c6-96dcc73f23ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB61;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h69A2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #630 57588b8a-6400-4a28-90c5-038267b9b118)");
unit.assert_eq16(16'hFB61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #630 05478353-c9a3-48d4-99fd-2aff46e225a1)");
unit.assert_eq16(16'h69A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #630 7db9c375-f6e4-4cc0-95d2-41d60dc9735d)");
unit.assert_eq16(16'h7837, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #630 d4bb5b44-2117-4072-8733-f4cf1e55ca0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 7ecb8516-957c-4439-a1a3-2a6c4eee0d2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 97d375da-1e08-4c0d-8073-fbe112721681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 d2faf524-4dc5-42f8-aee1-a4cc1ef440df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 7a5009bc-b126-4e2e-8d4d-ac31a6808930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 779bf892-40e9-42d0-b2a2-24b7aeee5934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 03cd0b70-df1e-4bed-9672-9757e82c7a07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h51E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7BE7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h058B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #631 2c68de43-f1f1-4d5a-880d-fd5f14492656)");
unit.assert_eq16(16'h51E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #631 8cfe96af-8d57-4c53-a2eb-bff316a89149)");
unit.assert_eq16(16'h7BE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #631 28636d9b-cafd-4951-80b8-d51ed868d15d)");
unit.assert_eq16(16'hF28B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #631 d07cedd5-261b-4784-98a8-29e357609679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 6c7f871f-b97c-47fe-89b4-b2392b15cfad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 db986618-b338-491d-a6ea-0c0c0a8a5659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 9a4babcc-a826-4272-be75-cec0e95f3e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 baafee64-0de2-43d4-8f61-b6ec005e1ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 4733907a-9754-4d44-b381-225a20b950e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 1267f110-d248-4c93-af8f-5f71eeef0270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9BDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8728;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0824;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #632 7db039e1-32a6-4d87-bcbe-a0fe99364cc1)");
unit.assert_eq16(16'h9BDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #632 e886b5c6-5bf2-4a27-895f-a7467edc2073)");
unit.assert_eq16(16'h8728, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #632 0a062e10-8669-4963-90d6-60febf2ac0e6)");
unit.assert_eq16(16'hAD24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #632 155e1fbc-bb37-4f08-8047-502e85eff1bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 8c6c2cf9-c8af-46c9-a026-747914e2ff30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 178ae1b6-8614-4b62-b668-897feb24c3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 85af4df4-3805-4b3e-bc99-7fbd1fbeaf2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 d3e6c6cf-45f5-41da-85b1-287478b34d94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 8dbc9e50-4147-4c31-99c8-229b43605116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 d9aa6e6a-df33-45c8-a220-17f262043a60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCB25;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #633 59daea0b-a5e9-4171-99f4-e61f18d2999b)");
unit.assert_eq16(16'hD0BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #633 d11dcc66-07b8-42d0-8df4-bfcac7ca5568)");
unit.assert_eq16(16'hCB25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #633 014ad519-0c0a-4626-90fa-fd2edf67894f)");
unit.assert_eq16(16'hE3A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #633 c61613f2-d3af-4717-b6ab-faa575215487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 e4a5f2b5-8a90-491c-9baa-e8476e3868ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 7b32a30d-d60e-4964-bc92-48292b331be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 b852ae8b-e9d1-4431-9e98-b7eabaa02996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 1aef30c6-ae18-4d94-bc1d-67a95bcc8fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 922596f1-c728-447c-afda-42302edb0238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 ee4171c2-3f96-45af-8b87-e68996154e02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDC17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h040C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0256;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #634 522f8cb1-c789-4ba4-9ac3-57fcb9ff8f63)");
unit.assert_eq16(16'hDC17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #634 9134caa7-2513-4c2c-bc37-d6443e2faddb)");
unit.assert_eq16(16'h040C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #634 06559236-ac0e-4952-a6cb-0c1a1f836ba5)");
unit.assert_eq16(16'hC856, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #634 c7c873b6-68cb-480d-91f7-a5c183b234cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 2d3714f6-0b97-49c4-a105-9ff0c9068788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 888168c2-7b55-4bae-addc-b7888ec243c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 96e0e544-4305-44b7-92ec-f0edc66664fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 b382a883-0ead-4223-99bc-3849b6a76511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 53e0919b-bced-466d-b966-50ade94c574a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 38335ade-9bf7-4ee3-88d0-50c4d637f5c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA36B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #635 11b65b1d-884b-4553-918e-00d9969dbcfa)");
unit.assert_eq16(16'hA36B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #635 59123bd1-fec9-46e4-b976-3568a959ebf4)");
unit.assert_eq16(16'hDB9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #635 f6fe0da7-1ec3-41a9-8b80-450c99a8dcea)");
unit.assert_eq16(16'h75B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #635 7038f493-05fa-4047-8a63-85024f8039ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 2608887b-2fbd-4597-a938-8e8ab04981cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 4b546478-b17c-45ad-bdb3-999bffcdaf01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 b2379b2c-ac91-4939-890f-6734dd587756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 36797802-8c87-4066-9b67-8bde47e5c248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 d7520333-db4c-4484-a309-2b242ece7bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 4e17edcb-bba3-473c-a58c-a92b13cb092d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA86E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h498E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h028F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #636 b92dae6a-e2e8-4050-ab53-b6bcbea63e91)");
unit.assert_eq16(16'hA86E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #636 315466b4-01e9-4e19-ac21-3cea6fcac3e5)");
unit.assert_eq16(16'h498E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #636 05e4a787-bb83-4fb7-8eec-5c6b4fd3e871)");
unit.assert_eq16(16'h288F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #636 c18b7463-bd19-4534-9913-9f5c4b36801a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 9c695f03-9060-4acd-8e49-d540bec6602b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 49122496-4143-4186-ab86-6f026b17af5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 1622fadf-19dd-45e9-840c-b0375f8183d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 201bd617-2fcb-40f3-8cfc-86480a2ada83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 3d1ed2ff-f02e-459b-a49f-24aae96384e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 e4d859f4-e832-44e9-8ce9-e81382e49b78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7025;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h060F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #637 661c1343-21a7-4dc6-a7c9-c65df2dd9093)");
unit.assert_eq16(16'hE5E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #637 b7ab05bf-6999-4e7e-8d16-afcdac32f9c7)");
unit.assert_eq16(16'h7025, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #637 8c31b57e-bc5a-40a5-9a6c-5c00ab7da495)");
unit.assert_eq16(16'h370F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #637 bf9d7182-23d7-4529-b5b5-2977247b2ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 bf566fe1-6c6f-4681-967a-1478b928fe03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 eb94d05e-76de-45b7-a577-4387737fbed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 3ad41388-c431-49c5-bf6c-43612f6fbf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 c5bb1e8f-30ed-4f79-acd3-3c989676ddb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 5a4d6ab7-0c1e-4beb-8e78-f171cf755fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 85bffdb7-c2d6-463a-84f5-41ce47de3577)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC402;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9021;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h086F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #638 25354d6a-c9ae-4a38-b391-13f8dce97c73)");
unit.assert_eq16(16'hC402, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #638 a42d3ca5-41c8-4413-8aaa-3e9b3627a972)");
unit.assert_eq16(16'h9021, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #638 2c3a5621-d53e-4e83-8425-9657b2049b13)");
unit.assert_eq16(16'hCE6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #638 faf34082-086a-409a-8b4d-882e66867926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 eb24dc32-7123-4fd1-92a6-7f8d868580fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 1502624b-e22a-4c54-a656-58370a52ee23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 fb4f1e29-c62b-4843-9a8c-548ba62bc8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 d664c3bf-88a2-4869-9e51-5ad8b21ca8e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 d10b1e14-6a43-465f-a121-3c3cea4b1c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 fdc43e35-fdfc-4fd1-b1e4-600b54bdf358)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE267;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2839;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #639 4c27fe69-f4cc-44cc-94be-d582804e027b)");
unit.assert_eq16(16'hE267, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #639 e198b42a-cdc3-4b11-b057-67a06dd818f0)");
unit.assert_eq16(16'h2839, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #639 e9c792e0-64cd-41b2-8c64-626cd24f9824)");
unit.assert_eq16(16'hB7B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #639 616d9345-158b-4056-893a-0eeb4224f3c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 72ebe315-5eb7-4486-a985-3f1e24de9a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 a572db9e-59f9-43f9-b7ad-94f227401220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 81b49b02-4aa1-4162-b585-0662344b311b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 22c7b552-939f-413c-a092-d375acf4611b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 ed5186a8-9204-4246-8075-b5805aa18f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 5fc751cd-24f2-4436-92c8-c8d7d73fe2c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8137;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5975;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0952;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #640 1b98fa48-d658-4eaa-a6bc-588b1438c00b)");
unit.assert_eq16(16'h8137, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #640 1c04b217-de46-4efc-8f60-393c6d6dde20)");
unit.assert_eq16(16'h5975, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #640 cb236e13-2066-45c2-aeef-d3063b636946)");
unit.assert_eq16(16'h0987, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #640 60f8f4b7-2881-4d42-b444-16717750b750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 967fa31c-a3a5-4caa-8c2e-b07db4736e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 4c04d3e0-05b7-4ac6-99c7-378b6804b06e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 6b3b583e-b4e7-4a8b-b7f8-4fc6fa3a3244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 b0cfbbea-edae-4b4c-b3f6-728fefa6120b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 586a199b-5456-44c8-af4f-869514697acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 fd3c51ee-d275-4b36-a5c5-b17e00736110)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCCF0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF20B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #641 4fa7d102-7c4b-4b0e-9781-f200f7a19da3)");
unit.assert_eq16(16'hCCF0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #641 d508ab57-6e01-4696-ba6c-0448ecf7d1ef)");
unit.assert_eq16(16'hF20B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #641 a4a4ed39-3798-4283-aaf7-18a233cb65cb)");
unit.assert_eq16(16'h0EC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #641 3809a19b-2325-482d-bb76-7930b11992b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 1bff656e-8f02-402a-a60f-d7460bbde9c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 fc0e4e4c-fb5b-4f7a-87b2-1f00dbd99cc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 04a01615-f287-46c2-8ce3-8f818c95a5ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 26174ea2-f143-4321-aa2c-e10fdf12f0f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 7bac2307-b73a-498c-9132-f5a19c591f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 ed101d40-55fb-485a-b20c-35580144b51c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4467;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #642 37746c94-9f0c-40ed-b96c-384f757fbbe8)");
unit.assert_eq16(16'h0A44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #642 d18bc2de-c5ba-4c2f-9503-2e45c137e6bf)");
unit.assert_eq16(16'h4467, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #642 a66faddc-da17-46da-b0cb-5282a26bc55b)");
unit.assert_eq16(16'h0E8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #642 4235fd18-118e-445e-aee7-febc65be1432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 1d865571-67cd-481b-afcc-5142694c843a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 d6ab3ea8-83e2-46e6-ba76-62dde59fffe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 9aeb3aed-0643-42a7-b299-4232411565b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 a104b3a6-5d34-4d2e-847e-6c02223b0723)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 8074e3de-9694-439a-acb6-82ad6278294a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 4aa65b0b-645f-4ccf-bd2a-68b27059f621)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8577;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #643 ba3aac5d-3984-484e-ae90-7681141fa177)");
unit.assert_eq16(16'h72BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #643 a92e1ab1-931a-4d7a-b2c7-4874583ad91b)");
unit.assert_eq16(16'h8577, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #643 f969925c-7aa4-46fa-9bf7-07ae911260b3)");
unit.assert_eq16(16'h0B58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #643 7eb31be1-74b2-45cc-abc3-429680ff2762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 4ff34718-7c99-468e-b57f-2214cc1e7a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 f3cc1d35-10db-40d0-b63c-14ac902e3b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 ba7ab360-7a2e-4e39-8296-a143c9be1106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 697d0bcd-bb90-4d07-bbaf-0db187afeca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 9212549c-d1d3-4f58-986a-f6f3a99a4aae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 76353f11-3a4f-43cd-84ea-514d59d88a8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF5B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6ED1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h085D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #644 2870ad36-2180-4565-91f9-7bcba8fc3f5f)");
unit.assert_eq16(16'hF5B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #644 433e289b-686d-4356-bc15-507cb004e487)");
unit.assert_eq16(16'h6ED1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #644 1575be82-0c50-4819-ab5e-fbe39218dbc3)");
unit.assert_eq16(16'h08CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #644 5518bae7-ce2e-4734-83d9-8824176e78a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 8ee1076b-653c-46a2-a570-ff7ea796e5ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 dad84c3d-b28d-4aab-9592-f85019295a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 f21d4cb4-ea8e-4269-8faa-1f0c493cc9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 33701984-709d-42d7-9abe-03861917d2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 fbd45911-2119-45f3-8ae6-20d089e54133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 b2f0cf56-eb50-426a-9ef9-4e3aae7a0a32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8A27;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h829C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0203;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #645 f04632d9-ff79-4425-9794-fa23b18e1568)");
unit.assert_eq16(16'h8A27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #645 42588513-eb5c-4249-a1b5-e016d3726bb3)");
unit.assert_eq16(16'h829C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #645 5966da1c-b01f-4390-8fce-38dd89efc348)");
unit.assert_eq16(16'h0261, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #645 1d934531-743c-414d-9444-f84d1c63089d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 7f0a4bbe-2b51-4262-b4ec-77339e693d9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 35c57d0d-0f9c-4679-823b-14c3a6b4ef7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 321f78e5-f369-4e88-af28-8e77459f9dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 485cdd99-2ed0-44a0-a528-6070f1a2773d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 fe9a3acd-3e16-41e0-a286-b058648e9200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 5feecc2b-c246-479f-b49e-b84e5f25d846)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC78E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6DE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #646 f03fc2ab-171a-41f9-819a-96ccdd6d2056)");
unit.assert_eq16(16'hC78E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #646 6a98f9a7-5226-4bbd-9b82-1be295cee6e4)");
unit.assert_eq16(16'h6DE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #646 35bfdde3-0a84-4038-a297-1b91395096f3)");
unit.assert_eq16(16'h0C8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #646 896dbef9-1b9b-4f81-8965-36c517772f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 931bb9c7-4e4e-4da7-9e87-a3210fbca59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 fff5cf70-d076-4256-ab45-ca316a058ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 6f3a428a-11c2-4a68-8bde-ec503466c929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 743b8c16-6d08-4a54-acff-c430adb0c895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 455437d6-de98-4082-941a-452fe2c42b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 26f41f96-ba4f-4b94-861b-e658507fdd87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8DF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBA0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #647 87d4c2e3-9d86-4af8-8160-a81c2fda1a1b)");
unit.assert_eq16(16'hB8DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #647 7c8026f3-f4f2-4b37-982f-5d60b3db3626)");
unit.assert_eq16(16'hEBA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #647 911ff931-eb09-4d8a-beca-39f46489a9bf)");
unit.assert_eq16(16'h0ED9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #647 1eaf29c5-0978-4eb8-992d-85e3fb3adca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 e1212291-2bb9-475f-b4da-c888a4c896da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 27151bf3-0369-4bc2-94ca-dda1ff27ab94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 285e7da3-10a8-4700-82c5-f429ff527805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 4fe960be-4a15-4c68-9560-200d289a193e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 d2bb4ec3-27b1-4c7a-a740-01ebdee949eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 02495bdb-10aa-4a3a-b8a9-88369a9cf98a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8E3A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD606;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0556;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #648 f9737c8b-edd9-4a3a-a3f5-fc932e0f39e9)");
unit.assert_eq16(16'h8E3A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #648 47c4190d-36b5-429d-b683-10d019fa5d13)");
unit.assert_eq16(16'hD606, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #648 1cf35483-4e50-4a45-aa4d-ba23fbf9a8eb)");
unit.assert_eq16(16'h0569, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #648 e3c8a034-bba6-4497-b2b6-1b9cb84e2da4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 a12e18cc-73da-4cb1-9195-12fc8e0e94c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 86c6f225-6126-4c9e-9ab9-b5f8179570c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 ffe7b792-d461-4a0f-b7c0-56498b877f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 2f562eb4-3d5c-48c1-ae5a-ebdec21ed4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 37668e22-6cea-4e5d-9fd6-5a974e7cf670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 216d482b-a7d2-4273-b90c-b0c4880c91d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2C71;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC7F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #649 1668c669-7dee-41d8-abbf-fc7995070a9a)");
unit.assert_eq16(16'h2C71, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #649 3b7c9c6a-bb90-49ca-8c79-dda513eb5b6e)");
unit.assert_eq16(16'hC7F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #649 287c5d41-ed82-4cfb-8b5b-4aa56c308183)");
unit.assert_eq16(16'h0976, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #649 915389e9-5822-429f-bd36-4756fac82a3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 b09e09d6-e643-4ce1-a8fb-029f0a14b787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 b8b088d4-eea8-4365-96b3-7a907c883162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 8582cf38-7c01-4dfb-b2a8-09384ca8438f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 14fe9c2c-3943-43e6-81c5-2d9025edcd4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 cfe0cad7-5f2c-48aa-9486-e9885b9acd9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 da233380-643c-41c3-ba94-feee0bc314cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h579A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #650 a03a1c7d-ce68-434b-abc2-60587e7021e6)");
unit.assert_eq16(16'h579A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #650 058a8ae4-adbd-48df-94cd-b2e32e314de7)");
unit.assert_eq16(16'h4D0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #650 dbe9847f-4074-42e5-80da-dfab87f3beaf)");
unit.assert_eq16(16'h0FD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #650 4ed5b529-52ed-4d51-9e5d-840df7bc1ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 d6f66569-8867-4512-82d9-c0d2502c5cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 982253f0-cef0-4af4-8986-8755901d0741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 0dee4132-9187-46c9-96b6-91851170b541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 77134d0b-d38a-472d-b1c7-ec4ea35450a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 a0314531-895c-4269-93d3-2cacd4649e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 82478053-83a9-4e5c-a4bc-51710e1a901e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2BF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9985;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #651 9108c043-8f88-425f-9b75-ad7983a0f635)");
unit.assert_eq16(16'h2BF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #651 c5fdb3fe-393e-4f96-8aa9-7d53d718ba92)");
unit.assert_eq16(16'h9985, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #651 a9e2f2ef-9f7a-40de-865e-8c3fe0e5731e)");
unit.assert_eq16(16'h071B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #651 d2a0522d-109a-4ca3-bf6c-a28ba21ead3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 dd14b2ca-344a-4d39-9cc4-2745849ef3d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 7ef310cd-f9e0-41ba-9807-e150c81d8f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 7205ef90-f980-4bb5-9332-84ba98e9280c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 f7f4f8f5-16d5-4dd9-a652-74aea3ad7c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 daf76594-91c8-4589-80b0-c7ad8f8653f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 d5c6167f-5d8b-4e37-8cb7-5a14c7bc5602)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF161;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDDEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #652 c88dbce7-a35c-4d33-a58c-89d21ae815a4)");
unit.assert_eq16(16'hF161, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #652 9924718a-4ca8-4aed-863c-330416ba0a27)");
unit.assert_eq16(16'hDDEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #652 6b4ea007-78b0-4d9e-95b5-84adbd62e736)");
unit.assert_eq16(16'h0EB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #652 1575d4ba-118d-4b11-8d08-1be02344621d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 1f78d708-625d-49c7-8df0-0571ca2f1c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 e56cbb20-d901-4e85-9462-cb3351026951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 9f62883d-5f7c-4de8-9b07-108ba816dc49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 1794613d-9751-4516-aa3f-1a9fdc47a8c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 ab0716d4-c130-4736-b0f8-997c9f5d5dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 c8af7108-3eeb-4d8e-b97f-0dd0ba86e802)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h78CD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2C77;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h069D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #653 60c5462f-5425-4dc2-812d-06606e4be6b0)");
unit.assert_eq16(16'h78CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #653 fa21886e-4f58-47e0-a8c5-ca161e9e7d15)");
unit.assert_eq16(16'h2C77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #653 fb5aec80-6e8a-4121-a908-f52b06ed5843)");
unit.assert_eq16(16'h06AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #653 a8c8f160-96b0-4949-be79-c25a2b6e9395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 b7cadc09-d8a1-453b-9dcc-e20cc074431a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 ccc40181-3dd7-4ecc-9d8b-96517c899c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 ac70e21f-286a-44dd-b66f-0e8d0c892c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 d6f61cff-2432-4f8a-84a2-abf2cfeb87de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 ee49727a-eada-4d90-b315-7ea0896c9038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 d885aa94-c57d-4435-9c99-e29680e2334b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7618;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4530;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #654 dcd66dd6-8a5e-4269-b4ad-0dccf4517c98)");
unit.assert_eq16(16'h7618, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #654 288c069f-b546-4a55-8434-eb3c8d1eb0f7)");
unit.assert_eq16(16'h4530, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #654 503742db-d8f5-435e-9adb-5349f8d167d4)");
unit.assert_eq16(16'h0DE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #654 bae7cdeb-28ef-4351-9232-983ab5391cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 4c99c3df-d9ed-41e7-8ce3-15a73ccf3687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 11ff13ba-3a56-4817-847d-ddb76f45cdb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 d61a51bc-64da-4dd2-b136-2f6a4c3df89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 bd284932-15dc-49ac-a04a-6f83a6c89ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 83e893a3-188d-4a1a-a618-3a6393f20999)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 8ba64a46-1214-4949-b526-913f18038a7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEC4A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #655 2c1ee557-f707-4e8e-8a23-7e97b9fd1b6b)");
unit.assert_eq16(16'hC9E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #655 b693f1f6-b330-4c64-b4bb-719d2974d005)");
unit.assert_eq16(16'hEC4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #655 deadbb7f-1177-4108-b5bf-ea03825d80fd)");
unit.assert_eq16(16'h00C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #655 c96cb5e2-587a-4a93-91e9-153f7d7c3009)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 fffd9787-0b47-429f-9cc6-c5836aea9ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 fad7b3a5-2234-4702-b429-98b868c295c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 be86b64c-6a58-4177-8904-26c314f4b556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 310f5aba-bb55-4493-b08e-75f9296bd35a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 81a64c53-429a-44ad-9e5e-24f133b7aff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 0bed5825-8408-4cd6-8f9d-8620438c72e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h107A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEB2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0223;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #656 21020d65-f411-4f34-989b-41ebbab810c5)");
unit.assert_eq16(16'h107A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #656 e17e14d8-225b-4b0a-8f5e-64431b184a62)");
unit.assert_eq16(16'hEB2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #656 aef8f94b-39e5-41bf-ba15-70b6725321c9)");
unit.assert_eq16(16'h0202, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #656 535384bc-9503-46f8-8940-5fefbe05b364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 c6d5f04f-f6f3-4ad2-8ad2-eae282e743d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 76c62c90-07d4-454f-a7e3-5f7780ecdd18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 29ac0c7c-6cb6-4739-b841-08725f3c2483)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 14bf91f4-47e6-4ede-b9d5-0b36cf2275af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 bd8d2f3e-0985-462a-807c-41de6f766d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 7b0032d3-6755-45fe-b661-236776b56938)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF28C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0376;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0657;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #657 9fd676b4-d460-438b-9bc7-8973953005f3)");
unit.assert_eq16(16'hF28C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #657 c656f4a7-837a-43fb-afed-81009d2e8565)");
unit.assert_eq16(16'h0376, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #657 3d527027-a6ea-47ed-9c95-95d0753b789a)");
unit.assert_eq16(16'h0620, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #657 1e98e0f7-55e7-431c-8828-fe8b3b041aba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 70856e20-0900-434d-b43b-8f40dff3e64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 f5a6d3fe-8ae1-4e05-b0b7-96d6076bfddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 28c2f54a-e9cb-429f-afb7-35cc3d445b53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 4a1fcd47-85a1-4777-8248-9467c7c76c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 26c1599a-c8ae-4f9b-831f-fedfededaaac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 31b7c534-0b08-4c10-a436-6da633347341)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h843C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBF14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #658 bb5525e9-6b02-4798-a00a-6b2e6196b658)");
unit.assert_eq16(16'h843C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #658 94483239-5f70-407f-8669-28878639f4a2)");
unit.assert_eq16(16'hBF14, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #658 c0a7c5f9-c1ff-4944-ae1e-dce1a6a5600c)");
unit.assert_eq16(16'h0010, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #658 f56b5a68-b967-43a7-9c2b-7736f5b0e411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 55bcb6bc-2b45-44d2-84ac-483a3165365d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 4d40ba12-5f40-4776-91cf-8e6e954f8cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 4b98a7d4-5910-4887-b51d-67fb7fe48f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 757033d6-fb3b-4275-b2e2-4e27fc22e8da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 1d5a21f4-1e74-407b-b0f4-2dd5c05ddb05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 a8f1f98d-6963-4c9a-bab5-c273b6b6af37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4498;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9E11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #659 004bb00e-33b0-4614-a9a8-11e0c27aa712)");
unit.assert_eq16(16'h4498, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #659 d530a544-b5de-43b7-bef5-86d79a90d8aa)");
unit.assert_eq16(16'h9E11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #659 2cd7cf8a-8372-4975-bb65-892d3a15531e)");
unit.assert_eq16(16'h09CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #659 6d3cae06-3fc7-4e50-87ef-733c38ca8eab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 2f9a7983-f108-4ff1-a2aa-43bd6146cdec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 85587260-d8ed-4810-ab0c-f296671dae6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 6921a6aa-adee-43ad-85b1-4fb355e89ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 027451a2-c318-49db-897e-3e763c51c227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 7f799334-9a9b-4f20-8f7d-dc839cf2d429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 e910df9c-7153-49dc-8176-0481db030ff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h26A4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7EFC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #660 6bbb0ec8-bf1f-4055-b38a-2425eaa868a0)");
unit.assert_eq16(16'h26A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #660 6ba8d1ab-6b30-4d05-8835-0efdf01aa901)");
unit.assert_eq16(16'h7EFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #660 d57dd824-9bb5-4d2e-bbef-d56331608878)");
unit.assert_eq16(16'h0F95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #660 0ba69e8f-8e50-4428-88de-b8ba296ed7ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 79e7db34-d9e9-4c64-a209-5fff4cbaf4fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 2019f1b1-c1d1-4d8c-b272-028cf8e35769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 3587ea06-8069-4c2f-ac5a-4b13616a0386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 23df7ebf-a322-4860-a6bf-b37b527a6645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 32ae1cbf-3418-4626-a3d3-68df20afce7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 e54dcc40-e8f1-496a-885e-a81df060cc01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h162E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #661 315c40ae-1c01-42f2-a819-297eac797290)");
unit.assert_eq16(16'hD6C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #661 8873de4d-811e-4eac-a830-7c54df384cf7)");
unit.assert_eq16(16'h162E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #661 92df64f7-645a-4a4e-8972-78d5cce43558)");
unit.assert_eq16(16'h0DD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #661 08169553-cbcf-47a9-a163-f009032516c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 3e8e154f-0f1d-4ef8-94cc-fa344febb9dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 8ce48fb9-aeb2-4b99-86e0-012689bd65df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 02ece0ae-13ab-4eb0-93b2-2c465f309651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 f8a753d5-d913-4f8c-bfff-8eed58675b05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 20a20a1f-f028-4043-b14d-766535ef5035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 beaa7eef-7855-4718-8e39-8c47bee4f7d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCD79;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h272D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #662 72f1ed0e-a06b-42e1-9f2f-733cd1d66c47)");
unit.assert_eq16(16'hCD79, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #662 ee8a8600-db1f-435c-9ac7-5a417e1ada81)");
unit.assert_eq16(16'h272D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #662 f5724f0c-c09d-43ac-90ac-842d41b593ad)");
unit.assert_eq16(16'h0275, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #662 a6bde415-330f-4b5d-9124-479e5671fcb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 56fd86b8-918b-4132-99ce-252c76b6d558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 cf79e235-18e3-4a2b-a5a0-6a3d31224f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 d9ce7f1f-6e67-4fb0-9438-c5cc23182bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 ab95d8de-f6eb-4f2f-bf48-628bf2456c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 2c9dd770-a98e-4e17-8d16-badd7eb59b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 06eab7b0-a15c-4174-a239-3cfc3eef5177)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC3E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA143;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #663 7cb17cf7-51fb-4988-9c0c-350ef2ff9c4d)");
unit.assert_eq16(16'hC3E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #663 92a950ba-d3b6-4080-a142-d5040cf8d66c)");
unit.assert_eq16(16'hA143, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #663 0cf31a4e-4c4a-465e-8616-b9f6bef8925c)");
unit.assert_eq16(16'h0ED6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #663 20903044-1571-4695-b807-a9a456f117a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 91c7fb14-08e1-4611-b551-9c73e2d587dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 cb59e384-8e5b-4f99-aefd-1d6c14312953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 9ddab9f6-b76d-4d98-a3f4-df720098a121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 af9e74f2-064a-4c61-9519-cc11fc363889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 6611ddf0-8641-4bc1-893f-c7011fd075ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 2cf275ff-96c7-4b69-80c6-804f2ee019b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6AB5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h055D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #664 ec66b9c7-5e58-4517-892b-5bd36076a990)");
unit.assert_eq16(16'h2A5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #664 44abb235-15c3-4c35-b4e9-ec365209508c)");
unit.assert_eq16(16'h6AB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #664 7b30cee1-ef34-4a6a-8153-b3d1f7b3e25e)");
unit.assert_eq16(16'h0574, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #664 7a329c7c-89d5-471b-bd4a-ad1e2a902d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 96982428-b4cf-44c3-b856-f7ca6897f526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 14b8a258-49a2-41aa-907a-4970b1243b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 20c551b8-6a83-4393-b8d7-61cca6366989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 0cc1acfe-e51b-47a9-aa01-44e72d60d770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 4ebdcdb4-5282-42fa-942b-20feae308b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 588ae7f9-aa09-4f27-be9e-1e19134f7983)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC2D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E1B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #665 f897f07f-7542-4b48-97c0-1623f9c81748)");
unit.assert_eq16(16'hC2D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #665 68a31d4c-4c23-45be-8d26-b4ff96ec2c20)");
unit.assert_eq16(16'h7E1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #665 e6a06dff-3d02-4bf9-ae22-700721a302dc)");
unit.assert_eq16(16'h087F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #665 f7037a05-1fd7-4436-baa8-dbda1a9c6ba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 cd8bf44f-9bc1-4ac9-a211-ab9107a96c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 b243fda7-ffd4-465a-a4b4-24c77fb1f6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 07f1b0ab-ec8a-407c-a109-710bc22ebc80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 c91f2bc3-c320-4556-a1de-a4214da5ea60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 b17cc1d8-a727-4ecb-8adb-1fe372d35706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 65932d74-e39a-43e8-90f1-e5ae50fa47f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC8C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFE2C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #666 5a280b3a-aa24-4714-b5db-423dd42c9998)");
unit.assert_eq16(16'hC8C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #666 bc3f34ff-8dbc-468c-a318-1de4a93d967f)");
unit.assert_eq16(16'hFE2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #666 bffce158-17ac-4ab2-b712-375b8027eef0)");
unit.assert_eq16(16'h0681, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #666 8ce500c9-5016-497f-a9df-11502dce6348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 7006c2ee-2170-4979-8d6d-dd2fa159723d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 522a97f2-18e0-4a13-8403-895a1654f75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 990831f5-6d22-459e-b62b-0e9a03bd59c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 d5fef912-42f2-4806-b85e-bf2d86e9091f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 f45856c7-c012-44c2-a6fd-85515dd905e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 6b456d7d-5db5-4ef8-a56d-8863b91ad09e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC869;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEAF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #667 24e01542-e6f6-4ffa-9ac3-74b9eebfeaf0)");
unit.assert_eq16(16'hC869, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #667 cd58ddea-7db5-4733-9c2c-a4c08d9e0ad2)");
unit.assert_eq16(16'hEAF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #667 2cacd193-a085-483c-949e-9306019f95a9)");
unit.assert_eq16(16'h0266, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #667 b6cad7af-f335-4fd7-bcea-5a650f52fa21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 c18d5a9c-f8c1-41be-9f84-981d85579536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 70948458-0d16-4559-9eff-28da57005b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 91c43a72-6aa7-4d09-a583-8db05c7cbef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 bff1d7f6-e5c1-459b-b81a-cdfc97af594b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 cb18ccdf-a5e4-438d-b948-856faa01dff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 6d9ca333-9823-4945-ad11-5c8818fa7ed9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF768;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h24A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h038F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #668 cff53ac2-4344-4424-a618-b985d9da204d)");
unit.assert_eq16(16'hF768, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #668 4b405f37-8321-4e88-8602-d3b77334d7b4)");
unit.assert_eq16(16'h24A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #668 55adf266-497e-4daf-8546-d9f67c53d7b7)");
unit.assert_eq16(16'h03A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #668 05b13cf4-cebb-474b-814a-82f2495ee1ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 6512e359-d25b-4462-992a-ff92524f310b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 827b4568-cc99-41b2-89b5-c027b28f8700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 ff16a140-b69f-45dd-99c7-5f504e160b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 a66fc13a-a83b-4987-8211-5325e08f30e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 6c09e7b4-6681-46ad-b652-a3a89599a9c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 e7b62d5b-f14c-44ef-a443-8bb43f38797b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDE87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h10B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #669 f451644b-76ff-41dd-905d-26b3b82d9d37)");
unit.assert_eq16(16'hDE87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #669 d7d468ad-ab04-4217-8e0f-87d6921a682c)");
unit.assert_eq16(16'h10B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #669 0cc516e8-b9a5-4d10-b4d6-91023778a44d)");
unit.assert_eq16(16'h08E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #669 8209986d-2ae5-4579-a84d-73f7b0268c0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 5e1e448f-0619-4baa-8f6e-2867de2ac87d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 d9f19a11-d1d1-4ace-9a25-35b5cb81337f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 93783e6c-c3bf-40d6-845f-cbd5efea340b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 6bee4b0b-485d-43d3-ad6c-a4265d735ed5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 863cac22-cac0-479a-89a5-d612cd916462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 23e07ca8-f31f-4352-af6f-d63b3cd853ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h13EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D5C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #670 4c0c9ff6-4e2c-421a-8650-ba8d07402940)");
unit.assert_eq16(16'h13EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #670 66036ed8-0816-41dc-900a-61e9f5a8e762)");
unit.assert_eq16(16'h2D5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #670 0140f414-944f-4f69-a20c-9e837ce1fcea)");
unit.assert_eq16(16'h0985, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #670 3d30a8d3-e083-4a7d-9959-c0c1e5b2af86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 90f00ee7-d316-47ba-8f88-ab6ec73a81a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 a4481f0b-27c6-4d10-ad22-5dae6066d3f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 066ee360-41c9-408c-8bd7-7db99de177b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 d6878356-303b-41ad-820c-e3cc62ab2e30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 8f4fb548-0040-4b33-9c65-8aaab9f575d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 2b715866-a084-4271-b757-397190b97136)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h163F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBFE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #671 6645fda6-fb87-4086-857c-b189b0a7078d)");
unit.assert_eq16(16'h163F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #671 7d994e74-2570-4fbf-a8fc-0dcc15274b10)");
unit.assert_eq16(16'hBFE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #671 299e3a87-2f7f-4934-bf94-1e7e4dfc2aa4)");
unit.assert_eq16(16'h0E6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #671 320da1a3-499b-4c3e-b333-381e699b0e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 4d229eea-ca41-499b-a07a-558bd846cc50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 b9b978bb-5a82-467c-9485-b6762732f72d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 82f3b70e-dfbe-4fad-b6e7-d68a52ae9f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 aab07cb4-a7e0-4c4c-bd63-cbb53205fa2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 840a5aee-bbde-43be-83a5-b65ed65a8bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 6014445d-5ea8-43be-b388-57a68e7449ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9FFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h390B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #672 6b1a9ed1-f775-4e0c-931b-ff9b9e6938bb)");
unit.assert_eq16(16'h9FFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #672 ed27069e-4d60-49e7-a9ba-88efd3caeda7)");
unit.assert_eq16(16'h390B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #672 a39fb60f-6dd6-4d51-85b0-f309d2061194)");
unit.assert_eq16(16'h0929, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #672 a7ce2634-a7ff-48a7-a0e6-4e6d1da24769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 56bf4e32-77b0-4a23-a55e-f1d4457ca1fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 c71d8eec-cb6d-41eb-8dd1-3e8a925b7f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 fcefa3e7-e0d3-4e32-973c-88edeb882414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 e9a2a186-052f-4f52-bfa0-f33953b827b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 aa81dc66-a6f1-45f4-a94a-a69e3716a9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 1692252d-c9f7-4683-b2b3-48cc11aa37b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h520A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h56F8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #673 3c7abf08-3128-49e2-bf53-9e1b709bb69c)");
unit.assert_eq16(16'h520A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #673 e42105de-9b35-43d8-9d78-5151c93cd9f1)");
unit.assert_eq16(16'h56F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #673 575179a6-d789-4157-8151-fa5e6c084906)");
unit.assert_eq16(16'h0ACA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #673 05491ff7-e625-44a1-861e-cfe5b011088d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 cfcc21b8-2ec6-483b-851e-da763971aa69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 3c50cf0b-0a2a-4e76-b481-0eadfaf7e99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 0e807786-ffb0-4427-a13a-c5f00ed964e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 5157ad1f-7dab-4500-80c1-17dcb0b365c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 79c32186-60e5-411c-86ce-265f523d7735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 2070bcf2-0b2e-418e-a73b-82d97e401888)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA8E7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB70B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h041A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #674 93dd0738-8872-494f-ac09-f9f498c7300f)");
unit.assert_eq16(16'hA8E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #674 59ec3e13-5cfe-4f3c-9834-024c7146cd6a)");
unit.assert_eq16(16'hB70B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #674 18213c13-6cb6-487b-a34f-6deb9ff6403e)");
unit.assert_eq16(16'h0452, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #674 123be2dd-6071-4d4a-917b-c08e6a9f38de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 03e1d369-1b9f-4cde-8e74-ace2524b68e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 9c90640f-ed99-4023-a266-37d39cca840f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 5b4c8561-5322-4e5c-b71d-8666ab1b32f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 830fa2c6-e042-4d17-bc73-7610a26b7d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 fef11ce7-a369-4ab1-b8a8-229b4951a5d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 6a5110d8-f727-4c93-9eed-4d652005d36f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF89C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h13B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #675 151c09c8-21fa-45c1-a9df-31a9748d1b2e)");
unit.assert_eq16(16'hF89C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #675 6e41f6ca-07db-4bb0-9909-f13f5bd6b8c9)");
unit.assert_eq16(16'h13B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #675 2d44124e-ad01-4151-849a-ab8fa819052f)");
unit.assert_eq16(16'h0CD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #675 96d2ef02-ef31-46cc-a55f-dced74297c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 3520c877-8b41-4d9f-a353-8933f5b4081a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 08a72e57-33b1-45ae-aa24-1eb70a0a9424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 f4bbe8f7-33e2-4b66-a490-1f733796cc04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 de9627af-c058-48f5-bcd8-90f0d0a7a6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 d74d87d1-98d7-4ebe-9ea5-d0cf245d67e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 6f8e871f-c076-409d-95c7-ea5d9ccb7aa4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC222;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2892;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h045C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #676 4d8aa455-f533-47be-a0bf-55aee48e4791)");
unit.assert_eq16(16'hC222, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #676 c90b3f0e-383e-4f4f-8f49-942b56c12d65)");
unit.assert_eq16(16'h2892, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #676 759e1582-4e0f-45ef-8d74-d77d5a5c34d3)");
unit.assert_eq16(16'h046E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #676 4355e92b-2bff-4b8b-82f9-67ff7635ff47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 ad463602-f244-4b06-bb4e-cb42ed1930d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 f7aee80e-b072-439c-a656-051fce944e98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 8e35aa60-c6d5-4f9a-8334-b724f0bcc420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 3d6e81cd-a054-44b3-8aaf-ea01e7fb7bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 c0766ed4-401e-4180-bc19-31be0a132ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 fb3bacda-1737-4128-9214-ba7a3dab7067)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC84F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4018;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #677 751f5955-ea9b-4666-9739-26f804ec29bd)");
unit.assert_eq16(16'hC84F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #677 5e53b23a-aaaf-4264-8085-14b361eb6e6d)");
unit.assert_eq16(16'h4018, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #677 5e0e8082-3b2c-4eaf-a30e-9e0e224a1898)");
unit.assert_eq16(16'h0F6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #677 dbd9b0e8-0f0c-470c-8e41-d0d7f6f413ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 d043e1ff-9fdb-4e3b-86a6-fe5ef083fdab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 fc00711f-db24-4f63-ae59-8cedb6938b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 1ace504e-9551-4660-96bf-676eaad55bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 40e2a41a-db9e-4d21-b205-c9d7b6d542cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 7af4f549-3ecd-4309-b32e-b9c8c0429f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 c47b20ab-b25a-44d0-8d75-79f3ec64cf44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5A0B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC519;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #678 24ec81ac-c3db-4a23-8cee-8a8b9fcf7ece)");
unit.assert_eq16(16'h5A0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #678 7310682d-2040-4e62-b194-418af501e9ef)");
unit.assert_eq16(16'hC519, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #678 c840aecd-57da-42fc-9cdf-c6b7891eee24)");
unit.assert_eq16(16'h0E94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #678 751cfda2-330a-465c-aa60-6332506db860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 ad370f83-5eda-40c7-a7d7-dd8186d10547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 41d5f476-96ae-482c-ab95-2f64d6a3e606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 8907dd84-d644-4587-bb49-b965a1eae1f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 746a9f73-7fb5-4f98-9524-6ff6f92487a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 7237a817-ba21-45fd-abcf-6ae4ecd63f22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 947886f8-ccee-4dab-b982-db2e5310827a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC5B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h35A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #679 9d067690-5638-45f1-816a-b66ef773bf09)");
unit.assert_eq16(16'hFC5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #679 6b115797-2b29-459a-a227-b761437fe592)");
unit.assert_eq16(16'h35A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #679 16a5709c-c765-4629-8e5c-107593588929)");
unit.assert_eq16(16'h08D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #679 ab94fedb-67ed-4f48-ba43-46182e66e967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 8ef98beb-c512-4e19-9418-fa22a1ecad18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 d3bee6cf-937f-4cc5-bfd6-da3362bc0401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 a4b8ec97-4846-4869-8a9d-02a7f32c760e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 68e1ac30-9bef-451d-be63-5aee05803b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 f6ebd29a-8d21-4505-8fa5-ed700a73c6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 1a850dc8-7905-42b6-aa76-bbaff34dcaa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAC0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3EF4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #680 7174ef02-2f3e-4bb3-85b2-e9d3a928d771)");
unit.assert_eq16(16'hAC0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #680 93270a27-3beb-47ec-8380-6863966477fa)");
unit.assert_eq16(16'h3EF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #680 b2502c45-6f95-43db-b8c5-88384ac79761)");
unit.assert_eq16(16'h0960, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #680 25a21a92-5b98-4152-a44a-d9e38a47f47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 c3b347fd-8829-4098-9bac-c802ae4c2456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 6e889356-a52e-45be-ad1b-1cf4f530fda5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 73c4d880-9fe3-4101-b665-fa5c89418718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 997c91b2-bfcd-482f-84ea-9e5f4ef1b31f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 5c7491de-df26-4cf8-b2e1-596c20fbcc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 97870a69-be7e-4b22-bbfc-af0d6e5e9291)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4034;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF345;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0955;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #681 00a9ae13-2b43-4ecf-b874-e53bcda951f0)");
unit.assert_eq16(16'h4034, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #681 3f11edbb-cb28-4bba-a17b-c35fbe945ad8)");
unit.assert_eq16(16'hF345, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #681 eff20f2b-694e-49fe-952b-2b8545366a25)");
unit.assert_eq16(16'h09B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #681 748067de-1246-4375-933d-cd00e5ba44af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 ccf9ea9f-e3e1-4ad4-91a5-00ac87689e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 15db2bb1-d586-4f27-9888-8837f9cfcde0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 c0673a6a-2f35-47b2-acc9-93048776c035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 de71f3a5-7aaf-4695-ac30-87cea43fe28c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 ebf2ff0b-718f-4e8c-aa75-283d4ed4020d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 af928ad9-9a1b-4177-82f1-913da8495f47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9C2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h03AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #682 dce47435-18f5-4652-b7e5-b4344fb94e1d)");
unit.assert_eq16(16'h9C2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #682 2b7b07ed-2b12-4ae6-9881-45bfc6695ebb)");
unit.assert_eq16(16'h03AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #682 7420d9dc-0181-47b8-8dd5-d94190ad3a3e)");
unit.assert_eq16(16'h0815, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #682 e6c50ed0-4496-4efe-9a21-3c0ed1b4ffd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 87ed9407-a4d9-474e-89dc-ac1bf3e328d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 e4ce1fe2-b2b1-4cc2-b41e-7b8a938fb6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 1579a78f-c74a-4cc8-83e2-d8094f4fad15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 971efd75-bd0b-4ecb-ab52-ef8d7e01e3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 15d0fe1a-f773-432d-a42b-cef78de927e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 0c4184b6-296b-42b9-b6dd-a874507718a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2544;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEDB3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0040;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #683 c3a603e2-8ba9-46d2-8655-dd570693446b)");
unit.assert_eq16(16'h2544, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #683 3928a05b-b5b3-40ce-b098-1e6cd3d206f7)");
unit.assert_eq16(16'hEDB3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #683 d2e2840c-9b75-429b-b3ea-ad6b419ea9e2)");
unit.assert_eq16(16'h007D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #683 869ed1a4-bf4b-47e3-8cea-15bfaefa1790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 5ccceae0-cf53-47ce-93a2-9f00098f7cea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 90bb98b9-297b-4eb2-917e-235734788a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 11b9652b-183a-4162-aebe-2feb81364fe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 e62532b9-a7f3-4e70-9ed3-ce9a997d9f65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 0f57bd01-5abb-4780-8f0a-42fb33321e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 65c133a8-ef02-41b9-8923-a2777cc0ddde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB320;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8531;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h099B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #684 3924bc93-84b7-40cd-ad2a-869058b5c538)");
unit.assert_eq16(16'hB320, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #684 6f1882a5-f433-495c-a449-fe54e58dcd29)");
unit.assert_eq16(16'h8531, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #684 414d4dde-6fa8-44c0-b1c1-98f4d3773ebe)");
unit.assert_eq16(16'h09E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #684 40d2ee74-640c-41e3-960c-338af624098d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 619334ee-2b54-40a4-9bc9-132f6717d2ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 754b3b13-5b92-404f-ba36-a284c0498c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 02e540f5-b24d-4f51-8d15-6b0faaa7df7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 ec71f6b1-bc83-47c8-aff6-13c3146fce9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 c24aaeb4-eb4a-4b2c-a158-59b6a2668c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 0a81c057-acc5-4de0-a48f-ccd898169b97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFFA3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD085;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #685 025a40ab-c29e-44fa-98b1-3f6a0571259b)");
unit.assert_eq16(16'hFFA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #685 67fa09b1-f728-4826-acf1-a6959b6b7130)");
unit.assert_eq16(16'hD085, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #685 35a72454-129b-426e-9ff7-74d9047a3973)");
unit.assert_eq16(16'h0C0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #685 52e17996-fd42-40a9-ba2f-664687bf69bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 c121cb20-4180-4497-a9ff-592d31ff0003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 d83ff76c-e199-4a25-847d-e5fa5a552ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 a9af194a-e959-438c-8176-81d9e3285e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 b6291b63-1627-4475-a7c5-0e58fdcfadfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 8198bad1-3400-489f-87c0-65eb86ada1c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 aa880145-6b32-4efe-b591-826c648afe1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF72D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #686 c3322472-4964-44ae-aa8f-7e1be487169f)");
unit.assert_eq16(16'hF72D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #686 1956d6e8-bfff-440f-9db5-3eb543502257)");
unit.assert_eq16(16'h1B16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #686 58612fa2-3a9a-4d3c-b542-9587a7984a7d)");
unit.assert_eq16(16'h0C2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #686 a2b6f87a-6b7a-47c2-a886-bced3e5d0de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 c36d6930-d68e-42b6-bc01-a551fe85f5e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 d6cb01aa-8cbd-4b2e-a626-2859d4fdc2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 16dc314a-70a6-4792-87f2-b40f9d358002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 4bf954b2-68d4-4d9c-a355-1ae5e5d62c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 9c46bd68-c29d-4c58-a22d-96763b295532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 8315cd31-d612-447c-9945-e5a18bb9fb46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBDAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #687 9887b23d-a25e-4527-85c3-fe67a078dc36)");
unit.assert_eq16(16'hBDAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #687 647682eb-4069-4e90-becb-e81371e1e47c)");
unit.assert_eq16(16'hED95, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #687 67b9efdd-4251-48c9-b542-56d2464e478e)");
unit.assert_eq16(16'h06CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #687 4893d501-a8c3-46ab-98c8-3b74d4a974f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 aa843f57-0cff-491f-a43c-ad840fbb8b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 ca5f90a5-4509-4473-bdb1-68f0b7ce2597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 70881220-d233-4eb6-ad91-377dd0a0fc78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 7c04e410-d42d-4747-ab85-ee65c36c8d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 60d30b16-8c91-42c3-8386-72a255d7f43a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 6811e608-c2cd-492f-9526-99ce47457c74)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF438;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8641;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0590;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #688 6009f13f-a0c6-491e-98dc-b3bc4309c90c)");
unit.assert_eq16(16'hF438, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #688 0eab4222-5215-4892-b1d5-dcb92832b974)");
unit.assert_eq16(16'h8641, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #688 8cb0dd44-4b81-4f1f-9dd0-9edafd6f86a5)");
unit.assert_eq16(16'h0562, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #688 43ac98bb-3844-4e76-8019-ad6ac27978c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 9ab2c1a4-2412-48ae-a25a-f243747c6a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 f03dab26-2de6-4d76-96d1-588c1fb0fbea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 266befab-de19-4a32-a4ab-1b542c7a53a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 02b81cc3-5ae9-455f-bc23-1550345817fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 05e5b46a-854b-4964-a544-3762f68e4f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 b6da7bd1-b84e-4e90-a541-67d13fe3e521)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCCD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9734;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #689 984963e0-4a13-4a9b-8085-015b9f835b64)");
unit.assert_eq16(16'hCCD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #689 1c650bbf-83b7-4d9f-af76-d964f13c07f7)");
unit.assert_eq16(16'h9734, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #689 e7017348-9d54-4174-9338-df2a3de92e08)");
unit.assert_eq16(16'h0A73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #689 bb5ada0a-bd75-409f-be60-b56473806b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 0946e2f1-38ac-4702-a32f-0553c46b728c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 d5c05eeb-083d-4ba8-9bf8-63f2138bffb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 4e4d90ab-b79e-49f9-9c79-5cabe04c2905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 26e8fb7e-ce0d-4cd9-a78c-6012505a9e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 7b6c9c88-e2c2-4d5d-aac3-02ceb6e80351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 b1d82e4c-3e0d-4dc1-a716-a10890f06a0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5562;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0C1C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #690 35eb28e2-d84f-4b99-b008-dab274b1d61a)");
unit.assert_eq16(16'h5562, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #690 c6a2e726-e46b-4ff2-ba76-aa82e2207591)");
unit.assert_eq16(16'h0C1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #690 00846c86-393c-46e2-8af0-d6eac18dc08d)");
unit.assert_eq16(16'h0A72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #690 699c4044-0e09-4c54-9448-59e0c945a5d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 8dbe1939-7221-4447-809f-cecc600e07d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 af8ae392-b274-4bb1-9895-72b1becd6778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 111dd788-3d6e-4ccd-89b7-311cf54de2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 9e3a6123-b64d-482f-b502-3bbe159bbdbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 b3b129b9-e8c1-4cac-83cb-4999c1e9f3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 611cf13f-a693-460d-9d4f-f5d78df37533)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2874;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF739;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #691 569d9f7b-1ee8-47cf-9953-edb4e36a2758)");
unit.assert_eq16(16'h2874, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #691 f8040602-d4a1-42e6-b5a0-ecfc8ac67bca)");
unit.assert_eq16(16'hF739, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #691 81535a5b-c46b-425b-9013-9c441f709f0c)");
unit.assert_eq16(16'h0D69, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #691 dd7a8208-4c94-473a-a41b-3c9b57a88d85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 6fd0229d-6991-4eea-8e56-be5343e3d532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 a493d491-c555-4fde-9967-c9d04873e443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 a8410cef-4d70-400e-8d2b-a876672e3472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 f49aa067-45fb-4e58-bdf0-de2892f6f2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 577f3be4-ce6f-405d-b06b-0778e0215926)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 8d65c6ea-a7f2-4901-91fb-eea3393dbbef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC58;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h77EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #692 9e95a23a-000b-4b3f-a4c5-c1374544bc9d)");
unit.assert_eq16(16'hFC58, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #692 eae45a9d-ff44-431c-be8f-0537e472e985)");
unit.assert_eq16(16'h77EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #692 79499488-1996-42e2-836e-0eed6bb78299)");
unit.assert_eq16(16'h0D2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #692 fcb89eb8-3251-4b16-9261-a1ae0cdcdb0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 0c7be487-af29-4ffe-9884-c98a9c32edfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 57df5f23-2e6c-4718-9ae3-6b9dfaaf39bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 466c4258-8e4c-4abb-ba45-586a5902a826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 92782394-376f-43d6-9535-103c1256d360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 ae2f223b-087d-487a-a527-d33d711a84ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 7276147f-7852-4435-a21d-d95240b127d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0902;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8F45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h088D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #693 b674af14-7ef8-451d-b45b-8d4864f4dc37)");
unit.assert_eq16(16'h0902, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #693 38b24646-b7ed-41fc-a569-707eea7c6363)");
unit.assert_eq16(16'h8F45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #693 31b9a801-d5f7-4f35-ad3a-310012fc4788)");
unit.assert_eq16(16'h0822, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #693 57a471f1-0fe5-4661-9425-144d5253ccaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 1b363c3d-d409-4158-a239-10a69bd93c49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 5d274c7f-8148-407c-b67b-bb2610250645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 8464b5af-0034-4402-b215-9b4a5a7e34c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 b81d94a3-19e9-4e77-8bb4-2e74c1b3ac0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 9cea7e51-8ce7-4238-b4ba-69ec94556d5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 e5c9bf51-bc94-40e4-ba86-c14c0ca8ed91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD064;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0804;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #694 c184b541-9113-4860-9140-afa9d7230264)");
unit.assert_eq16(16'hD064, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #694 89d8dc78-b116-4887-8a4a-574a7bfb77a6)");
unit.assert_eq16(16'h8B68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #694 5ee4243d-0165-49c3-b768-5b9b977ed50e)");
unit.assert_eq16(16'h089A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #694 7b8f4c39-cea4-4c75-90b9-b84a5c3e27d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 79a0acd0-0e82-45a3-ad68-9563f193e85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 3c5cac71-8ba0-477b-be2c-5502a71c1b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 825910a6-1e47-44a8-8cb2-a12e0389a1b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 f7574800-f99b-4d26-bbca-7459cbb50416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 7a8a413b-1606-4be8-aba6-64c87315c1cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 baf665c9-f881-409d-a1f0-7fc575ef3d45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C22;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #695 0f0f4b76-ebf4-4f55-828a-b75ec8086d75)");
unit.assert_eq16(16'h3FF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #695 57acf24c-72b5-465e-87a8-e267394c6ffd)");
unit.assert_eq16(16'h7C22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #695 97e4797e-c555-4654-b823-fa1a7bb33c38)");
unit.assert_eq16(16'h0D13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #695 37ed3850-7eb9-4f3a-909a-0100270374c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 fb7ed0a8-673d-44e1-9051-3054eeef00cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 010b2660-f956-418b-bb02-98058415f806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 eff9f055-5461-43c1-a3b2-2b9aaea6d3f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 a95546b9-512c-4bf1-8c43-0979ce751c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 8678c122-9852-4fe7-98b2-fa0c36fbc2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 fa4104c5-2277-4902-985d-2b9d1d9df2ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD848;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h840C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #696 6cf452e3-32c2-41e7-b565-1ac6d52c3d0a)");
unit.assert_eq16(16'hD848, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #696 929143be-9160-4e6d-8c9a-66e7e4d39e20)");
unit.assert_eq16(16'h840C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #696 c7563b37-5f5a-4eaa-a5f5-04012e9dc7af)");
unit.assert_eq16(16'h0E55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #696 5522a13d-bf41-4464-a90f-5b41ce3e130d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 bbd4b636-12e9-4913-bf66-23f49a2cd632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 500a4354-31ec-46a6-b953-d24ddc0f49bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 ded9914d-f071-4c1b-a6e3-99525fd10f79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 b0221751-8977-4390-a909-dc40921109c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 8d6c5f21-bc5b-4710-9819-4a1515f54704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 dd001728-0ce7-48aa-bf8b-aeb36f0ee6d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7073;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC8DE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #697 c1dd258e-78e1-4a5e-908e-2ae9ee24e20f)");
unit.assert_eq16(16'h7073, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #697 ef529a14-6957-4764-bd47-c76a0f67c13e)");
unit.assert_eq16(16'hC8DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #697 38c70c48-340b-4980-8f7e-ba92303bceeb)");
unit.assert_eq16(16'h065D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #697 58c8609c-e1bf-428a-8080-2d711441a30c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 53deab72-42b7-4fd9-bdc8-4a23dfff500e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 68625126-0915-4b9b-b678-ccdeaf7511e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 ad9b978b-fd54-45c9-8c35-80485aebabea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 86b7c2b7-58ea-4b27-9943-c7de778ad30a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 8a2a7584-7a35-4702-ba96-5c41810761db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 76e4148d-41b6-4257-ba18-097fccc09563)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA260;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h885E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #698 fb6913ea-7a8b-4ed4-bae6-153f3e5786e4)");
unit.assert_eq16(16'hA260, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #698 ef86e5e0-9ad3-4f8f-a63c-166c0593423b)");
unit.assert_eq16(16'h885E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #698 cb8ded95-3ed8-4864-a2bd-963ccf1f2629)");
unit.assert_eq16(16'h0F9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #698 211a8bf4-f6c0-4040-a18d-819f5bedc8db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 1001e011-7c17-43a3-84a2-8589bb92526b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 36500705-584c-4453-b123-340892bb62bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 f2ee9c07-0b02-4e87-9fb1-1539a38a552b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 42cce548-acf3-4f16-94a1-832b0a36eebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 9aaa69c8-6d21-4f03-9121-9dbceeb5e8c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 ccc18a9e-451e-4e3b-9ff2-b93d1fe37c7d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h939A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0591;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #699 ae5aa2b1-e63d-47ef-a26b-ae02047776bc)");
unit.assert_eq16(16'h939A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #699 f7ef95ee-5d3e-42be-847e-6a20b3bfa1b4)");
unit.assert_eq16(16'h2D32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #699 b98c68da-8ecf-4006-96f7-d945d966494b)");
unit.assert_eq16(16'h0581, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #699 83e1e63d-4142-4bb4-a9b6-a2da4350d07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 4f490120-0402-4ad5-a171-f86d2e84138c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 271539ef-dff7-4e2e-972c-78a502dd9093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 26d69b2b-ab17-4462-b3c9-ba342c2edf1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 84c910d9-5ac0-49e6-9a04-36c2dd755f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 982c406c-5873-4e6d-9a36-e6459eb40929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 f30b5407-722b-4c4c-9b26-10b52b7ab26d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8290;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5B94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #700 56fa89f0-fd91-4ea9-890a-e00b1c165e67)");
unit.assert_eq16(16'h8290, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #700 be0ba6a4-e354-4df6-980c-7561d025e763)");
unit.assert_eq16(16'h5B94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #700 5598b037-202b-4b55-9980-060c6d0478a9)");
unit.assert_eq16(16'h0ECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #700 616ae9a1-7a5c-4086-9010-7f507b26e078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 a5c637ea-78f8-4825-aeab-538c2e3228f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 435a1530-5e4b-43e1-afc1-5d17cc26a33f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 992247d9-c5c2-4e33-8fc2-e1e570b9fc03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 30bbc2ac-b179-4aac-a735-b3fa092f5e55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 f8dda18b-79b8-48fe-897a-149ba5f6d1fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 97287999-93b8-419a-96f7-c841ffb22690)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC393;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0DC8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0897;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #701 02d87197-96c4-4699-a5f2-59373d7444f6)");
unit.assert_eq16(16'hC393, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #701 ce69d28a-ba52-4cae-8afc-15ddf06562e3)");
unit.assert_eq16(16'h0DC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #701 d677341f-899f-4ab1-ad0d-08ab5e1d203d)");
unit.assert_eq16(16'h08E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #701 61d48cb7-11f8-44eb-bd75-c17f7a907239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 8657f853-7349-45f5-83cf-f54a4d3e0531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 160a9f48-5bcf-4222-98bd-4cc44d14d5ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 66b1b757-4540-4658-8330-d27cb6a54afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 e786316c-9220-4445-a17f-b58fbb3c09e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 3992372d-8772-498c-aa65-1efa06a1f5c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 77c97574-9276-4b49-aa12-3ac5b97f3521)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1C01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFE3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #702 af3efc64-2b22-4808-bc94-6551f5ee7eb1)");
unit.assert_eq16(16'h1C01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #702 7dd140b8-3a48-4c0a-8e2d-b75ca40fcafb)");
unit.assert_eq16(16'hFE3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #702 fc287e27-35bf-47b8-9b64-45dd2ec27789)");
unit.assert_eq16(16'h0C78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #702 bec3fcc3-1822-489f-afb6-3bedc65a2373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 1f809098-bbfe-4333-88dc-3a48edacca4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 7eec6c16-bae5-4f75-9267-17c6d92ca843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 06e7c4e5-e968-4427-b314-817e5b1f261b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 53e8963c-1429-4140-8b44-61d66466fceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 e3a17c2b-608c-4dee-ac7a-fe54ba46e4e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 547d9c6c-b3b5-45a3-87e9-bf2c6b141656)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h38AF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #703 dad147bc-ba53-44ef-b347-50f1431c66f9)");
unit.assert_eq16(16'h38AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #703 b5c34de4-9d4c-4df0-8e06-4416aed8383c)");
unit.assert_eq16(16'h6C04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #703 ed64063b-a577-46a0-8ebc-f9804078972e)");
unit.assert_eq16(16'h0DB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #703 68e69cb8-bca7-47f9-a000-bdecb052a631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 c658b7f5-73a9-41a7-8b47-b7af5eddfbd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 32e08f37-b74b-4d8c-87bf-767e3887c060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 bf90d5ed-5880-44ea-92d2-cdf7c5d77e7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 e55d691d-add6-4949-be68-5a9fc0bc9de6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 81bd359b-5dd5-4e2d-a7ab-4d02c1a8ccf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 314fcfe4-ad39-4ef7-956c-a4469716728e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h50F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h028D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #704 22de2291-5ac7-4dd1-8ec2-77053bb73f92)");
unit.assert_eq16(16'h50F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #704 77b8b894-9aeb-4401-beee-d8197253fc18)");
unit.assert_eq16(16'h028D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #704 a6146c70-1112-40d1-9424-adde93cb63de)");
unit.assert_eq16(16'h04D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #704 16754476-c5e8-432f-906f-0e64abed991f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 4796af29-30e0-48f8-8626-f8f17c275368)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 e9901fa4-b9a6-4417-8587-bedf8f9c3761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 68f7d344-b535-40e8-94c0-2b8f8f8a767e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 dbc2e12b-88de-4939-8281-8360865870eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 8fa4a4d6-6ab8-4679-b3c9-be69ced96313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 00847e42-0240-48ee-ba9c-69571453657f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA8A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h424B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #705 42ee9e34-f13a-4fff-9881-d08b1c1914fc)");
unit.assert_eq16(16'hAA8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #705 2ec74bb5-6b5b-4ac0-bda0-ff83e62ec547)");
unit.assert_eq16(16'h424B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #705 0e5bcf15-d3d5-42de-9a9c-2c7bf1ea52f3)");
unit.assert_eq16(16'h0AB0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #705 af402ea9-9f91-405f-982a-ebaeec6930a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 43848394-a5ea-47ae-851a-b799136cbde4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 b7c258e7-ba6c-4a54-8498-5d09553ac8f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 11f4a89d-ff86-4bef-8c07-25543d522fdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 27299403-76db-4708-bddd-827c3d28d12a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 ff3f1bae-3cfd-4209-8b72-512a1b2a1b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 3fede69e-d414-41b5-9ed3-f5a2d9639c55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE2D0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h64F6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0681;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #706 23419b5d-f56d-486a-998e-f422cb8aab35)");
unit.assert_eq16(16'hE2D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #706 7bdc036c-8645-41e4-b634-99970a7974f0)");
unit.assert_eq16(16'h64F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #706 88e0b700-db1c-452f-8ab7-aa9f77d9c418)");
unit.assert_eq16(16'h066F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #706 1e156709-2165-460a-a57f-da6a9764dfd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 91c468b9-cb8a-4eb7-918c-35a204de0118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 62ffb95c-9a4b-4889-a84c-285a1abf146f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 dd953376-beff-4bc2-9513-8fb02f62b0c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 8b2e5bc6-3f7a-4dfc-9dfb-26a5a5ffb094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 287a8ea2-84be-4deb-a89d-da5e05affbdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 f878f197-e3c0-46a4-9ab2-7f5a0d2c1126)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB8FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE1E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #707 d53b26c1-3054-4637-97f9-e09a9109bfc5)");
unit.assert_eq16(16'hB8FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #707 b1a9ea8c-3eac-462b-8dc4-0994babaace6)");
unit.assert_eq16(16'hAE1E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #707 92b6d15a-7da6-4f8d-bdaa-140a53835dbc)");
unit.assert_eq16(16'h0835, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #707 9743b4ce-f073-4b17-92ae-f4df5f82b8ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 4f7cf229-c586-488a-b43f-57d1d1f1c2f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 a18481c0-2fcf-4cc7-adee-7a40d33b52b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 006dca5d-54eb-4fb9-8d5e-584844b78214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 0c41fecc-d6c5-4e80-947b-064b39808b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 e9ba6754-ba13-491d-ba26-6e049b31b49c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 0186a049-1c45-4a68-b6fe-d9dc50decfc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8AC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F36;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #708 78f288a5-14f7-46a9-b137-bc9d9a68429f)");
unit.assert_eq16(16'h8AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #708 66c9af6d-67fd-409d-adf1-8b739144fed1)");
unit.assert_eq16(16'h3F36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #708 e7d8f56c-bbbf-49ef-8360-8e496460b8fd)");
unit.assert_eq16(16'h02C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #708 87c02a71-9a25-4383-a87c-79d997593acb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 ae8b3002-bb50-4ce9-ba9e-96a0bc63be14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 661a70ec-fd50-4bb4-9848-2ae4e37c04a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 d16a0eb6-9537-4650-ab97-2c74955da0c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 2de41099-9ed3-43b8-add4-215cdf919375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 9104bb90-f14b-4522-85c6-e71755609288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 fd05838d-e7a0-4e2c-a400-0a4d1ddec075)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h958E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD15C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #709 e590e13c-be74-4ead-8149-ce75b5226368)");
unit.assert_eq16(16'h958E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #709 dbf9a069-5172-4ead-8055-4f33f8da3058)");
unit.assert_eq16(16'hD15C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #709 1c2d1d8e-2906-4bf1-95ca-bf88c6b88f27)");
unit.assert_eq16(16'h0E2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #709 8af126bf-a132-433f-84c1-14b4ce6fb8dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 b32aff2b-908d-4512-9986-f3bec2f93aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 fc92f599-a421-4f0e-90a6-890fd0468a2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 bcb5ebcd-4f8f-48e7-b7f2-e25f6fd1c044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 8f9d01db-9356-474a-ad24-62c147c8b561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 bc553f9a-70cb-44ac-a8d4-1d27a18809a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 5f0ecb05-b9af-4d90-b422-efbb64fa56ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h67B7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE60B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #710 849a8ed3-4e1e-4885-afb8-865c5a9e40a8)");
unit.assert_eq16(16'h67B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #710 6b15de93-9d16-4e90-8918-19eddeefc9aa)");
unit.assert_eq16(16'hE60B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #710 9a111988-7d20-4dfb-9184-a31a5057e9fc)");
unit.assert_eq16(16'h0861, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #710 0aeff4be-f76c-4013-a04c-684be20ed7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 09b5651c-1f3d-444f-bee0-39c07f858fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 09c12e1d-0fa9-4528-acc2-aee170a5d04c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 d8c5f6b9-88b2-454e-bbbe-1eaacc737006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 a203e0e2-11d3-48c6-a404-4aa3d81c5699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 b5fd5a53-275d-475b-b0e2-1f4bdc8fd86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 511ffad2-df60-4ad8-bdee-bb583589c64f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB02F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0955;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #711 055cb3e8-3b20-4d8e-8aa3-bddfe25cadf8)");
unit.assert_eq16(16'hB02F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #711 6495b992-3f6a-477e-bad0-8d5e525764c3)");
unit.assert_eq16(16'hBDD6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #711 09852357-5ff9-4e4f-a283-bbb83d0d66a2)");
unit.assert_eq16(16'h09B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #711 0834c9f7-e59f-4367-994b-e4f6b1602f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 7cf456d7-4709-4e53-8398-e94cc9ff2ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 8f7e09fd-54e1-45cd-bad3-537f38012160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 8fb6699d-7ed0-4f7f-931f-795f1d7a7a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 f26ba5d5-69a1-40d6-b6b6-0cf5dd961a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 78fb44d9-53d4-4b6c-8f23-3f83d8d7ca30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 96db38aa-b196-4dd0-9654-0bbeb9ee6c1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFC41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBEE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #712 85a761fa-8255-4ca7-b3f8-542a603661a4)");
unit.assert_eq16(16'hFC41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #712 26ae806f-5429-434a-bb28-27359ad4d553)");
unit.assert_eq16(16'hBEE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #712 e8e32de2-fa51-4d23-8f61-d3a881987823)");
unit.assert_eq16(16'h08A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #712 ceab63e5-4ec2-4d5b-bcf7-dec48d412594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 1b44be2e-cbd5-4452-835c-db30d6bcf37c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 f572d84d-7c8c-490a-8753-4d52e03b2c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 ad3df48e-6a05-4235-bc06-846297b056ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 62ff4e18-6988-456e-ab2e-08c921362a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 1211d82b-6d26-4c78-bcec-639ebdb16a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 c22a70b8-faab-4da4-9477-34d90d697ca0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0B0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8D3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h062F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #713 d60a3d4d-75fc-46a3-9928-3d75c6ff3702)");
unit.assert_eq16(16'hD0B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #713 dac60475-1fb8-4bda-ba43-3aaf92c831fb)");
unit.assert_eq16(16'h8D3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #713 080f6525-cbd1-46ec-b202-3e2459471eeb)");
unit.assert_eq16(16'h0698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #713 ce25a5c7-ae59-4023-bdfb-733491ab4301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 e4795713-3b44-4f08-8c52-48872b4a3a69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 d177b6a4-e793-4340-a291-8f070de78cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 9da98f33-b190-413b-8a9a-c9a3bac804ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 4389ec70-0494-4247-96f7-0646cfeb51b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 4eedfc2a-ebed-4d23-9a4a-d48b1c1f4201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 9d095daf-b973-46a1-ab6c-9a58e6498f07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9109;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5BBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #714 c4f833ad-f192-496c-ae46-d0d7b0d4cb53)");
unit.assert_eq16(16'h9109, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #714 0f13ddb8-1b18-4487-9334-431a77e42e64)");
unit.assert_eq16(16'h5BBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #714 fb679a92-06c0-43a9-b321-cc5376c5e9a8)");
unit.assert_eq16(16'h056F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #714 1927c1e2-a9c4-46fa-98f4-15eb550f42dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 85371c39-25d5-474c-9e2b-e4238688c0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 58db328b-6534-4e2d-96b3-511fabe15074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 d8000e46-97f6-4054-91d8-988d14d540e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 5e147939-8c70-4eca-8e86-72272ce6f621)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 4cfc8320-1e73-49d8-96bc-e80e5ffbc176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 27949fd8-3018-4e14-9198-6a8af2a77b49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDD68;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h554F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #715 53854714-dca2-4429-8b48-7d43c1d8060d)");
unit.assert_eq16(16'hDD68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #715 b22b9b8f-a091-46a0-9007-b2bf80b9e166)");
unit.assert_eq16(16'h554F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #715 9d291dac-9cc2-419f-90c8-d2785256d2ef)");
unit.assert_eq16(16'h076C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #715 7272464d-9eba-4429-a5bc-5931cad1dd38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 1c85f03e-0cdc-47a6-a5f3-9cdb8bc0c62f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 6c7a57e0-b8b2-40b6-9efb-29e5005e49f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 28be7f47-7fb2-4afc-a170-7f7fa4080bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 9623f7bc-824d-4b15-8aa3-8b78f9c269ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 ef13392e-1bd9-422b-bfc5-62a04d86a0fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 da233fb7-7a8b-4348-a466-ebb9199a6870)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h52B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2D28;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #716 3afd9c5b-dfc8-4bc4-b076-4d7caac299e4)");
unit.assert_eq16(16'h52B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #716 293f32c9-0772-4968-91d2-9c4dee5ace00)");
unit.assert_eq16(16'h2D28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #716 506e2647-b1a2-469d-9d98-a58984f8b9d9)");
unit.assert_eq16(16'h0E2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #716 970e6509-a8ea-4480-9142-13c0729206b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 9a596f5d-40c1-48dd-a70f-1b1eec7d1e4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 1c1df75e-c137-4cec-9cc9-f20d5e18257c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 427ca5c9-c8dd-415a-88a7-dadf929838ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 326f0cea-c726-47cf-9bd6-ecb9b53b7f57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 8e235dbd-f71c-4d6b-a03e-fe7c464c5402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 748ceff1-5f43-4358-8f66-df14d7c7f24b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h57D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDE5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0226;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #717 6d87b898-6c1d-4636-a94a-5ecf4be8874d)");
unit.assert_eq16(16'h57D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #717 87d75d88-d462-4fa0-80c1-c44577778f61)");
unit.assert_eq16(16'hBDE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #717 325f10bc-d6fc-4784-8079-62ed91a739f9)");
unit.assert_eq16(16'h0240, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #717 eb55043f-799d-44b8-b92e-dda9b9471924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 af67356a-7add-49d9-aac0-15d9c28b7ab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 6dbc7f6c-a60d-437e-9330-746bea05b289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 4a6b41e8-8347-43c1-92e4-b9670c8f9604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 d9485061-a365-4399-a075-40023b5cf824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 2372ac5f-b6c4-4bd0-8dd3-d6cbbe012086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 06cf2b6d-d504-4413-a586-4e66e51d521d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h66D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h57CB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #718 149da8ca-3a11-4e71-9700-894fd35aba28)");
unit.assert_eq16(16'h66D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #718 04dd3250-68b0-4822-b263-7ca54a3ae559)");
unit.assert_eq16(16'h57CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #718 5646a8ab-84cb-4342-9f19-808feb8729c0)");
unit.assert_eq16(16'h0159, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #718 447dca8a-fbd5-4a90-8507-9b047d947e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 1c50cad7-cc43-4fad-bb45-318fe60971a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 a6cdd7c9-3bd2-4f72-b2f3-7d4353751768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 d6c9dcca-62f2-4a38-8799-1c236cd3d309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 8a2c1594-4077-4d3f-ac7e-3a15b15c2c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 634bd9fb-10af-4d02-a6ce-96b7c60d8c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 66d5b741-1655-45d5-a68a-98223c80a8e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3B42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F2D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #719 485a5cbf-806b-4838-b440-be584ef2f1a3)");
unit.assert_eq16(16'h3B42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #719 1dcde3a9-9e7c-474b-acbd-94787630fe11)");
unit.assert_eq16(16'h4F2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #719 fc88a4e1-c016-40e8-9e85-d4b291335768)");
unit.assert_eq16(16'h0E7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #719 efc5fb84-e225-4931-bc8e-42c60195e55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 885f68a8-167d-434e-b303-a83891b54156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 00418d0e-93e0-4169-9815-3a8a80dd5900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 c9c8c275-bb07-457a-8ee6-465044218b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 4d63e0e9-27b2-4e38-ad3a-ee1488a07f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 80101bd2-8f97-43c0-84c2-aea5122cd9c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 26a46ccd-c6ce-409e-b622-5a38e15f560f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0A11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0330;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #720 d611cc26-acd6-4933-8b5e-804c53de0464)");
unit.assert_eq16(16'h0A11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #720 63c23366-f8ec-44d3-9680-5188afe1dfbf)");
unit.assert_eq16(16'hAF6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #720 35695a87-1542-4542-a7cf-cc61b1ea1dcd)");
unit.assert_eq16(16'h030B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #720 e34d0bf1-645d-47d9-bbc7-66b4d32a4185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 e795e089-32ad-41fb-834a-6fdbdca749ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 a450d1b1-3a53-45fa-9b84-6bf1495c8f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 547a5fea-b1f1-44c8-b8c1-9277ebdeb226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 6d461119-29b3-4ecb-9d83-26ce1e4218ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 0bec7483-4e64-4138-b54e-23b0636ca7d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 bb65e045-497c-491c-bf17-c77ac68c2190)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h665B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF438;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h097B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #721 1e2208f5-bc76-4f06-8ac4-01c6bcf05544)");
unit.assert_eq16(16'h665B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #721 cda4e9ff-46fd-4baa-9ef5-6c5b4e69010f)");
unit.assert_eq16(16'hF438, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #721 94f851ff-f437-4ec5-90d4-30b6d93b34d9)");
unit.assert_eq16(16'h0963, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #721 a50da530-cd18-4ea9-8fa4-cfe0e3446bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 af59418c-8c48-4315-8e1c-cb2b7093baac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 7928e6e6-7ceb-462c-b423-6b8643776caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 579b5dcd-cd45-46dc-a9bf-f9f91a28ba64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 44275bc2-2aad-4438-9b8d-6ceb1f5e3907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 1ab3302d-e427-44d1-a908-0d151e99a613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 a4cedd82-6c27-42a9-bc07-0c714def2d6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2691;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h602A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #722 09d8dc89-1353-4072-bff2-c71c80e24caa)");
unit.assert_eq16(16'h2691, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #722 ff8cc8c8-9089-4b75-a916-7d6fd0206f70)");
unit.assert_eq16(16'h602A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #722 065f8803-f9da-499c-b99d-12abd7e4fa5a)");
unit.assert_eq16(16'h0B13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #722 977f8ff7-c1c9-4784-b8c8-b1a5cd2a0468)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 2df8487f-16a6-4622-93cd-af69f1ad911d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 17c9efd3-00d8-4432-a977-8e9bd31794af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 fb79adfd-adba-4d2f-a22a-4430ce7f411f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 70ed52c0-cad9-4f32-a00b-370a34caab29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 c2ba90ed-754d-4f14-af65-9802b3c356dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 d5c8336e-63dd-4e6e-a537-b172c8b137f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCCD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDD96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #723 cbbf29b8-848a-41b5-bf87-11a98e6e2977)");
unit.assert_eq16(16'hCCD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #723 601774a1-1331-45af-a8fe-c804360d3e4a)");
unit.assert_eq16(16'hDD96, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #723 556e8701-0d75-4461-a75c-93fe7e068d42)");
unit.assert_eq16(16'h0BCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #723 d2436660-9c11-4fd7-aa0a-ac949710d206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 78a6b3a2-7a8e-4127-ace8-2bb1411b9964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 976ae941-933f-4f97-9c4f-acd7341b07cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 fd58ed00-61c7-4fed-8771-6fa94029a07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 5219b97d-122b-4f32-8333-c7260ca656f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 cb3e0084-f67d-464b-90e4-0162b9adf0b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 739e0a56-5b2c-47fc-b55f-350500eca1bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h86DA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAA81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #724 4ddcf407-0c4a-480f-be08-4e638cd23e58)");
unit.assert_eq16(16'h86DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #724 7822946d-d4ec-467c-a843-9761acd8635b)");
unit.assert_eq16(16'hAA81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #724 47be5635-a043-4782-af0e-d4c0379abddb)");
unit.assert_eq16(16'h0F16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #724 4121daae-d1ba-414f-907f-549580e3c3f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 e12138fe-6e52-4bff-a684-36848fdda82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 41276f36-2598-4d8c-94bd-cf736741608c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 ec1b0c4a-96aa-43f2-b72a-1698d41bce38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 04b6daaa-5ef5-4080-9e70-93187377438b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 fd4fdbd1-b7a6-45ae-8e51-f5b13e2cd778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 2bfc6833-c20f-4f22-bce1-14d595223a9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h63A1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9984;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0329;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #725 fcb6dab0-6ce1-48b4-ad79-f2587f31ab73)");
unit.assert_eq16(16'h63A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #725 2b1078a2-0f84-495f-b1dd-05b2d0403aa9)");
unit.assert_eq16(16'h9984, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #725 9f7de010-927e-4145-b30b-a65cf62b54de)");
unit.assert_eq16(16'h03BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #725 47322cf2-049f-4584-be83-64e546aded3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 fab6dc86-4b57-4e23-a84c-87ee8f21976e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 88e7509d-b149-4b48-aac6-75e064ff2772)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 f57bf6b1-1e4b-45bb-86fa-26bf603a5a3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 eebcefc0-89d1-4fcd-a872-f248fbdf90b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 a63f84ce-bfa2-41a0-8446-5949a5030e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 16fc2737-3310-42f4-901b-de9307b2e252)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAECD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h537A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h00F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #726 88f26968-a8ef-4b93-9a84-bb741c7b5b52)");
unit.assert_eq16(16'hAECD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #726 17804680-b5f9-4055-a7d6-66b056b3ad4a)");
unit.assert_eq16(16'h537A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #726 14b272ed-9dec-4e06-a21e-352cc7e810f8)");
unit.assert_eq16(16'h0018, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #726 ace52987-a4f7-4d3f-a78e-85a254b99270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 ee24f59c-13ce-4e2d-96d7-7dff3624b5a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 21deda5d-435c-4c8b-9c75-f131c17021e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 ee1d10f4-8f2d-4a37-8e22-4cadec2c5f65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 4bb5b871-c07c-4ef6-8597-c7fe6237adb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 87e9af07-2c71-4265-a1aa-9a61ce5fdb8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 cb7ca41d-d82f-4faa-afe1-0980062a7d50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2F97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4127;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h059F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #727 5d2ef092-c8be-4733-9a8e-a18a750bbc59)");
unit.assert_eq16(16'h2F97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #727 bcffeff9-2d80-4004-9f8d-7f7c3bdf2990)");
unit.assert_eq16(16'h4127, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #727 5ac37819-501a-490f-90ff-544dac016b73)");
unit.assert_eq16(16'h0539, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #727 872a6c0a-33c4-49f4-9646-f3aecc14b375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 06f4e136-26b1-4e82-89da-fada44f85333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 80411ca7-6d81-40c9-8ec2-7550d1c36a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 217e41c6-5b07-4275-98ae-8ff58184cdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 4ad2afaf-f566-4f51-8468-667b3cd039c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 93a036ee-3374-4fc1-978c-7fab9d9b961b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 7fc4a70c-86dc-4d42-a207-b6717271dd80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h18D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCFFF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #728 338b00b8-d49d-4b6d-bb5a-eff6fa316379)");
unit.assert_eq16(16'h18D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #728 a597991b-7160-40f8-b81f-dfe29cc4d4a1)");
unit.assert_eq16(16'hCFFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #728 0797e74f-b605-4159-8a95-8a57640ae740)");
unit.assert_eq16(16'h0AB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #728 65c9792a-0a23-4d11-a7aa-fad5b290023b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 4cf33b9a-5d97-407c-a378-d89719a08042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 36d9602a-a3a9-4c16-83c6-bc949acf3fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 1557d79c-3e9a-4f01-93b0-0f148a0b76b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 ae0de4ca-3d3a-4671-aae4-592c985e7507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 3bf21484-16b4-46b9-b59e-3625c6e6aa78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 ee03c644-e62f-4da4-8896-9a8a6b9ecd2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7EFB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2636;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h028A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #729 f4ef21b5-b34f-4547-8de2-04258f667806)");
unit.assert_eq16(16'h7EFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #729 feb3e3bf-eaff-434e-b11a-0d0cf7ff532b)");
unit.assert_eq16(16'h2636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #729 4dbb12f8-01bf-4d98-8d90-b2e001a6c3fc)");
unit.assert_eq16(16'h024C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #729 bb8130cf-5da9-4689-a2ec-e3180f827d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 ac2b54d6-5e6f-4328-afb0-dbd67d87c0d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 7f5aff13-006b-4d84-9cd1-252ca67da106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 d553ca31-ae37-4f27-8ef1-8eed1800b4d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 d72e14c0-c94a-4979-96ac-98dcedb2e36b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 d44065bf-d7f8-4b9f-a149-5851a865da63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 54e8b658-6f39-48aa-8adc-1f23c8a5e4cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7798;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0DB2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #730 1a82dd6b-44a3-4975-8972-7eb7a50431f3)");
unit.assert_eq16(16'h7798, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #730 d30d6675-5228-485d-a118-66dc7d056974)");
unit.assert_eq16(16'h0DB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #730 cf66b08a-41eb-488e-957c-d03fbfb96fab)");
unit.assert_eq16(16'h0C8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #730 33b9dcfb-d04f-42e8-9a0a-728151356c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 e900c2d2-a1f8-4fcd-9f89-9d61e6fafe12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 acf5c359-6de2-4bab-999c-1bf001bc7b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 31449e28-f636-41fc-bf28-f1522b947ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 305dee9b-5aaf-4d8c-bf8d-04d20e77039b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 f3cc6b5b-dd62-4d7a-852f-7ea1e18f8d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 c2ee66cf-ea17-4743-8431-411b01d093f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC042;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1C42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #731 1f8b4944-2dcc-44de-a3a5-42fda97bcfeb)");
unit.assert_eq16(16'hC042, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #731 60610410-4559-416b-929f-fd699771e0c4)");
unit.assert_eq16(16'h1C42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #731 6118e978-10d2-45fd-a9b2-da85a990be39)");
unit.assert_eq16(16'h091B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #731 d4127e59-bf0a-4488-86e0-ff0d82175a69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 a9d9e9e9-623d-4489-af05-f9eb5311f15f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 68ca5692-1aec-47a9-ad31-9a02c3e7b4cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 0ddf95a5-9818-47d0-97d6-64823573bc4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 203b6b2c-6c2b-42b6-a9ad-9ddfa8d5710c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 cddbbca3-5db4-44c3-b167-3edab53c96b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 5d7eb7ce-1169-4e59-85a3-ea171383ef2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0114;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCABC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #732 9d64c6ad-89a1-40f1-8b30-35dfad496db9)");
unit.assert_eq16(16'h0114, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #732 56606c91-69e6-4142-ba19-cd9bd940b4d5)");
unit.assert_eq16(16'hCABC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #732 89fb5324-fc78-4db5-a2f4-b062d41f11fe)");
unit.assert_eq16(16'h05CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #732 048922eb-e137-4e0c-a0f2-f45ca603d3c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 d1a3e545-82a9-46d2-88d9-24bf4acb6260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 e9101e22-c481-444c-8e3d-b2c2e7bf3662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 0c1f304e-ad00-4287-8706-24a26a09cb16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 f9b058ed-1ce2-4c1f-abc3-4f5dcb93a151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 87f7a028-68c6-4399-9989-a1acef468fec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 7c6ed599-e137-40d9-b091-7e0a76cb5947)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h58DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7E35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #733 08311182-8417-4f2b-8bc3-74d27e7a2764)");
unit.assert_eq16(16'h58DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #733 a985a8ac-1342-4ea3-a48e-64eed9903b12)");
unit.assert_eq16(16'h7E35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #733 99e8d91b-0329-465b-91e5-e8f64775cfaf)");
unit.assert_eq16(16'h0D02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #733 89c003a5-6303-40dc-aaff-657f20e92429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 52c79db9-b17c-4bfe-845d-8e7e78d7862a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 4198c424-91ff-4c69-bc84-028b2ab7f3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 0f11d516-6a17-4100-a385-1f60feb5783f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 35bc348c-3d76-41db-9b2b-53f090d1a2bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 72d41e8d-731f-4c3a-81ac-312904183a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 863f7797-90ec-40e3-8aa5-c560e9a2001a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4AC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hABE4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #734 f9edade6-5cdf-4047-a2b0-d52d0185fcc3)");
unit.assert_eq16(16'h4AC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #734 c2aba3c8-46ed-43ad-ad22-22086af1ccaa)");
unit.assert_eq16(16'hABE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #734 b234cde9-8e97-4d76-8e83-e9cb61fcd014)");
unit.assert_eq16(16'h0B16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #734 e25d5bac-607b-45d3-bd8a-a138b94eb3a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 dde5148a-b708-4f78-bf23-a8387f69495d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 843e9393-ebfa-4d4e-9c2c-80b53674a6f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 9970c02f-3766-458d-82f5-6e64ec4214a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 e65e34fe-5952-4fb5-854c-8ed6a0f443c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 ebf31c26-5bd1-45a2-8748-175dee63d180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 2b84963e-bb87-49af-a531-2f530528c56b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8C0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8C8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #735 961d844e-ef38-45c2-a865-f1b73b035cbd)");
unit.assert_eq16(16'h8C0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #735 3a8e5604-ce3a-4336-98ee-024dcb72b371)");
unit.assert_eq16(16'hA8C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #735 d5371957-2237-46ef-a770-6109c967aca2)");
unit.assert_eq16(16'h04A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #735 635779c5-7fd7-4281-a2d2-b0b4a7b48a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 b1b66b1b-4dc2-4ca6-826d-e528cc8a1235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 2d5e221c-1adb-417f-9c02-d952a9471d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 d49d209c-cb2e-4151-b00f-c403160dd6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 6c04431c-7c31-4b0a-a0eb-bf5d6414f075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 4f15b573-c348-488e-94d4-74a61032f0ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 ee2946d6-dea9-495d-a12e-8ba393f04bdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE624;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD77F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #736 1a7a455a-a051-4c42-88b2-62bd78ffb242)");
unit.assert_eq16(16'hE624, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #736 cedf4abc-3f02-4f48-870c-a75029a70121)");
unit.assert_eq16(16'hD77F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #736 29a5488a-211d-4a73-bc1b-06d41ca66984)");
unit.assert_eq16(16'h0AAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #736 d99721a6-153c-46fd-8d7e-6efbac0b8790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 61d135a4-fe41-4502-bbbb-a02a2f40c5a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 cf389b18-f8ac-4e24-b59a-2518a5275f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 bc8b63c9-74cb-4bb2-9a09-c5fbb0ed805e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 0c30e478-2da5-428c-9172-2561c7290892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 21631fa5-aae2-4273-b8ae-b16b72474e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 3a14eef3-20b6-48ef-8b5f-5e3a87860f32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6AF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9DDE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #737 27b03bca-51d2-4b50-b72e-8ffd056fb809)");
unit.assert_eq16(16'h6AF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #737 a7d7dc7d-8c64-4815-b48b-6f6ac87b07f5)");
unit.assert_eq16(16'h9DDE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #737 2f158375-f3cc-4ffd-85d2-3cd777ea0f99)");
unit.assert_eq16(16'h0DF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #737 751ede5f-9847-48cb-b0c1-58bb19051a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 8708b2d4-1426-435b-9a34-8ab90b81f113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 db28d453-390d-496e-b6a1-42ac3176274e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 40a06be5-7f98-46aa-91c8-59023d238313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 592e992f-040c-49af-b7b2-44b4aeb8290c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 303e5cd4-e718-41c5-a1ab-b1c0289a1dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 bd4886c9-c238-4cc9-84a3-91d09559131c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD0DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA3F4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #738 cf99a4ca-6094-495a-8715-734313b56263)");
unit.assert_eq16(16'hD0DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #738 5bab9d86-b1c1-4559-965d-37f7fd688855)");
unit.assert_eq16(16'hA3F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #738 a8bb26f4-37fd-4f09-affb-20e886c70f36)");
unit.assert_eq16(16'h0BBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #738 cc9b4c25-6d0b-405d-a3db-12a8617893c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 ecee7bf3-3354-493d-8c5b-4744d2f29d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 4fc2461b-24c7-45da-abc7-3a741282ece2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 06e536fb-5036-4ab9-99d4-1b1bf92acaaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 1fb7ab64-8a55-4d5b-8554-6a41fae7e4d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 0ace9a36-9089-4040-919b-1609e773061c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 7adeb13d-33e5-4120-a7a8-7adace4e1ce2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0C54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9003;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h080A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #739 8ca285b0-4b93-4f03-b92c-3d42fa77a262)");
unit.assert_eq16(16'h0C54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #739 5ba0af31-e337-4f55-b17a-048cf985a529)");
unit.assert_eq16(16'h9003, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #739 c883c806-bb5a-4617-b7f7-99e0255280ca)");
unit.assert_eq16(16'h08C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #739 6d254be5-29e5-48ad-9555-ba21c9d40d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 8a12edb8-78dc-424d-8440-68aa986734da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 87ff428a-c918-49be-b4b7-8643fc4c2b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 78a26bee-c0bb-4628-9a71-07bfae6f5fdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 d84bb912-5ef5-483e-bf61-d4c711b3dc9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 130dcdf9-116a-4f13-96e5-93183c751f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 86c90173-9f09-4eea-b036-b26ea4c220fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hED32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAF2E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #740 e0f8eb61-c142-4d63-9a3d-36c12de596e3)");
unit.assert_eq16(16'hED32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #740 fa88b487-0cfa-463a-be25-c4ceb7be8cbd)");
unit.assert_eq16(16'hAF2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #740 6f24a9c2-4903-4f58-8aa1-d0c33037c92c)");
unit.assert_eq16(16'h07F0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #740 b46fe7c0-0365-4714-8f3f-90d2741bb827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 03ffb711-2426-4539-a6af-8f49e90e9025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 adc202d9-afb3-470e-8796-b3bc8095259c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 8a4c1d59-6ed5-4f01-a099-cdf607c49661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 443d521d-da2b-4fdd-9080-8c0ec4aff0d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 bba6fa2c-5ba5-4f58-90be-27283a925dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 3dafce24-587a-4fbb-840e-e1ec681386a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h61C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4C78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0372;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #741 64704f82-f79a-44e1-9da1-431ea53d8907)");
unit.assert_eq16(16'h61C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #741 f7bcd11d-ccb8-4cb0-8415-c17b219c8606)");
unit.assert_eq16(16'h4C78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #741 115d8666-cb28-401f-8de1-c68508ebe2b1)");
unit.assert_eq16(16'h031D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #741 1dd8a555-8b82-4aef-af41-f6081be9bbf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 0c90ca2f-f4bb-48e6-8320-b8d57609781d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 0a1257af-27d4-47bc-9c16-e363b7f75d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 df8685e5-8519-4885-a445-a82f1f999c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 ec2c7cca-ab79-4211-b921-d9e0690a6127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 d1977133-db17-46d0-948a-095101cc86ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 96fe5ac9-211c-4631-b45d-f76993ea8f13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB35A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #742 6a349632-f6ac-4904-b2cb-343415600f48)");
unit.assert_eq16(16'hB35A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #742 815915df-0175-4f3b-8423-e4f40157944d)");
unit.assert_eq16(16'h6C8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #742 4fc88a61-4a6f-4f37-be52-3b815f62b9c8)");
unit.assert_eq16(16'h0E8F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #742 b27e0a01-9927-4d86-9bdd-9c60f733bdf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 70424b91-8223-431b-bdc3-e320875535f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 39b9c8f9-8835-48de-a402-13b8d5c3a3d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 bc856ffc-0f00-4730-a469-9c83ff1dc77d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 54f642db-5a92-42d8-aa52-44723e33750d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 cd0816b0-950e-4d6a-a4b5-28b42427d487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 048d8013-bd37-4524-a49d-b9aa642c4194)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC6C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCF8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #743 b36217b4-5f51-443c-ab51-2957a163bfee)");
unit.assert_eq16(16'hC6C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #743 026f237a-f7f9-4bbf-a007-533d1b26bcf3)");
unit.assert_eq16(16'hCF8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #743 2d442273-285e-4dc0-94bd-401f54e4a01c)");
unit.assert_eq16(16'h0930, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #743 f9077395-23dc-4497-82b9-12490d95fd1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 7485330d-3ed8-47d1-9b7f-c4846b6c44d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 00e75a8b-a7fa-433d-9b73-c8932acff2a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 366b2127-aaf2-474b-875c-7169e55e688b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 85abeaa5-69df-4811-9346-c84281208288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 c6c438b6-5ece-4f02-9bf6-1c5bc8f5e70c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 8d4cb258-7174-4599-b4b9-44b50e8826e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD5BB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h88C6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #744 60bc394b-ef2a-4180-8267-14886b88a428)");
unit.assert_eq16(16'hD5BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #744 038e0335-95bd-483a-ba63-758efbd85d79)");
unit.assert_eq16(16'h88C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #744 8e196b74-c98a-4ef2-927b-fa7004103ac3)");
unit.assert_eq16(16'h0ECE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #744 2315bbc3-0fc9-4e14-8085-9b8c7b9da8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 57f04203-1505-491c-bbb9-2dfc1fce9937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 a6705eb4-a77e-4d68-a8d1-93d37f6d5426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 73fc5135-4346-4329-8cf1-aa8f8951779d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 83b7c80b-e34e-4fbb-ad8a-d2ba54f84b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 dfe7ffda-b575-498d-8a98-95d629cf92fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 d2ab9898-38df-4b3b-b668-3031fddd88eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5730;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3EAB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #745 1c6cfd00-30da-4e0b-ad4b-abda8f402df0)");
unit.assert_eq16(16'h5730, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #745 2dab08db-91bf-4dd8-8fdd-7d737c3fc668)");
unit.assert_eq16(16'h3EAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #745 bf6cc89c-e426-459c-b690-4ef293e7ac01)");
unit.assert_eq16(16'h0575, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #745 509012fe-3c3f-4519-a17e-cb540feba94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 59c378d4-a454-43f5-a589-c8a34e54ec45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 8d7a4c94-7f8c-4c53-ab2e-7608ac5c5584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 eca5044b-e8d4-403c-8850-dc1da5b46dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 fbf0ee07-3327-4289-a669-32edba0a0324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 b5b3fe36-db6d-4fb1-b2aa-3faccd424d79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 e04afc59-c9e8-49e0-aae1-739b22d94693)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h81A0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h12A3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #746 6d723c0c-31da-4d40-9e19-bfb4bff41771)");
unit.assert_eq16(16'h81A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #746 05b422c2-90fb-4426-b73a-623116d1d70c)");
unit.assert_eq16(16'h12A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #746 f30cab48-0c0a-4e49-89a9-9f21ea346f44)");
unit.assert_eq16(16'h0547, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #746 f50217a0-8972-4709-93f3-da13820d4569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 f013aea1-0bdc-4249-82aa-a209e0591b5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 aee697cc-746b-48fc-92f0-38f588a1bacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 b97fd056-3132-4de0-8c82-f95ae6eaaa34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 23d38ffe-c587-41f7-96f7-841cb326ad08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 c6f84ce7-0fc7-4ae3-a2d9-22fe65964621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 2c2e848e-042c-4eab-bdde-1567d0842fd0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA14A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4BBA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #747 968b89b0-4f44-4aa3-a5e8-e170bd8ab9ab)");
unit.assert_eq16(16'hA14A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #747 016cc6bc-30b3-4696-86e1-4d943759ac51)");
unit.assert_eq16(16'h4BBA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #747 11cacc25-ca0d-4666-ab1a-b9c624d12c75)");
unit.assert_eq16(16'h0A50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #747 21594ce1-cf28-4a9b-a316-f44668d5f1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 32d24775-dbf5-4708-86c5-4234c490ca83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 e0bc6a24-d448-4ead-a092-19e75c607f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 f682a447-054e-4e47-88c0-873da640f8dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 65d715df-c4cd-42d9-ab49-0e09d27551e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 954f9230-e7a7-4fda-8386-61bc747a9491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 905ee339-5c90-4546-a9f5-93e6d710af64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h74E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #748 256193ce-e3d6-473d-ab85-85ef74c6cb41)");
unit.assert_eq16(16'h6B97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #748 2d903b34-c626-4034-bdd1-e764a7dd197a)");
unit.assert_eq16(16'h74E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #748 53c8d02a-3fb6-40e4-b3ad-6117bbe9ad3b)");
unit.assert_eq16(16'h0523, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #748 ab1f09aa-a4d0-417c-a143-946d992e1817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 aa10719d-4ce1-4408-aefc-3e7732ff4f26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 8928564b-c893-4c48-99db-bad9db7c5aa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 7c6c0c61-3adc-49e6-80c4-fbb8ea4d8737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 8e25485a-ca4d-49fe-ba0f-dd930e582ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 e57b815b-23ef-4e3c-8dd7-f64a81fc2e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 eb7278b4-41d3-45f5-8270-65f7fa3a6417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8DAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0E55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #749 7df31692-c731-43b9-896e-c05db8db201a)");
unit.assert_eq16(16'h8DAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #749 71ceb883-3b1b-425d-a50c-fb93e5b6e7b2)");
unit.assert_eq16(16'h0E55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #749 e09c0e33-2db6-4b28-8d3e-31a5427250b7)");
unit.assert_eq16(16'h020D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #749 29fb9110-1a7a-499f-b143-aa32fe4bfdb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 da8a67ef-cdbf-41c0-8180-71c59b0f5d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 91f4ae21-9c43-4c99-95c7-341831f77df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 f4279ae7-6792-4e93-9d56-0f48a4554867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 5bf1965a-e0b2-456c-b338-f51330d6b687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 909a1b79-b028-4aa0-bb0a-2c750e64e285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 fed031bc-010f-4f3d-924a-5d4f3315fd34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8B41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h072B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #750 4fe99738-445e-4876-8b64-d0f2bd4a7971)");
unit.assert_eq16(16'hCA0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #750 b990202b-c278-450b-88b5-d50d791057dd)");
unit.assert_eq16(16'h8B41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #750 cbae8c7b-46f4-4e80-aa1f-4a7e6209c261)");
unit.assert_eq16(16'h071A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #750 b3cc8747-a6aa-4689-92f7-45ad84a478fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 890f49cd-7c81-4f4d-8588-3ee319f2aab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 8dcf4605-6fdf-421e-9d15-f04b11462f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 69be68d3-740e-492f-8cbb-91e3a6babc83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 d146f2e2-620c-40fa-b65e-994dd25ef583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 fff1c423-6020-431c-b5ca-c9a2eef63702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 991ec9c8-63c3-4cfa-9d81-2ae3cfaa92de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1E92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h60C5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #751 e4004398-fa8c-4f0c-9c38-da0071b95d06)");
unit.assert_eq16(16'h1E92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #751 45bf7993-a389-4b10-b1c4-a53601472e8d)");
unit.assert_eq16(16'h60C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #751 525248ff-3409-4b68-a905-8887e922def7)");
unit.assert_eq16(16'h0817, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #751 026c4702-e05f-40de-b07f-5ba826d9672d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 0ba583a1-b48c-4e97-b4bb-c993e3d59b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 511b8ebb-9fbd-4679-a49f-1f0219c12635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 4e4edc72-6a67-492f-9c7c-3c53bd4b7892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 ac005859-d770-41b1-87e4-7f6476eb202a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 671627e8-dcc9-4aad-9dfb-75f4dd7df56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 77cfa96d-62a1-4e0b-bcb1-47be8061a041)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h94D1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A9F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #752 338e5fed-5755-4bc1-b73d-9f860d9ebfa3)");
unit.assert_eq16(16'h94D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #752 96f0fceb-a4c1-441c-ae24-ce29c513eb0a)");
unit.assert_eq16(16'h9A9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #752 e3b3929d-82d3-4dfa-a381-5efbbad5b03f)");
unit.assert_eq16(16'h08B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #752 b135b6e8-4d73-4569-a860-26bfd0120f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 9332a782-f62c-4e1f-9422-602e1c1efa05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 fb221e4b-39e6-4878-b1b4-856942bb37c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 f7179133-3edc-40db-a07b-018b3e39981f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 7cbb46a9-d6cd-41b8-bb34-63c5b739a0f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 dcdf7685-95f2-4eae-96a2-87b024703376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 85d50a87-bb5b-420f-b490-560626a5e895)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2D30;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE4F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0760;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #753 8b7b7c16-4e10-4eb8-87cd-0de538bcb70a)");
unit.assert_eq16(16'h2D30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #753 dfe4b60d-0da8-4cea-8792-008cca408c46)");
unit.assert_eq16(16'hE4F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #753 25e6d443-40e0-4d6c-8bfa-4e75e8ec83e7)");
unit.assert_eq16(16'h07E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #753 f9a6f0af-a965-4767-b70c-56514da73163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 eb448acd-da07-443d-8e07-7d0201b5abb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 b1279a55-f11c-40de-b3ed-e8d8b1c3cda8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 39c110a4-99a6-43c6-9c62-5bb09176dab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 bed4119c-22c2-4742-a6b2-9edb61ed7096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 52d3d540-b248-4a52-9f99-0861a9a8abeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 94007969-02df-4702-bec4-63a5caf79374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #754 b1ec911d-9878-46af-8171-9ce5f3e01380)");
unit.assert_eq16(16'h5F87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #754 fc46ea22-fd5d-47b4-9e65-e9c0efd96feb)");
unit.assert_eq16(16'hDF15, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #754 e991d292-84cf-4a9b-aebe-1b6039abe41f)");
unit.assert_eq16(16'h0C6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #754 c9d17400-272c-4306-99bd-33b6a29b9511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 4da05aed-31af-48e0-a88a-034aacbc8ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 86223aa8-5f55-42f8-9184-46e868588315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 f41807a4-9323-4588-a21d-a3f93efad2e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 fc0d90c7-ae01-471e-bd2c-30f1bfaa3489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 8dcc08e0-acc8-429a-a93c-01194a8d2d0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 9dc9dacc-aa9e-442a-8004-cda55cc17014)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9CD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF1BF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #755 37a1a02c-148d-4e3d-af1f-17b654e21723)");
unit.assert_eq16(16'h9CD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #755 47f78735-2075-4a1f-9838-1e73fb2667e9)");
unit.assert_eq16(16'hF1BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #755 aba7e48d-cb58-45a8-b4eb-1a21bed7ef53)");
unit.assert_eq16(16'h0B83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #755 e387cd53-96dc-4496-acc2-8b0ec9e739fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 37361987-6037-4d21-94cf-b628a15dab3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 1d69126f-a2ac-40ab-bfad-43e23d3b6db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 3af05eba-3472-4b2a-abdf-d103c606ea17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 a875c1bc-bbb5-47ed-9bdf-4d8a37cdf96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 8a01fb24-f609-4a32-8125-6ace7bd86b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 df2529d9-1476-442f-97c7-fa64d2263235)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF2BA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3D3E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0465;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #756 8ae9f2bc-05bb-4556-9ef3-e85c96a57544)");
unit.assert_eq16(16'hF2BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #756 39bee557-d979-4ecf-a2e8-d890dce8f0d9)");
unit.assert_eq16(16'h3D3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #756 922adbe3-f0e6-4d0d-ade2-7213c029885e)");
unit.assert_eq16(16'h0437, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #756 27317411-0223-40c4-8d54-b68c7fe5bb4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 777d4326-7c5d-4765-9a7e-9a428491b02c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 480f3a34-71ef-410f-810e-a0ff37f77bb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 3cb8c785-c873-4404-9ee3-6c25b130b56d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 39b7e56a-2ae2-4b6c-8621-f2ad65b77351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 1de61dd6-aed7-483e-9239-c8adc9870eb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 30b3baa9-0a1f-4579-977f-30106b996150)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCC35;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6607;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #757 59b3fe5c-1d1d-451f-b53d-f535f867f3f0)");
unit.assert_eq16(16'hCC35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #757 60342ecd-9104-4b58-9fb9-96099f96ef59)");
unit.assert_eq16(16'h6607, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #757 c2f2aeeb-a8c2-415f-904f-1f13bb983117)");
unit.assert_eq16(16'h0F40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #757 9e80351f-b337-46a2-a7c0-c66e0a686f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 b7bcbe1d-10da-4449-b59a-885ca93d1a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 cb4749cf-9ead-4289-8b7f-364ee7164597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 acc94113-1329-472d-b43a-0fb48c03c502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 170f12e7-593e-4be4-a550-df348bbee2ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 057c441a-9ea9-487c-8069-4f0bba48df7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 92f9abc2-7e2a-44db-b5af-3b1993d27d0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h618D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAADE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #758 e19d01e6-5d03-4409-9b08-c5dbb1cdb4b5)");
unit.assert_eq16(16'h618D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #758 b22a5f6d-59b9-44a3-9c86-cf3ad18cbffd)");
unit.assert_eq16(16'hAADE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #758 0d693fac-6f66-47f3-8319-49ae36754728)");
unit.assert_eq16(16'h0AED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #758 398870d4-1ee6-4733-8659-d00c9a4ade4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 f2370432-86dd-4b98-9e3c-7843b372c8f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 68184e7e-7580-4f5d-9484-92aade0289e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 af6bcdc9-9366-46db-9969-78568cf4b1a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 5887d35c-9a52-44f1-8097-523a48bda1e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 d53b9356-3660-4a70-8eee-1fecee1736b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 4b29cf68-2ba8-4d33-ae10-d6a6f771c397)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2AF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2434;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #759 f23aff51-9b5d-4764-9d60-7d8d058586ec)");
unit.assert_eq16(16'h2AF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #759 5500c804-026d-4dc0-8ed7-5e2775e71ee7)");
unit.assert_eq16(16'h2434, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #759 616f2509-3317-48b8-9a1d-c1e8adb25d3c)");
unit.assert_eq16(16'h0EF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #759 f59195c5-82d5-438d-8749-e7c869f6b6a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 724c79b9-d2e9-4567-8fa2-3a2b8efe609d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 887e7407-79bd-428f-8b6b-d2f2c85858f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 d04f56ef-bc1b-4034-8838-08f2d659c757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 1b93e579-852a-4309-82e7-8a7a7152bea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 fd1a1fb1-6956-4151-a603-977e0156b76c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 904efd86-0821-4413-a85f-ab10984d6f2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8D94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3974;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #760 9853f9bc-98bc-47a4-a31c-ace2ff7b7985)");
unit.assert_eq16(16'h8D94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #760 3726033c-551d-4a49-a4c2-f3c027020f87)");
unit.assert_eq16(16'h3974, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #760 0761b5a8-0464-4d91-9135-d8e5e079bada)");
unit.assert_eq16(16'h0240, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #760 c267fe91-3c70-4955-85dc-6a67904a0df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 e865065d-dd4d-49b4-99b4-7478f6ce6eae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 6f2194f0-6a0c-47ef-b17b-c5a5532e829f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 daffb09f-4ea6-43e8-918d-52f1cb3b0a08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 737cab3f-cff9-405c-8aeb-742e7114c3a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 086abdd7-4dde-4f04-8a94-bfee362d1e9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 f4353796-3d21-4a42-a452-43ad54504fc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h714F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hEBC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #761 f5424c4c-c70c-4023-a9e6-1460aabdd62d)");
unit.assert_eq16(16'h714F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #761 2c1824f2-c26e-4c1a-b597-5b7344afd374)");
unit.assert_eq16(16'hEBC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #761 80366e93-4c85-488a-865a-fde2461424ae)");
unit.assert_eq16(16'h0341, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #761 cea72c93-2a02-4ce9-8034-441e6edd84da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 b47dc86b-0c82-45af-9885-1c9938ad08d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 7d794a96-1e68-4d88-a56f-b4812347701b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 4227ca70-e073-4c59-aafe-acb36f97c620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 def7f03e-b03e-4e3e-9192-14e6f1955c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 ccb66f85-7ae6-4b6d-bbdc-aa23b29e0a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 763ba2de-c6f3-48ed-9581-34ac37458d56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7BD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h093A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #762 bf2e4ce4-a16c-46a2-9327-199822589ae2)");
unit.assert_eq16(16'h7BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #762 e6ef9689-7589-483f-af81-bc6386ca68a5)");
unit.assert_eq16(16'h85E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #762 9842c57b-e595-4ecf-9555-72b5b19240dd)");
unit.assert_eq16(16'h09E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #762 c1b1ce33-01a9-4a99-af64-91e716ee41d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 a3fe5f7a-aeea-4e16-9616-62bab10add03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 babb288e-c8e2-4a93-a689-9b4a08aa7fca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 53e041ca-f4ca-405a-90bd-c938f3ff6460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 116f33fd-62db-470b-b02c-f09be778daa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 3372e4d2-8ba4-4209-a887-90442ee7c838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 f04f81e4-55d9-4c1a-8eb7-939ee95da8e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF1D6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h077A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #763 6bef8561-05ba-482a-ac19-968cccc21577)");
unit.assert_eq16(16'hF1D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #763 98b17043-98e7-4c2b-9639-2f843a64c2cd)");
unit.assert_eq16(16'h077A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #763 88a3da04-43f7-4e65-a2a4-ae7ff5202e68)");
unit.assert_eq16(16'h0EC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #763 0ff81060-b732-4d5d-8178-54acdf291f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 d95fa4e0-081f-4161-9927-b0a23c907882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 94ba0c6d-0257-491c-ac78-9e39ce22d815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 162b9000-4a78-4c07-99d0-26de44f2d9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 320705be-d82a-4c15-9400-ab13357d9053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 53b6cac3-f0dd-4e27-8ecd-1d6ebeb87d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 00ff99c4-56a7-4c14-a010-47af2a1553a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5EF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h15F1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0566;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #764 fdadb7e4-11b1-4dce-886b-4564ab7b936c)");
unit.assert_eq16(16'h5EF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #764 2a23e53d-14e9-4fb7-80cf-5781ce86d4a1)");
unit.assert_eq16(16'h15F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #764 e6430bf3-d2c4-4e8e-bf10-ec6525ff4ce1)");
unit.assert_eq16(16'h053E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #764 bb79ecbc-c1d4-46c4-99b5-52a70da7879a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 7d124874-b098-42c4-a1fc-78dd19414e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 b7d3b098-ed5c-48df-810c-89fe3edf18fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 5147f1e5-1dd6-40b2-96c8-a6d7d044f4b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 2e82b8e4-03da-49e8-8cf7-5bb580005b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 404c1bd4-b47d-428a-bc03-fcc746b8e84d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 f280d61e-04ed-4c6d-b816-04965908d4ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h716C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h11AB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #765 e070d036-cae8-4fb7-a628-9d2f77605f09)");
unit.assert_eq16(16'h716C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #765 9aad3091-f797-4af1-a11d-963b8f7ae4e2)");
unit.assert_eq16(16'h11AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #765 6f61ad99-b122-4a4e-a30c-272a1df1b286)");
unit.assert_eq16(16'h0F23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #765 21258ef8-fd5e-47d1-a3df-6cc9da9c1b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 ece4eebe-22c7-46cc-97b3-135fbdc73b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 88fa7b00-e4bb-4d80-9612-161b0a14c9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 18fd3b5e-2461-4345-a72d-4efc8d9d2752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 fe5196aa-4b61-432c-9730-06e88f6039a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 fe0af466-97b0-4918-b019-219a338a4418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 cd0ad959-8dc3-4e14-b32d-2d199a052049)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6A8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDB60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h004F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #766 64ce884d-542e-4929-8ce4-85e3cb356bc4)");
unit.assert_eq16(16'h6A8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #766 bd301ef0-9137-448f-96dc-b4a64e55a8dd)");
unit.assert_eq16(16'hDB60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #766 1db4a4b6-e40d-4622-87a5-12f7f8e2cd23)");
unit.assert_eq16(16'h00D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #766 57929b7f-b7ea-4ea4-8d47-eb9b1d311b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 afff6693-7a37-4625-a07b-77611ddd2357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 dd6c1877-708b-49d8-8cbd-f3081c4ec66c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 b9e30227-5206-4df8-adbe-80004d3b91c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 4b8d9a35-1e4b-4747-b758-a1ac1625d7b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 03857b3c-3f22-45c8-b03a-f0cf47123e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 1f27b215-5aa0-4f30-8d1e-a3bed7ac10f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1739;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2ADF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0042;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #767 71f208d7-d23d-487a-9d04-984f048a413f)");
unit.assert_eq16(16'h1739, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #767 b90b4eae-60c5-4cc0-810b-50d22817fb8b)");
unit.assert_eq16(16'h2ADF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #767 1864e2fe-0a67-4321-83ce-481357ac3394)");
unit.assert_eq16(16'h0036, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #767 b99190bf-f8b8-43cc-9e39-c8faa4abfc53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 d5dce72a-23b3-44b6-b125-d72e98b64a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 5af2d75f-7a96-44e3-baf1-6743d3ea6d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 c47c6809-b998-4a2a-801c-c911f1a7be6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 14d076c5-d51a-4417-97ec-a6770074527c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 8ca4aefc-adf6-498b-81c5-546147063006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 b26180b7-077a-4fe0-b3a7-6456599f4fe1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE22A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7878;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #896 af798b12-a838-4560-9a3a-4a9f3cb158e2)");
unit.assert_eq16(16'hE22A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #896 14c1fd8b-d147-4ff7-8c96-c675a9c71984)");
unit.assert_eq16(16'h7878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #896 7a1fbe35-71e2-4e69-ae64-1ca0114cecf5)");
unit.assert_eq16(16'h0498, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #896 e429ba30-fbc4-44cf-a59e-d8efd97da750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 336cc0d4-7e14-4f48-be72-00b521f8da7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 212f9049-2a65-4acc-b8a8-01d73b2bc3f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 9130e88b-eae6-45bd-8da6-402e44e83063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 d8df2d15-66e1-445b-8afe-fcd40abe37c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 43bbfef5-4761-422b-956f-e97a26ad0931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 859c2537-9d06-44db-89f2-2746810c4687)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h31E2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1E5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #897 290291b7-ad80-4bbe-b80e-4d17b05dcc81)");
unit.assert_eq16(16'h31E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #897 5088bda8-fc83-485e-8ac1-da34f7f0385b)");
unit.assert_eq16(16'h1E5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #897 bbc48101-601a-4980-acd7-8588440fcd09)");
unit.assert_eq16(16'h0F98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #897 50ff8461-a2fb-4a7c-a128-7f9bcdea39c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 1b918b61-1cb4-4ce0-a220-9cc2ae80d8fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 fa1e0503-5929-4fc6-9025-a7674ef8d7c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 f5bb70c8-364e-4501-b1d7-d9322fb2c19c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 d103b21e-9df1-4784-bc38-b2cc4d47e8af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 fbf55795-3428-471f-9186-2e8a5c02f032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 e9cfe80c-28d6-4150-b62b-f8e241cbc55b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h021C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h85E3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #898 4b97dd25-ec1b-4a7e-8245-8c8e17e25480)");
unit.assert_eq16(16'h021C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #898 29bd671b-d19c-4065-86b3-b51dd6bb9088)");
unit.assert_eq16(16'h85E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #898 28af7e67-18a8-41c7-a3cb-74fc22e1d26d)");
unit.assert_eq16(16'h0D8A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #898 94a9e802-e2bc-4e5e-aa7c-c22b6d2add96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 af6f869c-b6dd-44dc-88c1-3f5a7f6de542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 36630ab4-f89e-4250-b959-0a6546b0ff46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 5373aa73-d3e7-47b3-be0c-086922deb696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 38d4074e-7f73-4112-8af4-00589b8230ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 68935f8a-13b5-49d1-8e79-6df115907875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 7e484fa8-7c92-40f7-9eaf-0f4a23da5cf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8636;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h35DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #899 d7d2eb03-087c-4f4f-bea1-333ba5afa075)");
unit.assert_eq16(16'h8636, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #899 f12e72c1-5044-4ae4-b85e-4c8aa2e53472)");
unit.assert_eq16(16'h35DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #899 cdc243d4-caef-4d62-b33d-6f8e6ecba25c)");
unit.assert_eq16(16'h0621, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #899 383c9b33-020a-4d97-89e4-97ff299c003e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 87d0d93b-9bae-4422-8b30-289f8bf8a953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 bedcfdb5-c81a-4a96-88c2-ab37b4f04648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 c5e24d5e-3a14-4d4d-adda-c3e428f6fcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 137c20bc-7264-44e6-8776-e0b2e1d8e57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 05811e80-9f16-4d60-af26-ae9fdc4a4c45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 0ed78d89-ed19-42c6-bfa1-77b3d048e842)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5498;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h039E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0600;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #900 de585cb1-f03c-4c4a-9056-ce2ae2182874)");
unit.assert_eq16(16'h5498, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #900 f046e11d-d43a-4c73-b6a3-1d7f1eaddea5)");
unit.assert_eq16(16'h039E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #900 171ebdc0-c49c-4ddb-8846-70ac429abfb6)");
unit.assert_eq16(16'h0600, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #900 509e2f75-387f-41b4-beef-47f2299ad337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 8a326c96-63d4-4244-b34e-3e20e6f70031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 88f13c74-fdf5-4e0f-aeef-d7d03d744d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 a50c593c-237b-4e0e-9a60-8ba8797bb7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 b18235dc-bde2-4252-bb6c-3fa8c2ba607a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 314ba3c7-637e-4155-bb38-0f04fa209e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 ca5e9ed6-3a96-4106-8488-df0d93093a20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6190;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7EDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h068C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #901 160f920c-154e-4a61-b1df-7b073d2f5c3e)");
unit.assert_eq16(16'h6190, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #901 187f981e-d455-45d2-bf42-a89b8cfcebe9)");
unit.assert_eq16(16'h7EDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #901 1881a360-073c-4176-8fcb-908ff978858c)");
unit.assert_eq16(16'h068C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #901 798f3273-b5e0-4eda-8604-945a1bb437ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 02d7cdcb-c481-4e3c-a84f-2e0897b3d57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 3a9d6b45-b59f-4bf3-9b2e-3a89aaf2d73a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 9e5eb8d7-a2f6-4871-addd-58aedbdae74d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 9418a2bc-0dd9-43ac-91f4-a698a5496ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 1c7da6d0-3826-4cf4-a25c-2a862d8aa75c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 bc280084-451f-43bd-ae11-0c2b8ae44bb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF53F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB090;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #902 0c9ec126-a209-463b-94ae-55679db91874)");
unit.assert_eq16(16'hF53F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #902 c67a66a1-2950-4cbd-9b04-cf55ae66683e)");
unit.assert_eq16(16'hB090, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #902 caf45193-405e-40b6-b1f5-1728bb4671c9)");
unit.assert_eq16(16'h09BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #902 f3607ee3-c08b-49d2-b661-0f03ec77eaf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 336c4c87-05af-40f8-964d-26b0744fd6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 bb03b805-da08-4f89-b85e-1ecc37157cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 8e069fda-fa97-4ec4-9965-baa9f13ca57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 abb0e91d-4ffe-4fc2-8be0-cfb0f7927357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 8a219719-559b-41d7-af8c-f7d577856f65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 5aed6855-28af-4144-8d9e-29a0e8096dee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h459B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1B73;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #903 879eda8b-a52e-421e-b363-5f242e42b874)");
unit.assert_eq16(16'h459B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #903 a9e0921a-216c-448b-b822-449f0d80c9d1)");
unit.assert_eq16(16'h1B73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #903 35aa7177-2d15-40cd-b819-f9d3b3853966)");
unit.assert_eq16(16'h04EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #903 036c5f9f-41c5-4eff-8533-be3ef1b86566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 3227b57d-7fd2-4e0c-adae-e161b8ae16cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 0719356d-9724-41cd-b798-454df1329b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 4d68061e-224a-40ba-92f3-b74a8d96ade8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 f775d7e3-3954-4187-a633-20f79e551fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 7192889a-7e07-498b-a642-dd38f4ece42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 cf4db497-965a-4e65-8608-395e7d54bcb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8350;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBAF1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #904 407ca986-4e14-4d39-bc31-ea9be1ababb0)");
unit.assert_eq16(16'h8350, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #904 db4a71b3-7bc4-4f74-9a85-c693d6391cea)");
unit.assert_eq16(16'hBAF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #904 f9ef3f2d-e6e6-440c-9541-405a312a7db8)");
unit.assert_eq16(16'h0F13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #904 c90e2be6-baa0-46a3-b7a2-167c3693373d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 904e9287-ba7f-4183-8bce-119541bd9142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 7db0e928-50e9-405d-94ee-80f44ae7ed94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 4c0dddbb-398a-4d7c-89fc-687a8804fd65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 5d64b226-b6a0-4eb6-9506-0427e4f3da63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 83cba193-f8c6-4d55-ad38-e8cab7059b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 425f4e81-1a98-41c3-82b4-77e43d6fc855)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5A75;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC104;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h015F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #905 111bad66-261e-4366-989f-9cae48461ad6)");
unit.assert_eq16(16'h5A75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #905 d593accb-4b45-497a-8571-1303c4de55e9)");
unit.assert_eq16(16'hC104, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #905 e4886642-8b19-4095-8149-7bd6e00ca9cc)");
unit.assert_eq16(16'h015F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #905 223e56ce-62e1-46d1-abe5-40f2e89072b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 16fff878-2689-47e5-8474-76dd1c8a0694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 ed02f2ab-293f-4c91-adb4-4633a9dee53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 c77a847d-5245-499f-8840-b65bdfa24b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 84775211-a98a-4054-94ee-fa669e5a6620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 9252ed0d-9861-4d6b-b140-368699767b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 bdde7fc8-c5d9-4730-bbf5-83416754fdba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9AAA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB314;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #906 a4a189e0-fc71-43b7-9ee0-ca4116a6dc49)");
unit.assert_eq16(16'h9AAA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #906 964fff78-6dc0-478b-9941-dbec1db998b7)");
unit.assert_eq16(16'hB314, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #906 392366a7-f235-4b2b-a32a-c6b779439898)");
unit.assert_eq16(16'h05D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #906 fc97a5fb-0fb1-453a-9b2a-57c07651d322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 a79beddb-51bc-4f49-8a6c-0421abcae041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 95bfafb0-c0a6-49f9-bda5-1ffb6f325b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 1c0c6a70-3ffc-4b94-bfbe-963106ea54d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 ee5fce4e-b852-4d72-8851-924038122c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 f27ee0f6-0489-40e2-95cb-77c8baf10f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 82098bfe-e2da-40b6-a9fd-5006ccc33a3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE4DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD288;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #907 e2ad83d2-e8f9-49ca-9738-356a4350c2d9)");
unit.assert_eq16(16'hE4DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #907 9f510ca6-f0a1-49e6-ad09-cd9e9f91600e)");
unit.assert_eq16(16'hD288, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #907 0f64ff48-3246-4494-b3c3-7f3b232540d7)");
unit.assert_eq16(16'h0AE7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #907 0d26fa32-66e9-44ff-a741-0486822a7348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 b0877308-df55-43f3-9533-e29e3c864f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 605fdc13-3a8c-4468-91cc-6a35a184594b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 d59af6fe-05b1-40db-82a6-2ada1f87e160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 a0e7d8ba-12b4-4586-8ae5-efc88b4f3b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 8bec8629-cd55-4e2b-8d47-f8daff5aad40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 e6f25d85-16af-48c6-be40-a62d70d77508)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h41A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8729;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #908 bc87af86-0cd7-471d-a748-850c0a628429)");
unit.assert_eq16(16'h41A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #908 0e7dcc4f-acf7-4459-a121-dec9cfaf2be1)");
unit.assert_eq16(16'h8729, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #908 deabfca6-9f7c-4d50-bf23-8d283a0bb04c)");
unit.assert_eq16(16'h01E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #908 45b95498-bc0e-41d0-aeea-b2898273199b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 d8273863-a6a1-44ee-8282-dada856f6c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 bdf8aec0-ac81-4881-a0b5-06f3e9260700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 11df0666-181f-4114-83c6-59fc9b54567e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 5230d447-3daa-487d-a3cf-63cf127cd5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 a55996dd-f0fa-4132-9b8f-f9b1568523df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 4911813b-ad86-4a4e-9a88-a536a6be2708)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFF06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D20;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #909 3e864ec8-518d-43ea-aad6-767bf9ee1012)");
unit.assert_eq16(16'hFF06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #909 d6d0e657-e04c-431c-b803-45d38d9a8c6a)");
unit.assert_eq16(16'h4D20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #909 2fe4ecf6-9f34-4ed8-bd8c-4009526fc153)");
unit.assert_eq16(16'h08E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #909 35188b6d-d06c-4ee5-8b79-4590e139f2cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 56c55e17-6837-4236-ac7b-690fba93383d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 823a5fb6-635a-46a2-b586-0286d487a18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 77f49b39-dc6d-4ac4-898c-62ca7879cbce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 cfd0a8ce-f2b8-44b8-9675-80af27b92894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 99dfd3fb-4e97-4a17-ae13-c5b3bc7980b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 a7b2db98-3eab-46ac-9d61-9e5f8c4db85e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF46E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD638;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #910 2cc4a184-9e19-47bf-864a-99d301300fb5)");
unit.assert_eq16(16'hF46E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #910 19ce6db0-9fdc-4838-a422-140d9a005d37)");
unit.assert_eq16(16'hD638, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #910 6fea4350-7544-4905-ba7c-3c5407b9ea3d)");
unit.assert_eq16(16'h06F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #910 bf55cd65-0c2f-4ba4-b746-7beb17241b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 0aec3589-6981-4c8a-b112-185f21ab9d38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 568e41a2-ea76-41a8-a586-c1f82be98640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 da7ef2fb-f355-4093-8b29-b154054751db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 4a88a7c8-c383-4aef-a1eb-9612458f7cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 0db7ae5c-f779-4ce4-9f69-d40b77bc7da6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 34a16902-7c28-41f0-be97-521c67d5777f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAC01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4707;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #911 c46b0ebe-0f0c-4244-b9c1-d99861706f84)");
unit.assert_eq16(16'hAC01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #911 03221794-cdaf-4cde-a272-6b876efa21ae)");
unit.assert_eq16(16'h4707, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #911 c9200f49-5c76-43df-9066-562e73a60ec6)");
unit.assert_eq16(16'h08D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #911 7e8e490a-6175-47ce-bbfc-25119f0a6d57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 b0514495-3c20-4660-ab61-95350df9bb3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 63f1c737-47d4-4f1e-b02c-9eedf7f09949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 ad33b207-fc79-4801-ae0b-9f27bad39f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 c03f4bae-9d42-4c29-8136-348dbb4c9e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 f4a3c6cb-d377-4ee4-a520-afcfcf207457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 c3d3c272-b468-4ef1-b121-3256336e9c88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4BD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1055;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #912 12169a45-94d5-4b98-b76e-de9799107956)");
unit.assert_eq16(16'h4BD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #912 cfc47ea2-44bc-49c3-afee-545a244911e9)");
unit.assert_eq16(16'h1055, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #912 ebffb8a8-26d8-4a3a-8824-66ccaca40623)");
unit.assert_eq16(16'h0A90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #912 2cc94748-900c-4690-b9e2-c6924f3a16c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 50243217-e4ad-400f-a269-6590386c58bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 0af477ea-d525-44c0-9fd6-fdcb2778d48a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 01637a6c-787e-4911-b1f5-f1b62619e570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 9048428c-644a-4bd6-a65c-7234cc259fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 5b27bced-986b-41ee-ae05-7084895b07f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 c7a9dda7-aab7-4e67-a236-039dff25ab3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h861F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6B19;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #913 8685390d-efe7-4a58-a592-0a50ffd516f4)");
unit.assert_eq16(16'h861F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #913 f23c6a82-f56f-4aae-90da-09a8b6bffc09)");
unit.assert_eq16(16'h6B19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #913 48d834fd-528f-41c5-bb94-264770497339)");
unit.assert_eq16(16'h0E61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #913 9fbd4811-ea9c-4864-851b-d8436bb68782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 be98efa4-a5b0-451f-bf8a-da8ad8ae6188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 4acc7e42-4aa9-4b68-9df3-112dd3a4345e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 bfb696ef-476b-4410-b176-756bc304909d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 ded9704c-485a-4b69-81d9-7334c94db4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 3ac0827b-9794-4240-b618-e23d6487714a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 04b52afe-ab6d-4bdb-aaec-230b196c6de1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA0FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE59E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #914 dde1c686-b8f7-49f5-ab8e-1fda83c9cdc8)");
unit.assert_eq16(16'hA0FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #914 8085ae39-5ee9-4621-917f-d279ef931d79)");
unit.assert_eq16(16'hE59E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #914 66655925-b205-4711-bbea-60a1988e8c81)");
unit.assert_eq16(16'h06AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #914 58514790-a6fc-4506-9863-548dda101e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 045328e0-fcda-42fc-ac26-5c3100ef3e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 711443f0-68f6-414b-849a-aeeb6ba411da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 0dd97e28-7c9e-4029-812f-1f769aa9f651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 0fe25240-e332-4917-9d22-f2e7120909bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 08212bd0-08ca-4a10-9770-df4f6853c198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 52a5336b-4e79-4186-8fd2-e0e4abed73bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEEE0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9A86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #915 0294b7c1-8994-46a6-830c-4461f1e7ffd4)");
unit.assert_eq16(16'hEEE0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #915 ca340cf8-141f-45b6-b75f-338c1a582a03)");
unit.assert_eq16(16'h9A86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #915 6d6f1737-099d-45ef-b4b3-171df4aad090)");
unit.assert_eq16(16'h0378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #915 038fdbf6-89b6-4f74-aa0e-bd3241e2afee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 14cb1287-de9c-43a1-923f-0ba99e685293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 16aedaf7-2591-41b7-86a4-3cf4ebb45d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 2240b1ad-eef5-42f0-959d-6131b22d3088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 aef8442f-d88f-4463-9804-370ec71d4e85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 d8f77233-ad02-4aef-917b-5436790fde27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 bce90025-91c0-430d-9abf-4873f935cce1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2354;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0F54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #916 be841fa7-1fd6-4b49-8143-dba03e3f8d61)");
unit.assert_eq16(16'h2354, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #916 fb9c7d98-2dab-475d-ad69-62abfff88e46)");
unit.assert_eq16(16'h0F54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #916 1550a6cc-9b51-4017-a8a0-e51528e1bc8b)");
unit.assert_eq16(16'h06A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #916 67f0aa17-7231-4659-a194-b8f691ca819d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 d7306037-21d9-4808-9fcf-798dbe3d97f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 4d135563-cf6b-486c-b7da-ba8090585423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 636fc4cc-99cd-445e-a6f5-18f2e101fecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 b8776c6f-6cde-4892-82d1-4844413309a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 83d9bb06-3047-417e-b8c9-20571c3c07b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 13a772c5-b650-4c32-9982-160ff8980fe2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0B09;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6635;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #917 698c5d1d-7848-474a-b970-0f530ed14add)");
unit.assert_eq16(16'h0B09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #917 b404c30b-8b1a-4d58-9ea4-3640f0efd904)");
unit.assert_eq16(16'h6635, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #917 5dd5724e-6469-44f9-ae28-fa0d646d23e2)");
unit.assert_eq16(16'h03A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #917 1cc578f3-ec2a-4fae-83fe-6450108219af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 8246f736-71d9-4b80-8ff3-c2222beae357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 9a5b3fb3-dfb7-495c-8f4e-9a6280f5c3b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 bf4d9776-af30-402f-9835-03065f5e35b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 b5aa35f4-4221-49f7-bf80-c777f1f737da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 e2c5e97f-8322-4c34-b03c-15bd7b755f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 53dbd7ee-dbca-4691-88b9-ad523a07d569)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D70;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h407B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #918 d825c9e8-9110-45fc-859a-67c6d5a10a5c)");
unit.assert_eq16(16'h5D70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #918 6cec219e-2e24-457f-a694-5dee11f40bb3)");
unit.assert_eq16(16'h407B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #918 65b985ae-f180-4d26-904d-8120fed93c5c)");
unit.assert_eq16(16'h0A17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #918 5a7f9b9d-fb41-46ee-bd01-808092d41439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 717b74f3-7aa6-4834-b019-4e65db8537e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 15a793b5-7d37-452f-a289-39c062ffb309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 d541f5a7-efe4-447e-a736-97e33047900e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 417cae5e-b193-4631-9e47-beaac36f45b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 4bc09a90-3016-49e7-9aa9-9c7d2e2feb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 1bba6b8f-05d6-4720-9fb5-c917c35d3f9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h05F3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6C0D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #919 d61241b1-8012-4835-a732-1dcaaa7bff13)");
unit.assert_eq16(16'h05F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #919 f7498ba9-5b90-4434-ad38-72f14e3c31c9)");
unit.assert_eq16(16'h6C0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #919 eeb51a9d-b4d5-45d6-8269-421558471efb)");
unit.assert_eq16(16'h0B34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #919 573a0440-12e0-4f4d-981e-8e4687d47585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 d46fd43f-3c05-409d-98f2-83fc10ba13cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 c33948cc-ff4f-43b5-bf5b-93a06ec5556e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 1286c966-0006-4ce6-8ce1-e55bdfe492a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 d05b81c1-0273-4bb4-a0ab-c56fed7366c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 2a5b275f-5857-4635-969d-8a53ed5cc84b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 b718b280-eb09-431d-81be-db8ef6117ae0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE3D4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hCE08;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #920 f9a8334a-0b1a-465c-af22-e6e154c6b3c1)");
unit.assert_eq16(16'hE3D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #920 a662bf60-7d99-4898-ab4d-535a7297184c)");
unit.assert_eq16(16'hCE08, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #920 a9ba9d44-1852-4de9-a0d5-27ac1c0663b7)");
unit.assert_eq16(16'h09B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #920 c090cace-386c-4eba-b843-e75ead43df4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 f4a2e4a7-b417-4486-ba28-793797569c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 418a0910-b4b2-47ee-bb08-9e19f36f7c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 a649d805-e34c-4356-98fe-15de8a8e4c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 6acd5b30-7a96-461e-9fc0-ab4a5717ccf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 30f9c8b2-1016-4c1c-842e-7b7426ebd2ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 152afc97-ba19-48ed-8b01-7872b563c3d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5D07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB876;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #921 ccf64cf9-4dd3-4630-a89c-250dbe6a9f45)");
unit.assert_eq16(16'h5D07, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #921 43dfc1c6-fc15-4625-9d0c-f879c43cf090)");
unit.assert_eq16(16'hB876, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #921 67dcc105-55b0-468c-9268-dd56906d437d)");
unit.assert_eq16(16'h0C4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #921 499aab4a-d0d0-42c7-9a6f-88f49feef40d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 255767f3-fd55-40d8-be06-ad24b56d018c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 3f8f9387-82f1-477b-b9b5-1d58c586022a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 20c76d3b-9dd2-44d9-82fe-55635108a9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 3dc95eb9-f742-4e82-8ee4-c0709ab09d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 ca30ccba-38e7-41c9-af68-f25448b8edc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 dca0ac4a-8f72-4057-a372-5e9aa16991e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h396A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7FC9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #922 0c0447fb-2909-4253-8a69-1c7c4600100a)");
unit.assert_eq16(16'h396A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #922 0f886b13-bf58-48db-9492-4494a25ba20c)");
unit.assert_eq16(16'h7FC9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #922 ee3efff3-5ffa-4de5-846a-6fb522a2273c)");
unit.assert_eq16(16'h04C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #922 12d5a8e5-625f-426a-85cf-832c4b35feff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 429768ed-37ae-4066-ab82-d787401cce37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 27b92936-0854-4b70-8f9a-98482d509c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 c033071d-42ee-40be-b8c2-a2064fe0a0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 5dbcd031-d2b7-4d25-a665-242dd1fadc8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 81341568-d9a7-47e5-844f-0a55cc6c1c29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 3dd3b48f-1b3b-45e5-be82-564036467851)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5495;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB1CC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #923 1b30489b-ec13-47d5-b4c9-c9d88694f7f0)");
unit.assert_eq16(16'h5495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #923 59d40562-14b3-4583-b61a-e9c98e74f575)");
unit.assert_eq16(16'hB1CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #923 8f5190dc-9874-46ea-830c-b603a24143d7)");
unit.assert_eq16(16'h06DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #923 0c2283f4-599b-4350-9816-724fd7ad05c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 439a2f9c-fa5b-4b37-b931-fbe49425611a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 dcd83038-f92f-430a-a2ed-0537586724be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 66dd912b-cfb5-4be1-ab8a-2ae6cf9c0d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 6e2b766d-303b-4198-bc79-4a017e1298e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 cbde61df-d7bb-4ab9-a464-91fa1fe41ac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 e65947f6-de6a-4ee5-9c0a-df326b33d09c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7663;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h39C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #924 9b78ad12-c58e-4945-9560-8643cdea7997)");
unit.assert_eq16(16'h7663, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #924 7f5d24cf-a838-47ac-89c2-0ed02e837370)");
unit.assert_eq16(16'h39C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #924 6528d8ec-82b3-4c9a-bfd0-b026c34e1844)");
unit.assert_eq16(16'h07DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #924 3d815f78-1a2f-4b74-a057-38b73d212b75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 0801b058-e0a6-4dd0-b90a-81d8922e79b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 fec4efd3-809d-4f5d-b811-159d36e56af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 ebd8cdb7-ae6e-45a1-9a5e-efe3b6ab8a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 3966e1fe-3315-4447-a5a9-1166e16f788d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 ae2541eb-3b82-490c-bb56-f5a4ebc1d32b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 67a0a627-ce4e-4229-8e81-c0acbb790476)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC596;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3F31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h051B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #925 3d0e5009-f699-4c4b-adbf-e6a1942ecbe8)");
unit.assert_eq16(16'hC596, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #925 fd66d952-3f42-4ae2-a372-c224421646fd)");
unit.assert_eq16(16'h3F31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #925 b568db02-fc84-4984-ac60-52ac4ecf6154)");
unit.assert_eq16(16'h051B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #925 ffa73115-8fa6-4675-a6af-4955ed08db96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 0a1d1384-61c2-497c-9449-0da85c8a4ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 1350c5ff-9bd6-4189-bf90-a3fd438773c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 1bce6b8b-745a-48bc-99c4-3c7fd45f4628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 3b1166ba-326c-4eba-adf7-364a75c29022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 7f9afd35-e6d3-46de-9c29-262f6f98220d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 528c56b0-ba31-45f4-88ae-7ec4646cb9aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBD5A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h025A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #926 ece5c4ad-0ee7-4817-8472-b8bb805c9b04)");
unit.assert_eq16(16'hBD5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #926 65400167-eaee-40cf-9af0-811a5300f30f)");
unit.assert_eq16(16'h025A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #926 35d4e895-95db-48d9-bd60-7dabf5ccf2bc)");
unit.assert_eq16(16'h01E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #926 287b2ae2-caf8-4d12-9f05-08e6d6ed4615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 c849eac7-2294-453d-a4f9-16b5650fadb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 1698d4fb-ddb3-4ccb-a5e0-4fc685e78afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 b506b784-ff99-4e95-8683-ea363678a45d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 fa9bb3fa-f804-48ad-84eb-2f028ad5d63c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 a24f1bb1-e1f8-4a33-9fb1-18b3e8a04fdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 72638bdd-4851-4163-9437-ddb6675800f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1DE1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8E4B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #927 36194a64-6123-4d52-99ec-c4cf51c5a6d4)");
unit.assert_eq16(16'h1DE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #927 68a8386d-0345-4029-9fc3-2c0480168030)");
unit.assert_eq16(16'h8E4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #927 8dcd7b60-3f8b-4f3e-bbd4-f10aaa8a54e5)");
unit.assert_eq16(16'h0D47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #927 d242fd01-d058-4c2f-82fa-3eb01cf682c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 46ce0de8-2c61-420f-a19d-a8070765961d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 1aebe6b6-7cea-4538-a7f8-06e033c1d4d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 2ed258dc-dcd0-41d1-98e5-74570c18948a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 9f1f6d39-635a-45bc-8f85-f284a066f7df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 6a532d7f-9c25-4948-83d0-63253bcb2bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 dac9a0a0-9fd1-4c44-a77f-1e9d0fa2c6fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h66A6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBD32;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0600;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #928 fe1c6ae1-89a0-4056-bd63-5fce2ab89fe0)");
unit.assert_eq16(16'h66A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #928 4603dee1-6a5c-4190-9ca5-12d58d7b3239)");
unit.assert_eq16(16'hBD32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #928 98aa7d91-942a-4770-8040-2ff2ea39a8e4)");
unit.assert_eq16(16'h0600, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #928 84730342-70e0-475e-8dcd-c5b23d78382b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 b1665682-e1f4-420f-99ec-20fd313dd439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 8220a081-0c24-46da-ae1f-7bfd55766f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 46a553d2-bc4a-436b-afd8-2c02170653e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 d15bc2f7-8acb-472f-95e2-34202a999429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 df0e1dbc-f9b9-4c8a-96d2-f70d669532a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 f02bda5e-f4fa-4a27-9d7c-30ab47355fdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h43FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6213;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0707;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #929 73763bb9-a763-4b55-b3e8-3065b33b80fa)");
unit.assert_eq16(16'h43FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #929 a09657f1-5d18-4a80-b1e2-fd237a642164)");
unit.assert_eq16(16'h6213, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #929 9f2dfae5-266a-457b-9261-85c712d39573)");
unit.assert_eq16(16'h0707, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #929 7d01d1e7-5e28-43a9-ac65-c25b1b5c8ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 da74a621-7fe4-459f-b230-fafd4691007c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 d3acc0f5-0b5c-46cb-8243-47cb86ec9a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 563d615c-5d25-45cd-bef0-bacc986edef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 38352b54-6973-4caf-8bca-7a99dc88aa31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 cadd03c3-aee0-4f78-923d-885ca466c37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 5c53bd69-6705-4d15-9dd7-2674d355cdcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9E18;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9CF2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #930 3631cdb2-5123-4308-864f-b5f2b2e699c7)");
unit.assert_eq16(16'h9E18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #930 0fff43d6-392e-4e2f-8f98-9fef61b2c0cb)");
unit.assert_eq16(16'h9CF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #930 28c48455-0fb7-4a70-bbc9-bcf189fb23fa)");
unit.assert_eq16(16'h01E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #930 115e4878-1341-4547-9d47-19131804e4d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 3b7777b3-9c1f-4027-94c4-7880431e4977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 fc06b130-f00d-4777-81f9-50edcb0ba9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 3a39db94-7479-444c-883d-27500cb19df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 7dee2a01-4e3d-46ae-9dbb-0b4dcc473291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 592bb4eb-0347-4f54-b2dd-bbaa32a10b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 0f0fbcbc-2e64-4e83-a87c-f1b2d5e0ef17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h414F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7CAC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0550;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #931 941a6efd-96e3-4d50-9ca9-28c0d99a6b17)");
unit.assert_eq16(16'h414F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #931 17d8afef-2801-443f-a900-bbfb6856b246)");
unit.assert_eq16(16'h7CAC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #931 1e112cc4-ca2f-4e82-8b63-e4486fadd2eb)");
unit.assert_eq16(16'h0550, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #931 7810db56-43a1-43d1-a365-ad86587c00a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 a81f6205-7d96-47b3-859b-a25f07e90297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 a03c2735-05c7-4396-9450-45a4d7c03a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 7857302f-6880-4908-8576-3b463f2cdc24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 ec24c1a2-095f-4a99-aa43-c81440649716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 9ddb87cb-847c-4471-a6fe-940d942783ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 1f63df73-a6ce-4d4d-9e94-d2fd2571cca4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3575;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1C80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h006D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #932 d45e6585-fd5f-4350-b27d-11c5c22c03a4)");
unit.assert_eq16(16'h3575, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #932 91586cf1-9048-4e04-8f08-d143e1442e07)");
unit.assert_eq16(16'h1C80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #932 d76e2b4d-e443-4087-8990-87d1e172b3b4)");
unit.assert_eq16(16'h006D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #932 35c061e2-1ae9-44f2-9742-5b497e778226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 25bca91b-29d6-44b8-a9c5-6960ff3b5fca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 9e2e64ba-f98f-4484-9873-4e5de8d62f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 98042958-ebf9-4392-80a4-efa4b8e0efec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 f4b04d05-5946-4223-bad1-3c9ecfb4ac10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 f5753d03-441b-4825-9467-d367311b9443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 b1e28709-33dd-4f1f-b4da-5b8926e68a4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h812A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3AC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #933 87a21168-cafc-4e33-9e53-7d6b9590e143)");
unit.assert_eq16(16'h812A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #933 82c33c72-2c83-4f77-8311-c98c71d2a514)");
unit.assert_eq16(16'h3AC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #933 ba08fb1a-f91e-40ef-a9b5-be9e34d6ac29)");
unit.assert_eq16(16'h0D17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #933 f425e4d9-71c1-4d15-963c-2c0ac0140917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 fb4e2b47-52ec-464d-9087-5ab30e2dea29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 892d0d70-4728-4a0a-9d8a-ea3ce38cd275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 20dd4ef0-c40c-440e-9f25-418a0fa623fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 ce731aff-be15-4875-ba7b-4e86f7106eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 cd04a1b4-5567-461e-aeb1-05c70a4df91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 aa57d047-6ab1-4307-aa90-e142ca767591)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAB4F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h22AC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #934 0a012a0b-9320-4b16-b9c2-c1491b1d5c98)");
unit.assert_eq16(16'hAB4F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #934 40d483a8-2e67-4e25-9811-af1b4af4f8c2)");
unit.assert_eq16(16'h22AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #934 bd6abd86-794d-40ba-b509-882b4847a3d1)");
unit.assert_eq16(16'h0E63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #934 93a54191-1106-414e-952b-552ad5bbdd3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 816bf8f8-a913-4018-b3b5-f211c701ff96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 5f748585-3f93-4293-ac6a-0d943dd7c581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 17e31d2d-029f-459b-bd84-eccddf1e5594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 eb5ad4d9-ca33-4597-a3c0-7c695970363e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 a9a4d28a-4e78-4f05-bd0c-86f756ec10ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 cbea545b-128d-4148-9ed5-0bd980581101)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h91C7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB41E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #935 d37a9090-64f5-4080-af47-3a0a7f6b5ce8)");
unit.assert_eq16(16'h91C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #935 3cceeda6-a9f6-4bc0-9746-97ddf532ab16)");
unit.assert_eq16(16'hB41E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #935 fc4d00ba-ceba-4b6b-b800-668c5f4dfa4f)");
unit.assert_eq16(16'h0A28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #935 a5770f42-d766-448f-bbd3-60705fec94de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 ad83fc01-8a36-4475-bbbf-1610c3a1fb4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 ddb018c6-445c-4722-b25b-9c662d089885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 e7346bff-df71-4b84-9efc-3a099a42dbbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 51758a58-dc3e-4554-8a5d-9a82bea1aa71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 7f282276-79a8-476e-87b7-1353350f616e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 71a1853c-1155-4368-8d43-247a81dd2142)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7ADB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8419;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h053D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #936 19c2ea00-4650-438c-b5ab-cf3878e71b79)");
unit.assert_eq16(16'h7ADB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #936 43c89cda-2bf4-481f-b352-ffb553d77f77)");
unit.assert_eq16(16'h8419, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #936 3dc863c4-f0b6-4017-868f-e247912ea64a)");
unit.assert_eq16(16'h053D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #936 86dcde26-bebe-4a92-828a-8b041f313df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 b4032818-bb76-4f3b-8c31-d326a85d9fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 b56ed9d9-2d04-4a80-a356-3576c549a63f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 202349a9-485e-4013-a52b-ab5ed977f2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 83f6ab3a-a274-4b2a-bd28-95fb452bf292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 80eb728e-a08b-4152-bce8-3b7492e31b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 330fdb75-befb-436a-befc-6d5461338fc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAA78;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8694;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #937 55a59b4b-f526-4e22-8fb9-62dada37dbf9)");
unit.assert_eq16(16'hAA78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #937 8e8bd505-d02d-4ac5-9bc7-df30ebede486)");
unit.assert_eq16(16'h8694, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #937 0b7aed42-7cc4-48cc-9e66-8983e63dc40a)");
unit.assert_eq16(16'h0F0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #937 98d8c620-461a-4cab-9e19-006bc2e61a15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 d480eef4-53a6-4465-9936-048bef7dcf38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 69bb42a6-2913-486e-9694-3fa34f280712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 b0e0e19f-3860-4dee-9a37-16e9fd3dc173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 456ffe67-d22e-44e9-9b72-9879c5afe6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 3296b645-b0f5-407c-a2ed-84082dbae957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 29e20430-af7d-4d4f-817a-dc55eea6fb65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCEB7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0D6C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #938 7efad128-fa13-4506-b28e-12aff33da36f)");
unit.assert_eq16(16'hCEB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #938 f457a7e0-bfa0-4d99-8d40-e305d6b9a18f)");
unit.assert_eq16(16'h0D6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #938 0ade09ba-7334-4692-963f-9cccfc794a2e)");
unit.assert_eq16(16'h02ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #938 dea17eb4-2779-4b1f-acf6-c2e6c4defa2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 3bf34d97-bcbb-4107-b9fb-44a4bd39810f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 5dd4093d-53a1-4303-9640-d6aad7cf225c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 a0ce9623-09b7-4b87-a38f-a143c02241c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 3b2da5ec-6946-46c5-b672-fdf9245e112a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 5d54d5cc-498c-45d2-ab3a-8dd35f27f2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 7865e494-76a6-4d60-a626-267e720c3b59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8B5D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE910;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #939 00173548-2cd6-49b1-8052-502f5f9e95d3)");
unit.assert_eq16(16'h8B5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #939 6edbe2ef-bdce-4902-8016-558deb995264)");
unit.assert_eq16(16'hE910, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #939 82526fc0-d93f-4446-a099-a2ae5ff664a3)");
unit.assert_eq16(16'h0C5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #939 948d05d7-3c82-404b-96ac-4f2382bdfbc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 36a0d390-6a89-4d84-83c8-ebe3ce321e13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 ecc610b7-a908-456e-8a7a-90ecde7ae072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 82a3eae9-168b-4c1e-8036-a13593bba237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 6ea9f5d2-7bcb-4278-a553-4b2f86816a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 c34ba037-57a4-4a21-a999-cce1b47dd56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 c66787be-9800-48fc-a9b4-76acfe468c51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h572D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF117;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #940 73940487-0340-410e-a3e1-576fe57e351c)");
unit.assert_eq16(16'h572D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #940 434813c5-1b4a-407b-b806-3165c4f791a5)");
unit.assert_eq16(16'hF117, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #940 32a10497-13c5-4faf-aa2a-bd8dc870cc2b)");
unit.assert_eq16(16'h0C91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #940 f57b027b-e965-4acb-bb21-5ceca389227c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 7c2a0451-4670-4fe7-9596-865c8db5d5ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 b8d26b77-6464-4346-9845-c0d77e2d5abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 0aa48b79-186c-42e8-a985-af8dc6b0fd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 1bf793d4-9d14-41e3-b8e6-25b55fb7365a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 66227914-d5a1-4888-a04c-f06418c7607e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 be1625be-6b20-40dc-bcee-94a1ff69f10b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE5E8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC429;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0913;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #941 211425aa-cc14-413e-9f1b-42ddc5b6cdb8)");
unit.assert_eq16(16'hE5E8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #941 35e77328-7f8d-495c-98cc-b797b2d6f205)");
unit.assert_eq16(16'hC429, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #941 c89b20c0-b8c1-45a0-84ab-8f68d8279a25)");
unit.assert_eq16(16'h0913, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #941 538fd470-d030-42d2-923d-f6a1c5eb7a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 ff0ef303-3021-4c37-9a3b-ddbd452ae4d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 c674e15a-56cb-48d9-aea7-1ef69fa93074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 50f33afe-43f3-4e7b-a63b-684573edeb0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 44beafc7-4356-4693-9879-d65ec4d02054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 5ac48557-148b-40c4-8343-38a8b298b0b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 cc26c43b-754f-4db3-b649-46ed91b2ab6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8DE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA8C1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h074B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #942 ff2bb2a5-8494-4355-a5d3-cf67d53b1d24)");
unit.assert_eq16(16'h8DE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #942 f287bf98-c6a8-404b-b8a3-6bf1cac959fd)");
unit.assert_eq16(16'hA8C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #942 1bfdeb84-f832-46be-bd03-e5fc98b2396f)");
unit.assert_eq16(16'h074B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #942 40836b77-ad79-48cb-bd3d-12a37ed90ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 c2112c39-b94c-4de5-90be-44713aaff027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 5146a637-bff4-4cd9-82c4-a3b46a127901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 6e36cd50-46f0-4949-96d9-d466ec1e8fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 0fc7874d-d18c-4b15-ba5d-78ea36d83be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 eaee6603-9377-43cf-b7f4-d2d0a3ec4d79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 a9635619-bb3c-47b3-a791-1100c2da0042)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB78E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h470D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0036;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #943 dfbbf2a7-2b36-427f-a377-6ed301bd431a)");
unit.assert_eq16(16'hB78E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #943 5fea756e-6365-4f15-9039-0a50cfc742c2)");
unit.assert_eq16(16'h470D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #943 172ca0b2-eed7-4b13-8693-53f49404c674)");
unit.assert_eq16(16'h0036, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #943 71deadcb-85a0-47f0-96cb-746ce8eaa847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 b12d5496-d2df-4e79-8a5e-6dbd7dc9eb4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 25a8e8a1-bf39-4c50-b6aa-0e459a4ee2a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 bee15c1e-a87e-4540-8389-fa563a9740fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 410d655f-b09d-4edb-bd8b-57d985882d3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 6d102024-d057-4b8c-9491-d9e0445f4cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 63658cb5-1724-4641-be97-c81e7a09f133)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE1EF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62AA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #944 b98534e2-26e9-4963-8959-86f834b71891)");
unit.assert_eq16(16'hE1EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #944 a8710bc0-d3e8-43fc-ac80-3e15223e7cec)");
unit.assert_eq16(16'h62AA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #944 b70da899-26b6-42d2-8626-1274dd872ad0)");
unit.assert_eq16(16'h0B85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #944 d914ee09-1b40-4767-9dad-04a71b50381c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 77fa487b-3294-4591-8592-7f8db1ec58ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 d0c84a61-0211-445f-9204-ce9559f4ef5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 15ca13a5-8a5d-4fb4-b168-f0a555963a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 3cc52520-db1a-4b76-8bd7-ff3d77b94e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 23c4f103-68d5-4bad-afd6-3afc089df018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 75c6ada4-80bb-4ff7-b18c-ebf7d1ecc4af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2FD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC836;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #945 0ee4f20d-ed44-44b3-80ae-6e69d188329e)");
unit.assert_eq16(16'h2FD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #945 ca8c3313-ed44-47d6-ac90-03dd5636f299)");
unit.assert_eq16(16'hC836, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #945 62ee80bc-a77e-46b9-b17c-3e8a5c82b88e)");
unit.assert_eq16(16'h09E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #945 ae325f48-b99d-4130-9ca0-940a9ac759fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 a79bb991-eb4d-4a07-abe1-cc9558f24620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 e4f4f451-18ab-406d-99e0-23752447ffe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 2787c7a3-1ec1-4fdf-a5e6-9e0fb464a5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 91ea478d-9ccb-434f-b99e-8eae21937e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 e5afa2ee-414f-4ad1-89e2-9c15e84c9b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 2262a09d-0643-4fda-86be-76568558ed67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDA47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h94C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #946 1e7202de-db34-4841-9348-7ad77a34f697)");
unit.assert_eq16(16'hDA47, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #946 3f5a58e3-9a3d-4cd4-b043-ca34ee748753)");
unit.assert_eq16(16'h94C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #946 4eaea035-61bf-4036-ba3c-9af0c9909a20)");
unit.assert_eq16(16'h09FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #946 a23dfd51-dbc4-4dbc-832e-239d2a8d5d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 af55130d-6b8a-4676-a87e-ff4c73ffbbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 a3814dd9-34e3-4ad9-9394-2394ad1c0366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 8eaf8d5e-06e7-45b9-ab6b-ebf6491df357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 b1e1f731-ae8f-4241-a13a-dd3c7cc492ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 07a1a1be-732f-475a-b603-a4cde174af4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 a7512f04-0f08-4889-bb3c-a37a042959f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF004;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4F1A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #947 4fd8f730-ba2f-4995-853f-06dcd92cec76)");
unit.assert_eq16(16'hF004, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #947 38577c47-0b59-4f8e-8c43-fccc5c697d80)");
unit.assert_eq16(16'h4F1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #947 e61d68fb-6b65-48ca-ba50-ec805bdae380)");
unit.assert_eq16(16'h03E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #947 3b42dc2f-1a53-4fee-9bae-1ca3e320ee5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 35fe5c7e-3ecb-4bd2-ae1d-e862f9f98530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 0703ec54-2d6c-4cbc-a399-388545f42b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 cbe97da5-7cae-422e-9c7e-5f4ae8b16bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 13662bec-0f04-4db5-8e9d-4541fa911e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 cf442ef3-9c02-4bb4-8bb3-759e48f0f4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 cae41125-c464-4b82-b862-533574747bc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2026;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h002B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #948 1d257d05-f0a0-4abd-aa2f-5f2c7cb936a1)");
unit.assert_eq16(16'h2026, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #948 0aca7c24-1c92-4bdc-b39b-53bae11e37bb)");
unit.assert_eq16(16'h002B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #948 d717291f-0c91-436f-86fc-a96276436fad)");
unit.assert_eq16(16'h0184, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #948 72ac5e01-f8cb-4ae1-b807-dfe16576aeca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 2d4a7658-6803-4c8d-9572-91eb7410c8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 76dbdc94-2faa-40d7-b51f-c7dbb08e49dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 95820169-5380-46ec-a949-0468543c8f25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 f03a2df7-a366-468f-b3e1-08cc793503db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 263a727a-603c-451f-b785-408bd8588880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 816a0057-f72d-432e-9c03-b4f8f2a33a18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hCA29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E31;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #949 14b50a5b-2c34-4be4-9ca6-22979a682a2f)");
unit.assert_eq16(16'hCA29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #949 ab0e0d85-a90b-445d-a214-2d8feaf29404)");
unit.assert_eq16(16'h5E31, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #949 aa0c0718-97b7-4fcf-ad42-e07f39b09121)");
unit.assert_eq16(16'h0A61, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #949 36241bb3-4f3e-48f9-82ed-4bcb65c2f90e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 406ada4b-9f8c-4840-905d-6302cd0030e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 9e161fe8-358a-46e1-91b5-f88e77375d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 ca6a7e9e-7120-4ff6-b0c9-1d6aaca6b4ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 7269a3db-63b9-4701-9ff5-f07d1955cea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 51c2cd4e-5a1f-491c-984a-e24e17a7334b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 502b65b0-de46-4528-b139-65e7dd674b91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1FEA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8BE3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h048C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #950 14700b54-f6ab-4497-9dcc-6cef57492618)");
unit.assert_eq16(16'h1FEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #950 bbc89f50-0420-4fd3-bc75-0795f99adea1)");
unit.assert_eq16(16'h8BE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #950 8cdbaa81-ea4d-40ea-9f86-5a5a71141bce)");
unit.assert_eq16(16'h048C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #950 63b82ec0-25cc-4c09-805a-38dc7b6869a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 a45a9144-8a0f-44d3-ae2d-696a9c168e08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 5e447a79-4e62-4b0a-ac76-e34271d3a8e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 815d297c-b901-4ed9-93b8-bc7f2e7f8dd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 0b68755f-0df8-436c-b4fa-1c6b0deb9c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 5ce6c1c0-139d-4e9e-b78a-e60cb0f1469b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 595c47b5-7381-4af4-ac18-d022a344811b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7BBF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBC6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #951 215fae83-0ae8-4301-af18-19840505b37d)");
unit.assert_eq16(16'h7BBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #951 a0c7c1ac-b596-4582-ab2a-a68bc3b29f27)");
unit.assert_eq16(16'hBC6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #951 8a71610f-7471-4747-bd78-3bd7dbdab476)");
unit.assert_eq16(16'h0CFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #951 054ab939-440e-45ad-a292-a69238ef29a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 5d5e0381-4cd5-463a-ad2b-d2adb4662407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 a2040081-9c69-458a-9375-39c1c4e76522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 942e97d8-c2bb-46ea-8adf-a244db9e7fe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 0ae702ae-5542-44c1-94f3-4d329906fae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 c8475d0c-5405-480b-a4da-38eaf4512531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 218a8dd8-a03a-4088-97a1-30171d667cc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72B9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA930;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #952 01666b1e-990b-45b4-83a2-aa8fc423d869)");
unit.assert_eq16(16'h72B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #952 c2732453-17f7-4eea-9582-b17f677a5018)");
unit.assert_eq16(16'hA930, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #952 4b0ad763-0f2c-4076-a075-c1a7dba2f19e)");
unit.assert_eq16(16'h0AA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #952 10c4e932-a878-4653-b292-95b589a42477)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 b65ef7ec-8741-4a34-a3fb-5594e5fc9f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 aa5d8178-8992-4b73-be9d-890aab967c9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 1747904d-aed9-4ee7-a5c5-0e60bf000252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 4c388d16-7fc2-488b-bc20-728a7e6df0b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 f21cbb12-2228-4eff-b18b-cc5f5e6580f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 b1badc2f-dc72-4100-9586-bb6953245a82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h315E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF193;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0190;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #953 dadb4af9-3d83-4fb2-9465-6eec62cc4777)");
unit.assert_eq16(16'h315E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #953 ae854d47-2b30-4a4c-8774-1a97d962d295)");
unit.assert_eq16(16'hF193, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #953 2b69baa8-e627-49e0-8d48-ce07826b21d7)");
unit.assert_eq16(16'h0190, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #953 4e6fab2e-592c-4c4a-8ada-c5c8e7457aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 0452f7a3-9ff2-40ed-a4cd-0b2fe34b4e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 6ff8f965-c364-4a54-b406-0a2ef0f96cae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 abe98962-7e57-4b25-a6c2-6f13713df007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 a03a8ec8-9bc0-434f-b664-c8b616b39d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 c34205f3-b2d1-4433-ab9e-62f8465572ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 6e926ff6-351c-4102-bf79-7b32e7f4d7e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h70FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD2F5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #954 d1cdf2d6-9ab9-483d-87a5-42c34b0afb9b)");
unit.assert_eq16(16'h70FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #954 a103e2a4-d175-4495-ba17-a8a8c6e12172)");
unit.assert_eq16(16'hD2F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #954 3fef7a77-f592-4608-91a5-ed69112d3c54)");
unit.assert_eq16(16'h0EE2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #954 53a1f5cd-e650-499e-815d-154c10392629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 36934bf6-159e-4ec9-854a-bd00d33a0db3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 e26f0a1c-fc33-4da8-a041-15626ec4c3ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 0c3c917b-5e75-4563-af97-d6e176132ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 137bbb57-a724-4678-9ee2-2cf36d6e979c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 eebf109a-eaf4-4154-b5dc-56b8ceb8ce17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 27432468-a099-4cfd-ae00-305341dd649e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6B23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7DB8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #955 d8ec5faf-1bd0-4996-932d-6c7e8437aea2)");
unit.assert_eq16(16'h6B23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #955 951311ed-936c-452b-8a78-3bd8501e0d39)");
unit.assert_eq16(16'h7DB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #955 f229f283-b64b-453f-be4c-b2df44fbd997)");
unit.assert_eq16(16'h0C22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #955 d062bc51-c19d-4d53-b8ab-86ab42f668ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 f8a4871d-35fd-4bd8-89cd-30bebbdd3e53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 5181761b-448d-4c69-8d37-dff3535243f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 8137dbb5-cc85-42bb-bc77-6a255f6c5e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 942319c8-af0f-47e3-bb78-d712c2632c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 1327013b-cbb7-4272-85cb-484d70abdf43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 0ad5eec5-c262-4932-adb9-d17e61ba9029)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h68B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC1BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #956 7ce79c76-ae44-438d-83b3-c5e3ab78ecde)");
unit.assert_eq16(16'h68B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #956 e8b85689-27bd-4852-803a-6d32f7f28c38)");
unit.assert_eq16(16'hC1BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #956 e6bb9d9d-0422-4900-8a8e-f3996d4d8b03)");
unit.assert_eq16(16'h0A90, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #956 0f5538cc-e1f4-4808-89ba-0fcbefc1d259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 bad888db-b49f-4393-9427-83cde90e437f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 034d9836-bf5f-48da-91e4-b1f0c4a43d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 2adeb02d-0b46-45ed-bc5d-cf9e60710e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 8fc9dd2a-b6ec-44d1-8151-87994d3ad59b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 023d44f4-7e37-4e2a-9733-48f7079fbde8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 34056507-d521-47d1-95c7-8ed65905508e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hAD37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h809E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0992;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #957 75e601f3-394d-43df-a4ae-e542e9943435)");
unit.assert_eq16(16'hAD37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #957 db618d43-cbfa-462f-9b93-fd53e0344463)");
unit.assert_eq16(16'h809E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #957 a977990e-5f86-476e-935f-5b4910ecf22f)");
unit.assert_eq16(16'h0992, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #957 0c46e238-eb59-479f-a412-c1ae4d35e1f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 e84c5ecd-dee2-4e8d-ab37-b6bcb1adcbba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 14e68b10-587a-4bda-a646-1474390f51a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 be57f787-5d11-4967-ab54-93013f16e2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 9b9c28e9-3cd8-4476-a5de-b0e9a27ae219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 3f04b405-c401-4b73-a001-e5f035ef054e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 9e66fba3-fec3-4deb-9dd2-5526223a0e6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hDB3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3230;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #958 af46c3ea-b9d7-4316-9aed-49c4acbf9225)");
unit.assert_eq16(16'hDB3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #958 7768adff-8c35-450e-a643-80079f5220b6)");
unit.assert_eq16(16'h3230, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #958 83582af3-d63d-4957-8d7d-1ca658566e2c)");
unit.assert_eq16(16'h0A1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #958 6fc6e95a-612a-45ac-8ed5-50fa44fad7ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 50881f05-e2e9-46d6-b9be-8007f4ace32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 75bdf850-9b4f-4f4d-8275-33b86af7d99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 d0eef84e-a7e6-41e5-a1b3-74ebe92be461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 a9d426a2-b878-43db-9080-802e883d579d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 2375a758-2cab-42d4-807b-7a0fd4e02007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 65907049-92d1-4002-a84d-f7a268af5028)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hC9F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h2AA5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #959 8bc26b46-7e6d-4fd7-8415-1949aeaa8048)");
unit.assert_eq16(16'hC9F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #959 f77cead5-6607-49d5-9c97-25194b061c5d)");
unit.assert_eq16(16'h2AA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #959 1fcb2327-5b3f-4c6a-aa10-dd24d09588c3)");
unit.assert_eq16(16'h0A80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #959 d844de78-6a37-4011-85ff-7f0f26e1c53c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 01220d99-f26c-4031-a7b4-95fde78f57bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 d8d87ef0-d0a4-4b03-9d94-72cd5784bb0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 b881509b-884e-428f-82a9-b8011bf75660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 8582ab49-dfcc-4940-9300-20f507dbe5fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 4c9b1502-768b-42ff-8f8a-3fb161a5c360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 930c18a3-808c-4436-a495-3700dcae3e5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB98;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDF51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #960 80aa2b74-033b-4999-9723-5f680c389ef8)");
unit.assert_eq16(16'hBB98, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #960 bdf79a65-9ab8-4908-a253-c82ee9d2ce0f)");
unit.assert_eq16(16'hDF51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #960 1cb56466-b181-4233-afad-924ad277531b)");
unit.assert_eq16(16'h09E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #960 1404b1dc-0995-4dbb-9893-bdb43934a400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 068f2006-cc4b-448b-95a7-a243e844f66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 f9b3507d-ffa3-42dc-85f1-4affcc0d0ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 0607ffc1-cd06-435a-8d6d-1da646b5135d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 873206de-8a58-43d5-a144-332c93395b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 322cdb10-6d6c-4cca-acff-cd1ea92add92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 1c20cb5a-accc-42f1-93d1-9535372b9b14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE11A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBA0A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #961 1259ccce-e376-46b5-be86-278edccf01a7)");
unit.assert_eq16(16'hE11A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #961 980d4b35-fdf7-443d-b6cb-b73be98be919)");
unit.assert_eq16(16'hBA0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #961 07151d29-0851-4243-bf60-e81197727933)");
unit.assert_eq16(16'h04FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #961 913cef92-d592-471a-b5ea-8f0ec576a76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 a8e8febe-54ff-4792-8dcd-66279ad06284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 df40575d-09dc-4053-add6-2e3cfd8a4769)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 3b1610dd-5ac0-4703-a895-8de555ef035e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 46693e35-0a1a-4deb-bf86-1b2e15423f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 dd07878f-0598-416a-b07d-049ca897b82f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 18b8df56-d41c-4574-ab9d-aec0ef5c5762)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE194;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7229;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h049A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #962 17d808b5-3794-420e-b167-d9a7f52055b3)");
unit.assert_eq16(16'hE194, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #962 4d46e7b5-aa11-4b6e-b18c-16ef27bea3cd)");
unit.assert_eq16(16'h7229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #962 58fe3f7e-ff7f-4ba6-b261-560f394cbd38)");
unit.assert_eq16(16'h049A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #962 186287ea-a465-4d68-9aef-10cc0dbb200d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 4e8a7b9f-3420-4fd3-8b25-bf95cd31a923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 f2c5e288-17e9-4949-8b88-4d9ed08d4421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 1e7aecd3-810c-4155-9ec6-b8330b953f42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 03a16568-d722-4135-9ea5-3f4f7456f01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 732c9b7e-c1fb-425c-94cd-d4c1216142ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 48f7d27b-dddd-494d-ab32-414900721f50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6ED;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h947A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0679;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #963 8c676120-0990-4b1f-b418-015cbfe88322)");
unit.assert_eq16(16'hD6ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #963 d5f4d7be-8c15-4776-9fb9-1420cd41ee12)");
unit.assert_eq16(16'h947A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #963 e50472a7-0515-4283-9f7f-ba608fef995c)");
unit.assert_eq16(16'h0679, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #963 ce4fd11b-cb3d-4b23-bbf3-eaa11eaa23a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 d7fc0343-ae17-45a2-8c6e-fe16376c5bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 1469e469-45b2-44ba-8eff-18d48562a3ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 37c66f04-eeff-473e-9662-d69339e26582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 996d7981-60d1-477f-bfed-7aac67797a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 a962241f-9b77-47d3-a823-b6ea718fce7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 d035269c-903a-4942-ac8c-713edc5ba0ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD6DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h41FD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #964 51e40f52-732d-4b62-9d41-b2260d6088bf)");
unit.assert_eq16(16'hD6DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #964 0e1015d7-3f80-499b-b426-6f9d00bf2af5)");
unit.assert_eq16(16'h41FD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #964 2e14a924-47d4-40a1-8ff3-acb4b9079db7)");
unit.assert_eq16(16'h0255, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #964 8c2afa1c-122e-49ae-aa38-0a5d2976f41e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 1c8412e3-d990-4412-b011-7af7ac48c7b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 524c3aa5-6d7f-49ac-8432-63dd16f76ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 6aa3f09d-4705-4559-ba2f-b06b54b550b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 2de03638-0809-4041-9944-eb3a52b45a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 0f34d5ff-ffab-47fe-a6cd-f780ff1ffcef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 5595005c-711f-4591-a1a3-4365fe77a86f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE940;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDA0E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #965 c31b5b09-7549-4186-83c9-1db21808b8f1)");
unit.assert_eq16(16'hE940, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #965 019006b8-be2d-4ed9-b2a7-140eaf32d946)");
unit.assert_eq16(16'hDA0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #965 c2b4f47a-1f5b-44e9-8310-0ab5c3d1ba36)");
unit.assert_eq16(16'h08BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #965 7db35438-467c-41ed-b33f-442c74b49d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 7bb6e712-ca05-4c11-bdb1-54bdc482e7dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 95a8c207-a662-4a81-a6cb-918ded491bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 0466a3dc-4c75-4181-88f1-4e49ea15f1bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 f6c09211-057b-4db2-a36f-54f4ddd8998c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 721b61f1-68b1-48a8-bac4-5587eff18451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 484c9c9c-8d8e-4bc8-9238-31472af5022b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE6D7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE0AD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0956;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #966 c8b088d0-f319-4d7b-8935-a27a2d7c89e0)");
unit.assert_eq16(16'hE6D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #966 0a730138-06f1-447e-8156-17931f18d1ee)");
unit.assert_eq16(16'hE0AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #966 4056720d-8c59-4897-98c4-65831e3599c9)");
unit.assert_eq16(16'h0956, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #966 d838d20a-e35b-403c-85bf-57e41798ba8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 8f611f87-e2d5-4307-88ca-d43ccaf0a853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 8692f985-c59c-4ed0-9ade-fe1ac0efc38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 0748f129-1045-4f2f-8bc8-ce2a25bddff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 de37d4c5-1dca-4507-a64a-33ee1347601c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 57bf700e-6dcf-43f8-9d9a-b294d9a7b2bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 235b2ca4-2b03-4a89-b9af-fbc5d7b26362)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h161E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h1F26;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0923;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #967 377c7ff1-adec-476c-9de0-7f70acdf6e8a)");
unit.assert_eq16(16'h161E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #967 ee4cc17b-9efb-44a2-a565-15562da4e1e9)");
unit.assert_eq16(16'h1F26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #967 4b7ad46e-549a-425d-a300-ef94b223cfa5)");
unit.assert_eq16(16'h0923, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #967 827c890a-9a0c-4ee8-9255-ff6d2d202438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 0f35acf6-1c3a-4813-8cc1-9c37aacb54cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 6e0727df-5347-4119-8256-618efce3367f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 b37c6703-8805-476f-85f1-62ed6571bd4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 cc4b1d3c-b28c-4c3c-8fef-bded6ff13b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 6c7d9040-0a32-47b6-a453-8647ad1a3da5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 45b204c2-420e-49fe-97c4-41cecf94bb38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE7C9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h689C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #968 b4e101c5-3519-4880-94fa-ddac9b2eece3)");
unit.assert_eq16(16'hE7C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #968 784ba4a9-1846-4ed2-b565-8f12e4927762)");
unit.assert_eq16(16'h689C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #968 f3732b1b-e361-4e69-b144-cbc97e3097af)");
unit.assert_eq16(16'h0BD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #968 b8b90535-7ab3-43cf-a468-820a4aa3f206)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 9ea97d7b-799b-4c4f-b5b0-ca7cd75e957f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 773bae4d-5c38-45da-8e29-a7a4a0267612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 788f52d7-dd2f-4c6b-8193-a804da03f1db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 94488957-734b-42fd-b0bf-05d8a0f6151b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 eb3dfb23-5f9e-4fc7-a2ca-a8c1bb3c4e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 36b6b6cf-9595-4a90-bcfb-a42995a22bdb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD32F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBCB6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h003D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #969 e0848558-4ae0-4f14-8e91-38df574e485d)");
unit.assert_eq16(16'hD32F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #969 2ccea63f-d39f-4fdc-9adc-0b6c2a7a1900)");
unit.assert_eq16(16'hBCB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #969 d7d7ea17-e83d-4dd5-b30d-238674fcf4be)");
unit.assert_eq16(16'h003D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #969 90831f82-74cf-4eef-9943-a866e91f5c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 23089a55-1490-4f81-931a-daf642ce8c25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 2833d53d-3f7e-4ec1-a9fb-1f854a00466c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 6128ff0d-1e11-4041-83b9-dafa82cf52f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 874f59f4-d63c-4d5e-9e59-6c04447fdc8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 15ada12c-3989-4996-b9cf-466f36495583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 966a70bb-8aab-479b-afb3-aba50804072a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4C66;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF7EB;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #970 b480ad59-ed78-479c-b269-c38bb81099e3)");
unit.assert_eq16(16'h4C66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #970 244699a3-f298-4fc9-ac71-fb6e2e16280f)");
unit.assert_eq16(16'hF7EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #970 87441d8e-56e9-447f-92df-0af532a107d8)");
unit.assert_eq16(16'h0EA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #970 d81ca0c9-826d-4af3-9119-8e6743079a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 b2595006-698f-4a4b-8726-0838fadbd64e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 eb3c167a-22b8-4e8c-a873-dcf393b91cbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 9bf7ea1b-7266-4c89-8104-87566bc2eac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 e4d14a3b-d8df-4584-a060-1ee44fe01873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 87516583-eaa7-49bb-8294-14310ec4ebe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 0ddc1d4a-b514-46ab-a939-99fc8ba56c28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h86C4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h132A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h053F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #971 c3dedb25-ed13-459c-970e-1cdcb87609cb)");
unit.assert_eq16(16'h86C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #971 461de3b4-1465-4f63-a21e-8e44613417a7)");
unit.assert_eq16(16'h132A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #971 0e12866a-3dce-4952-9cc7-2184fcca0586)");
unit.assert_eq16(16'h053F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #971 85a30ac7-30e7-43e5-baba-38d372e37658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 ff2fbaeb-6389-48ba-b5f5-c1eacd21a724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 9bdba950-be48-47e8-89c9-4cad3a424979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 ab8529f2-9d43-42b2-b2c7-10fca3e4f212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 1e2661c3-7be6-476a-a73a-6d4efc0f67b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 f5f41865-f29d-47f4-bf94-7357b968b40b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 e1ddc09f-237f-4792-afb9-dfecb590bc17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF8F7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h3842;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #972 d82c25f8-9ef4-43e3-8443-36ea9c7f9491)");
unit.assert_eq16(16'hF8F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #972 0075bfe4-5bc2-4f89-a6f0-413f46e61aeb)");
unit.assert_eq16(16'h3842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #972 26689fc2-3ecd-4030-bd06-74618fc45854)");
unit.assert_eq16(16'h0FCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #972 d3ff1759-7296-40dc-9367-b9c3133715a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 0f2f9e0b-6334-436b-b910-0a7cf62f813e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 99fda3e7-8776-4697-88d7-76947c00e3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 f609f209-be52-47aa-87a9-2c3b6b9c9430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 e53f01a8-5759-4c1a-96f8-7a54a9296d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 e36ffffc-0901-4e3b-89dd-416c3f4e6a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 b598e582-bfa1-46b6-9514-2b3bb0fb814b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0864;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h62FE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #973 72c3699e-f2de-4936-bd3d-75fa9c42304e)");
unit.assert_eq16(16'h0864, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #973 1827881e-de45-495b-bd40-0ebfa0a1fd85)");
unit.assert_eq16(16'h62FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #973 5c9bc098-417f-46c7-ba6f-2028f06ca9f7)");
unit.assert_eq16(16'h0BE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #973 50992e2b-e877-4997-b5f5-f9956de2739e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 524ec77a-6825-46e6-b82b-8e0cdc2500d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 dfa68c2c-947e-4ead-86c3-58b6d14e7938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 8b53b19f-2f75-4825-95e7-0638e5575ad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 c4e348ae-6311-46f2-988c-f3091e4b9cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 019014f3-7e91-4294-b38a-0012017858c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 6280a09d-b9b6-40db-b2b9-45e17eee38c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h70DD;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF506;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #974 3ad2219c-2951-4537-92df-796c3f3f9426)");
unit.assert_eq16(16'h70DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #974 7773c7c0-262a-4fb5-910f-e1652d00c451)");
unit.assert_eq16(16'hF506, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #974 0035df13-4bda-4f96-987a-2e329847044e)");
unit.assert_eq16(16'h08DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #974 33db6602-0c89-4173-b4d9-e6eac80e8162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 bebcdd58-1c26-4587-bb4f-936a8c37d1ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 d65dd43c-0947-49ae-8acc-99a7062ed59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 44595191-6241-406a-a2ed-e0b2bcab1b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 b2becdb9-953f-4647-98ec-a53c8d3ef84b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 2e0c653b-2bc4-40ca-8106-efa75d5d4730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 d16a5420-6de8-41d7-998b-cdea4e18684a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hEC37;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4AF8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #975 c37eff90-b875-4539-82b5-f2da11470620)");
unit.assert_eq16(16'hEC37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #975 58734dd5-698c-4115-ba49-507e66cfeec3)");
unit.assert_eq16(16'h4AF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #975 3c7150e2-7d07-4a5c-b0e9-7f9ab1505b71)");
unit.assert_eq16(16'h01A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #975 32d91b34-d1b4-4538-a43c-1922e8532414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 e0e7c65e-94fd-41a9-be1b-65bd09cdd8af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 a8bb0fe0-4335-4fae-b83a-1e190cc1ba16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 447e8556-4827-452e-97bf-57747592b0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 379a9052-39e8-4021-9c18-eaac1ce56c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 77d96ec3-cde9-41dc-bc91-92a55b084078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 0725333f-ec60-4191-bca2-2d65a4a432d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h4424;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA7D5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h05E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #976 ef4e4120-9ea5-456c-a0fb-3a23dda97f04)");
unit.assert_eq16(16'h4424, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #976 912ce6ab-a025-4368-bac3-1936a6522320)");
unit.assert_eq16(16'hA7D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #976 0d2ba4b7-1046-4435-a71a-7f6c102414a3)");
unit.assert_eq16(16'h05E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #976 a6435e34-4d29-4ec8-8fb2-056a11addc0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 b8b37b7f-78d3-416a-bc53-cbcb18032b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 ab656142-4018-4083-b8d1-83271ecfa4e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 390963dd-e2c3-4a24-ad21-a36c23b09b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 19940747-4730-48e9-9103-5a5c775fa3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 deea0ccf-13ea-433b-96ab-0843e4a0274b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 0ad3a1ee-f50f-4f71-8095-1d1b7d2e684b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5F7E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hACE8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #977 e33fea5f-6c51-4179-8546-283c646aa630)");
unit.assert_eq16(16'h5F7E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #977 5ec8bdc3-78e4-43c2-a4de-1fdec7ff00a5)");
unit.assert_eq16(16'hACE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #977 f26b6987-b2cd-4c1e-9777-8910ba795ed8)");
unit.assert_eq16(16'h0B38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #977 7ed70ebe-abec-47e0-9f8e-6b64afd30602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 007393c6-1a98-411f-80fb-8690a4780537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 f471ee53-3fe1-4ed6-9d8b-918848830313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 6a32d83e-dd9d-4ee4-bb2b-8cc03ec0e1cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 7c6c9f77-63b0-471c-a977-5eed7e024499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 c34cf6db-e068-469f-b789-6baa797a945e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 57f14381-71f2-4b14-8477-98fe724c8056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFE72;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC9E4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h034E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #978 57c031db-5966-44a5-abf5-7ea0feebcc87)");
unit.assert_eq16(16'hFE72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #978 ccbfef1a-afc1-4850-b5d4-9395dfcb7541)");
unit.assert_eq16(16'hC9E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #978 128ad09f-6d19-48df-9ff0-2c808fd78a6a)");
unit.assert_eq16(16'h034E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #978 e273852b-eb74-4b94-acc5-d776cc27c312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 3336706f-9cd0-450f-b5e4-56e866052abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 6366788c-feee-4c3f-a938-e05d39bb78d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 8ecd5012-2a0b-40f0-a1ff-7623d1a433b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 72b9ad03-e2c1-4511-80c2-f8105036688a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 e485361b-ac42-48a6-9963-8f39753c9c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 50b773b7-d842-4401-b27b-636c2be91171)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0BC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5E10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0875;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #979 e086b072-b5ae-4191-bc2e-08b1cd8aaae9)");
unit.assert_eq16(16'h0BC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #979 14a52744-faf1-4222-968b-0b38db4afb8f)");
unit.assert_eq16(16'h5E10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #979 d2be838c-9a09-4262-94ae-987450cb989f)");
unit.assert_eq16(16'h0875, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #979 f50b01eb-817e-4236-a30f-ed5d35ccc3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 a95a1a60-7f4d-49be-9dd2-92430f33bf4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 9903827e-e3ef-45a0-986e-f6158c7de640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 cf1e2f46-4494-4065-86d2-117a1cd19393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 246b4d00-5c13-414a-b928-8d3bc474a24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 656a9aa4-9d52-42f0-a3a9-0f78d0074266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 2bace77a-f776-4df5-8f22-3c64c80f5c86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h88B3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h454B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #980 96df676b-0879-4d6b-960f-d2f9df57754e)");
unit.assert_eq16(16'h88B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #980 671e78db-a1af-4d69-a783-eee24de5336c)");
unit.assert_eq16(16'h454B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #980 5953ef5d-56bf-4ecf-b9a7-e32f79dab549)");
unit.assert_eq16(16'h0A35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #980 f8fefd31-12ce-44b4-9d43-7a7fb1323b3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 c18307ab-2dce-495f-9d3d-bc212f15aa31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 9ab1bde8-f906-48f5-a8c2-a17f6c6fe534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 063e2d5e-fcb1-4311-a60f-d98c5c85ae6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 c72bc101-c39f-466e-8a3f-b67876a777ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 784c738b-df5a-4c78-9a61-4c9a831e84a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 128a550e-8dc8-4f8c-b38b-7531ee930156)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h11D8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAAD9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0382;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #981 d5c1d8c0-a3ab-4475-9549-caa22536329d)");
unit.assert_eq16(16'h11D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #981 0d1e91e5-5ed8-4aed-9f82-0323afddae83)");
unit.assert_eq16(16'hAAD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #981 902eb324-35e1-46e2-a624-59ab8c569e1e)");
unit.assert_eq16(16'h0382, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #981 0ac03c92-ce1a-4165-b5ea-8be8f11f69b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 e9df426d-6d1a-420b-9839-1dbac556bfa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 7c3fafec-4e43-43b4-8c62-25a9243b5f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 8ceca55b-92f4-4c05-b9aa-f6ce7935cbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 09e0973c-2b2a-4b5a-a9b6-3da3cdb1ab6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 5403c62b-a351-4d42-b20f-b99adb9b887b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 82060751-475b-4d76-87fe-1e1a9cc39967)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0130;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8376;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h08EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #982 cdb8264d-708d-4660-b63d-4ad707963a44)");
unit.assert_eq16(16'h0130, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #982 e3c71f21-7ceb-4ea7-8c5f-55f8a3c0b626)");
unit.assert_eq16(16'h8376, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #982 7ca48eed-4a6d-4324-af95-c0b5b7c56e9c)");
unit.assert_eq16(16'h08EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #982 96b39318-b711-41cd-8336-48724a432e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 ea3abd79-199d-46f9-b766-e6d926e0087f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 ac2c3735-659d-4c26-b623-c7b0e61ffe3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 a28be2d9-b8a0-4e61-9ac3-35890b1342ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 6dbe0062-62fb-475f-b034-16d73b64a3c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 2893f920-67de-4fa6-85e4-4fb3fa02bdb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 ab69ee7f-4ace-4746-b11a-a21695de3683)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD706;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB56D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #983 c62c2816-3cce-4c33-aca8-45148a4ae1e2)");
unit.assert_eq16(16'hD706, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #983 4b734831-3ada-4eee-8be0-14db453fb77c)");
unit.assert_eq16(16'hB56D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #983 9f80f2b7-f53f-49a3-9c2a-0a59cb2c8f02)");
unit.assert_eq16(16'h0BD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #983 a68ffe1d-829b-40d0-a022-467848b9960f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 9ffa57f0-66c4-4765-9df5-372a4187fc6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 5b30a225-16fe-4fe7-9733-13bdded050d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 a443b12a-dca5-46b9-8ad1-aea0432b28b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 b97a32a9-12f9-4f13-bc50-4f3f6232c4e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 994de869-ce0e-4582-8c0d-0933e891cde3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 b1229442-1564-4093-8741-8e90006d8a99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hE161;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7956;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0603;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #984 5f1e7336-efd5-4e34-9441-4a6e329389c7)");
unit.assert_eq16(16'hE161, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #984 c7cc345a-e7fd-4fbc-b5ff-4fcec5ec8c1a)");
unit.assert_eq16(16'h7956, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #984 89ec5e00-4c78-499f-8065-7142eea3d11b)");
unit.assert_eq16(16'h0603, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #984 11afc00a-2ee4-447e-a503-e7fa6fe27ab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 24e5a0fb-551b-4623-ad35-b95513ba3365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 fdd47e2a-5293-40f6-80db-906c927cdcc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 4b959637-5d6b-4a96-b8ee-0b96a30c4656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 ab915505-3466-42a5-baf7-0e9a7404a9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 a5357293-2cb0-4a4f-9819-615f0df8b74c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 2b8aa738-04ee-4d32-b973-337b35b7eda0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h72B1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hED00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #985 168c50b7-543d-45f7-bfcf-823bdeb3fbe8)");
unit.assert_eq16(16'h72B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #985 626ab5ad-262e-45f6-a631-1ba8641a64ed)");
unit.assert_eq16(16'hED00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #985 ff751fb4-bb9e-42b4-a49e-09f25e03da33)");
unit.assert_eq16(16'h0AEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #985 e4cef090-0e27-48d8-894c-ec325b55c65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 f06fed81-4381-410f-9722-044c4c5f11fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 d47db08d-17cb-4b3c-b8f3-8c0c45c16b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 1ffb71bd-5ff4-4970-b4db-195c3ecbf103)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 9060e9fc-d3a2-4860-90e5-804839567822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 d34680fb-42f2-4edd-9e74-0b3e172435d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 0c7a4900-382f-4a3e-beb9-7de8deabdaca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD09B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h974C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #986 637abae4-29ca-496c-ad37-92899532d71a)");
unit.assert_eq16(16'hD09B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #986 5835bea0-3f40-49bf-9bb6-63501fdd1bef)");
unit.assert_eq16(16'h974C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #986 97b19f3c-bfc8-4eab-b3b1-6aea99005f42)");
unit.assert_eq16(16'h01A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #986 ada8b7e6-df7d-47b7-9464-8c14a83bcb0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 387374ad-f889-41bd-acde-f212f1f152f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 846b0514-6b0e-45ee-8bc1-02fc92574f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 505ab248-440f-45cc-85a4-2591606a8916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 a19f9428-ed74-4d21-bd83-c1e332da6db5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 fc1a58dd-314c-4f7b-8a54-97601b0bedfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 e34c1def-f343-457d-a2cf-8d20094b2cba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3FD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBAE6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0321;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #987 0b5dad70-bf7b-4bc9-a8fb-c608871121fb)");
unit.assert_eq16(16'h3FD0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #987 59fdd34b-f4ff-476e-a26a-8691dce95ae6)");
unit.assert_eq16(16'hBAE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #987 1621de24-7d88-46fa-b5dd-2e2055ccb557)");
unit.assert_eq16(16'h0321, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #987 2bbc9bc7-e0cf-4da2-a086-d9b6cc8433ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 ac79dc6a-dfdb-429a-8d7d-5b39e0d26b1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 dc27f55d-53e3-42ae-8bca-86dec2eac431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 dc2f716a-ca16-45af-b224-7a67b17549bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 f99e3f37-cf3d-4485-9b70-c80172111694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 716c695b-61c2-4fbf-809d-58718e61ee7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 f8eb4420-782c-435e-8ff7-89de08b06aea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1EAE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7C29;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #988 e2b55c22-c72a-48fc-8fe3-c41e0d194411)");
unit.assert_eq16(16'h1EAE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #988 bc1b51f7-5ca9-4a05-b67c-9e0341e21d3c)");
unit.assert_eq16(16'h7C29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #988 137b3e1d-390a-4984-ab4a-27aa7f17f372)");
unit.assert_eq16(16'h0283, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #988 ea119bf7-1dc2-4b6e-82a9-c6e1554b3519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 4c51464e-d1e1-4bd7-a17e-5cd7230676dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 6c304cda-933b-46f3-8197-82537dd30e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 e702ad55-d461-41f9-9556-7a6473fb7700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 dfe97633-0bcd-40ab-bcae-d21f1897fb2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 37e50e0c-ddbd-416b-b794-9f8208a9f48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 43cbdc3f-299c-411e-a0e5-ce56e0114a34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF538;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h81C2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #989 a8018268-99f7-4f09-ac5c-c74d13740c8a)");
unit.assert_eq16(16'hF538, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #989 9a2e63ce-f2a6-45c7-b6e9-94224bf4998a)");
unit.assert_eq16(16'h81C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #989 d345319f-904a-4387-a4e9-60a696c186d8)");
unit.assert_eq16(16'h0DDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #989 889068e4-82d9-48f5-ab98-53ce879f54e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 ce6f3e4f-8198-44e9-9c0f-d6e77bba54cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 15b333a1-797f-4652-a673-dcef9476f1cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 fea253b7-05c2-4714-899d-87f6d1d7ac5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 65eaf0a3-d161-43dd-982e-0ba3fd7d3c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 d9102d4b-e05d-41fc-9260-780282e33b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 293686ae-5986-47b4-93e7-17a7aa20bd0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0BF5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6C3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0094;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #990 1964c145-6a9a-499e-8e3c-b787f3a40a3b)");
unit.assert_eq16(16'h0BF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #990 2a732257-c16a-4c68-9c2d-32ad22358485)");
unit.assert_eq16(16'hD6C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #990 cd56b771-f9f2-4aec-918f-8ee96e56b95f)");
unit.assert_eq16(16'h0094, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #990 7d41981f-368e-4329-a87f-deca002c7d66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 9c1c3601-0dfe-479c-813f-363d11d49cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 e84e6db6-09b7-440d-aca0-f9e6c395ff22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 7469a087-e54b-401a-8f34-75ee85af4f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 a7fcf52f-ef3c-47fa-9a70-ab557d9e1871)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 92ebc38d-2e48-4778-a474-4ef1cb7bfc95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 0b5b41e6-c8c0-425f-9872-325061213e0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB87B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hBDF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #991 23a4ad5b-9057-460e-b653-c2cd5dc9ef9a)");
unit.assert_eq16(16'hB87B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #991 6e574102-f520-4588-9c66-779868bc5ce5)");
unit.assert_eq16(16'hBDF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #991 4e74e447-3f31-4fbe-a8ae-c95d6bfc6643)");
unit.assert_eq16(16'h03EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #991 48450189-8402-48af-a5c1-3dc686e38e20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 562e26a1-065f-4d37-a874-9aec42a2d0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 e3d54a9c-1141-4a84-91e6-5300e8754def)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 6453b4b5-42c1-46f9-942b-c694e8612c01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 5241beec-0c5c-4377-b863-485040502ae4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 0a5dd9f9-de48-46c3-aa18-444ea5cb21ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 dd264cfb-5c70-49c4-bb58-857b200a0828)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hFB6D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDDE9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h032E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #992 f667d77a-f479-4e79-bd29-3247d8e7eea2)");
unit.assert_eq16(16'hFB6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #992 d053c1fd-3562-4251-a4a1-f2df20c21f54)");
unit.assert_eq16(16'hDDE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #992 ca7efa75-a13b-49c9-82f2-d5ca7e9e5e13)");
unit.assert_eq16(16'h032E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #992 474529f3-800d-412d-ae81-5b1ed753019f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 23323063-aef2-49ad-8503-55f92b5406d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 88e46136-468f-4c95-8806-cc7557f70d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 51d9741c-537b-4dbc-becb-d6dcb53db338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 8d3f2f63-f0b0-4db7-ba55-421d03ea5b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 d460a96c-f171-42aa-94c2-8ee14d57a558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 cd130bb9-c8b1-4eb9-8e6f-11a13a8bd24b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5E50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0BCC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0661;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #993 8b449e12-f7af-4837-b871-94988b83e3d9)");
unit.assert_eq16(16'h5E50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #993 cce10926-2884-4133-a7ce-eb61b1e67cfe)");
unit.assert_eq16(16'h0BCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #993 13d735bf-41a4-49cd-8746-8dd4e3b7706f)");
unit.assert_eq16(16'h0661, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #993 c240f214-8b4b-4a5e-a598-ce4430f63db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 0a1853d0-53f3-4c47-82cb-6164cc5f3041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 56ed690a-aa39-407d-8343-c2643afc364e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 36f994f4-9e16-4a47-ac08-157dbd3209f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 9be87acd-20d9-4db8-b32b-e0d7b8d205a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 25c90635-2dac-4e27-beba-443d5003489a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 6cf83924-19b2-4048-9f81-0c7b22176103)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA69C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h51EC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #994 e1f5623e-8298-427b-bd4e-8b27ec6c68a3)");
unit.assert_eq16(16'hA69C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #994 ca8962df-59e0-43a7-9101-50dbf6c5e471)");
unit.assert_eq16(16'h51EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #994 a7ac68ad-0ebe-4805-a613-33d13c2d393b)");
unit.assert_eq16(16'h0C63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #994 74de0e7b-08c9-4c61-972c-409455b68222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 674c25ce-19f8-4c02-9eab-750a18fb2ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 6ee8d22a-275b-4b84-a7ea-8e73f652be80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 91ba8f53-802a-468e-9e34-0d7a72792733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 230bcead-9a5d-4f9b-aca2-2ce03f6da03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 ebc5a76e-e786-4f9a-a4bf-5fcb1fb59f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 3b97dfcd-f8e3-478b-8088-25f148ca2cbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h2A60;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hF13F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #995 881a7031-ad28-45b9-9bcd-d1d38058fc65)");
unit.assert_eq16(16'h2A60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #995 9a77ffc3-e05f-4706-bc2e-ad83a73eca10)");
unit.assert_eq16(16'hF13F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #995 80f10844-366a-4dc7-ab50-792a50d83e91)");
unit.assert_eq16(16'h0AEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #995 8256cc39-95cf-47c3-ba08-37a8f002fd55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 11f62c82-6e5e-4e34-ab66-9fa2c49cecc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 24c325d3-92e0-490e-a60b-69ffaf856e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 931ded1c-33a6-4350-b0a0-a79586c92832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 885a718a-9e0a-425e-a942-be2b8ea41858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 175d9f4b-7151-4c26-8600-00db8b8d2ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 017e6f40-4a2a-4af9-9dc1-dbe17e3c9724)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0CF7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h493A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h06DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #996 56ae009e-008f-4e96-a7e0-01c637019a40)");
unit.assert_eq16(16'h0CF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #996 435dc25a-4dc0-4624-b654-ff3862732581)");
unit.assert_eq16(16'h493A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #996 de2fc6b6-9da1-4870-9cd0-8033e9481dc4)");
unit.assert_eq16(16'h06DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #996 afb3e675-3fec-4697-afb6-d55b7d808890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 f26e6896-d349-4b00-8176-d5a0cc4301c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 02186752-27e1-47b5-8932-ae502419a68c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 54a07802-0d74-4cfc-8f4e-ae92fc5a3b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 a47e789a-b8d8-4dc7-98c6-bf5ac9a242a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 36cf9449-906a-4d22-a728-dc85f8ea8667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 513e1467-d363-4716-ae3b-8ed54963e254)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h00FC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC5E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #997 d9a331cb-7033-4f4e-8cf8-d250cfe73c9f)");
unit.assert_eq16(16'h00FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #997 7cab1840-fee6-417c-ae69-4dd834414e87)");
unit.assert_eq16(16'hAC5E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #997 50fb742e-5af1-41f6-9353-f5c209c72474)");
unit.assert_eq16(16'h07B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #997 b09b7ce0-4d42-4d2a-84d5-332bf030a814)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 d73608bb-162d-477b-9383-a934c3462585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 0c18a78b-18cd-4fa2-8c30-dd11c92f7db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 f25bf7ff-f13a-4dce-8c65-8f0ab2bcf4d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 7ace6584-8eed-4d8b-ac13-417f4df60192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 17f59e34-b9c4-468c-83c8-47226b9af931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 92161e35-f7b5-4c5c-afa3-9624d9543e2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD110;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4D9C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #998 7ebbd9fb-9b5a-40ac-ae0d-0e1b50148cea)");
unit.assert_eq16(16'hD110, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #998 bf848306-fa03-4d20-9901-2109d64b094a)");
unit.assert_eq16(16'h4D9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #998 5139e7c6-b56c-4ce7-a389-1840dfb86fef)");
unit.assert_eq16(16'h0E6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #998 aa33f9b5-93aa-4264-83f1-7bb54f90c139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 d1387e20-92cc-4a5f-b1a2-d6e5e2a26c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 850b7769-7929-48e8-b765-5a958cb3d011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 0aa93767-3716-4482-9812-71c0b1c0497e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 01034b48-d81c-4224-b20a-9b80d8a8a0fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 3f51e8da-caf4-4385-95d6-92bfee5d8de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 06e64031-934c-4911-ae41-d9333afba4cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5961;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7946;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #999 ec19660a-b436-4916-b2c5-fb718ef726bc)");
unit.assert_eq16(16'h5961, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #999 5a1860a3-26ca-40b9-bb10-845a9609721e)");
unit.assert_eq16(16'h7946, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #999 09404e2b-44cb-4c39-b210-b41a5caa9ba9)");
unit.assert_eq16(16'h0FFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #999 1764ff9e-caf8-4e9d-b7cc-9dcee9024fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 0cae64df-34d6-4254-8270-f942226cf4fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 fa159b65-c738-4b4c-9bb0-a6280a9add6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 7476dbb8-8111-4761-94ff-d84421f0c8c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 874ba315-4b05-4925-a53b-13200468d45e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 f274af69-5aec-405f-9199-9866c8ad64f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 e91a4090-713f-4347-878c-7e7643eeff41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9C6B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD454;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1000 2a8d3209-a902-4c35-9b5b-ab5f18953229)");
unit.assert_eq16(16'h9C6B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1000 d831342b-5404-42ae-bb10-e12114f9a8a1)");
unit.assert_eq16(16'hD454, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1000 77d187fb-3d10-4d06-a950-2fc85932d1a9)");
unit.assert_eq16(16'h07B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1000 0d66cc55-492e-4403-b39a-77735130495d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 6444d601-5e1b-4155-8757-6ab2d64d1e38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 020daf32-6db3-4627-925e-8078ec7f2e68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 c4110641-491d-439a-9ce8-11d56e0699ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 fcafb917-b65a-4f8d-8720-3e9880c6a9be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 360c8ad0-682b-4b94-bf74-0fd690a11de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 4fd7236a-9b02-417f-99d6-fe6ae8062085)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1BDF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hDABE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0511;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1001 8dc03e44-e8ae-46e9-8d53-bc3f647fcbc9)");
unit.assert_eq16(16'h1BDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1001 11b7ed81-7b81-48e1-b214-4a64cd0c7c8c)");
unit.assert_eq16(16'hDABE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1001 0a399992-8d5b-47d4-9f67-86fd52967799)");
unit.assert_eq16(16'h0511, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1001 e4819d38-7219-422d-954e-3bcde022db33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 e00de115-3997-4916-9c76-9a45034ba64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 4f9042de-473b-4d39-b235-549e385876ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 751d5f9f-3c92-42da-a988-ee051ca9da48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 2d3560c0-e51d-48c7-b34b-857d179500a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 67a37f1a-c279-4856-942b-61516a2c6c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 8f0b4c21-0377-4026-89c0-c7b6ff675c46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hD4BE;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5A3F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h000C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1002 24745a4e-be4f-4b24-b263-afb01f4015ee)");
unit.assert_eq16(16'hD4BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1002 6273af0e-892d-4fa9-833f-fb06c2da2de5)");
unit.assert_eq16(16'h5A3F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1002 fdf2eb5e-0c13-4c23-af6f-fa8e65c7458d)");
unit.assert_eq16(16'h000C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1002 d30961d0-7595-434c-a216-36c40ee5ac6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 acabf4f5-758e-4947-9424-d6d90ce5a72b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 b1fe4499-c437-4a35-bb2f-0eb5697154ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 1784c04a-0c73-4bfe-9dca-e9ee0e410858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 ad57e12e-e117-4e24-9013-68ad1102bf5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 69250fce-c061-4548-8fe8-e2ee879955bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 ac937a50-de71-4066-adea-32b4934faac2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h3966;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hD6FA;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0136;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1003 bd6daea8-fde6-4acb-8a61-dfd0f9198489)");
unit.assert_eq16(16'h3966, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1003 7c951b46-2849-43ce-b8ca-77c7be96cc45)");
unit.assert_eq16(16'hD6FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1003 de0eadbf-3ae3-47d3-bb78-1397697368ce)");
unit.assert_eq16(16'h0136, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1003 b8c031e7-189a-411e-881f-6b02d9c6236a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 fe03493b-47f5-49aa-9483-7c161864e6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 418f86d4-3bf9-41c2-b784-1da7ad7a6cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 2202e973-75d1-4bc3-9ac7-2c953f4ef6b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 9f04d3a5-0ec0-4055-b5b5-e38cd73fd377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 b3923db1-3e31-400a-b050-a73577582cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 c1046560-b7d9-4d72-b77d-2edfed4063c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hF336;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE1B4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1004 81fd1bf0-66f8-4b1b-a81c-c6918ceb11b3)");
unit.assert_eq16(16'hF336, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1004 8256bd3b-1844-408e-8898-25fc2d23673b)");
unit.assert_eq16(16'hE1B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1004 1a4e66c3-f981-41e3-8276-c40649f7299e)");
unit.assert_eq16(16'h03E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1004 9c407eb9-cfed-45ab-af84-5a8486455a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 dc9beef1-f8ec-42b8-b1fc-fcbcd68105ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 79b52a5e-d4d0-4781-a585-0efb2e1fdcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 f55c3639-6e76-430f-8640-8cfb3f9578fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 5ffc8dfb-313b-4c26-ae5c-dcd7f19b3f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 29864c15-55db-4750-910c-6ff14a5b35d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 7f91d2a2-cb81-4d50-a265-47303d33a600)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h13DC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7AA2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1005 960171f4-5680-4b29-8c41-82efe67f6da7)");
unit.assert_eq16(16'h13DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1005 41f4c47d-9083-4eed-9150-ff6ec5e377a1)");
unit.assert_eq16(16'h7AA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1005 9e4c9626-4991-4b4b-9503-27ac3de1d56c)");
unit.assert_eq16(16'h02A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1005 a2f8fddf-9432-45ef-9fab-6883b6d564e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 4fbb673e-fb17-45a9-95ff-30270cf0b245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 d775c879-c838-4763-a9d8-29ebd16ecd0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 c59f504e-9f95-46db-b595-bb91f34519cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 7e57292c-d835-4049-9456-7eac6395c4e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 780bb878-fdee-44a0-bea4-19901984c80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 9fffc77a-38ff-4a50-9b30-b7d3d129ff8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0D7C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h171E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0242;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1006 3fb287d7-10a9-4bb4-8c04-cb1e3310a3c9)");
unit.assert_eq16(16'h0D7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1006 279c047b-b369-4b48-b18b-36492c0ce5ac)");
unit.assert_eq16(16'h171E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1006 33fd14e4-ddd9-4a16-b691-af73a9850923)");
unit.assert_eq16(16'h0242, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1006 3b5ef845-4791-40f1-a8da-f130f1e2a92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 c4e611f4-f3ba-4f0d-b2d4-166f69827054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 243b8a53-708d-4900-81b2-48104a31484d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 82facc27-5825-4da8-9a84-2c140e5854fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 e1367d57-6d5e-4fea-8f60-d72cc0404978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 02c094f6-1201-4273-ba3f-0733f4221346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 9cffd46a-bffc-428c-92b7-b80235682f6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hA415;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAC0C;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h052E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1007 2e5a108d-5bec-4397-a9a5-9f04cbdb431a)");
unit.assert_eq16(16'hA415, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1007 42205289-57d8-4ac3-82a5-f4e5b4c4b3f1)");
unit.assert_eq16(16'hAC0C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1007 2275afdc-0153-4ca6-9580-bcecd5367f3a)");
unit.assert_eq16(16'h052E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1007 832189d8-62dc-4aed-8c10-0f2f9162ceca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 139cc419-fd5b-4451-9472-c34fb1970739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 1343751a-99fc-4216-bf62-7643208fd525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 597b0b59-0407-4596-a006-cd2bc99b3acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 783b96c2-877b-4362-b5f5-96b01713a75a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 ce631203-2902-4f0a-a2d1-377701169265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 46017f55-d1c0-4f10-a05e-c52999a436bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBB8E;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hA97D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0997;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1008 68f853f7-11b6-49c0-a2bf-5fe52db2a524)");
unit.assert_eq16(16'hBB8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1008 edea039e-302c-4901-90a8-d7ae09baa3ec)");
unit.assert_eq16(16'hA97D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1008 8300e383-75c9-4c0e-8ff7-5f0b05208243)");
unit.assert_eq16(16'h0997, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1008 8e18e7d9-74fc-4079-a850-757d6a3003f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 f934a212-de3d-4eea-889f-0fb336e92aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 b284d3fd-9527-4818-90a1-b039390194f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 55e8799d-0a5e-4383-9f24-a269cf8ec764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 f322cd6a-da31-4145-8840-158edc4cd7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 9c4a39b0-4877-47c4-b7e7-43e7050599b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 b1fff1bb-8045-4877-925d-08a1cdd809d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h6206;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h8377;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h04AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1009 18301832-0779-4464-8df6-3ded1b2f602a)");
unit.assert_eq16(16'h6206, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1009 dc4a9a3e-25ad-4182-940f-32068fdf2a81)");
unit.assert_eq16(16'h8377, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1009 a841f2ca-6d93-480f-a41c-5e5bbc1063b3)");
unit.assert_eq16(16'h04AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1009 85e8fcfa-c603-47a7-92e6-76a6797c7b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 f42cde75-7a95-4bc7-8d71-6028388fd87d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 8b43b6c9-4a3f-4984-8cc5-91d09deabea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 c7c71604-b26a-42ed-a5d5-871ad0c0d623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 5baa5c5e-1197-4a8a-a9d4-475f38f74522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 e94ec73e-7f49-4cca-ad5c-174b4cd7acfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 f297d885-f484-4bce-bdfa-b46663d6b8f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h77BC;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h501B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1010 1facf5cb-b253-40d1-bf69-269eba08963b)");
unit.assert_eq16(16'h77BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1010 e71974f9-d47b-4c19-a616-89665b6375bf)");
unit.assert_eq16(16'h501B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1010 02feb6a4-bb8e-4c02-9921-b7fa4d2de21c)");
unit.assert_eq16(16'h03D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1010 3c043502-80d4-4fab-9821-c9886ae7a372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 8f1edbe1-3a9a-40b8-89bd-db0bc4ec60f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 c0dc53cf-762e-4e92-96c8-2b5df721cc50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 30e938eb-8662-48af-9d3a-54db1f62de1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 c7e0a275-97ca-47a4-8a05-6d70182bdf55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 b6542469-1b05-4ff7-abed-4a14926a848d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 98648f38-539b-443b-93ac-9006c07350e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hB670;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h7453;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1011 77ddcd0f-f3a1-455d-97af-f8ae98d7c866)");
unit.assert_eq16(16'hB670, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1011 77757117-d8ae-4b4b-8edf-9953e77c0c26)");
unit.assert_eq16(16'h7453, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1011 070419a3-ac8c-4bd7-9636-65620265049f)");
unit.assert_eq16(16'h09C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1011 03e6ad59-4500-4ecb-82e2-e40cdd8aa807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 b24f7d46-d15a-4e75-9679-d621a304fcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 275b19c8-6318-45fb-acca-48cf8bfd2f49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 5eb1c267-4481-402e-8f8c-a18e9fed6846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 1bd8f1b1-d288-44ee-935e-62b810115899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 804cb566-4448-4850-8b3d-14eb32eb55f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 e1eaa9f5-89da-473b-b5da-2f6cb91c81c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h8BD8;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hFA23;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h000D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1012 8c13fb38-966b-4f3a-9ef7-1a9fef65c68e)");
unit.assert_eq16(16'h8BD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1012 19e8d915-c301-4ef1-aed7-c22cc27aa67c)");
unit.assert_eq16(16'hFA23, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1012 b3f1cadb-ec37-4dc1-85dc-6c0a555374a7)");
unit.assert_eq16(16'h000D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1012 3baed359-dc59-4819-a0cf-fb5d4fbcedf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 c431f411-057b-4481-ba02-2248cba62b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 40b29b0d-7308-4282-802b-9e9c12bb6baf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 355adda1-d666-4bd3-b256-96b91091a52c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 71261604-4a0e-46b9-8ec7-7688f0dcb8c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 9ffaf3bc-1211-4c49-a3a5-8befa0dd5914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 e98b798f-be14-4fdc-bfa0-414cba6a49be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h216A;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h9F8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h081D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1013 045abf9c-9972-4db1-bd21-eec6e7075825)");
unit.assert_eq16(16'h216A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1013 3568af7d-0969-4370-806d-c94437c48d93)");
unit.assert_eq16(16'h9F8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1013 c3e8324c-bb02-4ae4-ab33-7b66746dfc98)");
unit.assert_eq16(16'h081D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1013 94b2f16b-2596-4a53-86ca-b88a45a6e3ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 49919067-bd88-4773-9753-816782b924d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 3258a25a-4b76-441d-aa53-58c52ebb0a64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 ec5881ae-8152-429f-ad50-b9ce87c3f1ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 1a350d34-c208-4f5f-b32d-576600ff86f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 aaba6d81-1e4b-4b90-99d7-4d02b25b6a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 2248ac62-f3c3-40ac-995b-4932df4851c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'hBE34;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h4E8B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1014 2b359284-8dd1-4215-8e19-c6b73beeb565)");
unit.assert_eq16(16'hBE34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1014 aafa1138-77bf-4d83-acbd-55a4adb173f9)");
unit.assert_eq16(16'h4E8B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1014 3fdfa444-94e7-405a-8d5a-a7b4f6dd6b97)");
unit.assert_eq16(16'h03D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1014 bd823e6c-b834-40ef-b48e-bf91018dcd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 83e40959-f477-47ba-a3b3-873d7c27a050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 c83ea79c-c26a-458b-b5b5-de2c1709119f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 b7da4401-7501-4220-bfa5-b66d91f94e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 6c113720-2d55-486d-9983-cbccd4e7962c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 88899b0d-5205-4a63-9331-3a423691dea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 dbc9a913-5265-49e7-9fad-e2e7ede0ac9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1AB4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h0720;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1015 2e404c76-c116-4491-8d92-94af5ebb8336)");
unit.assert_eq16(16'h1AB4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1015 7687766d-d27e-4543-b315-978e2bb5a6bf)");
unit.assert_eq16(16'h0720, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1015 7d836aef-13a6-4b12-891b-138a9da6f0ba)");
unit.assert_eq16(16'h0CF8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1015 c0d5a573-60b6-4fe6-a031-115a38a9404b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 78f90df2-1581-4e6c-a876-5e058a7160a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 5e8ef3e2-8e1c-48c5-acdb-4237fc84526c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 8842fbeb-1497-4e8f-b5e0-1cdb644f8b1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 57595c8b-6e9e-420f-a27a-d3786991d98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 a68bbae0-451a-40fa-affb-123ae1e30237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 e9595c38-566b-45bf-bf03-1693a5db73af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7945;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hE9E5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h07C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1016 42ca7739-3a73-47ab-b051-86af96077ed5)");
unit.assert_eq16(16'h7945, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1016 e85d2e83-7ff9-44ee-bb64-63a5529d32c8)");
unit.assert_eq16(16'hE9E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1016 715541d1-1a6d-43de-9047-1b339a864aba)");
unit.assert_eq16(16'h07C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1016 8342fe48-f365-43e9-aeb9-52a0f4efb81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 aee67296-dce2-4333-9de4-daf27c1457ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 173247ae-b68f-495f-a631-eb2669cc4dec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 e662376e-5744-40d4-84f0-323b95109846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 72a36b5f-252b-462b-ba34-00a5d2da174a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 f6a41360-37d8-40b9-9315-d135f8beebb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 125edf9b-773b-4d42-b9b9-fe8b894f80bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h0430;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hAE43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1017 c0149352-6d94-4d13-9b32-300262788b18)");
unit.assert_eq16(16'h0430, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1017 5f175526-ec0b-4886-a604-3ccf3239aadf)");
unit.assert_eq16(16'hAE43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1017 5ff251d6-4aae-405b-b243-3360e7491d43)");
unit.assert_eq16(16'h0D0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1017 190e5770-7db1-4ab6-944a-e716ee1993a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 ba609237-afde-48f6-ada8-f073417aeba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 2570cf6f-acb7-4da0-acda-37962c85f54f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 01e863a6-5e80-4579-9282-eac37a6c3412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 953dad76-f728-4075-9678-4f6fa0212788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 c226bc32-39f1-4232-b14e-2d1044abc5fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 26c3f4e8-493b-4a89-ae4e-4fef43fe7cb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h756F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h804B;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1018 84df2d09-dd61-4d81-a1fd-d006fbf34b14)");
unit.assert_eq16(16'h756F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1018 502c04cc-2bdc-419f-b136-ed686f42a71a)");
unit.assert_eq16(16'h804B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1018 7b274535-d80f-4fd9-aed7-726e1a695e48)");
unit.assert_eq16(16'h0F85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1018 b700a1e1-4525-4bb8-a077-c0ed4b3de90c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 30191648-fb9f-488f-b236-aff616c8022d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 5b471cbf-11b5-4512-b874-e14d20b09fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 83fd9f34-292e-4ec2-8c73-a5ab37b404c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 2451c043-b2c4-493d-bd64-69e386606b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 62e70690-51f9-467f-b161-034788d27240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 8c4c6a43-d332-45ec-9e30-a575ac092513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h7285;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5342;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1019 2a919350-027a-4d7f-8acf-6693d5ed1eeb)");
unit.assert_eq16(16'h7285, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1019 f5fc1f4a-d41e-4a68-b914-e4369abc3435)");
unit.assert_eq16(16'h5342, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1019 e4b8988c-24f5-403f-932e-d4488f53d445)");
unit.assert_eq16(16'h0CF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1019 adff797c-0eb0-4de3-905d-f8c440f03ab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 40d7db98-733e-430d-80cf-cf260592646f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 a4edbe89-3001-446e-9581-3d5f2ac30d28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 16975dfa-93ce-4741-9d57-c9b5df533125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 eec3661f-d604-4d84-b326-7e30f4bb9784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 77881e4d-dbc1-4a9e-8e7f-e684a9b8b379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 d4c07d1c-574c-4e3c-beb8-c65def22a3d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h5911;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h6AEF;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h089F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1020 78d673c3-239b-4cda-8d41-6b483164fa1a)");
unit.assert_eq16(16'h5911, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1020 abd47ef9-64ce-4006-8bce-815b320c134e)");
unit.assert_eq16(16'h6AEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1020 2cbb3c21-4df0-4b0d-8f01-17c9e04f756f)");
unit.assert_eq16(16'h089F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1020 f1ede39e-7cca-417d-9468-b47bd6197c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 e644f676-9e63-41f8-8ba3-cc1dfd762336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 2cee6129-68c2-4cf4-b989-ca2930a6e60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 496665a5-bc69-4104-8ac3-07980518f8e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 2f46c91e-d0a6-40ad-87df-cac2b2997ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 1dd823f7-33ed-49e7-b41d-1a0609fee547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 9943796b-601a-41b0-95a3-e6b1bb382cc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h01E9;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hB37D;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1021 73e23673-34ec-4cec-911d-71abd6d88a6c)");
unit.assert_eq16(16'h01E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1021 cc402bff-914d-454b-990d-ee7834c03a50)");
unit.assert_eq16(16'hB37D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1021 c9b59c3e-0b5c-4486-93bf-79cd1751acf8)");
unit.assert_eq16(16'h02C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1021 a911c9a9-2070-4319-badb-a889a230a713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 7a85b6fe-3f1d-475c-91da-477567ef3948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 a88e21cc-5fb0-4ab7-9f69-4a35e23375b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 14398b90-dfaa-4af3-b0ec-7dc197a5962b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 3fc1524d-5963-4d4b-8f91-96ce11c9b46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 32d329ab-f15d-47ba-b1e4-75b3d8dad051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 5cf3cd14-7dd6-41a5-a2ce-e518198f230f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h9375;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'h5FF6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0222;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1022 42408d9f-2555-40c0-bd81-872ac32dbb0d)");
unit.assert_eq16(16'h9375, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1022 7341e112-36f5-4368-814a-5dbfda4a55ef)");
unit.assert_eq16(16'h5FF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1022 b266c0e8-a9fb-453c-a228-c5c19c1f54b1)");
unit.assert_eq16(16'h0222, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1022 dd6ff8bd-d945-4a39-916d-933bf18967fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 47dfb96b-d2fc-4fc7-a2c4-96f3b155a5dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 32538433-20a9-4be6-ac07-5eccbfccac28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 6e5d2f51-0e1d-4a55-a382-97551226f415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 408789a0-7e3b-477b-b211-46fc6a7b1339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 969660b3-4701-442b-9aa0-f873860bd426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 78834053-561c-4b22-8862-f4ab03e94bc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c } = 16'h1A5F;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e } = 16'hC782;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h043D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1023 5eba4810-c48e-4350-9e36-a97095d80310)");
unit.assert_eq16(16'h1A5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.b, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.c },
"BC (Testcase #1023 da133722-1222-47ad-a4bc-15e4d6ec7d0a)");
unit.assert_eq16(16'hC782, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.d,  top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.e },
"DE (Testcase #1023 fa384508-1285-41fb-bc7c-03405c1282d3)");
unit.assert_eq16(16'h043D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1023 a97821b3-9ad2-4b47-a4ef-4d4fbd08a55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 588348e0-496c-4c3d-90fb-62e8b8fb4d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 e3ff7125-8983-4de6-9bc8-850ec147e5b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 62da30d8-2e59-4264-8a2e-1b5965a1463c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 d9adacb5-7f7c-47a0-a823-0ff3c499a228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 8fadc219-0a99-440b-bb87-a57c4088bf01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 e6a8f8a5-78ab-4329-b13b-28f03a2e7ae8)");

#(CLKPERIOD / 4);

unit.finish("ld8rhl ('LD r,(HL)')");
